<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing</name>
  </assembly>
  <members>
    <member name="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged">
      <summary>
              发生时的列表 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 修改对象。
            </summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>
              组件创建后立即发生。
            </summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>
              即将创建组件时发生。
            </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>
              发生时 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 调用方法之前打印文档的第一页。
            </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>
              打印完文档的最后一页时发生。
            </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>
              当需要为当前页打印的输出时发生。
            </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>
              紧跟在之前每个 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件。
            </summary>
    </member>
    <member name="F:System.Drawing.Color.Empty">
      <summary>
              表示颜色，它是 <see langword="null" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>
              <see cref="T:System.Drawing.Imaging.Encoder" /> 用色度表参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>
              <see cref="T:System.Drawing.Imaging.Encoder" /> 用颜色深度参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>
              <see cref="T:System.Drawing.Imaging.Encoder" /> 用压缩参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>
              表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 使用亮度表参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>
              获取 <see cref="T:System.Drawing.Imaging.Encoder" /> 用质量参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>
              表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 使用 render 方法参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>
              表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 使用保存的全局唯一标识符初始化的对象标志参数类别。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>
              表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 用扫描方法参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>
              表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 用转换参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>
              表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 使用版本参数类别的全局唯一标识符初始化的对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Point.Empty">
      <summary>
              表示 <see cref="T:System.Drawing.Point" /> 具有 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 值设置为零。
            </summary>
    </member>
    <member name="F:System.Drawing.PointF.Empty">
      <summary>
              表示的新实例 <see cref="T:System.Drawing.PointF" /> 类的成员数据未被初始化。
            </summary>
    </member>
    <member name="F:System.Drawing.Rectangle.Empty">
      <summary>
              表示其属性未被初始化的 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
    </member>
    <member name="F:System.Drawing.RectangleF.Empty">
      <summary>
              表示实例 <see cref="T:System.Drawing.RectangleF" /> 未初始化其成员的类。
            </summary>
    </member>
    <member name="F:System.Drawing.Size.Empty">
      <summary>
              获取 <see cref="T:System.Drawing.Size" /> 结构具有 <see cref="P:System.Drawing.Size.Height" /> 和 <see cref="P:System.Drawing.Size.Width" /> 值为 0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 具有 <see cref="P:System.Drawing.Size.Height" /> 和 <see cref="P:System.Drawing.Size.Width" /> 值为 0。
            </returns>
    </member>
    <member name="F:System.Drawing.SizeF.Empty">
      <summary>
              获取 <see cref="T:System.Drawing.SizeF" /> 结构具有 <see cref="P:System.Drawing.SizeF.Height" /> 和 <see cref="P:System.Drawing.SizeF.Width" /> 值为 0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SizeF" /> 结构具有 <see cref="P:System.Drawing.SizeF.Height" /> 和 <see cref="P:System.Drawing.SizeF.Width" /> 值为 0。
            </returns>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>
              一个 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 具有其小图像并设置为其大图像对象 <see langword="null" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类从指定的现有图像。
            </summary>
      <param name="original">
                从中创建新 <see cref="T:System.Drawing.Bitmap" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类从指定的现有图像，缩放到指定的大小。
            </summary>
      <param name="original">
                从中创建新 <see cref="T:System.Drawing.Bitmap" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="newSize">
                <see cref="T:System.Drawing.Size" /> 结构，它表示大小的新 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类从指定的现有图像，缩放到指定的大小。
            </summary>
      <param name="original">
                从中创建新 <see cref="T:System.Drawing.Bitmap" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="width">
                宽度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="height">
                高度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类具有指定大小。
            </summary>
      <param name="width">
                宽度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="height">
                高度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类具有指定大小，并使用指定的解决方法 <see cref="T:System.Drawing.Graphics" /> 对象。
            </summary>
      <param name="width">
                宽度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="height">
                高度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="g">
                <see cref="T:System.Drawing.Graphics" /> 对象，它指定为新的分辨率 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="g" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类，具有指定的大小和格式。
            </summary>
      <param name="width">
                宽度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="height">
                高度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="format">
                新的像素格式 <see cref="T:System.Drawing.Bitmap" />。
                 这必须指定一个值，开头 <paramref name="Format" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 未指定值，其名称不以开头 格式。
                   例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 将导致 <see cref="T:System.ArgumentException" />, ，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 将不会。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 用指定的大小、 像素格式和像素数据的类。
            </summary>
      <param name="width">
                宽度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="height">
                高度，以像素为单位，新的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="stride">
                指定两次一次扫描行的开头之间的字节偏移量的整数。
                 这通常 （但不是一定） 是像素格式 (例如，16 位 / 像素的 2) 中的字节数乘以位图的宽度。
                 传递给此参数的值必须是四的倍数...
              </param>
      <param name="format">
                新的像素格式 <see cref="T:System.Drawing.Bitmap" />。
                 这必须指定一个值，开头 <paramref name="Format" />。
              </param>
      <param name="scan0">
                指向包含像素数据的字节数组的指针。
              </param>
      <exception cref="T:System.ArgumentException">
                  一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 未指定值，其名称不以开头 格式。
                   例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 将导致 <see cref="T:System.ArgumentException" />, ，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 将不会。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>
              从指定的数据流初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。
            </summary>
      <param name="stream">
                用于加载图像的数据流。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 不包含图像数据，或者是 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="stream" /> 包含单个维度大于 65535 像素的 PNG 图像文件。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
              从指定的数据流初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。
            </summary>
      <param name="stream">
                用于加载图像的数据流。
              </param>
      <param name="useIcm">
                <see langword="true" /> 要用于此颜色校正 <see cref="T:System.Drawing.Bitmap" />; 否则为 <see langword="false" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 不包含图像数据，或者是 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="stream" /> 包含单个维度大于 65535 像素的 PNG 图像文件。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>
              从指定的文件初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。
            </summary>
      <param name="filename">
                位图文件的名称和路径中。
              </param>
      <exception cref="T:System.IO.FileNotFoundException">
                  找不到指定的文件。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>
              从指定的文件初始化 <see cref="T:System.Drawing.Bitmap" /> 类的新实例。
            </summary>
      <param name="filename">
                位图文件的名称。
              </param>
      <param name="useIcm">
                <see langword="true" /> 要用于此颜色校正 <see cref="T:System.Drawing.Bitmap" />; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Bitmap" /> 类从指定的资源。
            </summary>
      <param name="type">
                用于提取资源的类。
              </param>
      <param name="resource">
                资源的名称。
              </param>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>
              创建此分区的副本 <see cref="T:System.Drawing.Bitmap" /> 由定义 <see cref="T:System.Drawing.Rectangle" /> 结构并使用指定 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举。
            </summary>
      <param name="rect">
                定义此部分 <see cref="T:System.Drawing.Bitmap" /> 复制。
                 坐标是相对于此 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="format">
                新的像素格式 <see cref="T:System.Drawing.Bitmap" />。
                 这必须指定一个值，开头 <paramref name="Format" />。
              </param>
      <returns>
              此方法创建的新 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
      <exception cref="T:System.OutOfMemoryException">
                  <paramref name="rect" /> 位于源位图边界之外。
                </exception>
      <exception cref="T:System.ArgumentException">
                  高度或宽度 <paramref name="rect" /> 为 0。
                
                  - 或 -
                
                  一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 未指定值，其名称不以开头 格式。
                   例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 将导致 <see cref="T:System.ArgumentException" />, ，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 将不会。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>
              创建此分区的副本 <see cref="T:System.Drawing.Bitmap" /> 定义与指定 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举。
            </summary>
      <param name="rect">
                定义此部分 <see cref="T:System.Drawing.Bitmap" /> 复制。
              </param>
      <param name="format">
                指定 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举为目标 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
      <exception cref="T:System.OutOfMemoryException">
                  <paramref name="rect" /> 位于源位图边界之外。
                </exception>
      <exception cref="T:System.ArgumentException">
                  高度或宽度 <paramref name="rect" /> 为 0。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>
              创建 <see cref="T:System.Drawing.Bitmap" /> 从图标的 Windows 句柄。
            </summary>
      <param name="hicon">
                指向一个图标的句柄。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>
              创建 <see cref="T:System.Drawing.Bitmap" /> 从指定的 Windows 资源。
            </summary>
      <param name="hinstance">
                包含资源的可执行文件的实例句柄。
              </param>
      <param name="bitmapName">
                一个字符串，包含资源位图的名称。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>
              创建 GDI 从此位图对象 <see cref="T:System.Drawing.Bitmap" />。
            </summary>
      <returns>
              句柄 GDI 此方法创建的位图对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  高度或位图的宽度是否大于 <see cref="F:System.Int16.MaxValue" />。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>
              创建 GDI 从此位图对象 <see cref="T:System.Drawing.Bitmap" />。
            </summary>
      <param name="background">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它指定背景色。
                 如果是完全不透明的位图，则忽略此参数。
              </param>
      <returns>
              句柄 GDI 此方法创建的位图对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  高度或位图的宽度是否大于 <see cref="F:System.Int16.MaxValue" />。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>
              返回一个图标的句柄。
            </summary>
      <returns>
              同一个图像作为带图标的 Windows 句柄 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>
              在此获取指定的像素的颜色 <see cref="T:System.Drawing.Bitmap" />。
            </summary>
      <param name="x">
                要检索的像素 x 坐标。
              </param>
      <param name="y">
                要检索的像素 y 坐标。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，它表示指定的像素的颜色。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="x" /> 小于 0，或大于或等于 <see cref="P:System.Drawing.Image.Width" />。
                
                  - 或 -
                
                  <paramref name="y" /> 小于 0，或大于或等于 <see cref="P:System.Drawing.Image.Height" />。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>
              锁定 <see cref="T:System.Drawing.Bitmap" /> 到系统内存。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它指定的部分 <see cref="T:System.Drawing.Bitmap" /> 为锁。
              </param>
      <param name="flags">
                <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 枚举，用于为指定的访问级别 （读/写） <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="format">
                一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举，用于指定的数据格式 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.BitmapData" /> ，包含有关该锁定操作信息。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.Drawing.Imaging.PixelFormat" /> 不是特定的每像素位值。
                
                  - 或 -
                
                  不正确 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 传入的位图。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)">
      <summary>
              锁定 <see cref="T:System.Drawing.Bitmap" /> 到系统内存 
            </summary>
      <param name="rect">
                矩形结构，它指定的部分 <see cref="T:System.Drawing.Bitmap" /> 为锁。
              </param>
      <param name="flags">
                其中一个 <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 为指定的访问级别 （读/写） 的值 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="format">
                其中一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，该值指定的数据格式 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="bitmapData">
                一个 <see cref="T:System.Drawing.Imaging.BitmapData" /> ，包含有关该锁定操作信息。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.BitmapData" /> ，包含有关该锁定操作信息。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值不是特定的每像素位值。
                
                  - 或 -
                
                  不正确 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 传入的位图。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>
              让 <see cref="T:System.Drawing.Bitmap" /> 的默认透明颜色为透明。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Drawing.Bitmap" /> 的图像格式为图标格式。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>
              使指定的颜色透明此 <see cref="T:System.Drawing.Bitmap" />。
            </summary>
      <param name="transparentColor">
                <see cref="T:System.Drawing.Color" /> 结构，它表示要将设置为透明的颜色。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  图像格式的 <see cref="T:System.Drawing.Bitmap" /> 是一种图标格式。
                </exception>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
              在此 <see cref="T:System.Drawing.Bitmap" /> 中设置指定像素的颜色。
            </summary>
      <param name="x">
                要设置的像素的 x 坐标。
              </param>
      <param name="y">
                要设置的像素的 y 坐标。
              </param>
      <param name="color">
                代表分配到指定像素的颜色的 <see cref="T:System.Drawing.Color" /> 结构。
              </param>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>
              此设置的分辨率 <see cref="T:System.Drawing.Bitmap" />。
            </summary>
      <param name="xDpi">
                水平分辨率，以每英寸点数为单位的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="yDpi">
                垂直分辨率，以每英寸点数为单位的 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>
              解锁此 <see cref="T:System.Drawing.Bitmap" /> 于系统内存。
            </summary>
      <param name="bitmapdata">
                一个 <see cref="T:System.Drawing.Imaging.BitmapData" /> ，它指定该锁定操作有关的信息。
              </param>
      <exception cref="T:System.Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSameAssemblyAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Brush.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Brush" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>
              当在派生类中重写时创建的一个精确副本 <see cref="T:System.Drawing.Brush" />。
            </summary>
      <returns>
              此方法创建的新 <see cref="T:System.Drawing.Brush" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.Brush" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Brush.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Drawing.Brush" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Brush.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
      <summary>
              在派生类中，将一个引用设置为 GDI+ brush 对象。
            </summary>
      <param name="brush">
                一个指向 GDI+ brush 对象。
              </param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Dispose">
      <summary>
              释放由 <see cref="T:System.Drawing.BufferedGraphics" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render">
      <summary>
              将图形缓冲区的内容写入默认设备。
            </summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
      <summary>
              将图形缓冲区的内容写入指定的 <see cref="T:System.Drawing.Graphics" /> 对象。
            </summary>
      <param name="target">
                一个 <see cref="T:System.Drawing.Graphics" /> 对象，要向其中写入图形缓冲区的内容。
              </param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
      <summary>
              将图形缓冲区的内容写入与指定的 <see cref="T:System.IntPtr" /> 句柄关联的设备上下文。
            </summary>
      <param name="targetDC">
                <see cref="T:System.IntPtr" /> 指向设备上下文，图形缓冲区的内容将被写入这个设备上下文。
              </param>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
              创建使用指定的像素格式的指定大小的图形缓冲区 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="targetGraphics">
                <see cref="T:System.Drawing.Graphics" /> 以匹配新缓冲区的像素格式。
              </param>
      <param name="targetRectangle">
                一个 <see cref="T:System.Drawing.Rectangle" /> ，该值指示要创建的缓冲区的大小。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.BufferedGraphics" /> 可用来绘制到指定的尺寸的缓冲区。
            </returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
      <summary>
              创建使用指定的像素格式的指定大小的图形缓冲区 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="targetDC">
                <see cref="T:System.IntPtr" /> 到设备上下文，以匹配新缓冲区的像素格式。
              </param>
      <param name="targetRectangle">
                一个 <see cref="T:System.Drawing.Rectangle" /> ，该值指示要创建的缓冲区的大小。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.BufferedGraphics" /> 可用来绘制到指定的尺寸的缓冲区。
            </returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Dispose">
      <summary>
              释放由 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
      <summary>
              如果缓冲区已分配，并且尚未释放，释放当前的图形缓冲区。
            </summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.CharacterRange" /> 结构，并指定字符串中字符位置的范围。
            </summary>
      <param name="First">
                第一个字符的范围内的位置。
                 例如，如果 <paramref name="First" /> 设置为 0 时，该范围的第一个位置是在字符串中的位置 0。
              </param>
      <param name="Length">
                范围内的位置数。
              </param>
    </member>
    <member name="M:System.Drawing.CharacterRange.Equals(System.Object)">
      <summary>
              获取一个值，该值指示此对象是否等效于指定的对象。
            </summary>
      <param name="obj">
                要比较相等的对象。
              </param>
      <returns>
              <see langword="true" /> 指示指定的对象是否具有相同的实例 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值与此实例; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.GetHashCode">
      <summary>
              返回此实例的哈希代码。
            </summary>
      <returns>
              一个 32 位带符号整数，它是此实例的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>
              比较两个 <see cref="T:System.Drawing.CharacterRange" /> 对象。
               获取一个值，该值指示是否 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 两个值 <see cref="T:System.Drawing.CharacterRange" /> 对象是否相等。
            </summary>
      <param name="cr1">
                一个 <see cref="T:System.Drawing.CharacterRange" /> 要比较是否相等。
              </param>
      <param name="cr2">
                一个 <see cref="T:System.Drawing.CharacterRange" /> 要比较是否相等。
              </param>
      <returns>
              <see langword="true" /> 若要指示两个 <see cref="T:System.Drawing.CharacterRange" /> 对象具有相同 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>
              比较两个 <see cref="T:System.Drawing.CharacterRange" /> 对象。
               获取一个值，该值指示是否 <see cref="P:System.Drawing.CharacterRange.First" /> 或 <see cref="P:System.Drawing.CharacterRange.Length" /> 这两个值 <see cref="T:System.Drawing.CharacterRange" /> 对象是否不相等。
            </summary>
      <param name="cr1">
                一个 <see cref="T:System.Drawing.CharacterRange" /> 要比较是否不相等。
              </param>
      <param name="cr2">
                一个 <see cref="T:System.Drawing.CharacterRange" /> 要比较是否不相等。
              </param>
      <returns>
              <see langword="true" /> 任 <see cref="P:System.Drawing.CharacterRange.First" /> 或 <see cref="P:System.Drawing.CharacterRange.Length" /> 这两个值 <see cref="T:System.Drawing.CharacterRange" /> 对象存在差异; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.Equals(System.Object)">
      <summary>
              测试指定的对象是否为 <see cref="T:System.Drawing.Color" /> 结构，并且等效于此 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <param name="obj">
                要测试的对象。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.Color" /> 结构等效于此 <see cref="T:System.Drawing.Color" /> 结构; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32)">
      <summary>
              创建 <see cref="T:System.Drawing.Color" /> 从 32 位 ARGB 值结构。
            </summary>
      <param name="argb">
                指定的 32 位 ARGB 值的值。
              </param>
      <returns>
              <see cref="T:System.Drawing.Color" /> 此方法创建的结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Drawing.Color)">
      <summary>
              创建 <see cref="T:System.Drawing.Color" /> 从指定的结构 <see cref="T:System.Drawing.Color" /> 结构，但要使用新指定的 alpha 值。
               虽然此方法允许传递的 alpha 值为 32 位值，该值被限制为 8 位。
            </summary>
      <param name="alpha">
                新的 alpha 值 <see cref="T:System.Drawing.Color" />。
                 有效值为 0 到 255 之间。
              </param>
      <param name="baseColor">
                从中创建新 <see cref="T:System.Drawing.Color" /> 的 <see cref="T:System.Drawing.Color" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Color" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="alpha" /> 为小于 0 或大于 255。
                </exception>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
              创建 <see cref="T:System.Drawing.Color" /> 从指定的 8 位颜色值 （红色、 绿色和蓝色） 的结构。
               Alpha 值隐式地为 255 （完全不透明）。
               尽管此方法允许为每个颜色组件传递一个 32 位值，但每个分量的值仅限于 8 位。
            </summary>
      <param name="red">
                新的红色分量值 <see cref="T:System.Drawing.Color" />。
                 有效值为 0 到 255 之间。
              </param>
      <param name="green">
                新的绿色分量值 <see cref="T:System.Drawing.Color" />。
                 有效值为 0 到 255 之间。
              </param>
      <param name="blue">
                新的蓝色分量值 <see cref="T:System.Drawing.Color" />。
                 有效值为 0 到 255 之间。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Color" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="red" />, <paramref name="green" />, ，或 <paramref name="blue" /> 小于 0 或大于 255。
                </exception>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              创建 <see cref="T:System.Drawing.Color" /> 从四个 ARGB 组件 （alpha、 红色、 绿色和蓝色） 的结构的值。
               尽管此方法允许为每个组件传递一个 32 位值，但每个分量的值仅限于 8 位。
            </summary>
      <param name="alpha">
                Alpha 分量。
                 有效值为 0 到 255 之间。
              </param>
      <param name="red">
                红色组件。
                 有效值为 0 到 255 之间。
              </param>
      <param name="green">
                绿色的组件。
                 有效值为 0 到 255 之间。
              </param>
      <param name="blue">
                蓝色组件。
                 有效值为 0 到 255 之间。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Color" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="alpha" />, <paramref name="red" />, ，<paramref name="green" />, ，或 <paramref name="blue" /> 小于 0 或大于 255。
                </exception>
    </member>
    <member name="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)">
      <summary>
              创建 <see cref="T:System.Drawing.Color" /> 从指定的结构预定义颜色。
            </summary>
      <param name="color">
                一个元素 <see cref="T:System.Drawing.KnownColor" /> 枚举。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.FromName(System.String)">
      <summary>
              创建 <see cref="T:System.Drawing.Color" /> 预定义的颜色的指定名称的结构。
            </summary>
      <param name="name">
                一个字符串，是一种预定义颜色的名称。
                 有效的名称为的元素的名称相同 <see cref="T:System.Drawing.KnownColor" /> 枚举。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.GetBrightness">
      <summary>
              获取此的色调-饱和度-亮度 (HSB) 亮度值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              此亮度 <see cref="T:System.Drawing.Color" />。
               亮度范围介于 0.0 到 1.0，其中 0.0 表示黑，1.0 表示白。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.GetHashCode">
      <summary>
              返回此哈希代码 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              一个整数值，指定此哈希代码 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.GetHue">
      <summary>
              获取的色调-饱和度-亮度 (HSB) 色调值，以度为单位，此 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              色调以度为单位，此 <see cref="T:System.Drawing.Color" />。
               色调以度为单位，范围介于 0.0 到 360.0，在 HSB 颜色空间中。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.GetSaturation">
      <summary>
              获取此的色调-饱和度-亮度 (HSB) 饱和度值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              此饱和度 <see cref="T:System.Drawing.Color" />。
               饱和度介于 0.0 到 1.0，其中 0.0 为灰度，1.0 表示最饱和。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.op_Equality(System.Drawing.Color,System.Drawing.Color)">
      <summary>
              测试两个指定 <see cref="T:System.Drawing.Color" /> 结构是否等效。
            </summary>
      <param name="left">
                <see cref="T:System.Drawing.Color" /> 即相等运算符的左侧。
              </param>
      <param name="right">
                <see cref="T:System.Drawing.Color" /> 即相等运算符的右侧。
              </param>
      <returns>
              <see langword="true" /> 如果两个 <see cref="T:System.Drawing.Color" /> 结构是否相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.op_Inequality(System.Drawing.Color,System.Drawing.Color)">
      <summary>
              测试两个指定 <see cref="T:System.Drawing.Color" /> 结构是否不同。
            </summary>
      <param name="left">
                <see cref="T:System.Drawing.Color" /> 这是不等运算符左侧。
              </param>
      <param name="right">
                <see cref="T:System.Drawing.Color" /> 这是不等运算符右侧。
              </param>
      <returns>
              <see langword="true" /> 如果两个 <see cref="T:System.Drawing.Color" /> 结构是否不同; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.ToArgb">
      <summary>
              获取此的 32 位 ARGB 值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              此 32 位 ARGB 值 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.ToKnownColor">
      <summary>
              获取 <see cref="T:System.Drawing.KnownColor" /> 此值的 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              一个元素 <see cref="T:System.Drawing.KnownColor" /> 枚举中，如果 <see cref="T:System.Drawing.Color" /> 通过使用创建的预定义的颜色 <see cref="M:System.Drawing.Color.FromName(System.String)" /> 方法或 <see cref="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)" /> 方法; 否则为 0。
            </returns>
    </member>
    <member name="M:System.Drawing.Color.ToString">
      <summary>
              将此转换 <see cref="T:System.Drawing.Color" /> 用户可读的字符串的结构。
            </summary>
      <returns>
              此名称的字符串 <see cref="T:System.Drawing.Color" />, ，如果 <see cref="T:System.Drawing.Color" /> 通过使用创建的预定义的颜色 <see cref="M:System.Drawing.Color.FromName(System.String)" /> 方法或 <see cref="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)" /> 方法; 否则为 ARGB 组件名称和它们的值组成的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.ColorConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否此转换器可以将给定的源类型的对象转换为该转换器的本机类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
                 此对象可用于获取有关从中调用该转换器的环境的其他信息。
              </param>
      <param name="sourceType">
                您想要转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果此对象可以执行转换，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              返回一个值，该值指示此转换器是否可以将对象转换为给定的目标类型使用的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> ，表示要转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果该转换器能够执行该操作;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              将给定的对象转换为转换器的本机类型。
            </summary>
      <param name="context">
                一个提供格式上下文的 <see cref="T:System.ComponentModel.TypeDescriptor" />。
                 此对象可用于获取有关从中调用该转换器的环境的其他信息。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> ，它指定要表示颜色的区域性。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              <see cref="T:System.Object" /> 表示转换后的值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  不能执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将指定的对象转换为另一种类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 使用此对象来提取有关从中调用该转换器的环境的附加信息。
                 始终检查该值是否 <see langword="null" />。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> ，它指定要表示颜色的区域性。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                对象要转换为的类型。
              </param>
      <returns>
              <see cref="T:System.Object" /> 表示转换后的值。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationtype" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不能执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              检索包含用于为其设计此验证程序的数据类型的标准值集的集合。
               这将返回 <see langword="null" /> 如果数据类型不支持标准值集。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 使用此对象来提取有关从中调用该转换器的环境的附加信息。
                 始终检查该值是否 <see langword="null" />。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <returns>
              集合包含 <see langword="null" /> 或一组标准的有效值。
               默认实现始终返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定此对象是否支持可以从列表中选择的值的标准集。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="Overload:System.Drawing.ColorConverter.GetStandardValues" /> 必须调用来查找一组公共对象支持的值; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>
              将转换为 GDI + 的 HTML 颜色表示 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <param name="htmlColor">
                要转换的 Html 颜色字符串表示。
              </param>
      <returns>
              <see cref="T:System.Drawing.Color" /> 结构，它表示已翻译的 HTML 颜色或 <see cref="F:System.Drawing.Color.Empty" /> 如果 <paramref name="htmlColor" /> 是 <see langword="null" />。
            </returns>
      <exception cref="T:System.Exception">
                  <paramref name="htmlColor" /> 不是有效的 HTML 颜色名称。
                </exception>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>
              将转换为 GDI + 的 OLE 颜色值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <param name="oleColor">
                要转换的 OLE 颜色。
              </param>
      <returns>
              <see cref="T:System.Drawing.Color" /> 结构，它表示已转换的 OLE 颜色。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>
              将转换为 GDI + 的 Windows 颜色值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <param name="win32Color">
                要转换的 Windows 颜色。
              </param>
      <returns>
              <see cref="T:System.Drawing.Color" /> 结构，它表示已翻译的 Windows 颜色。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
      <summary>
              将转换指定 <see cref="T:System.Drawing.Color" /> 为 HTML 字符串颜色表示形式的结构。
            </summary>
      <param name="c">
                要转换的 <see cref="T:System.Drawing.Color" /> 结构。
              </param>
      <returns>
              表示 HTML 颜色的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
      <summary>
              将转换指定 <see cref="T:System.Drawing.Color" /> OLE 颜色的结构。
            </summary>
      <param name="c">
                要转换的 <see cref="T:System.Drawing.Color" /> 结构。
              </param>
      <returns>
              OLE 颜色值。
            </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
      <summary>
              将转换指定 <see cref="T:System.Drawing.Color" /> Windows 颜色的结构。
            </summary>
      <param name="c">
                要转换的 <see cref="T:System.Drawing.Color" /> 结构。
              </param>
      <returns>
              Windows 颜色值。
            </returns>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Configuration.SystemDrawingSection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 类使用指定的集合。
            </summary>
      <param name="value">
                一个 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> ，其中包含要初始化到的集合值的名称。
              </param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 类使用指定的名称数组。
            </summary>
      <param name="value">
                包含要初始化到的集合值的类别的名称的字符串数组。
              </param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>
              指示在集合中是否包含指定的类别。
            </summary>
      <param name="value">
                要检查在集合中的字符串。
              </param>
      <returns>
              <see langword="true" /> 如果集合中的包含指定的类别否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>
              将集合元素复制到指定数组的指定索引处。
            </summary>
      <param name="array">
                要复制到的数组。
              </param>
      <param name="index">
                从此处开始复制的目标数组的索引。
              </param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>
              获取指定的值的索引。
            </summary>
      <param name="value">
                要检索的索引集合中的类别名称。
              </param>
      <returns>
              在集合中，索引或 <see langword="null" /> 如果集合中不存在该字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
      <summary>
              添加指定 <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> 到此服务。
            </summary>
      <param name="newHandler">
                属性值 UI 要添加处理程序。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)">
      <summary>
              获取 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 符合指定的上下文和属性描述符特性的对象。
            </summary>
      <param name="context">
                可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。
              </param>
      <param name="propDesc">
                一个 <see cref="T:System.ComponentModel.PropertyDescriptor" /> ，该值指示与要返回的属性进行匹配的属性。
              </param>
      <returns>
              一个数组 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 与指定的参数匹配的对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged">
      <summary>
              通知 <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> 实现程序的全局列表 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 修改对象。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
      <summary>
              移除指定 <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> 根据属性值 UI 服务。
            </summary>
      <param name="newHandler">
                要删除的处理程序。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>
              添加新工具箱项的创建者用于指定的数据格式。
            </summary>
      <param name="creator">
                一个 <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> ，可在调用工具箱项时创建组件。
              </param>
      <param name="format">
                创建者处理数据格式。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              添加新工具箱项的创建者指定的数据格式和设计器宿主。
            </summary>
      <param name="creator">
                一个 <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> ，可在调用工具箱项时创建组件。
              </param>
      <param name="format">
                创建者处理数据格式。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ，表示要创建者相关联的设计器宿主。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              将指定的项目链接的工具箱项添加到工具箱。
            </summary>
      <param name="toolboxItem">
                链接 <see cref="T:System.Drawing.Design.ToolboxItem" /> 将添加到工具箱。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 为当前的设计文档。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              将指定的项目链接的工具箱项添加到指定类别的工具箱。
            </summary>
      <param name="toolboxItem">
                链接 <see cref="T:System.Drawing.Design.ToolboxItem" /> 将添加到工具箱。
              </param>
      <param name="category">
                工具箱将项添加到工具箱项类别。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 为当前的设计文档。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
              将指定的工具箱项添加到工具箱。
            </summary>
      <param name="toolboxItem">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 将添加到工具箱。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>
              将指定的工具箱项添加到指定类别的工具箱。
            </summary>
      <param name="toolboxItem">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 将添加到工具箱。
              </param>
      <param name="category">
                若要添加的工具箱项类别 <see cref="T:System.Drawing.Design.ToolboxItem" /> 到。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>
              从指定的对象，表示已序列化的窗体中的工具箱项中获取的工具箱项。
            </summary>
      <param name="serializedObject">
                对象，其中包含 <see cref="T:System.Drawing.Design.ToolboxItem" /> 来检索。
              </param>
      <returns>
              <see cref="T:System.Drawing.Design.ToolboxItem" /> 从序列化的对象创建的。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              从表示已序列化窗体中，使用指定的设计器宿主中的工具箱项的指定对象中获取的工具箱项。
            </summary>
      <param name="serializedObject">
                对象，其中包含 <see cref="T:System.Drawing.Design.ToolboxItem" /> 来检索。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 要与此关联 <see cref="T:System.Drawing.Design.ToolboxItem" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建从反序列化。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>
              获取当前选定的工具箱项。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Design.ToolboxItem" /> ，当前没有选定，或 <see langword="null" /> 如果尚未选定任何工具箱项。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>
              获取当前选定的工具箱项是否可用的所有设计器，或者如果支持指定的设计器。
            </summary>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 所选的工具必须与为其返回相关联。
              </param>
      <returns>
              <see cref="T:System.Drawing.Design.ToolboxItem" /> ，当前没有选定，或 <see langword="null" /> 如果当前没有选定任何工具箱项。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>
              从工具箱中获取工具箱项的整个的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 包含当前工具箱项。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>
              获取与从工具箱中指定的设计器宿主关联的工具箱项的集合。
            </summary>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 要检索的工具箱项与该键相关联。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> ，包含与指定的设计器宿主关联的当前工具箱项。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>
              获取从工具箱中指定的类别相匹配的工具箱项的集合。
            </summary>
      <param name="category">
                要检索中的所有工具箱项的工具箱项类别。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> ，包含与指定的类别相关联的当前工具箱项。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              获取与指定设计器宿主和从工具箱的类别相关联的工具箱项的集合。
            </summary>
      <param name="category">
                要检索从工具箱项的工具箱项类别。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 要检索的工具箱项与该键相关联。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> ，包含与指定的类别和设计器宿主关联的当前工具箱项。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>
              获取一个值，该值表示序列化的工具箱项的指定的对象是否与指定的特性匹配。
            </summary>
      <param name="serializedObject">
                对象，其中包含 <see cref="T:System.Drawing.Design.ToolboxItem" /> 来检索。
              </param>
      <param name="filterAttributes">
                <see cref="T:System.Collections.ICollection" /> ，其中包含要测试的序列化的对象的属性。
              </param>
      <returns>
              <see langword="true" /> 如果对象与指定的属性，则匹配否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              获取一个值，该值指定设计器宿主是否可以使用指定的对象表示一个序列化的工具箱项。
            </summary>
      <param name="serializedObject">
                对象，其中包含 <see cref="T:System.Drawing.Design.ToolboxItem" /> 来检索。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 要测试其支持 <see cref="T:System.Drawing.Design.ToolboxItem" />。
              </param>
      <returns>
              <see langword="true" /> 如果指定的对象是否与指定的设计器宿主; 兼容否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>
              获取一个值，该值指定的对象是否序列化的工具箱项。
            </summary>
      <param name="serializedObject">
                要检查的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象包含工具箱项对象;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              获取一个值，该值指定的对象是否序列化的工具箱项，使用指定的设计器宿主。
            </summary>
      <param name="serializedObject">
                要检查的对象。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ，正在发出此请求。
              </param>
      <returns>
              <see langword="true" /> 如果对象包含工具箱项对象;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>
              刷新工具箱项的状态。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>
              移除以前添加的工具箱项创建者的指定的数据格式。
            </summary>
      <param name="format">
                若要删除的创建者数据格式。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
              移除与指定的数据格式和指定的设计器宿主关联以前添加的工具箱创建者。
            </summary>
      <param name="format">
                若要删除的创建者数据格式。
              </param>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 要删除的创建者与该键相关联。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
              从工具箱中删除指定的工具箱项。
            </summary>
      <param name="toolboxItem">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 从工具箱中删除。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>
              从工具箱中删除指定的工具箱项。
            </summary>
      <param name="toolboxItem">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 从工具箱中删除。
              </param>
      <param name="category">
                若要删除的工具箱项类别 <see cref="T:System.Drawing.Design.ToolboxItem" /> 从。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>
              通知工具箱服务已使用所选的工具。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
              获取一个表示指定的工具箱项的可序列化对象。
            </summary>
      <param name="toolboxItem">
                要序列化的 <see cref="T:System.Drawing.Design.ToolboxItem" />。
              </param>
      <returns>
              一个对象，表示指定 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>
              将当前应用程序的光标设置为一个游标，表示当前所选的工具。
            </summary>
      <returns>
              <see langword="true" /> 如果将光标设置的当前选定的工具， <see langword="false" /> 如果没有任何工具处于选中状态并将光标设置为标准的 windows 的光标。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
              选择指定的工具箱项。
            </summary>
      <param name="toolboxItem">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 选择。
              </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
              获取一个值，该值指示当前设计器是否支持指定的工具。
            </summary>
      <param name="tool">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 要测试的工具箱支持。
              </param>
      <returns>
              <see langword="true" /> 如果工具箱支持该工具，并可以启用; <see langword="false" /> 如果文档设计器不知道如何使用该工具。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>
              选择指定的工具。
            </summary>
      <param name="tool">
                <see cref="T:System.Drawing.Design.ToolboxItem" /> 选择。
              </param>
    </member>
    <member name="M:System.Drawing.Design.PaintValueEventArgs.#ctor(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 类使用指定的值。
            </summary>
      <param name="context">
                值出现的上下文。
              </param>
      <param name="value">
                要绘制的值。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 绘图与之进行的对象。
              </param>
      <param name="bounds">
                <see cref="T:System.Drawing.Rectangle" /> 中哪一个绘图是来完成。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="graphics" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.PropertyValueUIItem.#ctor(System.Drawing.Image,System.Drawing.Design.PropertyValueUIItemInvokeHandler,System.String)">
      <summary>
              初始化 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 类的新实例。
            </summary>
      <param name="uiItemImage">
                要显示的图标。
                 映像必须是 8 x 8 像素。
              </param>
      <param name="handler">
                双击该图像时要调用该处理程序。
              </param>
      <param name="tooltip">
                <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> 要为该属性显示此 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 与相关联。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="uiItemImage" /> 或 <paramref name="handler" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.PropertyValueUIItem.Reset">
      <summary>
              重置用户界面 (UI) 项。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>
              初始化 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> 类的新实例。
            </summary>
      <param name="components">
                要在工具箱中包含的组件。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>
              初始化 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> 类的新实例。
            </summary>
      <param name="host">
                设计器宿主正在发出请求。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建指定的类型的组件的类。
            </summary>
      <param name="toolType">
                一种 <see cref="T:System.ComponentModel.IComponent" /> 工具箱项创建。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Drawing.Design.ToolboxItem" /> 已锁定。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>
              如果工具箱项当前被锁定，则引发异常。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Drawing.Design.ToolboxItem" /> 处于锁定状态。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>
              创建工具箱项的配置中指定要创建的组件。
            </summary>
      <returns>
              创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>
              使用指定的设计器宿主创建工具箱项的配置中指定要创建的组件。
            </summary>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 创建组件时要使用。
              </param>
      <returns>
              创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>
              使用指定的设计器宿主和默认值创建工具箱项的配置中指定要创建的组件。
            </summary>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 创建组件时要使用。
              </param>
      <param name="defaultValues">
                初始化组件时所用的默认值的属性名称/值对字典。
              </param>
      <returns>
              创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>
              调用工具箱项时创建组件或者组件数组。
            </summary>
      <param name="host">
                要承载工具箱项的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。
              </param>
      <returns>
              创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary>
              调用工具箱项时创建组件数组。
            </summary>
      <param name="host">
                创建组件时要使用的设计器宿主。
              </param>
      <param name="defaultValues">
                初始化组件时所用的默认值的属性名称/值对字典。
              </param>
      <returns>
              创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              从指定的序列化信息对象中加载工具箱项的状态。
            </summary>
      <param name="info">
                <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 从加载。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ，该值指示流特征。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary>
              确定两个 <see cref="T:System.Drawing.Design.ToolboxItem" /> 实例是否相等。
            </summary>
      <param name="obj">
                要与当前的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 进行比较的 <see cref="T:System.Drawing.Design.ToolboxItem" />。
              </param>
      <returns>
              如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Drawing.Design.ToolboxItem" />，则为 <see cref="T:System.Drawing.Design.ToolboxItem" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary>
              在返回属性值之前先对其进行筛选。
            </summary>
      <param name="propertyName">
                要筛选的属性的名称。
              </param>
      <param name="value">
                要根据其对属性进行筛选的值。
              </param>
      <returns>
              筛选的属性值。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary>
              返回此实例的哈希代码。
            </summary>
      <returns>
              当前 <see cref="T:System.Drawing.Design.ToolboxItem" /> 的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary>
              允许访问与工具箱项关联的类型。
            </summary>
      <param name="host">
                查询设计器宿主 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />。
              </param>
      <returns>
              与工具箱项关联的类型。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>
              创建指定类型的实例（可以使用指定的设计器宿主和程序集名称）。
            </summary>
      <param name="host">
                <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 当前文档。
                 这可能是 <see langword="null" />。
              </param>
      <param name="assemblyName">
                <see cref="T:System.Reflection.AssemblyName" /> ，该值指示包含要加载的类型的程序集。
                 这可能是 <see langword="null" />。
              </param>
      <param name="typeName">
                要创建的实例的类型的名称。
              </param>
      <param name="reference">
                一个值，它指示是否将对包含指定类型的程序集的引用添加到设计器宿主的引用集中。
              </param>
      <returns>
              指定类型的实例（如果可以找到的话）。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="typeName" /> 未指定。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>
              使用将创建的指定类型初始化当前工具箱项。
            </summary>
      <param name="type">
                <see cref="T:System.Type" /> 工具箱项创建。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="T:System.Drawing.Design.ToolboxItem" /> 已锁定。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>
              锁定工具箱项，防止更改其属性。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>
              引发 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件。
            </summary>
      <param name="args">
                为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>
              引发 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件。
            </summary>
      <param name="args">
                为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              将此工具箱项的状态保存到指定的序列化信息对象中。
            </summary>
      <param name="info">
                要保存到的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ，该值指示流特征。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              有关此成员的说明，请参见 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>
              返回一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <returns>
              一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary>
              验证对象是否属于给定类型。
            </summary>
      <param name="propertyName">
                要验证的属性的名称。
              </param>
      <param name="value">
                要根据其进行验证的可选值。
              </param>
      <param name="expectedType">
                属性的期望类型。
              </param>
      <param name="allowNull">
                <see langword="true" /> 若要允许 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> 是 <see langword="null" />, ，和 <paramref name="allowNull" /> 是 <see langword="false" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="value" /> 不是由指定的类型 <paramref name="expectedType" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary>
              在将属性分配给属性字典前先对其进行验证。
            </summary>
      <param name="propertyName">
                要验证的属性的名称。
              </param>
      <param name="value">
                要根据其进行验证的值。
              </param>
      <returns>
              用于执行验证的值。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> 是 <see langword="null" />, ，和 <paramref name="propertyName" /> 是"是短时"。
                </exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 类使用指定的工具箱项数组。
            </summary>
      <param name="value">
                类型的数组 <see cref="T:System.Drawing.Design.ToolboxItem" /> 包含工具箱项来填充集合。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 类使用指定的集合。
            </summary>
      <param name="value">
                一个 <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> 来填充新集合。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>
              表示集合是否包含指定的 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <param name="value">
                一个 <see cref="T:System.Drawing.Design.ToolboxItem" /> 若要在集合中搜索。
              </param>
      <returns>
              <see langword="true" /> 如果集合包含指定的对象;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>
              将集合复制到指定的目标索引开始的指定的数组。
            </summary>
      <param name="array">
                要复制到的数组。
              </param>
      <param name="index">
                要开始向复制的索引。
              </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>
              获取指定的索引 <see cref="T:System.Drawing.Design.ToolboxItem" />, ，如果它在集合中存在。
            </summary>
      <param name="value">
                一个 <see cref="T:System.Drawing.Design.ToolboxItem" /> 若要在集合中获取的索引。
              </param>
      <returns>
              指定的索引 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Design.UITypeEditor" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
              通过指示指定的对象的值使用的编辑器样式编辑 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 方法。
            </summary>
      <param name="context">
                可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。
              </param>
      <param name="provider">
                <see cref="T:System.IServiceProvider" /> 此编辑器可以用来获取服务。
              </param>
      <param name="value">
                要编辑的对象。
              </param>
      <returns>
              对象的新值。
               如果尚未更改对象的值，则它返回的对象应与传递给它的对象相同。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)">
      <summary>
              通过指示的值指定的对象使用的编辑器样式编辑 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 方法。
            </summary>
      <param name="provider">
                <see cref="T:System.IServiceProvider" /> 此编辑器可以用来获取服务。
              </param>
      <param name="value">
                要编辑的对象。
              </param>
      <returns>
              对象的新值。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetEditStyle">
      <summary>
              获取使用的编辑器样式 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 方法。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示由当前使用的编辑器样式 <see cref="T:System.Drawing.Design.UITypeEditor" />。
               默认情况下，此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              获取使用的编辑器样式 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 方法。
            </summary>
      <param name="context">
                可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。
               如果 <see cref="T:System.Drawing.Design.UITypeEditor" /> 不支持此方法，则 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">
      <summary>
              指示该编辑器是否支持绘制对象值的表示形式。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> 实现; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              指示指定的上下文是否支持在指定的上下文内绘制对象值的表示形式。
            </summary>
      <param name="context">
                可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> 实现; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>
              使用指定的对象的值表示绘制 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。
            </summary>
      <param name="e">
                一个 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> ，该值指示绘制内容和绘制位置。
              </param>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
              将指定对象值表示形式绘制到指定的画布上。
            </summary>
      <param name="value">
                此类型编辑器将显示其值的对象。
              </param>
      <param name="canvas">
                在其上绘制对象的值的表示形式的画布。
              </param>
      <param name="rectangle">
                一个 <see cref="T:System.Drawing.Rectangle" /> 绘制值其边界内。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 类，具有指定的宽度和高度。
               始终填充使用此构造函数创建的箭头端帽。
            </summary>
      <param name="width">
                箭头的宽度。
              </param>
      <param name="height">
                箭头的高度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 类，具有指定的宽度、 高度和填充属性。
               是否填充箭头端帽取决于传递给参数 <paramref name="isFilled" /> 参数。
            </summary>
      <param name="width">
                箭头的宽度。
              </param>
      <param name="height">
                箭头的高度。
              </param>
      <param name="isFilled">
                <see langword="true" /> 若要填充箭头帽;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 的因子和位置的指定个数的类。
            </summary>
      <param name="count">
                中的元素数 <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> 和 <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> 数组。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 的颜色和位置的指定个数的类。
            </summary>
      <param name="count">
                颜色和在此位置的数目 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 类的指定的边框和填充。
            </summary>
      <param name="fillPath">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象，用于定义自定义线帽的填充。
              </param>
      <param name="strokePath">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象，用于定义自定义线帽的轮廓。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>
              初始化的新实例 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 类从指定的现有 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举与指定的边框和填充。
            </summary>
      <param name="fillPath">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象，用于定义自定义线帽的填充。
              </param>
      <param name="strokePath">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象，用于定义自定义线帽的轮廓。
              </param>
      <param name="baseCap">
                据以创建自定义线帽线帽。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 类从指定的现有 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举与指定的轮廓、 填充和内边距。
            </summary>
      <param name="fillPath">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象，用于定义自定义线帽的填充。
              </param>
      <param name="strokePath">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象，用于定义自定义线帽的轮廓。
              </param>
      <param name="baseCap">
                据以创建自定义线帽线帽。
              </param>
      <param name="baseInset">
                指针帽和行之间的距离。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 此方法创建的、 强制转换为一个对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
      <summary>
              允许 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 尝试释放资源并执行其他清理操作之前 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 通过垃圾回收回收。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>
              获取用于启动的大写和构成此自定义线帽的结束行。
            </summary>
      <param name="startCap">
                <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举此线帽内的行的开头使用。
              </param>
      <param name="endCap">
                <see cref="T:System.Drawing.Drawing2D.LineCap" /> 此线帽内行末尾使用的枚举。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>
              设置 cap 用来启动和结束行构成此自定义线帽。
            </summary>
      <param name="startCap">
                <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举此线帽内的行的开头使用。
              </param>
      <param name="endCap">
                <see cref="T:System.Drawing.Drawing2D.LineCap" /> 此线帽内行末尾使用的枚举。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 类 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 值 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 类与指定 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举。
            </summary>
      <param name="fillMode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它确定了此内部 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 进行填充。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 类与指定 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 和 <see cref="T:System.Drawing.Point" /> 数组。
            </summary>
      <param name="pts">
                一个数组 <see cref="T:System.Drawing.Point" /> 定义构成这点的坐标的结构 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <param name="types">
                一个数组 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素，指定的类型中每个相应点 <paramref name="pts" /> 数组。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 类与指定 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 和 <see cref="T:System.Drawing.Point" /> 数组以及指定 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举元素。
            </summary>
      <param name="pts">
                一个数组 <see cref="T:System.Drawing.Point" /> 定义构成这点的坐标的结构 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <param name="types">
                一个数组 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素，指定的类型中每个相应点 <paramref name="pts" /> 数组。
              </param>
      <param name="fillMode">
                一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，用于指定如何在此形状的内部 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 进行填充。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 用指定的数组 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 和 <see cref="T:System.Drawing.PointF" /> 数组。
            </summary>
      <param name="pts">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义构成这点的坐标的结构 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <param name="types">
                一个数组 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素，指定的类型中每个相应点 <paramref name="pts" /> 数组。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 用指定的数组 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 和 <see cref="T:System.Drawing.PointF" /> 数组以及指定 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举元素。
            </summary>
      <param name="pts">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义构成这点的坐标的结构 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <param name="types">
                一个数组 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举元素，指定的类型中每个相应点 <paramref name="pts" /> 数组。
              </param>
      <param name="fillMode">
                一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，用于指定如何在此形状的内部 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 进行填充。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              将椭圆弧追加到当前图。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示从中提取弧线的椭圆的矩形边界。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量弧线的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 和弧线的结束。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
              将椭圆弧追加到当前图。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示从中提取弧线的椭圆的矩形边界。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量弧线的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 和弧线的结束。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
              将椭圆弧追加到当前图。
            </summary>
      <param name="x">
                定义从中提取弧线的椭圆的矩形区域的左上角 x 坐标。
              </param>
      <param name="y">
                定义从中提取弧线的椭圆的矩形区域的左上角 y 坐标。
              </param>
      <param name="width">
                定义从中提取弧线的椭圆的矩形区域的宽度。
              </param>
      <param name="height">
                定义从中提取弧线的椭圆的矩形区域的高度。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量弧线的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 和弧线的结束。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              将椭圆弧追加到当前图。
            </summary>
      <param name="x">
                定义从中提取弧线的椭圆的矩形区域的左上角 x 坐标。
              </param>
      <param name="y">
                定义从中提取弧线的椭圆的矩形区域的左上角 y 坐标。
              </param>
      <param name="width">
                定义从中提取弧线的椭圆的矩形区域的宽度。
              </param>
      <param name="height">
                定义从中提取弧线的椭圆的矩形区域的高度。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量弧线的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 和弧线的结束。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              将三次方贝塞尔曲线添加到当前图。
            </summary>
      <param name="pt1">
                一个 <see cref="T:System.Drawing.Point" /> 它表示曲线的起始点。
              </param>
      <param name="pt2">
                一个 <see cref="T:System.Drawing.Point" /> 它表示曲线的第一个控制点。
              </param>
      <param name="pt3">
                一个 <see cref="T:System.Drawing.Point" /> 它表示曲线的第二个控制点。
              </param>
      <param name="pt4">
                一个 <see cref="T:System.Drawing.Point" /> ，它表示曲线的终结点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
              将三次方贝塞尔曲线添加到当前图。
            </summary>
      <param name="pt1">
                一个 <see cref="T:System.Drawing.PointF" /> 它表示曲线的起始点。
              </param>
      <param name="pt2">
                一个 <see cref="T:System.Drawing.PointF" /> 它表示曲线的第一个控制点。
              </param>
      <param name="pt3">
                一个 <see cref="T:System.Drawing.PointF" /> 它表示曲线的第二个控制点。
              </param>
      <param name="pt4">
                一个 <see cref="T:System.Drawing.PointF" /> ，它表示曲线的终结点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              将三次方贝塞尔曲线添加到当前图。
            </summary>
      <param name="x1">
                曲线起始点的 X 坐标。
              </param>
      <param name="y1">
                曲线起始点的 Y 坐标。
              </param>
      <param name="x2">
                曲线的第一个控制点的 x 坐标。
              </param>
      <param name="y2">
                曲线的第一个控制点的 y 坐标。
              </param>
      <param name="x3">
                曲线的第二个控制点的 x 坐标。
              </param>
      <param name="y3">
                曲线的第二个控制点的 y 坐标。
              </param>
      <param name="x4">
                曲线的终结点的 x 坐标。
              </param>
      <param name="y4">
                曲线的终结点的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              将三次方贝塞尔曲线添加到当前图。
            </summary>
      <param name="x1">
                曲线起始点的 X 坐标。
              </param>
      <param name="y1">
                曲线起始点的 Y 坐标。
              </param>
      <param name="x2">
                曲线的第一个控制点的 x 坐标。
              </param>
      <param name="y2">
                曲线的第一个控制点的 y 坐标。
              </param>
      <param name="x3">
                曲线的第二个控制点的 x 坐标。
              </param>
      <param name="y3">
                曲线的第二个控制点的 y 坐标。
              </param>
      <param name="x4">
                曲线的终结点的 x 坐标。
              </param>
      <param name="y4">
                曲线的终结点的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>
              将连接三次方贝塞尔曲线的序列添加到当前图。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示定义曲线的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>
              将连接三次方贝塞尔曲线的序列添加到当前图。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示定义曲线的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>
              将闭合的曲线添加到此路径。
               使用基数样条曲线是因为曲线经过每个点数组中。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示定义曲线的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>
              将闭合的曲线添加到此路径。
               使用基数样条曲线是因为曲线经过每个点数组中。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示定义曲线的点。
              </param>
      <param name="tension">
                介于 0 和 1 指定曲线弯曲 0 表示最小弯曲 （清晰角），1 表示平滑曲线的点之间的量之间的值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>
              将闭合的曲线添加到此路径。
               使用基数样条曲线是因为曲线经过每个点数组中。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示定义曲线的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>
              将闭合的曲线添加到此路径。
               使用基数样条曲线是因为曲线经过每个点数组中。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示定义曲线的点。
              </param>
      <param name="tension">
                介于 0 和 1 指定曲线弯曲 0 表示最小弯曲 （清晰角），1 表示平滑曲线的点之间的量之间的值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>
              向当前图形的样条曲线。
               使用基数样条曲线是因为曲线经过每个点数组中。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示定义曲线的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>
              向当前图形的样条曲线。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示定义曲线的点。
              </param>
      <param name="offset">
                中的元素的索引 <paramref name="points" /> 用作在曲线中的第一个点的数组。
              </param>
      <param name="numberOfSegments">
                一个值，指定该曲线控制点间弯曲的量。
                 大于 1 的值将产生不可预知的结果。
              </param>
      <param name="tension">
                一个值，指定该曲线控制点间弯曲的量。
                 大于 1 的值将产生不可预知的结果。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>
              向当前图形的样条曲线。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示定义曲线的点。
              </param>
      <param name="tension">
                一个值，指定该曲线控制点间弯曲的量。
                 大于 1 的值将产生不可预知的结果。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>
              向当前图形的样条曲线。
               使用基数样条曲线是因为曲线经过每个点数组中。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示定义曲线的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
              向当前图形的样条曲线。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示定义曲线的点。
              </param>
      <param name="offset">
                中的元素的索引 <paramref name="points" /> 用作在曲线中的第一个点的数组。
              </param>
      <param name="numberOfSegments">
                用于绘制曲线的段的数目。
                 可以将一个段看作一条连接两个点。
              </param>
      <param name="tension">
                一个值，指定该曲线控制点间弯曲的量。
                 大于 1 的值将产生不可预知的结果。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>
              向当前图形的样条曲线。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示定义曲线的点。
              </param>
      <param name="tension">
                一个值，指定该曲线控制点间弯曲的量。
                 大于 1 的值将产生不可预知的结果。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>
              向当前路径中添加一个椭圆。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> ，它表示定义椭圆的边框。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>
              向当前路径中添加一个椭圆。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> ，它表示定义椭圆的边框。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              向当前路径中添加一个椭圆。
            </summary>
      <param name="x">
                定义椭圆的边框的左上角的 X 坐标。
              </param>
      <param name="y">
                定义椭圆的边框的左上角的 Y 坐标。
              </param>
      <param name="width">
                定义椭圆的边框的宽度。
              </param>
      <param name="height">
                定义椭圆的边框的高度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              向当前路径中添加一个椭圆。
            </summary>
      <param name="x">
                定义椭圆的边框的左上角的 X 坐标。
              </param>
      <param name="y">
                定义椭圆的边框的左上角 y 坐标。
              </param>
      <param name="width">
                定义椭圆的边框的宽度。
              </param>
      <param name="height">
                定义椭圆的边框的高度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>
              将一条线段追加到此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="pt1">
                一个 <see cref="T:System.Drawing.Point" /> 表示行的起始点。
              </param>
      <param name="pt2">
                一个 <see cref="T:System.Drawing.Point" /> ，表示行的终结点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
              将一条线段追加到此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="pt1">
                一个 <see cref="T:System.Drawing.PointF" /> 表示行的起始点。
              </param>
      <param name="pt2">
                一个 <see cref="T:System.Drawing.PointF" /> ，表示行的终结点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              向当前图形中追加一条线段。
            </summary>
      <param name="x1">
                直线起始点 x 坐标。
              </param>
      <param name="y1">
                直线起始点的 y 坐标。
              </param>
      <param name="x2">
                直线终点的 x 坐标。
              </param>
      <param name="y2">
                直线终点的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              将一条线段追加到此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="x1">
                直线起始点 x 坐标。
              </param>
      <param name="y1">
                直线起始点的 y 坐标。
              </param>
      <param name="x2">
                直线终点的 x 坐标。
              </param>
      <param name="y2">
                直线终点的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>
              将一系列连接的直线段追加到末尾 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示要定义要添加的直线线段的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>
              将一系列连接的直线段追加到末尾 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示要定义要添加的直线线段的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>
              指定将追加 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到此路径。
            </summary>
      <param name="addingPath">
                要添加的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <param name="connect">
                一个布尔值，指定第一张图中添加的路径是否为此路径中的最后一个图形的一部分。
                 值为 <see langword="true" /> 指定 （如果可能） 添加的路径中的第一个图形是此路径中的最后一个图形的一部分。
                 值为 <see langword="false" /> 指定添加的路径中的第一个图形是独立于此路径中的最后一个图形。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              将饼图形状的轮廓添加到此路径。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> ，它表示定义从中绘制饼图的椭圆的边框。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量扇形区的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 和扇形区，以从顺时针旋转度为单位的结束 <paramref name="startAngle" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
              将饼图形状的轮廓添加到此路径。
            </summary>
      <param name="x">
                定义从中绘制饼图的椭圆的边框的左上角 x 坐标。
              </param>
      <param name="y">
                定义从中绘制饼图的椭圆的边框的左上角 y 坐标。
              </param>
      <param name="width">
                定义从中绘制饼图的椭圆的边框的宽度。
              </param>
      <param name="height">
                定义从中绘制饼图的椭圆的边框的高度。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量扇形区的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 饼图部分，以从顺时针旋转度为单位的末尾 <paramref name="startAngle" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              将饼图形状的轮廓添加到此路径。
            </summary>
      <param name="x">
                定义从中绘制饼图的椭圆的边框的左上角 x 坐标。
              </param>
      <param name="y">
                定义从中绘制饼图的椭圆的边框的左上角 y 坐标。
              </param>
      <param name="width">
                定义从中绘制饼图的椭圆的边框的宽度。
              </param>
      <param name="height">
                定义从中绘制饼图的椭圆的边框的高度。
              </param>
      <param name="startAngle">
                以度为单位从 x 轴沿顺时针方向度量扇形区的起始角度。
              </param>
      <param name="sweepAngle">
                之间的角度 <paramref name="startAngle" /> 饼图部分，以从顺时针旋转度为单位的末尾 <paramref name="startAngle" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>
              将多边形添加到此路径。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 定义要添加的多边形的结构。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>
              将多边形添加到此路径。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义要添加的多边形的结构。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>
              为此路径添加一个矩形。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> ，它表示要添加的矩形。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>
              为此路径添加一个矩形。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> ，它表示要添加的矩形。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>
              将一系列矩形添加到此路径。
            </summary>
      <param name="rects">
                一个数组 <see cref="T:System.Drawing.Rectangle" /> 这些结构表示要添加的矩形。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>
              将一系列矩形添加到此路径。
            </summary>
      <param name="rects">
                一个数组 <see cref="T:System.Drawing.RectangleF" /> 这些结构表示要添加的矩形。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>
              将文本字符串添加到此路径。
            </summary>
      <param name="s">
                要添加的 <see cref="T:System.String" />。
              </param>
      <param name="family">
                一个 <see cref="T:System.Drawing.FontFamily" /> ，它表示与绘制测试的字体名称。
              </param>
      <param name="style">
                一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示文本 （粗体、 斜体，等等） 的样式信息。
                 这必须转换为整数 （请参阅本节后面的示例代码）。
              </param>
      <param name="emSize">
                限定字符的 em 方形框的高度。
              </param>
      <param name="origin">
                一个 <see cref="T:System.Drawing.Point" /> ，表示文本的开始位置的点。
              </param>
      <param name="format">
                一个 <see cref="T:System.Drawing.StringFormat" /> ，它指定文本格式设置信息，如行距和对齐方式。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
              将文本字符串添加到此路径。
            </summary>
      <param name="s">
                要添加的 <see cref="T:System.String" />。
              </param>
      <param name="family">
                一个 <see cref="T:System.Drawing.FontFamily" /> ，它表示与绘制测试的字体名称。
              </param>
      <param name="style">
                一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示文本 （粗体、 斜体，等等） 的样式信息。
                 这必须转换为整数 （请参阅本节后面的示例代码）。
              </param>
      <param name="emSize">
                限定字符的 em 方形框的高度。
              </param>
      <param name="origin">
                一个 <see cref="T:System.Drawing.PointF" /> ，表示文本的开始位置的点。
              </param>
      <param name="format">
                一个 <see cref="T:System.Drawing.StringFormat" /> ，它指定文本格式设置信息，如行距和对齐方式。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>
              将文本字符串添加到此路径。
            </summary>
      <param name="s">
                要添加的 <see cref="T:System.String" />。
              </param>
      <param name="family">
                一个 <see cref="T:System.Drawing.FontFamily" /> ，它表示与绘制测试的字体名称。
              </param>
      <param name="style">
                一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示文本 （粗体、 斜体，等等） 的样式信息。
                 这必须转换为整数 （请参阅本节后面的示例代码）。
              </param>
      <param name="emSize">
                限定字符的 em 方形框的高度。
              </param>
      <param name="layoutRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定文本的矩形。
              </param>
      <param name="format">
                一个 <see cref="T:System.Drawing.StringFormat" /> ，它指定文本格式设置信息，如行距和对齐方式。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
              将文本字符串添加到此路径。
            </summary>
      <param name="s">
                要添加的 <see cref="T:System.String" />。
              </param>
      <param name="family">
                一个 <see cref="T:System.Drawing.FontFamily" /> ，它表示与绘制测试的字体名称。
              </param>
      <param name="style">
                一个 <see cref="T:System.Drawing.FontStyle" /> 枚举，它表示文本 （粗体、 斜体，等等） 的样式信息。
                 这必须转换为整数 （请参阅本节后面的示例代码）。
              </param>
      <param name="emSize">
                限定字符的 em 方形框的高度。
              </param>
      <param name="layoutRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定文本的矩形。
              </param>
      <param name="format">
                一个 <see cref="T:System.Drawing.StringFormat" /> ，它指定文本格式设置信息，如行距和对齐方式。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>
              清除此路径中的所有标记。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>
              创建此路径的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 此方法创建的、 强制转换为一个对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>
              关闭所有打开的数字，在此路径，并开始一个新图形。
               通过将行从其终结点连接到其起始点，则关闭每个打开的图形。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>
              关闭当前图形并开始新的图形。
               如果当前图包含一系列连接的直线和曲线，该方法通过从终结点的一条线连接到的起始点关闭循环。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>
              将此路径中的每个曲线转换为一系列连接的直线线段。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>
              应用指定的转换，然后将转换在此每条曲线 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到一系列连接的直线线段。
            </summary>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换这 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 平面化前。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>
              将转换在此每条曲线 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到一系列连接的直线线段。
            </summary>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换这 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 平面化前。
              </param>
      <param name="flatness">
                指定该曲线与其平展的近似值之间的最大允许的错误。
                 默认值为 0.25 的值。
                 减少平滑度值将增加的近似中的直线线段数量。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>
              返回限定此矩形 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定此矩形 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>
              返回限定此矩形 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时转换该路径指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定要应用于此路径，在计算的边框之前的转换。
                 此路径不永久转换;仅在计算的边框的过程使用转换。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定此矩形 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>
              返回限定此矩形 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 时转换的当前路径由指定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 和与指定位置绘制 <see cref="T:System.Drawing.Pen" />。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定要应用于此路径，在计算的边框之前的转换。
                 此路径不永久转换;仅在计算的边框的过程使用转换。
              </param>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" /> 用来绘制 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定此矩形 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>
              获取最后一个点以 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 此数组 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.PointF" /> ，表示在此的最后一个点 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />。
            </summary>
      <param name="point">
                一个 <see cref="T:System.Drawing.Point" /> ，它指定要测试的位置。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" /> 并使用指定 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="pt">
                一个 <see cref="T:System.Drawing.Point" /> ，它指定要测试的位置。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制具有指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />。
            </summary>
      <param name="point">
                一个 <see cref="T:System.Drawing.PointF" /> ，它指定要测试的位置。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" /> 并使用指定 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="pt">
                一个 <see cref="T:System.Drawing.PointF" /> ，它指定要测试的位置。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制具有指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" /> 并使用指定 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制具有指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
              指示是否指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制并用指定 <see cref="T:System.Drawing.Pen" /> 并使用指定 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="pen">
                要测试的 <see cref="T:System.Drawing.Pen" />。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在 （下） 此大纲 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 绘制具有指定 <see cref="T:System.Drawing.Pen" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="point">
                一个 <see cref="T:System.Drawing.Point" /> ，表示要测试的点。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="pt">
                一个 <see cref="T:System.Drawing.Point" /> ，表示要测试的点。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="point">
                一个 <see cref="T:System.Drawing.PointF" /> ，表示要测试的点。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="pt">
                一个 <see cref="T:System.Drawing.PointF" /> ，表示要测试的点。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 指定的点是否包含在此; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, ，使用指定 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
              指示指定的点是否包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中指定的可见剪辑区域 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 要测试可见性。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的点包含在此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>
              清空 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组和设置 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 到 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>
              中的点的顺序反转 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 此数组 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>
              对此设置标记 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>
              开始一个新图形而不关闭当前图形。
               所有后续的点添加到的路径添加到此新的图形。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              一个转换矩阵应用到此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它表示要应用的转换。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>
              应用 warp 转换，由一个矩形和一个平行四边形，到此定义 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="destPoints">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义一个平行四边形的定义的矩形的结构 <paramref name="srcRect" /> 转换。
                 该数组可以包含三个或四个元素。
                 如果数组包含三个元素，平行四边形的右下角所隐含的前三个点。
              </param>
      <param name="srcRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示传递给定义的平行四边形的矩形的转换 <paramref name="destPoints" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>
              应用 warp 转换，由一个矩形和一个平行四边形，到此定义 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="destPoints">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义一个平行四边形的定义的矩形的结构 <paramref name="srcRect" /> 转换。
                 该数组可以包含三个或四个元素。
                 如果数组包含三个元素，平行四边形的右下角所隐含的前三个点。
              </param>
      <param name="srcRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示传递给定义的平行四边形的矩形的转换 <paramref name="destPoints" />。
              </param>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定要应用于路径的几何变换。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>
              适用定义一个矩形和一个平行四边形，至此 warp 变换 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="destPoints">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义一个平行四边形，向其定义的矩形的结构 <paramref name="srcRect" /> 转换。
                 该数组可以包含三个或四个元素。
                 如果数组包含三个元素，平行四边形的右下角所隐含的前三个点。
              </param>
      <param name="srcRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示传递给定义的平行四边形的矩形的转换 <paramref name="destPoints" />。
              </param>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定要应用于路径的几何变换。
              </param>
      <param name="warpMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 枚举，用于指定此 warp 操作使用角度来看或双线性模式。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>
              应用 warp 转换，由一个矩形和一个平行四边形，到此定义 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="destPoints">
                一个数组 <see cref="T:System.Drawing.PointF" /> 定义一个平行四边形的定义的矩形的结构 <paramref name="srcRect" /> 转换。
                 该数组可以包含三个或四个元素。
                 如果数组包含三个元素，平行四边形的右下角所隐含的前三个点。
              </param>
      <param name="srcRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示传递给定义的平行四边形的矩形的转换 <paramref name="destPoints" />。
              </param>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定要应用于路径的几何变换。
              </param>
      <param name="warpMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 枚举，用于指定此 warp 操作使用角度来看或双线性模式。
              </param>
      <param name="flatness">
                是一个介于 0 或 1，用于指定如何展平的生成路径。
                 有关详细信息，请参阅 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 方法。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>
              向路径添加附加的轮廓。
            </summary>
      <param name="pen">
                一个 <see cref="T:System.Drawing.Pen" /> ，它指定之间的路径的原始轮廓和此方法创建的新轮廓的宽度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>
              添加到附加轮廓 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="pen">
                一个 <see cref="T:System.Drawing.Pen" /> ，它指定之间的路径的原始轮廓和此方法创建的新轮廓的宽度。
              </param>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定一个转换，以便在扩大转换之前应用到该路径。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>
              替换此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ，用包含用指定的钢笔绘制此路径时，将填入的区域曲线。
            </summary>
      <param name="pen">
                一个 <see cref="T:System.Drawing.Pen" /> ，它指定之间的路径的原始轮廓和此方法创建的新轮廓的宽度。
              </param>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，它指定一个转换，以便在扩大转换之前应用到该路径。
              </param>
      <param name="flatness">
                该值指定曲线展平。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 类与指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 此帮助器类要为其进行初始化的对象。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>
              副本 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 属性和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 关联的属性数组 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到两个指定的数组。
            </summary>
      <param name="points">
                返回时，包含数组的 <see cref="T:System.Drawing.PointF" /> 这些结构表示要在路径中的点。
              </param>
      <param name="types">
                返回时，包含表示路径中点的类型的字节数组。
              </param>
      <param name="startIndex">
                指定数组的起始索引。
              </param>
      <param name="endIndex">
                指定数组的结尾索引。
              </param>
      <returns>
              复制的磅数。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>
              副本 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 属性和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 关联的属性数组 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到两个指定的数组。
            </summary>
      <param name="points">
                返回时，包含数组的 <see cref="T:System.Drawing.PointF" /> 这些结构表示要在路径中的点。
              </param>
      <param name="types">
                返回时，包含表示路径中点的类型的字节数组。
              </param>
      <returns>
              复制的磅数。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>
              指示与此关联的路径是否 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 包含曲线。
            </summary>
      <returns>
              此方法返回 <see langword="true" /> 如果当前的子路径包含一条曲线; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              这 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 对象具有 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象与之关联。
              <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> 方法递增关联 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到其路径和第二个包含的当前标记与下一个标记 （或路径的末尾） 之间的所有点的副本中的下一个标记 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象传递给该参数。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 点将复制到对象。
              </param>
      <returns>
              此标记和下一步之间的点的数目。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>
              增量 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 到的路径和返回通过 [out] 参数的开始和停止跟踪索引中的下一个标记。
            </summary>
      <param name="startIndex">
                [] out提供给此参数的整数引用接收的点开始子路径的索引。
              </param>
      <param name="endIndex">
                [] out提供给此参数的整数引用接收到的子路径的结束点的索引 <paramref name="startIndex" /> 磅为单位。
              </param>
      <returns>
              此标记和下一步之间的点的数目。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>
              获取的起始索引和下一组数据的结束索引指向所有具有相同的类型。
            </summary>
      <param name="pathType">
                [] out接收共享的所有数据点在组中的 point 类型。
                 可能的类型可以检索从 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 枚举。
              </param>
      <param name="startIndex">
                [] out收到的一组点的起始索引。
              </param>
      <param name="endIndex">
                [] out收到的一组点的结束索引。
              </param>
      <returns>
              此方法返回组中的数据点数目。
               如果路径中有没有更多的组，此方法将返回 0。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>
              获取下一步图 （子路径） 的关联路径 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ，它用于对其数据点进行设置以匹配此迭代器检索的图形 （子路径） 的数据点。
              </param>
      <param name="isClosed">
                [] out指示是否关闭当前的子路径。
                 它是 <see langword="true" /> if 图是如果关闭，否则它就是 <see langword="false" />。
              </param>
      <returns>
              检索到的图 （子路径） 中的数据点数目。
               如果不有任何要检索的多个图形，则返回零。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>
              将移动 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 到路径中的下一步子路径。
               [Out] 参数中包含的起始索引和最终索引的下一步的子路径。
            </summary>
      <param name="startIndex">
                [] out接收的下一步的子路径的起始索引。
              </param>
      <param name="endIndex">
                [] out接收的下一步的子路径的结束索引。
              </param>
      <param name="isClosed">
                [] out指示是否关闭子路径。
              </param>
      <returns>
              中的子路径数 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>
              对此进行倒带 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 到其关联路径的开头。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 类与指定 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 枚举和前景色。
            </summary>
      <param name="hatchstyle">
                其中一个 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值，该值表示所绘制的这图案 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
              </param>
      <param name="foreColor">
                <see cref="T:System.Drawing.Color" /> 结构，它表示此绘制的线条的颜色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 类与指定 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 枚举、 前景色和背景色。
            </summary>
      <param name="hatchstyle">
                其中一个 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值，该值表示所绘制的这图案 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
              </param>
      <param name="foreColor">
                <see cref="T:System.Drawing.Color" /> 结构，它表示此绘制的线条的颜色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
              </param>
      <param name="backColor">
                <see cref="T:System.Drawing.Color" /> 结构，它表示空间之间由此绘制的线条的颜色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 此方法创建的、 强制转换为一个对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类具有两个指定的点和颜色。
            </summary>
      <param name="point1">
                一个 <see cref="T:System.Drawing.Point" /> 结构，它表示线性渐变的起始点。
              </param>
      <param name="point2">
                一个 <see cref="T:System.Drawing.Point" /> 结构，它表示线性渐变的终结点。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示线性渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示线性渐变的结束颜色。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类具有两个指定的点和颜色。
            </summary>
      <param name="point1">
                一个 <see cref="T:System.Drawing.PointF" /> 结构，它表示线性渐变的起始点。
              </param>
      <param name="point2">
                一个 <see cref="T:System.Drawing.PointF" /> 结构，它表示线性渐变的终结点。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示线性渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示线性渐变的结束颜色。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
              创建的新实例 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类根据一个矩形，开始和结束颜色以及方向。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它指定线性渐变的边界。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的结束颜色。
              </param>
      <param name="linearGradientMode">
                一个 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 枚举元素，它指定渐变的方向。
                 方向决定的渐变的起始和结束点。
                 例如， <see langword="LinearGradientMode.ForwardDiagonal" /> 指定的起始点是该矩形的左上角和结束点是矩形右下角。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
              创建的新实例 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类根据一个矩形，开始和结束颜色以及方向角度。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它指定线性渐变的边界。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的结束颜色。
              </param>
      <param name="angle">
                以度数为单位从 x 轴顺时针方向的渐变线的角度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
              创建的新实例 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类根据一个矩形，开始和结束颜色以及方向角度。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它指定线性渐变的边界。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的结束颜色。
              </param>
      <param name="angle">
                以度数为单位从 x 轴顺时针方向的渐变线的角度。
              </param>
      <param name="isAngleScaleable">
                设置为 <see langword="true" /> 指定角度受与此关联的转换 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
              创建的新实例 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 根据矩形、 开始和结束颜色以及方向模式。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它指定线性渐变的边界。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的结束颜色。
              </param>
      <param name="linearGradientMode">
                一个 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 枚举元素，它指定渐变的方向。
                 方向决定的渐变的起始和结束点。
                 例如， <see langword="LinearGradientMode.ForwardDiagonal" /> 指定的起始点是该矩形的左上角和结束点是矩形右下角。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
              创建的新实例 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类根据一个矩形，开始和结束颜色以及方向角度。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它指定线性渐变的边界。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的结束颜色。
              </param>
      <param name="angle">
                以度数为单位从 x 轴顺时针方向的渐变线的角度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
              创建的新实例 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类根据一个矩形，开始和结束颜色以及方向角度。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它指定线性渐变的边界。
              </param>
      <param name="color1">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的开始颜色。
              </param>
      <param name="color2">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示的渐变的结束颜色。
              </param>
      <param name="angle">
                以度数为单位从 x 轴顺时针方向的渐变线的角度。
              </param>
      <param name="isAngleScaleable">
                设置为 <see langword="true" /> 指定角度受与此关联的转换 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 此方法创建的、 强制转换为一个对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              乘以 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，表示此局部几何变换 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 由指定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 通过预先计算指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> 用来乘的几何变换。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              乘以 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，表示此局部几何变换 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 由指定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 按照指定的顺序。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> 用来乘的几何变换。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> ，它指定按什么顺序两个矩阵相乘。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>
              重置 <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> 属性设置为标识。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>
              将局部几何变换旋转指定的量。
               此方法将追加到变换旋转。
            </summary>
      <param name="angle">
                旋转角度。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将局部几何变换旋转指定的顺序指定的量。
            </summary>
      <param name="angle">
                旋转角度。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
              将局部几何变换缩放指定的量。
               此方法将前面添加缩放矩阵的转换。
            </summary>
      <param name="sx">
                沿 x 轴方向缩放变换的量。
              </param>
      <param name="sy">
                沿 y 轴方向缩放变换的量。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              刻度将局部几何变换以指定顺序指定的数量。
            </summary>
      <param name="sx">
                沿 x 轴方向缩放变换的量。
              </param>
      <param name="sy">
                沿 y 轴方向缩放变换的量。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
              使用中间颜色和线性过渡到两端一种颜色创建线性渐变。
            </summary>
      <param name="focus">
                介于 0 和 1 指定渐变 （渐变构成的点仅的结束颜色） 的中心值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
              使用中间颜色和线性过渡到两端一种颜色创建线性渐变。
            </summary>
      <param name="focus">
                介于 0 和 1 指定渐变 （渐变构成的点仅的结束颜色） 的中心值。
              </param>
      <param name="scale">
                取值范围为 0 指定颜色过渡的过渡速度从起始颜色的 through1 <paramref name="focus" /> （结束色） 
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
              创建基于钟形曲线的渐变过渡过程。
            </summary>
      <param name="focus">
                介于 0 和 1 指定渐变 （其中均匀混合的开始颜色和结束颜色的点） 的中心值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>
              创建基于钟形曲线的渐变过渡过程。
            </summary>
      <param name="focus">
                介于 0 和 1 指定渐变 （渐变构成的点仅的结束颜色） 的中心值。
              </param>
      <param name="scale">
                一个介于 0 到 1，指定颜色过渡的过渡速度从 <paramref name="focus" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
              将局部几何变换平移指定尺寸。
               此方法预先计算转换的转换。
            </summary>
      <param name="dx">
                X 方向的转换值。
              </param>
      <param name="dy">
                Y 方向的转换值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将局部几何变换平移指定的顺序指定的尺寸。
            </summary>
      <param name="dx">
                X 方向的转换值。
              </param>
      <param name="dy">
                Y 方向的转换值。
              </param>
      <param name="order">
                应用转换的顺序（在前面添加或在后面追加）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>
              将 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的一个新实例初始化为单位矩阵。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>
              将 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的一个新实例初始化为指定矩形和点数组定义的几何变换。
            </summary>
      <param name="rect">
                表示将变换的矩形的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <param name="plgpts">
                一个由三个 <see cref="T:System.Drawing.Point" /> 结构构成的数组，该数组表示矩形的左上角、右上角和左下角将变换为的平行四边形的三个点。
                 平行四边形的右下角的位置可从前三个角的位置导出。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>
              将 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的一个新实例初始化为指定矩形和点数组定义的几何变换。
            </summary>
      <param name="rect">
                表示将变换的矩形的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <param name="plgpts">
                一个由三个 <see cref="T:System.Drawing.PointF" /> 结构构成的数组，该数组表示矩形的左上角、右上角和左下角将变换为的平行四边形的三个点。
                 平行四边形的右下角的位置可从前三个角的位置导出。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              使用指定的元素初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 类的新实例。
            </summary>
      <param name="m11">
                新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一行和第一列中的值。
              </param>
      <param name="m12">
                新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一行和第二列中的值。
              </param>
      <param name="m21">
                新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二行和第一列中的值。
              </param>
      <param name="m22">
                新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二行和第二列中的值。
              </param>
      <param name="dx">
                新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三行和第一列中的值。
              </param>
      <param name="dy">
                新的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三行和第二列中的值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的一个精确副本。
            </summary>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>
              测试指定的对象是否是 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 以及是否与此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相同。
            </summary>
      <param name="obj">
                要测试的对象。
              </param>
      <returns>
              如果 <paramref name="obj" /> 是等同于此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />，则该方法返回 <see langword="true" />；否则返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>
              返回哈希代码。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>
              如果此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是可逆转的，则进行逆转。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>
              通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，将此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与 <paramref name="matrix" /> 参数中指定的矩阵相乘。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" />，此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 将与之相乘。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与 <paramref name="matrix" /> 参数中指定的矩阵相乘，而且采用 <paramref name="order" /> 参数中指定的顺序。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" />，此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 将与之相乘。
              </param>
      <param name="order">
                <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，表示乘法的顺序。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>
              重置此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 得到单位矩阵的元素。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>
              预先计算此 <see cref="T:System.Drawing.Drawing2D.Matrix" />，沿原点并按指定角度顺时针旋转。
            </summary>
      <param name="angle">
                旋转的角度（单位：度）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按照 <paramref name="angle" /> 参数中指定的顺时针旋转量，对此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 沿原点（X 和 Y 坐标为零处）旋转。
            </summary>
      <param name="angle">
                旋转角度（范围）（单位：度）。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定旋转此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 时所采用的顺序（追加或预先计算）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>
              沿 <paramref name="point" /> 参数中指定的点并通过预先计算该旋转，来顺时针旋转此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="angle">
                旋转角度（范围）（单位：度）。
              </param>
      <param name="point">
                一个 <see cref="T:System.Drawing.PointF" />，表示旋转中心。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按指定的顺序，沿指定点顺时针旋转该 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="angle">
                旋转的角度（单位：度）。
              </param>
      <param name="point">
                一个 <see cref="T:System.Drawing.PointF" />，表示旋转中心。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定旋转的顺序（追加或预先计算）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>
              通过预先计算比例向量，将指定的比例向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="scaleX">
                此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 X 轴方向缩放的值。
              </param>
      <param name="scaleY">
                此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 Y 轴方向缩放的值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              使用指定的顺序，将指定的比例向量（<paramref name="scaleX" /> 和 <paramref name="scaleY" />）应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="scaleX">
                此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 X 轴方向缩放的值。
              </param>
      <param name="scaleY">
                此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 在 Y 轴方向缩放的值。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定应用比例向量到此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的顺序（追加或预先计算）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>
              通过预先计算切变变换，将指定的切变向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="shearX">
                水平切变因子。
              </param>
      <param name="shearY">
                垂直切变因子。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按指定的顺序，将指定的切变向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="shearX">
                水平切变因子。
              </param>
      <param name="shearY">
                垂直切变因子。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定应用切变所采用的顺序（追加或预先计算）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>
              对指定的点数组应用此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的几何变换。
            </summary>
      <param name="pts">
                一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>
              对指定的点数组应用此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的几何变换。
            </summary>
      <param name="pts">
                一个 <see cref="T:System.Drawing.PointF" /> 结构的数组，它表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>
              只将该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的缩放和旋转成分应用到指定的点数组。
            </summary>
      <param name="pts">
                一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>
              将数组中的每个矢量与矩阵相乘。
               该矩阵的转换元素（第三行）被忽略。
            </summary>
      <param name="pts">
                一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>
              通过预先计算转换向量，将指定的转换向量（<paramref name="offsetX" /> 和 <paramref name="offsetY" />）应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="offsetX">
                x 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
      <param name="offsetY">
                y 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按指定的顺序，将指定的转换向量应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="offsetX">
                x 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
      <param name="offsetY">
                y 值，通过它转换此 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定将转换应用到此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所采用的顺序（追加或预先计算）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>
              将数组中的每个矢量与矩阵相乘。
               该矩阵的转换元素（第三行）被忽略。
            </summary>
      <param name="pts">
                一个 <see cref="T:System.Drawing.Point" /> 结构的数组，它表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Drawing2D.PathData" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类，具有指定的路径。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 定义此填充的区域 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 使用指定的点的类。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示要构成路径的顶点的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类使用指定的点和环绕模式。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.Point" /> 这些结构表示要构成路径的顶点的点。
              </param>
      <param name="wrapMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> ，它指定如何与此绘制填充 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 平铺。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 使用指定的点的类。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示要构成路径的顶点的点。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 类使用指定的点和环绕模式。
            </summary>
      <param name="points">
                一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示要构成路径的顶点的点。
              </param>
      <param name="wrapMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> ，它指定如何与此绘制填充 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 平铺。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 此方法创建的、 强制转换为一个对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              更新与另一个矩阵相乘的画笔的变换矩阵的乘积画笔的变换矩阵。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，将乘以该画笔的当前变换矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              更新与另一个矩阵相乘的画笔的变换矩阵的乘积画笔的变换矩阵。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，将乘以该画笔的当前变换矩阵。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> ，它指定按什么顺序两个矩阵相乘。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>
              重置 <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> 属性设置为标识。
            </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>
              将局部几何变换旋转指定的量。
               此方法将追加到变换旋转。
            </summary>
      <param name="angle">
                旋转角度 （范围）。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将局部几何变换旋转指定的顺序指定的量。
            </summary>
      <param name="angle">
                旋转角度 （范围）。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
              将局部几何变换缩放指定的量。
               此方法将前面添加缩放矩阵的转换。
            </summary>
      <param name="sx">
                沿 x 轴方向的转换缩放比例。
              </param>
      <param name="sy">
                Y 轴方向的转换缩放比例。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              刻度将局部几何变换以指定顺序指定的数量。
            </summary>
      <param name="sx">
                沿 x 轴方向的转换缩放比例。
              </param>
      <param name="sy">
                Y 轴方向的转换缩放比例。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
              创建具有中心颜色和向周围色线性过渡的渐变。
            </summary>
      <param name="focus">
                介于 0 和 1 指定，沿任意半径向上路径中心到路径的边界，中间颜色将在其中亮度最高值。
                 如果值为 1 （默认值） 将最高亮度放在路径的中心。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
              创建具有中心颜色和向各周围色线性过渡的渐变。
            </summary>
      <param name="focus">
                介于 0 和 1 指定，沿任意半径向上路径中心到路径的边界，中间颜色将在其中亮度最高值。
                 如果值为 1 （默认值） 将最高亮度放在路径的中心。
              </param>
      <param name="scale">
                介于 0 和 1 指定的最大强度获取与边界色混合的中间颜色值。
                 如果值为 1 导致中心颜色的亮度最高可能，并且它是默认值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
              创建更改的中心向外的路径从开始到路径的边界的颜色渐变画笔。
               从一种颜色过渡到另一个基于钟形曲线。
            </summary>
      <param name="focus">
                介于 0 和 1 指定，沿任意半径向上路径中心到路径的边界，中间颜色将在其中亮度最高值。
                 如果值为 1 （默认值） 将最高亮度放在路径的中心。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>
              创建更改的中心向外的路径从开始到路径的边界的颜色渐变画笔。
               从一种颜色过渡到另一个基于钟形曲线。
            </summary>
      <param name="focus">
                介于 0 和 1 指定，沿任意半径向上路径中心到路径的边界，中间颜色将在其中亮度最高值。
                 如果值为 1 （默认值） 将最高亮度放在路径的中心。
              </param>
      <param name="scale">
                介于 0 和 1 指定的最大强度获取与边界色混合的中间颜色值。
                 如果值为 1 导致中心颜色的亮度最高可能，并且它是默认值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
              将指定的平移应用于局部几何变换。
               此方法预先计算转换的转换。
            </summary>
      <param name="dx">
                X 方向的转换值。
              </param>
      <param name="dy">
                Y 方向的转换值。
              </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将指定的平移应用于局部几何变换以指定顺序。
            </summary>
      <param name="dx">
                X 方向的转换值。
              </param>
      <param name="dy">
                Y 方向的转换值。
              </param>
      <param name="order">
                应用转换的顺序（在前面添加或在后面追加）。
              </param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>
              初始化新 <see cref="T:System.Drawing.Font" />，它使用指定的现有 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.FontStyle" /> 枚举。
            </summary>
      <param name="prototype">
                从中创建新 <see cref="T:System.Drawing.Font" /> 的现有 <see cref="T:System.Drawing.Font" />。
              </param>
      <param name="newStyle">
                应用于新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontStyle" />。
                 可以用 <see langword="OR" /> 运算符将 <see cref="T:System.Drawing.FontStyle" /> 枚举的多个值组合起来。
              </param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>
              使用指定的大小初始化新 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="family">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。
              </param>
      <param name="emSize">
                新字体的全身大小（以磅为单位）。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>
              使用指定的大小和样式初始化新 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="family">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。
              </param>
      <param name="emSize">
                新字体的全身大小（以磅为单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="family" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>
              使用指定的大小、样式和单位初始化新的 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="family">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="family" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>
              使用指定的大小、样式、单位和字符集初始化新的 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="family">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <param name="gdiCharSet">
                一个 <see cref="T:System.Byte" />，它指定 
              
                用于新字体的 GDI 字符集。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="family" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>
              使用指定的大小、样式、单位和字符集初始化新的 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="family">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <param name="gdiCharSet">
                一个 <see cref="T:System.Byte" />，它指定 
              
                用于此字体的 GDI 字符集。
              </param>
      <param name="gdiVerticalFont">
                一个布尔值，该值指示新字体是否从 GDI 垂直字体派生。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="family" /> 为 <see langword="null " />
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
              使用指定的大小和单位初始化新的 <see cref="T:System.Drawing.Font" />。
               将此样式设置为 <see cref="F:System.Drawing.FontStyle.Regular" />。
            </summary>
      <param name="family">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="family" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>
              使用指定的大小初始化新 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="familyName">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。
              </param>
      <param name="emSize">
                新字体的全身大小（以磅为单位）。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无限大或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>
              使用指定的大小和样式初始化新 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="familyName">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。
              </param>
      <param name="emSize">
                新字体的全身大小（以磅为单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>
              使用指定的大小、样式和单位初始化新的 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="familyName">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无限大或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>
              使用指定的大小、样式、单位和字符集初始化新的 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="familyName">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <param name="gdiCharSet">
                一个 <see cref="T:System.Byte" />，它指定用于此字体的 GDI 字符集。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>
              使用指定的大小、样式、单位和字符集初始化新 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="familyName">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="style">
                新字体的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <param name="gdiCharSet">
                一个 <see cref="T:System.Byte" />，它指定用于此字体的 GDI 字符集。
              </param>
      <param name="gdiVerticalFont">
                一个布尔值，该值指示新 <see cref="T:System.Drawing.Font" /> 是否从 GDI 垂直字体派生。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
              使用指定的大小和单位初始化新的 <see cref="T:System.Drawing.Font" />。
               样式设置为 <see cref="F:System.Drawing.FontStyle.Regular" />。
            </summary>
      <param name="familyName">
                新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" /> 的字符串表示形式。
              </param>
      <param name="emSize">
                新字体的全身大小（采用 <paramref name="unit" /> 参数指定的单位）。
              </param>
      <param name="unit">
                新字体的 <see cref="T:System.Drawing.GraphicsUnit" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="emSize" /> 是小于或等于 0，计算结果为无穷大，或者不是有效的数字。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Font" /> 的一个精确副本。
            </summary>
      <returns>
              此方法创建的、强制转换为 <see cref="T:System.Object" /> 的 <see cref="T:System.Drawing.Font" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Font" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>
              指示指定对象是否为 <see cref="T:System.Drawing.Font" />，以及是否具有与此 <see cref="T:System.Drawing.Font" /> 相同的 <see cref="P:System.Drawing.Font.FontFamily" />、<see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" /> 和 <see cref="P:System.Drawing.Font.Unit" /> 属性值。
            </summary>
      <param name="obj">
                要测试的对象。
              </param>
      <returns>
              如果 <paramref name="obj" /> 参数为 <see cref="T:System.Drawing.Font" /> 并且具有与此 <see cref="T:System.Drawing.Font" /> 相同的 <see cref="P:System.Drawing.Font.FontFamily" />、<see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" /> 和 <see cref="P:System.Drawing.Font.Unit" /> 属性值，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Font.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>
              从设备上下文的指定 Windows 句柄创建 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="hdc">
                设备上下文的句柄。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Font" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  指定的设备上下文的字体不 TrueType 字体。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>
              从指定的 Windows 句柄创建一个 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="hfont">
                
                  GDI 字体的 Windows 句柄。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Font" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="hfont" /> 指向一个对象，它不 TrueType 字体。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>
              从指定的 GDI 逻辑字体 (LOGFONT) 结构创建一个 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="lf">
                一个 <see cref="T:System.Object" />，它表示从中创建 <see cref="T:System.Drawing.Font" /> 的 GDI <see langword="LOGFONT" /> 结构。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Font" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>
              从指定的 GDI 逻辑字体 (LOGFONT) 结构创建一个 <see cref="T:System.Drawing.Font" />。
            </summary>
      <param name="lf">
                一个 <see cref="T:System.Object" />，它表示从中创建 <see cref="T:System.Drawing.Font" /> 的 GDI <see langword="LOGFONT" /> 结构。
              </param>
      <param name="hdc">
                包含有关 <paramref name="lf" /> 结构的其他信息的设备上下文的句柄。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Font" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  不，该字体为 TrueType 字体。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>
              获取此 <see cref="T:System.Drawing.Font" /> 的哈希代码。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Font" /> 的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>
              返回此字体的行距（以像素为单位）。
            </summary>
      <returns>
              此字体的行距（以像素为单位）。
            </returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>
              采用指定的 <see cref="T:System.Drawing.Graphics" /> 的当前单位，返回此字体的行距。
            </summary>
      <param name="graphics">
                一个 <see cref="T:System.Drawing.Graphics" /> 对象，它存储显示设备的垂直分辨率（每英寸点数）、页面单位和页面比例设置。
              </param>
      <returns>
              此字体的行距（以像素为单位）。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="graphics" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>
              当用指定的垂直分辨率绘制到设备时，返回此 <see cref="T:System.Drawing.Font" /> 的高度（以像素为单位）。
            </summary>
      <param name="dpi">
                用于计算字体高度的垂直分辨率，以每英寸的点数为单位。
              </param>
      <returns>
              此 <see cref="T:System.Drawing.Font" /> 的高度（以像素为单位）。
            </returns>
    </member>
    <member name="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="si">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>
              返回此 <see cref="T:System.Drawing.Font" /> 的句柄。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Font" /> 的 Windows 句柄。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  该操作不成功。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>
              从此 <see cref="T:System.Drawing.Font" /> 创建一个 GDI 逻辑字体 (LOGFONT) 结构。
            </summary>
      <param name="logFont">
                一个 <see cref="T:System.Object" />，它表示此方法创建的 <see langword="LOGFONT" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>
              从此 <see cref="T:System.Drawing.Font" /> 创建一个 GDI 逻辑字体 (LOGFONT) 结构。
            </summary>
      <param name="logFont">
                一个 <see cref="T:System.Object" />，它表示此方法创建的 <see langword="LOGFONT" /> 结构。
              </param>
      <param name="graphics">
                一个 <see cref="T:System.Drawing.Graphics" />，它提供 <see langword="LOGFONT" /> 结构的其他信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="graphics" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>
              返回此 <see cref="T:System.Drawing.Font" /> 可读的字符串表示形式。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.Font" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>
              初始化新的 <see cref="T:System.Drawing.FontConverter" /> 对象。
            </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定此转换器是否可以将指定的源类型的对象转换为该转换器的本机类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="sourceType">
                您想要将从转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此对象可以执行转换。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              获取一个值，该值指示此转换器是否可以将对象转换为给定的目标类型使用的上下文。
            </summary>
      <param name="context">
                <see langword="ITypeDescriptorContext" /> 提供格式上下文的对象。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> 对象，表示要转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果该转换器能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              将指定的对象转换为转换器的本机类型。
            </summary>
      <param name="context">
                格式化程序上下文。
                 此对象可用来获取有关从中调用该转换器的环境的其他信息。
                 这可能是<see langword="null" />，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回<see langword="null" />。
              </param>
      <param name="culture">
                A<see langword="CultureInfo" />对象，它指定用于表示字体的区域性。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将指定的对象转换为另一种类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定用于表示该对象的区域性。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                要转换到的对象的数据类型。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  转换不成功。
                </exception>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
              为该对象使用一组指定的属性值创建此类型的对象。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <param name="propertyValues">
                新属性值的字典。
                 字典中包含一系列名称 / 值对，一个用于每个属性返回从 <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> 方法。
              </param>
      <returns>
              新创建的对象，或 <see langword="null" /> 如果无法创建该对象。
               默认实现返回 <see langword="null" />。
            
              <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 用于创建具有可更改属性的非可更改对象很有用。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.Finalize">
      <summary>
              允许 <see cref="T:System.Drawing.FontConverter" /> 尝试释放资源并执行其他清理操作之前 <see cref="T:System.Drawing.FontConverter" /> 通过垃圾回收回收。
            </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否此转换器可以将给定的源类型的对象转换为该转换器的本机类型。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来提取有关从中调用此转换器的环境的附加信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <param name="sourceType">
                要从转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果该转换器能够执行转换，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              将给定的对象转换为转换器的本机类型。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来提取有关从中调用此转换器的环境的附加信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 用来执行转换 
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              检索包含一组适用于此转换器的数据类型的标准值的集合。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来提取有关从中调用此转换器的环境的附加信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <returns>
              一个包含一组标准的有效的值的集合或 <see langword="null" />。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定从是否返回的标准值列表 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 方法为独占列表。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来提取有关从中调用此转换器的环境的附加信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <returns>
              <see langword="true" /> 如果从集合返回 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />是可能的值的独占列表; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定此对象是否支持可以从列表中选取的值的标准集。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来提取有关从中调用此转换器的环境的附加信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性可能返回 <see langword="null" />。
              </param>
      <returns>
              如果应调用 <see langword="true" /> 来查找对象支持的一组公共值，则为 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>
              执行与释放或重置非托管资源关联的应用程序定义的任务。
            </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.FontConverter.FontUnitConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              返回标准值的集合，对有效 <see cref="T:System.Drawing.Font" /> 类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定是否更改此对象上的某个值是否需要对调用 <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> 方法来创建一个新值。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <see langword="CreateInstance" /> 更改时发出此对象的一个或多个属性; 否则为应调用对象 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
              检索此类型的属性集。
               默认情况下，一种类型没有要返回的任何属性。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <param name="value">
                要获取的属性的对象的值。
              </param>
      <param name="attributes">
                一个数组 <see cref="T:System.Attribute" /> 描述属性的对象。
              </param>
      <returns>
              此数据类型不应公开的属性集。
               如果应公开任何属性，这可能会返回 <see langword="null" />。
               默认实现始终返回 <see langword="null" />。
            
              可以调用此方法的简单实现 <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> 为正确的数据类型的方法。
            </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定此对象是否支持属性。
               默认值为 <see langword="false" />。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 方法应该调用来查找此对象的属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>
              从指定的一般字体系列初始化新 <see cref="T:System.Drawing.FontFamily" />。
            </summary>
      <param name="genericFamily">
                从中创建新 <see cref="T:System.Drawing.FontFamily" /> 的 <see cref="T:System.Drawing.Text.GenericFontFamilies" />。
              </param>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>
              用指定的名称初始化新 <see cref="T:System.Drawing.FontFamily" />。
            </summary>
      <param name="name">
                新 <see cref="T:System.Drawing.FontFamily" /> 的名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="name" /> 为空字符串 ("")。
                
                  - 或 -
                
                  <paramref name="name" /> 指定运行该应用程序的计算机未安装的字体。
                
                  - 或 -
                
                  <paramref name="name" /> 指定不是 TrueType 字体的字体。
                </exception>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>
              使用指定名称初始化指定的 <see cref="T:System.Drawing.Text.FontCollection" /> 中的新 <see cref="T:System.Drawing.FontFamily" />。
            </summary>
      <param name="name">
                一个 <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.FontFamily" /> 的名称。
              </param>
      <param name="fontCollection">
                包含此 <see cref="T:System.Drawing.FontFamily" /> 的 <see cref="T:System.Drawing.Text.FontCollection" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="name" /> 为空字符串 ("")。
                
                  - 或 -
                
                  <paramref name="name" /> 指定运行该应用程序的计算机未安装的字体。
                
                  - 或 -
                
                  <paramref name="name" /> 指定不是 TrueType 字体的字体。
                </exception>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.FontFamily" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>
              指示指定的对象是否为 <see cref="T:System.Drawing.FontFamily" /> 以及是否与此 <see cref="T:System.Drawing.FontFamily" /> 相等。
            </summary>
      <param name="obj">
                要测试的对象。
              </param>
      <returns>
              如果 <paramref name="obj" /> 为 <see cref="T:System.Drawing.FontFamily" /> 且与此 <see cref="T:System.Drawing.FontFamily" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>
              返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的单元格上升，采用设计单位。
            </summary>
      <param name="style">
                <see cref="T:System.Drawing.FontStyle" />，它包含字体的样式信息。
              </param>
      <returns>
              使用了指定的 <see cref="T:System.Drawing.FontStyle" /> 的此 <see cref="T:System.Drawing.FontFamily" /> 的单元格上升。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>
              返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的单元格下降，采用设计单位。
            </summary>
      <param name="style">
                <see cref="T:System.Drawing.FontStyle" />，它包含字体的样式信息。
              </param>
      <returns>
              使用了指定的 <see cref="T:System.Drawing.FontStyle" /> 的此 <see cref="T:System.Drawing.FontFamily" /> 的单元格下降度量。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>
              获取指定样式的 em 方形的高度，采用字体设计单位。
            </summary>
      <param name="style">
                为其获取全身高度的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <returns>
              em 方形的高度。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>
              返回一个数组，该数组包含指定的图形上下文可用的所有 <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
      <param name="graphics">
                从其返回 <see cref="T:System.Drawing.FontFamily" /> 对象的 <see cref="T:System.Drawing.Graphics" /> 对象。
              </param>
      <returns>
              指定的 <see cref="T:System.Drawing.Graphics" /> 对象可用的 <see cref="T:System.Drawing.FontFamily" /> 对象的数组。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="graphics " /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>
              获取此 <see cref="T:System.Drawing.FontFamily" /> 的哈希代码。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.FontFamily" /> 的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>
              返回指定样式的 <see cref="T:System.Drawing.FontFamily" /> 的行距，采用设计单位。
               行距是两个连续文本行的基线之间的垂直距离。
            </summary>
      <param name="style">
                要应用的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <returns>
              两行相邻文本之间的距离。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>
              用指定的语言返回此 <see cref="T:System.Drawing.FontFamily" /> 的名称。
            </summary>
      <param name="language">
                返回此名称所用的语言。
              </param>
      <returns>
              一个 <see cref="T:System.String" />，它用指定的语言表示此 <see cref="T:System.Drawing.FontFamily" /> 的名称。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>
              指示指定的 <see cref="T:System.Drawing.FontStyle" /> 枚举是否可用。
            </summary>
      <param name="style">
                要测试的 <see cref="T:System.Drawing.FontStyle" />。
              </param>
      <returns>
              如果指定的 <see cref="T:System.Drawing.FontStyle" /> 可用，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>
              将此 <see cref="T:System.Drawing.FontFamily" /> 转换为可读的字符串表示形式。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.FontFamily" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>
              向当前 <see cref="T:System.Drawing.Imaging.Metafile" /> 添加注释。
            </summary>
      <param name="data">
                包含注释的字节的数组。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>
              保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用新的图形容器。
            </summary>
      <returns>
              此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
              保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用具有指定缩放变形的新图形容器。
            </summary>
      <param name="dstrect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它与 <paramref name="srcrect" /> 参数一起为容器指定缩放变换。
              </param>
      <param name="srcrect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它与 <paramref name="dstrect" /> 参数一起为容器指定缩放变换。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定容器的度量单位。
              </param>
      <returns>
              此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
              保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用具有指定缩放变形的新图形容器。
            </summary>
      <param name="dstrect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它与 <paramref name="srcrect" /> 参数一起为新的图形容器指定缩放变换。
              </param>
      <param name="srcrect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它与 <paramref name="dstrect" /> 参数一起为新的图形容器指定缩放变换。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定容器的度量单位。
              </param>
      <returns>
              此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>
              清除整个绘图面并以指定背景色填充。
            </summary>
      <param name="color">
                <see cref="T:System.Drawing.Color" /> 结构，它表示绘图面的背景色。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>
              执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。
            </summary>
      <param name="upperLeftSource">
                位于源矩形左上角的点。
              </param>
      <param name="upperLeftDestination">
                位于目标矩形左上角的点。
              </param>
      <param name="blockRegionSize">
                要传输的区域大小。
              </param>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>
              执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。
            </summary>
      <param name="upperLeftSource">
                位于源矩形左上角的点。
              </param>
      <param name="upperLeftDestination">
                位于目标矩形左上角的点。
              </param>
      <param name="blockRegionSize">
                要传输的区域大小。
              </param>
      <param name="copyPixelOperation">
                <see cref="T:System.Drawing.CopyPixelOperation" /> 值之一。
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="copyPixelOperation" /> 不是成员的 <see cref="T:System.Drawing.CopyPixelOperation" />。
                </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
      <summary>
              执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。
            </summary>
      <param name="sourceX">
                位于源矩形左上角的点的 x 坐标。
              </param>
      <param name="sourceY">
                位于源矩形左上角的点的 y 坐标。
              </param>
      <param name="destinationX">
                位于目标矩形左上角的点的 x 坐标。
              </param>
      <param name="destinationY">
                位于目标矩形左上角的点的 y 坐标。
              </param>
      <param name="blockRegionSize">
                要传输的区域大小。
              </param>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>
              执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。
            </summary>
      <param name="sourceX">
                位于源矩形左上角的点的 x 坐标。
              </param>
      <param name="sourceY">
                位于源矩形左上角的点的 y 坐标
              </param>
      <param name="destinationX">
                位于目标矩形左上角的点的 x 坐标。
              </param>
      <param name="destinationY">
                位于目标矩形左上角的点的 y 坐标。
              </param>
      <param name="blockRegionSize">
                要传输的区域大小。
              </param>
      <param name="copyPixelOperation">
                <see cref="T:System.Drawing.CopyPixelOperation" /> 值之一。
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="copyPixelOperation" /> 不是成员的 <see cref="T:System.Drawing.CopyPixelOperation" />。
                </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  操作失败。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Graphics" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              绘制一段弧线，它表示 <see cref="T:System.Drawing.Rectangle" /> 结构指定的椭圆的一部分。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。
              </param>
      <param name="startAngle">
                从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
              绘制一段弧线，它表示 <see cref="T:System.Drawing.RectangleF" /> 结构指定的椭圆的一部分。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。
              </param>
      <param name="startAngle">
                从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。
              </param>
      <param name="x">
                定义椭圆的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                定义椭圆的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                定义椭圆的矩形的宽度。
              </param>
      <param name="height">
                定义椭圆的矩形的高度。
              </param>
      <param name="startAngle">
                从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="rects" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="rects" /> 是长度为零的数组。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。
              </param>
      <param name="x">
                定义椭圆的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                定义椭圆的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                定义椭圆的矩形的宽度。
              </param>
      <param name="height">
                定义椭圆的矩形的高度。
              </param>
      <param name="startAngle">
                从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              绘制由 4 个 <see cref="T:System.Drawing.Point" /> 结构定义的贝塞尔样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" /> 结构，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="pt1">
                <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的起始点。
              </param>
      <param name="pt2">
                <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的第一个控制点。
              </param>
      <param name="pt3">
                <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的第二个控制点。
              </param>
      <param name="pt4">
                <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的结束点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
              绘制由 4 个 <see cref="T:System.Drawing.PointF" /> 结构定义的贝塞尔样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="pt1">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的起始点。
              </param>
      <param name="pt2">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的第一个控制点。
              </param>
      <param name="pt3">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的第二个控制点。
              </param>
      <param name="pt4">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的结束点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              绘制由四个表示点的有序坐标对定义的贝塞尔样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="x1">
                曲线起始点的 X 坐标。
              </param>
      <param name="y1">
                曲线起始点的 Y 坐标。
              </param>
      <param name="x2">
                曲线的第一个控制点的 X 坐标。
              </param>
      <param name="y2">
                曲线的第一个控制点的 Y 坐标。
              </param>
      <param name="x3">
                曲线的第二个控制点的 X 坐标。
              </param>
      <param name="y3">
                曲线的第二个控制点的 Y 坐标。
              </param>
      <param name="x4">
                曲线的结束点的 X 坐标。
              </param>
      <param name="y4">
                曲线的结束点的 Y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
              用 <see cref="T:System.Drawing.Point" /> 结构数组绘制一系列贝塞尔样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构的数组，这些结构表示确定曲线的点。
                 此数组中的点数应为 3 的倍数加 1，如 4、7 或 10。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
              用 <see cref="T:System.Drawing.PointF" /> 结构数组绘制一系列贝塞尔样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构的数组，这些结构表示确定曲线的点。
                 此数组中的点数应为 3 的倍数加 1，如 4、7 或 10。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
              绘制由 <see cref="T:System.Drawing.Point" /> 结构的数组定义的闭合基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>
              使用指定的张力绘制由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <param name="fillmode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。
                 需要此参数但被忽略。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
              绘制由 <see cref="T:System.Drawing.PointF" /> 结构的数组定义的闭合基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>
              使用指定的张力绘制由 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <param name="fillmode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。
                 需要此参数但被忽略。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
              绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>
              使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <param name="offset">
                从 <paramref name="points" /> 参数数组中的第一个元素到曲线中起始点的偏移量。
              </param>
      <param name="numberOfSegments">
                起始点之后要包含在曲线中的段数。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>
              使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
              绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>
              绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。
               从相对于数组开始位置的偏移量开始绘制。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <param name="offset">
                从 <paramref name="points" /> 参数数组中的第一个元素到曲线中起始点的偏移量。
              </param>
      <param name="numberOfSegments">
                起始点之后要包含在曲线中的段数。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
              使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。
               从相对于数组开始位置的偏移量开始绘制。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <param name="offset">
                从 <paramref name="points" /> 参数数组中的第一个元素到曲线中起始点的偏移量。
              </param>
      <param name="numberOfSegments">
                起始点之后要包含在曲线中的段数。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>
              使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构的数组，这些结构表示定义曲线的点。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
              绘制边界 <see cref="T:System.Drawing.Rectangle" /> 结构指定的椭圆。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它定义椭圆的边界。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>
              绘制边界 <see cref="T:System.Drawing.RectangleF" /> 定义的椭圆。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              绘制一个由边框定义的椭圆，该边框由矩形的左上角坐标、高度和宽度指定。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="x">
                定义椭圆的边框的左上角的 X 坐标。
              </param>
      <param name="y">
                定义椭圆的边框的左上角的 Y 坐标。
              </param>
      <param name="width">
                定义椭圆的边框的宽度。
              </param>
      <param name="height">
                定义椭圆的边框的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              绘制一个由边框（该边框由一对坐标、高度和宽度指定）定义的椭圆。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。
              </param>
      <param name="x">
                定义椭圆的边框的左上角的 X 坐标。
              </param>
      <param name="y">
                定义椭圆的边框的左上角的 Y 坐标。
              </param>
      <param name="width">
                定义椭圆的边框的宽度。
              </param>
      <param name="height">
                定义椭圆的边框的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
              在 <see cref="T:System.Drawing.Icon" /> 结构指定的区域内绘制指定的 <see cref="T:System.Drawing.Rectangle" /> 表示的图像。
            </summary>
      <param name="icon">
                要绘制的 <see cref="T:System.Drawing.Icon" />。
              </param>
      <param name="targetRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定显示面上结果图像的位置和大小。
                 将 <paramref name="icon" /> 参数中包含的图像缩放为此矩形区域的尺寸。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="icon" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
              在指定坐标处绘制由指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像。
            </summary>
      <param name="icon">
                要绘制的 <see cref="T:System.Drawing.Icon" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="icon" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
              绘制指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像，而不缩放该图像。
            </summary>
      <param name="icon">
                要绘制的 <see cref="T:System.Drawing.Icon" />。
              </param>
      <param name="targetRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 不缩放图像以适合此矩形的大小，但保留其原始大小。
                 如果该图像比该矩形大，将它剪裁到适合它的大小。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="icon" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>
              在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="point">
                <see cref="T:System.Drawing.Point" /> 结构，它表示所绘制图像的左上角的位置。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>
              在指定位置并且按指定形状和大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              在指定位置绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法的执行。
              </param>
      <param name="callbackData">
                一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法时要使用的附加数据。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>
              在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="point">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图像的左上角。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>
              在指定位置并且按指定形状和大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法的执行。
              </param>
      <param name="callbackData">
                一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法时要使用的附加数据。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <param name="imageAttrs">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法的执行。
              </param>
      <param name="callbackData">
                一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see langword="DrawImage" /> 方法时要使用的附加数据。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <param name="imageAttrs">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <param name="imageAttrs">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcX">
                要绘制的源图像部分的左上角的 x 坐标。
              </param>
      <param name="srcY">
                要绘制的源图像部分的左上角的 y 坐标。
              </param>
      <param name="srcWidth">
                要绘制的源图像部分的宽度。
              </param>
      <param name="srcHeight">
                要绘制的源图像部分的高度。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。
              </param>
      <param name="imageAttrs">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <paramref name="image" /> 对象的重新着色和伽玛信息。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。
                 此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法的执行。
              </param>
      <param name="callbackData">
                一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see langword="DrawImage" /> 方法时要使用的附加数据。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图像的位置和大小。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图像的位置和大小。
                 将图像进行缩放以适合该矩形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
              在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
              在指定的位置绘制图像的一部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <paramref name="image" /> 对象中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <param name="width">
                所绘制图像的宽度。
              </param>
      <param name="height">
                所绘制图像的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>
              在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
              在指定的位置绘制图像的一部分。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <see cref="T:System.Drawing.Image" /> 中要绘制的部分。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <paramref name="srcRect" /> 参数所用的度量单位。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <param name="width">
                所绘制图像的宽度。
              </param>
      <param name="height">
                所绘制图像的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>
              在指定的位置使用图像的原始物理大小绘制指定的图像。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="point">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图像的左上角。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
              在指定的位置使用图像的原始物理大小绘制指定的图像。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" />，它指定了所绘制图像的左上角。
                 该矩形的 X 和 Y 属性指定左上角。
                 宽度和高度属性被忽略。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
              在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              在指定的位置使用图像的原始物理大小绘制指定的图像。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="x">
                所绘制图像的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制图像的左上角的 y 坐标。
              </param>
      <param name="width">
                未使用。
              </param>
      <param name="height">
                未使用。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
              在不进行缩放的情况下绘制指定的图像，并在需要时剪辑该图像以适合指定的矩形。
            </summary>
      <param name="image">
                要绘制的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="rect">
                要在其中绘制图像的 <see cref="T:System.Drawing.Rectangle" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
              绘制一条连接两个 <see cref="T:System.Drawing.Point" /> 结构的线。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。
              </param>
      <param name="pt1">
                <see cref="T:System.Drawing.Point" /> 结构，它表示要连接的第一个点。
              </param>
      <param name="pt2">
                <see cref="T:System.Drawing.Point" /> 结构，它表示要连接的第二个点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
              绘制一条连接两个 <see cref="T:System.Drawing.PointF" /> 结构的线。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。
              </param>
      <param name="pt1">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示要连接的第一个点。
              </param>
      <param name="pt2">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示要连接的第二个点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              绘制一条连接由坐标对指定的两个点的线条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。
              </param>
      <param name="x1">
                第一个点的 x 坐标。
              </param>
      <param name="y1">
                第一个点的 y 坐标。
              </param>
      <param name="x2">
                第二个点的 x 坐标。
              </param>
      <param name="y2">
                第二个点的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              绘制一条连接由坐标对指定的两个点的线条。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。
              </param>
      <param name="x1">
                第一个点的 x 坐标。
              </param>
      <param name="y1">
                第一个点的 y 坐标。
              </param>
      <param name="x2">
                第二个点的 x 坐标。
              </param>
      <param name="y2">
                第二个点的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
              绘制一系列连接一组 <see cref="T:System.Drawing.Point" /> 结构的线段。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定线段的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要连接的点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
              绘制一系列连接一组 <see cref="T:System.Drawing.PointF" /> 结构的线段。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定线段的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要连接的点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              绘制 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定路径的颜色、宽度和样式。
              </param>
      <param name="path">
                要绘制的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              绘制由一个 <see cref="T:System.Drawing.Rectangle" /> 结构和两条射线所指定的椭圆定义的扇形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义该扇形所属的椭圆的边框。
              </param>
      <param name="startAngle">
                从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
              绘制由一个 <see cref="T:System.Drawing.RectangleF" /> 结构和两条射线所指定的椭圆定义的扇形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它表示定义该扇形所属的椭圆的边框。
              </param>
      <param name="startAngle">
                从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。
              </param>
      <param name="x">
                边框的左上角的 x 坐标，该边框定义扇形所属的椭圆。
              </param>
      <param name="y">
                边框的左上角的 y 坐标，该边框定义扇形所属的椭圆。
              </param>
      <param name="width">
                边框的宽度，该边框定义扇形所属的椭圆。
              </param>
      <param name="height">
                边框的高度，该边框定义扇形所属的椭圆。
              </param>
      <param name="startAngle">
                从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。
              </param>
      <param name="x">
                边框的左上角的 x 坐标，该边框定义扇形所属的椭圆。
              </param>
      <param name="y">
                边框的左上角的 y 坐标，该边框定义扇形所属的椭圆。
              </param>
      <param name="width">
                边框的宽度，该边框定义扇形所属的椭圆。
              </param>
      <param name="height">
                边框的高度，该边框定义扇形所属的椭圆。
              </param>
      <param name="startAngle">
                从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
              绘制由一组 <see cref="T:System.Drawing.Point" /> 结构定义的多边形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定多边形的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示多边形的顶点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
              绘制由一组 <see cref="T:System.Drawing.PointF" /> 结构定义的多边形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定多边形的颜色、宽度和样式。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示多边形的顶点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
              绘制由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。
              </param>
      <param name="rect">
                表示要绘制的矩形的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              绘制由坐标对、宽度和高度指定的矩形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。
              </param>
      <param name="x">
                要绘制的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                要绘制的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                要绘制的矩形的宽度。
              </param>
      <param name="height">
                要绘制的矩形的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              绘制由坐标对、宽度和高度指定的矩形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。
              </param>
      <param name="x">
                要绘制的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                要绘制的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                要绘制的矩形的宽度。
              </param>
      <param name="height">
                要绘制的矩形的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>
              绘制一系列由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定矩形轮廓线的颜色、宽度和样式。
              </param>
      <param name="rects">
                <see cref="T:System.Drawing.Rectangle" /> 结构数组，这些结构表示要绘制的矩形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="rects" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="rects" /> 是长度为零的数组。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>
              绘制一系列由 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形。
            </summary>
      <param name="pen">
                <see cref="T:System.Drawing.Pen" />，它确定矩形轮廓线的颜色、宽度和样式。
              </param>
      <param name="rects">
                <see cref="T:System.Drawing.RectangleF" /> 结构数组，这些结构表示要绘制的矩形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="pen" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="rects" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="rects" /> 是长度为零的数组。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>
              在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。
            </summary>
      <param name="s">
                要绘制的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="brush">
                <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。
              </param>
      <param name="point">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制文本的左上角。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
              使用指定 <see cref="T:System.Drawing.StringFormat" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象在指定的位置绘制指定的文本字符串。
            </summary>
      <param name="s">
                要绘制的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="brush">
                <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。
              </param>
      <param name="point">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制文本的左上角。
              </param>
      <param name="format">
                <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
              在指定矩形并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。
            </summary>
      <param name="s">
                要绘制的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="brush">
                <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。
              </param>
      <param name="layoutRectangle">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制文本的位置。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
              使用指定 <see cref="T:System.Drawing.StringFormat" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象在指定的矩形中绘制指定的文本字符串。
            </summary>
      <param name="s">
                要绘制的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="brush">
                <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。
              </param>
      <param name="layoutRectangle">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制文本的位置。
              </param>
      <param name="format">
                <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>
              在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。
            </summary>
      <param name="s">
                要绘制的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="brush">
                <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。
              </param>
      <param name="x">
                所绘制文本的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制文本的左上角的 y 坐标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>
              使用指定 <see cref="T:System.Drawing.StringFormat" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象在指定的位置绘制指定的文本字符串。
            </summary>
      <param name="s">
                要绘制的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="brush">
                <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。
              </param>
      <param name="x">
                所绘制文本的左上角的 x 坐标。
              </param>
      <param name="y">
                所绘制文本的左上角的 y 坐标。
              </param>
      <param name="format">
                <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>
              关闭当前图形容器，并将此 <see cref="T:System.Drawing.Graphics" /> 的状态还原到通过调用 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法保存的状态。
            </summary>
      <param name="container">
                <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，它表示此方法还原的容器。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoint">
                <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destPoints">
                由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="srcUnit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。
            </summary>
      <param name="metafile">
                要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="destRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。
              </param>
      <param name="srcRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。
              </param>
      <param name="unit">
                <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <paramref name="srcRect" /> 参数指定的矩形所包含的部分图元文件。
              </param>
      <param name="callback">
                <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。
              </param>
      <param name="callbackData">
                必需但被忽略的内部指针。
                 可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>
              更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Rectangle" /> 结构所指定的区域。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它指定要从剪辑区域排除的矩形。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>
              更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Region" /> 所指定的区域。
            </summary>
      <param name="region">
                <see cref="T:System.Drawing.Region" />，它指定要从剪辑区域排除的区域。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
              填充由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>
              使用指定的填充模式填充 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <param name="fillmode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
              使用指定的填充模式和张力填充 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。
              </param>
      <param name="fillmode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
              填充由 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
              使用指定的填充模式填充 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <param name="fillmode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
              使用指定的填充模式和张力填充 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。
              </param>
      <param name="fillmode">
                <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。
              </param>
      <param name="tension">
                大于或等于 0.0F 的值，该值指定曲线的张力。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
              填充 <see cref="T:System.Drawing.Rectangle" /> 结构指定的边框所定义的椭圆的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义椭圆的边框。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
              填充 <see cref="T:System.Drawing.RectangleF" /> 结构指定的边框所定义的椭圆的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它表示定义椭圆的边框。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="x">
                定义椭圆的边框的左上角的 X 坐标。
              </param>
      <param name="y">
                定义椭圆的边框的左上角的 Y 坐标。
              </param>
      <param name="width">
                定义椭圆的边框的宽度。
              </param>
      <param name="height">
                定义椭圆的边框的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="x">
                定义椭圆的边框的左上角的 X 坐标。
              </param>
      <param name="y">
                定义椭圆的边框的左上角的 Y 坐标。
              </param>
      <param name="width">
                定义椭圆的边框的宽度。
              </param>
      <param name="height">
                定义椭圆的边框的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              填充 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它表示要填充的路径。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
              填充椭圆所定义的扇形区的内部，该椭圆由 <see cref="T:System.Drawing.RectangleF" /> 结构和两条射线指定。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义该扇形区所属的椭圆的边框。
              </param>
      <param name="startAngle">
                从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="x">
                边框左上角的 x 坐标，该边框定义扇形区所属的椭圆。
              </param>
      <param name="y">
                边框左上角的 y 坐标，该边框定义扇形区所属的椭圆。
              </param>
      <param name="width">
                边框的宽度，该边框定义扇形区所属的椭圆。
              </param>
      <param name="height">
                边框的高度，该边框定义扇形区所属的椭圆。
              </param>
      <param name="startAngle">
                从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="x">
                边框左上角的 x 坐标，该边框定义扇形区所属的椭圆。
              </param>
      <param name="y">
                边框左上角的 y 坐标，该边框定义扇形区所属的椭圆。
              </param>
      <param name="width">
                边框的宽度，该边框定义扇形区所属的椭圆。
              </param>
      <param name="height">
                边框的高度，该边框定义扇形区所属的椭圆。
              </param>
      <param name="startAngle">
                从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。
              </param>
      <param name="sweepAngle">
                从 <paramref name="startAngle" /> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
              填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要填充的多边形的顶点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>
              使用指定的填充模式填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要填充的多边形的顶点。
              </param>
      <param name="fillMode">
                确定填充样式的 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
              填充 <see cref="T:System.Drawing.PointF" /> 结构指定的点数组所定义的多边形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要填充的多边形的顶点。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
              使用指定的填充模式填充 <see cref="T:System.Drawing.PointF" /> 结构指定的点数组所定义的多边形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="points">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要填充的多边形的顶点。
              </param>
      <param name="fillMode">
                确定填充样式的 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="points" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
              填充 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它表示要填充的矩形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
              填充 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它表示要填充的矩形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              填充由一对坐标、一个宽度和一个高度指定的矩形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="x">
                要填充的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                要填充的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                要填充的矩形的宽度。
              </param>
      <param name="height">
                要填充的矩形的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
              填充由一对坐标、一个宽度和一个高度指定的矩形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="x">
                要填充的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                要填充的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                要填充的矩形的宽度。
              </param>
      <param name="height">
                要填充的矩形的高度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>
              填充由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的一系列矩形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rects">
                <see cref="T:System.Drawing.Rectangle" /> 结构数组，这些结构表示要填充的矩形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="rects" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="rects" /> 是一个长度为零的数组。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>
              填充由 <see cref="T:System.Drawing.RectangleF" /> 结构指定的一系列矩形的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="rects">
                <see cref="T:System.Drawing.RectangleF" /> 结构数组，这些结构表示要填充的矩形。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="rects" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Rects" /> 是一个长度为零的数组。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>
              填充 <see cref="T:System.Drawing.Region" /> 的内部。
            </summary>
      <param name="brush">
                确定填充特性的 <see cref="T:System.Drawing.Brush" />。
              </param>
      <param name="region">
                <see cref="T:System.Drawing.Region" />，它表示要填充的区域。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="region" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>
              强制执行所有挂起的图形操作并立即返回而不等待操作完成。
            </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>
              用此方法强制执行所有挂起的图形操作，按照指定，等待或者不等待，在操作完成之前返回。
            </summary>
      <param name="intention">
                <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 枚举的成员，它指定该方法是立即返回还是等待所有现有的操作都完成。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>
              从设备上下文的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="hdc">
                设备上下文的句柄。
              </param>
      <returns>
              此方法为指定的设备上下文返回新的 <see cref="T:System.Drawing.Graphics" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>
              从设备上下文的指定句柄和设备的句柄创建新的 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="hdc">
                设备上下文的句柄。
              </param>
      <param name="hdevice">
                设备的句柄。
              </param>
      <returns>
              此方法为指定的设备上下文和设备返回新的 <see cref="T:System.Drawing.Graphics" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>
              返回指定设备上下文的 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="hdc">
                设备上下文的句柄。
              </param>
      <returns>
              指定设备上下文的 <see cref="T:System.Drawing.Graphics" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>
              从窗口的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="hwnd">
                窗口的句柄。
              </param>
      <returns>
              此方法为指定的窗口句柄返回新的 <see cref="T:System.Drawing.Graphics" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>
              创建指定 Windows 句柄的新 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="hwnd">
                窗口的句柄。
              </param>
      <returns>
              指定窗口句柄的 <see cref="T:System.Drawing.Graphics" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>
              从指定的 <see cref="T:System.Drawing.Image" /> 创建新的 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="image">
                从中创建新 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
      <returns>
              此方法为指定的 <see cref="T:System.Drawing.Image" /> 返回一个新的 <see cref="T:System.Drawing.Graphics" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Exception">
                  <paramref name="image" /> 具有索引的像素格式或其格式未定义。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.GetContextInfo">
      <summary>
              获取累积的图形上下文。
            </summary>
      <returns>
              一个 <see cref="T:System.Object" />，表示累积的图形上下文。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>
              获取当前 Windows 的半色调调色板的句柄。
            </summary>
      <returns>
              指定调色板的句柄的内部指针。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>
              获取与此 <see cref="T:System.Drawing.Graphics" /> 关联的设备上下文的句柄。
            </summary>
      <returns>
              与此 <see cref="T:System.Drawing.Graphics" /> 关联的设备上下文的句柄。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>
              获取与指定的 <see cref="T:System.Drawing.Color" /> 结构最接近的颜色。
            </summary>
      <param name="color">
                <see cref="T:System.Drawing.Color" /> 结构，为其查找匹配项。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，它表示与 <paramref name="color" /> 参数指定的颜色最接近的颜色。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。
            </summary>
      <param name="rect">
                与当前剪辑区域相交的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.RectangleF" /> 结构的交集。
            </summary>
      <param name="rect">
                与当前剪辑区域相交的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 对象的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Region" /> 的交集。
            </summary>
      <param name="region">
                要与当前区域交叉的 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>
              指示指定的 <see cref="T:System.Drawing.Point" /> 结构是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="point">
                要测试其可见性的 <see cref="T:System.Drawing.Point" /> 结构。
              </param>
      <returns>
              如果 <paramref name="point" /> 参数指定的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>
              指示指定的 <see cref="T:System.Drawing.PointF" /> 结构是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="point">
                要测试其可见性的 <see cref="T:System.Drawing.PointF" /> 结构。
              </param>
      <returns>
              如果 <paramref name="point" /> 参数指定的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>
              指示 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="rect">
                要测试其可见性的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <returns>
              如果 <paramref name="rect" /> 参数指定的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>
              指示 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="rect">
                要测试其可见性的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <returns>
              如果 <paramref name="rect" /> 参数指定的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>
              指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="x">
                要测试其可见性的点的 x 坐标。
              </param>
      <param name="y">
                要测试其可见性的点的 y 坐标。
              </param>
      <returns>
              如果由 <paramref name="x" /> 和 <paramref name="y" /> 参数定义的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              指示由一对坐标、一个宽度和一个高度指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="x">
                要测试其可见性的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                要测试其可见性的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                要测试其可见性的矩形的宽度。
              </param>
      <param name="height">
                要测试其可见性的矩形的高度。
              </param>
      <returns>
              如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 参数定义的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>
              指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="x">
                要测试其可见性的点的 x 坐标。
              </param>
      <param name="y">
                要测试其可见性的点的 y 坐标。
              </param>
      <returns>
              如果由 <paramref name="x" /> 和 <paramref name="y" /> 参数定义的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              指示由一对坐标、一个宽度和一个高度指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。
            </summary>
      <param name="x">
                要测试其可见性的矩形的左上角的 x 坐标。
              </param>
      <param name="y">
                要测试其可见性的矩形的左上角的 y 坐标。
              </param>
      <param name="width">
                要测试其可见性的矩形的宽度。
              </param>
      <param name="height">
                要测试其可见性的矩形的高度。
              </param>
      <returns>
              如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 参数定义的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
              获取 <see cref="T:System.Drawing.Region" /> 对象的数组，其中每个对象将字符位置的范围限定在指定字符串内。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="layoutRect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它指定字符串的布局矩形。
              </param>
      <param name="stringFormat">
                <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.Region" /> 对象的数组，其中每个对象将字符位置的范围限定在指定字符串内。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>
              测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
              测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。
              </param>
      <param name="origin">
                <see cref="T:System.Drawing.PointF" /> 结构，它表示字符串的左上角。
              </param>
      <param name="stringFormat">
                <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>
              当在指定的布局区域内以指定的 <see cref="T:System.Drawing.Font" /> 绘制时，测量指定的字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。
              </param>
      <param name="layoutArea">
                <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>
              测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。
              </param>
      <param name="layoutArea">
                <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。
              </param>
      <param name="stringFormat">
                <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>
              测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="layoutArea">
                <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。
              </param>
      <param name="stringFormat">
                <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。
              </param>
      <param name="charactersFitted">
                字符串中的字符数。
              </param>
      <param name="linesFilled">
                字符串中的文本行数。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>
              测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的格式。
              </param>
      <param name="width">
                字符串的最大宽度（以像素为单位）。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>
              测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。
            </summary>
      <param name="text">
                要测量的字符串。
              </param>
      <param name="font">
                <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。
              </param>
      <param name="width">
                字符串的最大宽度。
              </param>
      <param name="format">
                <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。
              </param>
      <returns>
              此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="font" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="matrix">
                乘以世界变换的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              以指定顺序将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="matrix">
                乘以世界变换的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
      <param name="order">
                <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它确定乘法的顺序。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc">
      <summary>
              释放通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。
            </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>
              释放通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。
            </summary>
      <param name="hdc">
                通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>
              释放设备上下文的句柄。
            </summary>
      <param name="hdc">
                设备上下文的句柄。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域重置为无限区域。
            </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换矩阵重置为单位矩阵。
            </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的状态还原到 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 表示的状态。
            </summary>
      <param name="gstate">
                <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，它表示要将此 <see cref="T:System.Drawing.Graphics" /> 还原到的状态。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>
              将指定旋转应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。
            </summary>
      <param name="angle">
                旋转角度（以度为单位）。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              以指定顺序将指定旋转应用到此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。
            </summary>
      <param name="angle">
                旋转角度（以度为单位）。
              </param>
      <param name="order">
                <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将旋转追加到矩阵变换之后还是添加到矩阵变换之前。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>
              保存此 <see cref="T:System.Drawing.Graphics" /> 的当前状态，并用 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 标识保存的状态。
            </summary>
      <returns>
              此方法返回 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，该对象表示此 <see cref="T:System.Drawing.Graphics" /> 的保存状态。
            </returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>
              将指定的缩放操作应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵，方法是将该对象的变换矩阵左乘该缩放矩阵。
            </summary>
      <param name="sx">
                x 方向的缩放比例。
              </param>
      <param name="sy">
                y 方向的缩放比例。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              以指定顺序将指定的缩放操作应用到此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。
            </summary>
      <param name="sx">
                x 方向的缩放比例。
              </param>
      <param name="sy">
                y 方向的缩放比例。
              </param>
      <param name="order">
                <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将缩放操作添加到变换矩阵前还是追加到变换矩阵后。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它表示新的剪辑区域。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的组合结果。
            </summary>
      <param name="path">
                要组合的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <param name="combineMode">
                <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定 <see cref="T:System.Drawing.Graphics" /> 的 <see langword="Clip" /> 属性。
            </summary>
      <param name="g">
                <see cref="T:System.Drawing.Graphics" />，从该对象中获取新剪辑区域。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域和指定的 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="P:System.Drawing.Graphics.Clip" /> 属性指定的组合操作的结果。
            </summary>
      <param name="g">
                <see cref="T:System.Drawing.Graphics" />，它指定要组合的剪辑区域。
              </param>
      <param name="combineMode">
                <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构，它表示新的剪辑区域。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与 <see cref="T:System.Drawing.Rectangle" /> 结构所指定矩形的组合结果。
            </summary>
      <param name="rect">
                要组合的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <param name="combineMode">
                <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构，它表示新的剪辑区域。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与 <see cref="T:System.Drawing.RectangleF" /> 结构所指定矩形的组合结果。
            </summary>
      <param name="rect">
                要组合的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <param name="combineMode">
                <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与指定 <see cref="T:System.Drawing.Region" /> 的组合结果。
            </summary>
      <param name="region">
                要组合的 <see cref="T:System.Drawing.Region" />。
              </param>
      <param name="combineMode">
                <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>
              使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。
            </summary>
      <param name="destSpace">
                <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定目标坐标空间。
              </param>
      <param name="srcSpace">
                <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定源坐标空间。
              </param>
      <param name="pts">
                <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>
              使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。
            </summary>
      <param name="destSpace">
                <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定目标坐标空间。
              </param>
      <param name="srcSpace">
                <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定源坐标空间。
              </param>
      <param name="pts">
                <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要变换的点。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。
            </summary>
      <param name="dx">
                平移的 x 坐标。
              </param>
      <param name="dy">
                平移的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>
              将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。
            </summary>
      <param name="dx">
                平移的 x 坐标。
              </param>
      <param name="dy">
                平移的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>
              通过使此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵左乘指定的平移来更改坐标系统的原点。
            </summary>
      <param name="dx">
                平移的 x 坐标。
              </param>
      <param name="dy">
                平移的 y 坐标。
              </param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              通过以指定顺序将指定平移应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵来更改坐标系统的原点。
            </summary>
      <param name="dx">
                平移的 x 坐标。
              </param>
      <param name="dy">
                平移的 y 坐标。
              </param>
      <param name="order">
                <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将平移添加到变换矩阵前还是追加到变换矩阵后。
              </param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>
              初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例，并尝试查找与所请求的大小匹配的图标版本。
            </summary>
      <param name="original">
                要从其中加载新调整大小的图标的 <see cref="T:System.Drawing.Icon" />。
              </param>
      <param name="size">
                用于指定新 <see cref="T:System.Drawing.Icon" /> 的高度和宽度的 <see cref="T:System.Drawing.Size" /> 结构。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="original" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
              初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例，并尝试查找与所请求的大小匹配的图标版本。
            </summary>
      <param name="original">
                要从其中加载不同大小的图标。
              </param>
      <param name="width">
                新图标的宽度。
              </param>
      <param name="height">
                新图标的高度。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="original" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>
              从指定的数据流初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。
            </summary>
      <param name="stream">
                从其中加载 <see cref="T:System.Drawing.Icon" /> 的数据流。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)">
      <summary>
              从指定的流初始化 <see cref="T:System.Drawing.Icon" /> 类的指定大小的新实例。
            </summary>
      <param name="stream">
                包含图标数据的流。
              </param>
      <param name="size">
                所需的图标大小。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 是 <see langword="null" /> 也不包含图像数据。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
              从指定的数据流用指定的宽度和高度初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。
            </summary>
      <param name="stream">
                从其中加载图标的数据流。
              </param>
      <param name="width">
                图标的宽度（以像素为单位）。
              </param>
      <param name="height">
                图标的高度（以像素为单位）。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>
              从指定的文件名初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。
            </summary>
      <param name="fileName">
                要从其中加载 <see cref="T:System.Drawing.Icon" /> 的文件。
              </param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)">
      <summary>
              从指定的文件初始化 <see cref="T:System.Drawing.Icon" /> 类的指定大小的新实例。
            </summary>
      <param name="fileName">
                包含图标数据的文件的名称和路径。
              </param>
      <param name="size">
                所需的图标大小。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="string" /> 是 <see langword="null" /> 也不包含图像数据。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
              使用指定文件中的指定宽度和高度初始化 <see cref="T:System.Drawing.Icon" /> 类的一个新实例。
            </summary>
      <param name="fileName">
                包含 <see cref="T:System.Drawing.Icon" /> 数据的文件的名称和路径。
              </param>
      <param name="width">
                需要的 <see cref="T:System.Drawing.Icon" /> 宽度。
              </param>
      <param name="height">
                需要的 <see cref="T:System.Drawing.Icon" /> 高度。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="string" /> 是 <see langword="null" /> 也不包含图像数据。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>
              从指定程序集中的资源初始化 <see cref="T:System.Drawing.Icon" /> 类的新实例。
            </summary>
      <param name="type">
                <see cref="T:System.Type" />，它指定在其中查找资源的程序集。
              </param>
      <param name="resource">
                要加载的资源的名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  指定的一个图标 <paramref name="resource" /> 不能在包含指定程序集中找到 <paramref name="type" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>
              克隆 <see cref="T:System.Drawing.Icon" />，创建重复图像。
            </summary>
      <returns>
              可强制转换为 <see cref="T:System.Drawing.Icon" /> 的对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Icon" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)">
      <summary>
              返回指定文件中包含的图像的图标表示形式。
            </summary>
      <param name="filePath">
                包含图像的文件的路径。
              </param>
      <returns>
              指定文件中包含的图像的 <see cref="T:System.Drawing.Icon" /> 表示形式。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="filePath" /> 并不表示有效的文件。
                
                  - 或 -
                
                  <paramref name="filePath" /> 指明通用命名约定 (UNC) 路径。
                </exception>
    </member>
    <member name="M:System.Drawing.Icon.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>
              从图标的指定 Windows 句柄 (<see langword="HICON" />) 创建 GDI+ <see cref="T:System.Drawing.Icon" />。
            </summary>
      <param name="handle">
                图标的 Windows 句柄。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Icon" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>
              将此 <see cref="T:System.Drawing.Icon" /> 保存到指定的输出 <see cref="T:System.IO.Stream" />。
            </summary>
      <param name="outputStream">
                要保存到的 <see cref="T:System.IO.Stream" />。
              </param>
    </member>
    <member name="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="si">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>
              将此 <see cref="T:System.Drawing.Icon" /> 转换为 GDI+ <see cref="T:System.Drawing.Bitmap" />。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Bitmap" />，它表示已转换的 <see cref="T:System.Drawing.Icon" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>
              获取用于描述 <see cref="T:System.Drawing.Icon" /> 的可读字符串。
            </summary>
      <returns>
              描述 <see cref="T:System.Drawing.Icon" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.IconConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否这 <see cref="T:System.Drawing.IconConverter" /> 可以转换到指定类型的实例 <see cref="T:System.Drawing.Icon" />, ，使用指定的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="sourceType">
                一个 <see cref="T:System.Type" /> ，指定您想要从转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此 <see cref="T:System.Drawing.IconConverter" /> 能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否这 <see cref="T:System.Drawing.IconConverter" /> 可转换 <see cref="T:System.Drawing.Icon" /> 到具有指定类型的实例，使用指定的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> ，指定想要转换为的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此 <see cref="T:System.Drawing.IconConverter" /> 能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              指定将对象转换为 <see cref="T:System.Drawing.Icon" />。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> ，用于保存有关特定区域性的信息。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Object" />。
              </param>
      <returns>
              如果此方法成功，它将返回 <see cref="T:System.Drawing.Icon" /> 它通过将指定的对象来创建。
               否则，它将引发异常。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将转换 <see cref="T:System.Drawing.Icon" /> (或可强制转换为对象 <see cref="T:System.Drawing.Icon" />) 为指定的类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定使用特定区域性的格式设置约定。
              </param>
      <param name="value">
                要转换的对象。
                 此对象应为类型图标或可强制转换为某种类型的 <see cref="T:System.Drawing.Icon" />。
              </param>
      <param name="destinationType">
                要转换的图标的类型。
              </param>
      <returns>
              此方法返回转换后的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.IDeviceContext.GetHdc">
      <summary>
              返回到 Windows 的设备上下文的句柄。
            </summary>
      <returns>
              <see cref="T:System.IntPtr" /> 表示设备上下文句柄。
            </returns>
    </member>
    <member name="M:System.Drawing.IDeviceContext.ReleaseHdc">
      <summary>
              释放 Windows 设备上下文句的柄。
            </summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Image" /> 的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Image" /> 此方法创建的、 强制转换为一个对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Image" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Image.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Drawing.Image" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Image.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>
              创建 <see cref="T:System.Drawing.Image" /> 从指定的文件。
            </summary>
      <param name="filename">
                一个字符串，包含用来创建文件的名称 <see cref="T:System.Drawing.Image" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Image" />。
            </returns>
      <exception cref="T:System.OutOfMemoryException">
                  该文件没有有效的图像格式。
                
                  - 或 -
                
                  
                    GDI+ 不支持该文件的像素格式。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  指定的文件不存在。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="filename" /> 是 <see cref="T:System.Uri" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>
              创建 <see cref="T:System.Drawing.Image" /> 从指定的文件使用嵌入的颜色管理信息在该文件中。
            </summary>
      <param name="filename">
                一个字符串，包含用来创建文件的名称 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="useEmbeddedColorManagement">
                设置为 <see langword="true" /> 使用颜色管理信息嵌入到图像文件中; 否则为 <see langword="false" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Image" />。
            </returns>
      <exception cref="T:System.OutOfMemoryException">
                  该文件没有有效的图像格式。
                
                  - 或 -
                
                  
                    GDI+ 不支持该文件的像素格式。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  指定的文件不存在。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="filename" /> 是 <see cref="T:System.Uri" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>
              创建 <see cref="T:System.Drawing.Bitmap" /> 从 GDI 位图的句柄。
            </summary>
      <param name="hbitmap">
                
                  GDI 从中创建位图句柄 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>
              创建 <see cref="T:System.Drawing.Bitmap" /> 从 GDI 位图和 GDI 调色板的句柄的句柄。
            </summary>
      <param name="hbitmap">
                
                  GDI 从中创建位图句柄 <see cref="T:System.Drawing.Bitmap" />。
              </param>
      <param name="hpalette">
                句柄 GDI 用于如果中指定的位图定义位图颜色的调色板 <paramref name="hBitmap" /> 参数不是与设备无关位图 (DIB)。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Bitmap" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>
              创建 <see cref="T:System.Drawing.Image" /> 从指定的数据流。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Image" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Image" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  流不是有效的图像格式
                
                  - 或 -
                
                  <paramref name="stream" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>
              创建 <see cref="T:System.Drawing.Image" /> 从指定的数据流 （可选） 使用嵌入的颜色管理信息该流中。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="useEmbeddedColorManagement">
                <see langword="true" /> 若要使用数据流; 中嵌入的颜色管理信息否则为 <see langword="false" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Image" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  流不是有效的图像格式
                
                   - 或 -
                
                  <paramref name="stream" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>
              创建 <see cref="T:System.Drawing.Image" /> 从指定的数据流 （可选） 使用嵌入的颜色管理信息并验证图像数据。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="useEmbeddedColorManagement">
                <see langword="true" /> 若要使用数据流; 中嵌入的颜色管理信息否则为 <see langword="false" />。
              </param>
      <param name="validateImageData">
                <see langword="true" /> 若要验证图像数据;否则为 <see langword="false" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Image" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  流不是有效的图像格式。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>
              以指定的单位获取图像的界限。
            </summary>
      <param name="pageUnit">
                其中一个 <see cref="T:System.Drawing.GraphicsUnit" /> 值，该值指示绑定矩形的度量单位。
              </param>
      <returns>
              <see cref="T:System.Drawing.RectangleF" /> 表示图像，以指定的单位的边界。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>
              返回有关指定的图像编码器所支持的参数的信息。
            </summary>
      <param name="encoder">
                用于指定图像编码器的 GUID。
              </param>
      <returns>
              <see cref="T:System.Drawing.Imaging.EncoderParameters" /> ，其中包含的数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
               每个 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 包含有关指定的图像编码器所支持的参数之一的信息。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>
              返回指定维度的帧数。
            </summary>
      <param name="dimension">
                一个 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 指定维度类型标识。
              </param>
      <returns>
              指定维度中的帧数。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>
              返回指定像素格式的颜色深度（每个像素的位数）。
            </summary>
      <param name="pixfmt">
                <see cref="T:System.Drawing.Imaging.PixelFormat" /> 成员，用于指定要查找其大小的格式。
              </param>
      <returns>
              指定的像素格式的颜色深度。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>
              获取指定的属性项从此 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="propid">
                要获取属性项的 ID。
              </param>
      <returns>
              <see cref="T:System.Drawing.Imaging.PropertyItem" /> 此方法获取。
            </returns>
      <exception cref="T:System.ArgumentException">
                  此图像的图像格式不支持属性项。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>
              返回此缩略图 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="thumbWidth">
                以像素为单位，请求的缩略图的宽度。
              </param>
      <param name="thumbHeight">
                以像素为单位，请求的缩略图的高度。
              </param>
      <param name="callback">
                一个 <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> 委托。
              
                注意   必须创建一个委托，并将传递对作为委托的引用 <paramref name="callback" /> 不使用参数，但该委托。
              </param>
      <param name="callbackData">
                必须是 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Image" /> 表示缩略图。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
              返回一个值，该值指示的像素格式是否为此 <see cref="T:System.Drawing.Image" /> 包含 alpha 信息。
            </summary>
      <param name="pixfmt">
                要测试的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="pixfmt" /> 包含 alpha 信息; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
              返回一个值，该值指示该像素格式是否为每个像素 32 位。
            </summary>
      <param name="pixfmt">
                要测试的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="pixfmt" /> 规范; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
              返回一个值，该值指示该像素格式是否为每个像素 64 位。
            </summary>
      <param name="pixfmt">
                <see cref="T:System.Drawing.Imaging.PixelFormat" /> 枚举值，用于测试。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="pixfmt" /> 扩展; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>
              从这中移除指定的属性项 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="propid">
                要移除的属性项的 ID。
              </param>
      <exception cref="T:System.ArgumentException">
                  映像不包含请求的属性项。
                
                  - 或 -
                
                  此图像的图像格式不支持属性项。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>
              旋转、 翻转，或将旋转和翻转 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="rotateFlipType">
                一个 <see cref="T:System.Drawing.RotateFlipType" /> 成员，用于指定的旋转和翻转将应用于映像的类型。
              </param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>
              使用指定的编码器和图像编码器参数，将该图像保存到指定的流。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" /> 将在其中保存图像。
              </param>
      <param name="encoder">
                用于此 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="encoderParams">
                <see cref="T:System.Drawing.Imaging.EncoderParameters" /> ，它指定图像编码器使用的参数。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">
                  使用错误的图像格式保存图像。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
              将此图像以指定的格式保存到指定的流中。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" /> 将在其中保存图像。
              </param>
      <param name="format">
                <see cref="T:System.Drawing.Imaging.ImageFormat" /> 指定保存的图像的格式。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 或 <paramref name="format" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">
                  包含错误的图像格式保存图像
                </exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>
              这会将保存 <see cref="T:System.Drawing.Image" /> 写入指定的文件或流。
            </summary>
      <param name="filename">
                一个字符串，包含要保存此文件的名称 <see cref="T:System.Drawing.Image" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="filename" /> 为 <see langword="null." />
                </exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">
                  使用错误的图像格式保存图像。
                
                  - 或 - 
                
                  图像已保存到同一文件从创建它。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>
              这会将保存 <see cref="T:System.Drawing.Image" /> 写入指定的文件，使用指定的编码器和图像编码器参数。
            </summary>
      <param name="filename">
                一个字符串，包含要保存此文件的名称 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="encoder">
                用于此 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="encoderParams">
                <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 要用于此 <see cref="T:System.Drawing.Image" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="filename" /> 或 <paramref name="encoder" /> 是 <see langword="null." />
                </exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">
                  使用错误的图像格式保存图像。
                
                  - 或 - 
                
                  图像已保存到同一文件从创建它。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
              这会将保存 <see cref="T:System.Drawing.Image" /> 写入指定的文件中指定的格式。
            </summary>
      <param name="filename">
                一个字符串，包含要保存此文件的名称 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="format">
                用于此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 的 <see cref="T:System.Drawing.Image" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="filename" /> 或 <paramref name="format" /> 是 <see langword="null." />
                </exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">
                  使用错误的图像格式保存图像。
                
                  - 或 - 
                
                  图像已保存到同一文件从创建它。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>
              将帧添加到上次对 <see cref="Overload:System.Drawing.Image.Save" /> 方法调用时所指定的文件或流中。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> ，包含要添加的帧。
              </param>
      <param name="encoderParams">
                一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含保存-添加操作使用的图像编码器所需的参数。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="image" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>
              将帧添加到上次对 <see cref="Overload:System.Drawing.Image.Save" /> 方法调用时所指定的文件或流中。
               使用此方法将多帧图像中的选定帧保存到另一个多帧图像。
            </summary>
      <param name="encoderParams">
                一个 <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含保存-添加操作使用的图像编码器所需的参数。
              </param>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>
              选择由维度和索引指定的帧。
            </summary>
      <param name="dimension">
                一个 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 指定维度类型标识。
              </param>
      <param name="frameIndex">
                活动帧的索引。
              </param>
      <returns>
              始终返回 0。
            </returns>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>
              在此 <see cref="T:System.Drawing.Image" /> 中存储一个属性项（元数据片）。
            </summary>
      <param name="propitem">
                要存储的 <see cref="T:System.Drawing.Imaging.PropertyItem" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  此图像的图像格式不支持属性项。
                </exception>
    </member>
    <member name="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="si">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>
              将多帧图像显示为动画。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象进行动画处理。
              </param>
      <param name="onFrameChangedHandler">
                一个 <see langword="EventHandler" /> 对象，它指定在动画帧发生更改时调用的方法。
              </param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>
              返回一个布尔值，该值指示指定的映像是否包含基于时间的帧。
            </summary>
      <param name="image">
                要测试的 <see cref="T:System.Drawing.Image" /> 对象。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果指定的图像包含基于时间的帧; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>
              终止正在运行的动画。
            </summary>
      <param name="image">
                要停止动画处理的 <see cref="T:System.Drawing.Image" /> 对象。
              </param>
      <param name="onFrameChangedHandler">
                一个 <see langword="EventHandler" /> 对象，它指定在动画帧发生更改时调用的方法。
              </param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>
              使帧在当前进行动画处理的所有图像中前移。
               新帧在下一次呈现图像时绘制。
            </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>
              使帧在指定的图像中前移。
               新帧在下一次呈现图像时绘制。
               此方法只适用于包含基于时间的帧的图像。
            </summary>
      <param name="image">
                要为其更新帧的 <see cref="T:System.Drawing.Image" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.ImageConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否这 <see cref="T:System.Drawing.ImageConverter" /> 可以转换到指定类型的实例 <see cref="T:System.Drawing.Image" />, ，使用指定的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="sourceType">
                一个 <see cref="T:System.Type" /> ，指定您想要从转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此 <see cref="T:System.Drawing.ImageConverter" /> 能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否这 <see cref="T:System.Drawing.ImageConverter" /> 可转换 <see cref="T:System.Drawing.Image" /> 到具有指定类型的实例，使用指定的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> ，指定想要转换为的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此 <see cref="T:System.Drawing.ImageConverter" /> 能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              指定将对象转换为 <see cref="T:System.Drawing.Image" />。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> ，用于保存有关特定区域性的信息。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Object" />。
              </param>
      <returns>
              如果此方法成功，它将返回 <see cref="T:System.Drawing.Image" /> 它通过将指定的对象来创建。
               否则，它将引发异常。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将转换 <see cref="T:System.Drawing.Image" /> (或可强制转换为对象 <see cref="T:System.Drawing.Image" />) 为指定的类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的详细信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定使用特定区域性的格式设置约定。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.Image" />。
              </param>
      <param name="destinationType">
                <see cref="T:System.Type" /> 要转换为的 <see cref="T:System.Drawing.Image" />。
              </param>
      <returns>
              此方法返回转换后的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
              获取此类型的属性集。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <param name="value">
                要获取的属性的对象的值。
              </param>
      <param name="attributes">
                一个数组 <see cref="T:System.Attribute" /> 描述属性的对象。
              </param>
      <returns>
              此数据类型不应公开的属性集。
               如果应公开任何属性，则此方法可返回 <see langword="null" />。
               默认实现始终返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              指示此对象是否支持属性。
               默认情况下，这是 <see langword="false" />。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> 应调用方法来查找此对象的属性。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.ImageFormatConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              指示此转换器是否可以为该转换器的本机类型转换指定的源类型的对象。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的详细信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="sourceType">
                您想要将从转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此对象可以执行转换。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              获取一个值，该值指示此转换器是否可以将对象转换为指定的目标类型使用的上下文。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，指定此类型转换的上下文。
              </param>
      <param name="destinationType">
                <see cref="T:System.Type" /> ，它表示您想要将其转换的类型 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此对象可以执行转换。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              指定将对象转换为 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的详细信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定针对特定区域性的格式设置约定。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将指定的对象转换成指定的类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的详细信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定针对特定区域性的格式设置约定。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                对象要转换为的类型。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationType" /> 为 <see langword="null." />
                </exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              获取一个集合，包含用于此验证程序所面向的数据类型的标准值集。
               返回 <see langword="null" /> 如果数据类型不支持标准值集。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的详细信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <returns>
              包含一组标准的有效的值的集合或 <see langword="null" />。
               默认实现始终返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              指示此对象是否支持可以从列表中选取的值的标准集。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> 应调用方法以查找一组公共对象支持的值。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Imaging.BitmapData" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Imaging.ColorMap" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 类使用指定的矩阵中的元素 <paramref name="newColorMatrix" />。
            </summary>
      <param name="newColorMatrix">
                新元素的值 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 类从指定的全局唯一标识符 (GUID)。
               GUID 指定图像编码器参数类别。
            </summary>
      <param name="guid">
                全局唯一标识符，用于标识图像编码器参数类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个 8 位无符号的整数。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                一个 8 位无符号的整数，指定存储中的值 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个 8 位值。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                指定的值存储在一个字节 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
      <param name="undefined">
                如果 <see langword="true" />, 、 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />; 否则为 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个 8 位无符号整数的数组。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中元素的数目。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                指定存储中的值的 8 位无符号整数数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个字节数组。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中元素的数目。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                指定存储中的值的字节数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
      <param name="undefined">
                如果 <see langword="true" />, 、 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />; 否则为 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个 16 位整数。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                一个指定中存储的值的 16 位整数 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                 必须为非负数。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个 16 位整数数组。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中元素的数目。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                指定存储中的值的 16 位整数数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                 必须为非负整数数组中。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象、 值的数量、 数据类型的值，以及指向中存储的值的指针 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="numberValues">
                一个整数，指定存储中的值的数目 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为此值。
              </param>
      <param name="type">
                成员 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 指定中存储的值的数据类型的枚举 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为此值。
              </param>
      <param name="value">
                指向由指定类型的值的数组的指针 <paramref name="Type" /> 参数。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>
              使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和 32 位整数对初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类的新实例。
               整数对表示一个分数，第一个整数为分子，第二个整数为分母。
               将 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，并将 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="numerator">
                一个表示分数分子的 32 位整数。
                 必须为非负数。
              </param>
      <param name="denominator">
                一个表示分数分母的 32 位整数。
                 必须为非负数。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和指定多个值，值，以及指向中存储的值的指针的数据类型的三个整数 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="NumberOfValues">
                一个整数，指定存储中的值的数目 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为此值。
              </param>
      <param name="Type">
                成员 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 指定中存储的值的数据类型的枚举 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为此值。
              </param>
      <param name="Value">
                指向由指定类型的值的数组的指针 <paramref name="Type" /> 参数。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  类型不是有效 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和四个，32 位整数。
               这四个整数表示秒的小数部分的一个范围。
               前两个整数表示在范围内，最小的分数，其余两个整数表示该范围中最大的分数。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="numerator1">
                一个 32 位整数，表示该范围中最小的分数的分子。
                 必须为非负数。
              </param>
      <param name="demoninator1">
                一个 32 位整数，表示该范围中最小的分数的分母。
                 必须为非负数。
              </param>
      <param name="numerator2">
                一个 32 位整数，表示该范围中最小的分数的分母。
                 必须为非负数。
              </param>
      <param name="demoninator2">
                一个 32 位整数，表示该范围中最大的分数的分子。
                 必须为非负数。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和两个 32 位整数数组。
               这两个数组表示秒的小数部分的数组。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性中的元素数 <paramref name="numerator" /> 数组，它必须是元素的数目相同中 <paramref name="denominator" /> 数组。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="numerator">
                指定的秒的小数部分分子的 32 位整数数组。
                 必须为非负整数数组中。
              </param>
      <param name="denominator">
                指定的秒的小数部分分母的 32 位整数数组。
                 必须为非负整数数组中。
                 给定索引的分母配合分子相同的索引。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和四个 32 位整数数组。
               这四个数组表示一个数组有理范围。
               合理的范围是从最小小数部分值的最大的小数部分值通过所有分数的集合。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性中的元素数 <paramref name="numerator1" /> 数组，它必须是与其他三个数组中的元素数相同。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="numerator1">
                指定该范围中的最小值的分子的 32 位整数数组。
                 必须为非负整数数组中。
              </param>
      <param name="denominator1">
                指定该范围中的最小值的分母的 32 位整数数组。
                 必须为非负整数数组中。
              </param>
      <param name="numerator2">
                指定该范围中的最大值的分子的 32 位整数数组。
                 必须为非负整数数组中。
              </param>
      <param name="denominator2">
                指定该范围中的最大值的分母的 32 位整数数组。
                 必须为非负整数数组中。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个 64 位整数。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> （32 位），并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                指定的值存储在一个 64 位整数 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                 必须为非负数。
                 此参数转换为 32 位整数，然后将存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一对 64 位整数。
               对整数表示整数、 要在范围内，最少数量的第一个整数和第二个要在范围内的最大数的整数的范围。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为 1。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="rangebegin">
                一个 64 位整数，表示将范围中最少数量的整数。
                 必须为非负数。
                 此参数转换为 32 位整数，然后将存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
      <param name="rangeend">
                一个 64 位整数表示整数范围中的最大数。
                 必须为非负数。
                 此参数转换为 32 位整数，然后将存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和 64 位整数的数组。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> （32-位），并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为数组中元素的数目。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                指定存储中的值的 64 位整数数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
                 必须为非负整数数组中。
                 64 位整数转换为 32 位整数，然后将它们存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和两个 64 位整数数组。
               这两个数组表示一组整数范围。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性中的元素数 <paramref name="rangebegin" /> 数组，它必须是元素的数目相同中 <paramref name="rangeend" /> 数组。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="rangebegin">
                指定整数范围中的最小值的 64 位整数数组。
                 必须为非负整数数组中。
                 64 位整数转换为 32 位整数，然后将它们存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
      <param name="rangeend">
                指定整数范围中的最大值的 64 位整数数组。
                 必须为非负整数数组中。
                 64 位整数转换为 32 位整数，然后将它们存储在 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象。
                 给定索引的最大值与相同的索引的最小值配对。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 类与指定 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象和一个字符的字符串。
               此字符串将转换为以 null 结尾的 ASCII 字符串，然后将存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
               设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 属性设置为 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />, ，并设置 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 属性设置为包括 NULL 终止符的 ASCII 字符串的长度。
            </summary>
      <param name="encoder">
                一个 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，用于封装参数类别的全局唯一标识符。
              </param>
      <param name="value">
                一个 <see cref="T:System.String" /> ，指定的值存储在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Finalize">
      <summary>
              允许 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象尝试释放资源并执行其他清理操作之前 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 垃圾回收功能回收对象。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 类可以包含一个 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 类可以包含指定的数量的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <param name="count">
                一个整数，指定的数 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象可以包含。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 类使用指定 <see langword="Guid" /> 结构。
            </summary>
      <param name="guid">
                一个 <see langword="Guid" /> 结构，它包含此 GUID <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>
              返回一个值，该值指示指定的对象是否为 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 等效于此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象。
            </summary>
      <param name="o">
                要测试的对象。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <paramref name="o" /> 是 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 等效于此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>
              返回此哈希代码 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象。
            </summary>
      <returns>
              返回 <see langword="int" /> 该键的哈希代码值 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>
              将此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象转换为可读的字符串。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>
              清除该 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象的画笔颜色重新映射表。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>
              为默认类别清除颜色键（透明范围）。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别清除颜色键（透明范围）。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除颜色键的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>
              为默认类别清除颜色调整矩阵。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              清除指定类别的颜色调整矩阵。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除颜色调整矩阵的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>
              为默认类别禁用灰度校正。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别禁用灰度校正。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将禁用灰度校正的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>
              清除默认类别的 <see langword="NoOp" /> 设置。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              清除指定类别的 <see langword="NoOp" /> 设置。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除 <see langword="NoOp" /> 设置的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>
              为默认类别清除 CMYK（青色-洋红色-黄色-黑色）输出通道设置。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别清除（青色-洋红色-黄色-黑色）输出通道设置。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除输出通道设置的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>
              为默认类别清除输出通道颜色配置文件设置。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别清除输出通道颜色配置文件设置。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除输出通道配置文件设置的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>
              为默认类别清除颜色重新映射表。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别清除颜色重新映射表。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除重新映射表的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>
              为默认类别清除阈值。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别清除阈值。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将清除阈值的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象的一个精确副本。
            </summary>
      <returns>
              此类创建的 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，作为一个对象来转换。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              根据指定类别的调整设置，调整调色板中的颜色。
            </summary>
      <param name="palette">
                <see cref="T:System.Drawing.Imaging.ColorPalette" />，在输入时包含要调整的调色板，在输出时包含已调整的调色板。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定其调整设置将应用于调色板的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>
              为画笔类别设置颜色重新映射表。
            </summary>
      <param name="map">
                一个 <see cref="T:System.Drawing.Imaging.ColorMap" /> 对象数组。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>
              为默认类别设置颜色键。
            </summary>
      <param name="colorLow">
                低颜色键值。
              </param>
      <param name="colorHigh">
                高颜色键值。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置颜色键（透明范围）。
            </summary>
      <param name="colorLow">
                低颜色键值。
              </param>
      <param name="colorHigh">
                高颜色键值。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色键的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>
              为默认类别设置颜色调整矩阵和灰度调整矩阵。
            </summary>
      <param name="newColorMatrix">
                颜色调整矩阵。
              </param>
      <param name="grayMatrix">
                灰度调整矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>
              为默认类别设置颜色调整矩阵和灰度调整矩阵。
            </summary>
      <param name="newColorMatrix">
                颜色调整矩阵。
              </param>
      <param name="grayMatrix">
                灰度调整矩阵。
              </param>
      <param name="flags">
                <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵和灰度调整矩阵影响的图像和颜色的类型。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置颜色调整矩阵和灰度调整矩阵。
            </summary>
      <param name="newColorMatrix">
                颜色调整矩阵。
              </param>
      <param name="grayMatrix">
                灰度调整矩阵。
              </param>
      <param name="mode">
                <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵和灰度调整矩阵影响的图像和颜色的类型。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色调整矩阵和灰度调整矩阵的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>
              为默认类别设置颜色调整矩阵。
            </summary>
      <param name="newColorMatrix">
                颜色调整矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>
              为默认类别设置颜色调整矩阵。
            </summary>
      <param name="newColorMatrix">
                颜色调整矩阵。
              </param>
      <param name="flags">
                <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵影响的图像和颜色的类型。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置颜色调整矩阵。
            </summary>
      <param name="newColorMatrix">
                颜色调整矩阵。
              </param>
      <param name="mode">
                <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，它指定将受颜色调整矩阵影响的图像和颜色的类型。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色调整矩阵的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>
              为默认类别设置伽玛值。
            </summary>
      <param name="gamma">
                灰度校正值。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置伽玛值。
            </summary>
      <param name="gamma">
                灰度校正值。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 枚举的一个元素，指定将设置伽玛值的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>
              为默认类别关闭颜色调整。
               可以调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 方法恢复在调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 方法前已存在的颜色调整设置。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别关闭颜色调整。
               可以调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 方法恢复在调用 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 方法前已存在的颜色调整设置。
            </summary>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将关闭颜色校正的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>
              为默认类别设置 CMYK（青色-洋红色-黄色-黑色）输出通道。
            </summary>
      <param name="flags">
                <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> 的一个元素，指定输出通道。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定的类别设置 CMYK（青色-洋红色-黄色-黑色）输出通道。
            </summary>
      <param name="flags">
                <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> 的一个元素，指定输出通道。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置输出通道的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>
              为默认类别设置输出通道颜色配置文件。
            </summary>
      <param name="colorProfileFilename">
                颜色配置文件的路径名。
                 如果颜色配置文件位于 %SystemRoot%\System32\Spool\Drivers\Color 目录中，则该参数可以是该文件的文件名。
                 否则，该参数必须是完全限定的路径名。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置输出通道颜色配置文件。
            </summary>
      <param name="colorProfileFilename">
                颜色配置文件的路径名。
                 如果颜色配置文件位于 %SystemRoot%\System32\Spool\Drivers\Color 目录中，则该参数可以是该文件的文件名。
                 否则，该参数必须是完全限定的路径名。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置输出通道颜色配置文件的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>
              为默认类别设置颜色重新映射表。
            </summary>
      <param name="map">
                <see cref="T:System.Drawing.Imaging.ColorMap" /> 类型的颜色对数组。
                 每个颜色对包含现有的颜色（第一个值）和它将映射到的颜色（第二个值）。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置颜色重新映射表。
            </summary>
      <param name="map">
                <see cref="T:System.Drawing.Imaging.ColorMap" /> 类型的颜色对数组。
                 每个颜色对包含现有的颜色（第一个值）和它将映射到的颜色（第二个值）。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色重新映射表的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>
              为默认类别设置阈值（透明范围）。
            </summary>
      <param name="threshold">
                指定阈值的实数。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
              为指定类别设置阈值（透明范围）。
            </summary>
      <param name="threshold">
                0.0 到 1.0 之间的阈值，用作一个断点，以便对将映射为最大值或最小值的颜色进行排序。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的一个元素，指定将设置颜色阈值的类别。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>
              设置环绕模式，该模式用于决定如何将纹理平铺到一个形状上或平铺到形状的边界上。
               当纹理小于它所填充的形状时，纹理在该形状上平铺以填满该形状。
            </summary>
      <param name="mode">
                <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的一个元素，它指定使用重复的图像副本平铺区域的方式。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>
              设置环绕模式和颜色，用于决定如何将纹理平铺到一个形状上，或平铺到形状的边界上。
               当纹理小于它所填充的形状时，纹理在该形状上平铺以填满该形状。
            </summary>
      <param name="mode">
                <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的一个元素，它指定使用重复的图像副本平铺区域的方式。
              </param>
      <param name="color">
                一个 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，指定所呈现图像外部的像素的颜色。
                 如果模式参数设置为 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> 并且传递给 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 的源矩形大于图像本身，则该颜色可见。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>
              设置环绕模式和颜色，用于决定如何将纹理平铺到一个形状上，或平铺到形状的边界上。
               当纹理小于它所填充的形状时，纹理在该形状上平铺以填满该形状。
            </summary>
      <param name="mode">
                <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的一个元素，它指定使用重复的图像副本平铺区域的方式。
              </param>
      <param name="color">
                一个 Color 对象，指定所呈现图像外部的像素的颜色。
                 如果模式参数设置为 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> 并且传递给 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 的源矩形大于图像本身，则该颜色可见。
              </param>
      <param name="clamp">
                此参数不起作用。
                 将其设置为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>
              返回的数组 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象，其中包含有关内置在 GDI + 的图像解码器的信息。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象数组。
               每个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 数组中的对象包含有关某一个内置图像解码器的信息。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>
              返回的数组 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象，其中包含有关内置在 GDI + 的图像编码器的信息。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 对象数组。
               每个 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 数组中的对象包含有关某一个内置图像编码器的信息。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 使用指定的类 <see cref="T:System.Guid" /> 结构。
            </summary>
      <param name="guid">
                <see cref="T:System.Guid" /> 结构，它指定特定图像格式。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>
              返回一个值，该值指示指定的对象是否为 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它等效于此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。
            </summary>
      <param name="o">
                要测试的对象。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="o" /> 是 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它等效于此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>
              返回一个表示此对象的哈希代码值。
            </summary>
      <returns>
              表示此对象哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>
              将此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象转换为可读的字符串。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定句柄。
            </summary>
      <param name="henhmetafile">
                增强型图元文件句柄。
              </param>
      <param name="deleteEmf">
                <see langword="true" /> 若要删除的增强型图元文件处理时 <see cref="T:System.Drawing.Imaging.Metafile" /> 已删除; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定句柄的设备上下文的类和一个 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="emfType">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定句柄的设备上下文的类和一个 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               可以提供一个字符串来命名该文件。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="emfType">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定句柄的类和一个 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。
            </summary>
      <param name="hmetafile">
                Windows 句柄 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="wmfHeader">
                <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定句柄的类和一个 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。
               此外， <paramref name="deleteWmf" /> 参数可以用于删除图元文件时删除该句柄。
            </summary>
      <param name="hmetafile">
                Windows 句柄 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="wmfHeader">
                <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。
              </param>
      <param name="deleteWmf">
                <see langword="true" /> 若要删除新的句柄 <see cref="T:System.Drawing.Imaging.Metafile" /> 时 <see cref="T:System.Drawing.Imaging.Metafile" /> 已删除; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于指定的矩形。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于指定使用提供的度量单位的矩形。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于使用所提供的将度量值单位的指定矩形和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于使用所提供的将度量值单位的指定矩形和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               可以提供一个字符串来命名该文件。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="desc">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于指定的矩形。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于指定使用提供的度量单位的矩形。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于使用所提供的将度量值单位的指定矩形和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的设备上下文中，受限于使用所提供的将度量值单位的指定矩形和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               可以提供一个字符串来命名该文件。
            </summary>
      <param name="referenceHdc">
                设备上下文的句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>
              从指定的数据流初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。
            </summary>
      <param name="stream">
                从中创建新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 <see cref="T:System.IO.Stream" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>
              从指定的数据流初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定的数据流、 设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定的数据流、 设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               此外，一个字符串，包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" /> 可以添加。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定的数据流、 设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的数据流、 设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，并提供的度量单位。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的数据流、 设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的数据流、 设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               一个字符串，包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" /> 可以添加。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 从指定的数据流、 设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的数据流、 设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，并提供的度量单位。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的数据流、 设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类从指定的数据流、 设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               一个字符串，包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" /> 可以添加。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> ，其中会包含数据此 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>
              从指定的文件名初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类的新实例。
            </summary>
      <param name="filename">
                一个 <see cref="T:System.String" /> ，它表示从中创建新文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 初始化具有指定的文件名称。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 具有指定的文件名，设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 具有指定的文件名，设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               描述性字符串可以被添加，进去。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 具有指定的文件名，设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，并提供的度量单位。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               此外可以添加描述性字符串。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，并提供的度量单位。
               此外可以添加描述性字符串。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 具有指定的文件名，设备上下文的 Windows 句柄的类和一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，并提供的度量单位。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，所提供的度量值，单位和 <see cref="T:System.Drawing.Imaging.EmfType" /> 枚举，用于指定的格式 <see cref="T:System.Drawing.Imaging.Metafile" />。
               此外可以添加描述性字符串。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="type">
                <see cref="T:System.Drawing.Imaging.EmfType" /> 指定格式的 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="description">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 类具有指定的文件名，设备上下文的 Windows 句柄 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示的矩形的限定新 <see cref="T:System.Drawing.Imaging.Metafile" />, ，并提供的度量单位。
               此外可以添加描述性字符串。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> ，它表示新的文件名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="referenceHdc">
                设备上下文的 Windows 句柄。
              </param>
      <param name="frameRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 表示限定新矩形 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
      <param name="frameUnit">
                一个 <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> ，它指定的度量单位 <paramref name="frameRect" />。
              </param>
      <param name="desc">
                一个 <see cref="T:System.String" /> ，其中包含新的描述性名称 <see cref="T:System.Drawing.Imaging.Metafile" />。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>
              将 Windows 句柄返回到增强 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              此增强的 Windows 句柄 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>
              返回与此 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              与此 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>
              返回 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="henhmetafile">
                增强的句柄 <see cref="T:System.Drawing.Imaging.Metafile" /> 为其返回一个标头。
              </param>
      <returns>
              与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>
              返回 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="hmetafile">
                窗口的句柄 <see cref="T:System.Drawing.Imaging.Metafile" /> 要为其返回一个标头。
              </param>
      <param name="wmfHeader">
                <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。
              </param>
      <returns>
              与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>
              返回 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="stream">
                一个 <see cref="T:System.IO.Stream" /> 包含 <see cref="T:System.Drawing.Imaging.Metafile" /> 检索标头。
              </param>
      <returns>
              与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>
              返回 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <param name="fileName">
                一个 <see cref="T:System.String" /> 包含名称的 <see cref="T:System.Drawing.Imaging.Metafile" /> 检索标头。
              </param>
      <returns>
              与指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>
              播放的单个图元文件记录。
            </summary>
      <param name="recordType">
                元素 <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> ，它指定所播放的图元文件记录的类型。
              </param>
      <param name="flags">
                标志，用于指定记录属性的一组。
              </param>
      <param name="dataSize">
                在记录数据的字节数。
              </param>
      <param name="data">
                包含记录数据的字节数组。
              </param>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否与设备相关。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 是设备依赖; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 采用 Windows 增强型图元文件格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 采用 Windows 增强型图元文件格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 处于 Windows 增强型图元文件格式或 Windows 增强型图元文件以及格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 处于 Windows 增强型图元文件格式或 Windows 增强型图元文件以及格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 处于 Windows 增强型图元文件和格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 处于 Windows 增强型图元文件以及格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 采用双增强型图元文件格式。
               此格式支持增强和增强型 plus 格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 双增强型图元文件格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 支持仅 Windows 增强型图元文件和格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 支持仅 Windows 增强型图元文件以及格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 采用 Windows 图元文件格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 采用 Windows 图元文件格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>
              返回一个值，该值指示是否关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 是 Windows 可放置的图元文件格式。
            </summary>
      <returns>
              <see langword="true" /> 如果关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 是 Windows 可放置的图元文件格式; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>
              初始化 <see langword="MetaHeader" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>
              初始化 <see langword="WmfPlaceableFileHeader" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>
              使用指定的 <see cref="T:System.Drawing.Pen" /> 初始化 <see cref="T:System.Drawing.Brush" /> 类的新实例。
            </summary>
      <param name="brush">
                一个 <see cref="T:System.Drawing.Brush" />，确定该 <see cref="T:System.Drawing.Pen" /> 的填充属性。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>
              使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Brush" /> 初始化 <see cref="P:System.Drawing.Pen.Width" /> 类的新实例。
            </summary>
      <param name="brush">
                一个 <see cref="T:System.Drawing.Brush" />，决定此 <see cref="T:System.Drawing.Pen" /> 的特征。
              </param>
      <param name="width">
                新 <see cref="T:System.Drawing.Pen" /> 的宽度。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="brush" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>
              用指定颜色初始化 <see cref="T:System.Drawing.Pen" /> 类的新实例。
            </summary>
      <param name="color">
                <see cref="T:System.Drawing.Color" /> 结构，指示此 <see cref="T:System.Drawing.Pen" /> 的颜色。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>
              用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Color" /> 属性初始化 <see cref="P:System.Drawing.Pen.Width" /> 类的新实例。
            </summary>
      <param name="color">
                <see cref="T:System.Drawing.Color" /> 结构，指示此 <see cref="T:System.Drawing.Pen" /> 的颜色。
              </param>
      <param name="width">
                指示此 <see cref="T:System.Drawing.Pen" /> 的宽度的值。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Pen" /> 的一个精确副本。
            </summary>
      <returns>
              一个可以强制转换为 <see cref="T:System.Drawing.Pen" /> 的 <see cref="T:System.Object" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Pen" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Pen.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的变换矩阵。
            </summary>
      <param name="matrix">
                用来乘变换矩阵的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按照指定的顺序，用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以此 <see cref="T:System.Drawing.Pen" /> 的变换矩阵。
            </summary>
      <param name="matrix">
                用来乘变换矩阵的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
              </param>
      <param name="order">
                执行乘法运算的顺序。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>
              将此 <see cref="T:System.Drawing.Pen" /> 的几何变换矩阵重置为单位矩阵。
            </summary>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>
              将局部几何转换旋转指定角度。
               此方法将旋转添加到变换前。
            </summary>
      <param name="angle">
                旋转角度。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              以指定顺序将局部几何转换旋转指定角度。
            </summary>
      <param name="angle">
                旋转角度。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>
              按指定因子缩放局部几何转换。
               此方法将缩放矩阵添加到转换前。
            </summary>
      <param name="sx">
                沿 x 轴方向缩放转换的因子。
              </param>
      <param name="sy">
                沿 y 轴方向缩放转换的因子。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将局部几何转换以指定顺序缩放指定因子。
            </summary>
      <param name="sx">
                沿 x 轴方向缩放转换的因子。
              </param>
      <param name="sy">
                沿 y 轴方向缩放转换的因子。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>
              设置用于确定线帽样式的值，线帽用于结束通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线。
            </summary>
      <param name="startCap">
                一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。
              </param>
      <param name="endCap">
                一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。
              </param>
      <param name="dashCap">
                一个 <see cref="T:System.Drawing.Drawing2D.LineCap" />，表示要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线起点或终点使用的线帽样式。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>
              将局部几何转换平移指定尺寸。
               此方法将平移添加到变换前。
            </summary>
      <param name="dx">
                X 方向的转换值。
              </param>
      <param name="dy">
                Y 方向的转换值。
              </param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按指定的顺序将局部几何转换平移指定的尺寸。
            </summary>
      <param name="dx">
                X 方向的转换值。
              </param>
      <param name="dy">
                Y 方向的转换值。
              </param>
      <param name="order">
                应用转换的顺序（在前面添加或在后面追加）。
              </param>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Drawing.Size)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Point" /> 类 <see cref="T:System.Drawing.Size" />。
            </summary>
      <param name="sz">
                一个 <see cref="T:System.Drawing.Size" /> 新指定的坐标 <see cref="T:System.Drawing.Point" />。
              </param>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Point" /> 类使用的整数值所指定的坐标。
            </summary>
      <param name="dw">
                一个 32 位整数，它指定为新的坐标 <see cref="T:System.Drawing.Point" />。
              </param>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Point" /> 类的指定坐标。
            </summary>
      <param name="x">
                点的水平位置。
              </param>
      <param name="y">
                点的垂直位置。
              </param>
    </member>
    <member name="M:System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)">
      <summary>
              添加指定 <see cref="T:System.Drawing.Size" /> 到指定 <see cref="T:System.Drawing.Point" />。
            </summary>
      <param name="pt">
                要添加的 <see cref="T:System.Drawing.Point" />。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.Size" /> 添加
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" /> 即加法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.Ceiling(System.Drawing.PointF)">
      <summary>
              将指定 <see cref="T:System.Drawing.PointF" /> 到 <see cref="T:System.Drawing.Point" /> 通过舍入的值 <see cref="T:System.Drawing.PointF" /> 到下一个较大的整数值。
            </summary>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" /> 此方法将转换为。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.Equals(System.Object)">
      <summary>
              指定是否这 <see cref="T:System.Drawing.Point" /> 包含与指定相同的坐标 <see cref="T:System.Object" />。
            </summary>
      <param name="obj">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.Point" /> 并且具有与此相同的坐标 <see cref="T:System.Drawing.Point" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.GetHashCode">
      <summary>
              返回此哈希代码 <see cref="T:System.Drawing.Point" />。
            </summary>
      <returns>
              一个整数值，指定此哈希值 <see cref="T:System.Drawing.Point" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.Offset(System.Drawing.Point)">
      <summary>
              会将其转换 <see cref="T:System.Drawing.Point" /> 由指定 <see cref="T:System.Drawing.Point" />。
            </summary>
      <param name="p">
                <see cref="T:System.Drawing.Point" /> 使用偏移量这 <see cref="T:System.Drawing.Point" />。
              </param>
    </member>
    <member name="M:System.Drawing.Point.Offset(System.Int32,System.Int32)">
      <summary>
              按指定量平移此 <see cref="T:System.Drawing.Point" />。
            </summary>
      <param name="dx">
                x 坐标的偏移量。
              </param>
      <param name="dy">
                y 坐标的偏移量。
              </param>
    </member>
    <member name="M:System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)">
      <summary>
              将转换 <see cref="T:System.Drawing.Point" /> 由给定 <see cref="T:System.Drawing.Size" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.Point" /> 转换。
              </param>
      <param name="sz">
                一个 <see cref="T:System.Drawing.Size" /> ，它指定的数字将添加到的坐标对 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.Point" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)">
      <summary>
              比较两个 <see cref="T:System.Drawing.Point" /> 对象。
               此结果指定是否的值 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 两个属性 <see cref="T:System.Drawing.Point" /> 对象是否相等。
            </summary>
      <param name="left">
                要比较的 <see cref="T:System.Drawing.Point" />。
              </param>
      <param name="right">
                要比较的 <see cref="T:System.Drawing.Point" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 值 <paramref name="left" /> 和 <paramref name="right" /> 相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size">
      <summary>
              将指定 <see cref="T:System.Drawing.Point" /> 结构 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <param name="p">
                要转换的 <see cref="T:System.Drawing.Point" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Size" /> 中时得到的转换。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF">
      <summary>
              将指定 <see cref="T:System.Drawing.Point" /> 结构 <see cref="T:System.Drawing.PointF" /> 结构。
            </summary>
      <param name="p">
                要转换的 <see cref="T:System.Drawing.Point" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.PointF" /> 中时得到的转换。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)">
      <summary>
              比较两个 <see cref="T:System.Drawing.Point" /> 对象。
               此结果指定是否的值 <see cref="P:System.Drawing.Point.X" /> 或 <see cref="P:System.Drawing.Point.Y" /> 的两个属性 <see cref="T:System.Drawing.Point" /> 对象不相等。
            </summary>
      <param name="left">
                要比较的 <see cref="T:System.Drawing.Point" />。
              </param>
      <param name="right">
                要比较的 <see cref="T:System.Drawing.Point" />。
              </param>
      <returns>
              <see langword="true" /> 如果其中任何值 <see cref="P:System.Drawing.Point.X" /> 属性或 <see cref="P:System.Drawing.Point.Y" /> 属性 <paramref name="left" /> 和 <paramref name="right" /> 区分; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)">
      <summary>
              将转换 <see cref="T:System.Drawing.Point" /> 的负值由给定 <see cref="T:System.Drawing.Size" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.Point" /> 转换。
              </param>
      <param name="sz">
                一个 <see cref="T:System.Drawing.Size" /> ，它指定要从其中的坐标减去的数字对 <paramref name="pt" />。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Point" /> 结构，它的负值转换给定 <see cref="T:System.Drawing.Size" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.Round(System.Drawing.PointF)">
      <summary>
              将指定 <see cref="T:System.Drawing.PointF" /> 到 <see cref="T:System.Drawing.Point" /> 通过舍入的对象 <see cref="T:System.Drawing.Point" /> 值到最接近的整数。
            </summary>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" /> 此方法将转换为。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)">
      <summary>
              返回的结果中减去指定 <see cref="T:System.Drawing.Size" /> 从指定 <see cref="T:System.Drawing.Point" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.Point" /> 被减数。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.Size" /> 要从中减去 <see cref="T:System.Drawing.Point" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" /> 它是减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.ToString">
      <summary>
              将此转换 <see cref="T:System.Drawing.Point" /> 到用户可读字符串。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.Point" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Point.Truncate(System.Drawing.PointF)">
      <summary>
              将指定 <see cref="T:System.Drawing.PointF" /> 到 <see cref="T:System.Drawing.Point" /> 通过截断的值 <see cref="T:System.Drawing.Point" />。
            </summary>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" /> 此方法将转换为。
            </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.PointConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否此转换器可以将给定的源类型的对象转换为该转换器的本机类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="sourceType">
                您想要将从转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果此对象可以执行转换，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              获取一个值，该值指示此转换器是否可以将对象转换为给定的目标类型使用的上下文。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的对象。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> 对象，表示要转换的类型。
              </param>
      <returns>
              如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              指定将对象转换为 <see cref="T:System.Drawing.Point" /> 对象。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个包含区域性特定信息，如语言、 日历和区域性的约定与特定区域性关联的对象。
                 它基于 RFC 1766 标准。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将指定的对象转换成指定的类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                一个包含区域性特定信息，如语言、 日历和区域性的约定与特定区域性关联的对象。
                 它基于 RFC 1766 标准。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                对象要转换为的类型。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
              创建此类型的对象提供一组属性值的实例。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <param name="propertyValues">
                新属性值的字典。
                 字典中包含一系列名称 / 值对，一个用于每个属性返回从 <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />。
              </param>
      <returns>
              新创建的对象，或 <see langword="null" /> 如果无法创建该对象。
               默认实现返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定更改此对象上的某个值是否需要对调用 <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 若要创建一个新值。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 更改时发出此对象的一个或多个属性; 否则为应调用方法 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
              检索此类型的属性集。
               默认情况下，一种类型不返回任何属性。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <param name="value">
                要获取的属性的对象的值。
              </param>
      <param name="attributes">
                一个数组 <see cref="T:System.Attribute" /> 描述属性的对象。
              </param>
      <returns>
              为此数据类型公开的属性集。
               如果未公开任何属性，则此方法可能返回 <see langword="null" />。
               默认实现始终返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定此对象是否支持属性。
               默认情况下，这是 <see langword="false" />。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <returns>
              如果应调用 <see langword="true" /> 来查找此对象的属性，则为 <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.#ctor(System.Single,System.Single)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.PointF" /> 类的指定坐标。
            </summary>
      <param name="x">
                点的水平位置。
              </param>
      <param name="y">
                点的垂直位置。
              </param>
    </member>
    <member name="M:System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
              将转换给定 <see cref="T:System.Drawing.PointF" /> 由指定 <see cref="T:System.Drawing.Size" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.Size" /> ，它指定要添加到的坐标的数字 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.Add(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
              将转换给定 <see cref="T:System.Drawing.PointF" /> 由指定 <see cref="T:System.Drawing.SizeF" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.SizeF" /> ，它指定要添加到的坐标的数字 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.Equals(System.Object)">
      <summary>
              指定是否这 <see cref="T:System.Drawing.PointF" /> 包含与指定相同的坐标 <see cref="T:System.Object" />。
            </summary>
      <param name="obj">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.PointF" /> 并且具有与此相同的坐标 <see cref="T:System.Drawing.Point" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.GetHashCode">
      <summary>
              返回此哈希代码 <see cref="T:System.Drawing.PointF" /> 结构。
            </summary>
      <returns>
              一个整数值，指定此哈希值 <see cref="T:System.Drawing.PointF" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
              将转换 <see cref="T:System.Drawing.PointF" /> 由给定 <see cref="T:System.Drawing.Size" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                一个 <see cref="T:System.Drawing.Size" /> ，它指定的数字将添加到的坐标对 <paramref name="pt" />。
              </param>
      <returns>
              返回经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
              将转换 <see cref="T:System.Drawing.PointF" /> 由指定 <see cref="T:System.Drawing.SizeF" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.SizeF" /> ，它指定要添加到 x 坐标和 y 坐标的数字 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.op_Equality(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
              比较两个 <see cref="T:System.Drawing.PointF" /> 结构。
               此结果指定是否的值 <see cref="P:System.Drawing.PointF.X" /> 和 <see cref="P:System.Drawing.PointF.Y" /> 两个属性 <see cref="T:System.Drawing.PointF" /> 结构是否相等。
            </summary>
      <param name="left">
                要比较的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <param name="right">
                要比较的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Drawing.PointF.X" /> 和 <see cref="P:System.Drawing.PointF.Y" /> left 和 right 值 <see cref="T:System.Drawing.PointF" /> 结构是否相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.op_Inequality(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
              确定指定的点的坐标是否不相等。
            </summary>
      <param name="left">
                要比较的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <param name="right">
                要比较的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              <see langword="true" /> 若要指示 <see cref="P:System.Drawing.PointF.X" /> 和 <see cref="P:System.Drawing.PointF.Y" /> 值 <paramref name="left" /> 和 <paramref name="right" /> 不相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
              将转换 <see cref="T:System.Drawing.PointF" /> 的负值由给定 <see cref="T:System.Drawing.Size" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.Size" /> ，它指定要从中的坐标减去的数字 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
              将转换 <see cref="T:System.Drawing.PointF" /> 通过指定负 <see cref="T:System.Drawing.SizeF" />。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.SizeF" /> ，它指定要从中的坐标减去的数字 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
              将转换 <see cref="T:System.Drawing.PointF" /> 按指定大小的负值。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.Size" /> ，它指定要从中的坐标减去的数字 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.Subtract(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
              将转换 <see cref="T:System.Drawing.PointF" /> 按指定大小的负值。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 转换。
              </param>
      <param name="sz">
                <see cref="T:System.Drawing.SizeF" /> ，它指定要从中的坐标减去的数字 <paramref name="pt" />。
              </param>
      <returns>
              经过平移 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.PointF.ToString">
      <summary>
              将此转换 <see cref="T:System.Drawing.PointF" /> 到可读字符串。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.PointF" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 类的新实例。
            </summary>
      <param name="settings">
                一个 <see cref="T:System.Drawing.Printing.PrinterSettings" /> ，指定打印机的设置。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用序列化数据初始化 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 类的新实例。
            </summary>
      <param name="info">
                <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存关于所引发异常的序列化对象数据。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="info" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  类名是 <see langword="null" /> 或 <see cref="P:System.Exception.HResult" /> 为 0。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              重写。
               使用关于异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="info">
                <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存关于所引发异常的序列化对象数据。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="info" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Printing.Margins" /> 类 1 英寸宽的边距。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Printing.Margins" /> 类具有指定左、 右、 顶部、 边距和下边距。
            </summary>
      <param name="left">
                左边的距，以百分之一英寸为单位。
              </param>
      <param name="right">
                右边距，以百分之一英寸为单位。
              </param>
      <param name="top">
                上边距，以百分之一英寸为单位。
              </param>
      <param name="bottom">
                下边距，以百分之一英寸。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="left" /> 参数值小于 0。
                
                  - 或 - 
                
                  <paramref name="right" /> 参数值小于 0。
                
                  - 或 - 
                
                  <paramref name="top" /> 参数值小于 0。
                
                  - 或 - 
                
                  <paramref name="bottom" /> 参数值小于 0。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>
              检索此对象，逐个成员的副本。
            </summary>
      <returns>
              此对象的副本。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>
              比较此 <see cref="T:System.Drawing.Printing.Margins" /> 到指定 <see cref="T:System.Object" /> 以确定它们是否具有相同的尺寸。
            </summary>
      <param name="obj">
                要进行比较，向其中对象 <see cref="T:System.Drawing.Printing.Margins" />。
              </param>
      <returns>
              <see langword="true" /> 如果指定的对象是 <see cref="T:System.Drawing.Printing.Margins" /> 并具有相同 <see cref="P:System.Drawing.Printing.Margins.Top" />, ，<see cref="P:System.Drawing.Printing.Margins.Bottom" />, ，<see cref="P:System.Drawing.Printing.Margins.Right" /> 和 <see cref="P:System.Drawing.Printing.Margins.Left" /> 值，则为此 <see cref="T:System.Drawing.Printing.Margins" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>
              计算并检索基于左、 右、 上边框和下边距宽度的哈希代码。
            </summary>
      <returns>
              基于左、 右、 上边框和下边距的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>
              比较两个 <see cref="T:System.Drawing.Printing.Margins" /> 以确定它们是否具有相同的尺寸。
            </summary>
      <param name="m1">
                第一个 <see cref="T:System.Drawing.Printing.Margins" /> 要比较是否相等。
              </param>
      <param name="m2">
                第二个 <see cref="T:System.Drawing.Printing.Margins" /> 要比较是否相等。
              </param>
      <returns>
              <see langword="true" /> 若要指示 <see cref="P:System.Drawing.Printing.Margins.Left" />, ，<see cref="P:System.Drawing.Printing.Margins.Right" />, ，<see cref="P:System.Drawing.Printing.Margins.Top" />, ，和 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 两个边距属性具有相同的值; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>
              比较两个 <see cref="T:System.Drawing.Printing.Margins" /> 以确定它们是否不相等宽度。
            </summary>
      <param name="m1">
                第一个 <see cref="T:System.Drawing.Printing.Margins" /> 要比较是否不相等。
              </param>
      <param name="m2">
                第二个 <see cref="T:System.Drawing.Printing.Margins" /> 要比较是否不相等。
              </param>
      <returns>
              <see langword="true" /> 若要指示如果 <see cref="P:System.Drawing.Printing.Margins.Left" />, ，<see cref="P:System.Drawing.Printing.Margins.Right" />, ，<see cref="P:System.Drawing.Printing.Margins.Top" />, ，或 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 两个边距的属性不相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>
              将转换 <see cref="T:System.Drawing.Printing.Margins" /> 为字符串。
            </summary>
      <returns>
              <see cref="T:System.String" /> 的 <see cref="T:System.Drawing.Printing.Margins" /> 表示形式。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.MarginsConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              返回此转换器是否可以将指定的源类型的对象转换为使用指定的上下文的转换器的本机类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="sourceType">
                一个 <see cref="T:System.Type" /> 表示想要转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果对象可以执行转换，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              返回此转换器是否可以将对象转换为给定的目标类型使用的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> ，表示要转换的类型。
              </param>
      <returns>
              如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              将指定的对象转换为转换器的本机类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> ，它提供要转换的语言。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Object" />。
              </param>
      <returns>
              一个 <see cref="T:System.Object" />，它表示转换后的值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="value" /> 不包含全部四个边距的值。
                   例如，"100100100100"指定一英寸的左、 右、 上边框和下边距。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不能执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将给定的值对象转换为使用指定的上下文和参数指定的目标类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> ，它提供要转换的语言。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Object" />。
              </param>
      <param name="destinationType">
                <see cref="T:System.Type" /> 要与其进行转换的值。
              </param>
      <returns>
              一个 <see cref="T:System.Object" />，它表示转换后的值。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationType" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不能执行转换。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
              创建 <see cref="T:System.Object" /> 对象给定的一组属性值。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="propertyValues">
                新属性值的 <see cref="T:System.Collections.IDictionary" />。
              </param>
      <returns>
              <see cref="T:System.Object" /> 表示指定 <see cref="T:System.Collections.IDictionary" />, ，或 <see langword="null" /> 如果不能创建该对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="propertyValues" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              返回更改此对象上的某个值是否要求对调用 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 方法来创建一个新值，使用指定的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <returns>
              <see langword="true" /> 如果更改此对象的属性要求对调用 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 若要创建一个新的值; 否则为 <see langword="false" />。
               此方法始终返回 <see langword="true" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Printing.PageSettings" /> 类使用默认打印机。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Printing.PageSettings" /> 类使用指定的打印机。
            </summary>
      <param name="printerSettings">
                <see cref="T:System.Drawing.Printing.PrinterSettings" /> ，描述要使用的打印机。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>
              会创建一份 <see cref="T:System.Drawing.Printing.PageSettings" />。
            </summary>
      <returns>
              该对象的一个副本。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>
              将复制中的相关信息 <see cref="T:System.Drawing.Printing.PageSettings" /> 到指定 <see langword="DEVMODE " />结构。
            </summary>
      <param name="hdevmode">
                对 Win32 句柄 <see langword="DEVMODE" /> 结构。
              </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在或未安装的默认打印机。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>
              将复制到的相关信息 <see cref="T:System.Drawing.Printing.PageSettings" /> 从指定 <see langword="DEVMODE" /> 结构。
            </summary>
      <param name="hdevmode">
                对 Win32 句柄 <see langword="DEVMODE" /> 结构。
              </param>
      <exception cref="T:System.ArgumentException">
                  打印机句柄无效。
                </exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在或未安装的默认打印机。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>
              将转换 <see cref="T:System.Drawing.Printing.PageSettings" /> 为字符串形式。
            </summary>
      <returns>
              显示的各种属性设置一个字符串 <see cref="T:System.Drawing.Printing.PageSettings" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PaperSize" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PaperSize" /> 类的新实例。
            </summary>
      <param name="name">
                在纸张的名称。
              </param>
      <param name="width">
                中百分之一英寸的纸张的宽度。
              </param>
      <param name="height">
                中百分之一英寸的纸张的高度。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>
              提供以下信息 <see cref="T:System.Drawing.Printing.PaperSize" /> 以字符串形式。
            </summary>
      <returns>
              一个字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PaperSource" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>
              提供以下信息 <see cref="T:System.Drawing.Printing.PaperSource" /> 以字符串形式。
            </summary>
      <returns>
              一个字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 类的新实例。
            </summary>
      <param name="image">
                所打印页面的图像。
              </param>
      <param name="physicalSize">
                以百分之一英寸的打印页面的大小。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PreviewPrintController" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>
              将文档中的页捕获为一系列图像。
            </summary>
      <returns>
              类型的数组 <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 包含的页 <see cref="T:System.Drawing.Printing.PrintDocument" /> 作为一系列图像。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              完成控制序列，该序列确定何时以及如何预览打印文档中的页。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在预览的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> ，其中包含有关如何预览打印文档中的页的数据。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
              完成控制序列，该序列确定何时以及如何预览打印文档。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在预览的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> ，其中包含有关如何预览打印文档的数据。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              开始控制序列，该序列确定何时以及如何预览打印文档中的页。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在预览的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> ，其中包含有关如何预览打印文档中的页的数据。
                 最初， <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 此参数的属性将为 <see langword="null" />。
                 此方法所返回的值被用于对此属性进行设置。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 表示中的一页 <see cref="T:System.Drawing.Printing.PrintDocument" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
              开始控制序列，该序列确定何时以及如何预览打印文档。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在预览的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> ，其中包含有关如何打印文档的数据。
              </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrintController" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              当在派生类中重写，完成控制序列，该序列确定何时以及如何打印文档的页。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> 它表示当前正在打印的文档。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
              当在派生类中重写，完成控制序列，该序列确定何时以及如何打印文档。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> 它表示当前正在打印的文档。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              当在派生类中重写，开始控制序列，该序列确定何时以及如何打印文档的页。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> 它表示当前正在打印的文档。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 表示中的一页 <see cref="T:System.Drawing.Printing.PrintDocument" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
              当在派生类中重写，开始控制序列，该序列确定何时以及如何打印文档。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> 它表示当前正在打印的文档。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrintDocument" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
              引发 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 事件。
               之后调用 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 调用方法之前打印文档的第一页。
            </summary>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
              引发 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件。
               该事件在文档的最后一页打印完后被调用。
            </summary>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              引发 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件。
               该事件在某页打印之前被调用。
            </summary>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>
              引发 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件。
               它前立即调用每个 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件。
            </summary>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>
              开始文档的打印进程。
            </summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>
              以字符串形式提供有关打印文档的信息。
            </summary>
      <returns>
              一个字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>
              此成员重写 <see cref="M:System.Object.ToString" /> 方法。
            </summary>
      <returns>
              一个 <see cref="T:System.String" />，包含有关 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 的信息。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>
              会创建一份 <see cref="T:System.Drawing.Printing.PrinterSettings" />。
            </summary>
      <returns>
              该对象的一个副本。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>
              返回 <see cref="T:System.Drawing.Graphics" /> ，包含创建时很有帮助的打印机信息 <see cref="T:System.Drawing.Printing.PrintDocument" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 包含来自打印机的信息。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>
              返回<see cref="T:System.Drawing.Graphics" />包含打印机信息，可以选择指定边距处原点。
            </summary>
      <param name="honorOriginAtMargins">
                <see langword="true" />若要指示边距; 处的原点否则为<see langword="false" />。
              </param>
      <returns>
              A <see cref="T:System.Drawing.Graphics" /> ，包含从的打印机信息<see cref="T:System.Drawing.Printing.PageSettings" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>
              返回 <see cref="T:System.Drawing.Graphics" /> ，包含具有指定关联的打印机信息 <see cref="T:System.Drawing.Printing.PageSettings" />。
            </summary>
      <param name="pageSettings">
                <see cref="T:System.Drawing.Printing.PageSettings" /> 要检索的 graphics 对象。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 包含打印机信息 <see cref="T:System.Drawing.Printing.PageSettings" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>
              创建 <see cref="T:System.Drawing.Graphics" /> 与指定的页设置相关联，并选择性地指定边距处原点。
            </summary>
      <param name="pageSettings">
                <see cref="T:System.Drawing.Printing.PageSettings" /> 检索 <see cref="T:System.Drawing.Graphics" /> 对象。
              </param>
      <param name="honorOriginAtMargins">
                <see langword="true" /> 若要指定边距; 处原点否则为 <see langword="false" />。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 包含打印机信息 <see cref="T:System.Drawing.Printing.PageSettings" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>
              创建到一个句柄 <see langword="DEVMODE" /> 结构，它对应于打印机设置。
            </summary>
      <returns>
              句柄 <see langword="DEVMODE" /> 结构。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  无法检索打印机的初始化信息。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>
              创建到一个句柄 <see langword="DEVMODE" /> 结构，它对应于打印机和通过指定的页设置 <paramref name="pageSettings" /> 参数。
            </summary>
      <param name="pageSettings">
                <see cref="T:System.Drawing.Printing.PageSettings" /> 对象 <see langword="DEVMODE" /> 结构的句柄对应。
              </param>
      <returns>
              句柄 <see langword="DEVMODE" /> 结构。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  无法检索打印机的初始化信息。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>
              创建到一个句柄 <see langword="DEVNAMES" /> 结构，它对应于打印机设置。
            </summary>
      <returns>
              句柄 <see langword="DEVNAMES" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>
              获取一个值，该值的打印机是否支持打印指定的图像文件。
            </summary>
      <param name="image">
                要打印的图像。
              </param>
      <returns>
              <see langword="true" /> 如果打印机支持打印指定的图像;，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>
              返回一个值，该值的打印机是否支持打印指定的图像格式。
            </summary>
      <param name="imageFormat">
                <see cref="T:System.Drawing.Imaging.ImageFormat" /> 打印。
              </param>
      <returns>
              <see langword="true" /> 如果打印机支持打印指定的图像格式;，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 类的新实例。
            </summary>
      <param name="array">
                <see cref="T:System.Drawing.Printing.PaperSize" /> 类型的数组。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>
              添加 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 到集合的末尾。
            </summary>
      <param name="paperSize">
                要添加到集合中的 <see cref="T:System.Drawing.Printing.PaperSize" />。
              </param>
      <returns>
              新添加的项的从零开始索引。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>
              将当前的内容复制 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 到指定的数组，指定索引处开始。
            </summary>
      <param name="paperSizes">
                从零开始的数组，用于接收从复制的项 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />。
              </param>
      <param name="index">
                从此处开始复制的项索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>
              返回一个可循环访问集合的枚举数。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。
            </summary>
      <param name="array">
                从零开始的数组，用于接收从集合复制的项。
              </param>
      <param name="index">
                从此处开始复制的项索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。
            </summary>
      <returns>
              与集合关联的一个枚举器。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 类的新实例。
            </summary>
      <param name="array">
                <see cref="T:System.Drawing.Printing.PaperSource" /> 类型的数组。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>
              添加指定 <see cref="T:System.Drawing.Printing.PaperSource" /> 到末尾 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。
            </summary>
      <param name="paperSource">
                要添加到集合中的 <see cref="T:System.Drawing.Printing.PaperSource" />。
              </param>
      <returns>
              从零开始的索引位置 <see cref="T:System.Drawing.Printing.PaperSource" /> 已添加。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>
              将当前的内容复制 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 到指定的数组，指定索引处开始。
            </summary>
      <param name="paperSources">
                从零开始的数组，用于接收从复制的项 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。
              </param>
      <param name="index">
                从此处开始复制的项索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>
              返回一个可循环访问集合的枚举数。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。
            </summary>
      <param name="array">
                目标数组的集合的内容。
              </param>
      <param name="index">
                若要开始复制操作处的索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 类的新实例。
            </summary>
      <param name="array">
                <see cref="T:System.Drawing.Printing.PrinterResolution" /> 类型的数组。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>
              添加 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 到集合的末尾。
            </summary>
      <param name="printerResolution">
                要添加到集合中的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。
              </param>
      <returns>
              新添加的项的从零开始索引。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>
              将当前的内容复制 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 到指定的数组，指定索引处开始。
            </summary>
      <param name="printerResolutions">
                从零开始的数组，用于接收从复制的项 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />。
              </param>
      <param name="index">
                从此处开始复制的项索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>
              返回一个可循环访问集合的枚举数。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。
            </summary>
      <param name="array">
                目标数组。
              </param>
      <param name="index">
                若要开始复制操作处的索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>
              将给定句柄出来放入相关的信息复制 <see cref="T:System.Drawing.Printing.PrinterSettings" />。
            </summary>
      <param name="hdevmode">
                对 Win32 句柄 <see langword="DEVMODE" /> 结构。
              </param>
      <exception cref="T:System.ArgumentException">
                  打印机句柄无效。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>
              将给定句柄出来放入相关的信息复制 <see cref="T:System.Drawing.Printing.PrinterSettings" />。
            </summary>
      <param name="hdevnames">
                对 Win32 句柄 <see langword="DEVNAMES" /> 结构。
              </param>
      <exception cref="T:System.ArgumentException">
                  打印机句柄无效。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 类的新实例。
            </summary>
      <param name="array">
                <see cref="T:System.String" /> 类型的数组。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>
              将一个字符串添加到集合的末尾。
            </summary>
      <param name="value">
                要添加到集合的字符串。
              </param>
      <returns>
              新添加的项的从零开始索引。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>
              将当前的内容复制 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 到指定的数组，指定索引处开始
            </summary>
      <param name="strings">
                从零开始的数组，用于接收从复制的项 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />。
              </param>
      <param name="index">
                从此处开始复制的项索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>
              返回一个可循环访问集合的枚举数。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。
            </summary>
      <param name="array">
                若要复制到的项的数组。
              </param>
      <param name="index">
                起始索引。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>
              提供以下信息 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 以字符串形式。
            </summary>
      <returns>
              一个字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
              将一个双精度浮点数从一种 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一种 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。
            </summary>
      <param name="value">
                正在转换的 <see cref="T:System.Drawing.Point" />。
              </param>
      <param name="fromUnit">
                要从其进行转换的单元。
              </param>
      <param name="toUnit">
                要转换为其的单元。
              </param>
      <returns>
              双精度浮点数，它表示转换后的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
              将 <see cref="T:System.Drawing.Point" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。
            </summary>
      <param name="value">
                正在转换的 <see cref="T:System.Drawing.Point" />。
              </param>
      <param name="fromUnit">
                要从其进行转换的单元。
              </param>
      <param name="toUnit">
                要转换为其的单元。
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
              将 <see cref="T:System.Drawing.Printing.Margins" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。
            </summary>
      <param name="value">
                正在转换的 <see cref="T:System.Drawing.Printing.Margins" />。
              </param>
      <param name="fromUnit">
                要从其进行转换的单元。
              </param>
      <param name="toUnit">
                要转换为其的单元。
              </param>
      <returns>
              <see cref="T:System.Drawing.Printing.Margins" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
              将 <see cref="T:System.Drawing.Rectangle" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。
            </summary>
      <param name="value">
                正在转换的 <see cref="T:System.Drawing.Rectangle" />。
              </param>
      <param name="fromUnit">
                要从其进行转换的单元。
              </param>
      <param name="toUnit">
                要转换为其的单元。
              </param>
      <returns>
              <see cref="T:System.Drawing.Rectangle" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
              将 <see cref="T:System.Drawing.Size" /> 从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。
            </summary>
      <param name="value">
                正在转换的 <see cref="T:System.Drawing.Size" />。
              </param>
      <param name="fromUnit">
                要从其进行转换的单元。
              </param>
      <param name="toUnit">
                要转换为其的单元。
              </param>
      <returns>
              <see cref="T:System.Drawing.Size" />，它表示已转换的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
              将一个 32 位的符号整数从一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型转换为另一个 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 类型。
            </summary>
      <param name="value">
                正在转换的值。
              </param>
      <param name="fromUnit">
                要从其进行转换的单元。
              </param>
      <param name="toUnit">
                要转换为其的单元。
              </param>
      <returns>
              32 位有符号整数，它表示转换后的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 类具有指定的打印访问级别。
            </summary>
      <param name="printingLevel">
                <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 使用完全受限制或不受限制的访问权限，为指定的类。
            </summary>
      <param name="state">
                <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>
              创建并返回当前的权限对象的相同副本。
            </summary>
      <returns>
              当前权限对象的副本。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>
              通过 XML 编码重新构造具有指定状态的安全对象。
            </summary>
      <param name="esd">
                用于重新构造安全对象的 XML 编码。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>
              创建并返回的权限，则当前的权限对象和目标权限对象的交集。
            </summary>
      <param name="target">
                权限与当前权限对象具有相同类型的对象。
              </param>
      <returns>
              新权限对象，表示当前对象和指定的目标的交集。
               如果交集为空，则此对象为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="target" /> 是不是与当前权限对象具有相同类型的对象。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              确定当前的权限对象是否为指定权限的子集。
            </summary>
      <param name="target">
                测试子集关系权限对象。
                 此对象必须是类型的与当前权限对象相同。
              </param>
      <returns>
              <see langword="true" /> 如果当前的权限对象的一个子集 <paramref name="target" />; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="target" /> 是不是与当前权限对象具有相同类型的对象。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>
              获取一个值，该值指示是否不受限制的权限。
            </summary>
      <returns>
              <see langword="true" /> 如果权限不受限制;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>
              创建安全对象及其当前状态的 XML 编码。
            </summary>
      <returns>
              安全对象的 XML 编码，包括任何状态信息。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>
              创建组合权限对象和目标权限对象的权限。
            </summary>
      <param name="target">
                权限与当前权限对象具有相同类型的对象。
              </param>
      <returns>
              新权限对象，表示当前的权限对象和指定的权限对象的并集。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="target" /> 是不是与当前权限对象具有相同类型的对象。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> 类的新实例。
            </summary>
      <param name="action">
                <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>
              创建基于请求的访问级别，通过设置权限 <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> 特性上的属性。
            </summary>
      <returns>
              <see cref="T:System.Security.IPermission" /> 表示创建的权限。
            </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> 类的新实例。
            </summary>
      <param name="graphics">
                <see cref="T:System.Drawing.Graphics" /> 用于绘制该项。
              </param>
      <param name="marginBounds">
                边距之间的区域。
              </param>
      <param name="pageBounds">
                在纸张的整个区域。
              </param>
      <param name="pageSettings">
                <see cref="T:System.Drawing.Printing.PageSettings" /> 页。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> 类的新实例。
            </summary>
      <param name="pageSettings">
                要打印页的页设置。
              </param>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Printing.StandardPrintController" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              完成控制序列，该序列确定何时以及如何打印文档的页。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在打印的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> ，其中包含有关如何打印文档中的页的数据。
              </param>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  本机的 Win32 应用程序编程接口 (API) 无法完成对页的写。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
              完成控制序列，该序列确定何时以及如何打印文档。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在打印的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> ，其中包含有关如何打印文档的数据。
              </param>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  本机的 Win32 应用程序编程接口 (API) 无法完成打印作业。
                
                  - 或 - 
                
                  本机 Win32 API 无法删除指定的设备上下文 (DC)。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
              开始控制序列，该序列确定何时以及如何打印文档中的页。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在打印的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> ，其中包含有关如何打印文档中的页的数据。
                 最初， <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 此参数的属性将为 <see langword="null" />。
                 从返回的值 <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> 方法将用于设置此属性。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 对象，表示从页面 <see cref="T:System.Drawing.Printing.PrintDocument" />。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  本机的 Win32 应用程序编程接口 (API) 未能准备要接受的数据的打印机驱动程序。
                
                  - 或 - 
                
                  本机 Win32 API 无法更新指定的打印机或绘图仪设备上下文 (DC) 使用指定的信息。
                </exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
              开始控制序列，该序列确定何时以及如何打印文档。
            </summary>
      <param name="document">
                一个 <see cref="T:System.Drawing.Printing.PrintDocument" /> ，表示正在打印的文档。
              </param>
      <param name="e">
                一个 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> ，其中包含有关如何打印文档的数据。
              </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  打印机设置是无效的。
                </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  本机的 Win32 应用程序编程接口 (API) 无法启动打印作业。
                </exception>
    </member>
    <member name="M:System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)">
      <summary>
              用指定的位置和大小初始化 <see cref="T:System.Drawing.Rectangle" /> 类的新实例。
            </summary>
      <param name="location">
                <see cref="T:System.Drawing.Point" />，它表示矩形区域的左上角。
              </param>
      <param name="size">
                <see cref="T:System.Drawing.Size" />，它表示矩形区域的宽度和高度。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              用指定的位置和大小初始化 <see cref="T:System.Drawing.Rectangle" /> 类的新实例。
            </summary>
      <param name="x">
                矩形左上角的 x 坐标。
              </param>
      <param name="y">
                矩形左上角的 y 坐标。
              </param>
      <param name="width">
                矩形的宽度。
              </param>
      <param name="height">
                矩形的高度。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)">
      <summary>
              通过将 <see cref="T:System.Drawing.RectangleF" /> 值舍入到比它大的相邻整数值，将指定的 <see cref="T:System.Drawing.RectangleF" /> 结构转换为 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <returns>
              返回 <see cref="T:System.Drawing.Rectangle" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Drawing.Point)">
      <summary>
              确定指定的点是否包含在此 <see cref="T:System.Drawing.Rectangle" /> 结构内。
            </summary>
      <param name="pt">
                要测试的 <see cref="T:System.Drawing.Point" />。
              </param>
      <returns>
              如果 <paramref name="pt" /> 表示的点包含在此 <see cref="T:System.Drawing.Rectangle" /> 结构中，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)">
      <summary>
              确定 <paramref name="rect" /> 表示的矩形区域是否完全包含在此 <see cref="T:System.Drawing.Rectangle" /> 结构内。
            </summary>
      <param name="rect">
                要测试的 <see cref="T:System.Drawing.Rectangle" />。
              </param>
      <returns>
              如果 <paramref name="rect" /> 表示的矩形区域完全包含在此 <see cref="T:System.Drawing.Rectangle" /> 结构内，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Int32,System.Int32)">
      <summary>
              确定指定的点是否包含在此 <see cref="T:System.Drawing.Rectangle" /> 结构内。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <returns>
              如果 <paramref name="x" /> 和 <paramref name="y" /> 定义的点包含在此 <see cref="T:System.Drawing.Rectangle" /> 结构中，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Equals(System.Object)">
      <summary>
              测试 <paramref name="obj" /> 是否为与此 <see cref="T:System.Drawing.Rectangle" /> 结构具有相同位置和大小的 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="obj">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.Rectangle" /> 结构，并且其 <see cref="P:System.Drawing.Rectangle.X" />、<see cref="P:System.Drawing.Rectangle.Y" />、<see cref="P:System.Drawing.Rectangle.Width" /> 和 <see cref="P:System.Drawing.Rectangle.Height" /> 属性与此 <see cref="T:System.Drawing.Rectangle" /> 结构的对应属性相等，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              创建一个具有指定边缘位置的 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="left">
                此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的 x 坐标。
              </param>
      <param name="top">
                此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的 y 坐标。
              </param>
      <param name="right">
                此 <see cref="T:System.Drawing.Rectangle" /> 结构右下角的 x 坐标。
              </param>
      <param name="bottom">
                此 <see cref="T:System.Drawing.Rectangle" /> 结构右下角的 y 坐标。
              </param>
      <returns>
              此方法创建的新 <see cref="T:System.Drawing.Rectangle" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.GetHashCode">
      <summary>
              返回此 <see cref="T:System.Drawing.Rectangle" /> 结构的哈希代码。
               有关如何使用哈希代码的信息，请参见 <see cref="M:System.Object.GetHashCode" />。
            </summary>
      <returns>
              一个整数，表示此矩形的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
              创建并返回指定 <see cref="T:System.Drawing.Rectangle" /> 结构的放大副本。
               该副本被放大指定的量。
               不修改原始 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="rect">
                要从其开始操作的 <see cref="T:System.Drawing.Rectangle" />。
                 不修改此矩形。
              </param>
      <param name="x">
                此 <see cref="T:System.Drawing.Rectangle" /> 的水平放大量。
              </param>
      <param name="y">
                此 <see cref="T:System.Drawing.Rectangle" /> 的垂直放大量。
              </param>
      <returns>
              放大的 <see cref="T:System.Drawing.Rectangle" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Drawing.Size)">
      <summary>
              将此 <see cref="T:System.Drawing.Rectangle" /> 放大指定量。
            </summary>
      <param name="size">
                此矩形的放大量。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)">
      <summary>
              将此 <see cref="T:System.Drawing.Rectangle" /> 放大指定量。
            </summary>
      <param name="width">
                此 <see cref="T:System.Drawing.Rectangle" /> 的水平放大量。
              </param>
      <param name="height">
                此 <see cref="T:System.Drawing.Rectangle" /> 的垂直放大量。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)">
      <summary>
              将此 <see cref="T:System.Drawing.Rectangle" /> 替换为其自身与指定 <see cref="T:System.Drawing.Rectangle" /> 的交集。
            </summary>
      <param name="rect">
                用其进行相交操作的 <see cref="T:System.Drawing.Rectangle" />。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
              返回第三个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示其他两个 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。
               如果没有重叠，将返回空的 <see cref="T:System.Drawing.Rectangle" />。
            </summary>
      <param name="a">
                要相交的矩形。
              </param>
      <param name="b">
                要相交的矩形。
              </param>
      <returns>
              表示 <paramref name="a" /> 和 <paramref name="b" /> 的交集的 <see cref="T:System.Drawing.Rectangle" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)">
      <summary>
              确定此矩形是否与 <paramref name="rect" /> 相交。
            </summary>
      <param name="rect">
                要测试的矩形。
              </param>
      <returns>
              如果有重叠，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Offset(System.Drawing.Point)">
      <summary>
              将此矩形的位置调整指定的量。
            </summary>
      <param name="pos">
                该位置的偏移量。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.Offset(System.Int32,System.Int32)">
      <summary>
              将此矩形的位置调整指定的量。
            </summary>
      <param name="x">
                水平偏移量。
              </param>
      <param name="y">
                垂直偏移量。
              </param>
    </member>
    <member name="M:System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
              测试两个 <see cref="T:System.Drawing.Rectangle" /> 结构的位置和大小是否相同。
            </summary>
      <param name="left">
                相等运算符左侧的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <param name="right">
                相等运算符右侧的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <returns>
              如果两个 <see cref="T:System.Drawing.Rectangle" /> 结构的 <see cref="P:System.Drawing.Rectangle.X" />、<see cref="P:System.Drawing.Rectangle.Y" />、<see cref="P:System.Drawing.Rectangle.Width" /> 和 <see cref="P:System.Drawing.Rectangle.Height" /> 属性值均相等，此运算符将返回 <see langword="true" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
              测试两个 <see cref="T:System.Drawing.Rectangle" /> 结构的位置或大小是否不同。
            </summary>
      <param name="left">
                不等运算符左侧的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <param name="right">
                不等运算符右侧的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
      <returns>
              如果两个 <see cref="T:System.Drawing.Rectangle" /> 结构的 <see cref="P:System.Drawing.Rectangle.X" />、<see cref="P:System.Drawing.Rectangle.Y" />、<see cref="P:System.Drawing.Rectangle.Width" /> 或 <see cref="P:System.Drawing.Rectangle.Height" /> 属性值中有任何一个不相等，此运算符将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Round(System.Drawing.RectangleF)">
      <summary>
              通过将 <see cref="T:System.Drawing.RectangleF" /> 舍入到最近的整数值，将指定的 <see cref="T:System.Drawing.RectangleF" /> 转换为 <see cref="T:System.Drawing.Rectangle" />。
            </summary>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.RectangleF" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Rectangle" /> 的四舍五入整数值。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.ToString">
      <summary>
              将此 <see cref="T:System.Drawing.Rectangle" /> 的特性转换为可读字符串。
            </summary>
      <returns>
              一个包含此 <see cref="T:System.Drawing.Rectangle" /> 结构 ¾ 的位置、宽度和高度的字符串，例如 {X=20, Y=20, Width=100, Height=50} 
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)">
      <summary>
              通过截断 <see cref="T:System.Drawing.RectangleF" /> 值，将指定的 <see cref="T:System.Drawing.RectangleF" /> 转换为 <see cref="T:System.Drawing.Rectangle" />。
            </summary>
      <param name="value">
                要转换的 <see cref="T:System.Drawing.RectangleF" />。
              </param>
      <returns>
              <see cref="T:System.Drawing.Rectangle" /> 的截断值。
            </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
              获取包含两个 <see cref="T:System.Drawing.Rectangle" /> 结构的交集的 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="a">
                要合并的矩形。
              </param>
      <param name="b">
                要合并的矩形。
              </param>
      <returns>
              包含两个 <see cref="T:System.Drawing.Rectangle" /> 结构的交集的 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.RectangleConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定是否此转换器可以将给定的源类型的对象转换为该转换器的本机类型。
            </summary>
      <param name="context">
                一个格式化程序的上下文。
                 此对象可以用于获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="sourceType">
                您想要将从转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此对象可以执行的转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              获取一个值，该值指示此转换器是否可以将对象转换为给定的目标类型使用的上下文。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的对象。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可以返回 <see langword="null" />。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> 对象，表示要转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果该转换器能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              将给定类型转换为 <see cref="T:System.Drawing.Rectangle" /> 对象。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" /> 包含区域性特定信息，如语言、 日历和关联与特定区域性的区域性约定。
                 它基于 RFC 1766 标准。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将指定的对象转换成指定的类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" /> 包含区域性特定信息，如语言、 日历和关联与特定区域性的区域性约定。
                 它基于 RFC 1766 标准。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                对象要转换为的类型。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
              创建此类型的对象提供一组属性值的实例。
               这非常有用的是固定不变，但仍想要提供可变属性的对象。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可以提供通过哪些其他上下文。
              </param>
      <param name="propertyValues">
                新属性值的字典。
                 该字典包含一系列名称 / 值对，一个用于每个属性返回通过调用 <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> 方法。
              </param>
      <returns>
              新创建的对象，或 <see langword="null" /> 如果无法创建该对象。
               默认实现返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定更改此对象上的某个值是否需要对调用 <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 若要创建一个新值。
            </summary>
      <param name="context">
                可以通过它提供其他上下文将类型描述符。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 更改时发出此对象的一个或多个属性; 否则为应调用 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
              检索此类型的属性集。
               默认情况下，一种类型不返回任何属性。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可以提供通过哪些其他上下文。
              </param>
      <param name="value">
                要获取的属性的对象的值。
              </param>
      <param name="attributes">
                一个数组 <see cref="T:System.Attribute" /> 描述属性的对象。
              </param>
      <returns>
              此数据类型不应公开的属性集。
               如果应公开任何属性，这可能会返回 <see langword="null" />。
               默认实现始终返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定此对象是否支持属性。
               默认情况下，这是 <see langword="false" />。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可以提供通过哪些其他上下文。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> 应被调用来查找此对象的属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
              用指定的位置和大小初始化 <see cref="T:System.Drawing.RectangleF" /> 类的新实例。
            </summary>
      <param name="location">
                <see cref="T:System.Drawing.PointF" />，它表示矩形区域的左上角。
              </param>
      <param name="size">
                <see cref="T:System.Drawing.SizeF" />，它表示矩形区域的宽度和高度。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              用指定的位置和大小初始化 <see cref="T:System.Drawing.RectangleF" /> 类的新实例。
            </summary>
      <param name="x">
                矩形左上角的 x 坐标。
              </param>
      <param name="y">
                矩形左上角的 y 坐标。
              </param>
      <param name="width">
                矩形的宽度。
              </param>
      <param name="height">
                矩形的高度。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Drawing.PointF)">
      <summary>
              确定指定的点是否包含在此 <see cref="T:System.Drawing.RectangleF" /> 结构内。
            </summary>
      <param name="pt">
                要测试的 <see cref="T:System.Drawing.PointF" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果表示的点 <paramref name="pt" /> 参数包含在此 <see cref="T:System.Drawing.RectangleF" /> 结构; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)">
      <summary>
              确定 <paramref name="rect" /> 表示的矩形区域是否完全包含在此 <see cref="T:System.Drawing.RectangleF" /> 结构内。
            </summary>
      <param name="rect">
                要测试的 <see cref="T:System.Drawing.RectangleF" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果表示矩形区域 <paramref name="rect" /> 所表示的矩形区域范围内完全包含 <see cref="T:System.Drawing.RectangleF" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Single,System.Single)">
      <summary>
              确定指定的点是否包含在此 <see cref="T:System.Drawing.RectangleF" /> 结构内。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <returns>
              如果 <paramref name="x" /> 和 <paramref name="y" /> 定义的点包含在此 <see cref="T:System.Drawing.RectangleF" /> 结构中，此方法将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Equals(System.Object)">
      <summary>
              测试是否 <paramref name="obj" /> 是 <see cref="T:System.Drawing.RectangleF" /> 具有相同的位置和大小的 <see cref="T:System.Drawing.RectangleF" />。
            </summary>
      <param name="obj">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.RectangleF" /> 并将其 <see langword="X" />, ，<see langword="Y" />, ，<see langword="Width" />, ，和 <see langword="Height" /> 的对应属性相等 <see cref="T:System.Drawing.RectangleF" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              创建 <see cref="T:System.Drawing.RectangleF" /> 结构具有窗口左上角和右下角位于指定位置。
            </summary>
      <param name="left">
                该矩形区域的左上角 x 坐标。
              </param>
      <param name="top">
                该矩形区域的左上角 y 坐标。
              </param>
      <param name="right">
                该矩形区域的右下角 x 坐标。
              </param>
      <param name="bottom">
                该矩形区域的右下角 y 坐标。
              </param>
      <returns>
              此方法创建的新 <see cref="T:System.Drawing.RectangleF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.GetHashCode">
      <summary>
              获取此哈希代码 <see cref="T:System.Drawing.RectangleF" /> 结构。
               有关使用哈希代码的信息，请参阅 <see langword="Object.GetHashCode" />。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 的哈希代码。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
              创建并返回指定 <see cref="T:System.Drawing.RectangleF" /> 结构的放大副本。
               该副本被放大指定量并不修改原始矩形。
            </summary>
      <param name="rect">
                要复制的 <see cref="T:System.Drawing.RectangleF" />。
                 不修改此矩形。
              </param>
      <param name="x">
                水平副本的矩形的放大量。
              </param>
      <param name="y">
                副本的矩形垂直放大量。
              </param>
      <returns>
              放大的 <see cref="T:System.Drawing.RectangleF" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)">
      <summary>
              将此 <see cref="T:System.Drawing.RectangleF" /> 放大指定量。
            </summary>
      <param name="size">
                此矩形的放大量。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Single,System.Single)">
      <summary>
              这将放大 <see cref="T:System.Drawing.RectangleF" /> 结构指定的量。
            </summary>
      <param name="x">
                这样的放大量 <see cref="T:System.Drawing.RectangleF" /> 结构的水平。
              </param>
      <param name="y">
                这样的放大量 <see cref="T:System.Drawing.RectangleF" /> 结构的垂直。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)">
      <summary>
              将此 <see cref="T:System.Drawing.RectangleF" /> 结构替换为其自身与指定的 <see cref="T:System.Drawing.RectangleF" /> 结构的交集。
            </summary>
      <param name="rect">
                要相交的矩形。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
              返回 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示两个矩形交集。
               如果没有重叠和空 <see cref="T:System.Drawing.RectangleF" /> 返回。
            </summary>
      <param name="a">
                要相交的矩形。
              </param>
      <param name="b">
                要相交的矩形。
              </param>
      <returns>
              第三个 <see cref="T:System.Drawing.RectangleF" /> 结构的大小表示两个指定的矩形的重叠的区域。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)">
      <summary>
              确定此矩形是否与 <paramref name="rect" /> 相交。
            </summary>
      <param name="rect">
                要测试的矩形。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果重叠。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Offset(System.Drawing.PointF)">
      <summary>
              将此矩形的位置调整指定的量。
            </summary>
      <param name="pos">
                该位置的偏移量。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Offset(System.Single,System.Single)">
      <summary>
              将此矩形的位置调整指定的量。
            </summary>
      <param name="x">
                该位置的水平偏移量。
              </param>
      <param name="y">
                该位置的垂直偏移量。
              </param>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
              测试两个 <see cref="T:System.Drawing.RectangleF" /> 结构的位置和大小是否相同。
            </summary>
      <param name="left">
                相等运算符左侧的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <param name="right">
                相等运算符右侧的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <returns>
              此运算符可返回 <see langword="true" /> 如果两个指定 <see cref="T:System.Drawing.RectangleF" /> 结构具有相等 <see cref="P:System.Drawing.RectangleF.X" />, ，<see cref="P:System.Drawing.RectangleF.Y" />, ，<see cref="P:System.Drawing.RectangleF.Width" />, ，和 <see cref="P:System.Drawing.RectangleF.Height" /> 属性。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF">
      <summary>
              将指定 <see cref="T:System.Drawing.Rectangle" /> 结构 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <param name="r">
                <see cref="T:System.Drawing.Rectangle" /> 要转换的结构。
              </param>
      <returns>
              <see cref="T:System.Drawing.RectangleF" /> 结构，它是从指定转换 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
              测试两个 <see cref="T:System.Drawing.RectangleF" /> 结构的位置或大小是否不同。
            </summary>
      <param name="left">
                不等运算符左侧的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <param name="right">
                不等运算符右侧的 <see cref="T:System.Drawing.RectangleF" /> 结构。
              </param>
      <returns>
              此运算符可返回 <see langword="true" /> 如果任一 <see cref="P:System.Drawing.RectangleF.X" /> , ，<see cref="P:System.Drawing.RectangleF.Y" />, ，<see cref="P:System.Drawing.RectangleF.Width" />, ，或 <see cref="P:System.Drawing.RectangleF.Height" /> 的两个属性 <see cref="T:System.Drawing.Rectangle" /> 结构是否不相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.ToString">
      <summary>
              将转换 <see langword="Location" /> 和 <see cref="T:System.Drawing.Size" /> 此 <see cref="T:System.Drawing.RectangleF" /> 到用户可读字符串。
            </summary>
      <returns>
              一个字符串，包含位置、 宽度和高度这 <see cref="T:System.Drawing.RectangleF" /> 结构。
               例如，"{X = 20，Y = 20，Width = 100，Height = 50}"。
            </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
              创建可以包含两个形成并集的两个矩形的最小可能第三个矩形。
            </summary>
      <param name="a">
                要合并的矩形。
              </param>
      <param name="b">
                要合并的矩形。
              </param>
      <returns>
              第三个 <see cref="T:System.Drawing.RectangleF" /> 结构，其中包含这两个形成并集的两个矩形。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>
              初始化新的 <see cref="T:System.Drawing.Region" />。
            </summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 初始化新的 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它定义新的 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>
              从指定的数据中初始化新的 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="rgnData">
                一个 <see cref="T:System.Drawing.Drawing2D.RegionData" />，它定义新的 <see cref="T:System.Drawing.Region" /> 的内部。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="rgnData" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>
              初始化新 <see cref="T:System.Drawing.Region" /> 从指定 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它定义新的内部 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>
              初始化新 <see cref="T:System.Drawing.Region" /> 从指定 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <param name="rect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它定义新的内部 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.Region" /> 的一个精确副本。
            </summary>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Region" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 以包含与此 <see cref="T:System.Drawing.Region" /> 不相交的指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的那部分。
            </summary>
      <param name="path">
                要对此 <see cref="T:System.Drawing.Region" /> 进行补充的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 要包含的指定部分 <see cref="T:System.Drawing.Rectangle" /> 与此不相交的结构 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构来补充这 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 要包含的指定部分 <see cref="T:System.Drawing.RectangleF" /> 与此不相交的结构 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构来补充这 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 以包含与此 <see cref="T:System.Drawing.Region" /> 不相交的指定的 <see cref="T:System.Drawing.Region" /> 的那部分。
            </summary>
      <param name="region">
                要对此 <see cref="T:System.Drawing.Region" /> 对象进行补充的 <see cref="T:System.Drawing.Region" /> 对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="region" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Region" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>
              测试是否指定 <see cref="T:System.Drawing.Region" /> 是否与此 <see cref="T:System.Drawing.Region" /> 绘图图面上指定。
            </summary>
      <param name="region">
                要测试的 <see cref="T:System.Drawing.Region" />。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示绘图图面。
              </param>
      <returns>
              <see langword="true" /> 如果与转换关联时，均不同于内部与此区域的内部与区域 <paramref name="g" /> 参数是应用; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="g" /> 或 <paramref name="region" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 包含只有不相交具有指定其内部的部分 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 排除这 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 包含只有不相交具有指定其内部的部分 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构排除这 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 包含只有不相交具有指定其内部的部分 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构排除这 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 包含只有不相交具有指定其内部的部分 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="region">
                <see cref="T:System.Drawing.Region" /> 排除这 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="region" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>
              初始化新 <see cref="T:System.Drawing.Region" /> 从指定的现有的句柄 GDI 区域。
            </summary>
      <param name="hrgn">
                一个现有的句柄 <see cref="T:System.Drawing.Region" />。
              </param>
      <returns>
              新的 <see cref="T:System.Drawing.Region" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>
              获取 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示限定此矩形 <see cref="T:System.Drawing.Region" /> 的绘图图面上 <see cref="T:System.Drawing.Graphics" /> 对象。
            </summary>
      <param name="g">
                <see cref="T:System.Drawing.Graphics" /> 此 <see cref="T:System.Drawing.Region" /> 绘制。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.Region" /> 绘图图面上指定。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="g" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>
              这将返回 Windows 句柄 <see cref="T:System.Drawing.Region" /> 中指定的图形上下文。
            </summary>
      <param name="g">
                <see cref="T:System.Drawing.Graphics" /> 此 <see cref="T:System.Drawing.Region" /> 绘制。
              </param>
      <returns>
              此 <see cref="T:System.Drawing.Region" /> 的 Windows 句柄。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="g" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>
              返回 <see cref="T:System.Drawing.Drawing2D.RegionData" /> 表示描述此信息 <see cref="T:System.Drawing.Region" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.RegionData" /> 表示描述此信息 <see cref="T:System.Drawing.Region" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>
              返回的数组 <see cref="T:System.Drawing.RectangleF" /> 近似的结构 <see cref="T:System.Drawing.Region" /> 应用指定的矩阵变换之后。
            </summary>
      <param name="matrix">
                一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> ，表示要应用于区域的几何变换。
              </param>
      <returns>
              一个数组 <see cref="T:System.Drawing.RectangleF" /> 近似的结构 <see cref="T:System.Drawing.Region" /> 应用指定的矩阵变换之后。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="matrix" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 至其自身的与指定的交点 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 要与此相交 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>
              将此 <see cref="T:System.Drawing.Region" /> 更新为其自身与指定的 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。
            </summary>
      <param name="rect">
                要与此 <see cref="T:System.Drawing.Region" /> 相交的 <see cref="T:System.Drawing.Rectangle" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 至其自身的与指定的交点 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 相交与此 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>
              通过指定的 <see cref="T:System.Drawing.Region" />，将此 <see cref="T:System.Drawing.Region" /> 更新为其自身的交集。
            </summary>
      <param name="region">
                要与此 <see cref="T:System.Drawing.Region" /> 相交的 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>
              测试是否这 <see cref="T:System.Drawing.Region" /> 有空的内部指定的绘图图面上。
            </summary>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示绘图图面。
              </param>
      <returns>
              <see langword="true" /> 如果此内部 <see cref="T:System.Drawing.Region" /> 与转换相关联时，是空 <paramref name="g" /> 应用; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="g" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>
              测试是否这 <see cref="T:System.Drawing.Region" /> 有无限内部指定的绘图图面上。
            </summary>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示绘图图面。
              </param>
      <returns>
              <see langword="true" /> 如果此内部 <see cref="T:System.Drawing.Region" /> 时与关联的转换是无限期 <paramref name="g" /> 应用; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="g" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>
              测试是否指定 <see cref="T:System.Drawing.Point" /> 结构包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="point">
                <see cref="T:System.Drawing.Point" /> 要测试其结构。
              </param>
      <returns>
              <see langword="true" /> 当 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>
              测试是否指定 <see cref="T:System.Drawing.Point" /> 结构包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="point">
                <see cref="T:System.Drawing.Point" /> 要测试其结构。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>
              测试是否指定 <see cref="T:System.Drawing.PointF" /> 结构包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="point">
                <see cref="T:System.Drawing.PointF" /> 要测试其结构。
              </param>
      <returns>
              <see langword="true" /> 当 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>
              测试是否指定 <see cref="T:System.Drawing.PointF" /> 结构包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="point">
                <see cref="T:System.Drawing.PointF" /> 要测试其结构。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当 <paramref name="point" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>
              测试是否有任何指定的部分 <see cref="T:System.Drawing.Rectangle" /> 结构包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 要测试其结构。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 时的任何部分 <paramref name="rect" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
              测试是否有任何指定的部分 <see cref="T:System.Drawing.Rectangle" /> 结构包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 要测试其结构。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 时的任何部分 <paramref name="rect" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>
              测试是否有任何指定的部分 <see cref="T:System.Drawing.RectangleF" /> 结构包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 要测试其结构。
              </param>
      <returns>
              <see langword="true" /> 时的任何部分 <paramref name="rect" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>
              测试是否有任何指定的部分 <see cref="T:System.Drawing.RectangleF" /> 结构包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 要测试其结构。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当 <paramref name="rect" /> 包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
              测试是否指定的点包含在此 <see cref="T:System.Drawing.Region" /> 对象时使用指定绘制 <see cref="T:System.Drawing.Graphics" /> 对象。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当指定的点包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              测试是否指定任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="x">
                要测试的矩形的左上角 x 坐标。
              </param>
      <param name="y">
                要测试的矩形的左上角 y 坐标。
              </param>
      <param name="width">
                要测试的矩形的宽度。
              </param>
      <param name="height">
                要测试的矩形的高度。
              </param>
      <returns>
              <see langword="true" /> 当指定的任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
              测试是否指定任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的矩形的左上角 x 坐标。
              </param>
      <param name="y">
                要测试的矩形的左上角 y 坐标。
              </param>
      <param name="width">
                要测试的矩形的宽度。
              </param>
      <param name="height">
                要测试的矩形的高度。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当指定的任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>
              测试是否指定的点包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <returns>
              <see langword="true" /> 当指定的点包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
              测试是否指定的点包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的点的 X 坐标。
              </param>
      <param name="y">
                要测试的点的 Y 坐标。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当指定的点包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>
              测试是否指定任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="x">
                要测试的矩形的左上角 x 坐标。
              </param>
      <param name="y">
                要测试的矩形的左上角 y 坐标。
              </param>
      <param name="width">
                要测试的矩形的宽度。
              </param>
      <param name="height">
                要测试的矩形的高度。
              </param>
      <returns>
              <see langword="true" /> 当指定的任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" /> 对象; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
              测试是否指定任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" /> 时使用指定绘制 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <param name="x">
                要测试的矩形的左上角 x 坐标。
              </param>
      <param name="y">
                要测试的矩形的左上角 y 坐标。
              </param>
      <param name="width">
                要测试的矩形的宽度。
              </param>
      <param name="height">
                要测试的矩形的高度。
              </param>
      <param name="g">
                一个 <see cref="T:System.Drawing.Graphics" /> ，它表示的图形上下文。
              </param>
      <returns>
              <see langword="true" /> 当指定的任何的矩形部分包含在此 <see cref="T:System.Drawing.Region" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>
              初始化此 <see cref="T:System.Drawing.Region" /> 为一个空内部。
            </summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>
              初始化此 <see cref="T:System.Drawing.Region" /> 无限内部的对象。
            </summary>
    </member>
    <member name="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)">
      <summary>
              释放该 <see cref="T:System.Drawing.Region" /> 的句柄。
            </summary>
      <param name="regionHandle">
                <see cref="T:System.Drawing.Region" /> 的句柄。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="regionHandle" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              这一转变源自 <see cref="T:System.Drawing.Region" /> 由指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />。
            </summary>
      <param name="matrix">
                <see cref="T:System.Drawing.Drawing2D.Matrix" /> 进行变换这 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="matrix" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>
              这些坐标偏移 <see cref="T:System.Drawing.Region" /> 指定的量。
            </summary>
      <param name="dx">
                此偏移量 <see cref="T:System.Drawing.Region" /> 水平。
              </param>
      <param name="dy">
                此偏移量 <see cref="T:System.Drawing.Region" /> 垂直方向。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>
              这些坐标偏移 <see cref="T:System.Drawing.Region" /> 指定的量。
            </summary>
      <param name="dx">
                此偏移量 <see cref="T:System.Drawing.Region" /> 水平。
              </param>
      <param name="dy">
                此偏移量 <see cref="T:System.Drawing.Region" /> 垂直方向。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 为自身与指定联合 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 与此联合 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 为自身与指定联合 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构与此联合 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 为自身与指定联合 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构与此联合 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 为自身与指定联合 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="region">
                <see cref="T:System.Drawing.Region" /> 与此联合 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="region" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 到的并集的交集本身具有指定减去 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <param name="path">
                <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 到 <see cref="Overload:System.Drawing.Region.Xor" /> 与此 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 到的并集的交集本身具有指定减去 <see cref="T:System.Drawing.Rectangle" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.Rectangle" /> 结构 <see cref="Overload:System.Drawing.Region.Xor" /> 与此 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 到的并集的交集本身具有指定减去 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <param name="rect">
                <see cref="T:System.Drawing.RectangleF" /> 结构 <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> 与此 <see cref="T:System.Drawing.Region" />。
              </param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>
              更新此 <see cref="T:System.Drawing.Region" /> 到的并集的交集本身具有指定减去 <see cref="T:System.Drawing.Region" />。
            </summary>
      <param name="region">
                <see cref="T:System.Drawing.Region" /> 到 <see cref="Overload:System.Drawing.Region.Xor" /> 与此 <see cref="T:System.Drawing.Region" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="region" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.Size.#ctor(System.Drawing.Point)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Size" /> 从指定的结构 <see cref="T:System.Drawing.Point" /> 结构。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.Point" /> 结构，可用于初始化此 <see cref="T:System.Drawing.Size" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.Size.#ctor(System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.Size" /> 根据指定的维度的结构。
            </summary>
      <param name="width">
                新的宽度分量 <see cref="T:System.Drawing.Size" />。
              </param>
      <param name="height">
                新的高度分量 <see cref="T:System.Drawing.Size" />。
              </param>
    </member>
    <member name="M:System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)">
      <summary>
              添加的宽度和高度的其中一个 <see cref="T:System.Drawing.Size" /> 结构的宽度和高度与另一个 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <param name="sz1">
                第一个 <see cref="T:System.Drawing.Size" /> 可添加结构。
              </param>
      <param name="sz2">
                第二个 <see cref="T:System.Drawing.Size" /> 可添加结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 结构，它是加法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.Ceiling(System.Drawing.SizeF)">
      <summary>
              将指定 <see cref="T:System.Drawing.SizeF" /> 结构 <see cref="T:System.Drawing.Size" /> 按舍入的值显示结构 <see cref="T:System.Drawing.Size" /> 到下一个较大的整数值的结构。
            </summary>
      <param name="value">
                <see cref="T:System.Drawing.SizeF" /> 要转换的结构。
              </param>
      <returns>
              <see cref="T:System.Drawing.Size" /> 此方法将转换为结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.Equals(System.Object)">
      <summary>
              测试以确定指定的对象是否为 <see cref="T:System.Drawing.Size" /> 具有与此相同的维度的结构 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <param name="obj">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.Size" /> 具有相同的宽度和高度与此 <see cref="T:System.Drawing.Size" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.GetHashCode">
      <summary>
              返回此哈希代码 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <returns>
              一个整数值，指定此哈希值 <see cref="T:System.Drawing.Size" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)">
      <summary>
              添加的宽度和高度的其中一个 <see cref="T:System.Drawing.Size" /> 结构的宽度和高度与另一个 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <param name="sz1">
                第一个 <see cref="T:System.Drawing.Size" /> 添加。
              </param>
      <param name="sz2">
                第二个 <see cref="T:System.Drawing.Size" /> 添加。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 结构，它是加法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)">
      <summary>
              测试两个 <see cref="T:System.Drawing.Size" /> 结构是否相等。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.Size" /> 相等运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.Size" /> 相等运算符右侧的结构。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="sz1" /> 和 <paramref name="sz2" /> 具有相等宽度和高度; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Explicit(System.Drawing.Size)~System.Drawing.Point">
      <summary>
              将指定 <see cref="T:System.Drawing.Size" /> 结构 <see cref="T:System.Drawing.Point" /> 结构。
            </summary>
      <param name="size">
                <see cref="T:System.Drawing.Size" /> 要转换的结构。
              </param>
      <returns>
              <see cref="T:System.Drawing.Point" /> 此运算符将转换为结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Implicit(System.Drawing.Size)~System.Drawing.SizeF">
      <summary>
              将指定 <see cref="T:System.Drawing.Size" /> 结构 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="p">
                <see cref="T:System.Drawing.Size" /> 要转换的结构。
              </param>
      <returns>
              <see cref="T:System.Drawing.SizeF" /> 此运算符将转换为结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)">
      <summary>
              测试两个 <see cref="T:System.Drawing.Size" /> 结构是否不同。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.Size" /> 不等运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.Size" /> 不等运算符右侧的结构。
              </param>
      <returns>
              <see langword="true" /> 如果 <paramref name="sz1" /> 和 <paramref name="sz2" /> 不同的宽度或高度; <see langword="false" /> 如果 <paramref name="sz1" /> 和 <paramref name="sz2" /> 是否相等。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)">
      <summary>
              减去的宽度和高度的其中一个 <see cref="T:System.Drawing.Size" /> 结构的宽度和高度与另一个从 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.Size" /> 减法运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.Size" /> 减法运算符右侧的结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 结构，它是减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.Round(System.Drawing.SizeF)">
      <summary>
              将指定 <see cref="T:System.Drawing.SizeF" /> 结构 <see cref="T:System.Drawing.Size" /> 按舍入的值显示结构 <see cref="T:System.Drawing.SizeF" /> 到最接近的整数值的结构。
            </summary>
      <param name="value">
                <see cref="T:System.Drawing.SizeF" /> 要转换的结构。
              </param>
      <returns>
              <see cref="T:System.Drawing.Size" /> 此方法将转换为结构。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)">
      <summary>
              减去的宽度和高度的其中一个 <see cref="T:System.Drawing.Size" /> 从宽度和高度与另一个结构 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.Size" /> 减法运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.Size" /> 减法运算符右侧的结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 结构，它是减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.ToString">
      <summary>
              创建一个用户可读的字符串，表示此 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <returns>
              表示此 <see cref="T:System.Drawing.Size" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Drawing.Size.Truncate(System.Drawing.SizeF)">
      <summary>
              将指定 <see cref="T:System.Drawing.SizeF" /> 结构 <see cref="T:System.Drawing.Size" /> 通过截断的值的结构 <see cref="T:System.Drawing.SizeF" /> 到下一个较低的整数值的结构。
            </summary>
      <param name="value">
                <see cref="T:System.Drawing.SizeF" /> 要转换的结构。
              </param>
      <returns>
              <see cref="T:System.Drawing.Size" /> 此方法将转换为结构。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.#ctor">
      <summary>
              初始化新的 <see cref="T:System.Drawing.SizeConverter" /> 对象。
            </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              确定此转换器是否可以将指定的源类型的对象转换为该转换器的本机类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="sourceType">
                您想要将从转换的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果此对象可以执行转换。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              获取一个值，该值指示此转换器是否可以将对象转换为给定的目标类型使用的上下文。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此总是需要检查。
                 同样，context 对象的属性可以返回 <see langword="null" />。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" />，表示你希望转换为的类型。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果该转换器能够执行转换; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              将指定的对象转换为转换器的本机类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" /> 包含区域性特定信息，如语言、 日历和区域性的约定与特定区域性关联的对象。
                 它基于 RFC 1766 标准。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将指定的对象转换成指定的类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取有关从中调用此转换器的环境的其他信息。
                 这可能是 <see langword="null" />, ，因此应始终对其进行检查。
                 同样，上下文对象上的属性也可能返回 <see langword="null" />。
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" /> 包含区域性特定信息，如语言、 日历和区域性的约定与特定区域性关联的对象。
                 它基于 RFC 1766 标准。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                对象要转换为的类型。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  无法完成转换。
                </exception>
    </member>
    <member name="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
              为该对象使用一组指定的属性值创建此类型的对象。
               这可用于创建具有可更改属性的非可更改对象。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <param name="propertyValues">
                新属性值的字典。
                 字典中包含一系列名称 / 值对，一个用于每个属性返回从 <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> 方法。
              </param>
      <returns>
              新创建的对象，或 <see langword="null" /> 如果无法创建该对象。
               默认实现返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定是否更改此对象上的某个值是否需要对调用 <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 方法来创建一个新值。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 对此对象的一个或多个属性进行更改时，应调用对象。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
              检索此类型的属性集。
               默认情况下，一种类型没有要返回的任何属性。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <param name="value">
                要获取的属性的对象的值。
              </param>
      <param name="attributes">
                一个数组 <see cref="T:System.Attribute" /> 描述属性的对象。
              </param>
      <returns>
              此数据类型不应公开的属性集。
               如果应公开任何属性，这可能会返回 <see langword="null" />。
               默认实现始终返回 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              确定此对象是否支持属性。
               默认情况下，这是 <see langword="false" />。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.TypeDescriptor" /> 可以提供通过哪些其他上下文。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> 应调用方法来查找此对象的属性。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Drawing.PointF)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.SizeF" /> 从指定的结构 <see cref="T:System.Drawing.PointF" /> 结构。
            </summary>
      <param name="pt">
                <see cref="T:System.Drawing.PointF" /> 结构，可用于初始化此 <see cref="T:System.Drawing.SizeF" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Drawing.SizeF)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.SizeF" /> 从指定的现有结构 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="size">
                <see cref="T:System.Drawing.SizeF" /> 从中创建新的结构 <see cref="T:System.Drawing.SizeF" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Single,System.Single)">
      <summary>
              新实例初始化 <see cref="T:System.Drawing.SizeF" /> 根据指定的维度的结构。
            </summary>
      <param name="width">
                新的宽度分量 <see cref="T:System.Drawing.SizeF" /> 结构。
              </param>
      <param name="height">
                新的高度分量 <see cref="T:System.Drawing.SizeF" /> 结构。
              </param>
    </member>
    <member name="M:System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
              添加的宽度和高度的其中一个 <see cref="T:System.Drawing.SizeF" /> 结构的宽度和高度与另一个 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="sz1">
                第一个 <see cref="T:System.Drawing.SizeF" /> 可添加结构。
              </param>
      <param name="sz2">
                第二个 <see cref="T:System.Drawing.SizeF" /> 可添加结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.SizeF" /> 结构，它是加法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.Equals(System.Object)">
      <summary>
              测试以确定指定的对象是否为 <see cref="T:System.Drawing.SizeF" /> 具有与此相同的维度的结构 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="obj">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.SizeF" /> 具有相同的宽度和高度与此 <see cref="T:System.Drawing.SizeF" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.GetHashCode">
      <summary>
              返回此哈希代码 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <returns>
              一个整数值，指定此哈希值 <see cref="T:System.Drawing.Size" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
              添加的宽度和高度的其中一个 <see cref="T:System.Drawing.SizeF" /> 结构的宽度和高度与另一个 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="sz1">
                第一个 <see cref="T:System.Drawing.SizeF" /> 可添加结构。
              </param>
      <param name="sz2">
                第二个 <see cref="T:System.Drawing.SizeF" /> 可添加结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 结构，它是加法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
              测试两个 <see cref="T:System.Drawing.SizeF" /> 结构是否相等。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.SizeF" /> 相等运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.SizeF" /> 相等运算符右侧的结构。
              </param>
      <returns>
              此运算符可返回 <see langword="true" /> 如果 <paramref name="sz1" /> 和 <paramref name="sz2" /> 具有相等宽度和高度; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF)~System.Drawing.PointF">
      <summary>
              将指定 <see cref="T:System.Drawing.SizeF" /> 结构 <see cref="T:System.Drawing.PointF" /> 结构。
            </summary>
      <param name="size">
                <see cref="T:System.Drawing.SizeF" /> 结构会在待转换
              </param>
      <returns>
              <see cref="T:System.Drawing.PointF" /> 此运算符将转换为结构。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
              测试两个 <see cref="T:System.Drawing.SizeF" /> 结构是否不同。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.SizeF" /> 不等运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.SizeF" /> 不等运算符右侧的结构。
              </param>
      <returns>
              此运算符可返回 <see langword="true" /> 如果 <paramref name="sz1" /> 和 <paramref name="sz2" /> 不同的宽度或高度; <see langword="false" /> 如果 <paramref name="sz1" /> 和 <paramref name="sz2" /> 是否相等。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
              减去的宽度和高度的其中一个 <see cref="T:System.Drawing.SizeF" /> 从宽度和高度与另一个结构 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.SizeF" /> 减法运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.SizeF" /> 减法运算符右侧的结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.SizeF" /> 它是减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
              减去的宽度和高度的其中一个 <see cref="T:System.Drawing.SizeF" /> 从宽度和高度与另一个结构 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <param name="sz1">
                <see cref="T:System.Drawing.SizeF" /> 减法运算符左侧的结构。
              </param>
      <param name="sz2">
                <see cref="T:System.Drawing.SizeF" /> 减法运算符右侧的结构。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.SizeF" /> 结构，它是减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.ToPointF">
      <summary>
              将转换 <see cref="T:System.Drawing.SizeF" /> 结构 <see cref="T:System.Drawing.PointF" /> 结构。
            </summary>
      <returns>
              返回 <see cref="T:System.Drawing.PointF" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.ToSize">
      <summary>
              将转换 <see cref="T:System.Drawing.SizeF" /> 结构 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <returns>
              返回 <see cref="T:System.Drawing.Size" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeF.ToString">
      <summary>
              创建一个用户可读的字符串，表示此 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <returns>
              一个字符串，表示此 <see cref="T:System.Drawing.SizeF" /> 结构。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.SizeFConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              返回一个值，该值指示该转换器可以转换到指定的类型 <see cref="T:System.Drawing.SizeF" /> 类型，使用指定的上下文。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可提供通过哪些其他上下文。
              </param>
      <param name="sourceType">
                一个 <see cref="T:System.Type" /> 表示您希望从转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果该转换可执行;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              返回一个值，该值指示是否 <see cref="T:System.Drawing.SizeFConverter" /> 可转换 <see cref="T:System.Drawing.SizeF" /> 为指定的类型。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可提供通过哪些其他上下文。
              </param>
      <param name="destinationType">
                一个 <see cref="T:System.Type" /> ，它表示您想要将从转换的类型。
              </param>
      <returns>
              <see langword="true" /> 如果该转换器能够执行转换，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
              使用指定的上下文和区域性信息将给定对象转换为此转换器的类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                要用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Object" />。
              </param>
      <returns>
              一个 <see cref="T:System.Object" />，它表示转换后的值。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              使用指定的上下文和区域性信息将给定值对象转换为指定的类型。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
              </param>
      <param name="culture">
                <see cref="T:System.Globalization.CultureInfo" />。
                 如果传递 null，则采用当前区域性。
              </param>
      <param name="value">
                要转换的 <see cref="T:System.Object" />。
              </param>
      <param name="destinationType">
                值参数所要转换成的 <see cref="T:System.Type" />。
              </param>
      <returns>
              一个 <see cref="T:System.Object" />，它表示转换后的值。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
              创建的一个实例 <see cref="T:System.Drawing.SizeF" /> 具有使用指定的上下文的指定的属性值。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可提供通过哪些其他上下文。
              </param>
      <param name="propertyValues">
                <see cref="T:System.Collections.IDictionary" /> 包含属性名称和值。
              </param>
      <returns>
              <see cref="T:System.Object" /> 表示新 <see cref="T:System.Drawing.SizeF" />, ，或 <see langword="null" /> 如果不能创建该对象。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              返回一个值，该值指示是否更改此对象的值需要调用 <see cref="Overload:System.Drawing.SizeFConverter.CreateInstance" /> 方法来创建一个新值。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。
                 这可能是 <see langword="null" />。
              </param>
      <returns>
              始终返回 <see langword="true" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
              检索属性的一组 <see cref="T:System.Drawing.SizeF" /> 类型使用指定的上下文和属性。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可提供通过哪些其他上下文。
              </param>
      <param name="value">
                <see cref="T:System.Object" /> 要返回的属性。
              </param>
      <param name="attributes">
                一个数组 <see cref="T:System.Attribute" /> 描述属性的对象。
              </param>
      <returns>
              一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> 包含的属性。
            </returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              返回是否 <see cref="T:System.Drawing.SizeF" /> 类型支持属性。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可提供通过哪些其他上下文。
              </param>
      <returns>
              始终返回 <see langword="true" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>
              初始化新 <see cref="T:System.Drawing.SolidBrush" /> 指定颜色的对象。
            </summary>
      <param name="color">
                一个 <see cref="T:System.Drawing.Color" /> 结构，它表示此画笔的颜色。
              </param>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.SolidBrush" /> 对象的一个精确副本。
            </summary>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.SolidBrush" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>
              初始化新的 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>
              从指定的现有 <see cref="T:System.Drawing.StringFormat" /> 对象初始化新 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </summary>
      <param name="format">
                <see cref="T:System.Drawing.StringFormat" /> 对象，从该对象初始化新 <see cref="T:System.Drawing.StringFormat" /> 对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="format" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>
              用指定的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举初始化新 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </summary>
      <param name="options">
                新 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。
              </param>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>
              用指定的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举和语言初始化新的 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </summary>
      <param name="options">
                新 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。
              </param>
      <param name="language">
                一个指示文本语言的值。
              </param>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.StringFormat" /> 对象的一个精确副本。
            </summary>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>
              释放由此 <see cref="T:System.Drawing.StringFormat" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>
              获取此 <see cref="T:System.Drawing.StringFormat" /> 对象的制表位。
            </summary>
      <param name="firstTabOffset">
                文本行的开头到第一个制表位之间的空格数。
              </param>
      <returns>
              制表位之间的距离（以空格数表示）的数组。
            </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>
              指定将本地数字替换为西方数字时所使用的语言和方法。
            </summary>
      <param name="language">
                一个区域语言支持 (NLS) 语言标识符，它标识在将本地数字替换为西方数字时所使用的语言。
                 可将 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性作为 NLS 语言标识符传递。
                 例如，假定通过将字符串“ar-EG”传递给 <see cref="T:System.Globalization.CultureInfo" /> 构造函数来创建 <see cref="T:System.Globalization.CultureInfo" /> 对象。
                 如果将该 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性连同 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> 一起传递给 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" />，则在显示时阿拉伯 - 印度文数字将会替换西方数字。
              </param>
      <param name="substitute">
                <see cref="T:System.Drawing.StringDigitSubstitute" /> 枚举的一个元素，它指定如何显示数字位。
              </param>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>
              指定 <see cref="T:System.Drawing.CharacterRange" /> 结构的数组，这些结构表示通过调用 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 方法来测定的字符的范围。
            </summary>
      <param name="ranges">
                <see cref="T:System.Drawing.CharacterRange" /> 结构的数组，这些结构指定由调用 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 方法来测定的字符范围。
              </param>
      <exception cref="T:System.OverflowException">
                  已设置超过 32 个字符范围。
                </exception>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>
              为此 <see cref="T:System.Drawing.StringFormat" /> 对象设置制表位。
            </summary>
      <param name="firstTabOffset">
                文本行开头和第一个制表位之间的空格数。
              </param>
      <param name="tabStops">
                制表位之间的距离的数组，这些距离的单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。
              </param>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>
              将此 <see cref="T:System.Drawing.StringFormat" /> 对象转换为可读的字符串。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.StringFormat" /> 对象的字符串表示形式。
            </returns>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>
              创建 <see cref="T:System.Drawing.Brush" /> 从指定 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <param name="c">
                <see cref="T:System.Drawing.Color" /> 从中创建结构 <see cref="T:System.Drawing.Brush" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Brush" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SystemFonts.GetFontByName(System.String)">
      <summary>
              返回一个字体对应于对象指定的系统字体名称。
            </summary>
      <param name="systemFontName">
                您需要为一个 font 对象为系统字体的名称。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 如果指定的名称中的值匹配 <see cref="T:System.Drawing.SystemFonts" />; 否则为 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>
              创建 <see cref="T:System.Drawing.Pen" /> 从指定 <see cref="T:System.Drawing.Color" />。
            </summary>
      <param name="c">
                <see cref="T:System.Drawing.Color" /> 新 <see cref="T:System.Drawing.Pen" />。
              </param>
      <returns>
              此方法创建的 <see cref="T:System.Drawing.Pen" />。
            </returns>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>
              释放此 <see cref="T:System.Drawing.Text.FontCollection" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Drawing.Text.FontCollection" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize">
      <summary>
              在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Text.InstalledFontCollection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>
              初始化 <see cref="T:System.Drawing.Text.PrivateFontCollection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>
              将一种字体从指定的文件添加到此 <see cref="T:System.Drawing.Text.PrivateFontCollection" />。
            </summary>
      <param name="filename">
                一个 <see cref="T:System.String" /> ，其中包含要添加的字体的文件名。
              </param>
      <exception cref="T:System.IO.FileNotFoundException">
                  不支持指定的字体或找不到字体文件。
                </exception>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>
              将添加到此系统内存中的字体 <see cref="T:System.Drawing.Text.PrivateFontCollection" />。
            </summary>
      <param name="memory">
                要添加的字体的内存地址。
              </param>
      <param name="length">
                要添加的字体内存长度。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的映像。
            </summary>
      <param name="bitmap">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的映像和自动换行模式。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="wrapMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，用于指定如何将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的平铺。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的图像、 环绕模式和边框。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="wrapMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，用于指定如何将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的平铺。
              </param>
      <param name="dstRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的图像、 环绕模式和边框。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="wrapMode">
                一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，用于指定如何将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的平铺。
              </param>
      <param name="dstRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的图像和边框。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="dstRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的图像、 边框和图像属性。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="dstRect">
                一个 <see cref="T:System.Drawing.Rectangle" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，其中包含有关由此所使用的映像的其他信息 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的图像和边框。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="dstRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>
              初始化新 <see cref="T:System.Drawing.TextureBrush" /> 对象，它使用指定的图像、 边框和图像属性。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" /> 对象与此 <see cref="T:System.Drawing.TextureBrush" /> 对象来填充其内部。
              </param>
      <param name="dstRect">
                一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此边界的矩形 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
      <param name="imageAttr">
                <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 对象，其中包含有关由此所使用的映像的其他信息 <see cref="T:System.Drawing.TextureBrush" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>
              创建此 <see cref="T:System.Drawing.TextureBrush" /> 对象的一个精确副本。
            </summary>
      <returns>
              <see cref="T:System.Drawing.TextureBrush" /> 此方法创建的对象强制转换为 <see cref="T:System.Object" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
              通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象，将表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象与指定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象相乘。
            </summary>
      <param name="matrix">
                要乘以几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              将表示此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象按指定顺序相乘。
            </summary>
      <param name="matrix">
                要乘以几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象。
              </param>
      <param name="order">
                用于指定两个矩阵相乘的顺序的 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>
              将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的 <see langword="Transform" /> 属性重置为标识。
            </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>
              将 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换旋转指定量。
               此方法将旋转添加到转换前。
            </summary>
      <param name="angle">
                旋转角度。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              以指定顺序将 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换旋转指定的量。
            </summary>
      <param name="angle">
                旋转角度。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举，指定是在后面追加还是在前面添加旋转矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
              此局部几何变换缩放 <see cref="T:System.Drawing.TextureBrush" /> 对象指定的量。
               此方法将缩放矩阵添加到转换前。
            </summary>
      <param name="sx">
                若要在 x 方向缩放变换的量。
              </param>
      <param name="sy">
                若要在 y 方向缩放变换的量。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              以指定顺序将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换按指定量进行缩放。
            </summary>
      <param name="sx">
                沿 x 方向缩放转换的量。
              </param>
      <param name="sy">
                沿 y 方向缩放转换的量。
              </param>
      <param name="order">
                一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
              根据指定维度，转换此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何变换。
               此方法将平移添加到转换前。
            </summary>
      <param name="dx">
                沿 x 方向平移变换时要使用的维度。
              </param>
      <param name="dy">
                沿 y 方向平移变换时要使用的维度。
              </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
              按指定顺序将此 <see cref="T:System.Drawing.TextureBrush" /> 对象的局部几何转换平移指定的尺寸。
            </summary>
      <param name="dx">
                沿 x 方向平移变换时要使用的维度。
              </param>
      <param name="dy">
                沿 y 方向平移变换时要使用的维度。
              </param>
      <param name="order">
                应用转换的顺序（在前面添加或在后面追加）。
              </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>
              初始化新 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 具有来自指定文件的图像对象。
            </summary>
      <param name="imageFile">
                一个包含 16 × 16 位图文件的名称。
              </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>
              初始化新 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象基于作为资源嵌入指定的程序集的 16x16 位图。
            </summary>
      <param name="t">
                一个 <see cref="T:System.Type" /> 位图资源中搜索其定义的程序集。
              </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>
              初始化新 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象基于作为资源嵌入指定的程序集的 16 × 16 位图。
            </summary>
      <param name="t">
                一个 <see cref="T:System.Type" /> 位图资源中搜索其定义的程序集。
              </param>
      <param name="name">
                嵌入的位图资源的名称。
              </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>
              指示指定的对象是否为 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象以及是否等同于此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <param name="value">
                要测试的 <see cref="T:System.Object" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 如果 <paramref name="value" /> 既是 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象以及是否等同于此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>
              获取此哈希代码 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <returns>
              此哈希代码 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>
              获取小型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <param name="component">
                如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象不具有小图像，此方法搜索中定义的由组件参数指定的对象类型的程序集的位图资源。
                 例如，如果将控件类型的对象传递给组件参数，此方法搜索定义控件的程序集。
              </param>
      <returns>
              小型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>
              获取小型或大型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <param name="component">
                如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象不具有小图像，此方法搜索中定义的由组件参数指定的对象类型的程序集的位图资源。
                 例如，如果控件类型的对象传递给组件参数时，此方法搜索定义控件的程序集。
              </param>
      <param name="large">
                指定此方法是否返回较大的图像 (<see langword="true" />) 或一个小图像 (<see langword="false" />)。
                 小图像是 16 × 16，而较大的图像是 32 × 32。
              </param>
      <returns>
              <see cref="T:System.Drawing.Image" /> 对象与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>
              获取小型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <param name="type">
                如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象不具有小图像，此方法搜索中定义的类型参数指定的类型的程序集的位图资源。
                 例如，如果您将 typeof(ControlA) 传递给类型参数时，此方法搜索定义控件的程序集。
              </param>
      <returns>
              小型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>
              获取小型或大型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <param name="type">
                如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象不具有小图像，此方法搜索中定义的组件类型由指定的类型的程序集的位图资源。
                 例如，如果您将 typeof(ControlA) 传递给类型参数时，此方法搜索定义控件的程序集。
              </param>
      <param name="large">
                指定此方法是否返回较大的图像 (<see langword="true" />) 或一个小图像 (<see langword="false" />)。
                 小图像是 16 × 16，而较大的图像是 32 × 32。
              </param>
      <returns>
              <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>
              获取小型或大型 <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </summary>
      <param name="type">
                如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象不具有小图像，此方法搜索嵌入的位图资源中定义的组件类型由指定的类型的程序集。
                 例如，如果您将 typeof(ControlA) 传递给类型参数时，此方法搜索定义控件的程序集。
              </param>
      <param name="imgName">
                嵌入的位图资源的名称。
              </param>
      <param name="large">
                指定此方法是否返回较大的图像 (<see langword="true" />) 或一个小图像 (<see langword="false" />)。
                 小图像是 16 × 16，而较大的图像是 32 × 32。
              </param>
      <returns>
              <see cref="T:System.Drawing.Image" /> 与此相关 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。
            </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>
              返回 <see cref="T:System.Drawing.Image" /> 根据嵌入到程序集中的位图资源的对象。
            </summary>
      <param name="t">
                此方法搜索嵌入的位图资源中定义的类型 t 参数所指定的程序集。
                 例如，如果您将 typeof(ControlA) 传递到 t 参数时，此方法搜索定义控件的程序集。
              </param>
      <param name="imageName">
                嵌入的位图资源的名称。
              </param>
      <param name="large">
                指定此方法返回一个大图像 (true) 还是小图像 (false)。
                 小图像是 16 × 16，而较大的图像是 32 x 32。
              </param>
      <returns>
              <see cref="T:System.Drawing.Image" /> 对象基于检索到的位图。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>
              获取系统定义 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.BufferedGraphics.Graphics">
      <summary>
              获取输出到图形缓冲区的 <see cref="T:System.Drawing.Graphics" /> 对象。
            </summary>
      <returns>
              输出到图形缓冲区的 <see cref="T:System.Drawing.Graphics" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
      <summary>
              获取或设置要使用的缓冲区的最大大小。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> ，该值指示缓冲区尺寸的最大大小。
            </returns>
      <exception cref="T:System.ArgumentException">
                  高度或宽度大小小于或等于零。
                </exception>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsManager.Current">
      <summary>
              获取 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 为当前应用程序域。
            </summary>
      <returns>
              当前应用程序域的 <see cref="T:System.Drawing.BufferedGraphicsContext" />。
            </returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>
              获取或设置的第一个字符的字符串中的位置 <see cref="T:System.Drawing.CharacterRange" />。
            </summary>
      <returns>
              第一个位置 <see cref="T:System.Drawing.CharacterRange" />。
            </returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>
              获取或设置在此位置数 <see cref="T:System.Drawing.CharacterRange" />。
            </summary>
      <returns>
              在此位置数 <see cref="T:System.Drawing.CharacterRange" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.A">
      <summary>
              获取此的 alpha 分量值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              This 的 alpha 分量值 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.AliceBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF0F8FF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.AntiqueWhite">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFAEBD7。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Aqua">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00FFFF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Aquamarine">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF7FFFD4。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Azure">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF0FFFF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.B">
      <summary>
              获取此的蓝色分量值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              此的蓝色分量值 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Beige">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF5F5DC。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Bisque">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFE4C4。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Black">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF000000。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.BlanchedAlmond">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFEBCD。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Blue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF0000FF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.BlueViolet">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF8A2BE2。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Brown">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFA52A2A。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.BurlyWood">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDEB887。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.CadetBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF5F9EA0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Chartreuse">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF7FFF00。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Chocolate">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFD2691E。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Coral">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF7F50。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.CornflowerBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF6495ED。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Cornsilk">
      <summary>
              获取的 ARGB 值为系统定义的颜色 #FFFFF8DC。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Crimson">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDC143C。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Cyan">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00FFFF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00008B。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkCyan">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF008B8B。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkGoldenrod">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFB8860B。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkGray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFA9A9A9。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF006400。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkKhaki">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFBDB76B。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkMagenta">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF8B008B。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkOliveGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF556B2F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkOrange">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF8C00。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkOrchid">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF9932CC。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkRed">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF8B0000。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkSalmon">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFE9967A。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkSeaGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF8FBC8F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkSlateBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF483D8B。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkSlateGray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF2F4F4F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkTurquoise">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00CED1。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkViolet">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF9400D3。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DeepPink">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF1493。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DeepSkyBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00BFFF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DimGray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF696969。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.DodgerBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF1E90FF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Firebrick">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFB22222。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.FloralWhite">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFAF0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.ForestGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF228B22。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Fuchsia">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF00FF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.G">
      <summary>
              获取此的绿色分量值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              此的绿色分量值 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Gainsboro">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDCDCDC。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.GhostWhite">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF8F8FF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Gold">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFD700。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Goldenrod">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDAA520。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Gray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF808080。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Green">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF008000。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.GreenYellow">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFADFF2F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Honeydew">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF0FFF0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.HotPink">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF69B4。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.IndianRed">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFCD5C5C。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Indigo">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF4B0082。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.IsEmpty">
      <summary>
              指定是否这 <see cref="T:System.Drawing.Color" /> 结构未初始化。
            </summary>
      <returns>
              此属性返回 <see langword="true" /> 该颜色是否未初始化; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.IsKnownColor">
      <summary>
              获取一个值，该值指示是否此 <see cref="T:System.Drawing.Color" /> 结构是预定义的颜色。
               预定义的颜色表示的元素 <see cref="T:System.Drawing.KnownColor" /> 枚举。
            </summary>
      <returns>
              <see langword="true" /> 如果此 <see cref="T:System.Drawing.Color" /> 已通过使用创建的预定义的颜色 <see cref="M:System.Drawing.Color.FromName(System.String)" /> 方法或 <see cref="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)" /> 方法; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.IsNamedColor">
      <summary>
              获取一个值，该值指示是否此 <see cref="T:System.Drawing.Color" /> 结构是已命名的颜色或成员的 <see cref="T:System.Drawing.KnownColor" /> 枚举。
            </summary>
      <returns>
              <see langword="true" /> 如果此 <see cref="T:System.Drawing.Color" /> 由使用 <see cref="M:System.Drawing.Color.FromName(System.String)" /> 方法或 <see cref="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)" /> 方法; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.IsSystemColor">
      <summary>
              获取一个值，该值指示是否此 <see cref="T:System.Drawing.Color" /> 结构是一种系统颜色。
               系统颜色是一种 Windows 显示元素中使用的颜色。
               系统颜色由元素的 <see cref="T:System.Drawing.KnownColor" /> 枚举。
            </summary>
      <returns>
              <see langword="true" /> 如果此 <see cref="T:System.Drawing.Color" /> 已通过使用创建的系统颜色 <see cref="M:System.Drawing.Color.FromName(System.String)" /> 方法或 <see cref="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)" /> 方法; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Ivory">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFFF0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Khaki">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF0E68C。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Lavender">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFE6E6FA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LavenderBlush">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFF0F5。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LawnGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF7CFC00。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LemonChiffon">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFACD。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightBlue">
      <summary>
              获取具有 ARGB 值的系统定义的颜色#FFADD8E6。
            </summary>
      <returns>
              A<see cref="T:System.Drawing.Color" />表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightCoral">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF08080。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightCyan">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFE0FFFF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightGoldenrodYellow">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFAFAD2。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightGray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFD3D3D3。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF90EE90。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightPink">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFB6C1。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSalmon">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFA07A。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSeaGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF20B2AA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSkyBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF87CEFA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSlateGray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF778899。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSteelBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFB0C4DE。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LightYellow">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFFE0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Lime">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00FF00。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.LimeGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF32CD32。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Linen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFAF0E6。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Magenta">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF00FF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Maroon">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF800000。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumAquamarine">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF66CDAA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF0000CD。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumOrchid">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFBA55D3。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumPurple">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF9370DB。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumSeaGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF3CB371。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumSlateBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF7B68EE。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumSpringGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00FA9A。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumTurquoise">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF48D1CC。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumVioletRed">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFC71585。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MidnightBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF191970。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MintCream">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF5FFFA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.MistyRose">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFE4E1。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Moccasin">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFE4B5。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Name">
      <summary>
              获取此 <see cref="T:System.Drawing.Color" /> 的名称。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Color" /> 的名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.NavajoWhite">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFDEAD。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Navy">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF000080。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.OldLace">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFDF5E6。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Olive">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF808000。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.OliveDrab">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF6B8E23。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Orange">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFA500。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.OrangeRed">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF4500。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Orchid">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDA70D6。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PaleGoldenrod">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFEEE8AA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PaleGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF98FB98。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PaleTurquoise">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFAFEEEE。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PaleVioletRed">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDB7093。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PapayaWhip">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFEFD5。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PeachPuff">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFDAB9。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Peru">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFCD853F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Pink">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFC0CB。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Plum">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFDDA0DD。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.PowderBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFB0E0E6。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Purple">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF800080。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.R">
      <summary>
              获取此的红色分量值 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              此的红色分量值 <see cref="T:System.Drawing.Color" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Red">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF0000。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.RosyBrown">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFBC8F8F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.RoyalBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF4169E1。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SaddleBrown">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF8B4513。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Salmon">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFA8072。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SandyBrown">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF4A460。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SeaGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF2E8B57。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SeaShell">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFF5EE。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Sienna">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFA0522D。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Silver">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFC0C0C0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SkyBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF87CEEB。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SlateBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF6A5ACD。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SlateGray">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF708090。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Snow">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFAFA。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SpringGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF00FF7F。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.SteelBlue">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF4682B4。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Tan">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFD2B48C。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Teal">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF008080。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Thistle">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFD8BFD8。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Tomato">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFF6347。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Transparent">
      <summary>
              获取系统定义的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Turquoise">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF40E0D0。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Violet">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFEE82EE。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Wheat">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF5DEB3。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.White">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFFFF。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.WhiteSmoke">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFF5F5F5。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.Yellow">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FFFFFF00。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Color.YellowGreen">
      <summary>
              获取系统定义的颜色具有 ARGB 值 #FF9ACD32。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary>
              获取或设置要附加到所指示的文件名称的后缀 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 时程序集用声明的 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> 或 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />。
            </summary>
      <returns>
              位图后缀。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>
              获取类别名称的指定索引处。
            </summary>
      <param name="index">
                要访问的集合元素的索引。
              </param>
      <returns>
              指定索引处的类别名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary>
              获取 <see cref="T:System.Drawing.Design.ToolboxItem" /> 对象的集合。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Design.ToolboxItem" /> 对象的集合。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>
              获取当前在工具箱上的所有工具的类别的名称。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 包含工具类别。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>
              获取或设置当前选定的工具类别的名称从工具箱。
            </summary>
      <returns>
              当前所选的类别的名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Bounds">
      <summary>
              获取指示应在其中完成绘制的区域的矩形。
            </summary>
      <returns>
              指示应在其中完成绘制的区域的矩形。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Context">
      <summary>
              获取 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 接口，以用来获得此值的上下文有关的其他信息将出现在。
            </summary>
      <returns>
              <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，该值指示事件的上下文。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Graphics">
      <summary>
              获取 <see cref="T:System.Drawing.Graphics" /> 应与其完成绘制的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Graphics" /> 要用于绘制对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Value">
      <summary>
              获取要绘制的值。
            </summary>
      <returns>
              一个指示绘制内容的对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.Image">
      <summary>
              获取将在属性窗口中绘制的 8 x 8 像素图像。
            </summary>
      <returns>
              要使用属性图标的图像。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler">
      <summary>
              获取当用户双击此项时引发的处理程序。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" /> ，该值指示此用户界面 (UI) 项的事件处理程序。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.ToolTip">
      <summary>
              获取或设置要为此项显示的信息字符串。
            </summary>
      <returns>
              包含要为此项显示的信息字符串的字符串。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>
              获取或设置一个数组，包含要添加到工具箱的组件。
            </summary>
      <returns>
              类型的数组 <see cref="T:System.ComponentModel.IComponent" /> ，该值指示要添加到工具箱的组件。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>
              获取或设置的一个实例 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 进行创建工具箱组件的请求。
            </summary>
      <returns>
              <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的请求创建工具箱组件或 <see langword="null" /> 如果设计器的任何主机不提供给工具箱项。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>
              获取或者设置程序集的名称，该程序集中包含工具箱项创建的一个或多个类型。
            </summary>
      <returns>
              <see cref="T:System.Reflection.AssemblyName" /> ，该值指示包含要创建的类型的程序集。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>
              获取或设置表示工具箱中的工具箱项的位图。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Bitmap" /> 表示工具箱中的工具箱项。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary>
              获取或设置此公司名称 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，它指定为此公司 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary>
              获取此组件类型 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 组件类型指定为此 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary>
              获取或设置 <see cref="T:System.Reflection.AssemblyName" /> 工具箱项。
            </summary>
      <returns>
              一个 <see cref="T:System.Reflection.AssemblyName" /> 对象数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary>
              获取或设置此说明 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 用于指定此说明 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>
              获取或设置此工具箱项的显示名称。
            </summary>
      <returns>
              工具箱项的显示名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>
              获取或设置确定工具箱项是否可以用于目标组件的筛选器。
            </summary>
      <returns>
              <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> 对象的 <see cref="T:System.Collections.ICollection" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary>
              获取一个值，该值指示工具箱项是否为临时工具箱项。
            </summary>
      <returns>
              <see langword="true" />, 如果此工具箱项不应存储在任何工具箱数据库中时关闭的应用程序提供工具箱;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Drawing.Design.ToolboxItem" /> 当前被锁定。
            </summary>
      <returns>
              <see langword="true" /> 如果工具箱项被锁定，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary>
              获取或设置将在工具箱中用于此项的原始位图。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Bitmap" /> 表示工具箱中的工具箱项。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary>
              获取属性的字典。
            </summary>
      <returns>
              名称/值对字典，其中名称为属性名称，值为属性值。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>
              获取或设置的类型的完全限定的名 <see cref="T:System.ComponentModel.IComponent" /> 工具箱项创建时调用。
            </summary>
      <returns>
              此工具箱项创建的组件类型的完全限定类型名。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary>
              获取此版本 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，指定的版本为此 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>
              获取位于指定索引处的 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <param name="index">
                要获取或设置的对象的索引。
              </param>
      <returns>
              一个 <see cref="T:System.Drawing.Design.ToolboxItem" /> 在集合中每个有效索引。
            </returns>
    </member>
    <member name="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable">
      <summary>
              获取一个值，该值指示是否应由用户调整下拉编辑器的大小。
            </summary>
      <returns>
              <see langword="true" /> 如果下拉编辑器是一种可调整大小;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>
              获取或设置是否填充箭头帽。
            </summary>
      <returns>
              此属性是 <see langword="true" /> 箭头帽是否填充; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>
              获取或设置箭头帽的高度。
            </summary>
      <returns>
              箭头线帽的高度。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>
              获取或设置之间的箭头帽边框和填充的单位数。
            </summary>
      <returns>
              箭头帽的边框和箭头帽的填充之间的单位数。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>
              获取或设置箭头帽的宽度。
            </summary>
      <returns>
              采用单位箭头帽的宽度。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>
              获取或设置一个混合因子的渐变的数组。
            </summary>
      <returns>
              一个指定的开始颜色和要使用的相应位置的结束颜色的百分比的混合因子的数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>
              获取或设置一个混合位置的渐变的数组。
            </summary>
      <returns>
              指定沿渐变线的距离的百分比的混合位置的数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>
              获取或设置表示要在沿渐变的相应位置处使用的颜色的颜色的数组。
            </summary>
      <returns>
              一个数组 <see cref="T:System.Drawing.Color" /> 这些结构表示要在沿渐变的相应位置处使用的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>
              获取或设置沿渐变线的位置。
            </summary>
      <returns>
              指定沿渐变线的距离的百分比的值的数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 为基础。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.LineCap" /> 枚举此 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 为基础。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>
              获取或设置 cap 和行之间的距离。
            </summary>
      <returns>
              指针帽的开头和行尾之间的距离。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 枚举，它确定如何撰写这行 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 联接对象。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 枚举这 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 对象用于联接线。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>
              获取或设置的缩放量 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 类对象的宽度对于 <see cref="T:System.Drawing.Pen" /> 对象。
            </summary>
      <returns>
              缩放指针帽的数量。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，它确定如何在此形状的内部 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 进行填充。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举，用于指定如何在此形状的内部 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 进行填充。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>
              获取 <see cref="T:System.Drawing.Drawing2D.PathData" /> 封装的点数组 (<paramref name="points" />) 和类型 (<paramref name="types" />) 此 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.PathData" /> 封装的点数组和为此类型 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>
              获取路径中的点。
            </summary>
      <returns>
              一个数组 <see cref="T:System.Drawing.PointF" /> 表示路径的对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>
              获取类型中的相应点 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 数组。
            </summary>
      <returns>
              在路径中指定相应的点的类型的字节数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>
              获取中的元素数 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组。
            </summary>
      <returns>
              一个整数，指定中的元素数 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>
              获取路径中的点的数量。
            </summary>
      <returns>
              在路径中的点的数目。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>
              获取路径中的子路径数。
            </summary>
      <returns>
              在路径中的子路径数。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>
              获取由此绘制阴影线之间的空格的颜色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，它表示此的背景色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>
              获取由此绘制阴影线的颜色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，它表示此的前景色 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>
              获取此的阴影样式 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值，该值表示此模式 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.Blend" /> ，用于指定位置和定义自定义的渐变过渡的因素。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.Blend" /> ，它表示自定义的渐变过渡。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>
              获取或设置一个值，该值指示此启用灰度校正 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。
            </summary>
      <returns>
              值是 <see langword="true" /> 如果灰度校正启用了使此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 定义多色线性渐变。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 定义多色线性渐变。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>
              获取或设置渐变的开始和结束颜色。
            </summary>
      <returns>
              两个数组 <see cref="T:System.Drawing.Color" /> 这些结构表示的起始和结束的渐变的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>
              获取一个定义的渐变的起始和结束点的矩形区域。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它指定的起始和结束点的渐变。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>
              获取或设置一个副本 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 此定义局部几何变换 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。
            </summary>
      <returns>
              一份 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 定义仅适用于与此绘制填充的几何变换 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，指示此环绕模式 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> ，它指定如何与此绘制填充 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 平铺。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>
              获取一个浮点值数组，它表示该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的元素。
            </summary>
      <returns>
              一个浮点值数组，它表示该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的元素。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否是单位矩阵。
            </summary>
      <returns>
              如果该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是标识，则该属性为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否可逆转。
            </summary>
      <returns>
              如果该 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是可逆转的，则该属性为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>
              获取此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 转换值（dx 值，或第三行、第一列中的元素）。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 转换值。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>
              获取此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 转换值（dy 值，或第三行、第二列中的元素）。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 转换值。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>
              获取或设置一个数组 <see cref="T:System.Drawing.PointF" /> 这些结构表示要通过其构成路径的点。
            </summary>
      <returns>
              一个数组 <see cref="T:System.Drawing.PointF" /> 表示要通过其构成路径的点的对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>
              获取或设置路径中的相应点的类型。
            </summary>
      <returns>
              路径中指定相应的点的类型的字节数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.Blend" /> ，用于指定位置和定义自定义的渐变过渡的因素。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.Blend" /> ，它表示自定义的渐变过渡。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>
              获取或设置在中心路径渐变的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 表示中心的路径渐变的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>
              获取或设置路径渐变的中心点。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.PointF" /> 表示路径渐变的中心点。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>
              获取或设置渐变过渡的焦点。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.PointF" /> ，表示渐变过渡的关注点。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 定义多色线性渐变。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 定义多色线性渐变。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>
              获取此绑定矩形 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> ，这表示限定路径的矩形区域 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>
              获取或设置此对应的路径中的点的颜色数组 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充。
            </summary>
      <returns>
              一个数组 <see cref="T:System.Drawing.Color" /> 路径中的这些结构表示要与每个关联的颜色指出此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填充。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>
              获取或设置一份 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 此定义局部几何变换 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。
            </summary>
      <returns>
              一份 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 定义仅适用于与此绘制填充的几何变换 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> ，指示此环绕模式 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> ，它指定如何与此绘制填充 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 平铺。
            </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>
              获取或设置一个指定的字节数组 <see cref="T:System.Drawing.Region" /> 对象。
            </summary>
      <returns>
              一个指定的字节数组 <see cref="T:System.Drawing.Region" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否为粗体。
            </summary>
      <returns>
              如果此 <see cref="T:System.Drawing.Font" /> 为粗体，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>
              获取与此 <see cref="T:System.Drawing.FontFamily" /> 关联的 <see cref="T:System.Drawing.Font" />。
            </summary>
      <returns>
              与此 <see cref="T:System.Drawing.FontFamily" /> 关联的 <see cref="T:System.Drawing.Font" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>
              获取一个字节值，该值指定此 <see cref="T:System.Drawing.Font" /> 使用的 GDI 字符集。
            </summary>
      <returns>
              一个字节值，该值指定此 GDI 使用的 <see cref="T:System.Drawing.Font" /> 字符集。
               默认值为 1。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>
              获取一个布尔值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否从 GDI 垂直字体派生。
            </summary>
      <returns>
              如果此 <see cref="T:System.Drawing.Font" /> 是从 GDI 垂直字体派生的，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>
              获取此字体的行距。
            </summary>
      <returns>
              此字体的行距（以像素为单位）。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.IsSystemFont">
      <summary>
              获取一个值，该值表示此字体是否是 <see cref="T:System.Drawing.SystemFonts" /> 的一个成员。
            </summary>
      <returns>
              如果此字体是 <see cref="T:System.Drawing.SystemFonts" /> 的一个成员，则为 <see langword="true" />；否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>
              获取一个值，该值指示此字体是否已应用斜体样式。
            </summary>
      <returns>
              <see langword="true" /> 表明此字体已应用斜体样式；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>
              获取此 <see cref="T:System.Drawing.Font" /> 的字体名称。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Font" /> 的字体名称的字符串表示形式。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.OriginalFontName">
      <summary>
              获取最初指定的字体的名称。
            </summary>
      <returns>
              表示最初指定的字体的名称的字符串。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>
              获取此 <see cref="T:System.Drawing.Font" /> 的全身大小，单位采用 <see cref="P:System.Drawing.Font.Unit" /> 属性指定的单位。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Font" /> 的全身大小。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>
              获取此 <see cref="T:System.Drawing.Font" /> 的全身大小（以点为单位）。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Font" /> 的全身大小（以点为单位）。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否指定贯穿字体的横线。
            </summary>
      <returns>
              如果有一条横线贯穿此 <see cref="T:System.Drawing.Font" />，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>
              获取此 <see cref="T:System.Drawing.Font" /> 的样式信息。
            </summary>
      <returns>
              包含此 <see cref="T:System.Drawing.Font" /> 的样式信息的 <see cref="T:System.Drawing.FontStyle" /> 枚举。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.SystemFontName">
      <summary>
              如果 <see cref="P:System.Drawing.Font.IsSystemFont" /> 属性返回 <see langword="true" />，则获取系统字体的名称。
            </summary>
      <returns>
              如果 <see cref="P:System.Drawing.Font.IsSystemFont" /> 返回 <see langword="true" />，则为系统字体的名称；否则为一个空字符串 ("")。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Font" /> 是否有下划线。
            </summary>
      <returns>
              如果此 <see cref="T:System.Drawing.Font" /> 有下划线，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>
              获取此 <see cref="T:System.Drawing.Font" /> 的度量单位。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.GraphicsUnit" />，它表示此 <see cref="T:System.Drawing.Font" /> 的度量单位。
            </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>
              返回一个数组，该数组包含与当前图形上下文相关的所有 <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
      <returns>
              与当前图形上下文相关的 <see cref="T:System.Drawing.FontFamily" /> 对象的数组。
            </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>
              获取一般 monospace <see cref="T:System.Drawing.FontFamily" />。
            </summary>
      <returns>
              表示一般 monospace 字体的 <see cref="T:System.Drawing.FontFamily" />。
            </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>
              获取一般 sans serif <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
      <returns>
              表示一般 sans serif 字体的 <see cref="T:System.Drawing.FontFamily" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>
              获取一般 serif <see cref="T:System.Drawing.FontFamily" />。
            </summary>
      <returns>
              表示一般 serif 字体的 <see cref="T:System.Drawing.FontFamily" />。
            </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>
              获取此 <see cref="T:System.Drawing.FontFamily" /> 的名称。
            </summary>
      <returns>
              一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Drawing.FontFamily" /> 的名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Region" />，它限定此 <see cref="T:System.Drawing.Graphics" /> 的绘图区域。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Region" />，它限定此 <see cref="T:System.Drawing.Graphics" /> 当前可用的绘图区域。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>
              获取一个 <see cref="T:System.Drawing.RectangleF" /> 结构，该结构限定此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域的边框。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>
              获取一个值，该值指定如何将合成图像绘制到此 <see cref="T:System.Drawing.Graphics" />。
            </summary>
      <returns>
              此属性指定 <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 枚举的成员。
               默认值为 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>
              获取或设置绘制到此 <see cref="T:System.Drawing.Graphics" /> 的合成图像的呈现质量。
            </summary>
      <returns>
              此属性指定 <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 枚举的成员。
               默认值为 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>
              获取此 <see cref="T:System.Drawing.Graphics" /> 的水平分辨率。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Graphics" /> 支持的水平分辨率的值（以每英寸点数为单位）。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>
              获取此 <see cref="T:System.Drawing.Graphics" /> 的垂直分辨率。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Graphics" /> 支持的垂直分辨率的值（以每英寸点数为单位）。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>
              获取或设置与此 <see cref="T:System.Drawing.Graphics" /> 关联的插补模式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域是否为空。
            </summary>
      <returns>
              如果此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域为空，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域是否为空。
            </summary>
      <returns>
              如果此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域的可见部分为空，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的世界单位和页单位之间的比例。
            </summary>
      <returns>
              此属性指定此 <see cref="T:System.Drawing.Graphics" /> 的世界单位和页单位之间的比例值。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>
              获取或设置用于此 <see cref="T:System.Drawing.Graphics" /> 中的页坐标的度量单位。
            </summary>
      <returns>
              除 <see cref="F:System.Drawing.GraphicsUnit.World" /> 以外的 <see cref="T:System.Drawing.GraphicsUnit" /> 值之一。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <see cref="P:System.Drawing.Graphics.PageUnit" /> 设置为 <see cref="F:System.Drawing.GraphicsUnit.World" />, ，这不是物理单元。
                </exception>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>
              获取或设置一个值，该值指定在呈现此 <see cref="T:System.Drawing.Graphics" /> 的过程中像素如何偏移。
            </summary>
      <returns>
              此属性指定 <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 枚举的成员。 
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>
              为抵色处理和阴影画笔获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的呈现原点。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Point" /> 结构，它表示 8 位/像素和 16 位/像素抖色处理的抖色原点，还用于设置阴影画笔的原点。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的呈现质量。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>
              获取或设置呈现文本的灰度校正值。
            </summary>
      <returns>
              用于呈现抗锯齿和 ClearType 文本的伽玛校正值。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>
              获取或设置与此 <see cref="T:System.Drawing.Graphics" /> 关联的文本的呈现模式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Text.TextRenderingHint" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的几何世界变换的副本。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 副本，表示此 <see cref="T:System.Drawing.Graphics" /> 的几何世界变换。
            </returns>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>
              获取此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域的边框。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域的边框。
            </returns>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>
              获取此 <see cref="T:System.Drawing.Icon" /> 的 Windows 句柄。
               这并非该句柄的副本；请不要释放它。
            </summary>
      <returns>
              该图标的 Windows 句柄。
            </returns>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>
              获取此 <see cref="T:System.Drawing.Icon" /> 的高度。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Icon" /> 的高度。
            </returns>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>
              获取此 <see cref="T:System.Drawing.Icon" /> 的大小。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Size" /> 结构，它指定此 <see cref="T:System.Drawing.Icon" /> 的宽度和高度。
            </returns>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>
              获取此 <see cref="T:System.Drawing.Icon" /> 的宽度。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Icon" /> 的宽度。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>
              获取特性的像素数据的这标志 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              表示的按位组合的整数 <see cref="T:System.Drawing.Imaging.ImageFlags" /> 此 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>
              获取表示在此帧的维数的 Guid 的数组， <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              指定在此帧的维数的 Guid 的数组， <see cref="T:System.Drawing.Image" /> 从最重要到最不重要。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>
              获取的高度，以像素为单位，这 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Image" /> 的高度（以像素为单位）。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>
              获取以每英寸的像素为单位的水平分辨率 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              以每英寸的像素为单位的水平分辨率 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>
              获取或设置用于此目的的颜色调色板 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.ColorPalette" /> ，它表示用于此目的的调色板 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>
              获取此图像的宽度和高度。
            </summary>
      <returns>
              A<see cref="T:System.Drawing.SizeF" />结构，它表示的宽度和高度这<see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>
              获取此像素格式 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> ，它会表示像素格式此 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>
              获取存储于此的属性项的 Id <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              由属性 ID 组成的一个数组，此图像中存储的每个属性项各有一个 ID。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>
              获取的所有属性项 （元数据片） 存储在此 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              一个数组 <see cref="T:System.Drawing.Imaging.PropertyItem" /> 对象，每个属性项存储在映像中的一个对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>
              获取此文件格式 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 表示的文件格式 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>
              获取此图像的宽度和高度（以像素为单位）。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> 结构，它表示的宽度和高度，以像素为单位，此映像。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.Tag">
      <summary>
              获取或设置提供有关图像的附加数据的对象。
            </summary>
      <returns>
              <see cref="T:System.Object" /> ，它提供有关图像的附加数据。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>
              获取以每英寸的像素为单位的垂直分辨率 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              垂直分辨率，以像素 / 英寸，此 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>
              获取的宽度，以像素为单位，这 <see cref="T:System.Drawing.Image" />。
            </summary>
      <returns>
              宽度，以像素为单位，此 <see cref="T:System.Drawing.Image" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>
              获取或设置的像素高度 <see cref="T:System.Drawing.Bitmap" /> 对象。
               也有时称为扫描行数。
            </summary>
      <returns>
              像素高度 <see cref="T:System.Drawing.Bitmap" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>
              获取或设置的格式中的像素信息 <see cref="T:System.Drawing.Bitmap" /> 返回此对象 <see cref="T:System.Drawing.Imaging.BitmapData" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 关联指定格式的像素信息 <see cref="T:System.Drawing.Bitmap" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>
              保留。
               请勿使用。
            </summary>
      <returns>
              保留。
               请勿使用。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>
              获取或设置在位图中的第一个像素数据的地址。
               这也可以看作是位图中的第一个扫描行。
            </summary>
      <returns>
              在位图中的第一个像素数据的地址。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>
              获取或设置 stride （也称为扫描宽度） 的宽度 <see cref="T:System.Drawing.Bitmap" /> 对象。
            </summary>
      <returns>
              跨距宽度，以字节为单位的 <see cref="T:System.Drawing.Bitmap" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>
              获取或设置的像素宽度 <see cref="T:System.Drawing.Bitmap" /> 对象。
               这也可以看作是一个扫描行中的像素数。
            </summary>
      <returns>
              像素宽度 <see cref="T:System.Drawing.Bitmap" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>
              获取或设置新 <see cref="T:System.Drawing.Color" /> 要转换为结构。
            </summary>
      <returns>
              新 <see cref="T:System.Drawing.Color" /> 要转换为结构。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>
              获取或设置现有 <see cref="T:System.Drawing.Color" /> 要转换的结构。
            </summary>
      <returns>
              现有 <see cref="T:System.Drawing.Color" /> 要转换的结构。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>
              获取或设置处的指定的行和列中的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <param name="row">
                该元素的行。
              </param>
      <param name="column">
                元素的列。
              </param>
      <returns>
              指定的行和列处的元素。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>
              获取或设置 0 处的元素，（零） 行和此 0 列 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              0 的行和此 0 列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>
              获取或设置 0 处的元素，（零） 的行和第一列这 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              0 行、 第一列这处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>
              获取或设置的元素，0 （零） 行和第二列的这 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              0 行、 第二列这处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>
              获取或设置的元素，0 （零） 行、 第三列的这 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
               表示的 alpha 分量。
            </summary>
      <returns>
              元素中的 0 行、 第三个列的这 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>
              获取或设置的元素，0 （零） 行、 第四列的这 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              在 0 行和第四列中的此元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>
              获取或设置的元素，在第一行和 0 （零） 的此列 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              第一行和此 0 列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>
              获取或设置的第一行和第一列这处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              元素中的第一行和第一列这 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>
              获取或设置此第一的行和第二列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              此第一的行和第二列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>
              获取或设置此第一行和第三列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
               表示的 alpha 分量。
            </summary>
      <returns>
              此第一行和第三列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>
              获取或设置此第一行和第四个列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              此第一的行、 第四列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>
              获取或设置的元素，在第二行和 0 （零） 的此列 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              第二行和此 0 列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>
              获取或设置第二行、 第一列这处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              在第二行和第一列，此元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>
              获取或设置此的第二行和第二列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              这第二行和第二列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>
              获取或设置此的第二行、 第三列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              这第二行、 第三列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>
              获取或设置此的第二行、 第四列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              这第二行、 第四列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>
              获取或设置的元素，在第三行和 0 （零） 的此列 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              第三行和此 0 列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>
              获取或设置第三行、 第一列这处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              在第三行和第一列，此元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>
              获取或设置此第三行和第二列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              此第三个行和第二列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>
              获取或设置此第三行、 第三列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
               表示的 alpha 分量。
            </summary>
      <returns>
              这第三行、 第三列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>
              获取或设置此第三行、 第四列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              这第三行、 第四列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>
              获取或设置的元素，在第四行和 0 （零） 的此列 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              第四行和此 0 列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>
              获取或设置第四行、 第一列这处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              第四行的第一列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>
              获取或设置此的第四行和第二列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              这样的第四行和第二列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>
              获取或设置此的第四行、 第三列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
               表示的 alpha 分量。
            </summary>
      <returns>
              这样的第四行、 第三列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>
              获取或设置此的第四行、 第四列的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </summary>
      <returns>
              这样的第四行、 第四列处的元素 <see cref="T:System.Drawing.Imaging.ColorMatrix" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>
              获取一个数组 <see cref="T:System.Drawing.Color" /> 结构。
            </summary>
      <returns>
              数组 <see cref="T:System.Drawing.Color" /> 结构组成此 <see cref="T:System.Drawing.Imaging.ColorPalette" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>
              获取一个值，指定如何解释在数组中的颜色的颜色信息。
            </summary>
      <returns>
              下面的标志值是有效的︰ 
            0x00000001
                  数组中的颜色值包含 alpha 信息。
                0x00000002
                  数组中的颜色是灰度值。
                0x00000004
                  数组中的颜色是半色调值。
                </returns>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>
              获取标识图像编码器的全局唯一标识符 (GUID) 参数类别。
            </summary>
      <returns>
              标识图像编码器参数类别的 GUID。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Imaging.Encoder" /> 对象与此相关 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
              <see cref="T:System.Drawing.Imaging.Encoder" /> 对象所封装的全局唯一标识符 (GUID) 指定的类别 (例如 <see cref="F:System.Drawing.Imaging.Encoder.Quality" />, ，<see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />, ，或 <see cref="F:System.Drawing.Imaging.Encoder.Compression" />) 存储在此参数的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.Encoder" /> 对象，它封装指定的类别存储在此参数的 GUID <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>
              获取的值存储在此数组中元素的数目 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <returns>
              一个整数，指示的值存储在此数组中的元素数 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>
              获取在此存储的值的数据类型 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <returns>
              成员 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 枚举，指示在此存储的值的数据类型 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>
              获取在此存储的值的数据类型 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <returns>
              成员 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 枚举，指示在此存储的值的数据类型 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>
              获取或设置一个数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
      <returns>
              数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>
              获取表示此全局唯一标识符 (GUID) <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象。
            </summary>
      <returns>
              一个 <see langword="Guid" /> 结构，其中包含一个 GUID，表示此 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>
              获取页维度。
            </summary>
      <returns>
              页面维度。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>
              获取解析维度。
            </summary>
      <returns>
              分辨率维度。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>
              获取时间维度。
            </summary>
      <returns>
              时间维度中。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>
              获取或设置 <see cref="T:System.Guid" /> 结构，其中包含标识特定的编码解码器的 GUID。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 结构，其中包含标识特定的编码解码器的 GUID。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>
              获取或设置一个字符串，包含的编解码器的名称。
            </summary>
      <returns>
              一个字符串，包含的编解码器的名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>
              获取或设置字符串，其中包含存放编解码器的 DLL 的路径名称。
               如果编解码器不是在 DLL 中，该指针是 <see langword="null" />。
            </summary>
      <returns>
              一个字符串，其中包含存放编解码器的 DLL 的路径名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>
              获取或设置包含编码解码器中使用的文件扩展名的字符串。
               扩展之间用分号分隔。
            </summary>
      <returns>
              一个字符串，包含的文件扩展名用于编解码器。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>
              获取或设置用于存储有关编解码器的其他信息的 32 位值。
               此属性返回中标志的组合 <see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> 枚举。
            </summary>
      <returns>
              一个 32 位值，用于存储有关编解码器的其他信息。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>
              获取或设置一个字符串，描述编解码器的文件格式。
            </summary>
      <returns>
              一个字符串，描述编解码器的文件格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>
              获取或设置 <see cref="T:System.Guid" /> 结构，其中包含标识的编解码器格式的 GUID。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 结构，其中包含标识的编解码器格式的 GUID。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>
              获取或设置一个字符串，包含的编解码器的多用途 Internet 邮件扩展 (MIME) 类型。
            </summary>
      <returns>
              一个字符串，包含的编解码器的多用途 Internet 邮件扩展 (MIME) 类型。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>
              获取或设置两个二维可以用作筛选器的字节数组。
            </summary>
      <returns>
              两个二维可以用作筛选器的字节数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>
              获取或设置两个字节表示的签名的编解码器的二维数组。
            </summary>
      <returns>
              两个字节表示的签名的编解码器的二维数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>
              获取或设置编解码器的版本号。
            </summary>
      <returns>
              编解码器的版本号。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>
              获取位图 (BMP) 图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示位图图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>
              获取增强型图元文件 (EMF) 图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示增强型图元文件图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>
              获取可交换图像文件 (Exif) 格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 Exif 格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>
              获取图形交换格式 (GIF) 图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 GIF 图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>
              获取 <see cref="T:System.Guid" /> 结构，它表示此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 结构，它表示此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>
              获取 Windows 图标图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 Windows 图标图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>
              获取联合图像专家组 (JPEG) 图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 JPEG 图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>
              获取在内存中的位图的格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示在内存中的位图的格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>
              获取 W3C 可移植网络图形 (PNG) 图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 PNG 图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>
              获取标记图像文件格式 (TIFF) 图像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 TIFF 图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>
              获取 Windows 图元文件 (WMF) 映像格式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象，它指示 Windows 图元文件图像格式。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>
              获取 <see cref="T:System.Drawing.Rectangle" /> ，限定关联 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Rectangle" /> ，限定关联 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>
              获取水平分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              水平分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>
              获取以每英寸点数，关联的垂直分辨率， <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              垂直分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>
              获取大小，以字节为单位的增强型图元文件和头文件。
            </summary>
      <returns>
              大小 （以字节为单位的增强型图元文件和头文件）。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>
              获取逻辑的水平分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              逻辑的水平分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>
              获取逻辑的垂直分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              逻辑的垂直分辨率，以每英寸点数，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>
              获取大小，以字节为单位，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              大小，以字节为单位，关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>
              获取关联的类型 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.MetafileType" /> 表示关联的类型的枚举 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>
              获取关联的版本号 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              关联的版本号 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>
              获取为关联的 Windows 图元文件 (WMF) 标头文件 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Imaging.MetaHeader" /> ，其中包含关联的 WMF 标头文件 <see cref="T:System.Drawing.Imaging.Metafile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>
              获取或设置大小，以字节为单位的头文件。
            </summary>
      <returns>
              大小 （以字节为单位的头文件）。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>
              获取或设置大小，以字节为单位的最大记录在关联 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </summary>
      <returns>
              大小 （字节） 关联的最大记录 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>
              获取或设置中存在的对象的最大数目 <see cref="T:System.Drawing.Imaging.Metafile" /> 在同一时间的对象。
            </summary>
      <returns>
              中存在的对象的最大数目 <see cref="T:System.Drawing.Imaging.Metafile" /> 在同一时间的对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>
              未使用。
               始终返回 0。
            </summary>
      <returns>
              始终为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>
              获取或设置大小，以字节为单位，关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </summary>
      <returns>
              大小，以字节为单位，关联的 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>
              获取或设置关联的类型 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </summary>
      <returns>
              关联的类型 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>
              获取或设置标头格式的版本号。
            </summary>
      <returns>
              标头格式的版本号。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>
              获取或设置的属性 ID。
            </summary>
      <returns>
              一个整数，表示该属性的 ID。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>
              获取或设置的长度 （以字节为单位） <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 属性。
            </summary>
      <returns>
              一个整数，表示的长度 （以字节为单位） <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 字节数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>
              获取或设置一个整数，定义中包含的数据类型 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 属性。
            </summary>
      <returns>
              一个整数，定义中包含的数据类型 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>
              获取或设置属性项的值。
            </summary>
      <returns>
              一个表示属性项的值的字节数组。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>
              获取或设置输出设备上的图元文件图像的边框的右下角的 y 坐标。
            </summary>
      <returns>
              在输出设备上的图元文件图像的边框的右下角的 y 坐标值。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>
              获取或设置输出设备上的图元文件图像的边框的左上角的 x 坐标。
            </summary>
      <returns>
              输出设备上图元文件图像的边框的左上角 x 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>
              获取或设置输出设备上的图元文件图像的边框的右下角的 x 坐标。
            </summary>
      <returns>
              在输出设备上的图元文件图像的边框的右下角的 x 坐标值。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>
              获取或设置输出设备上的图元文件图像的边框的左上角的 y 坐标。
            </summary>
      <returns>
              输出设备上图元文件图像的边框的左上角 y 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>
              获取或设置校验和值的上一个 10 <see langword="WORD" /> 头。
            </summary>
      <returns>
              校验和值前 10 个 <see langword="WORD" /> 头。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>
              获取或设置在内存中的图元文件的句柄。
            </summary>
      <returns>
              在内存中的图元文件的句柄。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>
              获取或设置的每英寸点数缇数。
            </summary>
      <returns>
              缇每英寸点数为单位数。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>
              获取或设置一个值，该值可放置的图元文件标头。
            </summary>
      <returns>
              指示存在可放置的图元文件标头的值。
            </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>
              保留。
               请勿使用。
            </summary>
      <returns>
              保留。
               请勿使用。
            </returns>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Pen" /> 的对齐方式。
            </summary>
      <returns>
              表示该 <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> 的对齐方式的 <see cref="T:System.Drawing.Pen" />。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  指定的值不是成员的 <see cref="T:System.Drawing.Drawing2D.PenAlignment" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.Alignment" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Brush" />，用于确定此 <see cref="T:System.Drawing.Pen" /> 的特性。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Brush" />，用于确定此 <see cref="T:System.Drawing.Pen" /> 的特性。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.Brush" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Pen" /> 的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，表示此 <see cref="T:System.Drawing.Pen" /> 的颜色。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.Color" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>
              获取或设置用于指定复合钢笔的值数组。
               复合钢笔绘制由平行直线和空白区域组成的复合直线。
            </summary>
      <returns>
              用于指定复合数组的实数组。
               该数组中的元素必须按升序排列，不能小于 0，也不能大于 1。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.CompoundArray" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>
              获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的自定义线帽。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.CustomEndCap" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>
              获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的自定义线帽。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.CustomStartCap" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>
              获取或设置用在短划线终点的线帽样式，这些短划线构成通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.DashCap" /> 值之一，表示用在短划线起点和终点的线帽样式，这些短划线构成通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  指定的值不是成员的 <see cref="T:System.Drawing.Drawing2D.DashCap" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.DashCap" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>
              获取或设置直线的起点到短划线图案起始处的距离。
            </summary>
      <returns>
              直线的起点到短划线图案起始处的距离。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.DashOffset" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>
              获取或设置自定义的短划线和空白区域的数组。
            </summary>
      <returns>
              实数数组，指定虚线中交替出现的短划线和空白区域的长度。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.DashPattern" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>
              获取或设置用于通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线的样式。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.DashStyle" />，表示用于通过此 <see cref="T:System.Drawing.Pen" /> 绘制的虚线的样式。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.DashStyle" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>
              获取或设置要在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.LineCap" /> 值之一，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线终点使用的线帽样式。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  指定的值不是成员的 <see cref="T:System.Drawing.Drawing2D.LineCap" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.EndCap" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>
              获取或设置通过此 <see cref="T:System.Drawing.Pen" /> 绘制的两条连续直线的端点的联接样式。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.LineJoin" />，表示通过此 <see cref="T:System.Drawing.Pen" /> 绘制的两条连续直线的端点的联接样式。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.LineJoin" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>
              获取或设置斜接角上联接宽度的限制。
            </summary>
      <returns>
              斜接角上联接宽度的限制。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.MiterLimit" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>
              获取用此 <see cref="T:System.Drawing.Pen" /> 绘制的直线的样式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.PenType" /> 枚举，指定用此 <see cref="T:System.Drawing.Pen" /> 绘制的直线的样式。
            </returns>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>
              获取或设置在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Drawing2D.LineCap" /> 值之一，表示在通过此 <see cref="T:System.Drawing.Pen" /> 绘制的直线起点使用的线帽样式。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  指定的值不是成员的 <see cref="T:System.Drawing.Drawing2D.LineCap" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.StartCap" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Pen" /> 的几何变换的副本。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 副本，表示此 <see cref="T:System.Drawing.Pen" /> 的几何变换。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.Transform" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Pen" /> 的宽度，以用于绘图的 <see cref="T:System.Drawing.Graphics" /> 对象为单位。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Pen" /> 的宽度。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Pen.Width" /> 属性设置对不可变 <see cref="T:System.Drawing.Pen" />, ，例如由 <see cref="T:System.Drawing.Pens" /> 类。
                </exception>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>
              系统定义 <see cref="T:System.Drawing.Pen" /> 宽度为 1 的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> 对象设置为系统定义的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Point.IsEmpty">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.Point" /> 是否为空。
            </summary>
      <returns>
              <see langword="true" /> 如果两个 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 0; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Point.X">
      <summary>
              获取或设置此的 x 坐标 <see cref="T:System.Drawing.Point" />。
            </summary>
      <returns>
              此的 x 坐标 <see cref="T:System.Drawing.Point" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Point.Y">
      <summary>
              获取或设置此的 y 坐标 <see cref="T:System.Drawing.Point" />。
            </summary>
      <returns>
              此的 y 坐标 <see cref="T:System.Drawing.Point" />。
            </returns>
    </member>
    <member name="P:System.Drawing.PointF.IsEmpty">
      <summary>
              获取一个值，该值指示此 <see cref="T:System.Drawing.PointF" /> 是否为空。
            </summary>
      <returns>
              <see langword="true" /> 如果两个 <see cref="P:System.Drawing.PointF.X" /> 和 <see cref="P:System.Drawing.PointF.Y" /> 0; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.PointF.X">
      <summary>
              获取或设置此的 x 坐标 <see cref="T:System.Drawing.PointF" />。
            </summary>
      <returns>
              此的 x 坐标 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="P:System.Drawing.PointF.Y">
      <summary>
              获取或设置此的 y 坐标 <see cref="T:System.Drawing.PointF" />。
            </summary>
      <returns>
              此的 y 坐标 <see cref="T:System.Drawing.PointF" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>
              获取或设置下边距，以百分之一英寸。
            </summary>
      <returns>
              下边距，以百分之一英寸。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 属性设置为小于 0 的值。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>
              获取或设置左边的距的宽度，以百分之一英寸。
            </summary>
      <returns>
              左边的距的宽度，以百分之一英寸。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.Margins.Left" /> 属性设置为小于 0 的值。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>
              获取或设置右边距的宽度，以百分之一英寸。
            </summary>
      <returns>
              右边距的宽度，以百分之一英寸。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.Margins.Right" /> 属性设置为小于 0 的值。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>
              获取或设置上边距宽度，以百分之一英寸。
            </summary>
      <returns>
              上边距宽度，以百分之一英寸。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.Margins.Top" /> 属性设置为小于 0 的值。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>
              获取页上，考虑到由指定的页面方向的大小 <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> 属性。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Rectangle" /> 表示长度和宽度，以百分之一英寸的页。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>
              获取或设置一个值，该值指示是否应以彩色打印页面。
            </summary>
      <returns>
              <see langword="true" /> 如果应颜色; 在打印的页，否则为 <see langword="false" />。
               默认值取决于打印机。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>
              获取以百分之一英寸，硬距左侧的页上的 x 坐标。
            </summary>
      <returns>
              X 坐标，以百分之一英寸，左侧的硬页边距。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>
              获取 y 坐标，以百分之一英寸，页顶部的硬边距。
            </summary>
      <returns>
              Y 坐标，以百分之一英寸，页顶部的硬边距。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>
              获取或设置一个值，该值指示是否在横向或纵向方向打印的页。
            </summary>
      <returns>
              <see langword="true" /> 如果以横向方向; 应打印的页，否则为 <see langword="false" />。
               默认值取决于打印机。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>
              获取或设置此页的边距。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.Margins" /> 表示中百分之一英寸的页的边距。
               默认值为各边的 1 英寸边距。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>
              获取或设置页上的纸张大小。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PaperSize" /> 表示在纸张的大小。
               默认值为打印机的默认纸张大小。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在或未安装的默认打印机。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>
              获取或设置页的纸张来源;例如，打印机的上层送纸器。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PaperSource" /> ，它指定纸张来源。
               默认值为打印机的默认纸张来源。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在或未安装的默认打印机。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>
              获取打印机页上的可打印区域的边界。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.RectangleF" /> 表示长度和宽度，以百分之一英寸，区域的打印机是否能够在打印。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>
              获取或设置页上的打印机分辨率。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterResolution" /> ，它指定页上的打印机分辨率。
               默认值为打印机的默认解析。
            </returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">
                  中指定的打印机 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性不存在或未安装的默认打印机。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>
              获取或设置与页关联的打印机设置。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterSettings" /> ，表示与页关联的打印机设置。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>
              获取或设置在纸张的高度以百分之一英寸。
            </summary>
      <returns>
              中百分之一英寸的纸张的高度。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性未设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>
              获取纸张的类型。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PaperKind" /> 值之一。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性未设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>
              获取或设置的纸张类型的名称。
            </summary>
      <returns>
              纸张类型的名称。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 属性未设置为 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>
              获取或设置一个整数，表示之一 <see cref="T:System.Drawing.Printing.PaperSize" /> 值或自定义值。
            </summary>
      <returns>
              一个整数，表示之一 <see cref="T:System.Drawing.Printing.PaperSize" /> 值或自定义的值。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>
              获取或设置在纸张的宽度以百分之一英寸。
            </summary>
      <returns>
              中百分之一英寸纸张的宽度。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.PaperSize.Kind" />属性未设置为<see cref="F:System.Drawing.Printing.PaperKind.Custom" />。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>
              获取纸张来源。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>
              获取或设置表示之一的整数 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值或自定义值。
            </summary>
      <returns>
              整数值，表示之一 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值或自定义值。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>
              获取或设置纸张来源的名称。
            </summary>
      <returns>
              纸张来源的名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>
              获取所打印页面的图像。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Image" /> 表示打印的页面。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>
              获取与打印页的大小以百分之一英寸。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Size" /> ，指定所打印页面的大小以百分之一英寸。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>
              获取一个值，该值指示此控制器用于打印预览。
            </summary>
      <returns>
              在所有情况下均为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>
              获取或设置一个值，该值指示显示打印预览时是否使用抗锯齿效果。
            </summary>
      <returns>
              <see langword="true" /> 如果打印预览使用抗锯齿;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Drawing.Printing.PrintController" /> 用于打印预览。
            </summary>
      <returns>
              在所有情况下均为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>
              获取或设置用作要打印的所有页的默认设置的页设置。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PageSettings" /> ，它指定文档的默认页设置。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>
              获取或设置打印文档时要显示的文档名称（例如，在打印状态对话框或打印机队列中）。
            </summary>
      <returns>
              打印文档时要显示的文档名。
               默认为“文档”。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>
              获取或设置一个值，该值指示与页关联的图形对象的位置是位于用户指定边距内，还是位于该页可打印区域的左上角。
            </summary>
      <returns>
              <see langword="true" /> 如果图形原点起始于页边距; <see langword="false" /> 如果图形原点位于可打印的页面的左上角。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>
              获取或设置指导打印进程的打印控制器。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PrintController" /> 指导打印进程。
               默认值为的新实例 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> 类。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>
              获取或设置对文档进行打印的打印机。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterSettings" /> ，它指定在何处以及如何打印文档。
               默认值是 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 其属性值设为其默认值。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>
              获取或设置打印机分辨率。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 值之一。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  分配的值不是成员的 <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 枚举。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>
              获取以每英寸点数打印机水平分辨率。
            </summary>
      <returns>
              水平打印机分辨率，以每英寸点数，如果 <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" /> 设置为 <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" />; 否则为 <see langword="dmPrintQuality" /> 值。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>
              获取垂直打印机分辨率以每英寸点数。
            </summary>
      <returns>
              垂直打印机分辨率，以每英寸点数为单位。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>
              获取一个值，该值指示是否打印机支持双面打印。
            </summary>
      <returns>
              <see langword="true" /> 如果打印机支持双面打印;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>
              获取或设置一个值，该值指示是否逐份打印的文档。
            </summary>
      <returns>
              <see langword="true" /> 如果逐份打印的文档否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>
              获取或设置要打印的文档的副本数。
            </summary>
      <returns>
              要打印的份数。
               默认值为 1。
            </returns>
      <exception cref="T:System.ArgumentException">
                  值 <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> 属性也不可小于零。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>
              获取默认值为此打印机的页设置。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PageSettings" /> ，表示此打印机的默认页设置。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>
              获取或设置双面打印的打印机设置。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.Duplex" /> 值之一。
               默认值取决于打印机。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  值 <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> 属性不属于某个 <see cref="T:System.Drawing.Printing.Duplex" /> 值。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>
              获取或设置要打印的第一页的页码。
            </summary>
      <returns>
              若要打印的第一页的页码。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 属性的值小于零。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>
              获取在计算机上安装的所有打印机的名称。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 表示计算机上安装的所有打印机的名称。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  无法枚举可用的打印机。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>
              获取一个值，该值指示是否 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性指定默认打印机，除用户显式设置 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 指定默认打印机; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>
              获取一个值，该值指示该打印机是否绘图。
            </summary>
      <returns>
              <see langword="true" /> 如果打印机绘图仪; <see langword="false" /> 如果打印机光栅。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>
              获取一个值，该值指示是否 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性指定有效的打印机。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 属性指定有效的打印机; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>
              获取纵向方向旋转以生成横向方向的角度，以度为单位。
            </summary>
      <returns>
              角度 （以度为单位，纵向方向旋转以生成横向方向）。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>
              获取最大的打印机使用户能够一次打印的份数。
            </summary>
      <returns>
              最大打印机使用户能够一次打印的份数。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>
              获取或设置最大 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 或 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 可选择在 <see cref="T:System.Windows.Forms.PrintDialog" />。
            </summary>
      <returns>
              最大值 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 或 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 可选择在 <see cref="T:System.Windows.Forms.PrintDialog" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  值 <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> 属性也不可小于零。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>
              获取或设置所需的最低 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 或 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 可选择在 <see cref="T:System.Windows.Forms.PrintDialog" />。
            </summary>
      <returns>
              所需的最低 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 或 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 可选择在 <see cref="T:System.Windows.Forms.PrintDialog" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  值 <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> 属性也不可小于零。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>
              获取集合中的不同的纸张大小的数目。
            </summary>
      <returns>
              集合中的不同的纸张大小的数目。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>
              获取 <see cref="T:System.Drawing.Printing.PaperSize" /> 中指定索引处。
            </summary>
      <param name="index">
                索引 <see cref="T:System.Drawing.Printing.PaperSize" /> 来获取。
              </param>
      <returns>
              位于指定索引处的 <see cref="T:System.Drawing.Printing.PaperSize" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>
              获取支持的这台打印机的纸张大小。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> ，表示支持的这台打印机的纸张大小。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>
              获取集合中的不同的纸张来源的数目。
            </summary>
      <returns>
              集合中的不同的纸张来源的数。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>
              获取 <see cref="T:System.Drawing.Printing.PaperSource" /> 中指定索引处。
            </summary>
      <param name="index">
                索引 <see cref="T:System.Drawing.Printing.PaperSource" /> 来获取。
              </param>
      <returns>
              位于指定索引处的 <see cref="T:System.Drawing.Printing.PaperSource" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>
              获取可用打印机的纸张来源纸盒。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> ，它表示位于这台打印机的纸张来源纸盒。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>
              获取或设置要使用的打印机的名称。
            </summary>
      <returns>
              要使用的打印机的名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>
              获取集合中可用的打印机分辨率的数目。
            </summary>
      <returns>
              集合中的可用打印机分辨率的数目。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>
              获取 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 中指定索引处。
            </summary>
      <param name="index">
                索引 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 来获取。
              </param>
      <returns>
              位于指定索引处的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>
              获取所有支持的这台打印机的解决方法。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> ，表示支持的这台打印机的解决方法。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>
              获取或设置时打印到文件的文件名。
            </summary>
      <returns>
              打印到文件时文件名称。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>
              获取或设置用户已指定要打印的页码。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PrintRange" /> 值之一。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  值 <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> 属性不属于某个 <see cref="T:System.Drawing.Printing.PrintRange" /> 值。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>
              获取或设置一个值，该值指示是否打印输出发送到一个文件而不是一个端口。
            </summary>
      <returns>
              <see langword="true" /> 如果打印输出发送到一个文件;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>
              获取集合中的字符串的数量。
            </summary>
      <returns>
              集合中的字符串的数量。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>
              获取 <see cref="T:System.String" /> 中指定索引处。
            </summary>
      <param name="index">
                索引 <see cref="T:System.String" /> 来获取。
              </param>
      <returns>
              位于指定索引处的 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。
            </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>
              获取一个值，该值指示是否此打印机支持彩色打印。
            </summary>
      <returns>
              <see langword="true" /> 如果此打印机支持彩色打印否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>
              获取或设置要打印的最后一页的数目。
            </summary>
      <returns>
              若要打印的最后一页的数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  值 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 属性也不可小于零。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>
              在所有情况下均返回 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />。
            </summary>
      <returns>
              在所有情况下均为 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>
              获取或设置打印访问代码的级别。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>
              获取或设置允许的打印类型。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。
            </returns>
      <exception cref="T:System.ArgumentException">
                  该值不是 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值之一。
                </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>
              获取或设置一个值，该值指示是否应取消打印作业。
            </summary>
      <returns>
              <see langword="true" /> 如果应取消打印作业;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>
              获取 <see cref="T:System.Drawing.Graphics" /> 用来绘制页。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Graphics" /> 用来绘制页。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>
              获取或设置一个值，该值指示是否应打印附加页。
            </summary>
      <returns>
              <see langword="true" /> 如果应打印附加页;，否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>
              获取表示边距内页面的部分的矩形区域。
            </summary>
      <returns>
              矩形区域，以百分之一英寸，它表示边距以内页面的部分。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>
              获取表示页上的总区域的矩形区域。
            </summary>
      <returns>
              表示页上的总区域的矩形区域。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>
              获取当前页的页设置。
            </summary>
      <returns>
              当前页的页设置。
            </returns>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>
              获取或设置要打印页的页设置。
            </summary>
      <returns>
              要打印页的页设置。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Bottom">
      <summary>
              获取 y 坐标，该坐标是此 <see cref="T:System.Drawing.Rectangle" /> 结构的 <see cref="P:System.Drawing.Rectangle.Y" /> 与 <see cref="P:System.Drawing.Rectangle.Height" /> 属性值之和。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="P:System.Drawing.Rectangle.Y" /> 与 <see cref="P:System.Drawing.Rectangle.Height" /> 之和的 y 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Height">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Rectangle" /> 结构的高度。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 结构的高度。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.IsEmpty">
      <summary>
              测试此 <see cref="T:System.Drawing.Rectangle" /> 的所有数值属性是否都具有零值。
            </summary>
      <returns>
              如果此 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="P:System.Drawing.Rectangle.Width" />、<see cref="P:System.Drawing.Rectangle.Height" />、<see cref="P:System.Drawing.Rectangle.X" /> 和 <see cref="P:System.Drawing.Rectangle.Y" /> 属性都具有零值，此属性将返回 <see langword="true" />；否则将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Left">
      <summary>
              获取此 <see cref="T:System.Drawing.Rectangle" /> 结构左边缘的 x 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 结构左边缘的 x 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Location">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的坐标。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Point" />，它表示此 <see cref="T:System.Drawing.Rectangle" /> 结构的左上角。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Right">
      <summary>
              获取 x 坐标，该坐标是此 <see cref="T:System.Drawing.Rectangle" /> 结构的 <see cref="P:System.Drawing.Rectangle.X" />与 <see cref="P:System.Drawing.Rectangle.Width" /> 属性值之和。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="P:System.Drawing.Rectangle.X" /> 与 <see cref="P:System.Drawing.Rectangle.Width" /> 之和的 x 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Size">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Rectangle" /> 的大小。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Size" />，它表示此 <see cref="T:System.Drawing.Rectangle" /> 结构的宽度和高度。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Top">
      <summary>
              获取此 <see cref="T:System.Drawing.Rectangle" /> 结构上边缘的 y 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 结构上边缘的 y 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Width">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Rectangle" /> 结构的宽度。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 结构的宽度。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.X">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的 x 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的 x 坐标。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Y">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的 y 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.Rectangle" /> 结构左上角的 y 坐标。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Bottom">
      <summary>
              获取是之和的 y 坐标 <see cref="P:System.Drawing.RectangleF.Y" /> 和 <see cref="P:System.Drawing.RectangleF.Height" /> 此 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <returns>
              之和的 y 坐标 <see cref="P:System.Drawing.RectangleF.Y" /> 和 <see cref="P:System.Drawing.RectangleF.Height" /> 此 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Height">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.RectangleF" /> 结构的高度。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 结构的高度。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.IsEmpty">
      <summary>
              测试是否 <see cref="P:System.Drawing.RectangleF.Width" /> 或 <see cref="P:System.Drawing.RectangleF.Height" /> 属性 <see cref="T:System.Drawing.RectangleF" /> 值为零。
            </summary>
      <returns>
              此属性返回 <see langword="true" /> 如果 <see cref="P:System.Drawing.RectangleF.Width" /> 或 <see cref="P:System.Drawing.RectangleF.Height" /> 属性 <see cref="T:System.Drawing.RectangleF" /> 值为零; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Left">
      <summary>
              获取此 <see cref="T:System.Drawing.RectangleF" /> 结构左边缘的 x 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 结构左边缘的 x 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Location">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.RectangleF" /> 结构左上角的坐标。
            </summary>
      <returns>
              <see cref="T:System.Drawing.PointF" />，它表示此 <see cref="T:System.Drawing.RectangleF" /> 结构的左上角。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Right">
      <summary>
              获取是之和的 x 坐标 <see cref="P:System.Drawing.RectangleF.X" /> 和 <see cref="P:System.Drawing.RectangleF.Width" /> 此 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </summary>
      <returns>
              之和的 x 坐标 <see cref="P:System.Drawing.RectangleF.X" /> 和 <see cref="P:System.Drawing.RectangleF.Width" /> 此 <see cref="T:System.Drawing.RectangleF" /> 结构。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Size">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.RectangleF" /> 的大小。
            </summary>
      <returns>
              <see cref="T:System.Drawing.SizeF" />，它表示此 <see cref="T:System.Drawing.RectangleF" /> 结构的宽度和高度。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Top">
      <summary>
              获取此 <see cref="T:System.Drawing.RectangleF" /> 结构上边缘的 y 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 结构上边缘的 y 坐标。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Width">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.RectangleF" /> 结构的宽度。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 结构的宽度。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.X">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.RectangleF" /> 结构左上角的 x 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 结构左上角的 x 坐标。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Y">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.RectangleF" /> 结构左上角的 y 坐标。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.RectangleF" /> 结构左上角的 y 坐标。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Drawing.Size.Height">
      <summary>
              获取或设置的垂直分量 <see cref="T:System.Drawing.Size" /> 结构。
            </summary>
      <returns>
              垂直分量 <see cref="T:System.Drawing.Size" /> 结构，通常以像素为单位进行度量。
            </returns>
    </member>
    <member name="P:System.Drawing.Size.IsEmpty">
      <summary>
              测试是否这 <see cref="T:System.Drawing.Size" /> 结构的宽度和高度均为 0。
            </summary>
      <returns>
              此属性返回 <see langword="true" /> 时这 <see cref="T:System.Drawing.Size" /> 结构的宽度和高度均为 0; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.Size.Width">
      <summary>
              获取或设置此水平组件<see cref="T:System.Drawing.Size" />结构。
            </summary>
      <returns>
              此水平组件<see cref="T:System.Drawing.Size" />结构，通常以像素度量。
            </returns>
    </member>
    <member name="P:System.Drawing.SizeF.Height">
      <summary>
              获取或设置的垂直分量 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <returns>
              垂直分量 <see cref="T:System.Drawing.SizeF" /> 结构，通常以像素为单位进行度量。
            </returns>
    </member>
    <member name="P:System.Drawing.SizeF.IsEmpty">
      <summary>
              获取一个值，该值指示是否此 <see cref="T:System.Drawing.SizeF" /> 结构的零宽度和高度。
            </summary>
      <returns>
              此属性返回 <see langword="true" /> 时这 <see cref="T:System.Drawing.SizeF" /> 结构的宽度和高度均为零; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Drawing.SizeF.Width">
      <summary>
              获取或设置的水平分量 <see cref="T:System.Drawing.SizeF" /> 结构。
            </summary>
      <returns>
              水平分量 <see cref="T:System.Drawing.SizeF" /> 结构，通常以像素为单位进行度量。
            </returns>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>
              获取或设置此颜色 <see cref="T:System.Drawing.SolidBrush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> 结构，它表示此画笔的颜色。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Drawing.SolidBrush.Color" /> 属性设置对不可变 <see cref="T:System.Drawing.SolidBrush" />。
                </exception>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>
              获取或设置字符串的水平对齐方式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.StringAlignment" /> 枚举，它指定字符串的水平对齐方式。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>
              获取将本地数字替换西方数字时所使用的语言。
            </summary>
      <returns>
              一个区域语言支持 (NLS) 语言标识符，它标识在将本地数字替换为西方数字时所使用的语言。
               可将 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性作为 NLS 语言标识符传递。
               例如，假定通过将字符串“ar-EG”传递给 <see cref="T:System.Globalization.CultureInfo" /> 构造函数来创建 <see cref="T:System.Globalization.CultureInfo" /> 对象。
               如果将该 <see cref="T:System.Globalization.CultureInfo" /> 对象的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 属性连同 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> 一起传递给 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> 方法，则在显示时阿拉伯 - 印度文数字将会替换西方数字。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>
              获取要用于数字替换的方法。
            </summary>
      <returns>
              <see cref="T:System.Drawing.StringDigitSubstitute" /> 枚举值，它指定如何替换字符串中因当前字体不支持而无法显示的字符。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>
              获取或设置包含格式化信息的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。
            </summary>
      <returns>
              包含格式化信息的 <see cref="T:System.Drawing.StringFormatFlags" /> 枚举。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>
              获取泛型默认 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </summary>
      <returns>
              泛型默认 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>
              获取泛型版式 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </summary>
      <returns>
              泛型版式 <see cref="T:System.Drawing.StringFormat" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 对象。
            </summary>
      <returns>
              此 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 对象，默认值为 <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>
              获取或设置字符串的垂直对齐方式。
            </summary>
      <returns>
              <see cref="T:System.Drawing.StringAlignment" /> 枚举，它表示行的垂直对齐方式。
            </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>
              获取或设置此 <see cref="T:System.Drawing.StringFormat" /> 对象的 <see cref="T:System.Drawing.StringTrimming" /> 枚举。
            </summary>
      <returns>
              <see cref="T:System.Drawing.StringTrimming" /> 枚举，它指示当用此 <see cref="T:System.Drawing.StringFormat" /> 对象绘制的文本超出布局矩形的边缘时被剪裁的方式。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口边框的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口边框的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口标题栏的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口标题栏的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口标题栏中的文本颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口标题栏的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>
              获取表示应用程序工作区的颜色的 <see cref="T:System.Drawing.SolidBrush" />。
            </summary>
      <returns>
              A <see cref="T:System.Drawing.SolidBrush" /> ，它是应用程序工作区的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonFace">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是表面的三维元素的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是表面的三维元素的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonHighlight">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的突出显示颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的突出显示颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonShadow">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是表面的三维元素的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是表面的三维元素的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的突出显示颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素的突出显示颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素中文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是三维元素中文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是桌面的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是桌面的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientActiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientInactiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GrayText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是浅灰色文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是浅灰色文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，表示选定项的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，表示选定项的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，表示选定项的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，表示选定项的文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，表示用于指定热跟踪项的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，表示用于指定热跟踪项的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>
              获取作为非活动窗口边框的颜色的 <see cref="T:System.Drawing.SolidBrush" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，表示活动窗口边框的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaptionText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏中的文本颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是活动窗口的标题栏中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个工具提示的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个工具提示的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InfoText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个工具提示文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> 为工具提示的文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个菜单背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个菜单背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuBar">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是菜单栏的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是菜单栏的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuHighlight">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是用来在菜单上显示为平面菜单时突出显示菜单项的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是用来在菜单上显示为平面菜单时突出显示菜单项的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个菜单文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个菜单文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个滚动条的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个滚动条的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是在一个窗口的工作区中的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是在一个窗口的工作区中的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowFrame">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，表示窗口框架的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，表示窗口框架的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>
              获取 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个窗口的工作区中的文本颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.SolidBrush" /> ，它是一个窗口的工作区中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveBorder">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口边框的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是活动窗口边框的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaption">
      <summary>
              获取<see cref="T:System.Drawing.Color" />结构，它是活动窗口标题栏的背景的颜色。
            </summary>
      <returns>
              A <see cref="T:System.Drawing.Color" /> ，它是活动窗口标题栏的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaptionText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口标题栏中的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是活动窗口标题栏中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.AppWorkspace">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是应用程序工作区的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，表示应用程序工作区的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonFace">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的表面颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是表面的三维元素的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonHighlight">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的突出显示颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素的突出显示颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ButtonShadow">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Control">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的表面颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是表面的三维元素的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDark">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDarkDark">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLight">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素的亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLightLight">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素的突出显示颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素的突出显示颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是三维元素中的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是三维元素中文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Desktop">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是桌面的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是桌面的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientActiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GradientInactiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.GrayText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是浅灰色文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是浅灰色文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Highlight">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是选定项的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，表示选定项的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HighlightText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是选定项的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，表示选定项的文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.HotTrack">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是用来指定热跟踪项的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，表示用于指定热跟踪项的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveBorder">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个非活动窗口边框的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，表示活动窗口边框的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口的标题栏的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是活动窗口的标题栏的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaptionText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是活动窗口的标题栏中的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是活动窗口的标题栏中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Info">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个工具提示的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是一个工具提示的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.InfoText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个工具提示的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是一个工具提示文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Menu">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个菜单背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是一个菜单背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuBar">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是菜单栏的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是菜单栏的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuHighlight">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是用来在菜单上显示为平面菜单时突出显示菜单项的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是用来在菜单上显示为平面菜单时突出显示菜单项的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个菜单文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是一个菜单文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ScrollBar">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是滚动条的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是一个滚动条的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Window">
      <summary>
              获取<see cref="T:System.Drawing.Color" />结构，它是窗口的工作区中的背景的颜色。
            </summary>
      <returns>
              A <see cref="T:System.Drawing.Color" /> ，它是窗口的工作区中的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowFrame">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个窗口框架的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，表示窗口框架的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowText">
      <summary>
              获取 <see cref="T:System.Drawing.Color" /> 结构，它是一个窗口的工作区中的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Color" /> ，它是一个窗口的工作区中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.CaptionFont">
      <summary>
              获取 <see cref="T:System.Drawing.Font" /> 用于在 windows 的标题栏中显示文本。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 用于在 windows 的标题栏中显示文本。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DefaultFont">
      <summary>
              获取应用程序可以使用对话框和窗体的默认字体。
            </summary>
      <returns>
              默认值 <see cref="T:System.Drawing.Font" /> 的系统。
               返回的值取决于用户的操作系统和他们的系统的本地区域性设置而异。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DialogFont">
      <summary>
              获取应用程序可以使用对话框和窗体的字体。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 可用于的对话框和窗体，具体取决于操作系统和本地区域性设置的系统。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.IconTitleFont">
      <summary>
              获取 <see cref="T:System.Drawing.Font" /> 所用的图标标题。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 所用的图标标题。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MenuFont">
      <summary>
              获取 <see cref="T:System.Drawing.Font" /> 用于菜单。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 用于菜单。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MessageBoxFont">
      <summary>
              获取 <see cref="T:System.Drawing.Font" /> 用于消息框。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 用于消息框
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.SmallCaptionFont">
      <summary>
              获取 <see cref="T:System.Drawing.Font" /> 用于小型窗口，例如工具窗口标题栏中显示文本。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> 用于小型窗口，例如工具窗口标题栏中显示文本。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.StatusFont">
      <summary>
              获取 <see cref="T:System.Drawing.Font" /> ，用来在状态栏中显示文本。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Font" /> ，用来在状态栏中显示文本。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含默认应用程序图标 (WIN32: IDI_APPLICATION)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含默认应用程序图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统星号图标 (WIN32: IDI_ASTERISK)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统星号图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统错误图标 (WIN32: IDI_ERROR)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统错误图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统感叹号图标 (WIN32: IDI_EXCLAMATION)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统感叹号图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统手形图标 (WIN32: IDI_HAND)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统手形图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统信息图标 (WIN32: IDI_INFORMATION)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统信息图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统问号图标 (WIN32: IDI_QUESTION)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统问号图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Shield">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含盾牌图标。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含盾牌图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统警告图标 (WIN32: IDI_WARNING)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含系统警告图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>
              获取 <see cref="T:System.Drawing.Icon" /> 对象，其中包含 Windows 徽标图标 (WIN32: IDI_WINLOGO)。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Icon" /> 对象，其中包含 Windows 徽标图标。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveBorder">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口边框的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口边框的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口标题栏的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口标题栏的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口标题栏中的文本颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口标题栏中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.AppWorkspace">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，表示应用程序工作区的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，表示应用程序工作区的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonFace">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是表面的三维元素的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是表面的三维元素的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonHighlight">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的突出显示颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的突出显示颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonShadow">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是表面的三维元素的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是表面的三维元素的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的阴影颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的阴影颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的突出显示颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素的突出显示颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是三维元素中文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是三维元素中文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Desktop">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是 Windows 桌面的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是 Windows 桌面的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientActiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientInactiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口的标题栏的颜色渐变中的最亮色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是浅灰色文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是浅灰色文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，表示选定项的背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，表示选定项的背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，表示选定项的文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，表示选定项的文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HotTrack">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，表示用于指定热跟踪项的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，表示用于指定热跟踪项的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveBorder">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> 为非活动窗口的边框的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口边框的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaption">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，表示活动窗口的标题栏标题的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，表示活动窗口的标题栏标题的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口的标题栏中的文本颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是活动窗口的标题栏中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Info">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是一个工具提示的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是一个工具提示的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是一个工具提示文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是一个工具提示文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Menu">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是一个菜单背景的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是一个菜单背景的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuBar">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是菜单栏的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是菜单栏的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuHighlight">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是用来在菜单上显示为平面菜单时突出显示菜单项的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是用来在菜单上显示为平面菜单时突出显示菜单项的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是一个菜单文本的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是一个菜单文本的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ScrollBar">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是一个滚动条的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是一个滚动条的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Window">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是在一个窗口的工作区中的背景颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是在一个窗口的工作区中的背景颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，表示窗口框架的颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，表示窗口框架的颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>
              获取 <see cref="T:System.Drawing.Pen" /> ，它是一个窗口的工作区中的文本颜色。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Pen" /> ，它是一个窗口的工作区中的文本颜色。
            </returns>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>
              获取数组的 <see cref="T:System.Drawing.FontFamily" /> 对象与此相关 <see cref="T:System.Drawing.Text.FontCollection" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.FontFamily" /> 对象数组。
            </returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>
              获取 <see cref="T:System.Drawing.Image" /> 对象与此相关 <see cref="T:System.Drawing.TextureBrush" /> 对象。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Image" /> 对象，表示与此图像 <see cref="T:System.Drawing.TextureBrush" /> 对象填充形状。
            </returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>
              获取或设置一份 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象，用于定义与此相关联的映像局部几何变换 <see cref="T:System.Drawing.TextureBrush" /> 对象。
            </summary>
      <returns>
              一份 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 对象，用于定义仅适用于使用此绘制填充几何变换 <see cref="T:System.Drawing.TextureBrush" /> 对象。
            </returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>
              获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，指示此环绕模式 <see cref="T:System.Drawing.TextureBrush" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，用于指定如何通过使用此绘制填充 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 平铺对象。
            </returns>
    </member>
    <member name="T:System.Drawing.Bitmap">
      <summary>
              封装 GDI+ 包含图形图像和其属性的像素数据的位图。
               一个 <see cref="T:System.Drawing.Bitmap" /> 是用来处理图像像素数据所定义的对象。
            </summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
      <summary>
              指定当解释时，， <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 声明，该程序集应查找指示资源位于同一程序集中，但使用 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 声明的文件名后附加的配置值。
            </summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
      <summary>
              指定当解释时，， <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 声明，该程序集应查找指示资源的附属程序集，但具有 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 声明的文件名后附加的配置值。
            </summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>
              定义用来填充的如矩形、 椭圆、 饼、 多边形和路径的图形形状的内部对象。
            </summary>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>
              所有标准颜色的画笔。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.BufferedGraphics">
      <summary>
              为双缓冲提供图形缓冲区。
            </summary>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsContext">
      <summary>
              提供用于创建可用来进行双缓冲图形缓冲区的方法。
            </summary>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsManager">
      <summary>
              提供对主缓冲的图形上下文对象的应用程序域的访问。
            </summary>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>
              指定字符串中字符位置的范围。
            </summary>
    </member>
    <member name="T:System.Drawing.Color">
      <summary>
              表示 alpha、 红色、 绿色 (蓝色） 的 ARGB 颜色。
            </summary>
    </member>
    <member name="T:System.Drawing.ColorConverter">
      <summary>
              将颜色从一种数据类型转换到另一个。
               访问此类通过 <see cref="T:System.ComponentModel.TypeDescriptor" />。
            </summary>
    </member>
    <member name="T:System.Drawing.ColorTranslator">
      <summary>
              将为和 GDI + 中的颜色转换 <see cref="T:System.Drawing.Color" /> 结构。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary>
              表示一个配置节中的类使用 <see cref="N:System.Drawing" /> 命名空间。
            </summary>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>
              指定的绘图图面上的内容对齐方式。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>
              内容是在顶部，垂直对齐和水平方向上左对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>
              内容是在顶部，垂直对齐和水平方向上居中对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>
              内容是在顶部，垂直对齐和水平方向上右对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>
              内容是在中间，垂直对齐和水平方向上左对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>
              内容是在中间，垂直对齐和水平方向上居中对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>
              内容是在中间，垂直对齐和水平方向上右对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>
              内容是在底部，垂直对齐和水平方向上左对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>
              内容是在底部，垂直对齐和水平方向上居中对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>
              内容是在底部，垂直对齐和水平方向上右对齐。
            </summary>
    </member>
    <member name="T:System.Drawing.CopyPixelOperation">
      <summary>
              确定如何与目标颜色，以生成最终颜色的组合中复制像素操作的源颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Blackness">
      <summary>
              通过使用与物理调色板中索引 0 处关联的颜色填充目标区域。
               （此颜色为黑色，默认的物理调色板。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
      <summary>
              包括彼此层叠于您的窗口顶部的 windows 在生成的图像。
               默认情况下，映像将包含您的窗口。
               请注意，这通常不能用于打印设备上下文。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.DestinationInvert">
      <summary>
              目标区域已逆转。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergeCopy">
      <summary>
              源区域的颜色的目标设备上下文中使用布尔所选定画笔颜色与合并 <see langword="AND" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergePaint">
      <summary>
              与目标区域的颜色合并反转的源区域的颜色，应使用布尔 <see langword="OR" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NoMirrorBitmap">
      <summary>
              未镜像该位图。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceCopy">
      <summary>
              反转的源区域复制到目标。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceErase">
      <summary>
              源和目标颜色组合使用布尔 <see langword="OR" /> 然后逆转运算符和生成的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatCopy">
      <summary>
              目标设备上下文中当前选定的画笔复制到目标位图。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatInvert">
      <summary>
              与相结合，目标设备上下文中当前选定的画笔的颜色的颜色的目标使用布尔 <see langword="XOR" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatPaint">
      <summary>
              与使用布尔将反转的源区域的颜色相结合，目标设备上下文中当前选定的画笔的颜色 <see langword="OR" /> 运算符。
               此操作的结果结合使用布尔值的目标区域的颜色 <see langword="OR" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceAnd">
      <summary>
              源和目标区域的颜色组合使用布尔 <see langword="AND" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceCopy">
      <summary>
              源区域是直接复制到目标区域。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceErase">
      <summary>
              目标区域的颜色反转结合使用布尔值的源区域的颜色 <see langword="AND" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceInvert">
      <summary>
              源和目标区域的颜色组合使用布尔 <see langword="XOR" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourcePaint">
      <summary>
              源和目标区域的颜色组合使用布尔 <see langword="OR" /> 运算符。
            </summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Whiteness">
      <summary>
              通过使用与物理调色板中的索引 1 相关联的颜色填充目标区域。
               （此颜色为默认的物理调色板的白色。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>
              表示类别名称字符串的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.IPropertyValueUIService">
      <summary>
              提供一个接口来管理映像、 工具提示、 和属性的属性浏览器中显示的组件的事件处理程序。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary>
              显示工具箱项的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>
              提供方法和属性来管理和查询在开发环境中的工具箱。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>
              定义用于将设置当前选定的工具箱项和，该值指示设计器是否支持特定的工具箱项的接口。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.PaintValueEventArgs">
      <summary>
              将提供数据供 <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> 方法。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIHandler">
      <summary>
              表示将委托添加到的实现的方法 <see cref="T:System.Drawing.Design.IPropertyValueUIService" />。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用来获取上下文信息。
              </param>
      <param name="propDesc">
                一个 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 表示正在查询的属性。
              </param>
      <param name="valueUIItemList">
                <see cref="T:System.Collections.ArrayList" /> 的 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 对象包含用户界面项目与属性关联。
              </param>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIItem">
      <summary>
              提供有关属性显示在属性窗口，其中包括关联的事件处理程序、 弹出信息字符串和图标以显示属性的信息。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler">
      <summary>
              表示将用来处理 <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> 的 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 事件的方法。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 与双击的图标关联的属性。
              </param>
      <param name="descriptor">
                与双击的图标关联的属性。
              </param>
      <param name="invokedItem">
                <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 与双击的图标关联。
              </param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>
              将提供数据供 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 组件添加到工具箱时发生的事件。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> 事件。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />。
              </param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>
              将提供数据供 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 组件添加到工具箱时发生的事件。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> 事件。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                为事件提供数据的 <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />。
              </param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>
              提供工具箱项的基实现。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>
              表示工具箱项的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>
              提供回调机制，可以创建 <see cref="T:System.Drawing.Design.ToolboxItem" />。
            </summary>
      <param name="serializedObject">
                包含要创建的数据的对象 <see cref="T:System.Drawing.Design.ToolboxItem" /> 有关。
              </param>
      <param name="format">
                若要创建的剪贴板数据格式的名称 <see cref="T:System.Drawing.Design.ToolboxItem" /> 有关。
              </param>
      <returns>
              反序列化 <see cref="T:System.Drawing.Design.ToolboxItem" /> 指定对象 <paramref name="serializedObject" />。
            </returns>
    </member>
    <member name="T:System.Drawing.Design.UITypeEditor">
      <summary>
              提供可用于设计值编辑器的基类，这些编辑器可提供用户界面 (UI) 以用来表示和编辑所支持的数据类型的对象值。
            </summary>
    </member>
    <member name="T:System.Drawing.Design.UITypeEditorEditStyle">
      <summary>
              指定用于指示值编辑样式的标识符 <see cref="T:System.Drawing.Design.UITypeEditor" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.None">
      <summary>
              不提供任何交互式用户界面 (UI) 组件。
            </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.Modal">
      <summary>
              显示一个省略号 （...） 按钮以启动模式对话框中，才能继续程序需要用户输入或无模式对话框中，将停留在屏幕上并可用于在任何时候，但它允许用户执行其他活动。
            </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown">
      <summary>
              显示的下拉箭头按钮，并在下拉列表的对话框中承载用户界面 (UI)。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>
              表示可调整箭头形状的线帽。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>
              为定义的混合模式 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>
              定义颜色和用于插值颜色混合在多色渐变中的位置的数组。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>
              指定如何不同的剪辑区域可以组合。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>
              另一种将替换为一个剪辑区域。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>
              通过采用它们的交集组合两个剪辑区域。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>
              通过采用这两者的 union 组合两个剪辑区域。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>
              两个剪辑区域是组合采取相应的区域括起，一项或在其他区域中，但不是能同时。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>
              指定正在从现有的区域中删除的新区域的结果替换为现有区域。
               换言之，从现有区域中排除的新区域。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>
              指定正在从新的区域中删除现有区域的结果替换为现有区域。
               换言之，从新区域中排除现有的区域。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>
              指定源颜色与背景色进行组合的方式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>
              指定的一种颜色呈现时，它与混合的背景色。
               Blend 取决于所呈现的颜色的 alpha 分量。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>
              指定一种颜色呈现时，它将覆盖背景色。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>
              指定要在复合期间使用的质量级别。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>
              无效的质量。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>
              默认的质量。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>
              高速度、 低质量。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>
              高质量、 低速度复合。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>
              使用灰度校正。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>
              假定线性值。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>
              指定要评估坐标时使用的系统。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>
              指定坐标世界坐标上下文中。
               在建模环境之类的非物理环境中使用世界坐标。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>
              指定坐标在页坐标上下文中。
               通过定义其单元 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性，并且必须是元素之一 <see cref="T:System.Drawing.GraphicsUnit" /> 枚举。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>
              指定设备坐标上下文中的坐标。
               在计算机屏幕设备上坐标通常以像素为单位测量。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>
              封装用户定义的自定义线帽。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>
              指定的图形形状的每个短划线虚线中在两端使用的类型。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>
              指定的每个短划线的两端均方形端帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>
              指定的每个短划线两端均将舍入为循环帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>
              指定的每个短划线两端均为三角帽。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>
              指定与绘制的虚线的样式 <see cref="T:System.Drawing.Pen" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>
              指定一条实线。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>
              指定包含短划线的行。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>
              指定由点构成的行。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>
              指定包含重复的点划线图案的行。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>
              指定包含重复的短划线-点点图案的行。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>
              指定用户定义自定义的短划线样式。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>
              指定如何填充封闭路径的内部。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>
              指定备用填充模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>
              指定环绕的填充模式。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>
              指定是否 （刷新），立即终止图形堆栈中的命令或尽可能快地执行。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>
              指定的所有图形操作堆栈立即刷新。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>
              指定在堆栈上的所有图形操作都执行越早越好。
               这会同步图形状态。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>
              表示图形容器的内部数据。
               保存的状态时使用此类 <see cref="T:System.Drawing.Graphics" /> 对象使用 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 和 <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> 方法。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>
              表示一系列连接的直线和曲线。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>
              提供的功能来循环访问中的子路径 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和测试类型的每个子路径中包含的形状。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>
              表示状态的 <see cref="T:System.Drawing.Graphics" /> 对象。
               此对象将返回通过调用 <see cref="M:System.Drawing.Graphics.Save" /> 方法。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>
              定义矩形画笔阴影样式、 前景颜色与背景色。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>
              指定可用于不同的模式 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>
              水平线的图案。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>
              竖线，线的模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>
              中的行从左上角到右下的对角模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>
              中的行从右上向左下的对角模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>
              指定交叉的水平和垂直线条。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>
              交叉对角线的模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>
              指定 5%阴影。
               前景颜色与背景色比率为 5: 95。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>
              指定 10%阴影。
               前景颜色与背景色比例为 10:90。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>
              指定 20%阴影。
               前景颜色与背景色比例为 20: 80。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>
              指定 25%阴影。
               前景颜色与背景色比例为 25: 75。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>
              指定 30%阴影。
               前景颜色与背景色比例为 30: 70。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>
              指定 40%阴影。
               前景颜色与背景色比例为 40: 60。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>
              指定 50%阴影。
               前景颜色与背景色比例为 50: 50。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>
              指定 60%阴影。
               前景颜色与背景色比例为 60: 40。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>
              指定 70%阴影。
               前景颜色与背景色比例为 70: 30。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>
              指定 75%阴影。
               前景颜色与背景色比例为 75: 25。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>
              指定 80%阴影。
               前景颜色与背景色比例为 80: 100。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>
              指定 90%阴影。
               前景颜色与背景色比例为 90:10。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>
              指定对角线向右倾斜从顶点到底点，它们是分布 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />, ，但不是消除锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>
              指定对角线向左倾斜从顶点到底点，它们是分布 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, ，但它们不是消除锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>
              指定的间隔从顶点到底点向右倾斜的对角线 50%比，并且是两次的宽度 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />。
               此阴影图案不是消除锯齿的。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>
              指定的间隔从顶点到底点向左倾斜的对角线 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, ，和两次其宽度，但这些行不会消除锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>
              指定从顶点到底点，具有相同间距与阴影样式向右倾斜的对角线 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />, ，并且是其宽度的三倍，但不是消除锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>
              指定向左倾斜从顶点到底点，具有相同间距与阴影样式的对角线 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, ，并且是其宽度的三倍，但不是消除锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>
              指定的竖线，线间距 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>
              指定的水平线条间距 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>
              指定竖线，线的间隔更接近 75%一起比阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> (或 25%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" />)。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>
              指定水平线的两边间距 75%阴影样式比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> (或 25%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" />)。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>
              指定的竖线，线间距 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> ，并且是两次其宽度。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>
              指定的水平线条间距 50%比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> ，并且是两次的宽度 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>
              指定对角虚线，表示从顶点到底点向右倾斜。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>
              指定对角虚线，表示从顶点到底点向左倾斜。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>
              指定水平的虚线。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>
              指定垂直虚线。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>
              指定具有外观的纸屑阴影。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>
              指定阴影的外观纸屑，并由组成比更大的片 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>
              指定构成的水平线的水平线条。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>
              指定组成颚化符的水平线条。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>
              指定具有向左倾斜从到底点的顶点的分层砖块外观的阴影。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>
              指定阴影的水平分层程序块的外观。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>
              指定阴影织物的外观。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>
              指定阴影方格花纹材料的外观。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>
              指定阴影草皮层的外观。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>
              指定水平和垂直线条，其中每个由点，跨越。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>
              指定的正向对角线和反向对角线，其中每个由点，跨越。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>
              指定阴影向右倾斜从到底点的顶点的对角分层鹅卵石的外观。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>
              指定具有外观的棚架阴影。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>
              指定具有的外观球形阴影彼此相邻放置。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>
              指定水平和垂直线条跨，它们是分布更近 50%阴影样式比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>
              指定具有的外观呈现为棋盘阴影。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>
              指定具有的外观与方块的大小的两倍的棋盘阴影 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>
              指定的正向对角线和反向对角线跨但不消除锯齿的。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>
              指定具有外观的对角放置的棋盘阴影。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>
              指定的阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>
              指定阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>
              指定阴影样式 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" />。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
              <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 枚举指定的图像是缩放或旋转时使用的算法。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>
              等效于 <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> 元素 <see cref="T:System.Drawing.Drawing2D.QualityMode" /> 枚举。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>
              指定默认模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>
              指定低质量内插。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>
              指定高质量内插。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>
              指定双线性内插。
               进行任何预筛选。
               此模式不适用于图像收缩为其原始大小的 50%以下。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>
              指定两次立方插值。
               进行任何预筛选。
               此模式不适用于图像收缩为其原始大小的 25%以下。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>
              指定最近邻域内插。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>
              指定高质量、 双线性内插。
               执行预筛选功能以确保高质量的收缩。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>
              指定高质量、 两次立方插值。
               执行预筛选功能以确保高质量的收缩。
               此模式可产生最高的质量转换图像。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>
              封装 <see cref="T:System.Drawing.Brush" /> 带有线性渐变。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>
              指定的线性渐变的方向。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>
              指定从左到右的渐变。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>
              指定从上到下的渐变。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>
              指定从左上到右下的渐变。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>
              指定从右上到左下的渐变。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>
              指定可用的线帽样式与其 <see cref="T:System.Drawing.Pen" /> 对象可以用于行尾。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>
              指定平面的线帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>
              指定正方形的线帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>
              指定倒圆角的线帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>
              指定三角形的线帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>
              指定任何定位点。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>
              指定方形定位点线帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>
              指定倒圆角的定位点端。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>
              指定菱形定位点端。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>
              指定箭头状定位点端。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>
              指定自定义线帽。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>
              指定用于检查线帽是否为定位点端的掩码。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>
              指定如何联接连续直线或曲线的段的图 （子路径） 中包含 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>
              指定斜接的联接。
               这将生成尖锐的角或裁剪后的角，具体取决于是否斜接的长度超过斜角限制。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>
              指定凹凸效果的联接。
               这将产生斜向的角。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>
              指定循环联接。
               这将产生在行间平滑的圆弧。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>
              指定斜接的联接。
               这将产生尖锐的角或斜角，具体取决于是否斜接的长度超过斜角限制。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>
              封装表示几何变换的 3x3 仿射矩阵。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>
              指定矩阵的转换操作的顺序。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>
              在旧操作前将应用新的操作。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>
              在旧操作后将应用新的操作。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>
              包含组成的图形数据 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>
              封装 <see cref="T:System.Drawing.Brush" /> 填充的内部对象 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 使用渐变对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>
              指定类型的中点 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>
              起始点 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>
              一条线段。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>
              默认贝塞尔曲线。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>
              遮盖点。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>
              相应的分段为虚线。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>
              路径标记。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>
              子路径的终结点。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>
              三次贝塞尔曲线。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>
              指定的对齐方式 <see cref="T:System.Drawing.Pen" /> 对象相对于的理论的宽度为零行。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>
              指定 <see cref="T:System.Drawing.Pen" /> 对象居中理论的线条。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>
              指定 <see cref="T:System.Drawing.Pen" /> 定位在内部的理论的线条上。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>
              指定 <see cref="T:System.Drawing.Pen" /> 位于外部的理论的线条。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>
              指定 <see cref="T:System.Drawing.Pen" /> 位于左侧的理论的线条。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>
              指定 <see cref="T:System.Drawing.Pen" /> 位于右侧的理论的线条。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>
              指定的填充类型 <see cref="T:System.Drawing.Pen" /> 对象用来填充直线。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>
              指定纯色填充。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>
              指定阴影填充。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>
              指定位图纹理填充。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>
              指定路径渐变填充。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>
              指定线性渐变填充。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>
              指定在呈现过程中如何偏移像素为单位。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>
              指定无效的模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>
              指定的默认模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>
              指定高速度、 低质量呈现。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>
              指定高质量、 低速度呈现。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>
              指定没有像素偏移量。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>
              指定像素偏移-.5 个单元，表示水平和垂直两个高速抗锯齿的。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>
              在呈现 GDI + 对象时指定的总体质量。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>
              指定无效的模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>
              指定的默认模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>
              指定低质量、 高速度呈现。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>
              指定高质量、 低速度呈现。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>
              封装的数据，后者构成 <see cref="T:System.Drawing.Region" /> 对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>
              指定是否将平滑 （抗锯齿） 应用于直线、 曲线和已填充区域边缘。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>
              指定无效的模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>
              指定未抗锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>
              指定未抗锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>
              指定消除锯齿的呈现。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>
              指定未抗锯齿。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>
              指定消除锯齿的呈现。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>
              指定的类型中应用的 warp 变换 <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>
              指定透视的扭曲。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>
              指定一种双线性变形。
            </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>
              指定纹理或渐变平铺小于所填充的区域时。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>
              平铺渐变或纹理。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>
              水平方向将反转纹理或渐变，并将它们平铺纹理或渐变。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>
              垂直方向将反转纹理或渐变，并将它们平铺纹理或渐变。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>
              水平和垂直方向将反转纹理或渐变，并将它们平铺纹理或渐变。
            </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>
              纹理或渐变没有平铺。
            </summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>
              定义特定的文本格式，包括字体、字号和样式特性。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.FontConverter">
      <summary>
              将转换 <see cref="T:System.Drawing.Font" /> 对象从一种数据类型转换为另一个。
            </summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
              <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 是用来与其他各种表示形式转换字体名称的类型转换器。
            </summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>
              和从其他单元类型之间进行转换字体单位。
            </summary>
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>
              定义有着相似的基本设计但在形式上有某些差异的一组字样。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>
              指定应用于文本的样式信息。
            </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>
              普通文本。
            </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>
              显示为粗体文本。
            </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>
              斜体文本。
            </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>
              带下划线的文本。
            </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>
              有一条线穿过中部的文本。
            </summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>
              封装一个 GDI+ 绘图图面。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Graphics.DrawImageAbort">
      <summary>
              提供回调方法，以决定何时 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法应过早地取消执行，并停止绘制图像。
            </summary>
      <param name="callbackdata">
                指定的回调方法的数据的内部指针。
                 此参数不传递由所有 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 重载。
                 您可以通过检查的值测试它是否存在 <see cref="F:System.IntPtr.Zero" />。
              </param>
      <returns>
              此方法返回 <see langword="true" /> 它决定，如果 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法应提前停止执行。
               否则，返回 <see langword="false" /> 以指示 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法应继续执行。
            </returns>
    </member>
    <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
      <summary>
              提供的回调方法 <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> 方法。
            </summary>
      <param name="recordType">
                成员 <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 枚举，用于指定的图元文件记录的类型。
              </param>
      <param name="flags">
                标志，用于指定记录属性的组。
              </param>
      <param name="dataSize">
                在记录数据的字节数。
              </param>
      <param name="data">
                指向包含记录数据的缓冲区的指针。
              </param>
      <param name="callbackData">
                未使用。
              </param>
      <returns>
              返回 <see langword="true" /> 如果你想要继续枚举记录; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>
              指定给定的数据的度量值的单位。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>
              世界坐标系单位指定为度量单位。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>
              指定显示设备的度量的单位。
               通常为视频显示器和打印机的 1/100 英寸像素。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>
              指定设备像素为度量单位。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>
              作为度量单位指定打印机的点 （1/72 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>
              指定的度量单位为英寸。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>
              文档单位 （1/300 英寸） 指定为度量单位。
            </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>
              指定的度量单位为毫米。
            </summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>
              表示 Windows 图标，它是用于表示对象的小位图图像。
               尽管图标的大小由系统决定，但仍可将其视为透明的位图。
            </summary>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>
              将转换 <see cref="T:System.Drawing.Icon" /> 对象从一种数据类型到另一个。
               访问此类通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.IDeviceContext">
      <summary>
              定义用于获取和释放现有的 Windows 设备上下文句柄的方法。
            </summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>
              一个抽象基类，提供了用于功能 <see cref="T:System.Drawing.Bitmap" /> 和 <see cref="T:System.Drawing.Imaging.Metafile" /> 继承的类。
            </summary>
    </member>
    <member name="T:System.Drawing.Image.GetThumbnailImageAbort">
      <summary>
              提供回调方法，以确定何时 <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 方法应过早地取消执行。
            </summary>
      <returns>
              此方法返回 <see langword="true" /> 它决定，如果 <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 方法应提前停止执行; 否则，它将返回 <see langword="false" />。
            </returns>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>
              包含基于时间的帧的映像进行动画处理。
            </summary>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
              <see cref="T:System.Drawing.ImageConverter" />  是一个类，可用于将转换 <see cref="T:System.Drawing.Image" /> 对象从一种数据类型转换为另一个。
               访问此类通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
              <see cref="T:System.Drawing.ImageFormatConverter" /> 是一个类，可用于将转换 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象从一种数据类型转换为另一个。
               访问此类通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>
              指定位图图像的属性。
              <see cref="T:System.Drawing.Imaging.BitmapData" /> 类由 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 和 <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> 方法 <see cref="T:System.Drawing.Bitmap" /> 类。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>
              指定的 GDI + 对象使用的颜色调整信息。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>
              由所有 GDI + 对象不具有其自己的颜色调整信息使用的颜色调整信息。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
              颜色调整信息 <see cref="T:System.Drawing.Bitmap" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
              颜色调整信息 <see cref="T:System.Drawing.Brush" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
              颜色调整信息 <see cref="T:System.Drawing.Pen" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>
              文本的颜色调整信息。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>
              指定的类型的数目。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>
              指定的类型的数目。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>
              指定在 CMYK （青、 品红、 黄色、 黑色） 颜色空间中的各个通道。
               此枚举由 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>
              青色通道中。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>
              洋红色通道中。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>
              黄色通道中。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>
              黑色通道中。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>
              应使用上次选择的通道。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>
              定义将颜色转换的映射。
               几种方法 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 类调整图像的颜色，通过使用颜色重新映射表，它是数组的 <see cref="T:System.Drawing.Imaging.ColorMap" /> 结构。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>
              指定的颜色映射的类型。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>
              默认的颜色映射。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>
              指定的颜色映射 <see cref="T:System.Drawing.Brush" />。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>
              定义了一个 5 × 5 矩阵包含 RGBAW 空间的坐标。
               几种方法 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 类通过使用颜色矩阵来调整图像的颜色。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>
              指定类型的图像和颜色的颜色和灰度调整设置将影响 <see cref="T:System.Drawing.Imaging.ImageAttributes" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>
              所有颜色值，包括灰色阴影均由相同的颜色调整矩阵进行都调整。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>
              调整所有颜色，但不是都调整灰色底纹。
               灰色阴影是具有相同的值及其红色、 绿色和蓝色组件的任何颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>
              仅调整灰度。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>
              指定颜色分量值的两种模式。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>
              提供的整数值是 32 位值。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>
              提供的整数值是 64 位值。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>
              定义一个数组构成的调色板的颜色。
               颜色是 32 位 ARGB 颜色。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>
              使用图元文件来读取和写入图形命令中指定为使用提供的方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>
              增大或减小逻辑调色板基于指定的值的大小。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>
              将像素组成的矩形的颜色数据 DIB 内一个复制到指定的目标矩形。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"Windows 格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>
              请参阅 MSDN Library 的 GDI 部分中的"增强型格式元文件"。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>
              表示无效的数据。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>
              标识一条记录的 EMF + 标头。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>
              标识将标记图元文件的最后一个 EMF + 个记录一条记录。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>
              请参阅 <see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>
              请参阅 <see cref="M:System.Drawing.Graphics.GetHdc" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>
              将多个格式区域的开始标记。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>
              将多个格式节标记。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>
              将多个格式节的结尾处的标记。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>
              标记对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>
              请参阅 <see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawLines" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.FillPie" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawPie" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawArc" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.DrawString" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.RenderingOrigin" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.SmoothingMode" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.TextRenderingHint" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.TextContrast" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.InterpolationMode" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.PixelOffsetMode" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.CompositingMode" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>
              请参阅<see cref="P:System.Drawing.Graphics.CompositingQuality" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.Save" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>
              请参阅 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>
              请参阅 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.ResetTransform" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>
              请参阅<see cref="M:System.Drawing.Graphics.ResetClip" />。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>
              请参阅 <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>
              指定一个字符的字符串、 位置和格式设置信息。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>
              在内部使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>
              此枚举的最大值。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>
              此枚举最小值。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>
              指定放置在增强型图元文件 (EMF) 文件的记录的性质。
               此枚举由几个构造函数中 <see cref="T:System.Drawing.Imaging.Metafile" /> 类。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>
              指定将 EMF 记录，这可以通过 GDI 或 GDI + 显示图元文件中的所有记录。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>
              指定将 EMF + 记录，这可以通过 GDI +，但不是能通过 GDI 显示图元文件中的所有记录。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>
              指定所有 EMF + 记录在图元文件中的替换的 EMF 记录相关联。
               类型的图元文件 <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> 通过 GDI 或 GDI + 可以显示。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
              <see cref="T:System.Drawing.Imaging.Encoder" /> 对象所封装标识图像编码器参数的类别的全局唯一标识符 (GUID)。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>
              用于将一个值或一个值，数组传递给图像编码器。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>
              封装的数组 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>
              用于指定的数据类型 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 用于 <see cref="Overload:System.Drawing.Image.Save" /> 或 <see cref="Overload:System.Drawing.Image.SaveAdd" /> 图像的方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>
              指定数组中的每个值是一个 8 位无符号的整数。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>
              指定的值的数组是以 null 结尾的 ASCII 字符字符串。
               请注意， <see langword="NumberOfValues" /> 数据成员的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 对象指示包括 NULL 终止符的字符字符串的长度。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>
              指定数组中的每个值是 16 位无符号整数。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>
              指定数组中的每个值是 32 位无符号的整数。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>
              指定数组中的每个值是一对 32 位无符号整数。
               每个对都表示一小部分、 第一个整数是分子和第二个整数是分母。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>
              指定数组中的每个值是一对 32 位无符号整数。
               每一对表示数字的范围。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>
              指定的值的数组是不没有定义任何数据类型的字节数组。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>
              指定数组中的每个值是一套四个，32 位无符号整数。
               前两个整数表示一个分数，而两个整数表示秒的小数部分。
               这两个分数表示有理数一个范围。
               第一个分数是在范围内，最小的有理数，秒的小数部分是在范围内的最大 rational 编号。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>
              用于指定在使用时，参数值传递给一个 JPEG 或 TIFF 图像编码器 <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> 或 <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> 方法。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>
              指定 LZW 压缩方案。
               可以作为参数属于压缩类别传递到 TIFF 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>
              指定 CCITT3 压缩方案。
               可以作为参数属于压缩类别传递到 TIFF 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>
              指定 CCITT4 压缩方案。
               可以作为参数属于压缩类别传递到 TIFF 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>
              指定的角色压缩方案。
               可以作为参数属于压缩类别传递到 TIFF 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>
              指定无压缩。
               可以作为参数属于压缩类别传递到 TIFF 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>
              指定图像要将围绕中心旋转顺时针旋转 90 度。
               可以作为转换类别所属的参数传递到 JPEG 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>
              指定要将围绕中心旋转 180 度图像。
               可以作为转换类别所属的参数传递到 JPEG 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>
              指定图像要围绕其中心旋转顺时针旋转 270 度。
               可以作为转换类别所属的参数传递到 JPEG 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>
              指定要 （围绕垂直轴） 水平翻转图像。
               可以作为转换类别所属的参数传递到 JPEG 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>
              指定该图像是翻转垂直 （绕水平轴）。
               可以作为转换类别所属的参数传递到 JPEG 编码器。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>
              指定该图像具有多个帧 （页）。
               可以传递到 TIFF 编码器作为一个参数，它属于保存标志类别。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>
              指定在将多帧图像中的最后一帧。
               可以传递到 TIFF 编码器作为一个参数，它属于保存标志类别。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>
              指定应关闭多个帧文件或流。
               可以传递到 TIFF 编码器作为一个参数，它属于保存标志类别。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>
              在 GDI + 1.0 版中未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>
              指定要添加到页面维度的图像的框架。
               可以传递到 TIFF 编码器作为一个参数，它属于保存标志类别。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>
              提供了获取图像的框架维度的属性。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>
              包含有关在呈现时如何操作位图和图元文件颜色的信息。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>
              提供图像编码器/解码器 （编码解码器） 的属性。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>
              编解码器支持编码 （保存）。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>
              编解码器支持解码 （读取）。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>
              编解码器支持光栅图像 （位图）。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>
              编解码器支持矢量图像 （图元文件）。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>
              编码器需要可查找的输出流。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>
              解码器有在解码过程阻塞行为。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>
              编解码器内置在 GDI +。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>
              未使用。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>
              未使用。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
              <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 类提供必要的存储成员和方法来检索有关已安装的图像编码器和解码器 （称为编解码器） 的所有相关信息。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>
              指定的属性中包含的像素数据 <see cref="T:System.Drawing.Image" /> 对象。
              <see cref="P:System.Drawing.Image.Flags" /> 属性将返回此枚举的成员。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>
              没有格式的信息。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>
              像素数据是可扩展的。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>
              像素数据包含 alpha 信息。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>
              指定的像素数据的 alpha 值不为 0 （透明） 到 255 （不透明）。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>
              像素数据具有部分可伸缩性，但有一些限制。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>
              像素数据使用 RGB 颜色空间。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>
              像素数据使用 CMYK 颜色空间。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>
              像素数据为灰度。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>
              指定图像的存储使用 YCBCR 色彩空间。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>
              指定使用 YCCK 颜色空间来存储图像。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>
              指定每英寸点数信息存储在映像中。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>
              指定像素大小存储在映像中。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>
              像素数据是只读的。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>
              像素数据可以被缓存以提高访问速度。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>
              指定图像文件格式。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>
              指定传递给标志参数的标志 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法。
              <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法锁定图像的一部分，以便您可以读取或写入像素的数据。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>
              指定图像的一部分被锁定以进行读取。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>
              指定图像的一部分被锁定以进行写入。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>
              指定用于读取或写入锁定的图像的一部分。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>
              指定用户分配用于读取或写入像素数据的缓冲区。
               如果设置此标志， <paramref name="flags" /> 参数 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法为提供每年作为输入参数 （可能为输出参数）。
               如果清除此标志，则 <paramref name="flags" /> 参数仅充当输出参数。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>
              定义图形的图元文件。
               图元文件包含描述一系列可以记录 （构造） 的图形操作的记录和播放 （显示）。
               此类不是可继承的。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>
              指定用来调整大小和位置图元文件的矩形的度量单位。
               这在创建过程中指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>
              度量单位为 1 个像素。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>
              度量单位是 1 打印机的点。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>
              度量单位为 1 英寸。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>
              度量单位为一英寸的 1/300。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>
              度量单位为 1 毫米。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>
              度量单位是 0.01 毫米。
               提供使用 GDI 的兼容性。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>
              包含属性相关联的 <see cref="T:System.Drawing.Imaging.Metafile" />。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>
              指定类型的图元文件。
              <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> 属性将返回此枚举的成员。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>
              在 GDI + 中指定的图元文件格式无法识别。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>
              指定的 WMF （Windows 图元文件） 文件。
               此类文件只包含 GDI 记录。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>
              指定具有可放置的图元文件标头之前的 WMF （Windows 图元文件） 文件。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>
              指定的增强型图元文件 (EMF) 文件。
               此类文件只包含 GDI 记录。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>
              指定的 EMF + 文件。
               此类文件只包含 GDI + 记录，必须通过使用 GDI + 显示。
               显示使用 GDI 的记录可能会导致不可预知的结果。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>
              指定的 EMF + 双重文件。
               此类文件包含 GDI + 以及备用 GDI 记录的记录，并且可以通过使用 GDI 或 GDI + 中显示。
               显示使用 GDI 的记录可能会导致一些质量下降的情况。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>
              包含有关 windows 格式 (WMF) 图元文件的信息。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>
              系统调色板中指定颜色数据的类型。
               数据可以是具有 alpha 通道，只将灰度数据或半色调数据的颜色数据。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>
              Alpha 数据。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>
              灰度数据。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>
              半色调数据。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>
              指定图像中的每个像素的颜色数据格式。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>
              像素数据包含颜色索引值，这意味着这些值是在系统颜色表中，而不是各个颜色值的颜色的索引。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>
              像素数据包含 GDI 颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>
              像素数据包含不自左乘的 alpha 值。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>
              像素格式包含预乘 alpha 值。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>
              保留。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>
              32 位 / 像素默认像素格式。
               此格式指定 24 位颜色深度和一个 8 位 alpha 通道。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>
              像素格式未定义。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>
              指定没有像素格式。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>
              指定的像素格式是每像素 1 位，它使用索引的颜色。
               因此，颜色表中它有两种颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>
              指定的格式是 4 位 / 像素，编制索引。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>
              指定的格式是 8 位 / 像素，编制索引。
               因此，颜色表中它有 256 种颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>
              像素格式是 16 位 / 像素。
               颜色信息指定 65536 灰度梯度。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>
              指定的格式是 16 位 / 像素;5 位用于红色、 绿色和蓝色组件。
               不使用剩余的 1 位。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>
              指定的格式是 16 位 / 像素;5 位用于红色组件、 6 位用于绿色组件和 5 位用于蓝色分量。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>
              像素格式是 16 位 / 像素。
               颜色信息指定 32768 所属 5 位的红色、 5 位的颜色为绿色、 5 位为蓝色，和 1 的位是 alpha。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>
              指定的格式是 24 位 / 像素;8 位用于红色、 绿色和蓝色组件。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>
              指定的格式是 32 位 / 像素;8 位用于红色、 绿色和蓝色组件。
               不使用剩余的 8 位。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>
              指定的格式是 32 位 / 像素;8 位用于 alpha、 红色、 绿色和蓝色组件。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>
              指定的格式是 32 位 / 像素;8 位用于 alpha、 红色、 绿色和蓝色组件。
               红色、 绿色和蓝色组件是根据 alpha 分量自左乘。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>
              指定的格式是 48 位 / 像素;为红色、 绿色和蓝色组件使用 16 位。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>
              指定的格式是每个像素; 64 位alpha、 红色、 绿色和蓝色组件使用 16 位。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>
              指定的格式是每个像素; 64 位alpha、 红色、 绿色和蓝色组件使用 16 位。
               红色、 绿色和蓝色组件进行自左乘的 alpha 分量根据。
            </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>
              此枚举的最大值。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>
              不使用此委托。
               枚举的图元文件记录的示例，请参阅 <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />。
            </summary>
      <param name="recordType">
                未使用。
              </param>
      <param name="flags">
                未使用。
              </param>
      <param name="dataSize">
                未使用。
              </param>
      <param name="recordData">
                未使用。
              </param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>
              封装要将图像文件中包含的元数据属性。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>
              定义可放置的图元文件。
               不可继承。
            </summary>
    </member>
    <member name="T:System.Drawing.KnownColor">
      <summary>
              指定的已知的系统颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveBorder">
      <summary>
              系统定义的活动窗口边框的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveCaption">
      <summary>
              系统定义的活动窗口标题栏背景的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveCaptionText">
      <summary>
              系统定义的活动窗口标题栏中文本的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AppWorkspace">
      <summary>
              系统定义应用程序工作区的颜色。
               应用程序工作区是不被文档占据的多个文档视图中的区域。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Control">
      <summary>
              三维元素的系统定义的表面颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlDark">
      <summary>
              三维元素系统定义的阴影颜色。
               阴影颜色适用于面向远离的光源的三维元素的部分。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlDarkDark">
      <summary>
              系统定义的颜色，是一个三维元素的暗阴影颜色。
               暗阴影颜色应用于所最深的颜色的三维元素的部分中。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlLight">
      <summary>
              系统定义的颜色，是一个三维元素的亮色。
               亮色适用于面向的光源的三维元素的部分。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlLightLight">
      <summary>
              三维元素的系统定义的突出显示颜色。
               突出显示颜色应用于所最亮色的三维元素的部分中。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlText">
      <summary>
              系统定义的三维元素中文本的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Desktop">
      <summary>
              系统定义用作桌面颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GrayText">
      <summary>
              系统定义的浅灰色文本颜色。
               列表中处于禁用状态的项将显示为浅灰色文本。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Highlight">
      <summary>
              系统定义的选定项的背景颜色。
               这包括所选的菜单项，以及所选的文本。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HighlightText">
      <summary>
              系统定义的选定项的文本颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HotTrack">
      <summary>
              用于指定热跟踪项的系统定义颜色。
               右键单击热跟踪项执行项。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveBorder">
      <summary>
              系统定义非活动窗口边框的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveCaption">
      <summary>
              系统定义的非活动窗口标题栏背景的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveCaptionText">
      <summary>
              系统定义非活动窗口标题栏中文本的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Info">
      <summary>
              系统定义的工具提示的背景颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InfoText">
      <summary>
              系统定义的工具提示的文本颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Menu">
      <summary>
              系统定义一个表示菜单背景的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MenuText">
      <summary>
              系统定义的一个表示菜单文本颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ScrollBar">
      <summary>
              系统定义的滚动条的背景颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Window">
      <summary>
              系统定义的一个窗口的工作区中的背景颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.WindowFrame">
      <summary>
              系统定义窗口框架的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.WindowText">
      <summary>
              系统定义的一个窗口的工作区中文本的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Transparent">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AliceBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AntiqueWhite">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Aqua">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Aquamarine">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Azure">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Beige">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Bisque">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Black">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BlanchedAlmond">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Blue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BlueViolet">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Brown">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BurlyWood">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.CadetBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Chartreuse">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Chocolate">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Coral">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.CornflowerBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Cornsilk">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Crimson">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Cyan">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkCyan">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGoldenrod">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkKhaki">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkMagenta">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOliveGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOrange">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOrchid">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkRed">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSalmon">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSeaGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSlateBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSlateGray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkTurquoise">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkViolet">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DeepPink">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DeepSkyBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DimGray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DodgerBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Firebrick">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.FloralWhite">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ForestGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Fuchsia">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Gainsboro">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GhostWhite">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Gold">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Goldenrod">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Gray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Green">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GreenYellow">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Honeydew">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HotPink">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.IndianRed">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Indigo">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Ivory">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Khaki">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Lavender">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LavenderBlush">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LawnGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LemonChiffon">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightCoral">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightCyan">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGoldenrodYellow">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightPink">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSalmon">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSeaGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSkyBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSlateGray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSteelBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightYellow">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Lime">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LimeGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Linen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Magenta">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Maroon">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumAquamarine">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumOrchid">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumPurple">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSeaGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSlateBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSpringGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumTurquoise">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumVioletRed">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MidnightBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MintCream">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MistyRose">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Moccasin">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.NavajoWhite">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Navy">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.OldLace">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Olive">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.OliveDrab">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Orange">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.OrangeRed">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Orchid">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleGoldenrod">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleTurquoise">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleVioletRed">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PapayaWhip">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PeachPuff">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Peru">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Pink">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Plum">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PowderBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Purple">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Red">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.RosyBrown">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.RoyalBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SaddleBrown">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Salmon">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SandyBrown">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SeaGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SeaShell">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Sienna">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Silver">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SkyBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SlateBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SlateGray">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Snow">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SpringGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SteelBlue">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Tan">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Teal">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Thistle">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Tomato">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Turquoise">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Violet">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Wheat">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.White">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.WhiteSmoke">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Yellow">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.YellowGreen">
      <summary>
              系统定义的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ButtonFace">
      <summary>
              三维元素的系统定义的表面颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ButtonHighlight">
      <summary>
              系统定义的颜色，是一个三维元素的突出显示颜色。
               此颜色将应用于面向的光源的三维元素的部分。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ButtonShadow">
      <summary>
              系统定义的颜色，是一个三维元素的阴影颜色。
               此颜色将应用于面向远离的光源的三维元素的部分。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GradientActiveCaption">
      <summary>
              系统定义中的活动窗口标题栏的颜色渐变的最小颜色的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GradientInactiveCaption">
      <summary>
              系统定义中的非活动窗口标题栏的颜色渐变的最小颜色的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MenuBar">
      <summary>
              系统定义的菜单栏背景的颜色。
            </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MenuHighlight">
      <summary>
              用来在像平面菜单显示的菜单时突出显示菜单项的系统定义颜色。
            </summary>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>
              定义用于绘制直线和曲线的对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>
              所有标准颜色的笔。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Point">
      <summary>
              表示的整数 x 坐标和 y 坐标点定义在二维平面中的有序的对。
            </summary>
    </member>
    <member name="T:System.Drawing.PointConverter">
      <summary>
              将转换 <see cref="T:System.Drawing.Point" /> 对象从一种数据类型到另一个。
            </summary>
    </member>
    <member name="T:System.Drawing.PointF">
      <summary>
              表示的浮点 x 坐标和 y 坐标点定义在二维平面中的有序的对。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>
              指定打印机的双工设置。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>
              打印机的默认双面打印设置。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>
              单面打印。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>
              双面水平打印。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>
              双面垂直打印。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>
              表示当您尝试使用无效的打印机设置访问打印机时引发的异常。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>
              指定打印页的边距的尺寸。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>
              提供了 <see cref="T:System.Drawing.Printing.MarginsConverter" /> 为 <see cref="T:System.Drawing.Printing.Margins" />。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>
              指定将应用于单个打印页面的设置。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>
              指定标准纸张大小。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>
              纸张大小由用户定义。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>
              Letter 纸（8.5 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>
              Legal 纸（8.5 英寸 × 14 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>
              A4 纸（210 mm × 297 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>
              C 纸（17 英寸 × 22 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>
              D 纸（22 英寸 × 34 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>
              E 纸（34 英寸 × 44 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>
              Letter small 纸（8.5 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>
              Tabloid 纸（11 英寸 × 17 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>
              Ledger 纸（17 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>
              Statement 纸（5.5 英寸 × 8.5 英寸)。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>
              Executive 纸（7.25 英寸 × 10.5 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>
              A3 纸（297 mm × 420 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>
              A4 small 纸（210 mm × 297 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>
              A5 纸（148 mm × 210 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>
              B4 纸（250 mm × 353 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>
              B5 纸（176 mm × 250 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>
              对开纸（8.5 英寸 × 13 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>
              四开纸（215 mm × 275 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>
              Standard 纸（10 英寸 × 14 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>
              Standard 纸（11 英寸 × 17 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>
              Note 纸（8.5 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>
              #9 信封（3.875 英寸 × 8.875 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>
              #10 信封（4.125 英寸 × 9.5 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>
              #11 信封（4.5 英寸 × 10.375 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>
              #12 信封（4.75 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>
              #14 信封（5 英寸 × 11.5 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>
              DL 信封（110 mm × 220 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>
              C5 信封（162 mm × 229 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>
              C3 信封（324 mm × 458 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>
              C4 信封（229 mm × 324 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>
              C6 信封（114 mm × 162 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>
              C65 信封（114 mm × 229 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>
              B4 信封（250 mm × 353 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>
              B5 信封（176 mm × 250 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>
              B6 信封（176 mm × 125 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>
              意大利信封（110 mm × 230 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>
              君主式信封（3.875 英寸 × 7.5 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>
              6 3/4 信封（3.625 英寸 × 6.5 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>
              美国标准复写纸（14.875 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>
              德国标准复写纸（8.5 英寸 × 12 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>
              德国法律文书用复写纸（8.5 英寸 × 13 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>
              ISO B4（250 mm × 353 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>
              Japanese postcard（100 mm × 148 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>
              Standard 纸（9 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>
              Standard 纸（10 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>
              Standard 纸（15 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>
              邀请信封（220 mm × 220 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>
              Letter extra 纸（9.275 英寸 × 12 英寸）。
               此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用，以便节省纸张。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>
              Letter extra 纸（9.275 英寸 × 15 英寸）。
               此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用，以便节省纸张。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>
              Tabloid extra 纸（11.69 英寸 × 18 英寸）。
               此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用，以便节省纸张。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>
              A4 extra 纸（236 mm × 322 mm）。
               此值特定于 PostScript 驱动程序，且仅由 Linotronic 打印机使用以帮助节省纸张。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>
              Letter transverse 纸（8.275 英寸 × 11 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>
              A4 transverse 纸（210 mm × 297mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>
              Letter extra transverse 纸（9.275 英寸 × 12 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>
              SuperA/SuperA/A4 纸（227 mm × 356 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>
              SuperB/SuperB/A3 纸（305 mm × 487 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>
              Letter plus 纸（8.5 英寸 × 12.69 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>
              A4 plus 纸（210 mm × 330 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>
              A5 transverse 纸（148 mm × 210 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>
              JIS B5 transverse 纸（182 mm × 257 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>
              A3 extra 纸（322 mm × 445 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>
              A5 extra 纸（174 mm × 235 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>
              ISO B5 extra 纸（201 mm × 276 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>
              A2 纸（420 mm × 594 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>
              A3 transverse 纸（297 mm × 420 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>
              A3 extra transverse 纸（322 mm × 445 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>
              Japanese double postcard（200 mm × 148 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>
              A6 纸（105 mm × 148 mm)。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>
              Japanese Kaku #2 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>
              Japanese Kaku #3 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>
              Japanese Chou #3 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>
              Japanese Chou #4 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>
              Letter rotated 纸（11 英寸 × 8.5 英寸)。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>
              A3 rotated 纸（420 mm × 297 mm）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>
              A4 rotated 纸（297 mm × 210 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>
              A5 rotated 纸（210 mm × 148 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>
              JIS B4 rotated 纸（364 mm × 257 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>
              JIS B5 rotated 纸（257 mm × 182 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>
              Japanese rotated postcard（148 mm × 100 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>
              Japanese rotated double postcard（148 mm × 200 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>
              A6 rotated 纸（148 mm × 105 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>
              Japanese rotated Kaku #2 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>
              Japanese rotated Kaku #3 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>
              Japanese rotated Chou #3 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>
              Japanese rotated Chou #4 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>
              JIS B6 纸（128 mm × 182 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>
              JIS B6 纸（182 mm × 128 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>
              Standard 纸（12 英寸 × 11 英寸）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>
              Japanese You #4 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>
              Japanese You #4 rotated 信封。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>
               16K 纸（146 mm × 215 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>
               32K 纸（97 mm × 151 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>
               32K big 纸（97 mm × 151 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>
               #1 信封（102 mm × 165 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>
               #2 信封（102 mm × 176 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>
               #3 信封（125 mm × 176 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>
               #4 信封（110 mm × 208 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>
               #5 信封（110 mm × 220 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>
               #6 信封（120 mm × 230 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>
               #7 信封（160 mm × 230 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>
               #8 信封（120 mm × 309 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>
               #9 信封（229 mm × 324 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>
               #10 信封（324 mm × 458 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>
               16K rotated 纸（146 mm × 215 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>
               32K rotated 纸（97 mm × 151 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>
               32K big rotated 纸（97 mm × 151 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>
               #1 rotated 信封（165 mm × 102 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>
               #2 rotated 信封（176 mm × 102 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>
               #3 rotated 信封（176 mm × 125 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>
               #4 rotated 信封（208 mm × 110 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>
               Envelope #5 rotated 信封（220 mm × 110 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>
               #6 rotated 信封（230 mm × 120 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>
               #7 rotated 信封（230 mm × 160 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>
               #8 rotated 信封（309 mm × 120 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>
               #9 rotated 信封（324 mm × 229 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>
               #10 rotated 信封（458 mm × 324 mm）。
               需要 Windows 98、Windows NT 4.0 或更高版本。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>
              指定一张纸的大小。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>
              指定从中给打印机送纸的送纸器。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>
              Standard 纸源。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>
              上层纸盒打印机 （或默认中，如果打印机只有一个 bin）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>
              打印机下层纸盒。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>
              打印机中间纸盒。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>
              以手动方式送入纸。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>
              信封。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>
              以手动方式送入信封。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>
              自动送入的纸张。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>
              送纸器。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>
              小型格式纸。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>
              大格式纸。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>
              打印机的大容量 bin。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>
              送纸器。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>
              打印机的默认输入的 bin。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>
              特定于打印机的纸张来源。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>
              指定单个页面的打印预览信息。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>
              指定一个打印控制器，它在屏幕上将文档显示为一系列图像。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>
              指定正在进行的打印操作的类型。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>
              打印操作打印到文件。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>
              打印操作为打印预览。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>
              打印操作打印到打印机。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>
              控制如何打印文档时，从 Windows 窗体应用程序打印时。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>
              从 Windows 窗体应用程序打印时，定义一种可重用的可发送到打印机上的对象。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>
              表示打印机支持的分辨率。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>
              指定打印机分辨率。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>
              高分辨率。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>
              中等分辨率。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>
              较低的分辨率。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>
              草稿质量分辨率。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>
              自定义解决方法。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>
              指定有关文档的打印方式，包括打印，从 Windows 窗体应用程序打印时的打印机信息。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>
              包含 <see cref="T:System.Drawing.Printing.PaperSize" /> 对象的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>
              包含 <see cref="T:System.Drawing.Printing.PaperSource" /> 对象的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>
              包含 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 对象的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>
              包含 <see cref="T:System.String" /> 对象的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>
              指定多个用于打印的度量单位。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>
              默认单位 （0.01 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>
              一个千位的英寸 （0.001 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>
              百分之一毫米 （0.01 毫米）。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>
              十分之一毫米 （0.1 毫米）。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>
              指定一系列与 Win32 打印 API 互操作时非常有用的转换方法。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>
              提供有关 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 和 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件的数据。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>
              表示将处理的方法 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 或 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件 <see cref="T:System.Drawing.Printing.PrintDocument" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
              </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>
              控制对打印机的访问。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>
              允许声明打印权限检查。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>
              指定允许代码执行的打印的类型。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>
              禁止对打印机的访问。
              <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> 的子集。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>
              仅从受限制的对话框中提供打印。
              <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> 的子集。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>
              提供以编程方式向默认打印机，以及通过半限制对话框安全打印的打印。
              <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /> 的子集。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>
              提供对所有打印机的完全访问权限。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>
              为 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件提供数据。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>
              表示将用来处理 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 的 <see cref="T:System.Drawing.Printing.PrintDocument" /> 事件的方法。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
              </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>
              指定要打印的文档的一部分。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>
              打印所有页面。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>
              之间的页 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 和 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 打印。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>
              打印选定的页。
            </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>
              打印当前显示的页面
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>
              为 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件提供数据。
            </summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件 <see cref="T:System.Drawing.Printing.PrintDocument" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。
              </param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>
              指定将信息发送到打印机的打印控制器。
            </summary>
    </member>
    <member name="T:System.Drawing.Rectangle">
      <summary>
              存储一组整数，共四个，表示一个矩形的位置和大小
            </summary>
    </member>
    <member name="T:System.Drawing.RectangleConverter">
      <summary>
              将矩形从一种数据类型转换为另一个。
               访问此类通过 <see cref="T:System.ComponentModel.TypeDescriptor" />。
            </summary>
    </member>
    <member name="T:System.Drawing.RectangleF">
      <summary>
              存储一组表示位置的四个浮点数字和矩形的大小。
               对于更高级的区域函数，请使用 <see cref="T:System.Drawing.Region" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>
              描述组成矩形和路径的图形形状的内部。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>
              指定多少图像的旋转和翻转图像所用于的轴。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>
              指定没有顺时针旋转和翻转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>
              指定不进行翻转顺时针旋转 90 度。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>
              指定不进行翻转 180 度的顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>
              指定不进行翻转顺时针旋转 270 度。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>
              指定没有跟水平翻转的顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>
              指定后接水平翻转的 90 度的顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>
              指定后接水平翻转的 180 度顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>
              指定后接水平翻转的 270 度顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>
              指定垂直翻转后跟没有顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>
              指定垂直翻转后跟 90 度顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>
              指定垂直翻转后跟 180 度顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>
              指定垂直翻转后跟的 270 度顺时针旋转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>
              指定没有顺时针旋转后接水平和垂直翻转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>
              指定旋转 90 度顺时针旋转后接水平和垂直翻转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>
              指定后接水平和垂直的 180 度顺时针旋转翻转。
            </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>
              指定后接水平和垂直的 270 度顺时针旋转翻转。
            </summary>
    </member>
    <member name="T:System.Drawing.Size">
      <summary>
              存储的整数，指定一个有序的对 <see cref="P:System.Drawing.Size.Height" /> 和 <see cref="P:System.Drawing.Size.Width" />。
            </summary>
    </member>
    <member name="T:System.Drawing.SizeConverter">
      <summary>
              <see cref="T:System.Drawing.SizeConverter" /> 类用于从一种数据类型转换到另一个。
               访问此类通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.SizeF">
      <summary>
              将存储浮点数、 通常的宽度和高度的矩形的有序的对。
            </summary>
    </member>
    <member name="T:System.Drawing.SizeFConverter">
      <summary>
              将转换 <see cref="T:System.Drawing.SizeF" /> 从一种类型到另一个对象。
            </summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>
              定义一种颜色的画笔。
               画笔用于填充图形形状，如矩形、 椭圆、 饼、 多边形和路径。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>
              指定相对于其布局矩形的文本字符串的对齐方式。
            </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>
              指定文本对齐靠近布局。
               在从左到右布局中，保留近的位置。
               在从右到左布局中，近的位置是右。
            </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>
              指定文本在布局矩形的中心对齐。
            </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>
              指定文本对齐与相差甚远的布局矩形的来源位置。
               在从左到右布局中，远的位置是右。
               在从右到左布局中，保留远的位置。
            </summary>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
              <see cref="T:System.Drawing.StringDigitSubstitute" />枚举指定如何替代根据用户的区域设置或语言字符串中的数字。
            </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>
              指定用户定义的替代方案。
            </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>
              指定要禁用替换项。
            </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>
              指定与用户的区域设置的正式国家/地区语言对应的替换数字。
            </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>
              指定与用户的本机脚本相对应的替换数字或语言中，这可能是不同于用户的区域设置的官方国家/地区的语言。
            </summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>
              封装文本布局信息（如对齐方式、方向和制表位）、显示操作（如省略号插入和区域数字替换）和 OpenType 功能。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>
              指定文本字符串的显示和布局的信息。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>
              从右到左显示文本。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>
              垂直对齐文本。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>
              允许的字符部分延伸字符串的布局矩形。
               默认情况下，将重新定位字符以避免任何延伸。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>
              控制字符，如从左到右标记并具有代表性的标志符号输出所示。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>
              回退到不支持请求的字体中的字符的可选字体处于禁用状态。
               使用缺少符号，通常是一个空的方块的字体显示缺失的任何字符。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>
              包括每个行的结尾处的尾随空格。
               默认情况下返回的边界矩形 <see cref="Overload:System.Drawing.Graphics.MeasureString" /> 方法不包括每个行的结尾处的空格。
               设置此标志，以包括该空间的度量单位。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>
              文本换行时禁用格式设置的矩形范围内。
               当传递的是点而不是一个矩形，或指定的矩形具有行长度为零，则暗指此标志。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>
              只有整个行的布局的格式设置的矩形中。
               默认情况下布局会继续，直到的末尾的文本，或直到没有更多的行由于剪辑，具体取决于第一个可见。
               请注意，默认设置允许最后一行以部分而不是行高度的整数倍的格式设置矩形变暗。
               若要确保显示整行，则指定此值，并小心地将其提供格式化矩形的高度至少为一个行的高度。
            </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>
              允许的标志符号和解包换行文本格式设置矩形外伸出部分显示。
               默认情况下将剪切到达边框外的所有文本和字形部分。
            </summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>
              指定如何修整字符串不完全适合布局形状中的字符。
            </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>
              指定不进行任何修整。
            </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>
              指定将文本修整到最接近的字符。
            </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>
              指定文本则剪裁为最接近的单词。
            </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>
              指定将文本修整到最接近的字符，并且在被修整的行的末尾插入一个省略号。
            </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>
              指定文本则剪裁为最接近的单词，并在被修整的行的末尾插入一个省略号。
            </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>
              从修整行中删除中心并将其替换为省略号。
               该算法会保留尽可能多的最后一个斜杠分隔的段的可能的行。
            </summary>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>
              指定的文本字符串的度量值的单位。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>
              指定作为度量单位的世界单位。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>
              设备单位指定为度量单位。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>
              指定的度量单位为像素。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>
              作为度量单位指定打印机的点 （1/72 英寸）。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>
              指定的度量单位为英寸。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>
              指定作为度量单位 1/300 英寸。
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>
              指定的度量单位为毫米为单位 
            </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>
              指定作为度量单位的打印机的全身大小为 32。
            </summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
              每个属性 <see cref="T:System.Drawing.SystemBrushes" /> 类是 <see cref="T:System.Drawing.SolidBrush" /> 是 Windows 显示元素的颜色。
            </summary>
    </member>
    <member name="T:System.Drawing.SystemColors">
      <summary>
              每个属性 <see cref="T:System.Drawing.SystemColors" /> 类是 <see cref="T:System.Drawing.Color" /> 结构，它是 Windows 的颜色显示元素。
            </summary>
    </member>
    <member name="T:System.Drawing.SystemFonts">
      <summary>
              指定用于在 Windows 中显示文本的字体显示元素。
            </summary>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
              每个属性 <see cref="T:System.Drawing.SystemIcons" /> 类是 <see cref="T:System.Drawing.Icon" /> Windows 系统级图标的对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>
              每个属性 <see cref="T:System.Drawing.SystemPens" /> 类是 <see cref="T:System.Drawing.Pen" /> Windows 显示元素的颜色并且拥有宽度为 1 个像素。
            </summary>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>
              安装和专用字体集合提供基类。
            </summary>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>
              指定泛型 <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>
              一般 Serif <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>
              一般 Sans Serif <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>
              一般 Monospace <see cref="T:System.Drawing.FontFamily" /> 对象。
            </summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>
              指定显示的热键前缀与文本相关的类型。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>
              任何热键的前缀。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>
              显示热键前缀。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>
              不显示热键前缀。
            </summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>
              表示系统上安装的字体。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>
              提供从客户端应用程序提供的字体文件生成的字体系列的集合。
            </summary>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>
              指定文本呈现质量。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>
              每个字符使用位图来绘制其标志符号，使用系统默认呈现提示。
               将使用在用户已经选择任何字体平滑显示的设置的系统绘制文本。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>
              每个字符使用位图来绘制其标志符号。
               提示用于改善在主干和弯曲字符外观。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>
              每个字符使用位图来绘制其标志符号。
               不使用提示。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>
              在有提示使用抗锯齿标志符号位图来绘制字符的每个字符。
               得更好的质量由于抗锯齿功能，但在较高的性能开销。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>
              不提示的情况下使用抗锯齿标志符号位图来绘制每个字符。
               由于抗锯齿质量就越好。
               因为关闭了提示，词干宽度之间的差异可能非常明显。
            </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>
              每个字符使用位图来绘制其标志符号 ClearType 有提示。
               最高的质量设置。
               用来利用 ClearType 字体功能。
            </summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
              每个属性 <see cref="T:System.Drawing.TextureBrush" /> 类是 <see cref="T:System.Drawing.Brush" /> 用图像来填充形状的内部对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>
              可以指定一个图标来表示容器，如 Microsoft Visual Studio 窗体设计器中的控件。
            </summary>
    </member>
  </members>
</doc>