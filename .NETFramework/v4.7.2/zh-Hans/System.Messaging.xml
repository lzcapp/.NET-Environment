<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Messaging</name>
  </assembly>
  <members>
    <member name="E:System.Messaging.MessageQueue.PeekCompleted">
      <summary>
              从队列中删除的情况下读取一条消息时发生。
               这是异步操作的结果 <see cref="M:System.Messaging.MessageQueue.BeginPeek" />。
            </summary>
    </member>
    <member name="E:System.Messaging.MessageQueue.ReceiveCompleted">
      <summary>
              从队列中删除一条消息时发生。
               由异步操作，将引发此事件 <see cref="M:System.Messaging.MessageQueue.BeginReceive" />。
            </summary>
    </member>
    <member name="F:System.Messaging.Message.InfiniteTimeout">
      <summary>
              指定不存在超时。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteQueueSize">
      <summary>
              指定队列的存在没有大小限制。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteTimeout">
      <summary>
              指定不存在超时的扫视或接收消息的方法。
            </summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.AccessControlEntry" /> 指定既不受信者也不应用权限集的类。
            </summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.AccessControlEntry" /> 指定受信者向其授予或拒绝权限的类。
            </summary>
      <param name="trustee">
                一个 <see cref="T:System.Messaging.Trustee" /> ，它指定用户、 组、 计算机、 域或别名。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="trustee" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.AccessControlEntry" /> 类，该类指定受信者、 要分配的权限以及是否授予或拒绝这些权限。
            </summary>
      <param name="trustee">
                一个 <see cref="T:System.Messaging.Trustee" /> ，它指定用户、 组、 计算机、 域或别名。
              </param>
      <param name="genericAccessRights">
                <see cref="T:System.Messaging.GenericAccessRights" /> 值的按位组合。
              </param>
      <param name="standardAccessRights">
                <see cref="T:System.Messaging.StandardAccessRights" /> 值的按位组合。
              </param>
      <param name="entryType">
                其中一个 <see cref="T:System.Messaging.AccessControlEntryType" /> 值，该值指定是否允许、 拒绝、 设置或撤消指定的权限。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="trustee" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="genericAccessRights" />, ，<paramref name="standardAccessRights" />, ，或 <paramref name="entryType" /> 参数不是有效的枚举值。
                </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.AccessControlList" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)">
      <summary>
              追加到访问控制列表的访问控制项。
            </summary>
      <param name="entry">
                一个 <see cref="T:System.Messaging.AccessControlEntry" /> 要追加到访问控制列表的末尾。
              </param>
      <returns>
              新的访问控制项的插入位置。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entry" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)">
      <summary>
              确定访问控制列表是否包含特定访问控制项。
            </summary>
      <param name="entry">
                <see cref="T:System.Messaging.AccessControlEntry" />要在访问控制列表中查找。
              </param>
      <returns>
              <see langword="true" />如果在访问控制列表; 中找到的访问控制项否则为<see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)">
      <summary>
              复制整个访问控制列表到兼容的一维数组的访问控制项，从目标数组的指定索引处开始。
            </summary>
      <param name="array">
                类型的数组 <see cref="T:System.Messaging.AccessControlEntry" /> 访问控制列表项将复制到。
                 该数组的索引必须从零开始。
              </param>
      <param name="index">
                从此处开始复制访问控制列表项数组中的索引。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="array" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 参数小于零。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="index" /> 参数是否大于或等于的长度 <paramref name="array" /> 参数。
                
                  - 或 -
                
                  源的访问控制列表中的元素数大于从的可用空间 <paramref name="index" /> 到访问控制项的目标数组的末尾。
                </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)">
      <summary>
              确定在访问控制列表的访问控制项的特定索引。
            </summary>
      <param name="entry">
                <see cref="T:System.Messaging.AccessControlEntry" /> 在访问控制列表中找到。
              </param>
      <returns>
              如果在列表中; 找到的项的索引否则为-1 
            </returns>
    </member>
    <member name="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)">
      <summary>
              指定位置处插入到访问控制列表的访问控制项。
            </summary>
      <param name="index">
                从零开始的索引，应在该位置插入访问控制项。
              </param>
      <param name="entry">
                一个 <see cref="T:System.Messaging.AccessControlEntry" /> 要插入到访问控制列表。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 参数不是此访问控制列表中的有效索引。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entry" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)">
      <summary>
              从访问控制列表中删除特定的访问控制项的第一个匹配项。
            </summary>
      <param name="entry">
                <see cref="T:System.Messaging.AccessControlEntry" /> 从访问控制列表中删除。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="entry" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
              确定格式化程序是否可以反序列化消息的内容。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 检查。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 可以反序列化消息; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Clone">
      <summary>
              创建的一个实例 <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 等同于当前的类 <see cref="T:System.Messaging.ActiveXMessageFormatter" />。
            </summary>
      <returns>
              其属性是与此相同的对象 <see cref="T:System.Messaging.ActiveXMessageFormatter" />。
            </returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
      <summary>
              提供了一个实用工具，以帮助序列化 COM 对象实现 <see langword="IPersistStream" /> ，并且需要 <see langword="IPersistStreamInit" /> 调用。
            </summary>
      <param name="streamedObject">
                实现 OLE 对象 <see langword="IPersistStreamInit" />。
              </param>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
      <summary>
              从给定的消息读取内容并创建一个对象，包含反序列化的消息。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" />, ，MSMQ ActiveX 控件格式进行反序列化。
              </param>
      <returns>
              反序列化的消息。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Messaging.Message.BodyType" /> 属性 <paramref name="message" /> 传递因为参数无法映射到基元类型，也不影响并不表示流的对象。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  正文表示存储的对象。
                  <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 不支持的存储对象反序列化。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
              将对象序列化到消息的正文。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Body" /> 属性将包含序列化的对象。
              </param>
      <param name="obj">
                要进行序列化到消息正文的对象。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  要序列化的对象是既不是基元也不用于实现 OLE 的流的对象 <see langword="IPersistStream" /> 接口。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 而不指定类型样式顶部的对象的程序集的类。
            </summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 类，同时指定根对象和类型说明的格式。
            </summary>
      <param name="topObjectFormat">
                确定关系图的顶级 （根） 对象序列化流中的布局方式。
              </param>
      <param name="typeFormat">
                确定类型说明序列化流中的布局方式。
              </param>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
              确定格式化程序是否可以反序列化消息的内容。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 检查。
              </param>
      <returns>
              <see langword="true" /> 如果二进制消息格式化程序可以反序列化消息;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Clone">
      <summary>
              创建的一个实例 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 类的读/写属性 （根对象和类型描述格式） 都与当前相同 <see cref="T:System.Messaging.BinaryMessageFormatter" />。
            </summary>
      <returns>
              其属性是与此相同的对象 <see cref="T:System.Messaging.BinaryMessageFormatter" />, ，但其元数据未指定该格式化程序类实例。
            </returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
      <summary>
              从给定的消息读取内容并创建一个对象，包含反序列化的消息。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" />, ，以二进制格式进行反序列化。
              </param>
      <returns>
              反序列化的消息。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息的 <see cref="P:System.Messaging.Message.BodyType" /> 属性不指示二进制对象。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
              将对象序列化到消息的正文。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Body" /> 属性将包含序列化的对象。
              </param>
      <param name="obj">
                要进行序列化到消息正文的对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.Cursor.Close">
      <summary>
              关闭游标，允许消息队列释放关联的资源。
            </summary>
    </member>
    <member name="M:System.Messaging.Cursor.Dispose">
      <summary>
              释放由 <see cref="T:System.Messaging.Cursor" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Messaging.DefaultPropertiesToSend.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.DefaultPropertiesToSend" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.IServiceProvider)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Design.QueuePathDialog" /> 类，使用指定的服务提供程序。
            </summary>
      <param name="provider">
                一个 <see cref="T:System.IServiceProvider" /> 可用来获取服务。
              </param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.Windows.Forms.Design.IUIService)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Design.QueuePathDialog" /> 类，使用指定的 UI 服务。
            </summary>
      <param name="uiService">
                一个 <see cref="T:System.Windows.Forms.Design.IUIService" /> ，它使与用户界面交互的宿主的开发环境对象。
              </param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.ChoosePath">
      <summary>
              选择队列路径时，请更新路径编辑器控件。
            </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.DoubleClicked(System.Object,System.EventArgs)">
      <summary>
              在双击控件时发生。
            </summary>
      <param name="source">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.EventArgs" />。
              </param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
      <summary>
              事件处理程序的窗体关闭事件的队列路径编辑器控件。
            </summary>
      <param name="e">
                一个 <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> 对象，包含窗体关闭事件处理程序参数。
              </param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.OnHandleCreated(System.EventArgs)">
      <summary>
              队列路径编辑器控件的窗体创建事件的事件处理程序。
            </summary>
      <param name="e">
                一个 <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> 对象，包含窗体创建事件处理程序参数。
              </param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.SelectQueue(System.Messaging.MessageQueue)">
      <summary>
              选择指定的队列。
            </summary>
      <param name="queue">
                <see cref="T:System.Messaging.MessageQueue" /> 被选中。
              </param>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.Design.QueuePathEditor" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
              编辑指定的消息队列使用指定的类型描述符上下文和服务提供程序的值。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供其他上下文信息。
              </param>
      <param name="provider">
                一个 <see cref="T:System.IServiceProvider" /> 可由编辑器用来获取服务。
              </param>
      <param name="value">
                要编辑的消息队列。
              </param>
      <returns>
              消息队列路径的新值。
            </returns>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
              返回由使用的编辑样式 <see cref="Overload:System.Messaging.Design.QueuePathEditor.EditValue" /> 方法。
            </summary>
      <param name="context">
                一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供其他上下文信息。
              </param>
      <returns>
              <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />。
            </returns>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
              一个类中实现时，确定格式化程序是否可以反序列化消息的内容。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 检查。
              </param>
      <returns>
              <see langword="true" /> 如果格式化程序可以反序列化消息;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)">
      <summary>
              一个类中实现时，从给定的消息读取内容并创建一个包含消息中的数据对象。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 进行反序列化。
              </param>
      <returns>
              反序列化的消息。
            </returns>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
              一个类中实现时，对象序列化为消息的正文。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 将包含序列化的对象。
              </param>
      <param name="obj">
                要序列化到消息的对象。
              </param>
    </member>
    <member name="M:System.Messaging.Message.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Message" /> 正文为空的类。
            </summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Message" /> 类，使用 <see cref="T:System.Messaging.XmlMessageFormatter" /> 指定的对象序列化到消息的正文。
            </summary>
      <param name="body">
                要序列化到消息的正文的对象。
              </param>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Message" /> 类使用指定的格式化程序将指定的对象序列化到消息的正文。
            </summary>
      <param name="body">
                要序列化到消息的正文的对象。
              </param>
      <param name="formatter">
                一个 <see cref="T:System.Messaging.IMessageFormatter" /> ，它指定用于序列化消息正文的格式化程序。
              </param>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Close">
      <summary>
              释放与枚举器相关联的资源。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose">
      <summary>
              释放由 <see cref="T:System.Messaging.MessageEnumerator" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Messaging.MessageEnumerator" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext">
      <summary>
              将枚举数推进到下一个消息在队列中，如果当前可用。
            </summary>
      <returns>
              <see langword="true" /> 如果枚举数已成功前进到下一条消息; <see langword="false" /> 如果枚举数已达到队列的末尾。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  引发了特定于消息队列的异常。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
      <summary>
              将枚举数推进到下一个消息队列中。
               如果枚举数定位在的队列的结尾 <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> 等待，直到有可用消息或给定的超时时间到期。
            </summary>
      <param name="timeout">
                <see cref="T:System.TimeSpan" /> 时要等待的消息变得可用，如果枚举数定位在的队列的结尾。
              </param>
      <returns>
              <see langword="true" /> 如果枚举数成功地推进到下一条消息;， <see langword="false" /> 如果枚举数已达到队列的末尾，并且一条消息不会成为可通过指定的时间内 <paramref name="timeout" /> 参数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  指定超时参数的值无效。
                   它可能表示负数。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  引发了特定于消息队列的异常。
                
                  - 或 - 
                
                  已超时。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent">
      <summary>
              从事务性或非事务性队列中删除当前消息并将消息返回到调用应用程序。
               没有为消息到达队列中指定无超时。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
      <summary>
              从事务性队列中移除当前消息并将消息返回到调用应用程序。
               没有为消息到达队列中指定无超时。
            </summary>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象，它指定将在其中删除消息的事务。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
      <summary>
              从队列中删除当前消息并将消息返回到调用应用程序。
               没有为消息到达队列中指定无超时。
            </summary>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
      <summary>
              从队列中移除当前消息并将消息返回到调用应用程序。
               如果要删除的消息，该方法返回它立即。
               否则，该方法将等待新消息到达指定的超时。
            </summary>
      <param name="timeout">
                要为消息到达队列中等待的时间间隔。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  已超时。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
              从事务性队列中移除当前消息并将消息返回到调用应用程序。
               如果要删除的消息，该方法返回它立即。
               否则，该方法将等待新消息到达指定的超时。
            </summary>
      <param name="timeout">
                要删除的消息等待的时间间隔。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象，它指定消息的事务上下文。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  已超时。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
              从队列中删除当前消息并将消息返回到调用应用程序。
               如果要删除的消息，该方法返回它立即。
               否则，该方法将等待新消息到达指定的超时。
            </summary>
      <param name="timeout">
                要删除的消息等待的时间间隔。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  已超时。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Reset">
      <summary>
              重置当前的枚举数，因此它所指向的队列的开头。
            </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessagePropertyFilter" /> 类并设置所有属性的默认值。
            </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.ClearAll">
      <summary>
              将布尔筛选器的所有值都设置为 <see langword="false" />, ，以便在接收消息时，检索任何消息属性。
            </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.Clone">
      <summary>
              创建该对象的浅表副本。
            </summary>
      <returns>
              一个 <see cref="T:System.Object" /> ，它表示的实例 <see cref="T:System.Messaging.MessagePropertyFilter" /> 类。
            </returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetAll">
      <summary>
              指定要接收的消息时检索消息的所有属性。
            </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetDefaults">
      <summary>
              设置为公共的消息队列属性的筛选器值 <see langword="true" /> 和为其默认值的整数值的属性。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。
               默认构造函数初始化新实例后，必须设置该实例的 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性，然后才能使用该实例。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueue" /> 引用指定的路径上的消息队列队列的类。
            </summary>
      <param name="path">
                此引用的队列位置 <see cref="T:System.Messaging.MessageQueue" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 属性不是有效的可能是因为尚未设置。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueue" /> 引用按指定的路径并使用指定的读取访问权限限制消息队列队列的类。
            </summary>
      <param name="path">
                此引用的队列位置 <see cref="T:System.Messaging.MessageQueue" />, ，它可以是"。"对于本地计算机。
                 有关此参数的正确语法的信息，请参阅备注部分。
              </param>
      <param name="sharedModeDenyReceive">
                <see langword="true" /> 若要授予独占读取访问权限访问该队列中; 第一个应用程序否则为 <see langword="false" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 属性不是有效的可能是因为尚未设置。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。
            </summary>
      <param name="path">
                此引用的队列位置 <see cref="T:System.Messaging.MessageQueue" />, ，它可以是"。"对于本地计算机。
              </param>
      <param name="sharedModeDenyReceive">
                <see langword="true" /> 若要授予独占读取访问权限访问该队列中; 第一个应用程序否则为 <see langword="false" />。
              </param>
      <param name="enableCache">
                <see langword="true" /> 若要创建和使用连接缓存;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。
            </summary>
      <param name="path">
                此引用的队列位置 <see cref="T:System.Messaging.MessageQueue" />, ，它可以是"。"对于本地计算机。
              </param>
      <param name="sharedModeDenyReceive">
                <see langword="true" /> 若要授予独占读取访问权限访问该队列中; 第一个应用程序否则为 <see langword="false" />。
              </param>
      <param name="enableCache">
                <see langword="true" /> 若要创建和使用连接缓存;否则为 <see langword="false" />。
              </param>
      <param name="accessMode">
                <see cref="T:System.Messaging.QueueAccessMode" /> 值之一。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。
            </summary>
      <param name="path">
                此引用的队列位置 <see cref="T:System.Messaging.MessageQueue" />, ，它可以是"。"对于本地计算机。
              </param>
      <param name="accessMode">
                <see cref="T:System.Messaging.QueueAccessMode" /> 值之一。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek">
      <summary>
              启动异步扫视操作具有无超时。
               直到队列中出现一条消息，才会完成操作。
            </summary>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
      <summary>
              启动异步扫视操作具有指定的超时时间。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
      <summary>
              启动异步扫视操作具有指定的超时，并使用指定的游标、 指定的查看操作和指定的状态对象。
               状态对象提供的整个生存期内操作的相关的信息。
               此重载接收通知，通过回调，该操作的事件处理程序的标识。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <param name="cursor">
                一个 <see cref="T:System.Messaging.Cursor" /> 维护消息队列中的特定位置。
              </param>
      <param name="action">
                <see cref="T:System.Messaging.PeekAction" /> 值之一。
                 指示是否要查看当前消息在队列中，还是下一条消息。
              </param>
      <param name="state">
                包含与异步操作相关联的信息的应用程序所指定的状态对象。
              </param>
      <param name="callback">
                <see cref="T:System.AsyncCallback" /> 用于接收通知的异步操作完成。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  以外的其他值 <see langword="PeekAction.Current" /> 或 <see langword="PeekAction.Next" /> 为指定 <paramref name="action" /> 参数。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cursor" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
      <summary>
              启动异步扫视操作具有指定的超时时间和指定的状态对象，在操作的整个生存期内提供相关的信息。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <param name="stateObject">
                包含与异步操作相关联的信息的应用程序所指定的状态对象。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>
              启动异步扫视操作具有指定的超时时间和指定的状态对象，在操作的整个生存期内提供相关的信息。
               此重载接收通知，通过回调，该操作的事件处理程序的标识。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <param name="stateObject">
                包含与异步操作相关联的信息的应用程序所指定的状态对象。
              </param>
      <param name="callback">
                <see cref="T:System.AsyncCallback" /> 中将接收通知的异步操作完成。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive">
      <summary>
              启动异步接收没有超时设定的操作。
               直到队列中出现一条消息，才会完成操作。
            </summary>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
      <summary>
              启动异步接收操作具有指定的超时。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是因为它代表一个负数。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
      <summary>
              启动异步接收操作，具有指定的超时，并使用指定的游标和指定的状态对象。
               状态对象提供的整个生存期内操作的相关的信息。
               此重载接收通知，通过回调，该操作的事件处理程序的标识。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <param name="cursor">
                一个 <see cref="T:System.Messaging.Cursor" /> 维护消息队列中的特定位置。
              </param>
      <param name="state">
                包含与异步操作相关联的信息的应用程序所指定的状态对象。
              </param>
      <param name="callback">
                <see cref="T:System.AsyncCallback" /> 用于接收通知的异步操作完成。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cursor" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
      <summary>
              启动异步接收操作具有指定的超时时间和指定的状态对象，在操作的整个生存期内提供相关的信息。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <param name="stateObject">
                包含与异步操作相关联的信息的应用程序所指定的状态对象。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>
              启动异步接收操作具有指定的超时时间和指定的状态对象，在操作的整个生存期内提供相关的信息。
               此重载接收通知，通过回调，该操作的事件处理程序的标识。
               直到队列中出现一条消息或发生超时时才完成操作。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示要等待的消息变得可用的时间间隔。
              </param>
      <param name="stateObject">
                包含与异步操作相关联的信息的应用程序所指定的状态对象。
              </param>
      <param name="callback">
                <see cref="T:System.AsyncCallback" /> 中将接收通知的异步操作完成。
              </param>
      <returns>
              <see cref="T:System.IAsyncResult" /> ，它标识已发布的异步请求。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ClearConnectionCache">
      <summary>
              清除连接缓存。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Close">
      <summary>
              释放分配的所有资源 <see cref="T:System.Messaging.MessageQueue" />。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String)">
      <summary>
              在指定的路径创建一个非事务性的消息队列队列。
            </summary>
      <param name="path">
                要创建的队列的路径。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueue" /> ，它表示新队列。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="path" /> 参数是 <see langword="null" /> 或为空字符串 ("")。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  队列已存在于指定的路径。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
      <summary>
              在指定的路径创建一个事务性或非事务性消息队列的队列。
            </summary>
      <param name="path">
                要创建的队列的路径。
              </param>
      <param name="transactional">
                <see langword="true" /> 若要创建一个事务性队列; <see langword="false" /> 创建非事务性队列。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueue" /> ，它表示新队列。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="path" /> 参数是 <see langword="null" /> 或为空字符串 ("")。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  队列已存在于指定的路径。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.CreateCursor">
      <summary>
              创建一个新 <see cref="T:System.Messaging.Cursor" /> 为当前的消息队列。
            </summary>
      <returns>
              一个新 <see cref="T:System.Messaging.Cursor" /> 为当前的消息队列。
               此游标用于在读取队列的消息时保持在队列中的特定位置。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Delete(System.String)">
      <summary>
              删除消息队列服务器上的队列。
            </summary>
      <param name="path">
                要删除的队列的位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="path" /> 参数是 <see langword="null" /> 或为空字符串 ("")。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  语法 <paramref name="path" /> 参数无效。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
      <summary>
              处置由 <see cref="T:System.Messaging.MessageQueue" /> 占用的资源（内存除外）。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
      <summary>
              完成指定的异步扫视操作。
            </summary>
      <param name="asyncResult">
                <see cref="T:System.IAsyncResult" /> ，标识要完成的异步扫视操作并且从它检索最终结果。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 和已完成的异步操作相关联。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="asyncResult" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  语法 <paramref name="asyncResult" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
      <summary>
              完成指定异步接收操作。
            </summary>
      <param name="asyncResult">
                <see cref="T:System.IAsyncResult" /> ，用于标识异步接收操作完成并且从它检索最终结果。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 和已完成的异步操作相关联。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="asyncResult" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  语法 <paramref name="asyncResult" /> 参数无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Exists(System.String)">
      <summary>
              确定消息队列是否存在在指定的路径。
            </summary>
      <param name="path">
                要查找的队列的位置。
              </param>
      <returns>
              <see langword="true" /> 如果存在具有指定的路径的队列;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="path" /> 语法无效。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                
                  - 或 - 
                
                  <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> 远程专用队列正在调用方法 
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  应用程序时验证队列存在，请使用格式的名称语法。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetAllMessages">
      <summary>
              返回队列中的所有消息。
            </summary>
      <returns>
              类型的数组 <see cref="T:System.Messaging.Message" /> ，表示该队列，以相同的顺序中的所有消息，按它们出现在消息队列队列。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetEnumerator">
      <summary>
              枚举队列中的消息。
              <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> 已弃用。
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> 应改为使用。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.IEnumerator" /> ，它提供与队列中消息的动态连接。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
      <summary>
              获取在其的队列引用的计算机的标识符 <see cref="T:System.Messaging.MessageQueue" /> 所在。
            </summary>
      <param name="machineName">
                包含该队列，而无需两个前面的反斜杠 (\) 的计算机的名称。
              </param>
      <returns>
              一个 <see cref="T:System.Guid" /> 表示队列所在的计算机的唯一标识符。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  计算机标识符无法检索，可能是由于目录服务不可用;例如，如果您正在脱机工作。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator">
      <summary>
              在队列中创建所有消息的枚举器的对象。
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> 已弃用。
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> 应改为使用。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageEnumerator" /> 持有队列中包含的消息。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
      <summary>
              在队列中创建所有消息的枚举器的对象。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageEnumerator" /> 持有队列中包含的消息。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
      <summary>
              提供了只进游标语义，以枚举网络上的所有公共队列。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueueEnumerator" /> ，它在网络上提供的所有公共消息队列的动态列表。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
      <summary>
              提供用于循环访问所有公用网络上的队列满足指定的条件的只进游标语义。
            </summary>
      <param name="criteria">
                一个 <see cref="T:System.Messaging.MessageQueueCriteria" /> ，其中包含用于筛选可用的消息队列的条件。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueueEnumerator" /> ，它满足指定的限制的网络上提供的公共消息队列的动态列表 <paramref name="criteria" /> 参数。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
      <summary>
              检索指定的计算机上的所有专用队列。
            </summary>
      <param name="machineName">
                要从中检索专用队列计算机。
              </param>
      <returns>
              一个数组 <see cref="T:System.Messaging.MessageQueue" /> 引用检索到的专用队列的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="machineName" /> 参数是 <see langword="null" /> 或空字符串 ("")。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues">
      <summary>
              检索在网络上的所有公共队列。
            </summary>
      <returns>
              一个数组 <see cref="T:System.Messaging.MessageQueue" /> 引用检索到的公用队列的对象。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
      <summary>
              检索在网络上满足指定的条件的所有公共队列。
            </summary>
      <param name="criteria">
                一个 <see cref="T:System.Messaging.MessageQueueCriteria" /> ，其中包含用于筛选队列的条件。
              </param>
      <returns>
              一个数组 <see cref="T:System.Messaging.MessageQueue" /> 引用检索到的公用队列的对象。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
      <summary>
              检索在网络上属于指定类别的所有公共队列。
            </summary>
      <param name="category">
                一个 <see cref="T:System.Guid" /> 分组的一套要检索队列。
              </param>
      <returns>
              一个数组 <see cref="T:System.Messaging.MessageQueue" /> 引用检索到的公用队列的对象。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
      <summary>
              检索在网络上带有指定的标签的所有公共队列。
            </summary>
      <param name="label">
                要检索队列组标签。
              </param>
      <returns>
              一个数组 <see cref="T:System.Messaging.MessageQueue" /> 引用检索到的公用队列的对象。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="label" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
      <summary>
              检索位于指定的计算机的所有公共队列。
            </summary>
      <param name="machineName">
                包含要检索的公用队列集合的计算机的名称。
              </param>
      <returns>
              一个数组 <see cref="T:System.Messaging.MessageQueue" /> 引用计算机上的公用队列的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="machineName" /> 参数的语法有误。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetSecurityContext">
      <summary>
              检索 MSMQ 将与当前用户关联 （线程标识） 在此调用时的安全上下文。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.SecurityContext" /> 对象，其中包含的安全上下文。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek">
      <summary>
              返回，但不移除 （查看） 在队列中的第一个消息引用的 <see cref="T:System.Messaging.MessageQueue" />。
              <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的因此阻止当前线程，直至有消息变为可用。
            </summary>
      <returns>
              <see cref="T:System.Messaging.Message" /> ，表示在队列中的第一个消息。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
      <summary>
              返回，但不移除 （查看） 在队列中的第一个消息引用的 <see cref="T:System.Messaging.MessageQueue" />。
              <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的因此阻止当前线程，直至有可用消息或发生指定的超时。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示等待队列包含一条消息的最长时间。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> ，表示在队列中的第一个消息。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
      <summary>
              返回，但不删除 （查看） 的当前或下一步消息在队列中，使用指定的游标。
              <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的因此阻止当前线程，直至有可用消息或发生指定的超时。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示等待队列包含一条消息的最长时间。
              </param>
      <param name="cursor">
                一个 <see cref="T:System.Messaging.Cursor" /> 维护消息队列中的特定位置。
              </param>
      <param name="action">
                <see cref="T:System.Messaging.PeekAction" /> 值之一。
                 指示是否要查看当前消息在队列中，还是下一条消息。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> ，表示消息在队列中的。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  以外的其他值 <see langword="PeekAction.Current" /> 或 <see langword="PeekAction.Next" /> 为指定 <paramref name="action" /> 参数。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cursor" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                   可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
      <summary>
              查看与给定的相关标识符相匹配，如果队列中当前不存在具有指定的相关标识符的任何消息立即引发异常的消息。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要扫视的消息。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="correlationId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
      <summary>
              扫视的消息与给定的相关标识符相匹配，并会一直等到有可用在队列中，具有指定的相关标识符的消息或超时时间已到。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要扫视的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="correlationId" /> 队列中不存在和未到达超时之前。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  邮件没有到达超时之前。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String)">
      <summary>
              查看其消息标识符匹配的消息 <paramref name="id" /> 参数。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要扫视的消息。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定的任何消息 <paramref name="id" /> 存在。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
      <summary>
              查看其消息标识符匹配的消息 <paramref name="id" /> 参数。
               等待，直到队列中出现的消息或发生超时。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要扫视的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="id" /> 不存在队列中，并且未在指定时间段内之前到达 <paramref name="timeout" /> 参数已过期。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
      <summary>
              在 MSMQ 3.0 中引入。
               扫视与非事务性队列中给定的查找标识符相匹配的消息。
            </summary>
      <param name="lookupId">
                <see cref="P:System.Messaging.Message.LookupId" /> 要扫视的消息。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.LookupId" /> 属性匹配 <paramref name="lookupId" /> 传入参数。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="lookupId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
      <summary>
              在 MSMQ 3.0 中引入。
               扫视队列中特定的消息。
               通过查找标识符或其位置的正面或队列的末尾，可以指定该消息。
            </summary>
      <param name="action">
                其中一个 <see cref="T:System.Messaging.MessageLookupAction" /> 指定如何在队列中读取消息的值。
                 指定以下项之一︰
              
                <see langword="MessageLookupAction.Current" />︰ 查看由指定的消息 <paramref name="lookupId" />。
              
                <see langword="MessageLookupAction.Next" />︰ 在下一条消息由指定的消息查看 <paramref name="lookupId" />。
              
                <see langword="MessageLookupAction.Previous" />︰ 查看的消息之前由指定的消息 <paramref name="lookupId" />。
              
                <see langword="MessageLookupAction.First" />︰ 查看队列中的第一个消息。
                <paramref name="lookupId" /> 参数必须设置为 0。
              
                <see langword="MessageLookupAction.Last" />︰ 查看队列中的最后一个消息。
                <paramref name="lookupId" /> 参数必须设置为 0。
              </param>
      <param name="lookupId">
                <see cref="P:System.Messaging.Message.LookupId" /> 消息要查看的则为 0。
                 访问队列中的第一个或最后一个消息时，则使用 0。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 由指定 <paramref name="action" /> 和 <paramref name="lookupId" /> 中传递的参数。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="lookupId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="action" /> 参数不是一个 <see cref="T:System.Messaging.MessageLookupAction" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Purge">
      <summary>
              删除队列中包含的所有消息。
            </summary>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive">
      <summary>
              收到第一条消息所引用的队列中可用 <see cref="T:System.Messaging.MessageQueue" />。
               此调用是同步的并阻止当前线程的执行，直到有可用消息。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
      <summary>
              接收引用通过事务性队列中可用的第一条消息 <see cref="T:System.Messaging.MessageQueue" />。
               此调用是同步的并阻止当前线程的执行，直到有可用消息。
            </summary>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                
                  - 或 - 
                
                  非事务性队列。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
      <summary>
              收到第一条消息所引用的队列中可用 <see cref="T:System.Messaging.MessageQueue" />。
               此调用是同步的并阻止当前线程的执行，直到有可用消息。
            </summary>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
      <summary>
              收到第一条消息所引用的队列中可用 <see cref="T:System.Messaging.MessageQueue" /> 并等待，直到有可用在队列中，消息或超时时间已到。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  在超时过期前一条消息没有到达队列中。
                
                  - 或 - 
                
                  访问消息队列方法时出错 
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
      <summary>
              使用指定的游标的队列中接收当前消息。
               如果可用的任何消息不，此方法将等待，直到有可用消息，或超时时间已到。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="cursor">
                一个 <see cref="T:System.Messaging.Cursor" /> 维护消息队列中的特定位置。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  在超时过期前一条消息没有到达队列中。
                
                  - 或 - 
                
                  访问消息队列方法时出错 
                
                  使用此重载以收到一条消息并返回指定的时间段中是否存在任何消息队列。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
      <summary>
              使用指定的游标的队列中接收当前消息。
               如果可用的任何消息不，此方法将等待，直到有可用消息，或超时时间已到。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="cursor">
                一个 <see cref="T:System.Messaging.Cursor" /> 维护消息队列中的特定位置。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用消息在队列中的。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cursor" /> 参数为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                   可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  在超时过期前一条消息没有到达队列中。
                
                  - 或 - 
                
                  非事务性队列。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
      <summary>
              使用指定的游标的队列中接收当前消息。
               如果可用的任何消息不，此方法将等待，直到有可用消息，或超时时间已到。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="cursor">
                一个 <see cref="T:System.Messaging.Cursor" /> 维护消息队列中的特定位置。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用消息在队列中的。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cursor" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数无效。
                   可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  在超时过期前一条消息没有到达队列中。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
              接收引用通过事务性队列中可用的第一条消息 <see cref="T:System.Messaging.MessageQueue" /> 并等待，直到有可用在队列中，消息或超时时间已到。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  在超时过期前一条消息没有到达队列中。
                
                  - 或 - 
                
                  非事务性队列。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
              收到第一条消息所引用的队列中可用 <see cref="T:System.Messaging.MessageQueue" />。
               此调用是同步的并会一直等到有可用在队列中，消息或超时时间已到。
            </summary>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用的第一个消息队列中可用。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  在超时过期前一条消息没有到达队列中。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
      <summary>
              接收的消息匹配给定的相关标识符 （从非事务性队列中），并且立即引发异常，如果队列中当前不存在任何消息具有指定的相关标识符。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要接收的消息。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="correlationId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>
              接收的消息匹配给定的相关标识符 （从事务性队列），并且立即引发异常，如果队列中当前不存在任何消息具有指定的相关标识符。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要接收的消息。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                
                  - 或 - 
                
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="correlationId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  非事务性队列。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>
              接收的消息与给定的相关标识符相匹配，如果队列中当前不存在具有指定的相关标识符的任何消息立即引发异常。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要接收的消息。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="correlationId" /> 找不到。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
      <summary>
              接收的消息匹配给定的相关标识符 （从非事务性队列中），并且会一直等到有可用在队列中，具有指定的相关标识符的消息或超时时间已到。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要接收的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  使用指定消息 <paramref name="correlationId" /> 队列中不存在和未到达超时之前。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
              接收的消息匹配给定的相关标识符 （从事务性队列），并且会一直等到有可用在队列中，具有指定的相关标识符的消息或超时时间已到。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要接收的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                
                  - 或 - 
                
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  使用指定消息 <paramref name="correlationId" /> 队列中不存在和未到达超时之前。
                
                  - 或 - 
                
                  非事务性队列。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
              接收的消息与给定的相关标识符相匹配，并会一直等到有可用在队列中，具有指定的相关标识符的消息或超时时间已到。
            </summary>
      <param name="correlationId">
                <see cref="P:System.Messaging.Message.CorrelationId" /> 要接收的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.CorrelationId" /> 匹配 <paramref name="correlationId" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="correlationId" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="correlationId" /> 找不到。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  使用指定消息 <paramref name="correlationId" /> 队列中不存在和未到达超时之前。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
      <summary>
              接收的消息，从非事务性队列的给定的标识符匹配，并且如果队列中当前不存在具有指定标识符的任何消息立即引发异常。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要接收的消息。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="id" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>
              接收的消息 （当从事务性队列） 的给定的标识符匹配，如果队列中当前不存在具有指定标识符的任何消息立即引发异常。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要接收的消息。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                
                  - 或 - 
                
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="id" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  非事务性队列。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>
              接收的消息与给定的标识符相匹配，如果队列中当前不存在具有指定标识符的任何消息立即引发异常。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要接收的消息。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="id" /> 找不到。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
      <summary>
              接收的消息，从非事务性队列） 的给定的标识符匹配，并且会一直等到有可用的队列中具有指定标识符的消息或超时时间已到。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要接收的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  使用指定的消息 <paramref name="id" /> 在超时过期前未到达队列中。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
              接收的消息 （当从事务性队列） 的给定的标识符匹配，并会一直等到有可用的队列中具有指定标识符的消息或超时时间已到。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要接收的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                
                  - 或 - 
                
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  使用指定的消息 <paramref name="id" /> 在超时过期前未到达队列中。
                
                  - 或 - 
                
                  非事务性队列。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
              接收的消息匹配给定的标识符，并且会一直等到有可用的队列中具有指定标识符的消息或超时时间已到。
            </summary>
      <param name="id">
                <see cref="P:System.Messaging.Message.Id" /> 要接收的消息。
              </param>
      <param name="timeout">
                一个 <see cref="T:System.TimeSpan" /> ，该值指示可用于检查新邮件之前等待的时间。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 传入参数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="id" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <paramref name="timeout" /> 参数不是有效的可能是 <paramref name="timeout" /> 是小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  使用指定的消息 <paramref name="id" /> 在超时过期前未到达队列中。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
      <summary>
              在 MSMQ 3.0 中引入。
               接收的消息，与非事务性队列中给定的查找标识符相匹配。
            </summary>
      <param name="lookupId">
                <see cref="P:System.Messaging.Message.LookupId" /> 要接收的消息。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.LookupId" /> 属性匹配 <paramref name="lookupId" /> 传入参数。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="lookupId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
      <summary>
              在 MSMQ 3.0 中引入。
               当从事务性队列接收特定的消息。
               通过查找标识符或其位置的正面或队列的末尾，可以指定该消息。
            </summary>
      <param name="action">
                其中一个 <see cref="T:System.Messaging.MessageLookupAction" /> 指定如何在队列中读取消息的值。
                 指定以下项之一︰
              
                <see langword="MessageLookupAction.Current" />︰ 接收由指定的消息 <paramref name="lookupId" /> 并将其从队列中删除。
              
                <see langword="MessageLookupAction.Next" />︰ 接收消息的下由指定的消息 <paramref name="lookupId" /> 并将其从队列中删除。
              
                <see langword="MessageLookupAction.Previous" />︰ 接收的消息之前由指定的消息 <paramref name="lookupId" /> 并将其从队列中删除。
              
                <see langword="MessageLookupAction.First" />︰ 在队列中接收第一条消息，并将其从队列中删除。
                <paramref name="lookupId" /> 参数必须设置为 0。
              
                <see langword="MessageLookupAction.Last" />︰ 在队列中接收最后一条消息，并将其从队列中删除。
                <paramref name="lookupId" /> 参数必须设置为 0。
              </param>
      <param name="lookupId">
                <see cref="P:System.Messaging.Message.LookupId" /> 消息后，若要接收，则为 0。
                 访问队列中的第一个或最后一个消息时，则使用 0。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 由指定 <paramref name="lookupId" /> 和 <paramref name="action" /> 中传递的参数。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="lookupId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                
                  - 或 - 
                
                  非事务性队列。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="action" /> 参数不是一个 <see cref="T:System.Messaging.MessageLookupAction" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
      <summary>
              在 MSMQ 3.0 中引入。
               从队列中，使用指定的事务上下文接收特定消息。
               通过查找标识符或其位置的正面或队列的末尾，可以指定该消息。
            </summary>
      <param name="action">
                其中一个 <see cref="T:System.Messaging.MessageLookupAction" /> 指定如何在队列中读取消息的值。
                 指定以下项之一︰
              
                <see langword="MessageLookupAction.Current" />︰ 接收由指定的消息 <paramref name="lookupId" /> 并将其从队列中删除。
              
                <see langword="MessageLookupAction.Next" />︰ 接收消息的下由指定的消息 <paramref name="lookupId" /> 并将其从队列中删除。
              
                <see langword="MessageLookupAction.Previous" />︰ 接收的消息之前由指定的消息 <paramref name="lookupId" /> 并将其从队列中删除。
              
                <see langword="MessageLookupAction.First" />︰ 在队列中接收第一条消息，并将其从队列中删除。
                <paramref name="lookupId" /> 参数必须设置为 0。
              
                <see langword="MessageLookupAction.Last" />︰ 在队列中接收最后一条消息，并将其从队列中删除。
                <paramref name="lookupId" /> 参数必须设置为 0。
              </param>
      <param name="lookupId">
                <see cref="P:System.Messaging.Message.LookupId" /> 消息后，若要接收，则为 0。
                 访问队列中的第一个或最后一个消息时，则使用 0。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <returns>
              <see cref="T:System.Messaging.Message" /> 由指定 <paramref name="action" /> 和 <paramref name="lookupId" /> 中传递的参数。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  使用指定消息 <paramref name="lookupId" /> 找不到。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="action" /> 参数不是一个 <see cref="T:System.Messaging.MessageLookupAction" /> 成员。
                
                  - 或 - 
                
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Refresh">
      <summary>
              刷新所显示的属性 <see cref="T:System.Messaging.MessageQueue" /> 以反映该资源的当前状态。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.ResetPermissions">
      <summary>
              权限列表重置为操作系统的默认值。
               删除队列权限的任何权限已追加到默认的列表。
            </summary>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object)">
      <summary>
              将对象发送到引用的非事务性队列 <see cref="T:System.Messaging.MessageQueue" />。
            </summary>
      <param name="obj">
                要发送到队列的对象。
              </param>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置属性。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
      <summary>
              将对象发送到事务性队列引用的 <see cref="T:System.Messaging.MessageQueue" />。
            </summary>
      <param name="obj">
                要发送到队列的对象。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置属性。
                
                  - 或 - 
                
                  消息队列应用程序的表示不正确的事务使用。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
      <summary>
              将对象发送到队列的引用的 <see cref="T:System.Messaging.MessageQueue" />。
            </summary>
      <param name="obj">
                要发送到队列的对象。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置属性。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
      <summary>
              将对象发送到引用的非事务性队列 <see cref="T:System.Messaging.MessageQueue" /> 并指定消息的标签。
            </summary>
      <param name="obj">
                要发送到队列的对象。
              </param>
      <param name="label">
                消息的标签。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="label" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置属性。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
      <summary>
              将对象发送到事务性队列引用的 <see cref="T:System.Messaging.MessageQueue" /> 并指定消息的标签。
            </summary>
      <param name="obj">
                要发送到队列的对象。
              </param>
      <param name="label">
                消息的标签。
              </param>
      <param name="transaction">
                <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="label" /> 参数为 <see langword="null" />。
                
                  - 或 - 
                
                  <paramref name="transaction" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置属性。
                
                  - 或 - 
                
                  消息队列应用程序的表示不正确的事务使用情况。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>
              将对象发送到队列的引用的 <see cref="T:System.Messaging.MessageQueue" /> 并指定消息的标签。
            </summary>
      <param name="obj">
                要发送到队列的对象。
              </param>
      <param name="label">
                消息的标签。
              </param>
      <param name="transactionType">
                其中一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 描述事务上下文来与消息关联的类型的值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="label" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueTransaction">
                  消息队列应用程序的表示不正确的事务使用情况。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="transactionType" /> 参数不是一个 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置属性。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
      <summary>
              将访问权限向队列基于访问控制列表的内容。
            </summary>
      <param name="dacl">
                一个 <see cref="T:System.Messaging.AccessControlList" /> ，包含一个或多个指定受信者和要授予的权限的访问控制项。
              </param>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
      <summary>
              将访问为基于内容的访问控制项的队列的权限。
            </summary>
      <param name="ace">
                一个 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> ，用于指定用户、 访问类型和权限类型。
              </param>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
      <summary>
              向计算机、 组或用户授予指定的访问权限。
            </summary>
      <param name="user">
                个人、 组或获取对队列的其他权限的计算机。
              </param>
      <param name="rights">
                一个 <see cref="T:System.Messaging.MessageQueueAccessRights" /> ，该值指示对消息队列将分配给队列的权限集 <paramref name="user" /> 中传递。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="user" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>
              提供计算机、 组或用户使用指定的访问控制类型指定的访问权限 （允许、 拒绝、 撤消，或者设置）。
            </summary>
      <param name="user">
                个人、 组或获取对队列的其他权限的计算机。
              </param>
      <param name="rights">
                一个 <see cref="T:System.Messaging.MessageQueueAccessRights" /> ，该值指示对消息队列将分配给队列的权限集 <paramref name="user" /> 中传递。
              </param>
      <param name="entryType">
                一个 <see cref="T:System.Messaging.AccessControlEntryType" /> ，指定是否授予、 拒绝或撤消所指定的权限 <paramref name="rights" /> 参数。
              </param>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> 类，将指定的消息队列的访问权限授予指定的受信者。
            </summary>
      <param name="trustee">
                一个 <see cref="T:System.Messaging.Trustee" /> ，它指定用户、 组、 计算机、 域或别名。
              </param>
      <param name="rights">
                按位组合 <see cref="T:System.Messaging.MessageQueueAccessRights" /> 值定义的权限授予受信者的组合。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> 类，具有指定受信者和消息队列的访问权限。
               访问类型 (如 <see langword="Allow" /> 或 <see langword="Deny" />) 由您传入的条目类型定义。
            </summary>
      <param name="trustee">
                一个 <see cref="T:System.Messaging.Trustee" /> ，它指定用户、 组、 计算机、 域或别名。
              </param>
      <param name="rights">
                按位组合 <see cref="T:System.Messaging.MessageQueueAccessRights" /> 值定义的权限授予受信者的组合。
              </param>
      <param name="entryType">
                其中一个 <see cref="T:System.Messaging.AccessControlEntryType" /> 值，该值指定是否允许、 拒绝、 设置或撤消指定的权限。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueueCriteria" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.ClearAll">
      <summary>
              清除从内置于筛选器的所有属性，并将置于"未设置"状态的所有属性值。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Close">
      <summary>
              释放与枚举器相关联的资源。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose">
      <summary>
              释放由 <see cref="T:System.Messaging.MessageQueueEnumerator" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Messaging.MessageQueueEnumerator" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.MoveNext">
      <summary>
              如果当前可用，将枚举数推进到枚举中的下一个队列。
            </summary>
      <returns>
              <see langword="true" /> 如果枚举数已成功地推进到下一个队列中;， <see langword="false" /> 如果枚举数已达到枚举结束。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用代码没有浏览权限。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Reset">
      <summary>
              重置游标，使其指向枚举开头。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用序列化数据初始化 <see cref="T:System.Messaging.MessageQueueException" /> 类的新实例。
            </summary>
      <param name="info">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化数据。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化流的源和目标。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化所需的数据填充序列化信息对象 <see cref="T:System.Messaging.MessageQueueException" />。
            </summary>
      <param name="info">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化数据。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化流的源和目标。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="info" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueueInstaller" /> 类的新实例。
               不会设置任何实例属性。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueueInstaller" /> 类中，初始化与现有的安装设置 <see cref="T:System.Messaging.MessageQueue" /> 实例。
            </summary>
      <param name="componentToCopy">
                <see cref="T:System.Messaging.MessageQueue" /> 其设置确定安装的新队列的属性设置的组件。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)">
      <summary>
              完成安装过程，通过提交 <see cref="T:System.Messaging.MessageQueue" /> 安装信息， <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> 方法写入注册表。
               此方法旨在可供安装工具，将自动调用适当的方法。
            </summary>
      <param name="savedState">
                一个 <see cref="T:System.Collections.IDictionary" /> ，其中包含计算机的安装后状态。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
              将复制的属性值 <see cref="T:System.Messaging.MessageQueue" /> 在消息队列的安装时所需的组件。
            </summary>
      <param name="component">
                一个 <see cref="T:System.ComponentModel.IComponent" /> 以用作模板 <see cref="T:System.Messaging.MessageQueueInstaller" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  与此相关联的组件 <see cref="T:System.Messaging.MessageQueueInstaller" /> 不是 <see cref="T:System.Messaging.MessageQueue" />。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)">
      <summary>
              执行和安装消息队列信息将写入注册表。
               此方法旨在可供安装工具，将自动调用适当的方法。
            </summary>
      <param name="stateSaver">
                一个 <see cref="T:System.Collections.IDictionary" /> 用于保存所需信息来执行提交、 回滚或卸载操作。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>
              确定指定的安装程序是否能够处理相同类型的与此安装程序的安装。
            </summary>
      <param name="otherInstaller">
                安装程序进行比较。
              </param>
      <returns>
              <see langword="true" /> 如果此安装程序和安装由 <paramref name="otherInstaller" /> 参数可以处理相同类型的安装; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
              将计算机还原到它是在安装之前，回滚安装过程写入注册表的队列信息的状态。
               此方法旨在可供安装工具，将自动调用适当的方法。
            </summary>
      <param name="savedState">
                一个 <see cref="T:System.Collections.IDictionary" /> ，其中包含计算机的安装前状态。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
              通过从注册表删除队列信息来移除安装。
               此方法旨在用于卸载工具会自动调用适当的方法。
            </summary>
      <param name="savedState">
                一个 <see cref="T:System.Collections.IDictionary" /> ，其中包含计算机的安装后状态。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueuePermission" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueuePermission" /> 用指定的访问级别和队列的路径。
            </summary>
      <param name="permissionAccess">
                <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值之一。
              </param>
      <param name="path">
                被引用的队列路径 <see cref="T:System.Messaging.MessageQueue" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueuePermission" /> 类与指定的访问权限级别对使用、 队列描述和队列类别的计算机。
            </summary>
      <param name="permissionAccess">
                <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值之一。
              </param>
      <param name="machineName">
                消息队列队列所在的计算机的名称。
              </param>
      <param name="label">
                队列描述。
              </param>
      <param name="category">
                队列类别 （消息队列类型标识符）。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueuePermission" /> 与指定的权限的访问级别项的类。
            </summary>
      <param name="permissionAccessEntries">
                一个 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 对象数组。
                <see cref="P:System.Messaging.MessageQueuePermission.PermissionEntries" /> 属性设置为此值。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueuePermission" /> 类，具有指定的权限状态。
            </summary>
      <param name="state">
                <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Copy">
      <summary>
              创建并返回当前的权限对象的相同副本。
            </summary>
      <returns>
              当前权限对象的副本。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)">
      <summary>
              通过 XML 编码重新构造具有指定状态的安全对象。
            </summary>
      <param name="securityElement">
                用于重新构造安全对象的 XML 编码。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)">
      <summary>
              返回一个新的权限对象，表示当前的权限对象和指定的权限对象的交集。
            </summary>
      <param name="target">
                要与当前权限对象相交的一个权限对象。
                 它必须是类型的与当前权限对象相同。
              </param>
      <returns>
              新权限对象，它表示当前的权限对象和指定的权限对象的交集。
               这个新的权限对象为空引用 (<see langword="Nothing" /> 在 Visual Basic 中) 如果交集为空。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              返回一个值，该值指示当前的权限对象是否为指定的权限对象的一个子集。
            </summary>
      <param name="target">
                测试子集关系权限对象。
                 此对象必须是类型的与当前权限对象相同。
              </param>
      <returns>
              <see langword="true" /> 如果当前的权限对象是指定的权限对象中; 的一个子集否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsUnrestricted">
      <summary>
              返回一个值，该值指示是否可以将权限表示为无限制权限语义任何不知情的情况下。
            </summary>
      <returns>
              <see langword="true" /> 如果该权限可以表示为无限制;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.ToXml">
      <summary>
              创建安全对象及其当前状态的 XML 编码。
            </summary>
      <returns>
              安全对象的 XML 编码，包括任何状态信息。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)">
      <summary>
              返回一个新的权限对象，是当前和指定权限对象的并集。
            </summary>
      <param name="target">
                要与当前权限对象组合在一个权限对象。
                 它必须是类型的与当前权限对象相同。
              </param>
      <returns>
              新权限对象，表示当前的权限对象和指定的权限对象的并集。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueuePermissionAttribute" /> 类的新实例。
            </summary>
      <param name="action">
                <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.CreatePermission">
      <summary>
              创建基于请求的访问级别、 类别、 标签、 计算机名和通过设置的路径的权限 <see cref="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess" />, ，<see cref="P:System.Messaging.MessageQueuePermissionAttribute.Category" />, ，<see cref="P:System.Messaging.MessageQueuePermissionAttribute.Label" />, ，<see cref="P:System.Messaging.MessageQueuePermissionAttribute.MachineName" />, ，和 <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Path" /> 特性上的属性。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.IPermission" /> 表示创建的权限。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 用指定的权限的访问级别和队列的路径。
            </summary>
      <param name="permissionAccess">
                <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。
                <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> 属性设置为此值。
              </param>
      <param name="path">
                被引用的队列路径 <see cref="T:System.Messaging.MessageQueue" /> 对象。
                <see cref="P:System.Messaging.MessageQueuePermissionEntry.Path" /> 属性设置为此值。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 类，具有指定的权限访问级别、 队列所在的计算机、 队列说明和队列类别的名称。
            </summary>
      <param name="permissionAccess">
                <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。
                <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> 属性设置为此值。
              </param>
      <param name="machineName">
                消息队列队列所在的计算机的名称。
                <see cref="P:System.Messaging.MessageQueuePermissionEntry.MachineName" /> 属性设置为此值。
              </param>
      <param name="label">
                队列描述。
                <see cref="P:System.Messaging.MessageQueuePermissionEntry.Label" /> 属性设置为此值。
              </param>
      <param name="category">
                队列类别 （消息队列类型标识符）。
                <see cref="P:System.Messaging.MessageQueuePermissionEntry.Category" /> 属性设置为此值。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
              添加指定 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 到此集合。
            </summary>
      <param name="value">
                要添加的 <see cref="T:System.Messaging.MessageQueuePermissionEntry" />。
              </param>
      <returns>
              所添加的从零开始的索引 <see cref="T:System.Messaging.MessageQueuePermissionEntry" />。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>
              将一组指定的权限条目追加到此集合。
            </summary>
      <param name="value">
                类型的数组 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 对象，它包含要添加的权限项。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)">
      <summary>
              将一组指定的权限条目追加到此集合。
            </summary>
      <param name="value">
                一个 <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> ，包含要添加的权限项。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
              确定此集合是否包含指定 <see cref="T:System.Messaging.MessageQueuePermissionEntry" />。
            </summary>
      <param name="value">
                要查找的 <see cref="T:System.Messaging.MessageQueuePermissionEntry" />。
              </param>
      <returns>
              <see langword="true" /> 如果指定 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 属于该集合; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)">
      <summary>
              将权限项从此集合复制到数组，从该数组的某个特定索引处开始。
            </summary>
      <param name="array">
                类型的数组 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 接收此集合的权限条目。
              </param>
      <param name="index">
                从此处开始复制的权限项从零开始的索引。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
              确定此集合中指定的权限项的索引。
            </summary>
      <param name="value">
                要搜索的权限项。
              </param>
      <returns>
              指定的权限条目，则为-1 如果集合中找不到权限项的从零开始的索引。
            </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)">
      <summary>
              指定索引处插入到此集合的权限条目。
            </summary>
      <param name="index">
                在此处插入权限项集合中的从零开始索引。
              </param>
      <param name="value">
                要插入到此集合的权限项。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnClear">
      <summary>
              清除集合的内容后执行其他自定义进程。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>
              新建建权限条目插入到集合之前，请执行其他自定义进程。
            </summary>
      <param name="index">
                从零开始的索引，在其中插入 <paramref name="value" />。
              </param>
      <param name="value">
                处的权限项的新值 <paramref name="index" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>
              当从集合中移除新建建权限条目时，请执行其他自定义进程。
            </summary>
      <param name="index">
                从零开始的索引，到 <paramref name="value" /> 找不到。
              </param>
      <param name="value">
                要移除的权限项 <paramref name="index" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              在集合中设置一个值之前执行其他自定义进程。
            </summary>
      <param name="index">
                从零开始的索引，到 <paramref name="oldValue" /> 找不到。
              </param>
      <param name="oldValue">
                要替换的值 <paramref name="newValue" />。
              </param>
      <param name="newValue">
                处的权限项的新值 <paramref name="index" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
              从此集合中移除指定的权限条目。
            </summary>
      <param name="value">
                要删除的权限项。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.#ctor">
      <summary>
              初始化 <see cref="T:System.Messaging.MessageQueueTransaction" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Abort">
      <summary>
              回滚挂起的内部事务。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  尝试回滚内部事务尚未开始。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  内部消息队列就会出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Begin">
      <summary>
              开始新的消息队列内部事务。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  已启动事务。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  内部消息队列就会出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Commit">
      <summary>
              提交挂起的内部事务。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  尝试提交该事务尚未开始。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  内部消息队列就会出错。
                </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose">
      <summary>
              释放由 <see cref="T:System.Messaging.MessageQueueTransaction" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Messaging.MessageQueueTransaction" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Finalize">
      <summary>
              释放由当前实例所持有的资源。
            </summary>
    </member>
    <member name="M:System.Messaging.MessagingDescriptionAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.MessagingDescriptionAttribute" /> 类，使用指定的说明。
            </summary>
      <param name="description">
                应用程序定义的说明文本。
              </param>
    </member>
    <member name="M:System.Messaging.SecurityContext.Dispose">
      <summary>
              释放由 <see cref="T:System.Messaging.SecurityContext" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Trustee" /> 而无需设置的任何读/写属性的类。
            </summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Trustee" /> 类型的类 <see langword="Unknown" />, ，则设置 <see cref="P:System.Messaging.Trustee.Name" /> 属性设置为指定的值，与 <see cref="P:System.Messaging.Trustee.SystemName" /> 到 <see langword="null" />。
            </summary>
      <param name="name">
                要分配给值 <see cref="P:System.Messaging.Trustee.Name" /> 属性。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Trustee" /> 类型的类 <see langword="Unknown" />, ，则设置 <see cref="P:System.Messaging.Trustee.Name" /> 和 <see langword="SystemName" /> 属性设置为指定的值。
            </summary>
      <param name="name">
                要分配给值 <see cref="P:System.Messaging.Trustee.Name" /> 属性。
              </param>
      <param name="systemName">
                要分配给值 <see cref="P:System.Messaging.Trustee.SystemName" /> 属性。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.Trustee" /> 设置的指定类型的类 <see cref="P:System.Messaging.Trustee.Name" /> 和 <see cref="P:System.Messaging.Trustee.SystemName" /> 属性设置为指定的值。
            </summary>
      <param name="name">
                要分配给值 <see cref="P:System.Messaging.Trustee.Name" /> 属性。
              </param>
      <param name="systemName">
                要分配给值 <see cref="P:System.Messaging.Trustee.SystemName" /> 属性。
              </param>
      <param name="trusteeType">
                一个 <see cref="T:System.Messaging.TrusteeType" /> ，该值指示该受信者的帐户类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.XmlMessageFormatter" /> 类，而无需目标类型集。
            </summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.XmlMessageFormatter" /> 类设置为 （完全限定） 的字符串值的数组传入的目标类型。
            </summary>
      <param name="targetTypeNames">
                类型的数组 <see cref="T:System.String" /> 用于指定将从提供的消息格式化程序反序列化的可能类型集。
                 这些值必须是完全限定，例如，"MyNamespace.MyOrders，MyOrdersAssemblyName"。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="targetTypeNames" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
      <summary>
              新实例初始化 <see cref="T:System.Messaging.XmlMessageFormatter" /> 类设置的对象类型的数组形式传入的目标类型。
            </summary>
      <param name="targetTypes">
                类型的数组 <see cref="T:System.Type" /> 用于指定将从提供的消息格式化程序反序列化的可能类型集。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="targetTypes" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
              确定格式化程序是否可以反序列化消息。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 检查。
              </param>
      <returns>
              <see langword="true" /> 如果 XML 格式化程序可以反序列化消息;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  既不 <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> ，也不 <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> 设置属性。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Clone">
      <summary>
              创建的一个实例 <see cref="T:System.Messaging.XmlMessageFormatter" /> 类的读/写属性 （目标类型集） 都与当前相同 <see cref="T:System.Messaging.XmlMessageFormatter" /> 实例。
            </summary>
      <returns>
              其属性是与此相同的对象 <see cref="T:System.Messaging.XmlMessageFormatter" /> 实例，但其元数据未指定该格式化程序类实例。
            </returns>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
      <summary>
              从给定的消息读取内容并创建一个对象，包含反序列化的消息。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" />, ，以 XML 格式进行反序列化。
              </param>
      <returns>
              反序列化的消息。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  既不 <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> ，也不 <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> 设置属性。
                
                  - 或 - 
                
                  在消息正文序列化的实例不符合的任何架构中的类型由表示 <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> 和 <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
              将对象序列化到消息的正文。
            </summary>
      <param name="message">
                <see cref="T:System.Messaging.Message" /> 其 <see cref="P:System.Messaging.Message.Body" /> 属性将包含序列化的对象。
              </param>
      <param name="obj">
                <see cref="T:System.Object" /> 要序列化到消息正文。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="message" /> 参数为 <see langword="null" />。
                
                  - 或 - 
                
                  <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.CustomAccessRights">
      <summary>
              获取或设置自定义访问权限。
            </summary>
      <returns>
              通常定义为位标志的应用程序特定的访问权限。
            </returns>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.EntryType">
      <summary>
              获取或设置一个值，指示如何将访问权限应用于受信者。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Messaging.AccessControlEntryType" /> 值，该值指定是否允许、 拒绝、 设置或撤消指定的权限。
               默认值为 <see langword="Allow" />。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  不是有效的条目类型 <see cref="T:System.Messaging.AccessControlEntryType" /> 枚举值。
                </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.GenericAccessRights">
      <summary>
              获取或设置映射到的读取、 写入和执行这两个标准和特定于对象的访问权限的公共访问权限的一组。
            </summary>
      <returns>
              <see cref="T:System.Messaging.GenericAccessRights" /> 值的按位组合。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  您设置的值不是一个有效的组合 <see cref="T:System.Messaging.GenericAccessRights" /> 位标志成员。
                </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.StandardAccessRights">
      <summary>
              获取或设置对操作的一组标准访问权限相对应的普遍适用于大多数类型的安全对象。
            </summary>
      <returns>
              <see cref="T:System.Messaging.StandardAccessRights" /> 值的按位组合。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  您设置的值不是一个有效的组合 <see cref="T:System.Messaging.StandardAccessRights" /> 位标志成员。
                </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.Trustee">
      <summary>
              获取或设置正在向其分配访问权限的用户、 组、 域或别名。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.Trustee" /> ，它指定用户帐户、 组帐户或向其登录会话 <see cref="T:System.Messaging.AccessControlEntry" /> 适用。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
      <summary>
              获取或设置一个值，用于定义关系图的顶级 （根） 对象关于查找和加载其程序集中反序列化。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 定义反序列化行为的值。
            </returns>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
      <summary>
              获取或设置一个值，定义如何类型说明的布局方式在序列化流中。
            </summary>
      <returns>
              一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> ，它定义类型描述格式。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType">
      <summary>
              获取或设置确认消息返回给发送应用程序的类型。
            </summary>
      <returns>
              <see cref="T:System.Messaging.AcknowledgeTypes" /> 枚举值之一。
               此值用于确定系统文章中的管理队列，并确认返回给发送应用程序的确认消息的类型。
               默认值为 <see langword="AcknowledgeTypes.None" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue">
      <summary>
              获取或设置接收确认消息由消息队列生成的队列。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageQueue" /> ，它指定系统生成的确认消息所使用的管理队列。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AppSpecific">
      <summary>
              获取或设置特定于应用程序、 附加信息。
            </summary>
      <returns>
              特定于应用程序的信息。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId">
      <summary>
              获取或设置一个值，该值指示是否发件人 ID 应附加到消息。
            </summary>
      <returns>
              <see langword="true" /> 如果发件人 ID 应附加到该邮件。否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm">
      <summary>
              获取或设置用于加密私有消息的正文的加密算法。
            </summary>
      <returns>
              <see cref="T:System.Messaging.EncryptionAlgorithm" /> 枚举值之一。
               默认值为 <see langword="RC2" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Extension">
      <summary>
              获取或设置与消息关联的其他信息。
            </summary>
      <returns>
              提供与消息关联的、 应用程序定义的附加信息的字节数组。
               默认值是长度为零的数组。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm">
      <summary>
              获取或设置哈希对消息进行身份验证时使用的算法或创建一条消息的数字签名。
            </summary>
      <returns>
              <see cref="T:System.Messaging.HashAlgorithm" /> 枚举值之一。
               默认值为 <see langword="MD5" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Label">
      <summary>
              获取或设置描述消息的应用程序定义的字符串。
            </summary>
      <returns>
              消息的标签。
               默认值为空字符串("")。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Priority">
      <summary>
              获取或设置消息优先级，用于确定消息在队列中的放置位置。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Messaging.MessagePriority" /> 表示非事务性消息的优先级级别的枚举值。
               默认值为 <see langword="Normal" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Recoverable">
      <summary>
              获取或设置一个值，该值指示是否保证消息以计算机故障或网络问题的情况下传递。
            </summary>
      <returns>
              <see langword="true" /> 如果消息不能保证传递保存到磁盘上来; <see langword="false" /> 如果不能保证传递。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue">
      <summary>
              获取或设置接收应用程序生成的响应消息的队列。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageQueue" /> 消息返回到哪些应用程序生成的响应。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived">
      <summary>
              获取或设置要在目标队列中检索的消息的时间限制。
            </summary>
      <returns>
              以秒为单位，将发送的消息从目标队列接收的总时间。
               默认值为 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue">
      <summary>
              获取或设置消息到达队列的时间限制。
            </summary>
      <returns>
              发送一条消息到达消息的目标队列，从时间 （秒） 的时间限制。
               默认值为 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue">
      <summary>
              在源计算机上获取事务状态队列。
            </summary>
      <returns>
              用于将确认消息发送回给发送应用程序与源计算机上的事务状态队列。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication">
      <summary>
              获取或设置一个值，该值指示是否必须在发送之前验证消息。
            </summary>
      <returns>
              <see langword="true" /> 如果发送应用程序请求进行验证的消息;，否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue">
      <summary>
              获取或设置一个值，该值指示是否应将无法发送消息的副本发送到死信队列。
            </summary>
      <returns>
              <see langword="true" /> 如果消息送达失败会导致消息发送到死信队列; 的副本，否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseEncryption">
      <summary>
              获取或设置一个值，该值指示是否将消息变成私有成员。
            </summary>
      <returns>
              <see langword="true" /> 要求消息队列来加密消息;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue">
      <summary>
              获取或设置一个值，该值指示是否应在源计算机上的计算机日记中显示该消息的副本。
            </summary>
      <returns>
              <see langword="true" /> 要求在它后面保留在发件计算机的计算机日记中的一条消息副本已成功地从传送原始计算机到下一步中;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseTracing">
      <summary>
              获取或设置一个值，该值指示是否要向其目标队列移动跟踪消息。
            </summary>
      <returns>
              <see langword="true" /> 如果每个中间步骤，由原始消息路由到目标队列将生成报告以发送到系统的报告队列;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.Design.QueuePathDialog.Path">
      <summary>
              获取队列路径。
            </summary>
      <returns>
              队列路径。
            </returns>
    </member>
    <member name="P:System.Messaging.Message.AcknowledgeType">
      <summary>
              获取或设置确认消息返回给发送应用程序的类型。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Messaging.AcknowledgeTypes" /> 表示的确认消息中的管理队列以及在其下确认返回到发送应用程序的条件时，系统开机的这两种类型的值。
               默认值为 <see langword="None" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该消息经过筛选后忽略 <see cref="P:System.Messaging.Message.AcknowledgeType" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Acknowledgment">
      <summary>
              获取此消息表示的确认的分类。
            </summary>
      <returns>
              <see cref="T:System.Messaging.Acknowledgment" /> 枚举值之一。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 -
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.AdministrationQueue">
      <summary>
              获取或设置接收消息队列生成的确认消息的队列。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageQueue" /> ，它指定系统生成的确认消息所使用的管理队列。
               默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.AdministrationQueue" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.AppSpecific">
      <summary>
              获取或设置特定于应用程序、 附加信息。
            </summary>
      <returns>
              特定于应用程序的信息。
               默认值为零。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.AppSpecific" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.ArrivedTime">
      <summary>
              获取消息到达目标队列的时间。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，它表示在目标队列中消息的到达时间。
               时间将调整为格林威治标准时间从为目标队列所驻留的计算机的本地时间。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 -
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.ArrivedTime" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.AttachSenderId">
      <summary>
              获取或设置一个值，该值指示是否发件人 ID 应附加到消息。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Messaging.Message.SenderId" /> 应附加到消息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.AttachSenderId" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Authenticated">
      <summary>
              获取一个值，该值指示消息是否已验证。
            </summary>
      <returns>
              <see langword="true" /> 如果输入队列，则为已请求的消息身份验证，否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Authenticated" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderName">
      <summary>
              获取或设置用于生成消息的数字签名的加密提供程序的名称。
            </summary>
      <returns>
              用于生成消息的数字签名的加密提供程序的名称。
               默认值为 Microsoft Base Cryptographic Provider 1.0 版。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 无法设置属性。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 已设置为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderType">
      <summary>
              获取或设置用于生成消息的数字签名的加密提供程序的类型。
            </summary>
      <returns>
              <see cref="T:System.Messaging.CryptographicProviderType" /> 值之一。
               默认值为 <see langword="RSA_FULL" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> 无法设置属性。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Body">
      <summary>
              获取或设置消息的内容。
            </summary>
      <returns>
              一个指定消息内容的对象。
               对象可以是字符串、 日期、 货币、 数字、 字节数组或任何托管的对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Messaging.Message.Formatter" /> 属性为 <see langword="null" />。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Body" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyStream">
      <summary>
              获取或设置消息的正文中的信息。
            </summary>
      <returns>
              一个 <see cref="T:System.IO.Stream" /> 包含序列化的信息中包含的 <see cref="P:System.Messaging.Message.Body" /> 的消息。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Body" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyType">
      <summary>
              获取或设置消息正文所包含数据的类型。
            </summary>
      <returns>
              消息正文，则返回 true 类型，例如字符串、 日期、 货币、 或一个数字。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Body" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.ConnectorType">
      <summary>
              获取或设置一个值，指示通常由消息队列设置某些消息属性已由发送应用程序设置。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 应用程序定义和与连接器应用程序或消息加密结合使用。
               这 <see cref="T:System.Guid" /> 允许接收的应用程序来解释由发送应用程序设置，但程序通常由消息队列设置消息属性。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.ConnectorType" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.CorrelationId">
      <summary>
              获取或设置确认、报告和响应消息用以引用原始消息的消息标识符。
            </summary>
      <returns>
              指定的消息标识符 <see cref="P:System.Messaging.Message.Id" /> 原始消息的属性。
               在生成的响应消息时，相关标识符用于由消息队列时它会生成确认或报告消息，并由应用程序。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.CorrelationId" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.Message.CorrelationId" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationQueue">
      <summary>
              获取一条消息的预期的目标队列。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueue" /> ，它指定消息的预期的目标队列。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.DestinationQueue" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationSymmetricKey">
      <summary>
              获取或设置用于对应用程序加密的消息进行加密的对称密钥或发送到外部队列的消息。
            </summary>
      <returns>
              指定用来加密消息的目标对称密钥的字节值数组。
               默认值是长度为零的数组。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.DigitalSignature">
      <summary>
              获取或设置消息队列使用来验证消息的数字签名。
            </summary>
      <returns>
              指定用于对消息进行身份验证的消息队列 1.0 数字签名的字节值数组。
               默认值是长度为零的数组。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.DigitalSignature" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.Message.DigitalSignature" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.EncryptionAlgorithm">
      <summary>
              获取或设置用于加密私有消息的正文的加密算法。
            </summary>
      <returns>
              <see cref="T:System.Messaging.EncryptionAlgorithm" /> 枚举值之一。
               默认值为 <see langword="RC2" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Extension">
      <summary>
              获取或设置与消息关联的、应用程序定义的附加信息。
            </summary>
      <returns>
              提供与消息关联的应用程序定义的信息的字节值数组。
               默认值是长度为零的数组。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Extension" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.Message.Extension" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Formatter">
      <summary>
              获取或设置用于为将对象序列化或反序列化消息正文中的对象的格式化程序。
            </summary>
      <returns>
              <see cref="T:System.Messaging.IMessageFormatter" /> 生成可写入或读取从消息正文的流。
               默认值为 <see cref="T:System.Messaging.XmlMessageFormatter" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.Message.Formatter" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.HashAlgorithm">
      <summary>
              获取或设置哈希算法进行身份验证一条消息时消息队列使用或创建一条消息的数字签名。
            </summary>
      <returns>
              <see cref="T:System.Messaging.HashAlgorithm" /> 枚举值之一。
               对于 Windows XP 中，默认值是 <see langword="SHA" />。
               否则，默认为 <see langword="MD5" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.HashAlgorithm" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Id">
      <summary>
              获取消息的标识符。
            </summary>
      <returns>
              消息的唯一标识符，由消息队列生成。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Id" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.IsFirstInTransaction">
      <summary>
              获取一个值，该值指示消息是否已在事务中发送的第一个消息。
            </summary>
      <returns>
              <see langword="true" /> 如果消息已发送在一个事务; 第一条消息否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.IsLastInTransaction">
      <summary>
              获取一个值，该值指示消息是否已在事务中发送的最后一个消息。
            </summary>
      <returns>
              <see langword="true" /> 如果消息已发送在一个事务; 最后一条消息否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.IsLastInTransaction" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Label">
      <summary>
              获取或设置描述消息的应用程序定义的 Unicode 字符串。
            </summary>
      <returns>
              消息的标签。
               默认值为空字符串("")。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Label" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.LookupId">
      <summary>
              在 MSMQ 3.0 中引入。
               获取消息的查找标识符。
            </summary>
      <returns>
              消息的查找标识符，由消息队列生成并且是唯一的队列消息所在的位置。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.LookupId" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.MessageType">
      <summary>
              获取消息类型：<see langword="Normal" />、<see langword="Acknowledgment" /> 或 <see langword="Report" />。
            </summary>
      <returns>
              <see cref="P:System.Messaging.Message.MessageType" /> 值之一。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.MessageType" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Priority">
      <summary>
              获取或设置消息优先级，该优先级用于确定消息在队列中的位置。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Messaging.MessagePriority" /> 表示非事务性消息的优先级级别的值。
               默认值为 <see langword="Normal" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Priority" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.Recoverable">
      <summary>
              获取或设置一个值，该值指示是否保证消息以计算机故障或网络问题的情况下传递。
            </summary>
      <returns>
              <see langword="true" /> 如果消息传递保证 （通过将消息保存到磁盘上来）; <see langword="false" /> 如果不能保证传递。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.Recoverable" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.ResponseQueue">
      <summary>
              获取或设置接收应用程序生成的响应消息的队列。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageQueue" /> 消息返回到哪些应用程序生成的响应。
               默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.ResponseQueue" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.SecurityContext">
      <summary>
              获取或设置一条消息的安全上下文。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.SecurityContext" /> 对象，包含一条消息的安全上下文，如果以前未设置该属性; 否则为是 NULL。
            </returns>
    </member>
    <member name="P:System.Messaging.Message.SenderCertificate">
      <summary>
              获取或设置用于对消息进行身份验证的安全证书。
            </summary>
      <returns>
              表示消息队列使用来验证消息的发送方的安全证书的字节值数组。
               默认值是长度为零的数组。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.SenderCertificate" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderId">
      <summary>
              获取发送用户的标识符。
            </summary>
      <returns>
              标识发件人的字节值数组。
               接收队列管理器对要验证消息发件人的访问权限以及对队列的发送方的消息身份验证时使用的标识符。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.SenderId" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderVersion">
      <summary>
              获取消息队列用来发送消息的版本。
            </summary>
      <returns>
              用于将消息发送的消息队列版本。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.SenderVersion" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.SentTime">
      <summary>
              获取发送计算机上的源队列管理器发送消息的日期和时间。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，表示消息已发送的时间。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.SentTime" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.SourceMachine">
      <summary>
              获取发出消息的计算机。
            </summary>
      <returns>
              从其发送消息的计算机的名称。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.SourceMachine" /> 属性。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  无法访问计算机信息和目录服务。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToBeReceived">
      <summary>
              获取或设置用于在目标队列中接收的消息的时间的最长。
            </summary>
      <returns>
              将发送的消息从目标队列接收总时间。
               默认值为 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.TimeToBeReceived" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <see cref="P:System.Messaging.Message.TimeToBeReceived" /> 无效。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToReachQueue">
      <summary>
              获取或设置消息到达队列所用的最长时间。
            </summary>
      <returns>
              从消息开始的时间发送消息到达目标队列的时间限制。
               默认值为 <see cref="F:System.Messaging.Message.InfiniteTimeout" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.TimeToReachQueue" /> 属性。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为指定的值 <see cref="P:System.Messaging.Message.TimeToReachQueue" /> 无效。
                   它可能表示负数。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionId">
      <summary>
              获取该消息是一部分的事务的标识符。
            </summary>
      <returns>
              与消息关联的事务标识符。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.TransactionId" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionStatusQueue">
      <summary>
              在源计算机上获取事务状态队列。
            </summary>
      <returns>
              用于将确认消息发送回给发送应用程序与源计算机上的事务状态队列。
               默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未发送消息。
                   此属性仅可以在从队列中检索的消息上读取。
                
                  - 或 - 
                
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.UseAuthentication">
      <summary>
              获取或设置一个值，该值指示是否将消息 （或必须） 发送之前已经过身份验证。
            </summary>
      <returns>
              <see langword="true" /> 如果发送应用程序请求进行验证的消息;，否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.UseAuthentication" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.UseDeadLetterQueue">
      <summary>
              获取或设置一个值，该值指示是否应将无法发送消息的副本发送到死信队列。
            </summary>
      <returns>
              <see langword="true" /> 如果消息传递失败会导致消息发送到死信队列; 的副本，否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.UseEncryption">
      <summary>
              获取或设置一个值，该值指示是否将消息变成私有成员。
            </summary>
      <returns>
              <see langword="true" /> 要求消息队列来加密消息;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.UseEncryption" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.UseJournalQueue">
      <summary>
              获取或设置一个值，该值指示是否应在源计算机上的计算机日记中显示该消息的副本。
            </summary>
      <returns>
              <see langword="true" /> 要求消息后将保留在发件计算机的计算机日记中消息的副本已成功地 （从传送到下一个服务器的源计算机）;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.UseJournalQueue" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.Message.UseTracing">
      <summary>
              获取或设置一个值，该值指示是否要向其目标队列移动跟踪消息。
            </summary>
      <returns>
              <see langword="true" /> 如果每个中间步骤，由原始消息路由到目标队列生成一份发送到系统的报告队列;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  消息队列经过筛选后，若要忽略 <see cref="P:System.Messaging.Message.UseTracing" /> 属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.Current">
      <summary>
              获取该枚举数指向的当前 <see cref="T:System.Messaging.Message" />。
            </summary>
      <returns>
              当前消息。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  你在调用 <see cref="P:System.Messaging.MessageEnumerator.Current" /> 之前首次调用 <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />。
                   光标位于消息枚举的第一个元素之前。
                
                  - 或 - 
                
                  你在调用 <see cref="P:System.Messaging.MessageEnumerator.Current" /> 调用后 <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> 返回 <see langword="false" /> （指示光标位于消息枚举的最后一个元素之后。）
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  枚举器当前不能再指向的消息存在。
                   可能已被删除。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.CursorHandle">
      <summary>
              获取本机消息队列光标句柄用于浏览队列中的消息。
            </summary>
      <returns>
              本机游标句柄。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  不存在该句柄。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              返回 <see cref="T:System.Messaging.Message" /> 引用当前光标位置处的消息。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 引用当前光标位置处的消息。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AcknowledgeType">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.AcknowledgeType" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.AcknowledgeType" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Acknowledgment">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Acknowledgment" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Acknowledgment" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AdministrationQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.AdministrationQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.AdministrationQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AppSpecific">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.AppSpecific" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.AppSpecific" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ArrivedTime">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.ArrivedTime" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.ArrivedTime" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AttachSenderId">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.AttachSenderId" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.AttachSenderId" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Authenticated">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Authenticated" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Authenticated" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderName">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderType">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Body">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Body" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Body" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ConnectorType">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.ConnectorType" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.ConnectorType" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.CorrelationId">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.CorrelationId" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.CorrelationId" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultBodySize">
      <summary>
              获取或设置大小，以字节为单位的默认正文缓冲区。
            </summary>
      <returns>
              要接收消息时创建的默认正文缓冲区大小。
               默认值为 1024 字节。
            </returns>
      <exception cref="T:System.ArgumentException">
                  所赋的值为负。
                </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultExtensionSize">
      <summary>
              获取或设置大小，以字节为单位的默认扩展插件的缓冲区。
            </summary>
      <returns>
              要接收消息时创建的默认扩展缓冲区大小。
               默认值为 255 个字节。
            </returns>
      <exception cref="T:System.ArgumentException">
                  所赋的值为负。
                </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultLabelSize">
      <summary>
              获取或设置大小，以字节为单位的默认标签缓冲区。
            </summary>
      <returns>
              要接收消息时创建的默认标签缓冲区大小。
               默认值为 255 个字节。
            </returns>
      <exception cref="T:System.ArgumentException">
                  所赋的值为负。
                </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.DestinationQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.DestinationQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DigitalSignature">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.DigitalSignature" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.DigitalSignature" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Extension">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Extension" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Extension" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.HashAlgorithm">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.HashAlgorithm" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.HashAlgorithm" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Id">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Id" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Id" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsFirstInTransaction">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsLastInTransaction">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.IsLastInTransaction" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.IsLastInTransaction" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Label">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Label" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Label" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.LookupId">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.LookupId" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.LookupId" /> 属性信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.MessageType">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.MessageType" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.MessageType" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Priority">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Priority" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Priority" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Recoverable">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.Recoverable" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.Recoverable" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ResponseQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.ResponseQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.ResponseQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderCertificate">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.SenderCertificate" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.SenderCertificate" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderId">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.SenderId" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.SenderId" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderVersion">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.SenderVersion" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.SenderVersion" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SentTime">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.SentTime" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.SentTime" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SourceMachine">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.SourceMachine" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.SourceMachine" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToBeReceived">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.TimeToBeReceived" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.TimeToBeReceived" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToReachQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.TimeToReachQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.TimeToReachQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionId">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.TransactionId" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.TransactionId" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionStatusQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseAuthentication">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.UseAuthentication" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.UseAuthentication" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseEncryption">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.UseEncryption" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.UseEncryption" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseJournalQueue">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.UseJournalQueue" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.UseJournalQueue" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseTracing">
      <summary>
              获取或设置一个值，该值指示是否检索 <see cref="P:System.Messaging.Message.UseTracing" /> 接收或查看消息时的属性信息。
            </summary>
      <returns>
              <see langword="true" /> 若要接收 <see cref="P:System.Messaging.Message.UseTracing" /> 信息; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.AccessMode">
      <summary>
              获取一个值，该值指示该队列的访问模式。
            </summary>
      <returns>
              <see cref="T:System.Messaging.QueueAccessMode" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Authenticate">
      <summary>
              获取或设置一个值，该值指示是否队列只接受经过身份验证的消息。
            </summary>
      <returns>
              <see langword="true" /> 如果队列只接受经过身份验证的消息;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.BasePriority">
      <summary>
              获取或设置消息队列使用通过网络路由公用队列的消息的基本优先级。
            </summary>
      <returns>
              单基本优先级的所有消息发送到 （公共） 队列。
               默认值为零 (0)。
            </returns>
      <exception cref="T:System.ArgumentException">
                  基本优先级设置为无效值。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanRead">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Messaging.MessageQueue" /> 可以读取。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Messaging.MessageQueue" /> 存在并应用程序可以读取该; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanWrite">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Messaging.MessageQueue" /> 可以写入。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Messaging.MessageQueue" /> 存在以及该应用程序可以向其中写入; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Category">
      <summary>
              获取或设置队列类别。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 表示队列类别 （消息队列类型标识符），它允许应用程序将其队列分类。
               默认值为 <see langword="Guid.empty" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  队列类别设置为无效值。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.CreateTime">
      <summary>
              获取的时间和消息队列中创建该队列时的日期。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，它表示的日期和时间在其中创建队列。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
      <summary>
              获取或设置属性值，当应用程序向队列发送消息时，默认情况下使用的消息。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.DefaultPropertiesToSend" /> ，其中包含的默认消息队列消息属性值时应用程序发送的对象而不使用 <see cref="T:System.Messaging.Message" /> 到队列的实例。
            </returns>
      <exception cref="T:System.ArgumentException">
                  默认属性无法设置对于队列，可能是因为其中一个属性无效。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.DenySharedReceive">
      <summary>
              获取或设置一个值，该值指示是否此 <see cref="T:System.Messaging.MessageQueue" /> 具有独占访问权，从消息队列队列接收消息。
            </summary>
      <returns>
              <see langword="true" /> 如果此 <see cref="T:System.Messaging.MessageQueue" /> 具有独占权限以便接收消息队列; 否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.EnableConnectionCache">
      <summary>
              获取或设置一个值，该值指示是否将由应用程序维护连接的缓存。
            </summary>
      <returns>
              <see langword="true" /> 若要创建和使用连接缓存;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.EncryptionRequired">
      <summary>
              获取或设置一个值，指示队列是否接受仅非私有 （非加密） 消息。
            </summary>
      <returns>
              <see cref="T:System.Messaging.EncryptionRequired" /> 值之一。
               默认值为 <see langword="None" />。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.FormatName">
      <summary>
              获取在创建队列时消息队列生成的唯一队列名称。
            </summary>
      <returns>
              对于队列，这是网络上的唯一名称。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.MessageQueue.Path" /> 未设置。
                
                  - 或 - 
                
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.Formatter">
      <summary>
              获取或设置用于为将对象序列化或反序列化读取或写入队列的消息的正文中的对象的格式化程序。
            </summary>
      <returns>
              <see cref="T:System.Messaging.IMessageFormatter" /> 生成可写入或读取从消息正文的流。
               默认值为 <see cref="T:System.Messaging.XmlMessageFormatter" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Id">
      <summary>
              获取队列的消息队列的唯一标识符。
            </summary>
      <returns>
              一个 <see cref="P:System.Messaging.MessageQueue.Id" /> ，它表示由消息队列应用程序生成的消息标识符。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.Label">
      <summary>
              获取或设置队列描述。
            </summary>
      <returns>
              消息队列的标签。
               默认值为空字符串("")。
            </returns>
      <exception cref="T:System.ArgumentException">
                  标签被设置为无效值。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.LastModifyTime">
      <summary>
              获取上次修改队列属性的时间。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，该值指示上次修改该队列的属性。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MachineName">
      <summary>
              获取或设置消息队列队列所在的计算机的名称。
            </summary>
      <returns>
              队列所在的计算机的名称。
               消息队列默认值是"。"，本地计算机。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.MessageQueue.MachineName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  计算机的名称无效，可能是因为的语法不正确。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumJournalSize">
      <summary>
              获取或设置日记队列的最大大小。
            </summary>
      <returns>
              最大大小，以千字节为单位，日记队列。
               消息队列默认指定不存在任何限制。
            </returns>
      <exception cref="T:System.ArgumentException">
                  最大日志队列大小设置为无效值。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumQueueSize">
      <summary>
              获取或设置队列的最大大小。
            </summary>
      <returns>
              最大大小，以千字节为单位的队列。
               消息队列默认指定不存在任何限制。
            </returns>
      <exception cref="T:System.ArgumentException">
                  最大队列大小包含负的值。
                </exception>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
      <summary>
              获取或设置接收或查看消息的属性筛选器。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessagePropertyFilter" /> 队列用于筛选的属性，它接收或查看的每个消息集。
            </returns>
      <exception cref="T:System.ArgumentException">
                  筛选器是 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MulticastAddress">
      <summary>
              在 MSMQ 3.0 中引入。
               获取或设置与队列关联的多播的地址。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，其中包含有效的多播的地址 （采用如下所示的形式） 或 <see langword="null" />, ，指示该队列不是多播地址相关联。
            &lt;address&gt;:&lt;port&gt;</returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.Path">
      <summary>
              获取或设置队列的路径。
               设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 导致 <see cref="T:System.Messaging.MessageQueue" /> 以指向新的队列。
            </summary>
      <returns>
              通过引用的队列 <see cref="T:System.Messaging.MessageQueue" />。
               默认值取决于其 <see cref="M:System.Messaging.MessageQueue.#ctor" /> 构造函数使用; 它是 <see langword="null" /> ，或者由构造函数的指定 <paramref name="path" /> 参数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径不是有效的可能是因为语法无效。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.QueueName">
      <summary>
              获取或设置标识的队列的友好名称。
            </summary>
      <returns>
              标识所引用的此队列的名称 <see cref="T:System.Messaging.MessageQueue" />。
               值不能为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  队列名称是 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.ReadHandle">
      <summary>
              获取用于从消息队列读取消息的本机句柄。
            </summary>
      <returns>
              用于查看和从队列接收消息的本机队列对象句柄。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.SynchronizingObject">
      <summary>
              获取或设置将导致该事件处理程序调用封送的对象 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件。
            </summary>
      <returns>
              一个 <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, ，它表示的对象，将从生成的事件处理程序调用封送 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Transactional">
      <summary>
              获取一个值，指示队列是否接受仅事务。
            </summary>
      <returns>
              <see langword="true" /> 如果队列接受仅作为事务; 的一部分发送的消息否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.UseJournalQueue">
      <summary>
              获取或设置一个值，该值指示是否将接收的消息复制到日记队列。
            </summary>
      <returns>
              <see langword="true" /> 如果从队列接收的消息复制到其日记队列;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  访问消息队列方法时出错。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.WriteHandle">
      <summary>
              获取用于将消息发送到消息队列的本机句柄。
            </summary>
      <returns>
              用于将消息发送到队列的本机队列对象句柄。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  消息队列不是可用于写入的。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights">
      <summary>
              获取或设置要应用于受信者的消息队列特定权限集。
            </summary>
      <returns>
              按位组合 <see cref="T:System.Messaging.MessageQueueAccessRights" /> 成员。
               通过定义了默认的 <paramref name="rights" /> 参数传递到构造函数。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Category">
      <summary>
              获取或设置所依据的类别，筛选在网络中的队列。
            </summary>
      <returns>
              队列的类别。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> 然后才能读取它的属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedAfter">
      <summary>
              获取或设置的队列创建日期和时间的下限，以此作为筛选网络上的队列的依据。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，指定队列的创建日期和时间的下限。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> 然后才能读取它的属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedBefore">
      <summary>
              获取或设置的队列创建日期和时间的上限，以此作为筛选网络上的队列的依据。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，指定队列的创建日期和时间的上限。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> 然后才能读取它的属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Label">
      <summary>
              获取或设置标签依据筛选网络中的队列。
            </summary>
      <returns>
              队列的标签。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> 然后才能读取它的属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.MachineName">
      <summary>
              获取或设置的计算机名称时所依据筛选网络中的队列。
            </summary>
      <returns>
              队列所在的计算机服务器名称。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> 然后才能读取它的属性。
                
                  - 或 - 
                
                  该计算机名称语法不正确。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedAfter">
      <summary>
              获取或设置队列修改日期和时间的下限，以此作为筛选网络上的队列的依据。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，指定队列的上次修改日期和时间的下限。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> 然后才能读取它的属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedBefore">
      <summary>
              获取或设置队列修改日期和时间的上限，以此作为筛选网络上的队列的依据。
            </summary>
      <returns>
              一个 <see cref="T:System.DateTime" /> ，指定队列的上次修改日期和时间的上限。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  应用程序没有设置 <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> 然后才能读取它的属性。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.Current">
      <summary>
              获取当前 <see cref="T:System.Messaging.MessageQueue" /> 的枚举。
            </summary>
      <returns>
              将光标当前定位该队列。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  你在调用 <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> 之前首次调用 <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />。
                   光标位于之前在枚举中的第一个队列。
                
                  - 或 - 
                
                  你在调用 <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> 调用后 <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> 已经返回 false （指示光标是否位于在枚举中的最后一个队列后）。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
      <summary>
              获取本机消息队列句柄用于定位在网络中的队列。
            </summary>
      <returns>
              当前队列本机句柄。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  不存在该句柄。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用代码没有浏览权限。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取当前 <see cref="T:System.Messaging.MessageQueue" /> 的枚举。
            </summary>
      <returns>
              将光标当前定位该队列。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueException.Message">
      <summary>
              获取一个值，消息队列错误进行描述。
            </summary>
      <returns>
              消息队列内部错误生成了此说明 <see cref="T:System.Messaging.MessageQueueException" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueException.MessageQueueErrorCode">
      <summary>
              获取一个值，该值指示与此异常关联的错误代码。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueueErrorCode" /> 标识的错误消息队列生成的类型。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Authenticate">
      <summary>
              获取或设置一个值，该值指示是否要安装的队列只接受经过身份验证的消息。
            </summary>
      <returns>
              <see langword="true" /> 如果队列只接受经过身份验证的消息;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.BasePriority">
      <summary>
              获取或设置用于通过网络路由公用队列的消息的基本优先级。
            </summary>
      <returns>
              单基本优先级的所有消息发送到公用队列。
               默认值为零 (0)。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Category">
      <summary>
              获取或设置特定于实现的队列类型。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 表示队列类别 （或消息队列类型标识符），这样，应用程序如何使用它们根据其队列进行分类。
               默认值为 <see langword="Guid.empty" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.EncryptionRequired">
      <summary>
              获取或设置一个值，指示队列是否接受仅私有的或加密的消息。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Messaging.EncryptionRequired" /> 值，该值指示级别的消息发送到队列所需的加密。
               默认值为 <see langword="Optional" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Label">
      <summary>
              获取或设置队列的说明。
            </summary>
      <returns>
              描述消息队列的标签。
               默认值为空字符串("")。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize">
      <summary>
              获取或设置与队列关联的日志的最大大小。
            </summary>
      <returns>
              最大大小，以千字节为单位，日记队列，将记录从队列中移除的消息。
               消息队列默认为无限制。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize">
      <summary>
              获取或设置队列的最大大小。
            </summary>
      <returns>
              最大大小，以千字节为单位的队列。
               消息队列默认为无限制。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MulticastAddress">
      <summary>
              在 MSMQ 3.0 中引入。
               获取或设置与队列关联的多播的地址。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，其中包含有效的多播的地址 （采用如下所示的形式） 或 <see langword="null" />, ，指示该队列不是多播地址相关联。
            &lt;address&gt;:&lt;port&gt;</returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  未安装 MSMQ 3.0。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Path">
      <summary>
              获取或设置此对象引用的队列的位置。
            </summary>
      <returns>
              表示在网络中的队列的位置的路径。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> 已设置为无效值，可能是因为语法无效。
                
                  - 或 - 
                
                  <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Permissions">
      <summary>
              获取或设置与队列关联的权限。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.AccessControlList" /> ，包含一个或多个指定受信者和权限为队列授予的访问控制项。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Transactional">
      <summary>
              获取或设置一个值，指示队列是否接受仅作为事务的一部分发送的消息。
            </summary>
      <returns>
              <see langword="true" /> 如果队列只能接受作为事务; 的一部分发送的消息否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UninstallAction">
      <summary>
              获取或设置一个值，指示内容安装程序未与该队列在卸载时︰ 将其删除，将其还原到其安装前的状态，或将其保留在其当前的安装状态。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Configuration.Install.UninstallAction" /> 值，该值指示用于队列保留在时的状态 <see cref="T:System.Messaging.MessageQueue" /> 是否已卸载。
               默认值为 <see langword="Remove" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UseJournalQueue">
      <summary>
              获取或设置一个值，该值指示是否还将从队列中检索的消息复制到关联的日记队列。
            </summary>
      <returns>
              <see langword="true" /> 若要复制到日记队列中; 从队列检索的消息否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermission.PermissionEntries">
      <summary>
              获取此权限请求的权限项集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> ，它包含此权限请求权限项。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Category">
      <summary>
              获取或设置队列类别。
            </summary>
      <returns>
              队列类别 （消息队列类型标识符），因此允许应用程序将其队列分类。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该值为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Label">
      <summary>
              获取或设置队列描述。
            </summary>
      <returns>
              消息队列的标签。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该值为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.MachineName">
      <summary>
              获取或设置消息队列队列所在的计算机的名称。
            </summary>
      <returns>
              队列所在的计算机的名称。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该值为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Path">
      <summary>
              获取或设置队列的路径。
            </summary>
      <returns>
              通过引用的队列 <see cref="T:System.Messaging.MessageQueue" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该值为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess">
      <summary>
              获取或设置权限请求中使用的权限访问级别。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Category">
      <summary>
              获取队列类别。
            </summary>
      <returns>
              队列类别 （消息队列类型标识符），因此允许应用程序将其队列分类。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Label">
      <summary>
              获取队列描述。
            </summary>
      <returns>
              消息队列的标签。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.MachineName">
      <summary>
              获取消息队列队列所在的计算机的名称。
            </summary>
      <returns>
              队列所在的计算机的名称。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Path">
      <summary>
              获取队列的路径。
            </summary>
      <returns>
              通过引用的队列 <see cref="T:System.Messaging.MessageQueue" />。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess">
      <summary>
              获取权限请求中使用的权限访问级别。
            </summary>
      <returns>
              <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> 值的按位组合。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)">
      <summary>
              获取或设置指定索引处的对象。
            </summary>
      <param name="index">
                集合中的从零开始索引。
              </param>
      <returns>
              <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 存在的指定索引处。
            </returns>
    </member>
    <member name="P:System.Messaging.MessageQueueTransaction.Status">
      <summary>
              获取事务的状态。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Messaging.MessageQueueTransactionStatus" /> 值，该值指示是否已被提交，中止，初始化，或正在等待事务。
            </returns>
    </member>
    <member name="P:System.Messaging.MessagingDescriptionAttribute.Description">
      <summary>
              获取与监视的项相关联的说明文字。
            </summary>
      <returns>
              应用程序定义的描述。
            </returns>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.AsyncResult">
      <summary>
              获取或设置请求的异步操作的结果。
            </summary>
      <returns>
              一个 <see cref="T:System.IAsyncResult" /> ，其中包含与扫视操作关联的数据。
            </returns>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.Message">
      <summary>
              获取与异步扫视操作相关联的消息。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 代表异步扫视操作的最终结果。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> 无法检索。
                   异步操作的超时值可能已过期。
                </exception>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
      <summary>
              获取或设置请求的异步操作的结果。
            </summary>
      <returns>
              一个 <see cref="T:System.IAsyncResult" /> ，其中包含与接收操作关联的数据。
            </returns>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.Message">
      <summary>
              获取与异步关联的消息接收操作。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.Message" /> 表示最终结果的异步接收操作。
            </returns>
      <exception cref="T:System.Messaging.MessageQueueException">
                  <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> 无法检索。
                   异步操作的超时值可能已过期。
                </exception>
    </member>
    <member name="P:System.Messaging.Trustee.Name">
      <summary>
              获取或设置受信者的名称。
            </summary>
      <returns>
              要向其分配新的权限的帐户的名称。
               默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="P:System.Messaging.Trustee.Name" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.Trustee.SystemName">
      <summary>
              获取或设置的计算机上查找该受信者帐户。
            </summary>
      <returns>
              该帐户所在的本地或远程计算机。
               默认值是 <see langword="null" />, ，这表示将在本地计算机上查找的名称。
            </returns>
    </member>
    <member name="P:System.Messaging.Trustee.TrusteeType">
      <summary>
              获取或设置受信者，标识受信者是用户、 组、 计算机、 域或别名的类型。
            </summary>
      <returns>
              一个 <see cref="T:System.Messaging.TrusteeType" /> ，它指示什么类型的帐户必须在系统上的受信者。
               默认值为 <see langword="Unknown" />。
            </returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  指定的受信者类型不是之一 <see cref="T:System.Messaging.TrusteeType" /> 枚举成员。
                </exception>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
      <summary>
              指定一组可能将由从提供的消息格式化程序反序列化的类型。
            </summary>
      <returns>
              类型的数组 <see cref="T:System.String" /> ，它指定要从消息正文反序列化时读取消息的对象类型。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypes">
      <summary>
              指定一组可能将由从提供的消息格式化程序反序列化的类型。
            </summary>
      <returns>
              类型的数组 <see cref="T:System.Type" /> ，它指定要从消息正文反序列化时读取消息的对象类型。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> 属性为 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Messaging.AccessControlEntry">
      <summary>
              指定为受信者 （用户、 组或计算机） 来执行常见任务的应用程序特定的实现的访问权限。
            </summary>
    </member>
    <member name="T:System.Messaging.AccessControlEntryType">
      <summary>
              指定是否允许、 拒绝或撤消访问权限为受信者。
            </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Allow">
      <summary>
              具有允许访问的项，将导致新的权限要添加到任何现有权限受信者。
            </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Set">
      <summary>
              允许访问的条目类似于 <see langword="Allow" />, ，只不过是新项允许指定的权限。
               使用它将丢弃任何现有权限，访问被拒绝的所有现有条目包括受信者。
            </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Deny">
      <summary>
              访问被拒绝的项，它当前拒绝指定的权限以及任何拒绝权限的受信者。
            </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Revoke">
      <summary>
              删除所有现有条目允许或拒绝指定的受信者的权限。
            </summary>
    </member>
    <member name="T:System.Messaging.AccessControlList">
      <summary>
              包含一个访问控制项列表，这些项为一个或多个受信者指定访问权限。
            </summary>
    </member>
    <member name="T:System.Messaging.AcknowledgeTypes">
      <summary>
              指定的消息队列返回给发送应用程序的确认消息的类型。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveArrival">
      <summary>
              用于在原始消息到达队列时请求肯定确认操作的掩码。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveReceive">
      <summary>
              用于请求肯定确认，如果原始消息成功从队列检索操作的掩码。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NegativeReceive">
      <summary>
              用于从队列接收原始消息失败时请求否定确认的掩码。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.None">
      <summary>
              发布用于请求任何确认消息 （肯定或否定） 的掩码。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue">
      <summary>
              用于请求否定确认，原始消息无法到达队列的掩码。
               这可能发生在到达队列时间计时器过期时，或者如果消息无法进行身份验证。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive">
      <summary>
              用于请求否定确认，发生错误时的掩码可防止其接收时间计时器过期之前从队列接收原始消息。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReachQueue">
      <summary>
              用于请求肯定确认，如果在原始消息到达队列或否定确认，如果到达队列时间计时器过期，或者无法进行身份验证原始消息操作的掩码。
            </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReceive">
      <summary>
              如果从队列接收原始消息，它接收时间的计时器过期之前请求肯定确认或否定确认，否则所用于的掩码。
            </summary>
    </member>
    <member name="T:System.Messaging.Acknowledgment">
      <summary>
              指定尝试的消息传递的结果。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.None">
      <summary>
              消息不是一条确认消息。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.AccessDenied">
      <summary>
              指示发送应用程序没有足够的权限来将一条消息发送到目标队列否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadDestinationQueue">
      <summary>
              否定到达确认，该值指示目标队列不可用到发送应用程序。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadEncryption">
      <summary>
              该值指示目标队列管理器无法解密私有消息否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadSignature">
      <summary>
              指示原始消息的数字签名无效，无法验证由消息队列否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.CouldNotEncrypt">
      <summary>
              指示源队列管理器未能加密私有消息否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.HopCountExceeded">
      <summary>
              指示原始消息的跃点计数 （这表明中间服务器的数目） 已超过了否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalQueue">
      <summary>
              它表示事务性消息被发送到非事务性队列否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalMessage">
      <summary>
              它表示非事务性消息被发送到事务性队列否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Purged">
      <summary>
              否定到达确认，该值指示消息到达其目标队列之前已被清除。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueDeleted">
      <summary>
              一个否定读取确认，它指示之前无法读取消息队列已被删除。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueExceedMaximumSize">
      <summary>
              指示原始消息未被传递其目标队列已满一个否定到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueuePurged">
      <summary>
              一个否定读取确认，它指示队列已清除之前无法读取消息。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueue">
      <summary>
              指示原始消息到达其目标队列正到达确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueueTimeout">
      <summary>
              一个否定到达确认，指出到达队列时间或接收时间计时器过期之前的原始消息无法到达目标队列。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReceiveTimeout">
      <summary>
              一个否定读取表示到了不从队列接收原始消息它接收时间的计时器过期之前确认。
            </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Receive">
      <summary>
              一个值为正读取，该值指示接收应用程序已接收到原始消息的确认。
            </summary>
    </member>
    <member name="T:System.Messaging.ActiveXMessageFormatter">
      <summary>
              序列化或反序列化基元数据类型和其他对象或从使用一种格式，与 MSMQ ActiveX 组件兼容的消息队列消息的正文。
            </summary>
    </member>
    <member name="T:System.Messaging.BinaryMessageFormatter">
      <summary>
              序列化或反序列化的对象或连接到或从使用二进制格式的消息队列消息正文的对象的整个图。
            </summary>
    </member>
    <member name="T:System.Messaging.CryptographicProviderType">
      <summary>
              指定可用于验证数字签名的加密服务提供程序。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.None">
      <summary>
              未指定加密提供程序类型。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsaFull">
      <summary>
              完整 RSA 提供程序类型，它支持数字签名和数据加密。
               被视为一般用途的加密服务提供程序。
               RSA 公钥算法用于所有公钥操作。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsqSig">
      <summary>
              一个子集 <see langword="RsaFull" /> 只支持这些函数和算法进行哈希值和数字签名所需的提供程序类型。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Dss">
      <summary>
              提供程序类型，如 <see langword="RsqSig" />, ，仅支持哈希值和数字签名。
              <see langword="Dss" /> 指定的数字签名算法 (DSA) 签名算法。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Fortezza">
      <summary>
              包含一组加密协议和算法归国家标准和技术的提供程序类型。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.MicrosoftExchange">
      <summary>
              为 Microsoft Exchange 邮件应用程序和其他应用程序与 Microsoft Mail 兼容的加密需要而设计的一种提供程序类型。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Ssl">
      <summary>
              支持安全套接字层 (SSL) 协议的提供程序类型。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttMer">
      <summary>
              确保事务技术提供企业的安全。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttAcq">
      <summary>
              安全事务技术提供程序获得者。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttBrnd">
      <summary>
              安全事务技术提供程序品牌。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttRoot">
      <summary>
              确保事务技术提供程序根的安全。
            </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttIss">
      <summary>
              安全事务技术提供程序颁发者。
            </summary>
    </member>
    <member name="T:System.Messaging.Cursor">
      <summary>
              一个 <see cref="T:System.Messaging.Cursor" /> 被用来维护中的特定位置 <see cref="T:System.Messaging.MessageQueue" /> 中读取队列的消息时。
            </summary>
    </member>
    <member name="T:System.Messaging.DefaultPropertiesToSend">
      <summary>
              指定不发送对象时要使用的默认属性值 <see cref="T:System.Messaging.Message" /> 到消息队列实例。
            </summary>
    </member>
    <member name="T:System.Messaging.Design.QueuePathDialog">
      <summary>
              表示路径编辑器控件。
            </summary>
    </member>
    <member name="T:System.Messaging.Design.QueuePathEditor">
      <summary>
              提供用于选择消息队列路径的用户界面。
            </summary>
    </member>
    <member name="T:System.Messaging.EncryptionAlgorithm">
      <summary>
              指定用于加密私有消息的消息正文的加密算法。
            </summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.None">
      <summary>
              不是加密。
            </summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc2">
      <summary>
              MQMSG_CALG_RC2 值。
               这是消息队列应用程序的消息对象的加密属性的默认值。
            </summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc4">
      <summary>
              MQMSG_CALG_RC4 值。
               这对应于消息队列应用程序的消息对象的加密属性不太安全的选项。
            </summary>
    </member>
    <member name="T:System.Messaging.EncryptionRequired">
      <summary>
              指定由队列接收消息的隐私级别。
            </summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.None">
      <summary>
              接受仅非私有 （非加密） 的消息。
            </summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Optional">
      <summary>
              不会强制隐私。
               接受私有 （加密） 消息和非私有 （非加密） 消息。
            </summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Body">
      <summary>
              只接受私有 （加密的） 消息。
            </summary>
    </member>
    <member name="T:System.Messaging.GenericAccessRights">
      <summary>
              使用 Windows 2000 和 Windows NT 访问格式来指定一组常见消息队列将映射到的读取、 写入和执行这两个标准和特定于对象的访问权限的访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.All">
      <summary>
              读取、 写入和执行访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Execute">
      <summary>
              执行访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Write">
      <summary>
              写入访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Read">
      <summary>
              读取访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.None">
      <summary>
              没有访问权限。
            </summary>
    </member>
    <member name="T:System.Messaging.HashAlgorithm">
      <summary>
              指定对消息进行身份验证时消息队列所用的哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.None">
      <summary>
              未使用哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md2">
      <summary>
              MD2 哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md4">
      <summary>
              MD4 哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md5">
      <summary>
              MD5 哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha">
      <summary>
              SHA 哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Mac">
      <summary>
              MAC 键控哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha256">
      <summary>
              SHA256 哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha384">
      <summary>
              SHA384 哈希算法。
            </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha512">
      <summary>
              SHA512 哈希算法。
            </summary>
    </member>
    <member name="T:System.Messaging.IMessageFormatter">
      <summary>
              序列化或反序列化从消息队列的消息正文的对象。
            </summary>
    </member>
    <member name="T:System.Messaging.Message">
      <summary>
              提供对定义消息队列的消息所需的属性访问。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageEnumerator">
      <summary>
              提供一个只进游标，用于枚举消息队列中的消息。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageLookupAction">
      <summary>
              指定要扫视或接收消息队列中的消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Current">
      <summary>
              读取当前消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Next">
      <summary>
              阅读以下消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Previous">
      <summary>
              读取上述消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.First">
      <summary>
              读取队列中的第一个消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Last">
      <summary>
              读取队列中的最后一个消息。
            </summary>
    </member>
    <member name="T:System.Messaging.MessagePriority">
      <summary>
              指定消息队列将应用于一条消息时正在传送到队列，并将消息插入目标队列时的优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Lowest">
      <summary>
              消息优先级最低。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryLow">
      <summary>
              之间 <see langword="Low" /> 和 <see langword="Lowest" /> 消息优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Low">
      <summary>
              较短的消息优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Normal">
      <summary>
              普通消息优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.AboveNormal">
      <summary>
              之间 <see cref="F:System.Messaging.MessagePriority.High" /> 和 <see cref="F:System.Messaging.MessagePriority.Normal" /> 消息优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.High">
      <summary>
              高消息优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryHigh">
      <summary>
              之间 <see langword="Highest" /> 和 <see langword="High" /> 消息优先级。
            </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Highest">
      <summary>
              消息优先级最高。
            </summary>
    </member>
    <member name="T:System.Messaging.MessagePropertyFilter">
      <summary>
              控制并选择在查看或接收消息从消息队列时，检索的属性。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueue">
      <summary>
              在消息队列服务器提供对队列的访问。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessControlEntry">
      <summary>
              指定为受信者 （用户、 组或计算机） 来执行消息队列任务的访问权限。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessRights">
      <summary>
              指定一组特定的操作对消息队列的特定于对象的访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteMessage">
      <summary>
              用于从队列中删除消息的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.PeekMessage">
      <summary>
              有权查看的消息从队列。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.WriteMessage">
      <summary>
              用于将消息发送到队列的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteJournalMessage">
      <summary>
              从日志队列中删除消息的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.SetQueueProperties">
      <summary>
              修改队列的属性的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueueProperties">
      <summary>
              用于读取队列的属性的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteQueue">
      <summary>
              删除队列的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueuePermissions">
      <summary>
              用于读取队列权限的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ChangeQueuePermissions">
      <summary>
              修改队列权限的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.TakeQueueOwnership">
      <summary>
              取得所有权的队列的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveMessage">
      <summary>
              用于从队列接收消息的权限。
               这包括删除和查看消息的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveJournalMessage">
      <summary>
              从日志队列接收消息的权限。
               这包括删除和查看日志队列中的消息的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericRead">
      <summary>
              组成 <see langword="GetQueueProperties" />, ，<see langword="GetQueuePermissions" />, ，<see langword="ReceiveMessage" />, ，和 <see langword="ReceiveJournalMessage" />。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericWrite">
      <summary>
              组成 <see langword="GetQueueProperties" />, ，<see langword="GetQueuePermissions" />, ，和 <see langword="WriteMessage" />。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.FullControl">
      <summary>
              队列的全部权限。
               枚举中的所有其他权利的联合。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueCriteria">
      <summary>
              筛选消息队列时执行查询时使用 <see cref="T:System.Messaging.MessageQueue" /> 类的 <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> 方法。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueEnumerator">
      <summary>
              提供一个只进游标，用于枚举消息队列中的消息。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueErrorCode">
      <summary>
              标识的错误发生在消息队列应用程序内，生成的源 <see cref="T:System.Messaging.MessageQueueException" /> 异常。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Base">
      <summary>
              消息队列不返回此错误代码。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Generic">
      <summary>
              消息正文︰ 一般性错误。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Property">
      <summary>
              消息正文︰ 一个或多个传递的属性是无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotFound">
      <summary>
              消息正文︰ 队列未在目录服务中注册。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueExists">
      <summary>
              消息正文︰ 已注册具有相同路径名的队列。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidParameter">
      <summary>
              消息正文︰ 传递给函数的参数无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidHandle">
      <summary>
              消息正文︰ 无效的句柄传递给函数。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.OperationCanceled">
      <summary>
              消息正文︰ 无法完成之前已经取消了操作。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SharingViolation">
      <summary>
              消息正文︰ 发生共享冲突。
               队列已被打开用于接收排他锁。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ServiceNotAvailable">
      <summary>
              消息正文︰ 消息队列服务不可用。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineNotFound">
      <summary>
              消息正文︰ 找不到指定的计算机。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSort">
      <summary>
              消息正文︰ 指定非法的排序 （例如，重复的列）。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalUser">
      <summary>
              消息正文︰ 用户具有无效的用户名。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoDs">
      <summary>
              消息正文︰ 与此站点控制器没有连接。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueuePathName">
      <summary>
              消息正文︰ 队列路径名无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyValue">
      <summary>
              消息正文︰ 无效的属性值。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyVt">
      <summary>
              消息正文︰ 无效的 VARTYPE 值。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BufferOverflow">
      <summary>
              消息正文︰ 提供给 mqreceivemessage 的、 检索消息正文是太小的缓冲区。
               消息不会从队列删除，并且适合在缓冲区中的消息正文的一部分已复制。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IOTimeout">
      <summary>
              消息正文︰ 接收或异步扫视消息超时时间已过期。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCursorAction">
      <summary>
              消息正文︰ MQ_ACTION_PEEK_NEXT 指定给 mqreceivemessage 的、 不能使用与当前光标位置。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived">
      <summary>
              消息正文︰ 另一个进程或另一次调用，用于接收消息而无需使用此游标的游标当前指向一条消息已删除队列中。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalFormatName">
      <summary>
              消息正文︰ 给定的格式名称无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FormatNameBufferTooSmall">
      <summary>
              消息正文︰ 提供给 API 的格式名缓冲区已太小而无法容纳格式名。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation">
      <summary>
              消息正文︰ 不支持所请求的操作为指定的格式名称。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSecurityDescriptor">
      <summary>
              消息正文︰ 指定的安全描述符不是有效的安全描述符。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderIdBufferTooSmall">
      <summary>
              消息正文︰ 为用户标识符属性传递的缓冲区是太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SecurityDescriptorBufferTooSmall">
      <summary>
              消息正文︰ 传递给 MQGetQueueSecurity 的缓冲区的大小是太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotImpersonateClient">
      <summary>
              消息正文︰ RPC 服务器无法模拟客户端应用程序，因此无法验证安全凭据。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.AccessDenied">
      <summary>
              消息正文︰ 访问被拒绝。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld">
      <summary>
              消息正文︰ 客户端没有所需的权限执行该操作。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientResources">
      <summary>
              消息正文︰ 资源不足，无法执行操作。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UserBufferTooSmall">
      <summary>
              消息正文︰ 请求失败，因为用户缓冲区太小而无法容纳返回的信息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageStorageFailed">
      <summary>
              消息正文︰ 无法存储可恢复或日志消息。
               不发送消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderCertificateBufferTooSmall">
      <summary>
              消息正文: 用户证书属性所传递的缓冲区是太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidCertificate">
      <summary>
              消息正文︰ 用户证书无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate">
      <summary>
              消息正文︰ 内部消息队列证书已损坏。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate">
      <summary>
              消息正文︰ 用户的内部消息队列证书不存在。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedSecurityData">
      <summary>
              消息正文︰ 加密函数失败。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore">
      <summary>
              消息正文︰ 个人证书存储区已损坏。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption">
      <summary>
              消息正文︰ 计算机不支持加密操作。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BadSecurityContext">
      <summary>
              消息正文︰ 错误的安全上下文。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid">
      <summary>
              消息正文︰ 无法获取从线程令牌的 SID 信息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo">
      <summary>
              消息正文︰ 无法获取用户的帐户信息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCriteriaColumns">
      <summary>
              消息正文︰ 无效 MQCOLUMNS 参数。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyId">
      <summary>
              消息正文︰ 无效的属性标识符值。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRelation">
      <summary>
              消息正文︰ 限制中的无效的关系值。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertySize">
      <summary>
              消息正文︰ 属性缓冲区大小无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRestrictionPropertyId">
      <summary>
              消息正文︰ 无效 propid MQRESTRICTION 参数中的值。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueueProperties">
      <summary>
              消息正文︰ 非法 MQQUEUEPROPS 参数，或者 null 或零个属性使用。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PropertyNotAllowed">
      <summary>
              消息正文︰ 所请求的操作的属性无效 
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientProperties">
      <summary>
              消息正文︰ 在输入参数中指定的操作不是所有必需的属性。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineExists">
      <summary>
              消息正文︰ 在站点中已存在具有相同名称的计算机。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalMessageProperties">
      <summary>
              消息正文︰ 非法 MQQMPROPS 参数，或者 null 或零个属性使用。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsIsFull">
      <summary>
              消息正文︰ 目录服务已满。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsError">
      <summary>
              消息正文︰ 内部目录服务错误。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidOwner">
      <summary>
              消息正文︰ 无效的对象所有者。
               例如 CreateQueue 失败，因为队列管理器对象无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode">
      <summary>
              消息正文︰ 不支持指定的访问模式。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ResultBufferTooSmall">
      <summary>
              消息正文︰ 提供的结果缓冲区而言太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse">
      <summary>
              消息正文︰ 不能删除已连接的网络;它正在使用中。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer">
      <summary>
              消息正文︰ 对象所有者没有响应。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable">
      <summary>
              消息正文︰ 对象所有者不可访问。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotAvailable">
      <summary>
              消息正文︰ 从驻留在远程计算机上的队列进行读取时出错。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DtcConnect">
      <summary>
              消息正文︰ 无法连接到 MS DTC。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionImport">
      <summary>
              消息正文︰ 无法导入该事务。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionUsage">
      <summary>
              消息正文︰ 错误的事务使用。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionSequence">
      <summary>
              消息正文︰ 错误的事务操作序列。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MissingConnectorType">
      <summary>
              消息正文︰ 发送确认消息或安全消息时，连接器类型是必需的。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.StaleHandle">
      <summary>
              消息正文︰ 重新启动队列管理器服务。
               队列句柄已过时，并应关闭。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionEnlist">
      <summary>
              消息正文︰ 无法登记事务。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueDeleted">
      <summary>
              消息正文︰ 队列已被删除。
               无法再使用此队列实例接收消息。
               应该关闭队列。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalContext">
      <summary>
              消息正文︰ 无效的上下文参数。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSortPropertyId">
      <summary>
              消息正文︰ 无效 propid MQSORTSET 中的值。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.LabelBufferTooSmall">
      <summary>
              消息正文︰ 提供给 API 的标签缓冲区已太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisServerEmpty">
      <summary>
              消息正文︰ MQIS 服务器 （在注册表中） 的列表为空。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode">
      <summary>
              消息正文︰ MQIS 数据库处于只读模式。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SymmetricKeyBufferTooSmall">
      <summary>
              消息正文︰ 为对称密钥的属性传递的缓冲区是太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SignatureBufferTooSmall">
      <summary>
              消息正文︰ 为签名属性传递的缓冲区是太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ProviderNameBufferTooSmall">
      <summary>
              消息正文︰ 为提供程序名称属性传递的缓冲区是太小。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalOperation">
      <summary>
              消息正文︰ 操作外部消息队列系统无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WriteNotAllowed">
      <summary>
              消息正文︰ 正在安装另一台 MQIS 服务器;编写这次不允许对数据库的操作。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WksCantServeClient">
      <summary>
              消息正文︰ 独立于消息队列的客户端无法为依赖于消息队列的客户端提供服务。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow">
      <summary>
              消息正文︰ 由该消息队列服务器提供服务的从属客户端的数量已达到其上限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted">
      <summary>
              消息正文︰ LQS 中队列 The.ini 文件已损坏，已被删除。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable">
      <summary>
              消息正文︰ 远程计算机不可用。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedOperation">
      <summary>
              消息正文︰ 工作组安装计算机不支持此操作。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported">
      <summary>
              消息正文︰ 由消息队列不支持加密服务提供程序。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor">
      <summary>
              消息正文︰ 无法为其设置的加密密钥的安全描述符。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CertificateNotProvided">
      <summary>
              消息正文︰ 用户试图发送没有证书的已经过身份验证的消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QDnsPropertyNotSupported">
      <summary>
              DNS 属性不支持作为队列搜索条件。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore">
      <summary>
              消息正文︰ 无法创建内部证书的证书存储区。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore">
      <summary>
              消息正文︰ 无法打开证书存储区的内部证书。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation">
      <summary>
              消息正文︰ 操作无效的消息队列的服务对象。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid">
      <summary>
              消息正文︰ 无法将"添加 Guid"权限授予当前用户。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm">
      <summary>
              消息正文︰ 无法加载 MSMQOCM。DLL 库。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm">
      <summary>
              消息正文︰ MSMQOCM 在找不到入口点。DLL 库。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc">
      <summary>
              消息正文︰ 无法找到消息队列服务器在域控制器上。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotJoinDomain">
      <summary>
              消息正文︰ 无法将联接在 Windows 2000 域上的消息队列企业。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog">
      <summary>
              消息正文︰ 无法在指定的全局编录服务器上创建一个对象。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.GuidNotMatching">
      <summary>
              消息正文︰ 无法创建使用 GUID 相匹配的计算机安装消息队列配置对象。
               必须卸载消息队列，然后重新安装它。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyNotFound">
      <summary>
              消息正文︰ 找不到计算机的公共密钥。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist">
      <summary>
              消息正文︰ 计算机的公钥不存在。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPrivateProperties">
      <summary>
              私有属性参数值无效。
               这可能是因为它的值为 null 或没有指定属性。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain">
      <summary>
              消息正文︰ 找不到指定的域中的全局编录服务器。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog">
      <summary>
              消息正文︰ 未能在全局编录域控制器上找到消息队列服务器。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName">
      <summary>
              消息正文︰ 无法检索本地计算机的可分辨的名称。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotHashDataEx">
      <summary>
              消息正文︰ 找不到已经过身份验证的消息的哈希数据。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSignDataEx">
      <summary>
              消息正文︰ 无法在发送已经过身份验证的消息之前签署数据。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateHashEx">
      <summary>
              消息正文︰ 无法创建经过身份验证的消息哈希对象。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx">
      <summary>
              消息正文︰ 已接收消息的签名无效。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageNotFound">
      <summary>
              消息正文︰ 找不到指定的消息。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueException">
      <summary>
              发生 Microsoft 消息队列内部错误时引发的异常。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueInstaller">
      <summary>
              允许您安装和配置您的应用程序运行所需的队列。
               此类由调用安装实用程序，例如，InstallUtil.exe，在安装时 <see cref="T:System.Messaging.MessageQueue" />。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermission">
      <summary>
              允许控制消息传送的代码访问权限。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAccess">
      <summary>
              定义使用的访问级别 <see cref="N:System.Messaging" /> 权限类。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.None">
      <summary>
              <see cref="T:System.Messaging.MessageQueue" /> 不具有任何权限。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Browse">
      <summary>
              <see cref="T:System.Messaging.MessageQueue" /> 可以查看可用的队列。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Send">
      <summary>
              <see cref="T:System.Messaging.MessageQueue" /> 可以查看的队列，并将消息发送。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Peek">
      <summary>
              <see cref="T:System.Messaging.MessageQueue" /> 可以查看的队列，并读取队列中的消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Receive">
      <summary>
              <see cref="T:System.Messaging.MessageQueue" /> 可查看可用的队列读取该队列中的消息和接收消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Administer">
      <summary>
              <see cref="T:System.Messaging.MessageQueue" /> 可以查看可用的队列读取的消息在队列中，并发送和接收消息。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAttribute">
      <summary>
              允许声明性 <see cref="T:System.Messaging.MessageQueue" /> 权限检查。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntry">
      <summary>
              定义为消息设置的代码访问安全权限的最小单位。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntryCollection">
      <summary>
              包含 <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> 对象的强类型集合。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransaction">
      <summary>
              提供消息队列内部事务。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionStatus">
      <summary>
              指定消息队列内部事务的状态。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Aborted">
      <summary>
              该事务已中止，并且在通知所有参与者。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Committed">
      <summary>
              该事务已提交并已通知所有参与者。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Initialized">
      <summary>
              该事务已初始化。
               它具有尚未启动。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Pending">
      <summary>
              已启动事务。
               它具有尚未已提交或回滚。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionType">
      <summary>
              指定消息队列事务的类型。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.None">
      <summary>
              操作将不是事务性的。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Automatic">
      <summary>
              Microsoft Transaction Server (MTS) 或 COM + 1.0 服务使用的事务类型。
               如果已经有 MTS 事务上下文，它将在发送或接收消息时使用。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Single">
      <summary>
              用于为单个内部事务的事务类型。
            </summary>
    </member>
    <member name="T:System.Messaging.MessageType">
      <summary>
              标识一条消息的类型。
               一条消息可以是典型的消息队列消息、 （到达和读取） 值为正或负号 （到达和读取） 确认消息或报告消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageType.Acknowledgment">
      <summary>
              确认消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageType.Normal">
      <summary>
              普通消息队列消息。
            </summary>
    </member>
    <member name="F:System.Messaging.MessageType.Report">
      <summary>
              报告消息。
            </summary>
    </member>
    <member name="T:System.Messaging.MessagingDescriptionAttribute">
      <summary>
              指定属性或事件的描述。
            </summary>
    </member>
    <member name="T:System.Messaging.PeekAction">
      <summary>
              指示是否要查看当前消息在队列中或下一条消息。
            </summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Current">
      <summary>
              扫视队列中的当前消息。
            </summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Next">
      <summary>
              扫视队列中下一条消息。
            </summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventArgs">
      <summary>
              为 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件提供数据。
               当异步扫视操作调用事件处理程序时，此类的实例将传递给处理程序。
            </summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventHandler">
      <summary>
              表示将用来处理 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 的 <see cref="T:System.Messaging.MessageQueue" /> 事件的方法。
            </summary>
      <param name="sender">
                该事件的源 <see cref="T:System.Messaging.MessageQueue" />。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Messaging.PeekCompletedEventArgs" />。
              </param>
    </member>
    <member name="T:System.Messaging.QueueAccessMode">
      <summary>
              指定的访问模式 <see cref="T:System.Messaging.MessageQueue" /> 可以在创建时。
            </summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Send">
      <summary>
              队列只能发送消息。
            </summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Peek">
      <summary>
              消息可以只查看队列。
            </summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Receive">
      <summary>
              队列可以扫视或接收消息。
            </summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.PeekAndAdmin">
      <summary>
              队列可以扫视的消息。
               它也可以被清除。
            </summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.ReceiveAndAdmin">
      <summary>
              队列可以接收消息。
               它也可以被清除。
            </summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.SendAndReceive">
      <summary>
              队列可以查看、 接收或发送消息。
            </summary>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventArgs">
      <summary>
              为 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 事件提供数据。
               当异步接收操作调用事件处理程序时，此类的实例传递给处理程序。
            </summary>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventHandler">
      <summary>
              表示将用来处理 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 的 <see cref="T:System.Messaging.MessageQueue" /> 事件的方法。
            </summary>
      <param name="sender">
                该事件的源 <see cref="T:System.Messaging.MessageQueue" />。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Messaging.ReceiveCompletedEventArgs" />。
              </param>
    </member>
    <member name="T:System.Messaging.SecurityContext">
      <summary>
              表示队列中消息的安全上下文。
            </summary>
    </member>
    <member name="T:System.Messaging.StandardAccessRights">
      <summary>
              指定一组与大多数类型的安全对象所共有的操作对应的标准访问权限。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Delete">
      <summary>
              用于删除该对象的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ReadSecurity">
      <summary>
              读取对象的安全描述符中的信息的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.WriteSecurity">
      <summary>
              修改安全描述符中的自由访问控制列表 (DACL) 的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Synchronize">
      <summary>
              用于同步使用此对象的权限。
               这使线程等待，直到此对象处于特定状态。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ModifyOwner">
      <summary>
              用于更改对象的安全描述符中的所有者的权限。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Read">
      <summary>
              读取对象的安全描述符中的信息的权限。
              <see langword="Read" /> 当前被定义为等于 <see langword="ReadSecurity" />。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Write">
      <summary>
              读取对象的安全描述符中的信息的权限。
              <see langword="Write" /> 当前被定义为等于 <see langword="ReadSecurity" />。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Execute">
      <summary>
              读取对象的安全描述符中的信息的权限。
               在 Windows 2000 和 Windows NT 上，安全描述符包含安全对象的安全信息。
               它标识对象的所有者和主要组。
              <see langword="Execute" /> 当前被定义为等于 <see langword="ReadSecurity" />。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Required">
      <summary>
              将组合 <see langword="Delete" />, ，<see langword="ReadSecurity" />, ，<see langword="WriteSecurity" />, ，和 <see langword="ModifyOwner" /> 访问。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.All">
      <summary>
              将组合 <see langword="Delete" />, ，<see langword="ReadSecurity" />, ，<see langword="WriteSecurity" />, ，<see langword="ModifyOwner" />, ，和 <see langword="Synchronize" /> 访问。
            </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.None">
      <summary>
              没有访问权限。
            </summary>
    </member>
    <member name="T:System.Messaging.Trustee">
      <summary>
              指定用户帐户、 组帐户或登录会话的访问控制项适用。
            </summary>
    </member>
    <member name="T:System.Messaging.TrusteeType">
      <summary>
              指定受信者的类型。
            </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Unknown">
      <summary>
              受信者类型是未知的但不是一定无效。
            </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.User">
      <summary>
              受信者是用户。
            </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Group">
      <summary>
              受信者是一组。
            </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Domain">
      <summary>
              受信者是一个域。
            </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Alias">
      <summary>
              受信者是别名。
            </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Computer">
      <summary>
              受信者是一台计算机。
            </summary>
    </member>
    <member name="T:System.Messaging.XmlMessageFormatter">
      <summary>
              序列化和反序列化对象到或从使用基于 XSD 架构定义的 XML 格式的消息正文。
            </summary>
    </member>
  </members>
</doc>