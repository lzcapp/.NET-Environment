<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic</name>
  </assembly>
  <members>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>
              在网络可用性更改时发生。
            </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>
              当在应用程序关闭时出现。
            </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>
              当应用程序开始时发生。
            </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>
              正在尝试启动单实例应用程序和应用程序已处于活动状态时发生。
            </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>
              在应用程序遇到未经处理的异常时发生。
            </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>
              在网络可用性更改时发生。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>
              返回 （或未初始化） 的静态本地成员的初始化标志的状态。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>
              指示 <see langword="Abort" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>
              指示 <see langword="Abort" />, ，<see langword="Retry" />, ，和 <see langword="Ignore" /> 按钮将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>
              指示消息框中，将显示为模式对话框框中时 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>
              指示该文件已更改自文件访问函数的最后一个备份操作。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>
              指示 variant 的对象的类型是一个数组。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>
              表示一个退格符用于打印和显示功能。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>
              指定在比较函数的调用时，应执行二进制比较。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>
              指示 variant 的对象的类型是 <see langword="Boolean" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>
              指示 variant 的对象的类型是 <see langword="Byte" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>
              指示 <see langword="Cancel" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>
              表示一个回车符用于打印和显示功能。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>
              指示将关键消息图标时，所显示 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>
              表示与打印一个换行字符和显示功能结合使用回车符。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>
              指示 variant 的对象的类型是 <see langword="Currency" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>
              指示 variant 的对象的类型是 <see langword="Date" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>
              指示 variant 的对象的类型是 <see langword="Decimal" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>
              指示当消息框出现时，为默认按钮选择最左侧的按钮。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>
              指示当消息框出现时，为默认按钮选择左起第二个按钮。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>
              指示当消息框出现时，为默认按钮选择左侧起的第三个按钮。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>
              指示该文件的目录或文件访问函数的文件夹。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>
              指示 variant 的对象的类型是 <see langword="Double" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>
              指示 variant 的对象的类型是 <see langword="Empty" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>
              指示感叹号图标将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>
              指示 <see langword="Boolean" /> 值 <see langword="False" /> 数字格式的函数调用时，应使用。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>
              指示包含至少四天的年份的第一周应使用与日期相关的函数调用时。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>
              指示调用与日期相关的函数时，应使用该年的第一个完整的周。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>
              表示，其中 1 月 1 日发生与日期相关的函数调用时，应使用该年的周。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>
              表示用于打印功能的换页符字符。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>
              指定星期五应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>
              指示是否应将当前区域性的常规日期格式时使用 <see langword="FormatDateTime" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>
              指定属性值应为检索时 <see langword="CallByName" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>
              指示该文件是隐藏的文件的文件访问函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>
              指示是否隐藏的窗口样式对所调用程序何时 <see langword="Shell" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>
              指示应将平假名字符转换为片假名字符时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>
              指示 <see langword="Ignore" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>
              指示信息图标将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>
              指示 variant 的对象的类型是 <see langword="Integer" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>
              指示应将字符转换为平假名片假名字符时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>
              指示属性值应设置为一个对象实例时 <see langword="CallByName" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>
              表示一个换行符字符对打印和显示功能。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>
              指示应将字符转换为使用语言规则进行大小写，而不是文件系统时的大小写规则 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>
              指示 variant 的对象类型为 <see langword="Long" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>
              指示是否应将当前区域性的长日期格式时使用 <see langword="FormatDateTime" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>
              指示是否应将当前区域性的长时间格式时使用 <see langword="FormatDateTime" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>
              指示应将字符转换为小写时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>
              指示窗口样式最大化并将焦点提供给调用程序何时 <see langword="Shell" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>
              指定时，应调用一种方法 <see langword="CallByName" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>
              指示焦点提供给所调用的窗口样式已最小化进行编程时 <see langword="Shell" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>
              指示窗口样式最小化而无需焦点提供给调用程序何时 <see langword="Shell" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>
              指定星期一应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>
              指示 <see langword="Help" /> 按钮将处于时显示 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>
              指示，文本将是右对齐时<see langword="MsgBox" />调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>
              指示右到左读取文本 （希伯来语和阿拉伯语系统） 将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>
              指示该消息框将显示在前台时 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>
              表示应转换的宽 （双字节） 字符来缩小范围 （单字节） 字符时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>
              表示一个新行字符对打印和显示功能。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>
              指示 <see langword="No" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>
              指示该文件是文件访问功能的普通文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>
              指示窗口样式为正常并且焦点提供给调用程序何时 <see langword="Shell" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>
              指示窗口样式为正常而无需焦点提供给调用程序何时 <see langword="Shell" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>
              指示 variant 的对象的类型是<see langword="Nothing" />。
               返回<see langword="VarType" />函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>
              表示一个 null 字符对打印和显示功能。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>
              表示一个零长度字符串用于打印和显示功能，以及用于调用外部过程。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>
              指示 variant 的对象的类型是 <see langword="Object" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>
              表示对象的错误号。
               用户定义的错误号应大于此值。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>
              指示 <see langword="OK" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>
              指示 <see langword="OK" /> 和 <see langword="Cancel" /> 按钮将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>
              它仅指示 <see langword="OK" /> 按钮将处于时显示 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>
              指示应将字符串中的每个词的第一个字母转换为大写，并将其余字符到小写时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>
              指示工作流问号图标将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>
              指示该文件是文件访问功能的只读文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>
              指示 <see langword="Retry" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>
              指示 <see langword="Retry" /> 和 <see langword="Cancel" /> 按钮将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>
              指定星期六应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>
              指示时，应设置属性值 <see langword="CallByName" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>
              指示是否应将当前区域性的短日期格式时使用 <see langword="FormatDateTime" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>
              指示是否应将当前区域性的短时间格式时使用 <see langword="FormatDateTime" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>
              指示应将字符转换为简体中文时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>
              指示 variant 的对象的类型是 <see langword="Single" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>
              指示 variant 的对象的类型是 <see langword="String" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>
              指定星期日应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>
              指示该文件是文件访问函数的系统文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>
              指示消息框中，将显示为模式对话框框中时 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>
              表示一个选项卡用于打印和显示功能。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>
              指示在比较函数的调用时应执行文本比较。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>
              指定 （星期四） 应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>
              指示应将字符转换为传统中文 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>
              指示 <see langword="Boolean" /> 值 <see langword="True" /> 数字格式的函数调用时，应使用。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>
              指定 （星期二） 应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>
              指示应将字符转换为大写时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>
              指示默认值 <see langword="Boolean" /> 数字格式的函数调用时，应使用的值。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>
              指示 variant 的对象的类型的用户定义的类型。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>
              指示一周指定您的系统为该年的第一周应使用与日期相关的函数调用时。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>
              表示一天指定您的系统为一周的第一天应使用与日期相关的函数调用时。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>
              指示 variant 的对象的类型是 <see langword="Variant" />。
               返回 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>
              表示用于打印功能回车符。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>
              指示文件访问功能的卷标签文件属性。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>
              指定 （星期三） 应该用作与日期相关的函数调用时一周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>
              指示应将窄 （单字节） 字符转换为宽 （双字节） 字符时 <see langword="StrConv" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>
              指示 <see langword="Yes" /> 在消息框中所单击的按钮。
               返回 <see langword="MsgBox" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>
              指示 <see langword="Yes" /> 和 <see langword="No" /> 按钮将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>
              指示 <see langword="Yes" />, ，<see langword="No" />, ，和 <see langword="Cancel" /> 按钮将显示当 <see langword="MsgBox" /> 调用函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>
              表示退格符 (<see langword="vbBack" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>
              表示一个回车符 (<see langword="vbCr" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>
              表示一个回车符/换行符组合 (<see langword="vbCrLf" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>
              表示窗体换页符用于打印功能 (<see langword="vbFormFeed" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>
              表示换行符 (<see langword="vbLf" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>
              表示新行字符 (<see langword="vbNewLine" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>
              代表 null 字符 (<see langword="vbNullChar" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>
              表示双引号字符。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>
              表示制表符 (<see langword="vbTab" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>
              表示垂直制表符 (<see langword="vbVerticalTab" />)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>
              此字段支持Visual Basic<see langword="Print" />和<see langword="PrintLine" />函数。 
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>
              此字段支持Visual Basic<see langword="Print" />和<see langword="PrintLine" />函数。 
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>
              更改为字符串操作和字符串格式设置使用当前线程的区域性。
            </summary>
      <param name="cultureName">
                <see langword="String" />。
                 字符串形式的区域性名称。
                 有关可能的名称的列表，请参阅<see cref="T:System.Globalization.CultureInfo" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cultureName" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="cultureName" /> 不是有效的区域性名称。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>
              用于检索特定于区域性的资源使用当前线程区域性进行了更改。
            </summary>
      <param name="cultureName">
                <see langword="String" />。
                 字符串形式的区域性名称。
                 有关可能的名称的列表，请参阅<see cref="T:System.Globalization.CultureInfo" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="cultureName" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="cultureName" /> 不是有效的区域性名称。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>
              返回指定的环境变量的值。
            </summary>
      <param name="name">
                一个 <see langword="String" /> 包含环境变量的名称。
              </param>
      <returns>
              一个 <see langword="String" /> 包含同名的环境变量的值 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="name" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  指定的环境变量 <paramref name="name" /> 不存在。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用代码没有 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 与 <see langword="Read" /> 访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>
              初始化的新实例<see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />与指定的程序集信息的类。
            </summary>
      <param name="currentAssembly">
                <see cref="T:System.Reflection.Assembly" />。
                 为要获取其信息的程序集。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
              获取一个值，该值指示此转换器是否可以将对象转换为使用上下文的指定的目标类型。
            </summary>
      <param name="context">
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" />提供格式上下文的对象。
              </param>
      <param name="destinationType">
                A<see cref="T:System.Type" />表示你想要将转换为的类型的对象。
              </param>
      <returns>
              A<see cref="T:System.Boolean" />对象，指示此转换器是否能够执行转换。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
              将给定的对象转换为另一种类型。
            </summary>
      <param name="context">
                格式化程序上下文。
              </param>
      <param name="culture">
                到的区域性<paramref name="value" />将被转换。
              </param>
      <param name="value">
                要转换的对象。
              </param>
      <param name="destinationType">
                对象要转换为的类型。
              </param>
      <returns>
              被转换的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationType" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  无法执行转换。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用序列化数据初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。
            </summary>
      <param name="info">
                存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，它包含有关源或目标的上下文信息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>
              用指定的错误消息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>
              使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> 类的新实例。
            </summary>
      <param name="message">
                A<see cref="T:System.String" />对错误进行描述的对象。
              </param>
      <param name="inner">
                <see cref="T:System.Exception" />导致当前异常的对象。
                 如果 <see cref="P:System.Exception.InnerException" /> 参数不是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="Catch" /> 块中引发当前异常。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用序列化数据初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。
            </summary>
      <param name="info">
                存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，它包含有关源或目标的上下文信息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>
              用指定的错误消息初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>
              使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> 类的新实例。
            </summary>
      <param name="message">
                一个 <see cref="T:System.String" /> 描述该错误的对象。
              </param>
      <param name="inner">
                <see cref="T:System.Exception" /> 对象，它是当前异常的原因。
                 如果 <see cref="P:System.Exception.InnerException" /> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 catch 块中引发当前异常。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> 类的新实例。
            </summary>
      <param name="args">
                一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，其中包含应用程序的命令行参数。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 类的新实例。
            </summary>
      <param name="args">
                一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象，它包含后面的应用程序实例的命令行参数。
              </param>
      <param name="bringToForegroundFlag">
                一个 <see cref="T:System.Boolean" /> ，该值指示第一个应用程序实例是否应进入在退出异常处理程序时的前景。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> 类的新实例。
            </summary>
      <param name="exitApplication">
                一个 <see cref="T:System.Boolean" /> ，指示是否应用程序应在退出时的异常处理程序。
              </param>
      <param name="exception">
                已发生的 <see cref="T:System.Exception" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser">
      <summary>
              将线程的当前主体设置为启动了应用程序的 Windows 用户。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)">
      <summary>
              确定当前用户是否属于指定的角色。
            </summary>
      <param name="role">
                内置的 Windows 角色对其进行检查的成员身份。
              </param>
      <returns>
              <see langword="True" /> 如果当前用户是指定角色，则成员否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>
              确定当前用户是否属于指定的角色。
            </summary>
      <param name="role">
                对其进行检查的成员身份角色的名称。
              </param>
      <returns>
              <see langword="True" /> 如果当前用户是指定角色，则成员否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WebUser.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.WebUser" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> 与指定的身份验证模式的类。
            </summary>
      <param name="authenticationMode">
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />。
                 指定应用程序的身份验证模式。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>
              处理当前在消息队列中的所有 Windows 消息。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>
              隐藏应用程序的初始屏幕。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>
              当在派生类中重写时，允许设计器发出配置初始屏幕和主窗体的代码。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>
              当在派生类中重写时，允许设计器发出初始化初始屏幕的代码。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>
              设置的视觉样式、 文本显示样式和当前主体对于主应用程序线程 （如果该应用程序使用 Windows 身份验证），并初始化初始屏幕中，如果已定义。
            </summary>
      <param name="commandLineArgs">
                一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see langword="String" />, ，其中的命令行参数包含与当前应用程序的字符串。
              </param>
      <returns>
              一个 <see cref="T:System.Boolean" /> ，该值指示是否应继续应用程序启动。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>
              当主应用程序已准备好开始运行，在初始化完成后提供开始点。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>
              当在派生类中重写，允许在应用程序关闭时运行代码。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>
              当在派生类中重写，允许应用程序启动时运行的代码。
            </summary>
      <param name="eventArgs">
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />。
                 包含应用程序的命令行参数，该值指示是否应取消应用程序启动。
              </param>
      <returns>
              一个 <see cref="T:System.Boolean" /> ，该值指示是否应用程序应继续执行启动。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>
              当在派生类中重写，允许单实例应用程序的后续实例启动时运行的代码。
            </summary>
      <param name="eventArgs">
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />。
                 包含后续应用程序实例的命令行参数，并且指示第一个应用程序实例是否应进入在退出异常处理程序时的前景。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>
              当在派生类中重写，允许在应用程序中发生未经处理的异常时运行代码。
            </summary>
      <param name="e">
                <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />。
              </param>
      <returns>
              一个 <see cref="T:System.Boolean" /> ，该值指示是否 <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> 引发事件。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>
              设置并启动 Visual Basic 应用程序模型。
            </summary>
      <param name="commandLine">
                类型的数组 <see langword="String" />。
                 从命令行 <see langword="Sub Main" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>
              确定应用程序是否具有定义的初始屏幕，如果是这样，显示内容。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>
              创建并返回一个新Visual Basic<see cref="T:Microsoft.VisualBasic.Collection" />对象。 
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>
              将元素添加到<see langword="Collection" />对象。
            </summary>
      <param name="Item">
                必需。
                 指定要添加到集合的元素的任何类型的对象。
              </param>
      <param name="Key">
                可选。
                 唯一<see langword="String" />表达式，它指定可以使用而不是位置的索引访问集合中的此新元素的键的字符串。
              </param>
      <param name="Before">
                可选。
                 指定集合中的相对位置的表达式。
                 要添加该元素将之前标识的元素集合中放置<paramref name="Before" />自变量。
                 如果<paramref name="Before" />是一个数值表达式，它必须是介于 1 到值的集合的<see cref="P:Microsoft.VisualBasic.Collection.Count" />属性。
                 如果<paramref name="Before" />是<see langword="String" />表达式，则它必须对应于所引用的元素添加到集合时指定的键的字符串。
                 不能同时指定<paramref name="Before" />和<paramref name="After" />。
              </param>
      <param name="After">
                可选。
                 指定集合中的相对位置的表达式。
                 要添加该元素将标识的元素在集合中放置<paramref name="After" />自变量。
                 如果<paramref name="After" />是一个数值表达式，它必须是介于 1 到值的集合的<see langword="Count" />属性。
                 如果<paramref name="After" />是<see langword="String" />表达式，则它必须对应于引用的元素添加到集合时指定的键的字符串。
                 不能同时指定<paramref name="Before" />和<paramref name="After" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>
              删除所有元素的 Visual Basic<see langword="Collection" />对象。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>
              返回<see langword="Boolean" />值，该值指示是否 Visual Basic<see langword="Collection" />对象包含具有特定键的元素。
            </summary>
      <param name="Key">
                必需。
                 A<see langword="String" />指定要搜索的集合元素的键的表达式。
              </param>
      <returns>
              返回<see langword="Boolean" />值，该值指示是否 Visual Basic<see langword="Collection" />对象包含具有特定键的元素。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>
              返回用于循环访问的枚举数对象的引用 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
            </summary>
      <returns>
              返回用于循环访问的枚举数对象的引用 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>
              移除的元素从 <see langword="Collection" /> 对象。
            </summary>
      <param name="Index">
                数值表达式，指定集合的元素的位置。
                <paramref name="Index" /> 必须为介于 1 到值的集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>
              移除的元素从 <see langword="Collection" /> 对象。
            </summary>
      <param name="Key">
                一个唯一 <see langword="String" /> 指定可用，而不是位置索引访问集合的元素的键的字符串表达式。
                <paramref name="Key" /> 必须对应于 <paramref name="Key" /> 元素添加到集合时指定的参数。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
              从特定的 <see cref="T:Microsoft.VisualBasic.Collection" /> 索引处开始，将 <see cref="T:System.Array" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。
               实现 <see cref="T:System.Collections.ICollection" /> 接口。
            </summary>
      <param name="array">
                一维 <see cref="T:System.Array" /> 从复制的元素的目标 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
                <see cref="T:System.Array" /> 必须具有从零开始的索引。
              </param>
      <param name="index">
                <paramref name="array" /> 中从零开始的索引，从此处开始复制。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="array" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 小于零。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="array" /> 是多维的。
                
                  - 或 - 
                
                  源中的元素数目 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是否大于从的可用空间 <paramref name="index" /> 目标从头到尾 <paramref name="array" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  源类型 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象无法自动转换为目标类型 <paramref name="array" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              返回一个循环访问集合的枚举器。
               实现 <see cref="T:System.Collections.ICollection" /> 接口。
            </summary>
      <returns>
              一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)">
      <summary>
              将项添加到 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <param name="value">
                <see cref="T:System.Object" /> 将添加到 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
      <returns>
              新元素的插入位置。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的。
                
                  - 或 - 
                
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象具有固定的大小。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Clear">
      <summary>
              移除所有项从 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <exception cref="T:System.NotSupportedException">
                  <see cref="T:System.Collections.IList" /> 为只读。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)">
      <summary>
              确定是否 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象包含特定值。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <param name="value">
                <see cref="T:System.Object" /> 要在中查找 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
      <returns>
              返回 <see langword="True" /> 如果 <see cref="T:System.Object" /> 中找到 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
              确定中特定项的索引 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <param name="value">
                <see cref="T:System.Object" /> 要在中查找 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
      <returns>
              索引 <paramref name="value" /> 如果在集合中找到; 否则为-1。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
              插入一个项 <see cref="T:Microsoft.VisualBasic.Collection" /> 的指定索引处的对象。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <param name="index">
                应插入 <paramref name="value" /> 的从零开始的索引。
              </param>
      <param name="value">
                <see cref="T:System.Object" /> 要插入到 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 不是中的有效索引 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的。
                
                  - 或 - 
                
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象具有固定的大小。
                </exception>
      <exception cref="T:System.NullReferenceException">
                  <paramref name="value" /> 中的空引用 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)">
      <summary>
              移除从特定的对象的第一个匹配项 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <param name="value">
                <see cref="T:System.Object" /> 以去除 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
      <exception cref="T:System.NotSupportedException">
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的。
                
                  - 或 - 
                
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象具有固定的大小。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>
              删除 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象的指定索引处的项。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <param name="index">
                要移除的项的从零开始的索引。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 不是中的有效索引 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的。
                
                  - 或 - 
                
                  <see cref="T:Microsoft.VisualBasic.Collection" /> 对象具有固定的大小。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>
              在整个后运行 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象图形已经反序列化。
               实现 <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> 接口。
            </summary>
      <param name="sender">
                启动回调的对象。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              返回序列化所需的数据 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
               实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口。
            </summary>
      <param name="info">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含序列化所需的信息 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，其中包含的源和目标与相关联的序列化流 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>
              初始化 <see langword="ComClassAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>
              初始化 <see langword="ComClassAttribute" /> 类的新实例。
            </summary>
      <param name="_ClassID">
                值进行初始化<see langword="ClassID" />属性，用于唯一标识类。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>
              初始化 <see langword="ComClassAttribute" /> 类的新实例。
            </summary>
      <param name="_ClassID">
                值进行初始化<see langword="ClassID" />属性，用于唯一标识类。
              </param>
      <param name="_InterfaceID">
                值进行初始化<see langword="InterfaceID" />属性，用于唯一标识接口。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
              初始化 <see langword="ComClassAttribute" /> 类的新实例。
            </summary>
      <param name="_ClassID">
                值进行初始化<see langword="ClassID" />属性，用于唯一标识类。
              </param>
      <param name="_InterfaceID">
                值进行初始化<see langword="InterfaceID" />属性，用于唯一标识接口。
              </param>
      <param name="_EventId">
                值进行初始化<see langword="EventID" />用于唯一标识事件的属性。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Boolean" /> 值。
              </param>
      <returns>
              <see langword="Boolean" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>
              返回 <see langword="Boolean" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Boolean" /> 值。
              </param>
      <returns>
              <see langword="Boolean" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Byte" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Byte" /> 值。
              </param>
      <returns>
              <see langword="Byte" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>
              返回 <see langword="Byte" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Byte" /> 值。
              </param>
      <returns>
              <see langword="Byte" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>
              返回 <see langword="CharArray" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="CharArray" /> 值。
              </param>
      <returns>
              <see langword="CharArray" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>
              返回 <see langword="CharArray" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="CharArray" /> 值。
              </param>
      <returns>
              <see langword="CharArray" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Char" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Char" /> 值。
              </param>
      <returns>
              <see langword="Char" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>
              返回 <see langword="Char" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Char" /> 值。
              </param>
      <returns>
              <see langword="Char" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>
              将对象转换为指定的类型。
            </summary>
      <param name="Expression">
                要转换的对象。
              </param>
      <param name="TargetType">
                要将对象转换为类型。
              </param>
      <returns>
              指定的目标类型的对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>
              将对象转换为指定的类型。
            </summary>
      <param name="Expression">
                要转换的对象。
              </param>
      <param name="TargetType">
                若要将对象转换为的类型。
              </param>
      <returns>
              指定的目标类型的对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>
              将转换 <see cref="T:System.Char" /> 为一个字符串，指定为字节数的值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Char" /> 值。
              </param>
      <param name="Count">
                字节数 <see langword="Char" /> 值。
              </param>
      <returns>
              指定值的字符串表示形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>
              将转换 <see cref="T:System.Char" /> 数组转换为一个字符串。
            </summary>
      <param name="Value">
                <see langword="Char" /> 要转换的数组。
              </param>
      <returns>
              指定数组的字符串表示形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>
              将转换的一个子集 <see cref="T:System.Char" /> 数组转换为一个字符串。
            </summary>
      <param name="Value">
                <see langword="Char" /> 要转换的数组。
              </param>
      <param name="StartIndex">
                起始位置的从零开始索引。
              </param>
      <param name="Length">
                以字节为单位的子集的长度。
              </param>
      <returns>
              指定数组中的起始位置为指定长度的字符串表示形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.Boolean" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值。
               返回 <see langword="False" /> 的对象是否为 null; 否则为 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.Boolean" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值。
               返回 <see langword="False" /> 如果字符串为空; 否则为 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.Byte" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Byte" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.Byte" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Byte" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.Char" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Char" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.Char" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Char" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>
              将对象转换到一维 <see cref="T:System.Char" /> 数组。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              一维 <see langword="Char" /> 数组。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>
              将字符串转换到一维 <see cref="T:System.Char" /> 数组。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              一维 <see langword="Char" /> 数组。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.DateTime" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="DateTime" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.DateTime" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="DateTime" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>
              将转换 <see cref="T:System.Boolean" /> 值赋给 <see cref="T:System.Decimal" /> 值。
            </summary>
      <param name="Value">
                要转换的布尔值。
              </param>
      <returns>
              <see langword="Decimal" /> 布尔值的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.Decimal" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Decimal" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.Decimal" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Decimal" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.Double" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Double" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.Double" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Double" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>
              将对象转换为泛型类型 <paramref name="T" />。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <typeparam name="T">
                要转换的类型 <paramref name="Value" /> 到。
              </typeparam>
      <returns>
              结构或泛型类型的对象 <paramref name="T" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>
              将对象转换为整数值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="int" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>
              将字符串转换为整数值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="int" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>
              将对象转换为 <see langword="Long" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Long" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>
              将字符串转换为 <see langword="Long" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Long" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.SByte" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="SByte" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>
              将字符串转换为 <see cref="T:System.SByte" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="SByte" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>
              将对象转换为 <see langword="Short" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Short" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>
              将字符串转换为 <see langword="Short" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Short" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.Single" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Single" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>
              将转换 <see cref="T:System.String" /> 到 <see cref="T:System.Single" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Single" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>
              将转换 <see cref="T:System.Boolean" /> 值赋给 <see cref="T:System.String" />。
            </summary>
      <param name="Value">
                要转换的 <see langword="Boolean" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Boolean" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>
              将转换 <see cref="T:System.Byte" /> 值赋给 <see cref="T:System.String" />。
            </summary>
      <param name="Value">
                要转换的 <see langword="Byte" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Byte" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>
              将转换 <see cref="T:System.Char" /> 值赋给 <see cref="T:System.String" />。
            </summary>
      <param name="Value">
                要转换的 <see langword="Char" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Char" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>
              将转换 <see cref="T:System.DateTime" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="DateTime" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="DateTime" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>
              将转换 <see cref="T:System.Decimal" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Decimal" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Decimal" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>
              将转换 <see cref="T:System.Decimal" /> 值赋给 <see cref="T:System.String" /> 值，而且使用指定的数字格式。
            </summary>
      <param name="Value">
                要转换的 <see langword="decimal" /> 值。
              </param>
      <param name="NumberFormat">
                数字的格式，若要使用，根据 <see cref="T:System.Globalization.NumberFormatInfo" />。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Decimal" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>
              将转换 <see cref="T:System.Double" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Double" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Double" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>
              将转换 <see cref="T:System.Double" /> 值赋给 <see cref="T:System.String" /> 值，而且使用指定的数字格式。
            </summary>
      <param name="Value">
                要转换的 <see langword="Double" /> 值。
              </param>
      <param name="NumberFormat">
                数字的格式，若要使用，根据 <see cref="T:System.Globalization.NumberFormatInfo" />。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Double" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>
              将转换 <see langword="Short" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Short" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Short" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>
              将转换为一个整数值 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="int" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="int" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>
              将转换 <see langword="Long" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Long" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Long" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>
              将对象转换为 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="String" /> 对象表示形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>
              将转换 <see cref="T:System.Single" /> 值 （单精度浮点数） 到 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Single" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Single" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>
              将转换 <see cref="T:System.Single" /> 值赋给 <see cref="T:System.String" /> 值，而且使用指定的数字格式。
            </summary>
      <param name="Value">
                要转换的 <see langword="Single" /> 值。
              </param>
      <param name="NumberFormat">
                数字的格式，若要使用，根据 <see cref="T:System.Globalization.NumberFormatInfo" />。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Single" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>
              将转换 <see langword="uint" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Uint" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Uint" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>
              将转换 <see langword="Ulong" /> 值赋给 <see cref="T:System.String" /> 值。
            </summary>
      <param name="Value">
                要转换的 <see langword="Ulong" /> 值。
              </param>
      <returns>
              <see langword="String" /> 表示形式 <see langword="Ulong" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>
              将对象转换为 <see langword="Uint" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Uint" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>
              将字符串转换为 <see langword="Uint" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Uint" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>
              将对象转换为 <see langword="Ulong" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Ulong" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>
              将字符串转换为 <see langword="Ulong" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Ulong" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>
              将对象转换为 <see langword="Ushort" /> 值。
            </summary>
      <param name="Value">
                要转换的对象。
              </param>
      <returns>
              <see langword="Ushort" /> 对象值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>
              将字符串转换为 <see langword="Ushort" /> 值。
            </summary>
      <param name="Value">
                要转换的字符串。
              </param>
      <returns>
              <see langword="Ushort" /> 字符串的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Date" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Date" /> 值。
              </param>
      <returns>
              <see langword="Date" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>
              返回 <see langword="Date" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Date" /> 值。
              </param>
      <returns>
              <see langword="Date" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>
              返回 <see langword="Date" /> 对应于指定的字符串和区域性信息的值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Date" /> 值。
              </param>
      <param name="culture">
                必需。
                 一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它定义如何格式化和显示，具体取决于该区域性日期值。
              </param>
      <returns>
              <see langword="Date" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>
              返回 <see langword="Decimal" /> 对应于指定的值 <see langword="Boolean" /> 值。
            </summary>
      <param name="Value">
                必需。
                <see langword="Boolean" /> 要转换为值 <see langword="Decimal" /> 值。
              </param>
      <returns>
              <see langword="Decimal" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Decimal" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Decimal" /> 值。
              </param>
      <returns>
              <see langword="Decimal" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Decimal" /> 对应于指定的对象和数字格式信息的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Decimal" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Decimal" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>
              返回 <see langword="Decimal" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Decimal" /> 值。
              </param>
      <returns>
              <see langword="Decimal" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Decimal" /> 对应于指定的字符串和数字格式信息的值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Decimal" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Decimal" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Decimal" /> 对应于指定的字符串和数字格式信息的值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Decimal" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Decimal" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" /> 属性的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Double" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Double" /> 值。
              </param>
      <returns>
              <see langword="Double" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Double" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Double" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Double" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>
              返回 <see langword="Double" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Double" /> 值。
              </param>
      <returns>
              <see langword="Double" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Double" /> 对应于指定的字符串和数字格式信息的值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Double" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Double" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>
              返回 <see langword="Double" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Double" /> 值。
              </param>
      <returns>
              <see langword="Double" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Double" /> 对应于指定的字符串和数字格式信息的值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Double" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Double" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>
              检查的同步锁定上指定的类型。
            </summary>
      <param name="obj">
                数据类型对其进行检查的同步锁定。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)">
      <summary>
              获取数组中循环访问枚举器 <see langword="For Each" /> 循环。
            </summary>
      <param name="ary">
                数组中循环访问 <see langword="For Each" /> 循环。
              </param>
      <returns>
              枚举器 <paramref name="ary" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)">
      <summary>
              获取要循环访问中的对象的枚举数 <see langword="For Each" /> 循环。
            </summary>
      <param name="obj">
                在循环访问的对象 <see langword="For Each" /> 循环。
              </param>
      <returns>
              枚举器 <paramref name="obj" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)">
      <summary>
              设置对中的下一个对象的引用 <see langword="For Each" /> 循环。
            </summary>
      <param name="obj">
                范围变量的 <see langword="For Each" /> 循环。
              </param>
      <param name="enumerator">
                <see cref="T:System.Collections.IEnumerator" /> 中循环访问的对象 <see langword="For Each" /> 循环。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="obj" /> 指的是下一个对象; <see langword="False" /> 如果没有更多对象和 <paramref name="obj" /> 是 <see langword="Nothing" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>
              初始化 <see langword="For...Next" /> 循环。
            </summary>
      <param name="Counter">
                循环计数器变量。
              </param>
      <param name="Start">
                循环计数器的初始值。
              </param>
      <param name="Limit">
                值 <see langword="To" /> 选项。
              </param>
      <param name="StepValue">
                值 <see langword="Step" /> 选项。
              </param>
      <param name="LoopForResult">
                一个对象，包含已验证循环值的值。
              </param>
      <param name="CounterResult">
                下一步的循环迭代该计数器值。
              </param>
      <returns>
              <see langword="False" /> 如果循环已终止;否则为 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>
              有关有效值的范围，循环计数器检查 <see langword="Step" />, ，和 <see langword="To" /> 值。
            </summary>
      <param name="count">
                必需。
                 一个 <see langword="Decimal" /> 为循环计数器变量的值，该值表示初始值传递。
              </param>
      <param name="limit">
                必需。
                 一个 <see langword="Decimal" /> 值，该值表示通过使用传递的值 <see langword="To" /> 关键字。
              </param>
      <param name="StepValue">
                必需。
                 一个 <see langword="Decimal" /> 值，该值表示通过使用传递的值 <see langword="Step" /> 关键字。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="StepValue" /> 大于零并 <paramref name="count" /> 是否小于或等于 <paramref name="limit" />, ，或者如果 <paramref name="StepValue" /> 是否小于或等于零和 <paramref name="count" /> 是否大于或等于 <paramref name="limit" />; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>
              增量 <see langword="For...Next" /> 循环。
            </summary>
      <param name="Counter">
                循环计数器变量。
              </param>
      <param name="LoopObj">
                一个对象，包含已验证循环值的值。
              </param>
      <param name="CounterResult">
                下一步的循环迭代该计数器值。
              </param>
      <returns>
              <see langword="False" /> 如果循环已终止;否则为 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>
              有关有效值的范围，循环计数器检查 <see langword="Step" />, ，和 <see langword="To" /> 值。
            </summary>
      <param name="count">
                必需。
                 一个 <see langword="Single" /> 为循环计数器变量的值，该值表示初始值传递。
              </param>
      <param name="limit">
                必需。
                 一个 <see langword="Single" /> 值，该值表示通过使用传递的值 <see langword="To" /> 关键字。
              </param>
      <param name="StepValue">
                必需。
                 一个 <see langword="Single" /> 值，该值表示通过使用传递的值 <see langword="Step" /> 关键字。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="StepValue" /> 大于零并 <paramref name="count" /> 是否小于或等于 <paramref name="limit" />, ，或者如果 <paramref name="StepValue" /> 是否小于或等于零和 <paramref name="count" /> 是否大于或等于 <paramref name="limit" />; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>
              有关有效值的范围，循环计数器检查 <see langword="Step" />, ，和 <see langword="To" /> 值。
            </summary>
      <param name="count">
                必需。
                 一个 <see langword="Double" /> 为循环计数器变量的值，该值表示初始值传递。
              </param>
      <param name="limit">
                必需。
                 一个 <see langword="Double" /> 值，该值表示通过使用传递的值 <see langword="To" /> 关键字。
              </param>
      <param name="StepValue">
                必需。
                 一个 <see langword="Double" /> 值，该值表示通过使用传递的值 <see langword="Step" /> 关键字。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="StepValue" /> 大于零并 <paramref name="count" /> 是否小于或等于 <paramref name="limit" />, ，或者如果 <paramref name="StepValue" /> 是否小于或等于零和 <paramref name="count" /> 是否大于或等于 <paramref name="limit" />; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.HostServices" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 类的新实例。
            </summary>
      <param name="message">
                一个表示要发送的消息字符串。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor(System.String,System.Exception)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" /> 类的新实例。
            </summary>
      <param name="message">
                一个表示要发送的消息字符串。
              </param>
      <param name="innerException">
                一个 <see cref="T:System.Exception" /> 对象。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Integer" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Integer" /> 值。
              </param>
      <returns>
              <see langword="Integer" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>
              返回 <see langword="Integer" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Integer" /> 值。
              </param>
      <returns>
              <see langword="Integer" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> 类，同时指定一条错误消息。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalErrorException.#ctor(System.String,System.Exception)">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException" /> 类，同时指定一条错误消息和内部异常。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
      <param name="innerException">
                当前的内部异常原因的异常。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateAttribute(System.Xml.Linq.XName,System.Object)">
      <summary>
              创建具有提供的名称和值的 XML 属性。
               此方法不应在代码中使用。
            </summary>
      <param name="name">
                要创建的 XML 属性名称。
              </param>
      <param name="value">
                要分配给创建的 XML 属性的值。
                 如果 <paramref name="value" /> 为 <see langword="Nothing" />，则此方法返回 <see langword="Nothing" />。
              </param>
      <returns>
              <see cref="T:System.Xml.Linq.XAttribute" />具有提供的名称和值的对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.CreateNamespaceAttribute(System.Xml.Linq.XName,System.Xml.Linq.XNamespace)">
      <summary>
              创建具有所提供的名称和命名空间值的 XML 属性。
               此方法不应在代码中使用。
            </summary>
      <param name="name">
                要创建的 XML 属性名称。
              </param>
      <param name="ns">
                要分配给创建的 XML 属性的命名空间值。
              </param>
      <returns>
              <see cref="T:System.Xml.Linq.XAttribute" />具有提供的名称和命名空间值的对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Collections.IEnumerable)">
      <summary>
              从 XML 元素中删除 XML 命名空间属性。
               此方法不应在代码中使用。
            </summary>
      <param name="inScopePrefixes">
                当前作用域中的 XML 元素的 XML 命名空间前缀的列表。
              </param>
      <param name="inScopeNs">
                当前作用域中的 XML 元素的 XML 命名空间的列表。
              </param>
      <param name="attributes">
                若要从 XML 元素中移除的命名空间属性的列表。
              </param>
      <param name="obj">
                要移除 XML 命名空间属性的 XML 元素。
              </param>
      <returns>
              删除指定的 XML 命名空间特性与提供的 XML 元素。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Object)">
      <summary>
              从 XML 元素中删除 XML 命名空间属性。
               此方法不应在代码中使用。
            </summary>
      <param name="inScopePrefixes">
                当前作用域中的 XML 元素的 XML 命名空间前缀的列表。
              </param>
      <param name="inScopeNs">
                当前作用域中的 XML 元素的 XML 命名空间的列表。
              </param>
      <param name="attributes">
                若要从 XML 元素中移除的命名空间属性的列表。
              </param>
      <param name="obj">
                要移除 XML 命名空间属性的 XML 元素。
              </param>
      <returns>
              删除指定的 XML 命名空间特性与提供的 XML 元素。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.RemoveNamespaceAttributes(System.String[],System.Xml.Linq.XNamespace[],System.Collections.Generic.List{System.Xml.Linq.XAttribute},System.Xml.Linq.XElement)">
      <summary>
              从 XML 元素中删除 XML 命名空间属性。
               此方法不应在代码中使用。
            </summary>
      <param name="inScopePrefixes">
                当前作用域中的 XML 元素的 XML 命名空间前缀的列表。
              </param>
      <param name="inScopeNs">
                当前作用域中的 XML 元素的 XML 命名空间的列表。
              </param>
      <param name="attributes">
                若要从 XML 元素中移除的命名空间属性的列表。
              </param>
      <param name="e">
                要移除 XML 命名空间属性的 XML 元素。
              </param>
      <returns>
              删除指定的 XML 命名空间特性与提供的 XML 元素。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>
              获取当前的 Visual Basic 环境主机窗口。
            </summary>
      <returns>
              当前的 Visual Basic 环境主机窗口。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>
              获取当前的 Visual Basic 环境主机窗口的标题。
            </summary>
      <returns>
              当前的 Visual Basic 环境的主机窗口的标题。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>
              执行对对象方法的后期绑定调用。
            </summary>
      <param name="o">
                要调用的方法的对象。
              </param>
      <param name="objType">
                对象的类型。
              </param>
      <param name="name">
                方法名 <paramref name="o" /> 来调用。
              </param>
      <param name="args">
                要传递给该方法的参数值的数组。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
      <param name="CopyBack">
                一个数组 <see langword="Boolean" /> 值，其中 <see langword="True" /> 指示相关联的参数被传递 <see langword="ByRef" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>
              从对象返回一个后期绑定值。
            </summary>
      <param name="o">
                要返回的值的对象。
              </param>
      <param name="objType">
                对象的类型。
              </param>
      <param name="name">
                成员名称 <paramref name="o" /> 要从中检索值。
              </param>
      <param name="args">
                指定的位置中的一个或多个索引值的数组 <paramref name="o" /> 如果 <paramref name="o" /> 是一个一维或多维数组或要传递给对象的参数值 <paramref name="o" />。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
      <param name="CopyBack">
                一个数组 <see langword="Boolean" /> 值，其中 <see langword="True" /> 指示相关联的参数被传递 <see langword="ByRef" />。
              </param>
      <returns>
              如果 <paramref name="o" /> 是一个数组，从值 <paramref name="o" /> 指定位置处 <paramref name="args" />。
               如果 <paramref name="o" /> 是一个对象，返回值为 <paramref name="o" /> 使用中的命名的参数调用 <paramref name="paramnames" /> 及其关联值以 <paramref name="args" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>
              从一个对象，使用指定的索引或参数返回后期绑定值。
            </summary>
      <param name="o">
                要返回的值的对象。
              </param>
      <param name="args">
                指定的位置中的一个或多个索引值的数组 <paramref name="o" /> 如果 <paramref name="o" /> 是一个一维或多维数组或要传递给对象的参数值 <paramref name="o" />。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
      <returns>
              如果 <paramref name="o" /> 是一个数组，从值 <paramref name="o" /> 指定位置处 <paramref name="args" />。
               如果 <paramref name="o" /> 是一个对象，返回值为 <paramref name="o" /> 使用中的命名的参数调用 <paramref name="paramnames" /> 及其关联值以 <paramref name="args" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>
              设置一个对象，使用指定的参数的后期绑定的值。
            </summary>
      <param name="o">
                要设置的值的对象。
              </param>
      <param name="args">
                指定的位置中的一个或多个索引值的数组 <paramref name="o" /> 如果 <paramref name="o" /> 是一个一维或多维数组或要传递给对象的参数值 <paramref name="o" />。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
              设置一个对象，使用指定的参数的后期绑定的值。
            </summary>
      <param name="o">
                要设置的值的对象。
              </param>
      <param name="args">
                要传递给该对象的一个或多个参数值数组 <paramref name="o" />。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
      <param name="OptimisticSet">
                <see langword="True" /> 若要禁止显示未找到的集成员时引发的异常。
              </param>
      <param name="RValueBase">
                <see langword="True" /> 若要确定 <paramref name="o" /> 为后期绑定表达式的结果。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>
              设置后期绑定成员值的一个对象，使用指定的参数。
            </summary>
      <param name="o">
                要设置的成员值的对象。
              </param>
      <param name="objType">
                对象的类型。
              </param>
      <param name="name">
                要设置的成员名称。
              </param>
      <param name="args">
                要传递给成员的一个或参数的数组值 <paramref name="o" />。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
              设置后期绑定成员值的一个对象，使用指定的参数。
            </summary>
      <param name="o">
                要设置的成员值的对象。
              </param>
      <param name="objType">
                对象的类型。
              </param>
      <param name="name">
                要设置的成员名称。
              </param>
      <param name="args">
                要传递给的成员的一个或多个参数值的数组 <paramref name="o" />。
              </param>
      <param name="paramnames">
                一个数组，其中包含的参数名称中的值 <paramref name="args" /> 数组被传递。
              </param>
      <param name="OptimisticSet">
                <see langword="True" /> 若要禁止显示未找到的集成员时引发的异常。
              </param>
      <param name="RValueBase">
                <see langword="True" /> 若要确定 <paramref name="o" /> 为后期绑定表达式的结果。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              执行给定的两个对象的二进制或文本的字符串比较。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Source">
                要比较的字符串。
              </param>
      <param name="Pattern">
                依据字符串 <paramref name="Source" /> 要进行比较。
              </param>
      <param name="CompareOption">
                一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 指定是否使用文本比较的枚举。
                 如果 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, ，此方法使用文本比较; 如果 <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, ，此方法使用二进制比较。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示字符串是否匹配。
               返回 <see langword="True" /> 如果字符串匹配; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              执行两个给定字符串的二进制或文本的字符串比较。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Source">
                要比较的字符串。
              </param>
      <param name="Pattern">
                依据字符串 <paramref name="Source" /> 要进行比较。
              </param>
      <param name="CompareOption">
                一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 指定是否使用文本比较的枚举。
                 如果 <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, ，此方法使用文本比较; 如果 <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, ，此方法使用二进制比较。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示字符串是否匹配。
               返回 <see langword="True" /> 如果字符串匹配; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Long" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Long" /> 值。
              </param>
      <returns>
              <see langword="Long" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>
              返回 <see langword="Long" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Long" /> 值。
              </param>
      <returns>
              <see langword="Long" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>
              执行后期绑定方法或函数调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="IgnoreReturn">
                一个 <see langword="Boolean" /> 值，该值指示是否可以忽略返回值。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>
              执行后期绑定属性获取或字段访问调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="OptimisticSet">
                一个 <see langword="Boolean" /> 值，该值用于确定是否设置操作将起作用。
                 设置为 <see langword="True" /> 当您认为的中间值是否已设置中的属性或字段; 否则为 <see langword="False" />。
              </param>
      <param name="RValueBase">
                一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用时 <see langword="RValue" />。
                 设置为 <see langword="True" /> 后期引用的基引用时 <see langword="RValue" />; 这使您可以生成后期工作分配的字段的运行时异常 <see langword="RValues" /> 值类型。
                 否则，设置为 <see langword="False" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>
              执行默认属性或字段中或对默认方法或函数调用的后期绑定的获取。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
                 如果 <paramref name="Instance" /> 属于类型 <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, ，然后用动态语言运行时进行绑定; 否则执行标准的后期绑定。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="ReportErrors">
                一个 <see langword="Boolean" /> 值，该值用于指定是否在遇到错误时引发异常。
                 设置为 <see langword="True" /> 引发异常。
                 设置为 <see langword="False" /> 返回 <see langword="Nothing" /> 时遇到错误。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>
              执行默认属性或字段中或对默认方法或函数调用的后期绑定的获取。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="ReportErrors">
                一个 <see langword="Boolean" /> 值，该值用于指定是否在遇到错误时引发异常。
                 设置为 <see langword="True" /> 引发异常。
                 设置为 <see langword="False" /> 返回 <see langword="Nothing" /> 时遇到错误。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="OptimisticSet">
                一个 <see langword="Boolean" /> 值，该值用于确定是否设置操作将起作用。
                 设置为 <see langword="True" /> 当您认为的中间值是否已设置中的属性或字段; 否则为 <see langword="False" />。
              </param>
      <param name="RValueBase">
                一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用时 <see langword="RValue" />。
                 设置为 <see langword="True" /> 后期引用的基引用时 <see langword="RValue" />; 这使您可以生成后期工作分配的字段的运行时异常 <see langword="RValues" /> 值类型。
                 否则，设置为 <see langword="False" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>
              执行后期绑定方法或函数调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Type">
                调用对象的类型。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="TypeArguments">
                数组的参数类型;仅用于泛型调用传递的参数类型。
              </param>
      <param name="CopyBack">
                一个数组 <see langword="Boolean" /> 后期联编程序用来进行通信的值返回到调用站点的变量匹配 <see langword="ByRef" /> 参数。
                 每个 <see langword="True" /> 值指示参数匹配，并应在调用之后复制出来 <see langword="LateCall" /> 已完成。
              </param>
      <param name="IgnoreReturn">
                一个 <see langword="Boolean" /> 值，该值指示是否可以忽略返回值。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>
              执行对默认方法或函数的后期绑定调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="ReportErrors">
                一个 <see langword="Boolean" /> 值，该值用于指定是否在遇到错误时引发异常。
                 设置为 <see langword="True" /> 引发异常。
                 设置为 <see langword="False" /> 返回 <see langword="Nothing" /> 时遇到错误。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCanEvaluate(System.Object,System.Type,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
              指示调用是否需要后期绑定计算。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="type">
                调用对象的类型。
              </param>
      <param name="memberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="allowFunctionEvaluation">
                一个 <see langword="Boolean" /> 值，该值指定是否允许函数求值。
              </param>
      <param name="allowPropertyEvaluation">
                一个 <see langword="Boolean" /> 值，该值指定是否允许属性求值。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示表达式是否需要后期绑定计算。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>
              执行后期绑定属性获取或字段访问调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Type">
                调用对象的类型。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="TypeArguments">
                数组的参数类型;仅用于泛型调用传递的参数类型。
              </param>
      <param name="CopyBack">
                一个数组 <see langword="Boolean" /> 后期联编程序用来进行通信的值返回到调用站点的变量匹配 <see langword="ByRef" /> 参数。
                 每个 <see langword="True" /> 值指示参数匹配，并应在调用之后复制出来 <see langword="LateCall" /> 已完成。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>
              执行默认属性或字段的后期绑定的获取。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="ReportErrors">
                一个 <see langword="Boolean" /> 值，该值用于指定是否在遇到错误时引发异常。
                 设置为 <see langword="True" /> 引发异常。
                 设置为 <see langword="False" /> 返回 <see langword="Nothing" /> 时遇到错误。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>
              执行后期绑定属性获取或字段访问调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <returns>
              调用对象的实例。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="OptimisticSet">
                一个 <see langword="Boolean" /> 值，该值用于确定是否设置操作将起作用。
                 设置为 <see langword="True" /> 当您认为的中间值是否已设置中的属性或字段; 否则为 <see langword="False" />。
              </param>
      <param name="RValueBase">
                一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用时 <see langword="RValue" />。
                 设置为 <see langword="True" /> 后期引用的基引用时 <see langword="RValue" />; 这使您可以生成后期工作分配的字段的运行时异常 <see langword="RValues" /> 值类型。
                 否则，设置为 <see langword="False" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Type">
                调用对象的类型。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="TypeArguments">
                数组的参数类型;仅用于泛型调用传递的参数类型。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Type">
                调用对象的类型。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="TypeArguments">
                数组的参数类型;仅用于泛型调用传递的参数类型。
              </param>
      <param name="OptimisticSet">
                一个 <see langword="Boolean" /> 值，该值用于确定是否设置操作将起作用。
                 设置为 <see langword="True" /> 当您认为的中间值是否已设置中的属性或字段; 否则为 <see langword="False" />。
              </param>
      <param name="RValueBase">
                一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用时 <see langword="RValue" />。
                 设置为 <see langword="True" /> 后期引用的基引用时 <see langword="RValue" />; 这使您可以生成后期工作分配的字段的运行时异常 <see langword="RValues" /> 值类型。
                 否则，设置为 <see langword="False" />。
              </param>
      <param name="CallType">
                类型的枚举成员 <see cref="T:Microsoft.VisualBasic.CallType" /> 表示被调用过程的类型。
                 CallType 值可以是 <see langword="Method" />, ，<see langword="Get" />, ，或 <see langword="Set" />。
                 仅 <see langword="Set" /> 使用。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>
              执行后期绑定属性集或字段写入调用。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="Instance">
                公开属性或方法的调用对象的实例。
              </param>
      <param name="Type">
                调用对象的类型。
              </param>
      <param name="MemberName">
                属性或方法的调用对象的名称。
              </param>
      <param name="Arguments">
                包含要传递给该属性或方法被调用的参数的数组。
              </param>
      <param name="ArgumentNames">
                参数名称的数组。
              </param>
      <param name="TypeArguments">
                数组的参数类型;仅用于泛型调用传递的参数类型。
              </param>
      <param name="OptimisticSet">
                一个 <see langword="Boolean" /> 值，该值用于确定是否设置操作将起作用。
                 设置为 <see langword="True" /> 当您认为的中间值是否已设置中的属性或字段; 否则为 <see langword="False" />。
              </param>
      <param name="RValueBase">
                一个 <see langword="Boolean" /> 值，该值指定后期引用的基引用时 <see langword="RValue" />。
                 设置为 <see langword="True" /> 后期引用的基引用时 <see langword="RValue" />; 这使您可以生成后期工作分配的字段的运行时异常 <see langword="RValues" /> 值类型。
                 否则，设置为 <see langword="False" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>
              检查的同步锁定上指定的类型。
            </summary>
      <param name="Expression">
                数据类型对其进行检查的同步锁定。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>
              初始化 <see langword="For...Next" /> 循环。
            </summary>
      <param name="Counter">
                循环计数器变量。
              </param>
      <param name="Start">
                循环计数器的初始值。
              </param>
      <param name="Limit">
                值 <see langword="To" /> 选项。
              </param>
      <param name="StepValue">
                值 <see langword="Step" /> 选项。
              </param>
      <param name="LoopForResult">
                一个对象，包含已验证循环值的值。
              </param>
      <param name="CounterResult">
                下一步的循环迭代该计数器值。
              </param>
      <returns>
              <see langword="False" /> 如果循环已终止;否则为 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>
              有关有效值的范围，循环计数器检查 <see langword="Step" />, ，和 <see langword="To" /> 值。
            </summary>
      <param name="count">
                必需。
                 一个 <see langword="Decimal" /> 为循环计数器变量的值，该值表示初始值传递。
              </param>
      <param name="limit">
                必需。
                 一个 <see langword="Decimal" /> 值，该值表示通过使用传递的值 <see langword="To" /> 关键字。
              </param>
      <param name="StepValue">
                必需。
                 一个 <see langword="Decimal" /> 值，该值表示通过使用传递的值 <see langword="Step" /> 关键字。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="StepValue" /> 大于零并 <paramref name="count" /> 是否小于或等于 <paramref name="limit" /> 或 <paramref name="StepValue" /> 是否小于或等于零和 <paramref name="count" /> 是否大于或等于 <paramref name="limit" />; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>
              增量 <see langword="For...Next" /> 循环。
            </summary>
      <param name="Counter">
                循环计数器变量。
              </param>
      <param name="LoopObj">
                一个对象，包含已验证循环值的值。
              </param>
      <param name="CounterResult">
                下一步的循环迭代该计数器值。
              </param>
      <returns>
              <see langword="False" /> 如果循环已终止;否则为 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>
              有关有效值的范围，循环计数器检查 <see langword="Step" />, ，和 <see langword="To" /> 值。
            </summary>
      <param name="count">
                必需。
                 一个 <see langword="Single" /> 为循环计数器变量的值，该值表示初始值传递。
              </param>
      <param name="limit">
                必需。
                 一个 <see langword="Single" /> 值，该值表示通过使用传递的值 <see langword="To" /> 关键字。
              </param>
      <param name="StepValue">
                必需。
                 一个 <see langword="Single" /> 值，该值表示通过使用传递的值 <see langword="Step" /> 关键字。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="StepValue" /> 大于零并 <paramref name="count" /> 是否小于或等于 <paramref name="limit" />, ，或者如果 <paramref name="StepValue" /> 是否小于或等于零和 <paramref name="count" /> 是否大于或等于 <paramref name="limit" />; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>
              有关有效值的范围，循环计数器检查 <see langword="Step" />, ，和 <see langword="To" /> 值。
            </summary>
      <param name="count">
                必需。
                 一个 <see langword="Double" /> 为循环计数器变量的值，该值表示初始值传递。
              </param>
      <param name="limit">
                必需。
                 一个 <see langword="Double" /> 值，该值表示通过使用传递的值 <see langword="To" /> 关键字。
              </param>
      <param name="StepValue">
                必需。
                 一个 <see langword="Double" /> 值，该值表示通过使用传递的值 <see langword="Step" /> 关键字。
              </param>
      <returns>
              <see langword="True" /> 如果 <paramref name="StepValue" /> 大于零并 <paramref name="count" /> 是否小于或等于 <paramref name="limit" />, ，或者如果 <paramref name="StepValue" /> 是否小于或等于零和 <paramref name="count" /> 是否大于或等于 <paramref name="limit" />; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>
              执行加法 （+） 操作。
            </summary>
      <param name="o1">
                必需。
                 任何数值表达式。
              </param>
      <param name="o2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              <paramref name="o1" /> 与 <paramref name="o2" /> 的和。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>
              执行按位<see langword="And" />操作。
            </summary>
      <param name="obj1">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <param name="obj2">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <returns>
              如果这两个 1<paramref name="obj1" />和<paramref name="obj2" />计算结果为 1; 否则为 0。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>
              执行按位<see langword="Or" />操作。
            </summary>
      <param name="obj1">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <param name="obj2">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <returns>
              如果这两个 0<paramref name="obj1" />和<paramref name="obj2" />计算结果为 0; 否则为 1。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>
              执行<see langword="Xor" />操作。
            </summary>
      <param name="obj1">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <param name="obj2">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <returns>
              一个表示按位异或 （独占按位运算） 的两个数值的位模式的数值。
               有关详细信息，请参阅异或运算符 (Visual Basic)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>
              执行除法 （/） 运算。
            </summary>
      <param name="o1">
                必需。
                 任何数值表达式。
              </param>
      <param name="o2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              完整的商 <paramref name="o1" /> 除以 <paramref name="o2" />, ，包括任何余数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>
              返回一个装箱的基元值。
               此方法用于防止多次复制结构。
            </summary>
      <param name="o">
                必需。
                 任何表达式。
              </param>
      <returns>
              基元值 <paramref name="o" /> 类型化为对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>
              执行整数除法 (\) 运算。
            </summary>
      <param name="o1">
                必需。
                 任何数值表达式。
              </param>
      <param name="o2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              整数商 <paramref name="o1" /> 除以 <paramref name="o2" />, ，它将放弃所有余数并保留仅整数部分。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              执行 <see langword="Like" /> 比较。
            </summary>
      <param name="vLeft">
                必需。
                 任何表达式。
              </param>
      <param name="vRight">
                必需。
                 任何符合 Like 运算符中所述的模式匹配的约定的字符串表达式。
              </param>
      <param name="CompareOption">
                必需。
                 一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，该值指定该操作使用文本或二进制比较。
              </param>
      <returns>
              <see langword="True" /> 如果的字符串表示形式中的值 <paramref name="vLeft" /> 满足包含在该模式 <paramref name="vRight" />; 否则为 <see langword="False" />。
              <see langword="True" /> 如果两个 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 是 <see langword="Nothing" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>
              执行模数 (<see langword="Mod" />) 操作。
            </summary>
      <param name="o1">
                必需。
                 任何数值表达式。
              </param>
      <param name="o2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              后的余数 <paramref name="o1" /> 除以 <paramref name="o2" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>
              执行乘法 （*） 运算。
            </summary>
      <param name="o1">
                必需。
                 任何数值表达式。
              </param>
      <param name="o2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              产品 <paramref name="o1" /> 和 <paramref name="o2" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>
              执行将一元减号 （-） 操作。
            </summary>
      <param name="obj">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              值为负 <paramref name="obj" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>
              执行 <see langword="Not" /> 操作。
            </summary>
      <param name="obj">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <returns>
              有关 <see langword="Boolean" /> 操作， <see langword="False" /> 如果 <paramref name="obj" /> 是 <see langword="True" />; 否则为 <see langword="True" />。
               对于按位运算 1 如果 <paramref name="obj" /> 0; 否则为 0。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>
              执行二进制或文本的字符串比较在给定两个对象。
            </summary>
      <param name="o1">
                必需。
                 任何表达式。
              </param>
      <param name="o2">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" /> 若要执行不区分大小写的字符串比较。否则为 <see langword="False" />。
              </param>
      <returns>
                      值 
                    
                      条件 
                    
                      -1 
                    
                      <paramref name="o1" /> 小于 <paramref name="o2" />。
                    
                      0
                    
                      <paramref name="o1" /> 等于 <paramref name="o2" />。
                    
                      1 
                    
                      <paramref name="o1" /> 大于 <paramref name="o2" />。
                    </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>
              执行一元加号 （+） 运算。
            </summary>
      <param name="obj">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              <paramref name="obj" /> 的值。
               (符号 <paramref name="obj" /> 保持不变。)
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>
              执行一个指数 (^) 运算。
            </summary>
      <param name="obj1">
                必需。
                 任何数值表达式。
              </param>
      <param name="obj2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              结果 <paramref name="obj1" /> 的次幂 <paramref name="obj2" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>
              执行算术左的移位运算 (&lt;&lt;) 操作。
            </summary>
      <param name="o1">
                必需。
                 整型数值表达式。
                 要移动的位模式。
                 数据类型必须是整数类型 (<see langword="SByte" />, ，<see langword="Byte" />, ，<see langword="Short" />, ，<see langword="UShort" />, ，<see langword="Integer" />, ，<see langword="UInteger" />, ，<see langword="Long" />, ，或 <see langword="ULong" />)。
              </param>
      <param name="amount">
                必需。
                 数值表达式。
                 要位移的位模式的比特数。
                 数据类型必须为 <see langword="Integer" /> 或扩大到 <see langword="Integer" />。
              </param>
      <returns>
              一个整型数值。
               移位的位模式的结果。
               数据类型是相同的 <paramref name="o1" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>
              执行算术右移位 (&gt;&gt;) 操作。
            </summary>
      <param name="o1">
                必需。
                 整型数值表达式。
                 要移动的位模式。
                 数据类型必须是整数类型 (<see langword="SByte" />, ，<see langword="Byte" />, ，<see langword="Short" />, ，<see langword="UShort" />, ，<see langword="Integer" />, ，<see langword="UInteger" />, ，<see langword="Long" />, ，或 <see langword="ULong" />)。
              </param>
      <param name="amount">
                必需。
                 数值表达式。
                 要位移的位模式的比特数。
                 数据类型必须为 <see langword="Integer" /> 或扩大到 <see langword="Integer" />。
              </param>
      <returns>
              一个整型数值。
               移位的位模式的结果。
               数据类型是相同的 <paramref name="o1" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>
              执行字符串串联 (&amp;) 操作。
            </summary>
      <param name="vLeft">
                必需。
                 任何表达式。
              </param>
      <param name="vRight">
                必需。
                 任何表达式。
              </param>
      <returns>
              一个字符串，表示拼接而成的 <paramref name="vLeft" /> 和 <paramref name="vRight" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>
              执行减法 （–） 运算。
            </summary>
      <param name="o1">
                必需。
                 任何数值表达式。
              </param>
      <param name="o2">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              之间的差异 <paramref name="o1" /> 和 <paramref name="o2" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>
              执行 <see langword="Xor" /> 比较。
            </summary>
      <param name="obj1">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <param name="obj2">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 或数字值。
               有关 <see langword="Boolean" /> 比较，返回值是两个逻辑异 （排他逻辑析取） <see langword="Boolean" /> 值。
               对于按位 （数字） 运算，返回值是一个数字值，表示按位异 （排他位或运算） 的两个数值的位模式。
               有关详细信息，请参阅异或运算符 (Visual Basic)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 加法 （+） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              <paramref name="Left" /> 与 <paramref name="Right" /> 的和。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic<see langword="And" />运算符。
            </summary>
      <param name="Left">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何<see langword="Boolean" />或数值表达式。
              </param>
      <returns>
              有关<see langword="Boolean" />操作，<see langword="True" />如果这两个<paramref name="Left" />和<paramref name="Right" />计算结果为<see langword="True" />; 否则为<see langword="False" />。
               对于按位运算，如果这两个 1<paramref name="Left" />和<paramref name="Right" />计算结果为 1; 否则为 0。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
      <summary>
              表示 Visual Basic 比较运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
                      值 
                    
                      条件 
                    
                      -1 
                    
                      <paramref name="Left" /> 小于 <paramref name="Right" />。
                    
                      0 
                    
                      <paramref name="Left" /> 与 <paramref name="Right" /> 相等。
                    
                      1 
                    
                      <paramref name="Left" /> 大于 <paramref name="Right" />。
                    </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              表示 Visual Basic 等号 （=） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              如果 <paramref name="Left" /> 和 <paramref name="Right" /> 相等，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>
              表示 Visual Basic 更高的比 (&gt;) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              如果 <see langword="True" /> 大于 <paramref name="Left" />，则为 <paramref name="Right" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              表示大于 Visual Basic-于或等于 (1&gt; =) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              如果 <paramref name="Left" /> 大于等于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>
              表示 Visual Basic 较低的比 （&lt;) operator.&gt;&lt;/) operator.&gt;
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              如果 <paramref name="Left" /> 小于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              不太表示 Visual Basic-于或等于 （&lt;=) operator.&gt;&lt;/=) operator.&gt;
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              如果 <paramref name="Left" /> 小于等于 <paramref name="Right" />，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              表示 Visual Basic 不相等 (&lt;&gt;) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              如果 <see langword="True" /> 不等于 <paramref name="Left" />，则为 <paramref name="Right" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>
              执行二进制或文本的字符串比较在给定两个字符串。
            </summary>
      <param name="Left">
                必需。
                 任何 <see langword="String" /> 表达式。
              </param>
      <param name="Right">
                必需。
                 任何 <see langword="String" /> 表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
                      值 
                    
                      条件 
                    
                      -1 
                    
                      <paramref name="Left" /> 小于 <paramref name="Right" />。
                    
                      0
                    
                      <paramref name="Left" /> 等于 <paramref name="Right" />。
                    
                      1 
                    
                      <paramref name="Left" /> 大于 <paramref name="Right" />。
                    </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 串联 （&amp;） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <returns>
              一个字符串，表示的串联<paramref name="Left" />和<paramref name="Right" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              表示重载的 Visual Basic 等号 （=） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              重载的 equals 运算符的结果。
              <see langword="False" />如果不支持运算符重载。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>
              表示重载更高版本的 Visual Basic 的比 (&gt;) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              重载更大的结果的运算符。
              <see langword="False" />如果不支持运算符重载。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              表示重载更高版本的 Visual Basic-于或等于 (1&gt; =) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              重载更大的结果-比或相等运算符。
              <see langword="False" />如果不支持运算符重载。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>
              表示重载的 Visual Basic 较低的比 （&lt;) operator.&gt;&lt;/) operator.&gt;
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              重载的结果更少的运算符。
              <see langword="False" />如果不支持运算符重载。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              不太表示重载的 Visual Basic-于或等于 （&lt;=) operator.&gt;&lt;/=) operator.&gt;
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              重载的结果更少-比或相等运算符。
              <see langword="False" />如果不支持运算符重载。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>
              表示重载的 Visual Basic 不相等 (&lt;&gt;) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何表达式。
              </param>
      <param name="Right">
                必需。
                 任何表达式。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" />若要执行不区分大小写的字符串比较;否则为<see langword="False" />。
              </param>
      <returns>
              重载的不相等运算符的结果。
              <see langword="False" />如果不支持运算符重载。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 除 （/） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              完整的商 <paramref name="Left" /> 除以 <paramref name="Right" />, ，包括任何余数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 指数 (^) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              结果 <paramref name="Left" /> 的次幂 <paramref name="Right" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>
              执行用户定义的运算符进行后期绑定的评估。
               此帮助器方法不是为了在代码中直接调用。
            </summary>
      <param name="vbOp">
                用户定义的运算符。
              </param>
      <param name="Arguments">
                要传递给用户定义运算符的参数值。
              </param>
      <returns>
              从用户定义运算符返回的结果。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 整除 (\) 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              整数商 <paramref name="Left" /> 除以 <paramref name="Right" />, ，它将放弃所有余数并保留仅整数部分。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 算术左的移位 (&lt;&lt;) 运算符。
            </summary>
      <param name="Operand">
                必需。
                 整型数值表达式。
                 要移动的位模式。
                 数据类型必须是整数类型 (<see langword="SByte" />, ，<see langword="Byte" />, ，<see langword="Short" />, ，<see langword="UShort" />, ，<see langword="Integer" />, ，<see langword="UInteger" />, ，<see langword="Long" />, ，或 <see langword="ULong" />)。
              </param>
      <param name="Amount">
                必需。
                 数值表达式。
                 要位移的位模式的比特数。
                 数据类型必须为 <see langword="Integer" /> 或扩大到 <see langword="Integer" />。
              </param>
      <returns>
              一个整型数值。
               移位的位模式的结果。
               数据类型是相同的 <paramref name="Operand" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              表示 Visual Basic <see langword="Like" /> 运算符。
            </summary>
      <param name="Source">
                必需。
                 任何表达式。
              </param>
      <param name="Pattern">
                必需。
                 任何符合 Like 运算符中所述的模式匹配的约定的字符串表达式。
              </param>
      <param name="CompareOption">
                必需。
                 一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，该值指定该操作使用文本或二进制比较。
              </param>
      <returns>
              <see langword="True" /> 如果的字符串表示形式中的值 <paramref name="Source" /> 满足包含在该模式 <paramref name="Pattern" />; 否则为 <see langword="False" />。
              <see langword="True" /> 如果两个 <paramref name="Source" /> 和 <paramref name="Pattern" /> 是 <see langword="Nothing" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              表示 Visual Basic <see langword="Like" /> 运算符。
            </summary>
      <param name="Source">
                必需。
                 任何 <see langword="String" /> 表达式。
              </param>
      <param name="Pattern">
                必需。
                 任何 <see langword="String" /> 符合 Like 运算符中所述的模式匹配约定表达式。
              </param>
      <param name="CompareOption">
                必需。
                 一个 <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，该值指定该操作使用文本或二进制比较。
              </param>
      <returns>
              <see langword="True" /> 如果中的值 <paramref name="Source" /> 满足包含在该模式 <paramref name="Pattern" />; 否则为 <see langword="False" />。
              <see langword="True" /> 如果两个 <paramref name="Source" /> 和 <paramref name="Pattern" /> 为空。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic <see langword="Mod" /> 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              后的余数 <paramref name="Left" /> 除以 <paramref name="Right" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 乘 （*） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              产品 <paramref name="Left" /> 和 <paramref name="Right" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>
              表示 Visual Basic 一元减号 （-） 运算符。
            </summary>
      <param name="Operand">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              值为负 <paramref name="Operand" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>
              表示 Visual Basic <see langword="Not" /> 运算符。
            </summary>
      <param name="Operand">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <returns>
              有关 <see langword="Boolean" /> 操作， <see langword="False" /> 如果 <paramref name="Operand" /> 是 <see langword="True" />; 否则为 <see langword="True" />。
               对于按位运算 1 如果 <paramref name="Operand" /> 0; 否则为 0。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic <see langword="Or" /> 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <returns>
              有关 <see langword="Boolean" /> 操作， <see langword="False" /> 如果两个 <paramref name="Left" /> 和 <paramref name="Right" /> 的计算结果为 <see langword="False" />; 否则为 <see langword="True" />。
               对于按位运算，0，如果这两个 <paramref name="Left" /> 和 <paramref name="Right" /> 计算结果为 0; 否则为 1。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>
              表示 Visual Basic 一元加号 （+） 运算符。
            </summary>
      <param name="Operand">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              <paramref name="Operand" /> 的值。
               (符号 <paramref name="Operand" /> 保持不变。)
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 算术右移位 (&gt;&gt;) 运算符。
            </summary>
      <param name="Operand">
                必需。
                 整型数值表达式。
                 要移动的位模式。
                 数据类型必须是整数类型 (<see langword="SByte" />, ，<see langword="Byte" />, ，<see langword="Short" />, ，<see langword="UShort" />, ，<see langword="Integer" />, ，<see langword="UInteger" />, ，<see langword="Long" />, ，或 <see langword="ULong" />)。
              </param>
      <param name="Amount">
                必需。
                 数值表达式。
                 要位移的位模式的比特数。
                 数据类型必须为 <see langword="Integer" /> 或扩大到 <see langword="Integer" />。
              </param>
      <returns>
              一个整型数值。
               移位的位模式的结果。
               数据类型是相同的 <paramref name="Operand" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic 减号 （-） 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何数值表达式。
              </param>
      <returns>
              之间的差异 <paramref name="Left" /> 和 <paramref name="Right" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>
              表示 Visual Basic <see langword="Xor" /> 运算符。
            </summary>
      <param name="Left">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <param name="Right">
                必需。
                 任何 <see langword="Boolean" /> 或数值表达式。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 或数字值。
               有关 <see langword="Boolean" /> 比较，返回值是两个逻辑异 （排他逻辑析取） <see langword="Boolean" /> 值。
               对于按位 （数字） 运算，返回值是一个数字值，表示按位异 （排他位或运算） 的两个数值的位模式。
               有关详细信息，请参阅异或运算符 (Visual Basic)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" /> 类的新实例。
               这是一个帮助器方法。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>
              执行的工作<see langword="Clear" />方法<see langword="Err" />对象。
               一个帮助器方法。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>
              执行的工作<see langword="Raise" />方法<see langword="Err" />对象。
               一个帮助器方法。
            </summary>
      <param name="hr">
                一个整数值，标识错误的性质。
                 Visual Basic 错误都在范围之内 0 – 65535;为系统错误; 保留范围 0 – 512513 – 65535 的范围是可用于用户定义的错误。
              </param>
      <returns>
              一个 <see cref="T:System.Exception" /> 对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>
              关闭，以调用程序集的所有文件和停止的进程。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>
              Visual Basic 编译器使用此帮助器方法来捕获中的异常 <see langword="Err" /> 对象。
            </summary>
      <param name="ex">
                <see cref="T:System.Exception" /> 对象被捕获。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>
              Visual Basic 编译器使用此帮助器方法来捕获中的异常 <see langword="Err" /> 对象。
            </summary>
      <param name="ex">
                <see cref="T:System.Exception" /> 对象被捕获。
              </param>
      <param name="lErl">
                异常的行号。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Short" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Short" /> 值。
              </param>
      <returns>
              <see langword="Short" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>
              返回 <see langword="Short" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Short" /> 值。
              </param>
      <returns>
              <see langword="Short" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>
              返回 <see langword="Single" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Single" /> 值。
              </param>
      <returns>
              <see langword="Single" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Single" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="Single" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Single" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>
              返回 <see langword="Single" /> 对应于指定的字符串值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Single" /> 值。
              </param>
      <returns>
              <see langword="Single" /> 对应于值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="Single" /> 对应于指定的字符串和数字格式信息的值。
            </summary>
      <param name="Value">
                必需。
                 要转换为字符串 <see langword="Single" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="Single" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>
              返回 <see langword="String" /> 对应于指定的值 <see langword="Boolean" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Boolean" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>
              返回 <see langword="String" /> 对应于指定的值 <see langword="Byte" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Byte" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>
              返回 <see langword="String" /> 对应于指定的值 <see langword="Char" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Char" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>
              返回 <see langword="String" /> 对应于指定日期的值。
            </summary>
      <param name="Value">
                必需。
                 要将转换为日期 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>
              返回 <see langword="String" /> 对应于指定的值 <see langword="Decimal" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Decimal" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Decimal" /> 和数字格式信息。
            </summary>
      <param name="Value">
                必需。
                <see langword="Decimal" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Double" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Double" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Double" /> 和数字格式信息。
            </summary>
      <param name="Value">
                必需。
                <see langword="Double" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Integer" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Integer" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Int64" /> （64 位整数）。
            </summary>
      <param name="Value">
                必需。
                <see langword="Int64" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>
              返回 <see langword="String" /> 对应于指定对象的值。
            </summary>
      <param name="Value">
                必需。
                 对象将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Int16" /> （16 位整数）。
            </summary>
      <param name="Value">
                必需。
                <see langword="Int616" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Single" />。
            </summary>
      <param name="Value">
                必需。
                <see langword="Single" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>
              返回 <see langword="String" /> 对应于指定值 <see langword="Single" /> 和数字格式信息。
            </summary>
      <param name="Value">
                必需。
                <see langword="Sinble" /> 若要将转换为 <see langword="String" /> 值。
              </param>
      <param name="NumberFormat">
                一个 <see cref="T:System.Globalization.NumberFormatInfo" /> 格式化和显示，具体取决于该区域性定义如何数字值的对象。
              </param>
      <returns>
              <see langword="String" /> 相对应的值 <paramref name="Value" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>
              将覆盖 <paramref name="sDest" /> 参数的内容与 <paramref name="sInsert" /> 参数。
            </summary>
      <param name="sDest">
                必需。
                 若要修改的字符串变量。
              </param>
      <param name="StartPosition">
                必需。
                 中的位置 <paramref name="sDest" /> 参数，以开始从覆盖。
                 索引是从 1 开始。
              </param>
      <param name="MaxInsertLength">
                必需。
                 字符的最大数目 <paramref name="sInsert" /> 参数来使用，从第一个字符开始。
              </param>
      <param name="sInsert">
                必需。
                 字符串值来覆盖 <paramref name="sDest" /> 具有参数。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>
              比较两个字符串。
            </summary>
      <param name="sLeft">
                必需。
                 要比较的字符串 <paramref name="sRight" />。
              </param>
      <param name="sRight">
                必需。
                 要比较的字符串 <paramref name="sLeft" />。
              </param>
      <param name="TextCompare">
                必需。
                <see langword="True" /> 若要执行不区分大小写的比较;否则为 <see langword="False" />。
              </param>
      <returns>
                      值 
                    
                      条件 
                    
                      零 
                    
                      这两个字符串相等。
                    
                      小于零 
                    
                      <paramref name="sLeft" /> 小于 <paramref name="sRight" />。
                    
                      大于零 
                    
                      <paramref name="sLeft" /> 大于 <paramref name="sRight" />。
                    </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              比较参数 <paramref name="Source" /> 和 <paramref name="Pattern" /> ，并返回相同的结果 <see langword="Like" /> 运算符。
            </summary>
      <param name="Source">
                必需。
                 任何 <see langword="String" /> 表达式。
              </param>
      <param name="Pattern">
                任何 <see langword="String" /> 符合 Like 运算符中所述的模式匹配约定表达式。
              </param>
      <param name="CompareOption">
                指定如何比较字符串与模式，根据 <see cref="T:Microsoft.VisualBasic.CompareMethod" />。
                 可以是 <see langword="vbBinaryCompare" /> 进行二进制比较或 <see langword="vbTextCompare" /> 基于取决于您系统的不区分大小写的文本排序顺序的比较为 <see langword="LocaleID" /> 值。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示是否字符串满足该模式。
               如果字符串中的值满足模式中包含的模式，结果是 <see langword="True" />。
               如果字符串不符合该模式，则结果是 <see langword="False" />。
               如果字符串和模式都是空字符串，则结果是 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>
              比较参数 <paramref name="Source" /> 和 <paramref name="Pattern" /> ，并返回相同的结果 <see langword="Like" /> 操作员，请使用二进制比较。
            </summary>
      <param name="Source">
                必需。
                 任何 <see langword="String" /> 表达式。
              </param>
      <param name="Pattern">
                必需。
                 任何 <see langword="String" /> 符合 Like 运算符中所述的模式匹配约定表达式。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示是否字符串满足该模式。
               如果字符串中的值满足模式中包含的模式，结果是 <see langword="True" />。
               如果字符串不符合该模式，则结果是 <see langword="False" />。
               如果字符串和模式都是空字符串，则结果是 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>
              比较参数 <paramref name="Source" /> 和 <paramref name="Pattern" /> ，并返回相同的结果 <see langword="Like" /> 操作员，请使用文本比较。
            </summary>
      <param name="Source">
                必需。
                 任何 <see langword="String" /> 表达式。
              </param>
      <param name="Pattern">
                必需。
                 任何 <see langword="String" /> 符合 Like 运算符中所述的模式匹配约定表达式。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示是否字符串满足该模式。
               如果字符串中的值满足模式中包含的模式，结果是 <see langword="True" />。
               如果字符串不符合该模式，则结果是 <see langword="False" />。
               如果字符串和模式都是空字符串，则结果是 <see langword="True" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>
              Visual Basic 编译器用作帮助器<see langword="Redim" />。
            </summary>
      <param name="arySrc">
                要复制的数组。
              </param>
      <param name="aryDest">
                目标数组。
              </param>
      <returns>
              复制的数组。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.GetResourceString(System.String,System.String[])">
      <summary>
              检索并设置本地化的资源字符串或错误消息的格式。
            </summary>
      <param name="ResourceKey">
                要检索的字符串或错误消息的标识符。
              </param>
      <param name="Args">
                要替换的字符串或错误消息中的占位符的参数数组。
              </param>
      <returns>
              带格式的资源字符串或错误消息。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.MethodToString(System.Reflection.MethodBase)">
      <summary>
              返回 Visual Basic 方法签名。
            </summary>
      <param name="Method">
                一个 <see cref="T:System.Reflection.MethodBase" /> 要返回的 Visual Basic 方法签名对象。
              </param>
      <returns>
              所提供的 Visual Basic 方法签名 <see cref="T:System.Reflection.MethodBase" /> 对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.SetCultureInfo(System.Globalization.CultureInfo)">
      <summary>
              设置当前线程的区域性。
            </summary>
      <param name="Culture">
                一个 <see cref="T:System.Globalization.CultureInfo" /> 要设置为当前线程的区域性对象。
              </param>
      <returns>
              以前的值 <see cref="P:System.Threading.Thread.CurrentCulture" /> 当前线程的属性。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.ThrowException(System.Int32)">
      <summary>
              将本地化的 Visual Basic 异常引发。
            </summary>
      <param name="hr">
                Visual Basic 错误标识符。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>
              在对象上执行的方法或设置或对象上返回一个属性。
            </summary>
      <param name="Instance">
                必需。
                <see langword="Object" />。
                 指向公开的属性或方法的对象的指针。
              </param>
      <param name="MethodName">
                必需。
                <see langword="String" />。
                 包含的属性或方法的对象的名称的字符串表达式。
              </param>
      <param name="UseCallType">
                必需。
                 类型的枚举成员<see cref="T:Microsoft.VisualBasic.CallType" />表示的过程调用的类型。
                 The value of <see langword="CallType" /> can be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.
              </param>
      <param name="Arguments">
                可选。
                <see langword="ParamArray" />。
                 包含要传递到的属性或方法调用的自变量的参数数组。
              </param>
      <returns>
              在对象上执行的方法或设置或对象上返回一个属性。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>
              返回一个布尔值，该值指示是否可以作为数字计算表达式。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回一个布尔值，该值指示是否可以作为数字计算表达式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>
              返回一个包含变量的系统数据类型名称的字符串值。
            </summary>
      <param name="VbName">
                必需。
                 包含 Visual Basic 类型名称的字符串变量。
              </param>
      <returns>
              返回一个包含变量的系统数据类型名称的字符串值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>
              返回一个包含有关变量的数据类型信息的字符串值。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 变量。
                 如果 <see langword="Option Strict" /> 是 <see langword="Off" />, ，可以传递结构之外的任何数据类型的变量。
              </param>
      <returns>
              返回一个包含有关变量的数据类型信息的字符串值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>
              返回一个包含变量的 Visual Basic 数据类型名称的字符串值。
            </summary>
      <param name="SystemName">
                必需。
                 包含由公共语言运行时使用的类型名称的字符串变量。
              </param>
      <returns>
              返回一个包含变量的 Visual Basic 数据类型名称的字符串值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ControlChars" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>
              将对象转换为指定的类型。
            </summary>
      <param name="Expression">
                要转换的对象。
              </param>
      <param name="TargetType">
                要将对象转换为类型。
              </param>
      <returns>
              在运行时其类型为请求的目标类型的对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>
              将对象转换为指定的泛型类型。
            </summary>
      <param name="Expression">
                要转换的对象。
              </param>
      <typeparam name="TargetType">
                要将对象转换为类型。
              </typeparam>
      <returns>
              一个静态类型化为请求的泛型类型的对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>
              返回与给定的错误号相对应的错误消息。
            </summary>
      <returns>
              对应于最新的运行时错误的错误信息。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="ErrorNumber" /> 超出范围。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>
              返回与给定的错误号相对应的错误消息。
            </summary>
      <param name="ErrorNumber">
                可选。
                 任何有效的错误号。
              </param>
      <returns>
              给定的错误号相对应的错误消息。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="ErrorNumber" /> 超出范围。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>
              返回表示数字的十六进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或<see langword="String" />表达式。
              </param>
      <returns>
              返回表示数字的十六进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" />未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" />不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>
              返回一个数字的整数部分。
            </summary>
      <param name="Number">
                必需。
                 类型的编号 <see langword="Double" /> 或任何有效的数值表达式。
                 如果 <paramref name="Number" /> 包含 <see langword="Nothing" />, ，<see langword="Nothing" /> 返回。
              </param>
      <returns>
              返回一个数字的整数部分。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  未指定编号。
                </exception>
      <exception cref="T:System.ArgumentException">
                  数字不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>
              返回表示数字的八进制值的字符串。
            </summary>
      <param name="Number">
                必需。
                 任何有效的数值表达式或 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回表示数字的八进制值的字符串。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>
              返回 <see langword="String" /> 的数字表示形式。
            </summary>
      <param name="Number">
                必需。
                <see langword="Object" /> 包含任何有效的数值表达式。
              </param>
      <returns>
              返回 <see langword="String" /> 的数字表示形式。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Number" /> 未指定。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="Number" /> 不是数值类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>
              将字符串中包含的数字作为适当类型的数值返回。
            </summary>
      <param name="Expression">
                必需。
                 任何有效的 <see langword="String" /> 表达式、<see langword="Object" /> 变量或 <see langword="Char" /> 值。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />，其值必须可转换为 <see langword="String" />，否则将发生 <see cref="T:System.ArgumentException" /> 错误。
              </param>
      <returns>
              将字符串中包含的数字作为适当类型的数值返回。
            </returns>
      <exception cref="T:System.OverflowException">
                  <paramref name="InputStr" /> 太大。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Expression" /> 是不可转换为 <see langword="String" /> 的 <see langword="Object" /> 类型表达式。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>
              将字符串中包含的数字作为适当类型的数值返回。
            </summary>
      <param name="Expression">
                必需。
                 任何有效的 <see langword="String" /> 表达式、<see langword="Object" /> 变量或 <see langword="Char" /> 值。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />，其值必须可转换为 <see langword="String" />，否则将发生 <see cref="T:System.ArgumentException" /> 错误。
              </param>
      <returns>
              将字符串中包含的数字作为适当类型的数值返回。
            </returns>
      <exception cref="T:System.OverflowException">
                  <paramref name="InputStr" /> 太大。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Expression" /> 是不可转换为 <see langword="String" /> 的 <see langword="Object" /> 类型表达式。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>
              将字符串中包含的数字作为适当类型的数值返回。
            </summary>
      <param name="InputStr">
                必需。
                 任何有效的 <see langword="String" /> 表达式、<see langword="Object" /> 变量或 <see langword="Char" /> 值。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />，其值必须可转换为 <see langword="String" />，否则将发生 <see cref="T:System.ArgumentException" /> 错误。
              </param>
      <returns>
              将字符串中包含的数字作为适当类型的数值返回。
            </returns>
      <exception cref="T:System.OverflowException">
                  <paramref name="InputStr" /> 太大。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Expression" /> 是不可转换为 <see langword="String" /> 的 <see langword="Object" /> 类型表达式。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>
              返回 <see langword="Date" /> 值，该值包含指定的时间间隔已添加到其中的日期和时间值。
            </summary>
      <param name="Interval">
                必需。
                <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示您想要添加的时间间隔。
              </param>
      <param name="Number">
                必需。
                <see langword="Double" />。
                 浮点表达式，它表示您想要添加的间隔数。
                <paramref name="Number" /> 可以是正数 （要在以后获取日期/时间值） 或负值 （以获取过去的日期/时间值）。
                 可以包含小数部分时 <paramref name="Interval" /> 指定小时、 分钟或秒为单位。
                 其他值， <paramref name="Interval" />, 、 任何小数部分的 <paramref name="Number" /> 将被忽略。
              </param>
      <param name="DateValue">
                必需。
                <see langword="Date" />。
                 表示的日期和时间的时间间隔是要添加的表达式。
                <paramref name="DateValue" /> 本身不会更改调用程序中。
              </param>
      <returns>
              返回 <see langword="Date" /> 值，该值包含指定的时间间隔已添加到其中的日期和时间值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Interval" /> 无效。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  是计算所得的日期在月 1 日，或晚于 12 月 31 日 23:59:59 每年的 1 月 1 日 00:00:00 之前 9999。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>
              返回 <see langword="Date" /> 值，该值包含指定的时间间隔已添加到其中的日期和时间值。
            </summary>
      <param name="Interval">
                必需。
                <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示您想要添加的时间间隔。
              </param>
      <param name="Number">
                必需。
                <see langword="Double" />。
                 浮点表达式，它表示您想要添加的间隔数。
                <paramref name="Number" /> 可以是正数 （要在以后获取日期/时间值） 或负值 （以获取过去的日期/时间值）。
                 可以包含小数部分时 <paramref name="Interval" /> 指定小时、 分钟或秒为单位。
                 其他值， <paramref name="Interval" />, 、 任何小数部分的 <paramref name="Number" /> 将被忽略。
              </param>
      <param name="DateValue">
                必需。
                <see langword="Date" />。
                 表示的日期和时间的时间间隔是要添加的表达式。
                <paramref name="DateValue" /> 本身不会更改调用程序中。
              </param>
      <returns>
              返回 <see langword="Date" /> 值，该值包含指定的时间间隔已添加到其中的日期和时间值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Interval" /> 无效。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  是计算所得的日期在月 1 日，或晚于 12 月 31 日 23:59:59 每年的 1 月 1 日 00:00:00 之前 9999。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
              返回 <see langword="Long" /> 值，该值指定两个区域之间的时间间隔数 <see langword="Date" /> 值。
            </summary>
      <param name="Interval">
                必需。
                <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示要用作之间的差的单位的时间间隔 <paramref name="Date1" /> 和 <paramref name="Date2" />。
              </param>
      <param name="Date1">
                必需。
                <see langword="Date" />。
                 你想要在计算中使用第一个日期/时间值。
              </param>
      <param name="Date2">
                必需。
                <see langword="Date" />。
                 你想要在计算中使用第二个日期/时间值。
              </param>
      <param name="DayOfWeek">
                可选。
                 从选择的值 <see langword="FirstDayOfWeek" /> 枚举，用于指定一周的第一天。
                 如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。
              </param>
      <param name="WeekOfYear">
                可选。
                 从选择的值 <see langword="FirstWeekOfYear" /> 枚举，用于指定年份的第一周。
                 如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。
              </param>
      <returns>
              返回 <see langword="Long" /> 值，该值指定两个区域之间的时间间隔数 <see langword="Date" /> 值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  无效 <paramref name="Interval" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Date1" />, <paramref name="Date2" />, ，或 <paramref name="DayofWeek" /> 超出范围。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="Date1" /> 或 <paramref name="Date2" /> 属于无效类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
              返回 <see langword="Long" /> 值，该值指定两个区域之间的时间间隔数 <see langword="Date" /> 值。
            </summary>
      <param name="Interval">
                必需。
                <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示要用作之间的差的单位的时间间隔 <paramref name="Date1" /> 和 <paramref name="Date2" />。
              </param>
      <param name="Date1">
                必需。
                <see langword="Date" />。
                 你想要在计算中使用第一个日期/时间值。
              </param>
      <param name="Date2">
                必需。
                <see langword="Date" />。
                 你想要在计算中使用第二个日期/时间值。
              </param>
      <param name="DayOfWeek">
                可选。
                 从选择的值 <see langword="FirstDayOfWeek" /> 枚举，用于指定一周的第一天。
                 如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。
              </param>
      <param name="WeekOfYear">
                可选。
                 从选择的值 <see langword="FirstWeekOfYear" /> 枚举，用于指定年份的第一周。
                 如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。
              </param>
      <returns>
              返回 <see langword="Long" /> 值，该值指定两个区域之间的时间间隔数 <see langword="Date" /> 值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  无效 <paramref name="Interval" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Date1" />, <paramref name="Date2" />, ，或 <paramref name="DayofWeek" /> 超出范围。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="Date1" /> 或 <paramref name="Date2" /> 属于无效类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
              返回 <see langword="Integer" /> 值，该值包含指定的组件的给定 <see langword="Date" /> 值。
            </summary>
      <param name="Interval">
                必需。
                <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示您希望返回的日期/时间值的一部分。
              </param>
      <param name="DateValue">
                必需。
                <see langword="Date" /> 您想要评估的值。
              </param>
      <param name="FirstDayOfWeekValue">
                可选。
                 从选择的值 <see langword="FirstDayOfWeek" /> 枚举，用于指定一周的第一天。
                 如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。
              </param>
      <param name="FirstWeekOfYearValue">
                可选。
                 从选择的值 <see langword="FirstWeekOfYear" /> 枚举，用于指定年份的第一周。
                 如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。
              </param>
      <returns>
              返回 <see langword="Integer" /> 值，该值包含指定的组件的给定 <see langword="Date" /> 值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Interval" /> 无效。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>
              返回 <see langword="Integer" /> 值，该值包含指定的组件的给定 <see langword="Date" /> 值。
            </summary>
      <param name="Interval">
                必需。
                <see langword="DateInterval" /> 枚举值或 <see langword="String" /> 表达式，它表示您希望返回的日期/时间值的一部分。
              </param>
      <param name="DateValue">
                必需。
                <see langword="Date" /> 您想要评估的值。
              </param>
      <param name="DayOfWeek">
                可选。
                 从选择的值 <see langword="FirstDayOfWeek" /> 枚举，用于指定一周的第一天。
                 如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。
              </param>
      <param name="WeekOfYear">
                可选。
                 从选择的值 <see langword="FirstWeekOfYear" /> 枚举，用于指定年份的第一周。
                 如果未指定，则使用 <see langword="FirstWeekOfYear.Jan1" />。
              </param>
      <returns>
              返回 <see langword="Integer" /> 值，该值包含指定的组件的给定 <see langword="Date" /> 值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Interval" /> 无效。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="DateValue" /> 并不强制为 <see langword="Date" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>
              返回 <see langword="Date" /> 值，该值表示指定的年、 月和日的时间信息设置为午夜 (00: 00:00)。
            </summary>
      <param name="Year">
                必需。
                <see langword="Integer" /> 从 1 到 9999 之间的表达式。
                 但是，也接受小于此范围的值。
                 如果 <paramref name="Year" /> 为 0 到 99 之间，则它被解释为介于 1930年和 2029，如下面的"备注"部分中所述。
                 如果 <paramref name="Year" /> 小于 1，从当前年份减去。
              </param>
      <param name="Month">
                必需。
                <see langword="Integer" /> 从 1 到 12 的表达式。
                 但是，也接受此范围之外的值。
                 值 <paramref name="Month" /> 偏移量为 1 并应用于计算年份的 1 月。
                 换而言之，(<paramref name="Month" /> -1) 添加到年 1 月。
                 如有必要，将重新计算年份。
                 下面的结果说明了这种效果︰
              
                如果 <paramref name="Month" /> 为 1，结果是计算年份的 1 月。
              
                如果 <paramref name="Month" /> 为 0，则结果为 12 月的上一年。
              
                如果 <paramref name="Month" /> 为-1，结果为 11 月的上一年。
              
                如果 <paramref name="Month" /> 为 13，则结果为在下一年的 1 月。
              </param>
      <param name="Day">
                必需。
                <see langword="Integer" /> 从 1 到 31 的表达式。
                 但是，也接受此范围之外的值。
                 值 <paramref name="Day" /> 偏移量为 1 并应用于计算得出的月份的第一天。
                 换而言之，(<paramref name="Day" /> -1) 添加到该月的第一个。
                 如有必要，将重新计算的月份和年份。
                 下面的结果说明了这种效果︰
              
                如果 <paramref name="Day" /> 为 1，结果是计算得出的月份的第一天。
              
                如果 <paramref name="Day" /> 为 0，则结果为上一个月的最后一天。
              
                如果 <paramref name="Day" /> 为-1，则结果为上个月的倒数第二天。
              
                如果 <paramref name="Day" /> 是的过去的末尾当前月份，则结果为下个月的相应天。
                 例如，如果 <paramref name="Month" /> 是 4 和 <paramref name="Day" /> 为 31，则结果为 5 月 1 日。
              </param>
      <returns>
              返回 <see langword="Date" /> 值，该值表示指定的年、 月和日的时间信息设置为午夜 (00: 00:00)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>
              返回 <see langword="Date" /> 值，该值包含日期信息由一个字符串，表示与时间信息设置为午夜 (00: 00:00)。
            </summary>
      <param name="StringDate">
                必需。
                <see langword="String" /> 从 1 到 12 月 31 日 23:59:59 年 1 月 1 日 00:00:00 9999 表示的日期/时间值的表达式。
              </param>
      <returns>
              <see langword="Date" /> 值，该值包含日期信息由一个字符串，表示与时间信息设置为午夜 (00: 00:00)。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="StringDate" /> 包含无效的时间信息。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>
              返回 <see langword="Integer" /> 从 1 到 31 之间的月份值。
            </summary>
      <param name="DateValue">
                必需。
                <see langword="Date" /> 要从中提取一天的值。
              </param>
      <returns>
              返回 <see langword="Integer" /> 从 1 到 31 之间的月份值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>
              返回<see langword="Integer" />从 0 到 23 表示一天 24 小时的值。
            </summary>
      <param name="TimeValue">
                必需。
                <see langword="Date" />要从中提取小时的值。
              </param>
      <returns>
              返回<see langword="Integer" />从 0 到 23 表示一天 24 小时的值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>
              返回 <see langword="Integer" /> 从 0 到 59，表示小时的分钟值。
            </summary>
      <param name="TimeValue">
                必需。
                <see langword="Date" /> 要从中提取分钟值。
              </param>
      <returns>
              返回 <see langword="Integer" /> 从 0 到 59，表示小时的分钟值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>
              返回 <see langword="Integer" /> 取值范围为 1 到 12 表示年中的月。
            </summary>
      <param name="DateValue">
                必需。
                <see langword="Date" /> 要从中提取月份的值。
              </param>
      <returns>
              返回 <see langword="Integer" /> 取值范围为 1 到 12 表示年中的月。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>
              返回 <see langword="String" /> 值，该值包含指定月份的名称。
            </summary>
      <param name="Month">
                必需。
                <see langword="Integer" />。
                 从 1 到 13; 每月数值表示形式1 表示年 1 月，12 表示十二月。
                 您可以使用 13 个月的日历值 13。
                 如果您的系统使用 12 个月日历和 <paramref name="Month" /> 为 13， <see langword="MonthName" /> 返回一个空字符串。
              </param>
      <param name="Abbreviate">
                可选。
                <see langword="Boolean" /> 值，该值指示是否缩写月份名称。
                 如果省略，默认值是 <see langword="False" />, ，这意味着月份名称不缩写形式。
              </param>
      <returns>
              返回 <see langword="String" /> 值，该值包含指定月份的名称。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Month" /> 是小于 1 或大于 13。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>
              返回 <see langword="Integer" /> 从 0 到 59，表示分钟的第二个值。
            </summary>
      <param name="TimeValue">
                必需。
                <see langword="Date" /> 要从中提取第二个值。
              </param>
      <returns>
              返回 <see langword="Integer" /> 从 0 到 59，表示分钟的第二个值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>
              返回 <see langword="Date" /> 值，该值表示指定的小时、 分钟和秒，设置相对于 1 年 1 月 1 日的日期信息。
            </summary>
      <param name="Hour">
                必需。
                <see langword="Integer" /> 0 到 23 之间的表达式。
                 但是，也接受此范围之外的值。
              </param>
      <param name="Minute">
                必需。
                <see langword="Integer" /> 从 0 到 59 的表达式。
                 但是，也接受此范围之外的值。
                 值 <paramref name="Minute" /> 加入计算的小时，因此负值指定该小时前的分钟数。
              </param>
      <param name="Second">
                必需。
                <see langword="Integer" /> 从 0 到 59 的表达式。
                 但是，也接受此范围之外的值。
                 值 <paramref name="Second" /> 加入计算的分钟，因此负值指定该分钟前的秒数。
              </param>
      <returns>
              返回 <see langword="Date" /> 值，该值表示指定的小时、 分钟和秒，设置相对于 1 年 1 月 1 日的日期信息。
            </returns>
      <exception cref="T:System.ArgumentException">
                  参数是-2147483648 到 2147483647 的范围之外
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  计算出的时间是小于负 24 小时。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>
              返回 <see langword="Date" /> 值，该值包含由一个字符串，表示将设置为 1 年 1 月 1 日的日期信息的时间信息。
            </summary>
      <param name="StringTime">
                必需。
                <see langword="String" /> 从 1 到 12 月 31 日 23:59:59 年 1 月 1 日 00:00:00 9999 表示的日期/时间值的表达式。
              </param>
      <returns>
              返回 <see langword="Date" /> 值，该值包含由一个字符串，表示将设置为 1 年 1 月 1 日的日期信息的时间信息。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="StringTime" /> 包含无效的日期信息。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>
              返回 <see langword="Integer" /> 值，该值包含一个表示日期是星期几的数字。
            </summary>
      <param name="DateValue">
                必需。
                <see langword="Date" /> 你想要确定日期是星期几的值。
              </param>
      <param name="DayOfWeek">
                可选。
                 从选择的值 <see langword="FirstDayOfWeek" /> 枚举，用于指定一周的第一天。
                 如果未指定，则使用 <see langword="FirstDayOfWeek.Sunday" />。
              </param>
      <returns>
              返回 <see langword="Integer" /> 值，该值包含一个表示日期是星期几的数字。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="DayOfWeek" /> 为小于 0 或大于 7。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>
              返回 <see langword="String" /> 值，该值包含指定工作日的名称。
            </summary>
      <param name="Weekday">
                必需。
                <see langword="Integer" />。
                 从 1 到 7; 的工作日的的数字标识1 表示一周的第一天，7 表示一周的最后一天。
                 第一个和最后一天的标识取决于设置 <paramref name="FirstDayOfWeekValue" />。
              </param>
      <param name="Abbreviate">
                可选。
                <see langword="Boolean" /> 值，该值指示是否缩写的星期几名称。
                 如果省略，默认值是 <see langword="False" />, ，这意味着的星期几名称不缩写形式。
              </param>
      <param name="FirstDayOfWeekValue">
                可选。
                 从选择的值 <see langword="FirstDayOfWeek" /> 枚举，用于指定一周的第一天。
                 如果未指定，则使用 <see langword="FirstDayOfWeek.System" />。
              </param>
      <returns>
              返回 <see langword="String" /> 值，该值包含指定工作日的名称。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Weekday" /> 小于 1 或大于 7，或 <paramref name="FirstDayOfWeekValue" /> 小于 0 或大于 7。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>
              返回 <see langword="Integer" /> 从 1 到 9999 表示年份值。
            </summary>
      <param name="DateValue">
                必需。
                <see langword="Date" /> 要从中提取年份的值。
              </param>
      <returns>
              返回 <see langword="Integer" /> 从 1 到 9999 表示年份值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Audio" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>
              播放某个.wav 声音文件。
            </summary>
      <param name="data">
                <see langword="Byte" /> 数组，表示声音文件。
              </param>
      <param name="playMode">
                <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 播放声音的模式。
                 默认情况下， <see langword="AudioPlayMode.Background" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="data" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="playMode" /> 不属于某个 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任情况下存在的该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>
              播放某个.wav 声音文件。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" /> 它表示声音文件。
              </param>
      <param name="playMode">
                <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 播放声音的模式。
                 默认情况下， <see langword="AudioPlayMode.Background" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="playMode" /> 不属于某个 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任情况下存在的该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>
              播放某个.wav 声音文件。
            </summary>
      <param name="location">
                一个 <see langword="String" /> 包含声音文件的名称 
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="location" /> 是一个空字符串。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件由名为 <paramref name="location" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  文件路径是在存在格式错误 <paramref name="location" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  中的路径名称 <paramref name="location" /> 太长。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任情况下存在的该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>
              播放某个.wav 声音文件。
            </summary>
      <param name="location">
                一个 <see langword="String" /> 包含声音文件的名称 
              </param>
      <param name="playMode">
                <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 播放声音的模式。
                 默认情况下， <see langword="AudioPlayMode.Background" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="location" /> 是一个空字符串。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件由名为 <paramref name="location" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  文件路径是在存在格式错误 <paramref name="location" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  中的路径名称 <paramref name="location" /> 太长。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="playMode" /> 不属于某个 <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任情况下存在的该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>
              播放系统声音。
            </summary>
      <param name="systemSound">
                <see cref="T:System.Media.SystemSound" /> 表示要播放系统声音的对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="systemSound" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>
              停止在后台播放的声音。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Clock" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Computer" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>
              向活动窗口时，发送一个或多个击键，就像在键盘上键入。
            </summary>
      <param name="keys">
                A <see langword="String" /> ，它定义要发送的键。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  部分信任情况下存在顺序用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>
              向活动窗口发送一个或多个击键，就像在键盘上键入。
            </summary>
      <param name="keys">
                一个 <see langword="String" /> ，它定义要发送的键。
              </param>
      <param name="wait">
                可选。
                 一个 <see langword="Boolean" /> ，它指定是否要等待的击键得到处理之前应用程序才能继续。
                <see langword="True" /> 默认情况下。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  部分信任情况下存在的该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Mouse" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Network" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  目标网站要求用户凭据。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串，""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串，""。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串，""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串，""。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示的操作; 进度否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                <see cref="T:System.Int32" />。
                 超时间隔，以毫秒为单位。
                 默认值为 100 秒。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="overwrite" /> 设置为 <see langword="False" /> 和目标文件已存在。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串，""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串，""。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示的操作; 进度否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                超时间隔，以毫秒为单位。
                 默认值为 100 秒。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="onUserCancel">
                指定行为，当用户单击 取消 或 否 上的结果所示的对话框 <paramref name="ShowUI" /> 设置为 <see langword="True" />。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="overwrite" /> 设置为 <see langword="False" /> 和目标文件已存在。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  目标网站要求用户凭据。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                <see langword="String" /> 或 <see cref="T:System.Uri" />。
                 若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                <see langword="String" />。
                 文件下载的文件的名称和路径。
              </param>
      <param name="networkCredentials">
                <see cref="T:System.Net.ICredentials" />。
                 要提供的凭据。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示的操作; 进度否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                超时间隔，以毫秒为单位。
                 默认值为 100 秒。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="overwrite" /> 设置为 <see langword="False" /> 和目标文件已存在。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="networkCredentials">
                要提供的凭据。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示的操作; 进度否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                超时间隔，以毫秒为单位。
                 默认值为 100 秒。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="onUserCancel">
                指定行为，当用户单击 取消 或 否 上的结果所示的对话框 <paramref name="showUI" /> 设置为 <see langword="True" />。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="overwrite" /> 设置为 <see langword="False" /> 和目标文件已存在。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串，""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串，""。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串，""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串，""。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示的操作; 进度否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                超时间隔，以毫秒为单位。
                 默认值为 100 秒。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="overwrite" /> 设置为 <see langword="False" /> 和目标文件已存在。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              下载指定的远程文件并将其保存在指定的位置。
            </summary>
      <param name="address">
                若要下载，包括文件名和主机地址的文件路径。
              </param>
      <param name="destinationFileName">
                文件下载的文件的名称和路径。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串，""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串，""。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示的操作; 进度否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                超时间隔，以毫秒为单位。
                 默认值为 100 秒。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="onUserCancel">
                指定行为，当用户单击 取消 或 否 上的结果所示的对话框 <paramref name="ShowUI" /> 设置为 <see langword="True" />。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  驱动器名称无效
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName" /> 带尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="overwrite" /> 设置为 <see langword="False" /> 和目标文件已存在。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>
              指定的服务器执行 ping 操作。
            </summary>
      <param name="hostNameOrAddress">
                URL、 计算机名或 IP 号的服务器进行 ping 操作。
              </param>
      <returns>
              如果操作成功，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  没有网络连接不可用。
                </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">
                  URL 无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>
              指定的服务器执行 ping 操作。
            </summary>
      <param name="hostNameOrAddress">
                URL、 计算机名或 IP 号的服务器进行 ping 操作。
              </param>
      <param name="timeout">
                以毫秒为单位用于联系目标的时间阈值。
                 默认值为 500。
              </param>
      <returns>
              如果操作成功，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  没有网络连接不可用。
                </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">
                  URL 无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>
              指定的服务器执行 ping 操作。
            </summary>
      <param name="address">
                要成功进行 ping 操作服务器的 URI。
              </param>
      <returns>
              如果操作成功，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  没有网络连接不可用。
                </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">
                  URL 无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>
              指定的服务器执行 ping 操作。
            </summary>
      <param name="address">
                要成功进行 ping 操作服务器的 URI。
              </param>
      <param name="timeout">
                以毫秒为单位用于联系目标的时间阈值。
                 默认值为 500。
              </param>
      <returns>
              如果操作成功，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  没有网络连接不可用。
                </exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">
                  URL 无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  目标服务器要求用户凭据。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串︰ ""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串︰ ""。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串︰ ""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串︰ ""。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示进度的操作;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                以毫秒为单位的超时间隔。
                 默认值为 100 秒。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串︰ ""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串︰ ""。
              </param>
      <param name="showUI">
                是否显示操作的进度。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                以毫秒为单位的超时间隔。
                 默认值为 100 秒。
              </param>
      <param name="onUserCancel">
                当用户单击时要采取的操作 取消。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  目标服务器要求用户凭据。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="networkCredentials">
                身份验证的凭据。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示进度的操作;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                以毫秒为单位的超时间隔。
                 默认值为 100 秒。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="networkCredentials">
                身份验证的凭据。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示进度的操作;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                以毫秒为单位的超时间隔。
                 默认值为 100 秒。
              </param>
      <param name="onUserCancel">
                当用户单击时要采取的操作 取消。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串︰ ""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串︰ ""。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  在默认超时时间 （100 秒） 内，服务器不响应。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串︰ ""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串︰ ""。
              </param>
      <param name="showUI">
                <see langword="True" /> 若要显示进度的操作;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                以毫秒为单位的超时间隔。
                 默认值为 100 秒。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将指定的文件发送到指定的主机地址。
            </summary>
      <param name="sourceFileName">
                路径和要上载文件的名称。
              </param>
      <param name="address">
                URL、 IP 地址或目标服务器的 URI。
              </param>
      <param name="userName">
                若要进行身份验证的用户名。
                 默认值为空字符串︰ ""。
              </param>
      <param name="password">
                若要进行身份验证的密码。
                 默认值为空字符串︰ ""。
              </param>
      <param name="showUI">
                是否显示操作的进度。
                 默认值为 <see langword="False" />。
              </param>
      <param name="connectionTimeout">
                以毫秒为单位的超时间隔。
                 默认值为 100 秒。
              </param>
      <param name="onUserCancel">
                当用户单击时要采取的操作 取消。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  源文件路径无效。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="connectionTimeout" /> 小于或等于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  <paramref name="address" /> 不包括文件名。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  身份验证失败。
                </exception>
      <exception cref="T:System.TimeoutException">
                  服务器不在指定响应 <paramref name="connectionTimeout" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户身份验证失败。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户缺少必要的权限来执行网络操作。
                </exception>
      <exception cref="T:System.Net.WebException">
                  由目标 web 服务器将拒绝请求。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 类的新实例。
            </summary>
      <param name="networkAvailable">
                一个 <see cref="T:System.Boolean" /> ，该值指示是否可用于应用程序网络。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.Ports" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)">
      <summary>
              创建并打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象。
            </summary>
      <param name="portName">
                <see langword="String" />。
                 必需。
                 要打开的端口的名称。
              </param>
      <returns>
              打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象，使用所提供的参数配置。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="portName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)">
      <summary>
              创建并打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象。
            </summary>
      <param name="portName">
                <see langword="String" />。
                 必需。
                 要打开的端口的名称。
              </param>
      <param name="baudRate">
                <see langword="Integer" />。
                 所使用的端口的波特率。
              </param>
      <returns>
              打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象，使用所提供的参数配置。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="portName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="baudRate" /> 小于或等于零。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)">
      <summary>
              创建并打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象。
            </summary>
      <param name="portName">
                <see langword="String" />。
                 必需。
                 要打开的端口的名称。
              </param>
      <param name="baudRate">
                <see langword="Integer" />。
                 所使用的端口的波特率。
              </param>
      <param name="parity">
                <see cref="T:System.IO.Ports.Parity" />。
                 所使用的端口的奇偶校验。
              </param>
      <returns>
              打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象，使用所提供的参数配置。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="portName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="baudRate" /> 小于或等于零。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="parity" /> 不属于某个 <see cref="T:System.IO.Ports.Parity" /> 枚举值。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)">
      <summary>
              创建并打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象。
            </summary>
      <param name="portName">
                <see langword="String" />。
                 必需。
                 要打开的端口的名称。
              </param>
      <param name="baudRate">
                <see langword="Integer" />。
                 所使用的端口的波特率。
              </param>
      <param name="parity">
                <see cref="T:System.IO.Ports.Parity" />。
                 所使用的端口的奇偶校验。
              </param>
      <param name="dataBits">
                <see langword="Integer" />。
                 数据位所使用的端口设置。
              </param>
      <returns>
              打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象，使用所提供的参数配置。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="portName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="baudRate" /> 小于或等于零。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="dataBits" /> 小于或等于零。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="parity" /> 不属于某个 <see cref="T:System.IO.Ports.Parity" /> 枚举值。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
      <summary>
              创建并打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象。
            </summary>
      <param name="portName">
                <see langword="String" />。
                 必需。
                 要打开的端口的名称。
              </param>
      <param name="baudRate">
                <see langword="Integer" />。
                 所使用的端口的波特率。
              </param>
      <param name="parity">
                <see cref="T:System.IO.Ports.Parity" />。
                 所使用的端口的奇偶校验。
              </param>
      <param name="dataBits">
                <see langword="Integer" />。
                 数据位所使用的端口设置。
              </param>
      <param name="stopBits">
                <see cref="T:System.IO.Ports.StopBits" />。
                 停止位所使用的端口设置。
              </param>
      <returns>
              打开 <see cref="T:System.IO.Ports.SerialPort" /> 对象，使用所提供的参数配置。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="portName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="baudRate" /> 小于或等于零。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="dataBits" /> 小于或等于零。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="parity" /> 不属于某个 <see cref="T:System.IO.Ports.Parity" /> 枚举值。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  <paramref name="stopBits" /> 不属于某个 <see cref="T:System.IO.Ports.StopBits" /> 枚举值。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>
              清除的所有属性设置<see langword="Err" />对象。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>
              返回表示所发生的错误的异常。
            </summary>
      <returns>
              返回表示所发生的错误的异常。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>
              生成运行时错误;可以使用而不是 <see langword="Error" /> 语句。
            </summary>
      <param name="Number">
                必需。
                <see langword="Long" /> 标识错误的性质的整数。
                 Visual Basic 错误处于范围为 0 – 65535;范围 0-512 被保留的系统错误;513 – 65535 的范围是可用于用户定义的错误。
                 在设置时 <see langword="Number" /> 属性设置为您自己的类模块中的错误代码，您向其中添加您错误代码编号 <see langword="vbObjectError" /> 常量。
                 例如，若要生成的错误号 513，将分配 vbObjectError + 513 到 <see langword="Number" /> 属性。
              </param>
      <param name="Source">
                可选。
                <see langword="String" /> 命名对象或应用程序生成错误的表达式。
                 设置此属性的对象时，使用窗体 <paramref name="project" />。<paramref name="class" />。
                 如果 <paramref name="Source" /> 未指定，则使用当前的 Visual Basic 项目的进程 ID。
              </param>
      <param name="Description">
                可选。
                <see langword="String" /> 描述错误的表达式。
                 如果未指定中的值 <see langword="Number" /> 检查属性。
                 如果将其映射到 Visual Basic 运行时错误代码，将由返回的字符串 <see langword="Error" /> 函数用作 <see langword="Description" /> 属性。
                 如果没有对应于 Visual Basic 错误 <see langword="Number" /> 使用属性，"应用程序或对象定义错误"消息。
              </param>
      <param name="HelpFile">
                可选。
                 可以在其中找到此错误的帮助的帮助文件的完全限定的路径。
                 如果未指定，则 Visual Basic 使用完全限定的驱动器、 路径和 Visual Basic 帮助文件的文件名。
              </param>
      <param name="HelpContext">
                可选。
                 标识内的某个主题的上下文 ID <paramref name="HelpFile" /> ，提供有关错误的帮助。
                 如果省略，与对应的错误的 Visual Basic 帮助文件上下文 ID <see langword="Number" /> 使用属性，如果它存在。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>
              合并两个路径，并返回格式正确的路径。
            </summary>
      <param name="baseDirectory">
                <see langword="String" />。
                 要组合的第一个路径。
              </param>
      <param name="relativePath">
                <see langword="String" />。
                 要合并的第二个路径。
              </param>
      <returns>
              指定的路径的组合。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="baseDirectory" />或<paramref name="relativePath" />格式不正确的路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>
              将目录的内容复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录内容复制到该位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将目录的内容复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录内容复制到该位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="ShowUI" />设置为<see langword="UIOption.AllDialogs" />并且用户取消操作，或无法复制目录中的一个或多个文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将目录的内容复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录内容复制到该位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定应该是什么如果用户单击这样做取消在操作过程中。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="ShowUI" />设置为<see langword="UIOption.AllDialogs" />并且用户取消操作，或无法复制目录中的一个或多个文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>
              将目录的内容复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录内容复制到该位置。
              </param>
      <param name="overwrite">
                <see langword="True" />若要覆盖现有文件;否则为<see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在和<paramref name="overwrite" />设置为<see langword="False" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定应该是什么如果用户单击这样做取消在操作过程中。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在和<paramref name="overwrite" />设置为<see langword="False" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="UICancelOption" />设置为<see langword="ThrowException" />，并且用户已取消该操作或发生了 I/O 错误。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <param name="overwrite">
                <see langword="True" />如果应覆盖现有文件;否则为<see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在和<paramref name="overwrite" />设置为<see langword="False" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>
              创建目录。
            </summary>
      <param name="directory">
                名称和目录的位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  目录名称格式不正确。
                   例如，它包含非法字符，或仅为空白。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  目录名称过长。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称是仅为冒号 （:）。
                </exception>
      <exception cref="T:System.IO.IOException">
                  要创建的父目录是目录的只读的
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有权限创建目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>
              删除一个目录。
            </summary>
      <param name="directory">
                要删除的目录。
              </param>
      <param name="onDirectoryNotEmpty">
                指定要从中删除一个目录包含文件或目录时应采取的操作。
                 默认值为 <see langword="DeleteDirectoryOption.DeleteAllContents" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径是一个零长度字符串、 格式不正确、 仅包含空白，或包含无效字符 （包括通配符）。
                   该路径是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  目录不存在或者目录是一个文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该目录不为空，并且 <paramref name="onDirectoryNotEmpty" /> 设置为 <see langword="ThrowIfDirectoryNonEmpty" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有删除目录或子目录的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录或子目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称包含冒号 （:）。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有所需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了该操作，或者不能删除该目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
              删除一个目录。
            </summary>
      <param name="directory">
                要删除的目录。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指定是否应删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径是一个零长度字符串、 格式不正确、 仅包含空白，或包含无效字符 （包括通配符）。
                   该路径是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  目录不存在或者目录是一个文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该目录不为空，并且 <paramref name="onDirectoryNotEmpty" /> 设置为 <see langword="ThrowIfDirectoryNonEmpty" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有删除目录或子目录的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录或子目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称包含冒号 （:）。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有所需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了该操作，或者不能删除该目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              删除一个目录。
            </summary>
      <param name="directory">
                要删除的目录。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指定是否应删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <param name="onUserCancel">
                指定是否引发异常，如果用户单击 取消。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径是一个零长度字符串、 格式不正确、 仅包含空白，或包含无效字符 （包括通配符）。
                   该路径是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  目录不存在或者目录是一个文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该目录不为空，并且 <paramref name="onDirectoryNotEmpty" /> 设置为 <see langword="ThrowIfDirectoryNonEmpty" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有删除目录或子目录的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录或子目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称包含冒号 （:）。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有所需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了该操作，或者不能删除该目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>
              删除的文件。
            </summary>
      <param name="file">
                名称和要删除的文件的路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;它具有尾部反斜杠，必须指定一个文件;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该文件正在使用。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有删除该文件的权限或者该文件是只读的。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
              删除的文件。
            </summary>
      <param name="file">
                名称和要删除的文件的路径。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指示是否应将已删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;它具有尾部反斜杠，必须指定一个文件;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该文件正在使用。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有删除该文件的权限或者该文件是只读的。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              删除的文件。
            </summary>
      <param name="file">
                名称和要删除的文件的路径。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指示是否应将已删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <param name="onUserCancel">
                指定在用户取消该操作时引发异常。
                 默认值为 <see langword="UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;它具有尾部反斜杠，必须指定一个文件;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该文件正在使用。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有删除该文件的权限或者该文件是只读的。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了操作和 <paramref name="onUserCancel" /> 设置为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>
              返回 <see langword="True" /> 如果指定的目录已存在。
            </summary>
      <param name="directory">
                目录的路径。
              </param>
      <returns>
              <see langword="True" /> 如果目录存在，则否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>
              返回 <see langword="True" /> 如果指定的文件存在。
            </summary>
      <param name="file">
                名称和文件的路径。
              </param>
      <returns>
              返回 <see langword="True" /> 否则如果该文件存在，则此方法返回 <see langword="False" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件的名称以反斜杠 (\) 结尾。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>
              返回表示包含指定的文本的文件名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <param name="containsText">
                搜索文本。
              </param>
      <param name="ignoreCase">
                <see langword="True" /> 如果搜索应区分大小写。否则为 <see langword="False" />。
                 默认值为 <see langword="True" />。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <returns>
              包含指定的文本的文件名称的只读集合...
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\.\)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  指定的目录路径包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
              返回表示包含指定的文本的文件名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <param name="containsText">
                搜索文本。
              </param>
      <param name="ignoreCase">
                <see langword="True" /> 如果搜索应区分大小写。否则为 <see langword="False" />。
                 默认值为 <see langword="True" />。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <param name="fileWildcards">
                要被匹配的模式。
              </param>
      <returns>
              包含指定的文本的文件名称的只读集合...
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\.\)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  指定的目录路径包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>
              返回表示某个目录中的子目录的路径名称的字符串集合。
            </summary>
      <param name="directory">
                名称和目录的路径。
              </param>
      <returns>
              只读集合中指定的目录的子目录的路径名称...
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
              返回表示某个目录中的子目录的路径名称的字符串集合。
            </summary>
      <param name="directory">
                名称和目录的路径。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <param name="wildcards">
                使名称相匹配的模式。
              </param>
      <returns>
              只读集合中指定的目录的子目录的路径名称。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  一个或多个指定的通配符是 <see langword="Nothing" />, ，空字符串，或只包含空格。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>
              返回 <see cref="T:System.IO.DirectoryInfo" /> 对象为指定的路径。
            </summary>
      <param name="directory">
                <see langword="String" />。
                 目录的路径。
              </param>
      <returns>
              <see cref="T:System.IO.DirectoryInfo" /> 指定的路径的的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录路径包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>
              返回 <see cref="T:System.IO.DriveInfo" /> 指定的驱动器的对象。
            </summary>
      <param name="drive">
                要检查的驱动器。
              </param>
      <returns>
              <see cref="T:System.IO.DriveInfo" /> 指定的驱动器的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="drive" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>
              返回 <see cref="T:System.IO.FileInfo" /> 指定文件的对象。
            </summary>
      <param name="file">
                名称和文件的路径。
              </param>
      <returns>
              <see cref="T:System.IO.FileInfo" /> 指定文件的对象
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径名称格式不正确。
                   例如，它包含无效字符或仅为空白。
                   文件名具有尾随斜杠标记。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  该路径包含该字符串中间的冒号。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径过长。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少对文件的 ACL （访问控制列表） 访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>
              返回表示目录内文件的名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <returns>
              从指定的目录的文件名称的只读集合。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  要搜索的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="directory" /> 指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
              返回表示目录内文件的名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <param name="wildcards">
                要被匹配的模式。
              </param>
      <returns>
              从指定的目录的文件名称的只读集合。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  要搜索的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="directory" /> 指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>
              分析文件名称，从提供的路径。
            </summary>
      <param name="path">
                必需。
                 要分析的路径。
                <see langword="String" />。
              </param>
      <returns>
              从指定的路径文件名。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>
              返回所提供的路径的父路径。
            </summary>
      <param name="path">
                要检查的路径。
              </param>
      <returns>
              所提供的路径的父路径。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径没有父路径，因为它是根路径。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>
              创建唯一命名的磁盘上的零字节临时文件并返回该文件的完整路径。
            </summary>
      <returns>
              <see langword="String" /> 包含临时文件的完整路径。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录已存在和 o<paramref name="verwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定在用户取消该操作时引发异常。
                 默认值为 <see langword="UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录已存在和 o<paramref name="verwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" /> 和子目录中的文件无法复制。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />, ，和用户取消了操作，或无法完成该操作。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />, ，并且用户缺少必要的权限。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <param name="overwrite">
                <see langword="True" /> 如果应覆盖现有目录;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录已存在和 o<paramref name="verwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在并 <paramref name="overwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定在用户取消该操作时引发异常。
                 默认值为 <see langword="UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在并 <paramref name="overwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />, ，并且用户已取消该操作或发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在并 <paramref name="overwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>
              <see langword="OpenTextFieldParser" /> 方法允许您创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。
              <see langword="TextFieldParser" /> 对象可以用于读取分隔和固定宽度文件。
            </summary>
      <param name="file">
                要使用打开的文件 <see langword="TextFieldParser" />。
              </param>
      <returns>
              <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 若要读取指定的文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  使用指定的格式不能分析某行。
                   异常消息指定的行导致此异常，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  属性分配的行中包含的文本。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
              <see langword="OpenTextFieldParser" /> 方法允许您创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。
              <see langword="TextFieldParser" /> 对象可以用于读取分隔和固定宽度文件。
            </summary>
      <param name="file">
                要使用打开的文件 <see langword="TextFieldParser" />。
              </param>
      <param name="fieldWidths">
                字段的宽度。
              </param>
      <returns>
              <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 若要读取指定的文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  使用指定的格式不能分析某行。
                   异常消息指定的行导致此异常，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  属性分配的行中包含的文本。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>
              <see langword="OpenTextFieldParser" /> 方法允许您创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。
              <see langword="TextFieldParser" /> 对象可以用于读取分隔和固定宽度文件。
            </summary>
      <param name="file">
                要使用打开的文件 <see langword="TextFieldParser" />。
              </param>
      <param name="delimiters">
                字段分隔符。
              </param>
      <returns>
              <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 若要读取指定的文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  使用指定的格式不能分析某行。
                   异常消息指定的行导致此异常，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  属性分配的行中包含的文本。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamReader" /> 要从文件读取对象。
            </summary>
      <param name="file">
                要读取的文件。
              </param>
      <returns>
              <see cref="T:System.IO.StreamReader" /> 要从文件中读取对象
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以反斜杠 (\) 结尾。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  找不到指定的文件。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限来读取文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamReader" /> 要从文件读取对象。
            </summary>
      <param name="file">
                要读取的文件。
              </param>
      <param name="encoding">
                要用于该文件的内容的编码。
                 默认值为 ASCII。
              </param>
      <returns>
              <see cref="T:System.IO.StreamReader" /> 要从文件中读取对象
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以反斜杠 (\) 结尾。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  找不到指定的文件。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限来读取文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamWriter" /> 对象写入指定的文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 的内容 <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <returns>
              <see cref="T:System.IO.StreamWriter" /> 要写入到指定的文件的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以尾部反斜杠结尾。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamWriter" /> 要写入到指定的文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 中的内容 <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <param name="encoding">
                要在写入到文件中使用的编码。
                 默认值为 ASCII。
              </param>
      <returns>
              <see cref="T:System.IO.StreamWriter" /> 要写入到指定的文件的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以尾部反斜杠结尾。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>
              字节数组的形式返回文件的内容。
            </summary>
      <param name="file">
                要读取的文件。
              </param>
      <returns>
              <see langword="Byte" /> 数组，其中包含该文件的内容。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>
              返回一个文本文件作为内容 <see langword="String" />。
            </summary>
      <param name="file">
                名称和要读取的文件路径。
              </param>
      <returns>
              <see langword="String" /> 包含文件的内容。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>
              返回一个文本文件作为内容 <see langword="String" />。
            </summary>
      <param name="file">
                名称和要读取的文件路径。
              </param>
      <param name="encoding">
                要在读取文件中使用字符编码。
                 默认值为 utf-8。
              </param>
      <returns>
              <see langword="String" /> 包含文件的内容。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>
              重命名一个目录。
            </summary>
      <param name="directory">
                路径和要重命名的目录的名称。
              </param>
      <param name="newName">
                目录的新名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="newName" /> 包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" />。
                
                  - 或 -
                
                  <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  没有现有的文件或目录中指定的名称与 <paramref name="newName" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过 248 个字符。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>
              重命名文件。
            </summary>
      <param name="file">
                要重命名的文件。
              </param>
      <param name="newName">
                文件的新名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="newName" /> 包含路径信息或以反斜杠 (\) 结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                
                  - 或 -
                
                  <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  没有现有的文件或目录中指定的名称与 <paramref name="newName" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>
              将数据写入二进制文件。
            </summary>
      <param name="file">
                路径和要写入到的文件的名称。
              </param>
      <param name="data">
                要写入到文件数据。
              </param>
      <param name="append">
                <see langword="True" />要追加到该文件的内容;<see langword="False" />覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用或发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  没有足够的内存来将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>
              将文本写入文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="text">
                要写入到文件的文本。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 的内容 <see langword="False" /> 覆盖该文件的内容。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>
              将文本写入文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="text">
                要写入到文件的文本。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 的内容 <see langword="False" /> 覆盖该文件的内容。
              </param>
      <param name="encoding">
                写入文件时要使用何种编码。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用序列化数据初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。
            </summary>
      <param name="info">
                存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，其中包含有关源或目标的上下文信息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>
              用指定的错误消息初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>
              使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 类的新实例。
            </summary>
      <param name="message">
                一个 <see cref="T:System.String" /> 对错误进行描述。
              </param>
      <param name="innerException">
                <see cref="T:System.Exception" /> 对象，它是当前异常的原因。
                 如果 <see cref="P:System.Exception.InnerException" /> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 catch 块中引发当前异常。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 使用指定的错误消息和行号。
            </summary>
      <param name="message">
                异常消息。
              </param>
      <param name="lineNumber">
                格式不正确的行的行号。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 用指定的错误消息、 行号和对导致此异常的内部异常的引用。
            </summary>
      <param name="message">
                异常消息。
              </param>
      <param name="lineNumber">
                格式不正确的行的行号。
              </param>
      <param name="innerException">
                <see cref="T:System.Exception" /> 导致当前异常。
                 如果 <see cref="P:System.Exception.InnerException" /> 参数不是空引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 catch 块中引发当前异常。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用有关异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
            </summary>
      <param name="info">
                存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构，其中包含有关源或目标的上下文信息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>
              创建并返回当前异常的字符串表示形式。
            </summary>
      <returns>
              当前异常的字符串表示形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>
              返回的实例 <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" /> 类。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" />。
                 要分析的流。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 无法从读取。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" />。
                 要分析的流。
              </param>
      <param name="defaultEncoding">
                <see cref="T:System.Text.Encoding" />。
                 从文件不确定要使用如果编码的字符编码。
                 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 无法从读取。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" />。
                 要分析的流。
              </param>
      <param name="defaultEncoding">
                <see cref="T:System.Text.Encoding" />。
                 从文件不确定要使用如果编码的字符编码。
                 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。
              </param>
      <param name="detectEncoding">
                <see langword="Boolean" />。
                 指示是否在文件头查找字节顺序标记。
                 默认值为 <see langword="True" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 无法从读取。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="stream">
                <see cref="T:System.IO.Stream" />。
                 要分析的流。
              </param>
      <param name="defaultEncoding">
                <see cref="T:System.Text.Encoding" />。
                 从文件不确定要使用如果编码的字符编码。
                 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。
              </param>
      <param name="detectEncoding">
                <see langword="Boolean" />。
                 指示是否在文件头查找字节顺序标记。
                 默认值为 <see langword="True" />。
              </param>
      <param name="leaveOpen">
                <see langword="Boolean" />。
                 指示是否保留 <paramref name="stream" /> 时打开的 <see langword="TextFieldParser" /> 对象已关闭。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="stream" /> 无法从读取。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="reader">
                <see cref="T:System.IO.TextReader" />。
                <see cref="T:System.IO.TextReader" /> 流以进行分析。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="reader" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="path">
                <see langword="String" />。
                 要分析的文件的完整路径。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 是一个空字符串。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="path">
                <see langword="String" />。
                 要分析的文件的完整路径。
              </param>
      <param name="defaultEncoding">
                <see cref="T:System.Text.Encoding" />。
                 从文件不确定要使用如果编码的字符编码。
                 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为空字符串或 <paramref name="defaultEncoding" /> 是 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>
              初始化 <see langword="TextFieldParser" /> 类的新实例。
            </summary>
      <param name="path">
                <see langword="String" />。
                 要分析的文件的完整路径。
              </param>
      <param name="defaultEncoding">
                <see cref="T:System.Text.Encoding" />。
                 从文件不确定要使用如果编码的字符编码。
                 默认值为 <see cref="P:System.Text.Encoding.UTF8" />。
              </param>
      <param name="detectEncoding">
                <see langword="Boolean" />。
                 指示是否在文件头查找字节顺序标记。
                 默认值为 <see langword="True" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为空字符串或 <paramref name="defaultEncoding" /> 是 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>
              关闭当前<see langword="TextFieldParser" />对象。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
      <summary>
              释放使用的资源 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>
              释放使用的资源 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象。
            </summary>
      <param name="disposing">
                布尔值。
                <see langword="True" /> 释放托管和非托管资源; <see langword="False" /> 仅释放非托管资源。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>
              允许 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象尝试释放资源并在垃圾回收回收之前执行其他清理操作。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>
              读取指定数目的字符但不前移光标。
            </summary>
      <param name="numberOfChars">
                <see langword="Int32" />。
                 要读取的字符数。
                 必需。
              </param>
      <returns>
              包含读取的指定数量的字符的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="numberOfChars" /> 小于 0。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>
              读取当前行的所有字段，以字符串数组的形式返回这些字段，并将光标前进到包含数据的下一行。
            </summary>
      <returns>
              包含当前行的字段值的字符串数组。
            </returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  字段不能通过使用指定的格式分析。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>
              将当前行作为字符串返回，并将光标前进到下一行。
            </summary>
      <returns>
              文件或流中的当前行。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>
              读取文本文件的其余部分并作为一个字符串返回。
            </summary>
      <returns>
              文件或流中的其余文本。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>
              分隔符设置为指定值，读取器并将字段类型设置为 <see langword="Delimited" />。
            </summary>
      <param name="delimiters">
                类型的数组 <see langword="String" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  分隔符是长度为零。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>
              将读取器的分隔符设置为指定值。
            </summary>
      <param name="fieldWidths">
                数组 <see langword="Integer" />。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>
              更改当前目录或文件夹。
              <see langword="My" />功能使你更好的工作效率和性能在文件 I/O 操作比<see langword="ChDir " />函数。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。
            </summary>
      <param name="Path">
                必需。
                 A<see langword="String" />标识的目录或文件夹的表达式将成为新的默认目录或文件夹。
                <paramref name="Path" />可能包括驱动器。
                 如果未指定驱动器，<see langword="ChDir" />更改的默认目录或当前的驱动器上的文件夹。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Path" /> 为空。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  指定了无效的驱动器，或者驱动器不可用。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>
              更改当前驱动器。
            </summary>
      <param name="Drive">
                必需。
                 指定现有的驱动器的字符串表达式。
                 如果您提供一个零长度字符串 ("")，当前的驱动器不会更改。
                 如果<paramref name="Drive" />自变量是包含多个字符的字符串，<see langword="ChDrive" />使用仅的第一个字母。
              </param>
      <exception cref="T:System.IO.IOException">
                  指定了无效的驱动器，或者驱动器不可用。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>
              更改当前驱动器。
            </summary>
      <param name="Drive">
                必需。
                 指定现有的驱动器的字符串表达式。
                 如果您提供一个零长度字符串 ("")，当前的驱动器不会更改。
                 如果<paramref name="Drive" />自变量是包含多个字符的字符串，<see langword="ChDrive" />使用仅的第一个字母。
              </param>
      <exception cref="T:System.IO.IOException">
                  指定了无效的驱动器，或者驱动器不可用。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>
              返回表示当前路径的字符串。
              <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />可以获得更好的效率和性能在文件 I/O 操作比<see langword="CurDir" />。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。
            </summary>
      <returns>
              表示当前路径的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>
              返回表示当前路径的字符串。
              <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />可以获得更好的效率和性能在文件 I/O 操作比<see langword="CurDir" />。
               有关更多信息，请参见<see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />。
            </summary>
      <param name="Drive">
                可选。
                <see langword="Char" />指定现有的驱动器的表达式。
                 如果未指定驱动器，或如果<paramref name="Drive" />是零长度字符串 ("")，<see langword="CurDir" />返回当前驱动器的路径。
              </param>
      <returns>
              表示当前路径的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>
              返回一个表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标签的字符串。
              <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在为您提供更好的工作效率和性能比文件 I/O 操作 <see langword="Dir" /> 函数。
               请参阅 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />  有关详细信息。
            </summary>
      <returns>
              一个字符串，表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>
              返回一个表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标签的字符串。
              <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在为您提供更好的工作效率和性能比文件 I/O 操作 <see langword="Dir" /> 函数。
               请参阅 <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />  有关详细信息。
            </summary>
      <param name="PathName">
                可选。
                <see langword="String" /> 表达式，指定文件名、 目录或文件夹名或驱动器卷标。
                 零长度字符串 (<see langword="&quot;&quot;" />) 如果返回 <paramref name="PathName" /> 找不到。
              </param>
      <param name="Attributes">
                可选。
                 枚举或数值表达式，其值指定的文件属性。
                 如果省略， <see langword="Dir" /> 返回匹配的文件 <paramref name="PathName" /> 但不具任何属性。
              </param>
      <returns>
              一个字符串，表示文件、 目录或与指定的模式或文件属性匹配的文件夹的名称或驱动器的卷标。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>
              返回一个布尔值 <see langword="True" /> 文件末尾打开以供时 <see langword="Random" /> 或有序 <see langword="Input" /> 已达到。
            </summary>
      <param name="FileNumber">
                必需。
                <see langword="Integer" /> 包含任何有效的文件数。
              </param>
      <returns>
              返回一个布尔值 <see langword="True" /> 文件末尾打开以供时 <see langword="Random" /> 或有序 <see langword="Input" /> 已达到。
            </returns>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>
              返回一个枚举，表示使用打开的文件的文件模式 <see langword="FileOpen" /> 函数。
              <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 在为您提供更好的工作效率和性能比文件 I/O 操作 <see langword="FileAttr " />函数。
               有关更多信息，请参见<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。
            </summary>
      <param name="FileNumber">
                必需。
                <see langword="Integer" />。
                 任何有效的文件数。
              </param>
      <returns>
              下面的枚举值表示文件访问模式︰
            
                      值
                    
                      模式
                    
                      1
                    
                      <see langword="OpenMode.Input" />
                    
                      2
                    
                      <see langword="OpenMode.Output" />
                    
                      4
                    
                      <see langword="OpenMode.Random" />
                    
                      8
                    
                      <see langword="OpenMode.Append" />
                    
                      32
                    
                      <see langword="OpenMode.Binary" />
                    </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>
              最后，到使用打开的文件输入/输出 (I/O) <see langword="FileOpen" /> 函数。
              <see langword="My" /> 使您更好的工作效率和性能在文件 I/O 操作。
               请参阅 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />  有关详细信息。
            </summary>
      <param name="FileNumbers">
                可选。
                 0 或更多通道要关闭的参数数组。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>
              将文件复制。
              <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> 可以提高工作效率和性能在文件 I/O 操作比 <see langword="FileCopy" />。
               有关更多信息，请参见<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />。
            </summary>
      <param name="Source">
                必需。
                <see langword="String" /> 指定要复制的文件的名称的表达式。
                <paramref name="Source" /> 可能包含驱动器的源文件或目录和文件夹。
              </param>
      <param name="Destination">
                必需。
                <see langword="String" /> 指定目标文件名称的表达式。
                <paramref name="Destination" /> 可能包括目录或文件夹和目标文件的驱动器。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Source" /> 或 <paramref name="Destination" /> 无效或未指定。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件已打开。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>
              返回 <see langword="Date" /> 值，该值指示的日期和时间向其写入一个文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileDateTime" />。
               有关详细信息，请参阅<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。
            </summary>
      <param name="PathName">
                必需。
                <see langword="String" /> 指定的文件名的表达式。
                <paramref name="PathName" /> 可能包括驱动器和目录或文件夹。
              </param>
      <returns>
              <see langword="Date" /> 创建或上次修改值，指示的日期和时间文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="PathName" /> 无效或包含通配符。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  目标文件不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <param name="ArrayIsDynamic">
                可选。
                 仅在写入数组时，才适用。
                 指定是否数组视为动态以及描述的大小和数组界限的数组说明符是否有必要。
              </param>
      <param name="StringIsFixedLength">
                可选。
                 仅适用于写入字符串。
                 指定是否将写入描述长度的字符串的两个字节描述符。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>
              将数据从打开的磁盘文件读入到一个变量中。
               相比 <see langword="FileGet" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 读取的开始位置处的记录号（<see langword="Random" /> 模式文件）或字节数（<see langword="Binary" /> 模式文件）。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于 1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <param name="StringIsFixedLength">
                可选。
                 仅适用于写入字符串。
                 指定是否将写入描述长度的字符串的两个字节描述符。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGet" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>
              从打开的磁盘文件读入一个变量的数据。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileGetObject" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 数据读入到其中的有效变量名称。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始读取。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>
              返回 <see langword="Long" /> 值，该值以字节为单位指定文件长度。
               相比 <see langword="FileLen" />，<see langword="My" /> 功能可使文件 I/O 操作的效率更高、性能更好。
               有关详细信息，请参阅<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />。
            </summary>
      <param name="PathName">
                必需。
                <see langword="String" /> 表达式，用于指定文件。
                <paramref name="PathName" /> 可能包括目录或文件夹以及驱动器。
              </param>
      <returns>
              <see langword="Long" /> 值，该值以字节为单位指定文件长度。
            </returns>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>
              打开用于输入或输出文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileOpen" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
                 使用 <see langword="FreeFile" /> 函数以获取下一个可用的文件数。
              </param>
      <param name="FileName">
                必需。
                <see langword="String" /> 指定的文件名的表达式，可包含目录或文件夹，和驱动器。
              </param>
      <param name="Mode">
                必需。
                 指定文件模式的枚举︰ <see langword="Append" />, ，<see langword="Binary" />, ，<see langword="Input" />, ，<see langword="Output" />, ，或 <see langword="Random" />。
                 有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.OpenMode" />。
              </param>
      <param name="Access">
                可选。
                 允许在打开的文件上的指定操作的枚举︰ <see langword="Read" />, ，<see langword="Write" />, ，或 <see langword="ReadWrite" />。
                 默认为 <see langword="ReadWrite" />。
                 有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.OpenAccess" />。
              </param>
      <param name="Share">
                可选。
                 指定不被其他进程允许在打开的文件上的操作的枚举︰ <see langword="Shared" />, ，<see langword="Lock Read" />, ，<see langword="Lock Write" />, ，和 <see langword="Lock Read Write" />。
                 默认为 <see langword="Lock Read Write" />。
                 有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.OpenShare" />。
              </param>
      <param name="RecordLength">
                可选。
                 小于或等于 32767 （字节） 数。
                 对于针对随机访问打开的文件，此值为记录长度。
                 对于连续文件，此值是缓冲的字符数。
              </param>
      <exception cref="T:System.ArgumentException">
                  无效 <see langword="Access" />, ，<see langword="Share" />, ，或 <see langword="Mode" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see langword="WriteOnly" /> 打开文件进行 <see langword="Input" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see langword="ReadOnly" /> 打开文件进行 <see langword="Output" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <see langword="ReadOnly" /> 打开文件进行 <see langword="Append" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  记录的长度为负 （和不等于-1）。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 是无效的 (&lt;-1 或 &gt; 255)，或 <paramref name="FileNumber" /> 已经被使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileName" /> 已打开，或 <paramref name="FileName" /> 无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <param name="ArrayIsDynamic">
                可选。
                 仅在写入数组时，才适用。
                 指定是否将数组视为动态的以及是否写入描述长度的字符串数组描述符。
              </param>
      <param name="StringIsFixedLength">
                可选。
                 仅适用于写入字符串。
                 指定是否向文件写入一个双字节字符串长度的说明符的字符串。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关更多信息，请参见 <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <param name="StringIsFixedLength">
                可选。
                 仅适用于写入字符串。
                 指定是否向文件写入一个双字节字符串长度的说明符的字符串。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePut" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="RecordNumber" /> &lt; 1 且不等于-1。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>
              从变量中将数据写入磁盘文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FilePutObject" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 有效的变量名称，其中包含数据写入到磁盘。
              </param>
      <param name="RecordNumber">
                可选。
                 记录号 (<see langword="Random" /> 模式的文件) 或字节数 (<see langword="Binary" /> 模式的文件) 在开始写入。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>
              将输出行宽赋给打开使用的文件 <see langword="FileOpen" /> 函数。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="RecordWidth">
                必需。
                 数值表达式在范围 0 – 255 （含)，它表示在一行上显示的字符数，启动一个新行之前。
                 如果 <paramref name="RecordWidth" /> 等于 0，则为一条线的长度没有限制。
                 默认值为 <paramref name="RecordWidth" /> 为 0。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>
              返回 <see langword="Integer" /> 值，该值表示下一个可供使用的文件号 <see langword="FileOpen" /> 函数。
            </summary>
      <returns>
              返回 <see langword="Integer" /> 值，该值表示下一个可供使用的文件号 <see langword="FileOpen" /> 函数。
            </returns>
      <exception cref="T:System.IO.IOException">
                  超过 255 个文件正在使用中。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>
              返回 <see langword="FileAttribute" /> 值，该值表示文件、 目录或文件夹的属性。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="FileAttribute" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="PathName">
                必需。
                <see langword="String" /> 指定的文件、 目录或文件夹名称的表达式。
                <paramref name="PathName" /> 可以包括驱动器和目录或文件夹。
              </param>
      <returns>
              返回的值 <see langword="GetAttr" /> 是下面的枚举值的总和︰
            
                      值
                    
                      常量
                    
                      描述
                    
                      <see langword="Normal" />
                    
                      <see langword="vbNormal" />
                    
                      正常。
                    
                      <see langword="ReadOnly" />
                    
                      <see langword="vbReadOnly" />
                    
                      只读。
                    
                      <see langword="Hidden" />
                    
                      <see langword="vbHidden" />
                    
                      隐藏。
                    
                      <see langword="System" />
                    
                      <see langword="vbSystem" />
                    
                      系统文件。
                    
                      <see langword="Directory" />
                    
                      <see langword="vbDirectory" />
                    
                      目录或文件夹。
                    
                      <see langword="Archive" />
                    
                      <see langword="vbArchive" />
                    
                      文件自上次备份后已更改。
                    
                      <see langword="Alias" />
                    
                      <see langword="vbAlias" />
                    
                      文件具有不同的名称。
                    
                由 Visual Basic 语言指定这些枚举。
                 名称可以代替实际值在代码中的任意位置使用。
              </returns>
      <exception cref="T:System.IO.IOException">
                  <paramref name="Pathname" /> 无效或包含通配符。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  目标文件不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>
              从打开的顺序文件读取数据并将数据分配给变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Value">
                必需。
                 从文件中读取分配的值的变量 — 不能为数组或对象变量。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>
              返回 <see langword="String" /> 值，该值包含文件中的字符在中打开 <see langword="Input" /> 或 <see langword="Binary" /> 模式。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="InputString" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="CharCount">
                必需。
                 任何有效的数值表达式，用于指定要读取的字符数。
              </param>
      <returns>
              返回 <see langword="String" /> 值，该值包含文件中的字符在中打开 <see langword="Input" /> 或 <see langword="Binary" /> 模式。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="InputString" />。
            </returns>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="CharCount" /> &lt; 0 或者 &gt; 214。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>
              从磁盘中删除文件。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Kill" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="PathName">
                必需。
                <see langword="String" /> 指定要删除的一个或多个文件名的表达式。
                <paramref name="PathName" /> 可以包括驱动器和目录或文件夹。
              </param>
      <exception cref="T:System.IO.IOException">
                  目标文件打开。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  找不到的目标文件。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  权限被拒绝。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>
              从打开的顺序文件中读取一行并将它分配给 <see langword="String" /> 变量。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <returns>
              从打开的顺序文件中读取一行并将它分配给 <see langword="String" /> 变量。
            </returns>
      <exception cref="T:System.IO.EndOfStreamException">
                  已到达文件尾。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>
              返回 <see langword="Long" /> 值，该值指定在打开的文件中读/写当前位置。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效 <see langword="Integer" /> 文件数。
              </param>
      <returns>
              返回 <see langword="Long" /> 值，该值指定在打开的文件中读/写当前位置。
            </returns>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>
              通过其他进程对使用打开的文件的全部或部分控制访问 <see langword="Open" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Lock" /> 和 <see langword="Unlock" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>
              通过其他进程对使用打开的文件的全部或部分控制访问 <see langword="Open" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Lock" /> 和 <see langword="Unlock" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Record">
                可选。
                 数的唯一记录或字节来锁定或解锁
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>
              通过其他进程对使用打开的文件的全部或部分控制访问 <see langword="Open" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Lock" /> 和 <see langword="Unlock" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="FromRecord">
                可选。
                 第一个记录或要锁定或解锁的字节数。
              </param>
      <param name="ToRecord">
                可选。
                 最后一个记录或要锁定或解锁的字节数。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>
              返回 <see langword="Long" /> 通过代表的大小，以字节为单位的文件的打开 <see langword="FileOpen" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="LOF" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                <see langword="Integer" /> 包含有效的文件数。
              </param>
      <returns>
              返回 <see langword="Long" /> 通过代表的大小，以字节为单位的文件的打开 <see langword="FileOpen" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="LOF" />。
            </returns>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>
              创建新目录。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="MkDir" />。
               有关详细信息，请参阅<see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />。
            </summary>
      <param name="Path">
                必需。
                <see langword="String" /> 标识要创建的目录的表达式。
                <paramref name="Path" /> 可以包含驱动器。
                 如果未指定驱动器， <see langword="MkDir" /> 当前驱动器上创建新的目录。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Path" /> 未指定或为空。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  权限被拒绝。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录已存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>
              将已设置显示格式的数据写入顺序文件。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效文件数。
              </param>
      <param name="Output">
                可选。
                 要写入文件的零个或多个由逗号分隔的表达式。
              
                <paramref name="Output" /> 参数的设置是： 
              
                <see langword="T:System.IO.IOException" />：文件模式无效。
              
                <see langword="T:System.IO.IOException" />：<paramref name="FileNumber" /> 不存在。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>
              将已设置显示格式的数据写入顺序文件。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效文件数。
              </param>
      <param name="Output">
                可选。
                 要写入文件的零个或多个由逗号分隔的表达式。
              
                <paramref name="Output" /> 参数的设置是： 
              
                <see langword="T:System.IO.IOException" />：文件模式无效。
              
                <see langword="T:System.IO.IOException" />：<paramref name="FileNumber" /> 不存在。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>
              重命名磁盘文件或目录。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Rename" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="OldPath">
                必需。
                <see langword="String" /> 指定的现有文件的名称和位置的表达式。
                <paramref name="OldPath" /> 可能包含的目录和文件的驱动器。
              </param>
      <param name="NewPath">
                必需。
                <see langword="String" /> 指定新文件名和位置的表达式。
                <paramref name="NewPath" /> 可包含目录和目标位置的驱动器。
                 指定的文件名称 <paramref name="NewPath" /> 不能已存在。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径无效。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="OldPath" /> 文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="NewPath" /> 文件已存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  访问无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  无法重命名为不同的设备。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>
              关闭所有打开的磁盘文件使用 <see langword="FileOpen" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Reset" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>
              删除现有目录。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="RmDir" />。
               有关详细信息，请参阅<see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />。
            </summary>
      <param name="Path">
                必需。
                <see langword="String" /> 标识的目录或要删除的文件夹的表达式。
                <paramref name="Path" /> 可以包含驱动器。
                 如果未指定驱动器， <see langword="RmDir" /> 移除当前驱动器上的目录。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Path" /> 未指定或为空。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录包含文件。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  目录不存在。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>
              返回 <see langword="Long" /> 通过使用指定的文件中的当前读/写位置打开 <see langword="FileOpen" /> 函数或设置通过使用下一步的读/写操作在文件中的位置打开 <see langword="FileOpen" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Seek" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                <see langword="Integer" /> 包含有效的文件数。
              </param>
      <returns>
              返回 <see langword="Long" /> 通过使用指定的文件中的当前读/写位置打开 <see langword="FileOpen" /> 函数或设置通过使用下一步的读/写操作在文件中的位置打开 <see langword="FileOpen" /> 函数。
            </returns>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>
              返回 <see langword="Long" /> 通过使用指定的文件中的当前读/写位置打开 <see langword="FileOpen" /> 函数或设置通过使用下一步的读/写操作在文件中的位置打开 <see langword="FileOpen" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Seek" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                <see langword="Integer" /> 包含有效的文件数。
              </param>
      <param name="Position">
                必需。
                 1 – 2147483647，（含)，范围内的数字，用于指示下一个读/写操作的位置应发生。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>
              设置属性文件的信息。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="SetAttr" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="PathName">
                必需。
                <see langword="String" /> 指定的文件名的表达式。
                <paramref name="PathName" /> 可以包含目录或文件夹和驱动器。
              </param>
      <param name="Attributes">
                必需。
                 常量或数值表达式，其值用于指定的文件属性。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="PathName" /> 无效或不存在。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Attribute" /> 类型无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>
              与使用 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数来确定输出位置。
            </summary>
      <param name="Count">
                必需。
                 显示或打印在列表中的下一个表达式之前插入空格数。
              </param>
      <returns>
              与使用 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数来确定输出位置。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>
              与使用 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数来确定输出位置。
            </summary>
      <returns>
              与使用 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数来确定输出位置。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>
              与使用 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数来确定输出位置。
            </summary>
      <param name="Column">
                可选。
                 显示或打印在列表中的下一个表达式之前移动到的列号。
                 如果省略， <see langword="TAB" /> 将插入点移动到下一步的打印区域的开始。
              </param>
      <returns>
              与使用 <see langword="Print" /> 或 <see langword="PrintLine" /> 函数来确定输出位置。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>
              通过其他进程对使用打开的文件的全部或部分控制访问 <see langword="Open" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Lock" /> 和 <see langword="Unlock" />。
               有关更多信息，请参见<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>
              通过其他进程对使用打开的文件的全部或部分控制访问 <see langword="Open" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Lock" /> 和 <see langword="Unlock" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="Record">
                可选。
                 数的唯一记录或字节来锁定或解锁
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>
              通过其他进程对使用打开的文件的全部或部分控制访问 <see langword="Open" /> 函数。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比 <see langword="Lock" /> 和 <see langword="Unlock" />。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
      <param name="FileNumber">
                必需。
                 任何有效的文件数。
              </param>
      <param name="FromRecord">
                可选。
                 第一个记录或要锁定或解锁的字节数。
              </param>
      <param name="ToRecord">
                可选。
                 最后一个记录或要锁定或解锁的字节数。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>
              将数据写入一个连续的文件。
               与写入数据 <see langword="Write" /> 从文件通常通过使用读取 <see langword="Input" />。
            </summary>
      <param name="FileNumber">
                必需。
                <see langword="Integer" /> 表达式，其中包含任何有效的文件数。
              </param>
      <param name="Output">
                可选。
                 一个或多个以逗号分隔的表达式将写入到文件。
              </param>
      <exception cref="T:System.IO.IOException">
                  <paramref name="FileNumber" /> 不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件模式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>
              将数据写入一个顺序文件。
               通常使用 <see langword="Input" /> 从文件中读取使用 <see langword="Write" /> 编写的数据。
            </summary>
      <param name="FileNumber">
                必需。
                 包含任何有效文件数的 <see langword="Integer" /> 表达式。
              </param>
      <param name="Output">
                可选。
                 要写入文件的一个或多个由逗号分隔的表达式。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
              返回 <see langword="Double" /> 指定使用双倍余额递减平衡方法或某些其他方法来指定特定时间段内的资产折旧。
            </summary>
      <param name="Cost">
                必需。
                <see langword="Double" /> 指定资产的初始成本。
              </param>
      <param name="Salvage">
                必需。
                <see langword="Double" /> 指定在其使用寿命末尾资产值。
              </param>
      <param name="Life">
                必需。
                <see langword="Double" /> 指定资产的生命周期的长度。
              </param>
      <param name="Period">
                必需。
                <see langword="Double" /> 指定计算的资产折旧时的时间。
              </param>
      <param name="Factor">
                可选。
                <see langword="Double" /> 指定从该处余额递减的速率。
                 如果省略，则假定 2 （双倍余额递减法）。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定使用双倍余额递减平衡方法或某些其他方法来指定特定时间段内的资产折旧。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Factor" /> &lt; = 0， <paramref name="Salvage" /> &lt; 0， <paramref name="Period" /> &lt; = 0，或 <paramref name="Period" /> &gt; <paramref name="Life." />
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
              返回 <see langword="Double" /> 基于定期固定付款和固定的利率指定未来年金值。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定每个周期的利率。
                 例如，如果您获得的汽车贷款年增长率百分比 (APR) 的 10%，并按月进行付款，每期利率为 0.1/12，即 0.0083。
              </param>
      <param name="NPer">
                必需。
                <see langword="Double" /> 指定年金的付款期总数。
                 例如，如果您的四年的汽车贷款，每月付款，则这笔贷款共有 4 x 12 （即 48） 支付周期。
              </param>
      <param name="Pmt">
                必需。
                <see langword="Double" /> 指定要成为每个期间的付款。
                 付款通常包含主体和利息年金的生命周期内不会更改。
              </param>
      <param name="PV">
                可选。
                <see langword="Double" /> 指定一系列未来付款现值 （即总额）。
                 例如，借钱购买一辆汽车，贷款金额时对您每月付款贷方而言的当前值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 <see langword="DueDate.EndOfPeriod" /> 如果付款支付周期的结尾处的到期时间或 <see langword="DueDate.BegOfPeriod" /> 如果段的开头，付款的到期时间。
                 如果省略， <see langword="DueDate.EndOfPeriod" /> 假定。
              </param>
      <returns>
              返回 <see langword="Double" /> 基于定期固定付款和固定的利率指定未来年金值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
              返回 <see langword="Double" /> 基于定期固定付款和固定的利率指定年金的给定期间利率付款。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定每个周期的利率。
                 例如，如果您获得的汽车贷款年增长率百分比 (APR) 的 10%，并按月进行付款，每期利率为 0.1/12，即 0.0083。
              </param>
      <param name="Per">
                必需。
                <see langword="Double" /> 指定介于 1 到付款期限 <paramref name="NPer" />。
              </param>
      <param name="NPer">
                必需。
                <see langword="Double" /> 指定年金的付款期总数。
                 例如，如果您的四年的汽车贷款，每月付款，则这笔贷款共有 4 x 12 （即 48） 支付周期。
              </param>
      <param name="PV">
                必需。
                <see langword="Double" /> 指定存在值，或一系列未来付款或收入的今天，值。
                 例如，借钱购买一辆汽车，贷款金额时对您每月付款贷方而言的当前值。
              </param>
      <param name="FV">
                可选。
                <see langword="Double" /> 指定将来的值或最后一次付款后所希望的现金余额。
                 例如，贷款的未来值是 $0，因为这是在最后一次付款后其值。
                 但是，如果您想要保存大于 18 岁的孩子的教育的 50000 美元，$50000 是将来的值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 DueDate.EndOfPeriod 如果付款支付周期的结尾处的到期时间或 DueDate.BegOfPeriod 如果段的开头，付款的到期时间。
                 如果省略， DueDate.EndOfPeriod 假定。
              </param>
      <returns>
              返回 <see langword="Double" /> 基于定期固定付款和固定的利率指定年金的给定期间利率付款。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Per" /> &lt; = 0 或 <paramref name="Per" /> &gt; <paramref name="NPer" />
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>
              返回 <see langword="Double" /> 指定一系列定期现金流量 （付款和收款） 的内部收益率。
            </summary>
      <param name="ValueArray">
                必需。
                 数组 <see langword="Double" /> 指定现金流值。
                 该数组必须包含至少一个负值 （支出） 和一个正值 （收入）。
              </param>
      <param name="Guess">
                可选。
                 将返回对象，它指定估算的值 <see langword="IRR" />。
                 如果省略， <paramref name="Guess" /> 为 0.1 （10%)。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定一系列定期现金流量 （付款和收款） 的内部收益率。
            </returns>
      <exception cref="T:System.ArgumentException">
                  数组参数值是无效的或 <paramref name="Guess" /> &lt; =-1。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>
              返回 <see langword="Double" /> 指定一系列定期现金流量 （付款和收款） 的已修改内部收益率。
            </summary>
      <param name="ValueArray">
                必需。
                 数组 <see langword="Double" /> 指定现金流值。
                 该数组必须包含至少一个负值 （支出） 和一个正值 （收入）。
              </param>
      <param name="FinanceRate">
                必需。
                <see langword="Double" /> 指定利率支付作为融资的成本。
              </param>
      <param name="ReinvestRate">
                必需。
                <see langword="Double" /> 指定从现金再投资收益中得到的利率。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定一系列定期现金流量 （付款和收款） 的已修改内部收益率。
            </returns>
      <exception cref="T:System.ArgumentException">
                  秩 <paramref name="ValueArray" /> 不等于 1， <paramref name="FinanceRate" /> =-1，或 <paramref name="ReinvestRate" /> =-1
                </exception>
      <exception cref="T:System.DivideByZeroException">
                  出现被零除错误。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
              返回 <see langword="Double" /> 基于定期固定的付款和固定的利率指定年金周期数。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定每个周期的利率。
                 例如，如果您获得的汽车贷款年增长率百分比 (APR) 的 10%，并按月进行付款，每期利率为 0.1/12，即 0.0083。
              </param>
      <param name="Pmt">
                必需。
                <see langword="Double" /> 指定要成为每个期间的付款。
                 付款通常包含不会更改整个年金的生命周期的利率。
              </param>
      <param name="PV">
                必需。
                <see langword="Double" /> 指定存在值，或一系列未来付款或收入的今天，值。
                 例如，借钱购买一辆汽车，贷款金额时对您每月付款贷方而言的当前值。
              </param>
      <param name="FV">
                可选。
                <see langword="Double" /> 指定将来的值或最后一次付款后所希望的现金余额。
                 例如，贷款的未来值是 $0，因为这是在最后一次付款后其值。
                 但是，如果您想要保存大于 18 岁的孩子的教育的 50000 美元，$50000 是将来的值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 DueDate.EndOfPeriod 如果付款支付周期的结尾处的到期时间或 DueDate.BegOfPeriod 如果段的开头，付款的到期时间。
                 如果省略， DueDate.EndOfPeriod 假定。
              </param>
      <returns>
              返回 <see langword="Double" /> 基于定期固定的付款和固定的利率指定年金周期数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Rate" /> &lt;= -1.
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Rate" /> = 0 和 <paramref name="Pmt" /> = 0
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>
              返回 <see langword="Double" /> 指定投资的净现值基于一系列定期现金流量 （付款和收款） 和折扣率。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定的段长度贴现率，表示为十进制数。
              </param>
      <param name="ValueArray">
                必需。
                 数组 <see langword="Double" /> 指定现金流值。
                 该数组必须包含至少一个负值 （支出） 和一个正值 （收入）。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定投资的净现值基于一系列定期现金流量 （付款和收款） 和折扣率。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="ValueArray" /> 是 <see langword="Nothing" />, 、 排名的 <paramref name="ValueArray" /> &lt;&gt; 1，或 <paramref name="Rate" /> =-1 
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
              返回 <see langword="Double" /> 基于定期固定付款和固定的利率指定年金的付款。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定每个周期的利率。
                 例如，如果您获得的汽车贷款年增长率百分比 (APR) 的 10%，并按月进行付款，每期利率为 0.1/12，即 0.0083。
              </param>
      <param name="NPer">
                必需。
                <see langword="Double" /> 指定按年金的付款期总数。
                 例如，如果您的四年的汽车贷款，每月付款，则这笔贷款共有 4 × 12 （即 48） 支付周期。
              </param>
      <param name="PV">
                必需。
                <see langword="Double" /> 指定存在值 （即总额） 在将来支付的付款的一系列值得现在。
                 例如，借钱购买一辆汽车，贷款金额时对您每月付款贷方而言的当前值。
              </param>
      <param name="FV">
                可选。
                <see langword="Double" /> 指定将来的值或最后一次付款后所希望的现金余额。
                 例如，贷款的未来值是 $0，因为这是在最后一次付款后其值。
                 但是，如果您想要保存为您孩子的教育 18 年 50000 美元，$50000 是将来的值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 DueDate.EndOfPeriod 如果付款支付周期的结尾处的到期时间或 DueDate.BegOfPeriod 如果段的开头，付款的到期时间。
                 如果省略， DueDate.EndOfPeriod 假定。
              </param>
      <returns>
              返回 <see langword="Double" /> 基于定期固定付款和固定的利率指定年金的付款。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="NPer" /> = 0.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
              返回 <see langword="Double" /> 基于定期固定的付款和固定的利率指定年金的给定期间本金付款。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定每个周期的利率。
                 例如，如果您获得的汽车贷款年增长率百分比 (APR) 的 10%，并按月进行付款，每期利率为 0.1/12，即 0.0083。
              </param>
      <param name="Per">
                必需。
                <see langword="Double" /> 介于 1 到指定的付款期限 <paramref name="NPer" />。
              </param>
      <param name="NPer">
                必需。
                <see langword="Double" /> 指定按年金的付款期总数。
                 例如，如果您的四年的汽车贷款，每月付款，则这笔贷款共有 4 x 12 （即 48） 支付周期。
              </param>
      <param name="PV">
                必需。
                <see langword="Double" /> 指定一系列未来付款或收入的当前值。
                 例如，借钱购买一辆汽车，贷款金额时对您每月付款贷方而言的当前值。
              </param>
      <param name="FV">
                可选。
                <see langword="Double" /> 指定将来的值或最后一次付款后所希望的现金余额。
                 例如，贷款的未来值是 $0，因为这是在最后一次付款后其值。
                 但是，如果您想要保存大于 18 岁的孩子的教育的 50000 美元，$50000 是将来的值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 DueDate.EndOfPeriod 如果付款支付周期的结尾处的到期时间或 DueDate.BegOfPeriod 如果段的开头，付款的到期时间。
                 如果省略， DueDate.EndOfPeriod 假定。
              </param>
      <returns>
              返回 <see langword="Double" /> 基于定期固定的付款和固定的利率指定年金的给定期间本金付款。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Per" /> &lt; = 0 或 <paramref name="Per" /> &gt; <paramref name="NPer" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>
              返回 <see langword="Double" /> 指定年金的现值基于要在将来支付的定期的、 固定付款和固定的利率。
            </summary>
      <param name="Rate">
                必需。
                <see langword="Double" /> 指定每个周期的利率。
                 例如，如果您获得的汽车贷款年增长率百分比 (APR) 的 10%，并按月进行付款，每期利率为 0.1/12，即 0.0083。
              </param>
      <param name="NPer">
                必需。
                <see langword="Double" /> 指定按年金的付款期总数。
                 例如，如果您的四年的汽车贷款，每月付款，则这笔贷款有 4 x 12 （即 48） 支付周期。
              </param>
      <param name="Pmt">
                必需。
                <see langword="Double" /> 指定要成为每个期间的付款。
                 付款通常包含主体和利息年金的生命周期内不会更改。
              </param>
      <param name="FV">
                可选。
                <see langword="Double" /> 指定完成最后一次付款后希望将来值或现金余额。
                 例如，贷款的未来值是 $0，因为这是在最后一次付款后其值。
                 但是，如果您想要保存大于 18 岁的孩子的教育的 50000 美元，$50000 是将来的值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 DueDate.EndOfPeriod 如果付款支付周期的结尾处的到期时间或 DueDate.BegOfPeriod 如果段的开头，付款的到期时间。
                 如果省略， DueDate.EndOfPeriod 假定。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定年金的现值基于要在将来支付的定期的、 固定付款和固定的利率。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>
              返回 <see langword="Double" /> 指定每个年金周期的利率。
            </summary>
      <param name="NPer">
                必需。
                <see langword="Double" /> 指定按年金的付款期总数。
                 例如，如果您的四年的汽车贷款，每月付款，则这笔贷款共有 4 * 12 （即 48） 支付周期。
              </param>
      <param name="Pmt">
                必需。
                <see langword="Double" /> 指定要成为每个期间的付款。
                 付款通常包含主体和利息年金的生命周期内不会更改。
              </param>
      <param name="PV">
                必需。
                <see langword="Double" /> 指定当前值，或当前值的一系列未来付款或收入。
                 例如，借钱购买一辆汽车，贷款金额时对您每月付款贷方而言的当前值。
              </param>
      <param name="FV">
                可选。
                <see langword="Double" /> 指定完成最后一次付款后希望将来值或现金余额。
                 例如，贷款的未来值是 $0，因为这是在最后一次付款后其值。
                 但是，如果您想要保存大于 18 岁的孩子的教育的 50000 美元，$50000 是将来的值。
                 如果省略，则假定为 0。
              </param>
      <param name="Due">
                可选。
                 类型的对象 <see cref="T:Microsoft.VisualBasic.DueDate" /> ，它指定何时付款。
                 此参数必须是 DueDate.EndOfPeriod 如果付款支付周期的结尾处的到期时间或 DueDate.BegOfPeriod 如果段的开头，付款的到期时间。
                 如果省略， DueDate.EndOfPeriod 假定。
              </param>
      <param name="Guess">
                可选。
                <see langword="Double" /> 返回指定估算的值 <see langword="Rate" />。
                 如果省略， <paramref name="Guess" /> 为 0.1 （10%)。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定每个年金周期的利率。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="NPer" /> &lt;= 0.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>
              返回 <see langword="Double" /> 指定资产直线折旧一段时间内的。
            </summary>
      <param name="Cost">
                必需。
                <see langword="Double" /> 指定资产的初始成本。
              </param>
      <param name="Salvage">
                必需。
                <see langword="Double" /> 指定在其使用寿命末尾资产值。
              </param>
      <param name="Life">
                必需。
                <see langword="Double" /> 指定资产的生命周期的长度。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定资产直线折旧一段时间内的。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Life" /> = 0.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>
              返回 <see langword="Double" /> 指定年数之和的折旧资产在指定期间内。
            </summary>
      <param name="Cost">
                必需。
                <see langword="Double" /> 指定资产的初始成本。
              </param>
      <param name="Salvage">
                必需。
                <see langword="Double" /> 指定在其使用寿命末尾资产的值。
              </param>
      <param name="Life">
                必需。
                <see langword="Double" /> 指定资产的生命周期的长度。
              </param>
      <param name="Period">
                必需。
                <see langword="Double" /> 指定的时间计算的资产折旧。
              </param>
      <returns>
              返回 <see langword="Double" /> 指定年数之和的折旧资产在指定期间内。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Salvage" /> &lt; 0， <paramref name="Period" /> &gt; <paramref name="Life" />, ，或 <paramref name="Period" /> &lt; = 0。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" /> 属性的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Erl">
      <summary>
              返回一个整数，指示上次执行的语句的行号。
               只读。
            </summary>
      <returns>
              返回一个整数，指示上次执行的语句的行号。
               只读。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>
              包含有关运行时错误的信息。
            </summary>
      <returns>
              包含有关运行时错误的信息。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示变量是否指向数组。
            </summary>
      <param name="VarName">
                必需。
                <see langword="Object" /> 变量。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示变量是否指向数组。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示表达式是否表示一个有效 <see langword="Date" /> 值。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示表达式是否表示一个有效 <see langword="Date" /> 值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示表达式的计算结果是否为 <see cref="T:System.DBNull" /> 类。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示表达式的计算结果是否为 <see cref="T:System.DBNull" /> 类。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示表达式是否一个异常类型。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示表达式是否一个异常类型。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示表达式是否具有分配给它没有任何对象。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示表达式是否具有分配给它没有任何对象。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示是否可以作为数字计算表达式。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示是否可以作为数字计算表达式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>
              返回 <see langword="Boolean" /> 值，该值指示表达式的计算结果是否为引用类型。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Object" /> 表达式。
              </param>
      <returns>
              返回 <see langword="Boolean" /> 值，该值指示表达式的计算结果是否为引用类型。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>
              返回指定维度的一个数组，最小可用下标。
            </summary>
      <param name="Array">
                必需。
                 任何数据类型的数组。
                 想要查找某个维度的最低可用下标数组。
              </param>
      <param name="Rank">
                可选。
                <see langword="Integer" />。
                 最小可用下标要为其返回该维度。
                 使用 1 表示第一个维度，为第二种，2，依此类推。
                 如果 <paramref name="Rank" /> 被省略，则假定为 1。
              </param>
      <returns>
              <see langword="Integer" />。
               指定维度的下标可以包含的最小值。
              <see langword="LBound" /> 始终返回 0 只要 <paramref name="Array" /> 已初始化，即使它不包含任何元素，例如，如果它是长度为零的字符串。
               如果 <paramref name="Array" /> 是 <see langword="Nothing" />, ，<see langword="LBound" /> 引发 <see cref="T:System.ArgumentNullException" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Array" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.RankException">
                  <paramref name="Rank" /> 等于或大于 1，或 <paramref name="Rank" /> 大于的秩 <paramref name="Array" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>
              返回 <see langword="Integer" /> 数字值，该值表示与指定相对应的 RGB 颜色代码的颜色。
            </summary>
      <param name="Color">
                必需。
                 0-15 范围内的整数。
              </param>
      <returns>
              返回 <see langword="Integer" /> 数字值，该值表示与指定相对应的 RGB 颜色代码的颜色。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Color" /> 位于 0 到 15 之间，非独占的范围之外。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>
              返回 <see langword="Integer" /> 值，该值表示从一组的红色、 绿色和蓝色成分的 RGB 颜色值。
            </summary>
      <param name="Red">
                必需。
                <see langword="Integer" /> 在范围 0 – 255 （含)，表示颜色中红色部分的强度。
              </param>
      <param name="Green">
                必需。
                <see langword="Integer" /> 在范围 0 – 255 （含)，表示颜色中绿色部分的强度。
              </param>
      <param name="Blue">
                必需。
                <see langword="Integer" /> 在范围 0 – 255 （含)，表示颜色中蓝色部分的强度。
              </param>
      <returns>
              返回 <see langword="Integer" /> 值，该值表示从一组的红色、 绿色和蓝色成分的 RGB 颜色值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Green" />, <paramref name="Blue" />, ，或 <paramref name="Red" /> 位于 0 到 255，非独占的范围之外。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>
              返回 <see langword="String" /> 值，该值包含系统数据类型名称的变量。
            </summary>
      <param name="VbName">
                必需。
                 一个 <see langword="String" /> 包含 Visual Basic 类型名称的变量。
              </param>
      <returns>
              返回 <see langword="String" /> 值，该值包含系统数据类型名称的变量。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>
              返回 <see langword="String" /> 值，该值包含有关变量的数据类型信息。
            </summary>
      <param name="VarName">
                必需。
                <see langword="Object" /> 变量。
                 如果 <see langword="Option Strict" /> 是 <see langword="Off" />, ，可以传递结构之外的任何数据类型的变量。
              </param>
      <returns>
              返回 <see langword="String" /> 值，该值包含有关变量的数据类型信息。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>
              返回指定维度的一个数组，最高可用的下标。
            </summary>
      <param name="Array">
                必需。
                 任何数据类型的数组。
                 想要查找最大可能下标维度的数组。
              </param>
      <param name="Rank">
                可选。
                <see langword="Integer" />。
                 最大可能下标要为其返回该维度。
                 使用 1 表示第一个维度，为第二种，2，依此类推。
                 如果 <paramref name="Rank" /> 被省略，则假定为 1。
              </param>
      <returns>
              <see langword="Integer" />。
               指定维度的下标可以包含的最大值。
               如果 <paramref name="Array" /> 只有一个元素， <see langword="UBound" /> ，则返回 0。
               如果 <paramref name="Array" /> 不包含任何元素，例如，如果它是零长度字符串， <see langword="UBound" /> 返回-1。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Array" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.RankException">
                  <paramref name="Rank" /> 小于 1，或 <paramref name="Rank" /> 大于的秩 <paramref name="Array" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>
              返回 <see langword="Integer" /> 值，该值包含变量的数据类型分类。
            </summary>
      <param name="VarName">
                必需。
                <see langword="Object" /> 变量。
                 如果 <see langword="Option Strict" /> 是 <see langword="Off" />, ，可以传递结构之外的任何数据类型的变量。
              </param>
      <returns>
              返回 <see langword="Integer" /> 值，该值包含变量的数据类型分类。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>
              返回 <see langword="String" /> 值，该值包含变量的 Visual Basic 数据类型名称。
            </summary>
      <param name="UrtName">
                必需。
                <see langword="String" /> 包含由公共语言运行时使用的类型名称的变量。
              </param>
      <returns>
              返回 <see langword="String" /> 值，该值包含变量的 Visual Basic 数据类型名称。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
      <summary>
              激活的应用程序已在运行。
            </summary>
      <param name="ProcessId">
                <see langword="Integer" />指定分配给该进程的 Win32 进程 ID 号。
                 你可以使用返回的 ID <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />，则它不为零。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
      <summary>
              激活的应用程序已在运行。
            </summary>
      <param name="Title">
                <see langword="String" />在你要激活的应用程序的标题栏中指定标题的表达式。
                 你可以使用其启动时分配给应用程序的标题。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>
              声音通过计算机的扬声器发出音调。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>
              在对象上执行的方法或设置或对象上返回一个属性。
            </summary>
      <param name="ObjectRef">
                必需。
                <see langword="Object" />。
                 指向公开的属性或方法的对象的指针。
              </param>
      <param name="ProcName">
                必需。
                <see langword="String" />。
                 包含的属性或方法的对象的名称的字符串表达式。
              </param>
      <param name="UseCallType">
                必需。
                 类型的枚举成员<see cref="T:Microsoft.VisualBasic.CallType" />表示的过程调用的类型。
                 The value of <see langword="CallType" /> can be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.
              </param>
      <param name="Args">
                可选。
                <see langword="ParamArray" />。
                 包含要传递到的属性或方法调用的自变量的参数数组。
              </param>
      <returns>
              在对象上执行的方法或设置或对象上返回一个属性。
            </returns>
      <exception cref="T:System.ArgumentException">
                  无效<paramref name="UseCallType" />值; 必须是<see langword="Method" />， <see langword="Get" />，或<see langword="Set" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
      <summary>
              选择并从自变量列表中返回一个值。
            </summary>
      <param name="Index">
                必需。
                <see langword="Double" />。
                 传入的结果值介于 1 和的元素数之间的数值表达式<paramref name="Choice" />自变量。
              </param>
      <param name="Choice">
                必需。
                <see langword="Object" />参数数组。
                 你可以提供单个变量或表达式计算结果为<see langword="Object" />数据类型，列表的<see langword="Object" />变量或表达式分隔用逗号，或指向的一维数组的<see langword="Object" />元素。
              </param>
      <returns>
              选择并从自变量列表中返回一个值。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Command">
      <summary>
              返回用来启动 Visual Basic 或可执行程序的命令行的参数部分使用 Visual Basic 开发。
              <see langword="My" />功能提供更高的工作效率和性能比<see langword="Command " />函数。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />。
            </summary>
      <returns>
              返回用来启动 Visual Basic 或可执行程序的命令行的参数部分使用 Visual Basic 开发。
            
              <see langword="My" />功能提供更高的工作效率和性能比<see langword="Command " />函数。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>
              创建并返回对 COM 对象的引用。
              <see langword="CreateObject" />不能用于在 Visual Basic 中创建的类的实例，除非这些类显式公开为 COM 组件。
            </summary>
      <param name="ProgId">
                必需。
                <see langword="String" />。
                 要创建对象的程序 ID。
              </param>
      <param name="ServerName">
                可选。
                <see langword="String" />。
                 将在其中创建对象网络服务器的名称。
                 如果<paramref name="ServerName" />为空字符串 ("")，则使用本地计算机。
              </param>
      <returns>
              创建并返回对 COM 对象的引用。
              <see langword="CreateObject" />不能用于在 Visual Basic 中创建的类的实例，除非这些类显式公开为 COM 组件。
            </returns>
      <exception cref="T:System.Exception">
                  <paramref name="ProgId" />找不到或未提供
                
                  - 或 -
                
                  <paramref name="ServerName" />失败<see langword="DnsValidateName" />函数，最有可能是由于它的长度超过 63 个字符或包含无效字符。
                </exception>
      <exception cref="T:System.Exception">
                  服务器不可用
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  不存在指定类型的对象
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
      <summary>
              从 Windows 注册表中的应用程序的项目中删除节或键设置。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在注册表操作比 <see langword="DeleteSetting " />函数。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。
            </summary>
      <param name="AppName">
                必需。
                <see langword="String" /> 表达式，包含应用程序或对其应用的节或键设置的项目的名称。
              </param>
      <param name="Section">
                必需。
                <see langword="String" /> 表达式，包含要从中删除注册表项设置的节的名称。
                 如果只 <paramref name="AppName" /> 和 <paramref name="Section" /> 提供所有相关的项设置以及删除指定的节。
              </param>
      <param name="Key">
                可选。
                <see langword="String" /> 表达式，包含要删除的项设置的名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Section" />, <paramref name="AppName" />, ，或 <paramref name="Key" /> 设置不存在。
                </exception>
      <exception cref="T:System.ArgumentException">
                  用户未登录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
      <summary>
              返回与操作系统环境变量关联的字符串。
            </summary>
      <param name="Expression">
                必需。
                 此表达式用于计算包含环境变量或对应于环境字符串表中的一个环境字符串的数字顺序的整数值的名称的字符串。
              </param>
      <returns>
              返回与操作系统环境变量关联的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Expression" /> 找不到。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
      <summary>
              返回与操作系统环境变量关联的字符串。
            </summary>
      <param name="Expression">
                必需。
                 此表达式用于计算包含环境变量或对应于环境字符串表中的一个环境字符串的数字顺序的整数值的名称的字符串。
              </param>
      <returns>
              返回与操作系统环境变量关联的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Expression" /> 找不到。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
      <summary>
              返回的项设置及其各自的值列表 (最初创建时 <see langword="SaveSetting" />) 从 Windows 注册表中的应用程序的条目。
               使用 <see langword="My" /> 功能为您提供更好的工作效率和性能在注册表操作比 <see langword="GetAllSettings" />。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。
            </summary>
      <param name="AppName">
                必需。
                <see langword="String" /> 表达式，包含所请求的密钥设置的项目的应用程序的名称。
              </param>
      <param name="Section">
                必需。
                <see langword="String" /> 表达式，包含要请求其注册表项设置的节的名称。
                <see langword="GetAllSettings" /> 返回一个对象，包含一个二维数组的字符串。
                 这些字符串包含指定的节，加上其对应的值中的所有项设置。
              </param>
      <returns>
              返回的项设置及其各自的值列表 (最初创建时 <see langword="SaveSetting" />) 从 Windows 注册表中的应用程序的条目。
            
              使用 <see langword="My" /> 功能为您提供更好的工作效率和性能在注册表操作比 <see langword="GetAllSettings" />。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  用户未登录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
      <summary>
              返回到 COM 组件所提供的对象的引用。
            </summary>
      <param name="PathName">
                可选。
                <see langword="String" />。
                 完整路径和包含要检索的对象的文件的名称。
                 如果 <paramref name="PathName" /> 省略，则 <paramref name="Class" /> 是必需的。
              </param>
      <param name="Class">
                如果使用 <paramref name="PathName" /> 未提供。
                <see langword="String" />。
                 表示对象的类的字符串。
                <paramref name="Class" /> 参数具有以下语法和部分︰
              
                <paramref name="appname" />
                .
                <paramref name="objecttype" />
              
                [1 | 1]参数
              
                [1 | 2]。说明
              
                [2|1] <paramref name="appname" />
              
                [2 | 2]必填。
                <see langword="String" />。
                 提供对象的应用程序的名称。
              
                [3|1] <paramref name="objecttype" />
              
                [3 | 2]必填。
                <see langword="String" />。
                 若要创建的类型或对象的类。
              </param>
      <returns>
              返回到 COM 组件所提供的对象的引用。
            </returns>
      <exception cref="T:System.Exception">
                  不存在的对象的指定的类类型。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  不具有指定的路径和文件名存在的对象。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
      <summary>
              从 Windows 注册表中的应用程序的项返回一个项设置值。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在注册表操作比 <see langword="GetAllSettings" />。
               有关更多信息，请参见<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。
            </summary>
      <param name="AppName">
                必需。
                <see langword="String" /> 表达式，包含其键设置请求的项目的应用程序的名称。
              </param>
      <param name="Section">
                必需。
                <see langword="String" /> 表达式，包含在其中找到的项设置的节的名称。
              </param>
      <param name="Key">
                必需。
                <see langword="String" /> 表达式，包含要返回的项设置的名称。
              </param>
      <param name="Default">
                可选。
                 包含要返回如果未设置任何值的值表达式 <paramref name="Key" /> 设置。
                 如果省略， <paramref name="Default" /> 被假定为一个零长度字符串 ("")。
              </param>
      <returns>
              从 Windows 注册表中的应用程序的项返回一个项设置值。
            
              <see langword="My" /> 功能为您提供更好的工作效率和性能在注册表操作比 <see langword="GetAllSettings" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  一个或多个参数不是 <see langword="String" /> 表达式或用户未登录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>
              返回两个对象之一，具体取决于表达式的计算。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Boolean" />。
                 用来计算表达式。
              </param>
      <param name="TruePart">
                必需。
                <see langword="Object" />。
                 返回的 if <paramref name="Expression" /> 的计算结果为 <see langword="True" />。
              </param>
      <param name="FalsePart">
                必需。
                <see langword="Object" />。
                 返回的 if <paramref name="Expression" /> 的计算结果为 <see langword="False" />。
              </param>
      <returns>
              返回两个对象之一，具体取决于表达式的计算。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
              在对话框中将显示一条、 等待用户输入文本，或单击一个按钮，并返回一个包含文本框的内容的字符串。
            </summary>
      <param name="Prompt">
                所需 <see langword="String" /> 表达式显示为对话框中的消息。
                 最大长度 <paramref name="Prompt" /> 大约为 1024年个字符，具体取决于所用字符的宽度。
                 如果 <paramref name="Prompt" /> 包含的多个行，您可以单独的行使用一个回车符 (<see langword="Chr(" />13<see langword=")" />)，以换行符 (<see langword="Chr(" />10<see langword=")" />)，或回车/换行组合 (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) 每行之间。
              </param>
      <param name="Title">
                可选。
                <see langword="String" /> 对话框中的标题栏中显示的表达式。
                 如果省略 <paramref name="Title" />, ，放在标题栏中的应用程序名称。
              </param>
      <param name="DefaultResponse">
                可选。
                <see langword="String" /> 显示在文本框中为默认响应如果没有其他输入提供的表达式。
                 如果省略 <paramref name="DefaultResponse" />, ，显示的文本框为空。
              </param>
      <param name="XPos">
                可选。
                 指定单位为缇屏幕的左边缘的对话框的左边缘的距离的数值表达式。
                 如果省略 <paramref name="XPos" />, ，对话框中的水平居中位置。
              </param>
      <param name="YPos">
                可选。
                 指定以缇为单位，从屏幕顶部的对话框中的上边缘的距离的数值表达式。
                 如果省略 <paramref name="YPos" />, ，对话框中定位垂直约三分之一的屏幕的方式。
              </param>
      <returns>
              在对话框中将显示一条、 等待用户输入文本，或单击一个按钮，并返回一个包含文本框的内容的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
      <summary>
              在对话框中显示一条消息，等待用户单击按钮，并返回一个整数，指示用户单击了哪个按钮。
            </summary>
      <param name="Prompt">
                必需。
                <see langword="String" /> 显示为对话框中的消息的表达式。
                 最大长度 <paramref name="Prompt" /> 大约为 1024年个字符，具体取决于所用字符的宽度。
                 如果 <paramref name="Prompt" /> 包含的多个行，您可以单独的行使用一个回车符 (<see langword="Chr(" />13<see langword=")" />)，以换行符 (<see langword="Chr(" />10<see langword=")" />)，或回车符/换行符组合 (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) 每行之间。
              </param>
      <param name="Buttons">
                可选。
                 是指定的数量和类型的按钮来显示，请使用默认按钮的标识以及消息框的样式等的图标类型的值之和的数值表达式。
                 如果省略 <paramref name="Buttons" />, ，默认值为零。
              </param>
      <param name="Title">
                可选。
                <see langword="String" /> 对话框中的标题栏中显示的表达式。
                 如果省略 <paramref name="Title" />, ，放在标题栏中的应用程序名称。
              </param>
      <returns>
                      常量
                    
                      值
                    
                      <see langword="OK" />
                    
                      1
                    
                      <see langword="Cancel" />
                    
                      2
                    
                      <see langword="Abort" />
                    
                      3
                    
                      <see langword="Retry" />
                    
                      4
                    
                      <see langword="Ignore" />
                    
                      5
                    
                      <see langword="Yes" />
                    
                      6
                    
                      <see langword="No" />
                    
                      7
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Prompt" /> 不是 <see langword="String" /> 表达式中，或 <paramref name="Title" /> 无效。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  进程不在用户交互模式中运行。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  一个或多个参数不是成员的 <see langword="MsgBoxResult" /> 或 <see langword="MsgBoxStyle" /> 枚举。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
              返回一个字符串，表示包含大量的计算的范围。
            </summary>
      <param name="Number">
                必需。
                <see langword="Long" />。
                 您想要查找某个计算范围内的整数。
              </param>
      <param name="Start">
                必需。
                <see langword="Long" />。
                 指示计算范围集开始部分的整数。
                <paramref name="Start" /> 不能小于 0。
              </param>
      <param name="Stop">
                必需。
                <see langword="Long" />。
                 一个整数，指示计算范围集的末尾。
                <paramref name="Stop" /> 不能小于或等于 <paramref name="Start" />。
              </param>
      <param name="Interval">
                必需。
                <see langword="Long" />。
                 之间的整数，指示每个范围的大小计算 <paramref name="Start" /> 和 <paramref name="Stop" />。
                <paramref name="Interval" /> 不能小于 1。
              </param>
      <returns>
              返回一个字符串，表示包含大量的计算的范围。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Start" /> &lt; 0， <paramref name="Stop" /> &lt; = <paramref name="Start" />, ，或 <paramref name="Interval" /> &lt; 1。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
      <summary>
              保存或在 Windows 注册表中创建应用程序条目。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在注册表操作比 <see langword="SaveSetting" />。
               有关详细信息，请参阅<see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />。
            </summary>
      <param name="AppName">
                必需。
                <see langword="String" /> 表达式，包含该设置将应用的项目的应用程序的名称。
              </param>
      <param name="Section">
                必需。
                <see langword="String" /> 表达式，包含在其中保存注册表项设置的节的名称。
              </param>
      <param name="Key">
                必需。
                <see langword="String" /> 表达式，包含要保存的密钥设置的名称。
              </param>
      <param name="Setting">
                必需。
                 包含的值的表达式 <paramref name="Key" /> 正在设置。
              </param>
      <exception cref="T:System.ArgumentException">
                  无法创建注册表项，或用户未登录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
      <summary>
              运行可执行程序，并返回一个整数，如果它仍在运行包含程序的进程 ID。
            </summary>
      <param name="PathName">
                必需。
                <see langword="String" />。
                 若要执行，以及任何所需的参数和命令行开关的程序的名称。
                <paramref name="PathName" /> 此外可以包括驱动器的目录路径或文件夹。
              
                如果给程序不知道该路径，则可以使用 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> 来找到它。
                 例如，您可以调用 My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt"), ，表示将返回名为每个文件的完整路径 testFile.txt 任意位置驱动器上的 C:\。
              </param>
      <param name="Style">
                可选。
                <see langword="AppWinStyle" />。
                 从选择的值 <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> 指定是用要运行程序窗口的样式。
                 如果 <paramref name="Style" /> 省略，则 <see langword="Shell" /> 使用 <see langword="AppWinStyle.MinimizedFocus" />, ，最小化并获得焦点启动该程序。
              </param>
      <param name="Wait">
                可选。
                <see langword="Boolean" />。
                 一个值，该值指示是否 <see langword="Shell" /> 函数应等待完成程序。
                 如果 <paramref name="Wait" /> 省略，则 <see langword="Shell" /> 使用 <see langword="False" />。
              </param>
      <param name="Timeout">
                可选。
                <see langword="Integer" />。
                 如果等待完成的毫秒数 <paramref name="Wait" /> 是 <see langword="True" />。
                 如果 <paramref name="Timeout" /> 省略，则 <see langword="Shell" /> 使用-1，表示没有超时设置和 <see langword="Shell" /> 在程序完成后才返回。
                 因此，如果省略 <paramref name="Timeout" /> 或一组就可以为-1，它的 <see langword="Shell" /> 可能永远不会将控制权返回给您的程序。
              </param>
      <returns>
              运行可执行程序，并返回一个整数，如果它仍在运行包含程序的进程 ID。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Style" /> 不在 0 到 9，（含) 范围内。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <see langword="Shell" /> 找不到 <paramref name="PathName" /> 文件。
                </exception>
      <exception cref="T:System.NullReferenceException">
                  <paramref name="PathName" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
      <summary>
              计算表达式并返回列表 <see langword="Object" /> 相对应的列表中的第一个表达式的值 <see langword="True" />。
            </summary>
      <param name="VarExpr">
                必需。
                <see langword="Object" /> 参数数组。
                 必须具有偶数数目的元素。
                 您可以提供一份 <see langword="Object" /> 隔开逗号或的一维数组的变量或表达式 <see langword="Object" /> 元素。
              </param>
      <returns>
              计算表达式并返回列表 <see langword="Object" /> 相对应的列表中的第一个表达式的值 <see langword="True" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  参数个数为奇数。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Logging.AspLog" /> 类的新实例。
            </summary>
      <param name="name">
                <see cref="T:System.String" />。
                 要赋予的名称<see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />属性对象。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists">
      <summary>
              创建一个新 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 并将其添加到 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类，具有默认名称。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类所提供的名称。
            </summary>
      <param name="name">
                <see langword="String" />。
                 实例对象的名称。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>
              关闭当前的日志文件的基础流并释放与当前的流关联的任何资源。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>
              关闭基础流，还可以释放托管的资源。
            </summary>
      <param name="disposing">
                <see langword="True" /> 释放托管和非托管资源; <see langword="False" /> 仅释放非托管资源。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>
              刷新基础流，它将写入到当前日志文件。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>
              获取跟踪侦听器支持的自定义 XML 配置特性。
            </summary>
      <returns>
              <see langword="String" /> 数组，其中包含此侦听器可识别的 XML 配置特性。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>
              写入跟踪信息、 数据对象和事件信息写入输出文件或流。
            </summary>
      <param name="eventCache">
                包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。
              </param>
      <param name="source">
                调用此方法的跟踪源名称。
              </param>
      <param name="eventType">
                <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。
              </param>
      <param name="id">
                事件的数值标识符。
              </param>
      <param name="data">
                要发出的跟踪数据。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>
              写入跟踪信息、 数据对象和事件信息写入输出文件或流的数组。
            </summary>
      <param name="eventCache">
                包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。
              </param>
      <param name="source">
                调用此方法的跟踪源的名称。
              </param>
      <param name="eventType">
                <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。
              </param>
      <param name="id">
                事件的数值标识符。
              </param>
      <param name="data">
                要作为数据发出的对象数组。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>
              写入跟踪信息、 消息和事件信息写入输出文件或流。
            </summary>
      <param name="eventCache">
                包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。
              </param>
      <param name="source">
                调用此方法的跟踪源名称。
              </param>
      <param name="eventType">
                <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。
              </param>
      <param name="id">
                事件的数值标识符。
              </param>
      <param name="message">
                要写入的消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>
              写入跟踪信息、 格式化的对象和事件信息写入输出文件或流的数组。
            </summary>
      <param name="eventCache">
                包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。
              </param>
      <param name="source">
                调用此方法的跟踪源名称。
              </param>
      <param name="eventType">
                <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值之一。
              </param>
      <param name="id">
                事件的数值标识符。
              </param>
      <param name="format">
                一个格式字符串，其中包含零个或多个格式项，它们对应于 <paramref name="args" /> 数组中的对象。
              </param>
      <param name="args">
                包含零个或多个要格式化的对象的 <see langword="Object" /> 数组。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>
              原义消息写入磁盘，而无需任何其他上下文信息。
            </summary>
      <param name="message">
                <see langword="String" />。
                 要写入的自定义消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>
              原义消息写入磁盘后, 跟当前行终止符，而无需任何其他上下文信息。
            </summary>
      <param name="message">
                <see langword="String" />。
                 要写入的自定义消息。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 类的新实例。
            </summary>
      <param name="name">
                <see cref="T:System.String" />。
                 为指定名称 <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> 属性对象。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>
              创建一个新 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象，并将其添加到 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>
              将消息写入应用程序的日志侦听器。
            </summary>
      <param name="message">
                必需。
                 要记录的消息。
                 如果 <paramref name="message" /> 是 <see langword="Nothing" />, ，则使用空字符串。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  部分信任的代码调用方法，但将写入到需要完全信任的事件日志侦听器。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>
              将消息写入应用程序的日志侦听器。
            </summary>
      <param name="message">
                必需。
                 要记录的消息。
                 如果 <paramref name="message" /> 是 <see langword="Nothing" />, ，则使用空字符串。
              </param>
      <param name="severity">
                消息类型。
                 默认情况下， <see langword="TraceEventType.Information" />。
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  消息类型不是其中一个 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任的代码调用方法，但将写入到需要完全信任的事件日志侦听器。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>
              将消息写入应用程序的日志侦听器。
            </summary>
      <param name="message">
                必需。
                 要记录的消息。
                 如果 <paramref name="message" /> 是 <see langword="Nothing" />, ，则使用空字符串。
              </param>
      <param name="severity">
                消息类型。
                 默认情况下， <see langword="TraceEventType.Information" />。
              </param>
      <param name="id">
                消息标识符，通常用于建立关联。
                 默认情况下，与 <paramref name="entryType" /> 表中所述。
              </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  消息类型不是其中一个 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任的代码调用方法，但将写入到需要完全信任的事件日志侦听器。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>
              将异常信息写入应用程序的日志侦听器。
            </summary>
      <param name="ex">
                必需。
                 要记录的异常。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="ex" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任的代码调用方法，但将写入到需要完全信任的事件日志侦听器。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>
              将异常信息写入应用程序的日志侦听器。
            </summary>
      <param name="ex">
                必需。
                 要记录的异常。
              </param>
      <param name="severity">
                消息类型。
                 默认情况下， <see cref="F:System.Diagnostics.TraceEventType.Error" />。
              </param>
      <param name="additionalInfo">
                要追加到消息的字符串。
                 默认情况下，这是一个空字符串。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="ex" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  消息类型不是其中一个 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任的代码调用方法，但将写入到需要完全信任的事件日志侦听器。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>
              将异常信息写入应用程序的日志侦听器。
            </summary>
      <param name="ex">
                必需。
                 要记录的异常。
              </param>
      <param name="severity">
                消息类型。
                 默认情况下， <see cref="F:System.Diagnostics.TraceEventType.Error" />。
              </param>
      <param name="additionalInfo">
                要追加到消息的字符串。
                 默认情况下，这是一个空字符串。
              </param>
      <param name="id">
                消息标识符，通常用于建立关联。
                 默认情况下，与 <paramref name="entryType" /> 备注部分中的表中所述。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="ex" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
                  消息类型不是其中一个 <see cref="T:System.Diagnostics.TraceEventType" /> 枚举值。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  部分信任的代码调用方法，但将写入到需要完全信任的事件日志侦听器。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
              此特性支持 <see langword="My.Forms" /> 和 <see langword="My.WebServices" /> 中 Visual Basic。
            </summary>
      <param name="typeToCollect">
                <see langword="String" />。
                 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" /> 属性。
                 编译器将生成从此类型派生类的取值函数的属性。
              </param>
      <param name="createInstanceMethodName">
                <see langword="String" />。
                 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" /> 属性。
                 在创建该类型的实例的类中指定的方法。
              </param>
      <param name="disposeInstanceMethodName">
                <see langword="String" />。
                 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" /> 属性。
                 在释放类型的实例的类中指定的方法。
              </param>
      <param name="defaultInstanceAlias">
                <see langword="String" />。
                 初始化 <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" /> 属性。
                 指定返回类的默认实例的属性的名称。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>
              清除剪贴板。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>
              指示是否剪贴板包含音频数据。
            </summary>
      <returns>
              <see langword="True" />如果音频数据存储在剪贴板;，否则为<see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>
              指示剪贴板是否包含指定的自定义格式的数据。
            </summary>
      <param name="format">
                <see langword="String" />。
                 要检查的自定义格式的名称。
                 必需。
              </param>
      <returns>
              <see langword="True" />如果指定的自定义格式的数据存储在剪贴板;，否则为<see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>
              返回<see langword="Boolean" />，该值指示剪贴板是否包含文件下拉列表。
            </summary>
      <returns>
              <see langword="True" />如果有文件下拉列表存储在剪贴板上;否则为<see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>
              返回<see langword="Boolean" />，该值指示是否将映像存储在剪贴板上。
            </summary>
      <returns>
              <see langword="True" />如果的映像存储在剪贴板上;，否则为<see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>
              确定在剪贴板上是否存在文本。
            </summary>
      <returns>
              <see langword="True" />如果剪贴板包含文本;否则为<see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>
              确定在剪贴板上是否存在文本。
            </summary>
      <param name="format">
                <see cref="T:System.Windows.Forms.TextDataFormat" />。
                 如果指定，标识要检查的何种文本格式。
                 必需。
              </param>
      <returns>
              <see langword="True" />如果剪贴板包含文本;否则为<see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>
              从剪贴板检索的音频流。
            </summary>
      <returns>
              一个 <see cref="T:System.IO.Stream" /> 对象，其中包含音频数据或 <see langword="Nothing" /> 如果剪贴板不包含任何音频数据。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>
              从剪贴板检索数据以自定义格式。
            </summary>
      <param name="format">
                <see langword="String" />。
                 数据格式的名称。
                 必需。
              </param>
      <returns>
              <see langword="Object" /> 表示剪贴板数据或 <see langword="Nothing" /> 如果剪贴板不包含任何数据中指定的格式或可以转换为该格式的数据。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>
              从剪贴板中检索数据 <see cref="T:System.Windows.Forms.IDataObject" />。
            </summary>
      <returns>
              <see cref="T:System.Windows.Forms.IDataObject" /> 对象，表示当前在剪贴板上的数据或 <see langword="Nothing" /> 如果没有在剪贴板上的数据。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>
              检索表示剪贴板中的文件的名称的字符串的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.Specialized.StringCollection" /> 包含文件的名称或 <see langword="Nothing" /> 如果剪贴板不包含任何数据，则 <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> 设置格式或可以转换为该格式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>
              从剪贴板检索的图像。
            </summary>
      <returns>
              <see cref="T:System.Drawing.Image" /> 表示剪贴板图像数据或 <see langword="Nothing" /> 如果剪贴板不包含任何数据，则 <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> 设置格式或可以转换为该格式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>
              从剪贴板中检索文本。
            </summary>
      <returns>
              剪贴板文本数据; 如果剪贴板不包含中的数据为空字符串 <see cref="F:System.Windows.Forms.DataFormats.Text" /> 或 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> 格式，具体取决于操作系统。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>
              从剪贴板中检索文本。
            </summary>
      <param name="format">
                <see cref="T:System.Windows.Forms.TextDataFormat" />。
                 如果指定，则标识应检索哪种文本格式。
                 默认值为 <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />。
                 必需。
              </param>
      <returns>
              剪贴板文本数据或如果剪贴板不包含指定格式的数据为空字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>
              将音频数据写入到剪贴板。
            </summary>
      <param name="audioBytes">
                <see langword="Byte" /> 数组。
                 音频数据写入到剪贴板。
                 必需。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>
              将音频数据写入到剪贴板。
            </summary>
      <param name="audioStream">
                <see cref="T:System.IO.Stream" /> 音频数据写入到剪贴板。
                 必需。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>
              到剪贴板中的自定义格式写入数据。
            </summary>
      <param name="format">
                <see langword="String" />。
                 数据的格式。
                 必需。
              </param>
      <param name="data">
                <see langword="Object" />。
                 要写入到剪贴板数据对象。
                 必需。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>
              写入 <see cref="T:System.Windows.Forms.DataObject" /> 到剪贴板。
            </summary>
      <param name="data">
                <see cref="T:System.Windows.Forms.DataObject" />。
                 要写入到剪贴板数据对象。
                 必需。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>
              写入的字符串表示到剪贴板上的文件路径的集合。
            </summary>
      <param name="filePaths">
                <see cref="T:System.Collections.Specialized.StringCollection" />。
                 文件名称的列表。
                 必需。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>
              将映像写入到剪贴板。
            </summary>
      <param name="image">
                <see cref="T:System.Drawing.Image" />。
                 要写入的图像。
                 必需。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>
              将文本写入剪贴板。
            </summary>
      <param name="text">
                <see langword="String" />。
                 要写入的文本。
                 必需。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="text" /> 是一个空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="text" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>
              将文本写入剪贴板。
            </summary>
      <param name="text">
                <see langword="String" />。
                 要写入的文本。
                 必需。
              </param>
      <param name="format">
                <see cref="T:System.Windows.Forms.TextDataFormat" />。
                 要写入文本时使用的格式。
                 默认值为 <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />。
                 必需。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="text" /> 是一个空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="text" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>
              合并两个路径，并返回格式正确的路径。
            </summary>
      <param name="baseDirectory">
                <see langword="String" />。
                 要组合的第一个路径。
              </param>
      <param name="relativePath">
                <see langword="String" />。
                 要合并的第二个路径。
              </param>
      <returns>
              指定的路径的组合。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="baseDirectory" />或<paramref name="relativePath" />格式不正确的路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>
              将目录复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录复制到的位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将目录复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录复制到的位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="ShowUI" />设置为<see langword="UIOption.AllDialogs" />并且用户取消操作，或无法复制目录中的一个或多个文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将目录复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录复制到的位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定应该是什么如果用户单击这样做取消在操作过程中。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="ShowUI" />设置为<see langword="UIOption.AllDialogs" />并且用户取消操作，或无法复制目录中的一个或多个文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>
              将目录复制到另一个目录。
            </summary>
      <param name="sourceDirectoryName">
                要复制的目录。
              </param>
      <param name="destinationDirectoryName">
                应将目录复制到的位置。
              </param>
      <param name="overwrite">
                <see langword="True" />若要覆盖现有文件;否则为<see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  新的名称指定为该目录包含冒号 （:） 或斜杠 (\ 或 /)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationDirectoryName" />或<paramref name="sourceDirectoryName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  源目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源目录是一个根目录
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源路径和目标路径是相同的。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该操作是循环。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件夹名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  目标文件存在，但不能访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在和<paramref name="overwrite" />设置为<see langword="False" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定应该是什么如果用户单击这样做取消在操作过程中。
                 默认值为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在和<paramref name="overwrite" />设置为<see langword="False" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="UICancelOption" />设置为<see langword="ThrowException" />，并且用户已取消该操作或发生了 I/O 错误。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>
              将文件复制到新位置。
            </summary>
      <param name="sourceFileName">
                要复制的文件。
              </param>
      <param name="destinationFileName">
                应将文件复制到的位置。
              </param>
      <param name="overwrite">
                <see langword="True" />如果应覆盖现有文件;否则为<see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 是零长度字符串;它仅包含空白;它包含无效字符;或它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="destinationFileName " />包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" />或<paramref name="sourceFileName" />是<see langword="Nothing" />或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  组合的路径指向现有目录。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有足够的权限访问该文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  具有相同名称的目标目录中的文件正在使用。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在和<paramref name="overwrite" />设置为<see langword="False" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过了系统定义的最大长度。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有要求的权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少查看该路径所必需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>
              创建目录。
            </summary>
      <param name="directory">
                名称和目录的位置。
              </param>
      <exception cref="T:System.ArgumentException">
                  目录名称格式不正确。
                   例如，它包含非法字符，或仅为空白。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  目录名称过长。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称是仅为冒号 （:）。
                </exception>
      <exception cref="T:System.IO.IOException">
                  要创建的父目录是目录的只读的
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有权限创建目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>
              删除一个目录。
            </summary>
      <param name="directory">
                要删除的目录。
              </param>
      <param name="onDirectoryNotEmpty">
                指定要从中删除一个目录包含文件或目录时应采取的操作。
                 默认值为 <see langword="DeleteDirectoryOption.DeleteAllContents" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径是一个零长度字符串、 格式不正确、 仅包含空白，或包含无效字符 （包括通配符）。
                   该路径是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  目录不存在或者目录是一个文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该目录不为空，并且 <paramref name="onDirectoryNotEmpty" /> 设置为 <see langword="ThrowIfDirectoryNonEmpty" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有删除目录或子目录的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录或子目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称包含冒号 （:）。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有所需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了该操作，或者不能删除该目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
              删除一个目录。
            </summary>
      <param name="directory">
                要删除的目录。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指定是否应删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径是一个零长度字符串、 格式不正确、 仅包含空白，或包含无效字符 （包括通配符）。
                   该路径是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  目录不存在或者目录是一个文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该目录不为空，并且 <paramref name="onDirectoryNotEmpty" /> 设置为 <see langword="ThrowIfDirectoryNonEmpty" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有删除目录或子目录的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录或子目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称包含冒号 （:）。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有所需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了该操作，或者不能删除该目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              删除一个目录。
            </summary>
      <param name="directory">
                要删除的目录。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指定是否应删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <param name="onUserCancel">
                指定是否引发异常，如果用户单击 取消。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径是一个零长度字符串、 格式不正确、 仅包含空白，或包含无效字符 （包括通配符）。
                   该路径是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  目录不存在或者目录是一个文件。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该目录不为空，并且 <paramref name="onDirectoryNotEmpty" /> 设置为 <see langword="ThrowIfDirectoryNonEmpty" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  用户没有删除目录或子目录的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目录或子目录中的文件正在使用。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录名称包含冒号 （:）。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有所需的权限。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了该操作，或者不能删除该目录。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>
              删除的文件。
            </summary>
      <param name="file">
                名称和要删除的文件的路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;它具有尾部反斜杠，必须指定一个文件;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该文件正在使用。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有删除该文件的权限或者该文件是只读的。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>
              删除的文件。
            </summary>
      <param name="file">
                名称和要删除的文件的路径。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指示是否应将已删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;它具有尾部反斜杠，必须指定一个文件;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该文件正在使用。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有删除该文件的权限或者该文件是只读的。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              删除的文件。
            </summary>
      <param name="file">
                名称和要删除的文件的路径。
              </param>
      <param name="showUI">
                是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="recycle">
                指示是否应将已删除的文件发送到 回收站。
                 默认值为 <see langword="RecycleOption.DeletePermanently" />。
              </param>
      <param name="onUserCancel">
                指定在用户取消该操作时引发异常。
                 默认值为 <see langword="UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;它具有尾部反斜杠，必须指定一个文件;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.IO.IOException">
                  该文件正在使用。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有删除该文件的权限或者该文件是只读的。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  用户取消了操作和 <paramref name="onUserCancel" /> 设置为 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>
              返回 <see langword="True" /> 如果指定的目录已存在。
            </summary>
      <param name="directory">
                目录的路径。
              </param>
      <returns>
              <see langword="True" /> 如果目录存在，则否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>
              返回 <see langword="True" /> 如果指定的文件存在。
            </summary>
      <param name="file">
                名称和文件的路径。
              </param>
      <returns>
              返回 <see langword="True" /> 否则如果该文件存在，则此方法返回 <see langword="False" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件的名称以反斜杠 (\) 结尾。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>
              返回表示包含指定的文本的文件名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <param name="containsText">
                搜索文本。
              </param>
      <param name="ignoreCase">
                <see langword="True" /> 如果搜索应区分大小写。否则为 <see langword="False" />。
                 默认值为 <see langword="True" />。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <returns>
              包含指定的文本的文件名称的只读集合...
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\.\)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  指定的目录路径包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
              返回表示包含指定的文本的文件名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <param name="containsText">
                搜索文本。
              </param>
      <param name="ignoreCase">
                <see langword="True" /> 如果搜索应区分大小写。否则为 <see langword="False" />。
                 默认值为 <see langword="True" />。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <param name="fileWildcards">
                要被匹配的模式。
              </param>
      <returns>
              包含指定的文本的文件名称的只读集合...
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\.\)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  指定的目录路径包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>
              返回表示某个目录中的子目录的路径名称的字符串集合。
            </summary>
      <param name="directory">
                名称和目录的路径。
              </param>
      <returns>
              只读集合中指定的目录的子目录的路径名称...
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
              返回表示某个目录中的子目录的路径名称的字符串集合。
            </summary>
      <param name="directory">
                名称和目录的路径。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <param name="wildcards">
                使名称相匹配的模式。
              </param>
      <returns>
              只读集合中指定的目录的子目录的路径名称。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  一个或多个指定的通配符是 <see langword="Nothing" />, ，空字符串，或只包含空格。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  指定的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  指定的目录将指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>
              返回 <see cref="T:System.IO.DirectoryInfo" /> 对象为指定的路径。
            </summary>
      <param name="directory">
                <see langword="String" />。
                 目录的路径。
              </param>
      <returns>
              <see cref="T:System.IO.DirectoryInfo" /> 指定的路径的的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  目录路径包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>
              返回 <see cref="T:System.IO.DriveInfo" /> 指定的驱动器的对象。
            </summary>
      <param name="drive">
                要检查的驱动器。
              </param>
      <returns>
              <see cref="T:System.IO.DriveInfo" /> 指定的驱动器的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="drive" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>
              返回 <see cref="T:System.IO.FileInfo" /> 指定文件的对象。
            </summary>
      <param name="file">
                名称和文件的路径。
              </param>
      <returns>
              <see cref="T:System.IO.FileInfo" /> 指定文件的对象
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径名称格式不正确。
                   例如，它包含无效字符或仅为空白。
                   文件名具有尾随斜杠标记。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  该路径包含该字符串中间的冒号。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径过长。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少对文件的 ACL （访问控制列表） 访问。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>
              返回表示目录内文件的名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <returns>
              从指定的目录的文件名称的只读集合。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  要搜索的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="directory" /> 指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>
              返回表示目录内文件的名称的字符串的只读集合。
            </summary>
      <param name="directory">
                要搜索的目录。
              </param>
      <param name="searchType">
                是否包括子文件夹。
                 默认值为 <see langword="SearchOption.SearchTopLevelOnly" />。
              </param>
      <param name="wildcards">
                要被匹配的模式。
              </param>
      <returns>
              从指定的目录的文件名称的只读集合。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  要搜索的目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="directory" /> 指向现有文件。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>
              分析文件名称，从提供的路径。
            </summary>
      <param name="path">
                必需。
                 要分析的路径。
                <see langword="String" />。
              </param>
      <returns>
              从指定的路径文件名。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>
              返回所提供的路径的父路径。
            </summary>
      <param name="path">
                要检查的路径。
              </param>
      <returns>
              所提供的路径的父路径。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  路径没有父路径，因为它是根路径。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="path" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>
              创建唯一命名的磁盘上的零字节临时文件并返回该文件的完整路径。
            </summary>
      <returns>
              <see langword="String" /> 包含临时文件的完整路径。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录已存在和 o<paramref name="verwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定在用户取消该操作时引发异常。
                 默认值为 <see langword="UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录已存在和 o<paramref name="verwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" /> 和子目录中的文件无法复制。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />, ，和用户取消了操作，或无法完成该操作。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />, ，并且用户缺少必要的权限。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>
              将目录从一个位置移动到另一个。
            </summary>
      <param name="sourceDirectoryName">
                要移动的目录的路径。
              </param>
      <param name="destinationDirectoryName">
                源目录移动到的目录路径。
              </param>
      <param name="overwrite">
                <see langword="True" /> 如果应覆盖现有目录;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceDirectoryName" /> 或 <paramref name="destinationDirectoryName" /> 是 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  源是一个根目录或源路径和目标路径相同。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标目录已存在和 o<paramref name="verwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作为循环。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在并 <paramref name="overwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <param name="showUI">
                指定是否要直观地跟踪操作的进度。
                 默认值为 <see langword="UIOption.OnlyErrorDialogs" />。
              </param>
      <param name="onUserCancel">
                指定在用户取消该操作时引发异常。
                 默认值为 <see langword="UICancelOption.ThrowException" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在并 <paramref name="overwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.OperationCanceledException">
                  <paramref name="onUserCancel" /> 设置为 <see langword="ThrowException" />, ，并且用户已取消该操作或发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>
              将文件移到新位置。
            </summary>
      <param name="sourceFileName">
                要移动的文件的路径。
              </param>
      <param name="destinationFileName">
                该文件应移入其中的目录路径。
              </param>
      <param name="overwrite">
                <see langword="True" /> 若要覆盖现有文件;否则为 <see langword="False" />。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="destinationFileName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  源文件无效或不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  目标文件存在并 <paramref name="overwrite" /> 设置为 <see langword="False" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>
              <see langword="OpenTextFieldParser" /> 方法允许您创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。
              <see langword="TextFieldParser" /> 对象可以用于读取分隔和固定宽度文件。
            </summary>
      <param name="file">
                要使用打开的文件 <see langword="TextFieldParser" />。
              </param>
      <returns>
              <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 若要读取指定的文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  使用指定的格式不能分析某行。
                   异常消息指定的行导致此异常，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  属性分配的行中包含的文本。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>
              <see langword="OpenTextFieldParser" /> 方法允许您创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。
              <see langword="TextFieldParser" /> 对象可以用于读取分隔和固定宽度文件。
            </summary>
      <param name="file">
                要使用打开的文件 <see langword="TextFieldParser" />。
              </param>
      <param name="fieldWidths">
                字段的宽度。
              </param>
      <returns>
              <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 若要读取指定的文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  使用指定的格式不能分析某行。
                   异常消息指定的行导致此异常，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  属性分配的行中包含的文本。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>
              <see langword="OpenTextFieldParser" /> 方法允许您创建 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象，它提供了如何轻松而高效地分析结构化的文本文件，例如日志。
              <see langword="TextFieldParser" /> 对象可以用于读取分隔和固定宽度文件。
            </summary>
      <param name="file">
                要使用打开的文件 <see langword="TextFieldParser" />。
              </param>
      <param name="delimiters">
                字段分隔符。
              </param>
      <returns>
              <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 若要读取指定的文件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
                  使用指定的格式不能分析某行。
                   异常消息指定的行导致此异常，而 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />  属性分配的行中包含的文本。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamReader" /> 要从文件读取对象。
            </summary>
      <param name="file">
                要读取的文件。
              </param>
      <returns>
              <see cref="T:System.IO.StreamReader" /> 要从文件中读取对象
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以反斜杠 (\) 结尾。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  找不到指定的文件。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限来读取文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamReader" /> 要从文件读取对象。
            </summary>
      <param name="file">
                要读取的文件。
              </param>
      <param name="encoding">
                要用于该文件的内容的编码。
                 默认值为 ASCII。
              </param>
      <returns>
              <see cref="T:System.IO.StreamReader" /> 要从文件中读取对象
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以反斜杠 (\) 结尾。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  找不到指定的文件。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限来读取文件。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamWriter" /> 对象写入指定的文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 的内容 <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <returns>
              <see cref="T:System.IO.StreamWriter" /> 要写入到指定的文件的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以尾部反斜杠结尾。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>
              此时将打开 <see cref="T:System.IO.StreamWriter" /> 要写入到指定的文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 中的内容 <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <param name="encoding">
                要在写入到文件中使用的编码。
                 默认值为 ASCII。
              </param>
      <returns>
              <see cref="T:System.IO.StreamWriter" /> 要写入到指定的文件的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  文件名称以尾部反斜杠结尾。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>
              字节数组的形式返回文件的内容。
            </summary>
      <param name="file">
                要读取的文件。
              </param>
      <returns>
              <see langword="Byte" /> 数组，其中包含该文件的内容。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>
              返回一个文本文件作为内容 <see langword="String" />。
            </summary>
      <param name="file">
                名称和要读取的文件路径。
              </param>
      <returns>
              <see langword="String" /> 包含文件的内容。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>
              返回一个文本文件作为内容 <see langword="String" />。
            </summary>
      <param name="file">
                名称和要读取的文件路径。
              </param>
      <param name="encoding">
                要在读取文件中使用字符编码。
                 默认值为 utf-8。
              </param>
      <returns>
              <see langword="String" /> 包含文件的内容。
            </returns>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>
              重命名一个目录。
            </summary>
      <param name="directory">
                路径和要重命名的目录的名称。
              </param>
      <param name="newName">
                目录的新名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="newName" /> 包含路径信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="directory" /> 为 <see langword="Nothing" />。
                
                  - 或 -
                
                  <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该目录不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  没有现有的文件或目录中指定的名称与 <paramref name="newName" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过 248 个字符。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>
              重命名文件。
            </summary>
      <param name="file">
                要重命名的文件。
              </param>
      <param name="newName">
                文件的新名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \)。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="newName" /> 包含路径信息或以反斜杠 (\) 结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                
                  - 或 -
                
                  <paramref name="newName" /> 为 <see langword="Nothing" /> 或空字符串。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  没有现有的文件或目录中指定的名称与 <paramref name="newName" />。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  用户没有所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>
              将数据写入二进制文件。
            </summary>
      <param name="file">
                路径和要写入到的文件的名称。
              </param>
      <param name="data">
                要写入到文件数据。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件的内容; <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>
              将文本写入文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="text">
                要写入到文件的文本。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 的内容 <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>
              将文本写入文件。
            </summary>
      <param name="file">
                要写入到文件。
              </param>
      <param name="text">
                要写入到文件的文本。
              </param>
      <param name="append">
                <see langword="True" /> 要追加到该文件; 的内容 <see langword="False" /> 覆盖该文件的内容。
                 默认值为 <see langword="False" />。
              </param>
      <param name="encoding">
                写入文件时要使用何种编码。
                 默认值为 utf-8。
              </param>
      <exception cref="T:System.ArgumentException">
                  路径由于以下原因之一无效︰ 它是零长度字符串;它仅包含空白;它包含无效字符;或者它是一个设备路径 (开头 \\。 \);它以尾部反斜杠结尾。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="file" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  文件不存在。
                </exception>
      <exception cref="T:System.IO.IOException">
                  文件正由另一个进程使用，或者发生了 I/O 错误。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  路径超过系统定义的最大长度。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  在路径中的文件或目录名称包含冒号 （:），或格式无效。
                </exception>
      <exception cref="T:System.OutOfMemoryException">
                  不是内存不足，无法将字符串写入缓冲区。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  该用户缺少必要的权限查看该路径。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>
              此类支持<see langword="My" />中Visual Basic。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>
              从注册表项中获取一个值。
            </summary>
      <param name="keyName">
                <see langword="String" />。
                 是要从中检索值的键。
                 必需。
              </param>
      <param name="valueName">
                <see langword="String" />。
                 要检索的值。
                 必需。
              </param>
      <param name="defaultValue">
                <see langword="Object" />。
                 如果值不存在提供的默认值。
                 必需。
              </param>
      <returns>
              从注册表项中获取一个值。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  用户没有读取注册表项中所需的权限。
                </exception>
      <exception cref="T:System.IO.IOException">
                  <see cref="T:Microsoft.Win32.RegistryKey" /> ，其中包含指定值已标记为删除。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="keyName" /> 才会开始对有效的注册表的根。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>
              将值写入注册表项。
            </summary>
      <param name="keyName">
                <see langword="String" />。
                 要写入到的密钥的名称。
                 必需。
              </param>
      <param name="valueName">
                <see langword="String" />。
                 要写入的值的名称。
                 必需。
              </param>
      <param name="value">
                <see langword="Object" />。
                 要写入的值。
                 必需。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="keyName" /> 才会开始对有效的注册表的根。
                
                  - 或 -
                
                  <paramref name="valueName" /> 超过最大长度允许 （255 个字符）。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  <see cref="T:Microsoft.Win32.RegistryKey" /> 是只读的因此无法写入到; 例如，它是根级别节点时，或未打开具有写访问权限...
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有创建或修改注册表项所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>
              将值写入注册表项。
            </summary>
      <param name="keyName">
                <see langword="String" />。
                 要写入到的密钥的名称。
                 必需。
              </param>
      <param name="valueName">
                <see langword="String" />。
                 要写入的值的名称。
                 必需。
              </param>
      <param name="value">
                <see langword="Object" />。
                 要写入的值。
                 必需。
              </param>
      <param name="valueKind">
                <see cref="T:Microsoft.Win32.RegistryValueKind" />。
                 必需。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> 为 <see langword="Nothing" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="keyName" /> 才会开始对有效的注册表的根。
                
                  - 或 -
                
                  <paramref name="keyName" /> 超过最大长度允许 （255 个字符）。
                
                  - 或 - 
                
                  一种 <paramref name="value" /> 与由指定的注册表数据类型不匹配 <paramref name="valueKind" />, ，因此不能正确转换该数据。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  <see cref="T:Microsoft.Win32.RegistryKey" /> 是只读的并因此无法写入到; 例如，它是根级别节点时，或未打开具有写访问权限。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  用户没有创建或修改注册表项所需的权限。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </summary>
      <param name="String">
                必需。
                 任何有效<see langword="Char" />或<see langword="String" />表达式。
                 如果<paramref name="String" />是<see langword="String" />表达式，仅字符串的第一个字符用于输入。
                 如果<paramref name="String" />是<see langword="Nothing" />或不包含任何字符，<see cref="T:System.ArgumentException" />发生错误。
              </param>
      <returns>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </summary>
      <param name="String">
                必需。
                 任何有效<see langword="Char" />或<see langword="String" />表达式。
                 如果<paramref name="String" />是<see langword="String" />表达式，仅字符串的第一个字符用于输入。
                 如果<paramref name="String" />是<see langword="Nothing" />或不包含任何字符，<see cref="T:System.ArgumentException" />发生错误。
              </param>
      <returns>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </summary>
      <param name="String">
                必需。
                 任何有效<see langword="Char" />或<see langword="String" />表达式。
                 如果<paramref name="String" />是<see langword="String" />表达式，仅字符串的第一个字符用于输入。
                 如果<paramref name="String" />是<see langword="Nothing" />或不包含任何字符，<see cref="T:System.ArgumentException" />发生错误。
              </param>
      <returns>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </summary>
      <param name="String">
                必需。
                 任何有效<see langword="Char" />或<see langword="String" />表达式。
                 如果<paramref name="String" />是<see langword="String" />表达式，仅字符串的第一个字符用于输入。
                 如果<paramref name="String" />是<see langword="Nothing" />或不包含任何字符，<see cref="T:System.ArgumentException" />发生错误。
              </param>
      <returns>
              返回<see langword="Integer" />值，该值表示为字符相对应的字符代码。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>
              返回与指定的字符代码关联的字符。
            </summary>
      <param name="CharCode">
                必需。
                <see langword="Integer" />表达式表示<paramref name="code point" />，或字符代码的字符。
              </param>
      <returns>
              返回与指定的字符代码关联的字符。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="CharCode" />&lt; 0="" or=""&gt; 255 for <see langword="Chr" />.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>
              返回与指定的字符代码关联的字符。
            </summary>
      <param name="CharCode">
                必需。
                <see langword="Integer" />表达式表示<paramref name="code point" />，或字符代码的字符。
              </param>
      <returns>
              返回与指定的字符代码关联的字符。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="CharCode" />&lt; -32768="" or=""&gt;为 65535 <see langword="ChrW" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回从零开始的数组，包含的一个子集 <see langword="String" /> 数组基于指定筛选条件。
            </summary>
      <param name="Source">
                必需。
                 要搜索的字符串的一维数组。
              </param>
      <param name="Match">
                必需。
                 要搜索的字符串。
              </param>
      <param name="Include">
                可选。
                <see langword="Boolean" /> 值，该值指示是否返回子字符串，用于包含或排除 <paramref name="Match" />。
                 如果 <paramref name="Include" /> 是 <see langword="True" />, 、 <see langword="Filter" /> 函数将返回包含数组的子集 <paramref name="Match" /> 作为子字符串。
                 如果 <paramref name="Include" /> 是 <see langword="False" />, 、 <see langword="Filter" /> 函数将返回不包含数组的子集 <paramref name="Match" /> 作为子字符串。
              </param>
      <param name="Compare">
                可选。
                 数字值，该值指示要使用的字符串比较的类型。
                 值，请参阅"设置"。
              </param>
      <returns>
              返回从零开始的数组，包含的一个子集 <see langword="String" /> 数组基于指定筛选条件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Source" /> 是 <see langword="Nothing" /> 或者不是一个一维数组。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回从零开始的数组，包含的一个子集 <see langword="String" /> 数组基于指定筛选条件。
            </summary>
      <param name="Source">
                必需。
                 要搜索的字符串的一维数组。
              </param>
      <param name="Match">
                必需。
                 要搜索的字符串。
              </param>
      <param name="Include">
                可选。
                <see langword="Boolean" /> 值，该值指示是否返回子字符串，用于包含或排除 <paramref name="Match" />。
                 如果 <paramref name="Include" /> 是 <see langword="True" />, 、 <see langword="Filter" /> 函数将返回包含数组的子集 <paramref name="Match" /> 作为子字符串。
                 如果 <paramref name="Include" /> 是 <see langword="False" />, 、 <see langword="Filter" /> 函数将返回不包含数组的子集 <paramref name="Match" /> 作为子字符串。
              </param>
      <param name="Compare">
                可选。
                 数字值，该值指示要使用的字符串比较的类型。
                 值，请参阅"设置"。
              </param>
      <returns>
              返回从零开始的数组，包含的一个子集 <see langword="String" /> 数组基于指定筛选条件。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Source" /> 是 <see langword="Nothing" /> 或者不是一个一维数组。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>
              返回根据格式中包含的说明设置格式的字符串 <see langword="String" /> 表达式。
            </summary>
      <param name="Expression">
                必需。
                 任何有效表达式。
              </param>
      <param name="Style">
                可选。
                 有效的已命名的或用户定义格式 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回根据格式中包含的说明设置格式的字符串 <see langword="String" /> 表达式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>
              返回格式设置为使用系统控制面板中定义的货币符号的货币值的表达式。
            </summary>
      <param name="Expression">
                必需。
                 要设置格式的表达式。
              </param>
      <param name="NumDigitsAfterDecimal">
                可选。
                 指示小数点右侧显示的位数的数字值。
                 默认值为-1，指示所使用的计算机的区域设置。
              </param>
      <param name="IncludeLeadingDigit">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 枚举，指示显示小数值的前导零。
                 值，请参阅"备注"。
              </param>
      <param name="UseParensForNegativeNumbers">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 枚举，指示将放在括号内的负值。
                 值，请参阅"备注"。
              </param>
      <param name="GroupDigits">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 枚举，指示使用计算机的区域设置中指定的组分隔符对数字进行分组。
                 值，请参阅"备注"。
              </param>
      <returns>
              返回格式设置为使用系统控制面板中定义的货币符号的货币值的表达式。
            </returns>
      <exception cref="T:System.ArgumentException">
                  小数点后的位数大于 99。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  类型不是数值。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>
              返回表示日期/时间值的字符串表达式。
            </summary>
      <param name="Expression">
                必需。
                <see langword="Date" /> 要设置格式的表达式。
              </param>
      <param name="NamedFormat">
                可选。
                 使用数字值，该值指示日期/时间格式。
                 如果省略， <see langword="DateFormat.GeneralDate" /> 使用。
              </param>
      <returns>
              返回表示日期/时间值的字符串表达式。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="NamedFormat" /> 设置不是有效的。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>
              返回格式化为一个数字的表达式。
            </summary>
      <param name="Expression">
                必需。
                 要设置格式的表达式。
              </param>
      <param name="NumDigitsAfterDecimal">
                可选。
                 指示小数点右侧显示的位数的数字值。
                 默认值为-1，指示所使用的计算机的区域设置。
              </param>
      <param name="IncludeLeadingDigit">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 指示是否显示小数值的前导 0 的常量。
                 值，请参阅"设置"。
              </param>
      <param name="UseParensForNegativeNumbers">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否要将放在括号内的负值。
                 值，请参阅"设置"。
              </param>
      <param name="GroupDigits">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示使用的区域设置中指定的组分隔符对数字进行分组。
                 值，请参阅"设置"。
              </param>
      <returns>
              返回格式化为一个数字的表达式。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  类型不是数值。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>
              返回以 % 字符结尾的百分比格式的表达式（即乘以 100）。
            </summary>
      <param name="Expression">
                必需。
                 要格式化的表达式。
              </param>
      <param name="NumDigitsAfterDecimal">
                可选。
                 数字值，该值指示要显示小数点右侧的多少位。
                 默认值为 -1，指示使用了区域设置。
              </param>
      <param name="IncludeLeadingDigit">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否显示小数值前的零。
                 请参阅“设置”，以获取值。
              </param>
      <param name="UseParensForNegativeNumbers">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否在括号内放入负值。
                 请参阅“设置”，以获取值。
              </param>
      <param name="GroupDigits">
                可选。
                <see cref="T:Microsoft.VisualBasic.TriState" /> 常量，指示是否使用区域设置中指定的组分隔符对数字进行分组。
                 请参阅“设置”，以获取值。
              </param>
      <returns>
              返回以 % 字符结尾的百分比格式的表达式（即乘以 100）。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  不是数字类型。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>
              返回 <see langword="Char" /> 表示所提供的字符串中指定索引处的字符的值。
            </summary>
      <param name="str">
                必需。
                 任何有效的 <see langword="String" /> 表达式。
              </param>
      <param name="Index">
                必需。
                <see langword="Integer" /> 表达式。
                 将索引 （从 1 开始） 中字符的 <paramref name="str" /> 要返回。
              </param>
      <returns>
              <see langword="Char" /> 表示所提供的字符串中指定索引处的字符的值。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="str" /> 是 <see langword="Nothing" />, ，<paramref name="Index" /> &lt; 1，或 <paramref name="Index" /> 大于最后一个字符的索引 <paramref name="str" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回一个整数，指定一个字符串在另一个字符串的第一个匹配项的起始位置。
            </summary>
      <param name="Start">
                可选。
                 设置为每个搜索的起始位置的数值表达式。
                 如果省略，则第一个字符位置开始搜索。
                 起始索引是从 1 开始。
              </param>
      <param name="String1">
                必需。
                <see langword="String" /> 要搜索的表达式。
              </param>
      <param name="String2">
                必需。
                <see langword="String" /> 查找的表达式。
              </param>
      <param name="Compare">
                可选。
                 指定的字符串比较的类型。
                 如果 <paramref name="Compare" /> 省略，则 <see langword="Option Compare" /> 设置将确定比较的类型。
              </param>
      <returns>
                      如果
                    
                      InStr 返回
                    
                      <paramref name="String1" /> 长度为零或 <see langword="Nothing" />
                    
                      0
                    
                      <paramref name="String2" /> 长度为零或 <see langword="Nothing" />
                    
                      <paramref name="start" />
                    
                      <paramref name="String2" /> 找不到
                    
                      0
                    
                      <paramref name="String2" /> 在中找到 <paramref name="String1" />
                    
                      匹配的开始位置的位置
                    
                      <paramref name="Start" /> &gt; 的长度 <paramref name="String1" />
                    
                      0
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Start" /> &lt; 1.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回一个整数，指定一个字符串在另一个字符串的第一个匹配项的起始位置。
            </summary>
      <param name="String1">
                必需。
                <see langword="String" /> 要搜索的表达式。
              </param>
      <param name="String2">
                必需。
                <see langword="String" /> 查找的表达式。
              </param>
      <param name="Compare">
                可选。
                 指定的字符串比较的类型。
                 如果 <paramref name="Compare" /> 省略，则 <see langword="Option Compare" /> 设置将确定比较的类型。
              </param>
      <returns>
                      如果
                    
                      InStr 返回
                    
                      <paramref name="String1" /> 长度为零或 <see langword="Nothing" />
                    
                      0
                    
                      <paramref name="String2" /> 长度为零或 <see langword="Nothing" />
                    
                      搜索，默认值为第一个字符位置开始位置。
                    
                      <paramref name="String2" /> 找不到
                    
                      0
                    
                      <paramref name="String2" /> 在中找到 <paramref name="String1" />
                    
                      匹配的开始位置的位置
                    </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回一个字符串在另一个从字符串的右侧开始的第一个匹配项的位置。
            </summary>
      <param name="StringCheck">
                必需。
                 要搜索的字符串表达式。
              </param>
      <param name="StringMatch">
                必需。
                 要搜索的字符串表达式。
              </param>
      <param name="Start">
                可选。
                 数值表达式，设置每次搜索，从该字符串的左侧开始的 1 开始的起始位置。
                 如果 <paramref name="Start" /> 省略则使用 – 1，意味着最后一个字符位置开始执行搜索。
                 从右到左然后继续搜索。
              </param>
      <param name="Compare">
                可选。
                 数字值，该值指示要评估的子字符串时使用的比较类型。
                 如果省略，则执行二进制比较。
                 值，请参阅设置。
              </param>
      <returns>
                      如果
                    
                      InStrRev 返回
                    
                      <paramref name="StringCheck" /> 长度为零
                    
                      0
                    
                      <paramref name="StringMatch" /> 长度为零
                    
                      <paramref name="Start" />
                    
                      <paramref name="StringMatch" /> 找不到
                    
                      0
                    
                      <paramref name="StringMatch" /> 在中找到 <paramref name="StringCheck" />
                    
                      与该字符串的右侧开始找到第一个匹配项的位置。
                    
                      <paramref name="Start" /> 长度大于 <paramref name="StringMatch" />
                    
                      0
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Start" /> = 0 或 <paramref name="Start" /> &lt;-1。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>
              返回通过联接的多个子数组中包含创建的字符串。
            </summary>
      <param name="SourceArray">
                必需。
                 一维数组，包含要联接的子字符串。
              </param>
      <param name="Delimiter">
                可选。
                 任意字符串，用于分隔返回的字符串中子字符串。
                 如果省略，空格字符 ("") 使用。
                 如果<paramref name="Delimiter" />是零长度字符串 ("") 或<see langword="Nothing" />，列表中的所有项都不使用分隔符都连接。
              </param>
      <returns>
              返回通过联接的多个子数组中包含创建的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="SourceArray" />不是一个维度。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>
              返回通过联接的多个子数组中包含创建的字符串。
            </summary>
      <param name="SourceArray">
                必需。
                 一维数组，包含要联接的子字符串。
              </param>
      <param name="Delimiter">
                可选。
                 任意字符串，用于分隔返回的字符串中子字符串。
                 如果省略，空格字符 ("") 使用。
                 如果<paramref name="Delimiter" />是零长度字符串 ("") 或<see langword="Nothing" />，列表中的所有项都不使用分隔符都连接。
              </param>
      <returns>
              返回通过联接的多个子数组中包含创建的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="SourceArray" />不是一个维度。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>
              返回一个字符串或字符转换为小写形式。
            </summary>
      <param name="Value">
                必需。
                 任何有效 <see langword="String" /> 或 <see langword="Char" /> 表达式。
              </param>
      <returns>
              返回一个字符串或字符转换为小写形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>
              返回一个字符串或字符转换为小写形式。
            </summary>
      <param name="Value">
                必需。
                 任何有效 <see langword="String" /> 或 <see langword="Char" /> 表达式。
              </param>
      <returns>
              返回一个字符串或字符转换为小写形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>
              返回包含指定的数量的从字符串的左侧的字符的字符串。
            </summary>
      <param name="str">
                必需。
                <see langword="String" /> 从中返回最左边的字符表达式。
              </param>
      <param name="Length">
                必需。
                <see langword="Integer" /> 表达式。
                 指示要返回多少个字符的数值表达式。
                 如果为 0，一个零长度字符串 ("") 返回。
                 如果大于或等于的中的字符数 <paramref name="str" />, ，则返回整个字符串。
              </param>
      <returns>
              返回包含指定的数量的从字符串的左侧的字符的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Length" /> &lt; 0.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </summary>
      <param name="Expression">
                任何有效 <see langword="String" /> 表达式或变量的名称。
                 如果 <paramref name="Expression" /> 属于类型 <see langword="Object" />, 、 <see langword="Len" /> 函数返回时将写入的文件的大小 <see langword="FilePut" /> 函数。
              </param>
      <returns>
              返回一个包含 string 中的字符数或名义存储变量所需的字节数的整数。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>
              返回左对齐字符串，字符串包含调整为指定长度的指定的字符串。
            </summary>
      <param name="Source">
                必需。
                <see langword="String" /> 表达式。
                 字符串变量的名称。
              </param>
      <param name="Length">
                必需。
                <see langword="Integer" /> 表达式。
                 返回字符串的长度。
              </param>
      <returns>
              返回左对齐字符串，字符串包含调整为指定长度的指定的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>
              返回一个包含一份的指定字符串删除前导空格的字符串 (<see langword="LTrim" />)，则没有尾随空格 (<see langword="RTrim" />)，或没有前导空格或尾随空格 (<see langword="Trim" />)。
            </summary>
      <param name="str">
                必需。
                 任何有效的 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回一个包含一份的指定字符串删除前导空格的字符串 (<see langword="LTrim" />)，则没有尾随空格 (<see langword="RTrim" />)，或没有前导空格或尾随空格 (<see langword="Trim" />)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>
              返回一个字符串，包含从字符串中的指定位置开始的所有字符。
            </summary>
      <param name="str">
                必需。
                <see langword="String" /> 从中返回字符表达式。
              </param>
      <param name="Start">
                必需。
                <see langword="Integer" /> 表达式。
                 要返回的字符的起始位置。
                 如果 <paramref name="Start" /> 个中的字符数大于 <paramref name="str" />, 、 <see langword="Mid" /> 函数将返回一个零长度字符串 ("")。
                <paramref name="Start" /> 是一个基于。
              </param>
      <returns>
              一个从字符串中指定的位置开始的所有字符都组成的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Start" /> &lt; = 0 或 <paramref name="Length" /> &lt; 0。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>
              返回一个字符串，包含指定的数量的从字符串中指定位置开始的字符。
            </summary>
      <param name="str">
                必需。
                <see langword="String" /> 从中返回字符表达式。
              </param>
      <param name="Start">
                必需。
                <see langword="Integer" /> 表达式。
                 要返回的字符的起始位置。
                 如果 <paramref name="Start" /> 个中的字符数大于 <paramref name="str" />, 、 <see langword="Mid" /> 函数将返回一个零长度字符串 ("")。
                <paramref name="Start" /> 从 1 开始。
              </param>
      <param name="Length">
                可选。
                <see langword="Integer" /> 表达式。
                 要返回的字符数。
                 如果省略，或者如果有数不能超过 <paramref name="Length" /> 文本中的字符 (包括位置处的字符 <paramref name="Start" />)，则返回从 start 位置到字符串的末尾的所有字符。
              </param>
      <returns>
              一个字符串，其中包含指定数量的字符从字符串中的指定位置开始。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Start" /> &lt; = 0 或 <paramref name="Length" /> &lt; 0。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回一个字符串，其中指定的子字符串已替换为另一个子字符串指定的次数。
            </summary>
      <param name="Expression">
                必需。
                 字符串表达式，包含要替换子字符串。
              </param>
      <param name="Find">
                必需。
                 要搜索的子字符串。
              </param>
      <param name="Replacement">
                必需。
                 替换的子字符串。
              </param>
      <param name="Start">
                可选。
                 内的位置 <paramref name="Expression" /> 启动用于替换的子字符串。
                 返回值 <see langword="Replace" /> 是一个字符串，开始 <paramref name="Start" />, ，具有相应的子。
                 如果省略，则假定为 1。
              </param>
      <param name="Count">
                可选。
                 要执行的子字符串替换操作的数量。
                 如果省略，默认值为 1，这意味着"使所有可能的替换"。
              </param>
      <param name="Compare">
                可选。
                 数字值，该值指示要评估的子字符串时使用的比较类型。
                 值，请参阅设置。
              </param>
      <returns>
              <see langword="Replace" /> 返回下列值。
            
                      如果
                    
                      Replace 返回
                    
                      <paramref name="Find" /> 长度为零或 <see langword="Nothing" />
                    
                      副本 <paramref name="Expression" />
                    
                      <paramref name="Replace" /> 长度为零
                    
                      要将复制 <paramref name="Expression" /> 与未出现 <paramref name="Find" />
                    
                      <paramref name="Expression" /> 长度为零或 <see langword="Nothing" />, ，或 <paramref name="Start" /> 大于的长度 <paramref name="Expression" />
                    
                      <see langword="Nothing" />
                    
                      <paramref name="Count" /> 为 0
                    
                      副本 <paramref name="Expression" />
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Count" /> &lt;-1 或 <paramref name="Start" /> &lt; = 0。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>
              返回包含指定的数量的从右侧的字符串的字符的字符串。
            </summary>
      <param name="str">
                必需。
                <see langword="String" /> 从中返回最右边的字符表达式。
              </param>
      <param name="Length">
                必需。
                <see langword="Integer" />。
                 指示要返回多少个字符的数值表达式。
                 如果为 0，一个零长度字符串 ("") 返回。
                 如果大于或等于的中的字符数 <paramref name="str" />, ，则返回整个字符串。
              </param>
      <returns>
              返回包含指定的数量的从右侧的字符串的字符的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Length" /> &lt; 0.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>
              返回右对齐字符串，字符串包含调整为指定长度的指定的字符串。
            </summary>
      <param name="Source">
                必需。
                <see langword="String" /> 表达式。
                 字符串变量的名称。
              </param>
      <param name="Length">
                必需。
                <see langword="Integer" /> 表达式。
                 返回字符串的长度。
              </param>
      <returns>
              返回右对齐字符串，字符串包含调整为指定长度的指定的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>
              返回一个包含一份的指定字符串删除前导空格的字符串 (<see langword="LTrim" />)，则没有尾随空格 (<see langword="RTrim" />)，或没有前导空格或尾随空格 (<see langword="Trim" />)。
            </summary>
      <param name="str">
                必需。
                 任何有效的 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回一个包含一份的指定字符串删除前导空格的字符串 (<see langword="LTrim" />)，则没有尾随空格 (<see langword="RTrim" />)，或没有前导空格或尾随空格 (<see langword="Trim" />)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>
              返回指定数量的空格组成的字符串。
            </summary>
      <param name="Number">
                必需。
                <see langword="Integer" /> 表达式。
                 要在字符串中的空格数。
              </param>
      <returns>
              返回指定数量的空格组成的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> &lt; 0.
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回包含指定的数量的子字符串的从零开始的一维数组。
            </summary>
      <param name="Expression">
                必需。
                <see langword="String" /> 表达式，包含子字符串和分隔符。
              </param>
      <param name="Delimiter">
                可选。
                 任何单个字符用于标识子字符串的界限。
                 如果 <paramref name="Delimiter" /> 省略，则空格字符 ("") 被假定为分隔符。
              </param>
      <param name="Limit">
                可选。
                 应在其中拆分输入的字符串的子字符串的最大数量。
                 默认值为-1，指示在每个出现的输入的字符串都拆分 <paramref name="Delimiter" /> 字符串。
              </param>
      <param name="Compare">
                可选。
                 数字值，该值指示要在评估时使用的比较的子字符串。
                 值，请参阅"设置"。
              </param>
      <returns>
              <see langword="String" /> 数组。
               如果 <paramref name="Expression" /> 是零长度字符串 ("")， <see langword="Split" /> 返回包含零长度字符串的单元素数组。
               如果 <paramref name="Delimiter" /> 是零长度字符串，或者如果它不会不显示任何位置中 <paramref name="Expression" />, ，<see langword="Split" /> 返回包含整个的单元素数组 <paramref name="Expression" /> 字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>
              返回-1、 0 或 1，基于字符串比较的结果。
            </summary>
      <param name="String1">
                必需。
                 任何有效的 <see langword="String" /> 表达式。
              </param>
      <param name="String2">
                必需。
                 任何有效的 <see langword="String" /> 表达式。
              </param>
      <param name="Compare">
                可选。
                 指定的字符串比较的类型。
                 如果 <paramref name="Compare" /> 省略，则 <see langword="Option Compare" /> 设置将确定比较的类型。
              </param>
      <returns>
              <see langword="StrComp" /> 函数具有下列返回值。
            
                      如果
                    
                      StrComp 返回
                    
                      <paramref name="String1" /> 提前进行排序 <paramref name="String2" />
                    
                      -1
                    
                      <paramref name="String1" /> 等于 <paramref name="String2" />
                    
                       0
                    
                      <paramref name="String1" /> 之后进行排序 <paramref name="String2" />
                    
                       1
                    </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Compare" /> 值无效。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>
              返回根据指定进行转换的字符串。
            </summary>
      <param name="str">
                必需。
                <see langword="String" /> 要转换的表达式。
              </param>
      <param name="Conversion">
                必需。
                <see cref="T:Microsoft.VisualBasic.VbStrConv" /> 成员。
                 枚举值，该值指定执行转换的类型。
              </param>
      <param name="LocaleID">
                可选。
                <see langword="LocaleID" /> 值，如果不同于系统 <see langword="LocaleID" /> 值。
                 (系统 <see langword="LocaleID" /> 该值是默认值。)
              </param>
      <returns>
              返回根据指定进行转换的字符串。
            </returns>
      <exception cref="T:System.ArgumentException">
                  不支持 <paramref name="LocaleID" />, ，<paramref name="Conversion" /> &lt; 0 或 &gt; 2048，或不受支持的指定区域设置的转换。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>
              返回字符串或对象包含的指定字符重复指定的次数。
            </summary>
      <param name="Number">
                必需。
                <see langword="Integer" /> 表达式。
                 要返回的字符串长度。
              </param>
      <param name="Character">
                必需。
                 任何有效 <see langword="Char" />, ，<see langword="String" />, ，或 <see langword="Object" /> 表达式。
                 将使用仅该表达式的第一个字符。
                 如果字符是类型的 <see langword="Object" />, ，它必须包含 <see langword="Char" /> 或 <see langword="String " />值。
              </param>
      <returns>
              返回字符串或对象包含的指定字符重复指定的次数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 小于 0 或 <paramref name="Character" /> 类型无效。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Character" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>
              返回字符串或对象包含的指定字符重复指定的次数。
            </summary>
      <param name="Number">
                必需。
                <see langword="Integer" /> 表达式。
                 要返回的字符串长度。
              </param>
      <param name="Character">
                必需。
                 任何有效 <see langword="Char" />, ，<see langword="String" />, ，或 <see langword="Object" /> 表达式。
                 将使用仅该表达式的第一个字符。
                 如果字符是类型的 <see langword="Object" />, ，它必须包含 <see langword="Char" /> 或 <see langword="String " />值。
              </param>
      <returns>
              返回字符串或对象包含的指定字符重复指定的次数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 小于 0 或 <paramref name="Character" /> 类型无效。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Character" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>
              返回字符串或对象包含的指定字符重复指定的次数。
            </summary>
      <param name="Number">
                必需。
                <see langword="Integer" /> 表达式。
                 要返回的字符串长度。
              </param>
      <param name="Character">
                必需。
                 任何有效 <see langword="Char" />, ，<see langword="String" />, ，或 <see langword="Object" /> 表达式。
                 将使用仅该表达式的第一个字符。
                 如果字符是类型的 <see langword="Object" />, ，它必须包含 <see langword="Char" /> 或 <see langword="String " />值。
              </param>
      <returns>
              返回字符串或对象包含的指定字符重复指定的次数。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 小于 0 或 <paramref name="Character" /> 类型无效。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="Character" /> 为 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>
              返回指定字符串的字符顺序相反的字符串。
            </summary>
      <param name="Expression">
                必需。
                 字符串的表达式，其字符顺序反转。
                 如果 <paramref name="Expression" /> 是零长度字符串 ("")，则返回长度为零的字符串。
              </param>
      <returns>
              返回指定字符串的字符顺序相反的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>
              返回一个包含一份的指定字符串删除前导空格的字符串 (<see langword="LTrim" />)，则没有尾随空格 (<see langword="RTrim" />)，或没有前导空格或尾随空格 (<see langword="Trim" />)。
            </summary>
      <param name="str">
                必需。
                 任何有效的 <see langword="String" /> 表达式。
              </param>
      <returns>
              返回一个包含一份的指定字符串删除前导空格的字符串 (<see langword="LTrim" />)，则没有尾随空格 (<see langword="RTrim" />)，或没有前导空格或尾随空格 (<see langword="Trim" />)。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>
              返回字符串或字符，其中包含指定的字符串转换为大写形式。
            </summary>
      <param name="Value">
                必需。
                 任何有效 <see langword="String" /> 或 <see langword="Char" /> 表达式。
              </param>
      <returns>
              返回字符串或字符，其中包含指定的字符串转换为大写形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>
              返回字符串或字符，其中包含指定的字符串转换为大写形式。
            </summary>
      <param name="Value">
                必需。
                 任何有效 <see langword="String" /> 或 <see langword="Char" /> 表达式。
              </param>
      <returns>
              返回字符串或字符，其中包含指定的字符串转换为大写形式。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>
              值初始化 <see langword="Bounds" /> 属性。
            </summary>
      <param name="UpperBound1">
                初始化上限字段，它表示该数组的第一个维度大小的值。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
              值初始化 <see langword="Bounds" /> 属性。
            </summary>
      <param name="UpperBound1">
                初始化上限字段，它表示该数组的第一个维度大小的值。
              </param>
      <param name="UpperBound2">
                初始化上限字段，表示大小的数组的第二个维度的值。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>
              值初始化 <see langword="SizeConst" /> 字段。
            </summary>
      <param name="Length">
                固定字符串的长度。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>
              初始化随机数字生成器。
            </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>
              初始化随机数字生成器。
            </summary>
      <param name="Number">
                可选。
                <see langword="Object" /> 或任何有效的数值表达式。
              </param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>
              返回类型的随机数字 <see langword="Single" />。
            </summary>
      <returns>
              序列中下一步的随机数字。
            </returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>
              返回类型的随机数字 <see langword="Single" />。
            </summary>
      <param name="Number">
                可选。
                 一个 <see langword="Single" /> 值或任何有效 <see langword="Single" /> 表达式。
              </param>
      <returns>
              如果数量小于零，Rnd 将生成相同数字每当使用 <paramref name="Number" /> 作为种子。
               如果数字为大于零，Rnd 序列中生成下一个随机数字。
               如果数等于零，Rnd 将生成的最近生成的数字。
               如果未提供数量，Rnd 生成下一个随机数字序列中。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>
              获取当前线程使用的字符串操作函数和字符串格式设置的区域性。
            </summary>
      <returns>
              A<see cref="T:System.Globalization.CultureInfo" />表示当前线程的区域性的对象将用于字符串操作函数和字符串格式设置。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>
              获取提供用于获取有关应用程序的程序集，例如版本号、 说明等信息的属性的对象。
            </summary>
      <returns>
              <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 当前应用程序的对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>
              获取为事件和异常信息写入应用程序的日志侦听器提供属性和方法的对象。
            </summary>
      <returns>
              <see cref="T:Microsoft.VisualBasic.Logging.Log" /> 当前应用程序的对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>
              获取当前线程用于检索特定于区域性的资源的区域性。
            </summary>
      <returns>
              一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，表示当前线程用于检索特定于区域性的资源的区域性。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>
              获取不带扩展名的应用程序的程序集文件的名称。
            </summary>
      <returns>
              A<see langword="String" />包含文件名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>
              获取与该应用程序关联的公司名称。
            </summary>
      <returns>
              A <see langword="String" /> ，其中包含与应用程序关联的公司名称。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  程序集没有<see cref="T:System.Reflection.AssemblyCompanyAttribute" />属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>
              获取与应用程序关联的版权声明。
            </summary>
      <returns>
              A<see langword="String" />包含与应用程序关联的版权声明。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  程序集没有<see cref="T:System.Reflection.AssemblyCopyrightAttribute" />属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>
              获取与该应用程序相关联的说明。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含与应用程序相关联的说明。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  程序集没有 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>
              获取存储应用程序的目录。
            </summary>
      <returns>
              一个 <see langword="String" /> ，其中包含存储应用程序的目录。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>
              获取应用程序加载的所有程序集的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Reflection.Assembly" /> 包含的所有程序集加载的应用程序。
            </returns>
      <exception cref="T:System.AppDomainUnloadedException">
                  未加载的应用程序域。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>
              获取与该应用程序关联的产品名称。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含产品名称与应用程序关联。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  程序集没有 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>
              获取当前的堆栈跟踪信息。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含当前的堆栈跟踪信息。
               返回值可能为 <see cref="F:System.String.Empty" />。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  请求的堆栈跟踪信息超出了范围。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>
              获取与该应用程序关联的标题。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 与应用程序相关联。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  程序集没有 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>
              获取与该应用程序关联的商标声明。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含商标声明与应用程序关联。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  程序集没有 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>
              获取应用程序的版本号。
            </summary>
      <returns>
              一个 <see cref="T:System.Version" /> 包含应用程序的版本号的对象。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  应用程序没有足够权限来访问程序集版本。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>
              获取映射到进程上下文的物理内存量。
            </summary>
      <returns>
              一个 <see langword="Long" /> 包含映射到进程上下文的物理内存的字节数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  情况存在部分信任和该用户缺少必要的权限。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>
              获取当前应用程序的字符串的形式包含命令行自变量的集合。
            </summary>
      <returns>
              A<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />的<see langword="String" />，为当前应用程序的字符串中包含的命令行自变量。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment">
      <summary>
              获取当前应用程序的 ClickOnce 部署对象，它为以编程方式更新当前的部署和支持按需下载的文件提供支持。
            </summary>
      <returns>
              返回 <see cref="T:System.Deployment.Application.ApplicationDeployment" /> 为应用程序的 ClickOnce 部署的对象。
            </returns>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">
                  作为 ClickOnce 应用程序未部署应用程序。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>
              设置要用作当前应用程序的命令行参数的值。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see langword="String" />, ，包含要用作当前应用程序的命令行参数的字符串。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.IsNetworkDeployed">
      <summary>
              获取 <see langword="Boolean" /> ，表示是否从网络使用 ClickOnce 部署应用程序。
            </summary>
      <returns>
              一个 <see langword="Boolean" /> ，表示是否从网络部署应用程序。
               值是 <see langword="True" /> 当前应用程序已部署从网络; 否则其值是否 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>
              获取应用程序的命令行参数。
            </summary>
      <returns>
              A<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />包含应用程序的命令行自变量的对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>
              指示第一个应用程序实例是否应转到在退出异常处理程序时的前景。
            </summary>
      <returns>
              A <see cref="T:System.Boolean" /> ，该值指示第一个应用程序实例是否应转到在退出异常处理程序时的前景。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>
              获取后续应用程序实例的命令行参数。
            </summary>
      <returns>
              A<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />包含后续应用程序实例的命令行自变量的对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>
              指示是否应用程序应在退出时的异常处理程序。
            </summary>
      <returns>
              一个 <see cref="T:System.Boolean" /> ，指示是否应用程序应在退出时的异常处理程序。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>
              获取或设置当前负责人 （对基于角色的安全性）。
            </summary>
      <returns>
              A<see cref="T:System.Security.Principal.IPrincipal" />表示安全上下文的值。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有设置该主体所需的权限。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>
              获取或设置表示当前用户的主体对象。
            </summary>
      <returns>
              <see cref="T:System.Security.Principal.IPrincipal" /> 对象，表示当前用户。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>
              获取一个值，该值指示是否已验证用户。
            </summary>
      <returns>
              如果用户已经过验证，则为 <see langword="True" />；否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>
              获取当前用户的名称。
            </summary>
      <returns>
              <see langword="String" />。
               当前用户的名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal">
      <summary>
              获取或设置表示当前用户的主体对象。
            </summary>
      <returns>
              <see cref="T:System.Security.Principal.IPrincipal" /> 对象，表示当前用户。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>
              获取<see cref="T:System.Windows.Forms.ApplicationContext" />当前线程的 Windows 窗体应用程序的对象。
            </summary>
      <returns>
              此属性返回<see cref="T:System.Windows.Forms.ApplicationContext" />当前线程的对象。
               该对象包含有关线程的上下文信息。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>
              确定此应用程序将使用 Windows XP 样式的 windows、 控件和等等。
            </summary>
      <returns>
              一个 <see cref="T:System.Boolean" /> 值，该值指示是否此应用程序将使用 XP Windows 样式窗口、 控件和等等。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>
              确定此应用程序是否为单实例应用程序。
            </summary>
      <returns>
              一个 <see cref="T:System.Boolean" /> 值，该值指示此应用程序是否为单实例应用程序。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>
              获取或设置此应用程序的主窗体。
            </summary>
      <returns>
              获取或设置此应用程序的主窗体。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>
              确定时间 （毫秒），为其显示初始屏幕的最小长度。
            </summary>
      <returns>
              <see langword="Integer" />。
               时间 （毫秒），为其显示初始屏幕的最小长度。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>
              获取应用程序的所有打开窗体的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Windows.Forms.FormCollection" /> 对象，其中包含所有应用程序的打开的窗体。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>
              确定是否在应用程序在退出时保存用户设置。
            </summary>
      <returns>
              <see langword="Boolean" />。
              <see langword="True" /> 指示应用程序在退出时保存用户设置。
               否则，这些设置不隐式保存。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>
              确定应用程序的主窗体关闭时，会发生什么情况。
            </summary>
      <returns>
              一个 <see cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" /> 指示应用程序主窗体关闭时应执行的操作的枚举值。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>
              获取或设置此应用程序的初始屏幕。
            </summary>
      <returns>
              一个 <see cref="T:System.Windows.Forms.Form" /> 应用程序使用的初始屏幕的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  相同的值分配给此属性与 <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />  属性。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>
              当在派生类中重写此属性允许设计器中来指定应用程序的窗体的默认文本呈现引擎。
            </summary>
      <returns>
              <see langword="Boolean" />。
               值为 <see langword="False" /> 指示应用程序应使用的默认文本呈现引擎 Visual Basic 2005。
               值为 <see langword="True" /> 指示应用程序应当使用为 Visual Basic.NET 2002年和 Visual Basic.NET 2003 中的文本呈现引擎。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>
              返回<see langword="Integer" />包含集合中的元素数。
               只读。
            </summary>
      <returns>
              返回<see langword="Integer" />包含集合中的元素数。
               只读。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>
              返回的特定元素 <see langword="Collection" /> 按位置或键的对象。
               只读。
            </summary>
      <param name="Index">
                （指定集合的元素的位置 A） 的数值表达式。
                <paramref name="Index" /> 必须为介于 1 到值的集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性。
                 或者 (B) <see langword="Object" /> 指定集合的一个元素的位置或键字符串的表达式。
              </param>
      <returns>
              返回的特定元素 <see langword="Collection" /> 按位置或键的对象。
               只读。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>
              返回的特定元素 <see langword="Collection" /> 按位置或键的对象。
               只读。
            </summary>
      <param name="Index">
                （指定集合的元素的位置 A） 的数值表达式。
                <paramref name="Index" /> 必须为介于 1 到值的集合的 <see cref="P:Microsoft.VisualBasic.Collection.Count" /> 属性。
                 或者 (B) <see langword="Object" /> 指定集合的一个元素的位置或键字符串的表达式。
              </param>
      <returns>
              返回的特定元素 <see langword="Collection" /> 按位置或键的对象。
               只读。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>
              返回的特定元素 <see langword="Collection" /> 按位置或键的对象。
               只读。
            </summary>
      <param name="Key">
                一个唯一 <see langword="String" /> 指定可用，而不是位置索引访问集合的元素的键的字符串表达式。
                <paramref name="Key" /> 必须对应于 <paramref name="Key" /> 元素添加到集合时指定的参数。
              </param>
      <returns>
              返回的特定元素 <see langword="Collection" /> 按位置或键的对象。
               只读。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#Count">
      <summary>
              获取此集合中的项数。
               实现 <see cref="T:System.Collections.ICollection" /> 接口。
            </summary>
      <returns>
              此集合中项的数目。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#IsSynchronized">
      <summary>
              获取一个值，该值指示对 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象的访问是否同步（线程安全）。
               实现 <see cref="T:System.Collections.ICollection" /> 接口。
            </summary>
      <returns>
              返回 <see langword="True" /> 如果访问 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象已同步 （线程安全）; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#SyncRoot">
      <summary>
              获取一个对象，该对象可用于同步对 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象的访问。
               实现 <see cref="T:System.Collections.ICollection" /> 接口。
            </summary>
      <returns>
              一个对象，该对象可用于同步对 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象的访问。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsFixedSize">
      <summary>
              获取一个值，该值指示是否 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象具有固定的大小。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <returns>
              返回 <see langword="True" /> 如果 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象具有固定大小; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsReadOnly">
      <summary>
              获取一个值，该值指示是否 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的。
               实现 <see cref="T:System.Collections.IList" /> 接口。
            </summary>
      <returns>
              返回 <see langword="True" /> 如果 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的; 否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#Item(System.Int32)">
      <summary>
              获取或设置指定索引处的元素。
               实现 <see cref="T:System.Collections.IList" /> 接口
            </summary>
      <param name="index">
                要获取或设置的元素的从零开始的索引。
              </param>
      <returns>
              指定索引处的元素。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 不是中的有效索引 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  此属性设置与 <see cref="T:Microsoft.VisualBasic.Collection" /> 对象是只读的。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>
              获取 ID 用于唯一标识类的类。
            </summary>
      <returns>
              只读。
               一个字符串，编译器可以用于唯一标识时创建 COM 对象的类。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>
              获取 ID 用于唯一标识事件的事件。
            </summary>
      <returns>
              只读属性。
               一个字符串，它可以由编译器使用以唯一标识类的事件时创建 COM 对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>
              获取 ID 用于唯一标识接口的接口。
            </summary>
      <returns>
              只读。
               编译器可以用于创建 COM 对象时唯一标识类的接口的一个字符串。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>
              指示 COM 接口名称隐藏类或基类的另一个成员。
            </summary>
      <returns>
              一个 <see langword="Boolean" /> 值，该值指示 COM 接口名称隐藏的类或基类的另一个成员。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>
              获取当前的 Visual Basic 主机对象。
            </summary>
      <returns>
              一个 <see cref="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost" /> 返回对引用和当前的 Visual Basic 主机窗口有关的信息的对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <summary>
              获取或设置 XML 属性的值。
               此属性不被应在代码中使用。
            </summary>
      <param name="source">
                若要获取属性的 XML 元素的集合中的值或设置的属性值。
              </param>
      <param name="name">
                要获取的值或设置的值的 XML 属性名称。
              </param>
      <returns>
              由标识 XML 属性的值<paramref name="name" />从提供的 XML 元素集合中的第一个元素的参数。
               如果该集合为空，返回<see langword="Nothing" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.AttributeValue(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
      <summary>
              获取或设置 XML 属性的值。
               此属性不被应在代码中使用。
            </summary>
      <param name="source">
                获取属性的 XML 元素中的值，或设置的属性值。
              </param>
      <param name="name">
                要获取的值或设置的值的 XML 属性名称。
              </param>
      <returns>
              由标识 XML 属性的值<paramref name="name" />提供的 XML 元素中的参数。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper.Value(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <summary>
              获取或设置一个 XML 元素的值。
               此属性不应在代码中使用。
            </summary>
      <param name="source">
                若要获取的值或设置的值的 XML 元素的集合。
              </param>
      <returns>
              提供的集合中的第一个 XML 元素的值。
               如果该集合为空，将返回 <see langword="Nothing" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>
              返回或设置 <see langword="String" /> 值，该值表示根据您的系统当前日期。
            </summary>
      <returns>
              返回或设置 <see langword="String" /> 值，该值表示根据您的系统当前日期。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  用来设置的值的格式无效 <see langword="DateString" />。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>
              返回 <see langword="Date" /> 值，该值包含当前日期和时间根据您的系统。
            </summary>
      <returns>
              返回 <see langword="Date" /> 值，该值包含当前日期和时间根据您的系统。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>
              返回或设置 <see langword="Date" /> 值，该值包含当前时间的根据您的系统。
            </summary>
      <returns>
              返回或设置 <see langword="Date" /> 值，该值包含当前时间的根据您的系统。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>
              返回 <see langword="Double" /> 自午夜以来经过的值，该值表示的秒数。
            </summary>
      <returns>
              返回 <see langword="Double" /> 自午夜以来经过的值，该值表示的秒数。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>
              返回或设置 <see langword="String" /> 值，该值表示当前时间的根据您的系统。
            </summary>
      <returns>
              返回或设置 <see langword="String" /> 值，该值表示当前时间的根据您的系统。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  用来设置的值的格式无效 <see langword="TimeString" />。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>
              返回或设置 <see langword="Date" /> 值，该值包含根据您的系统当前日期。
            </summary>
      <returns>
              返回或设置 <see langword="Date" /> 值，该值包含根据您的系统当前日期。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>
              获取 <see langword="Date" /> 对象，其中包含当前日期和时间的计算机上，表示为 UTC (GMT) 时间。
            </summary>
      <returns>
              一个 <see langword="Date" /> 对象，其中包含当前日期和时间表示为 UTC (GMT) 时间。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>
              获取 <see langword="Date" /> 对象，其中包含当前日期和时间在此计算机上的。
            </summary>
      <returns>
              一个 <see langword="Date" /> 对象，其中包含当前日期和时间。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>
              从计算机的系统计时器获取毫秒为单位计数。
            </summary>
      <returns>
              <see langword="Integer" /> 包含来自计算机的系统计时器的毫秒数。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>
              获取提供用于播放声音的方法的属性的对象。
            </summary>
      <returns>
              <see langword="My.Computer.Audio" />计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>
              获取一个对象，提供用于操作剪贴板的方法。
            </summary>
      <returns>
              <see langword="My.Computer.Clipboard" />计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>
              获取提供用于访问键盘，如密钥当前按下和提供的方法可将击键发送到活动窗口中的当前状态的属性的对象。
            </summary>
      <returns>
              <see langword="My.Computer.Keyboard" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>
              获取提供用于获取有关的格式和本地计算机上安装的鼠标的配置信息的属性的对象。
            </summary>
      <returns>
              <see langword="My.Computer.Mouse" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Ports">
      <summary>
              获取提供的属性和方法来访问计算机的串行端口的对象。
            </summary>
      <returns>
              <see langword="My.Computer.Ports" /> 对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>
              获取 <see cref="T:System.Windows.Forms.Screen" /> 对象，表示计算机的主显示器屏幕。
            </summary>
      <returns>
              一个 <see cref="T:System.Windows.Forms.Screen" /> 对象，表示计算机的主屏幕。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>
              获取计算机的可用物理内存总量。
            </summary>
      <returns>
              A<see langword="ULong" />包含的计算机的可用物理内存字节数。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  应用程序无法获取内存状态。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>
              获取计算机的可用的虚拟地址空间的总量。
            </summary>
      <returns>
              A<see langword="ULong" />包含计算机的可用的虚拟地址空间的字节数。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  应用程序无法获取内存状态。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>
              获取与操作系统一起安装的当前 UI 区域性。
            </summary>
      <returns>
              一个 <see cref="T:System.Globalization.CultureInfo" /> 对象都表示计算机上安装的用户界面区域性。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>
              获取完整的操作系统名称。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含操作系统的名称。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用代码没有完全信任。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>
              获取操作系统的计算机的平台标识符。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含操作系统的计算机的平台标识符，从的成员名称选择 <see cref="T:System.PlatformID" /> 枚举。
            </returns>
      <exception cref="T:System.ExecutionEngineException">
                  应用程序无法获得操作系统平台信息。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>
              获取计算机的操作系统的版本。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含操作系统的当前版本号。
            </returns>
      <exception cref="T:System.ExecutionEngineException">
                  应用程序无法获得操作系统版本信息。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>
              获取计算机的物理内存总量。
            </summary>
      <returns>
              一个 <see langword="ULong" /> 包含的计算机的物理内存的字节数。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  应用程序无法获取内存状态。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>
              获取计算机的可用虚拟地址空间总量。
            </summary>
      <returns>
              一个 <see langword="ULong" /> 包含可用于计算机的虚拟地址空间的字节数。
            </returns>
      <exception cref="T:System.ComponentModel.Win32Exception">
                  应用程序无法获取内存状态。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>
              获取<see langword="Boolean" />，该值指示是否按下 ALT 键。
            </summary>
      <returns>
              A<see langword="Boolean" />值︰ <see langword="True" /> ALT 键，则向下; 否则为如果<see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>
              获取<see langword="Boolean" />，该值指示是否 CAPS LOCK 打开。
            </summary>
      <returns>
              A<see langword="Boolean" />值︰<see langword="True" />如果 CAPS LOCK 打开; 否则为<see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>
              获取<see langword="Boolean" />，该值指示是否按下 CTRL 键。
            </summary>
      <returns>
              一个 <see langword="Boolean" /> 值。
              <see langword="True" />如果 CTRL 键关闭;否则为<see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>
              获取 <see langword="Boolean" /> ，该值指示 NUM LOCK 键是否上。
            </summary>
      <returns>
              一个 <see langword="Boolean" /> 值。
              <see langword="True" /> 如果 NUM LOCK，则为否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>
              获取 <see langword="Boolean" /> 指示是否处于打开状态的 SCROLL LOCK 键。
            </summary>
      <returns>
              一个 <see langword="Boolean" /> 值。
              <see langword="True" /> 如果 SCROLL LOCK，则为否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>
              获取 <see langword="Boolean" /> ，该值指示是否按下 SHIFT 键。
            </summary>
      <returns>
              一个 <see langword="Boolean" /> 值。
              <see langword="True" /> 如果 SHIFT 键关闭;否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>
              获取<see langword="Boolean" />，该值指示是否已交换了鼠标左右按钮的功能。
            </summary>
      <returns>
              A<see langword="Boolean" />值<see langword="True" />如果鼠标左右按钮的功能已交换; 否则为<see langword="False" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  计算机具有未安装鼠标。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>
              获取 <see langword="Boolean" /> ，该值指示鼠标是否具有滚动滚轮。
            </summary>
      <returns>
              一个布尔值 <see langword="True" /> 如果鼠标有滚轮; 否则为 <see langword="False" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  计算机具有未安装鼠标。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>
              获取指示滚动鼠标滚轮时旋转量凹一个数字。
            </summary>
      <returns>
              <see langword="Integer" /> ，该值指示滚动鼠标滚轮时量旋转一个单位。
               正值指示值为负，则表示一次滚动一个屏幕滚动的行，该数。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  计算机具有未安装鼠标。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  鼠标有没有鼠标滚轮。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>
              指示计算机是否连接到网络。
            </summary>
      <returns>
              <see langword="True" /> 如果计算机连接到网络;否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>
              获取一个值，该值指示网络是否可用于应用程序。
            </summary>
      <returns>
              一个 <see cref="T:System.Boolean" /> ，该值指示是否可用于应用程序网络。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames">
      <summary>
              获取在计算机上的串行端口的名称的集合。
            </summary>
      <returns>
              在计算机上的串行端口的名称的集合。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>
              从系统时钟获取提供用于访问当前本地时间和协调世界时 （相当于格林威治标准时间） 属性的对象。
            </summary>
      <returns>
              <see langword="My.Computer.Clock" />计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>
              获取一个对象，提供属性和方法用于处理驱动器、 文件和目录。
            </summary>
      <returns>
              <see langword="My.Computer.FileSystem" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>
              获取提供用于获取有关计算机的内存、 加载的程序集、 名称和操作系统的信息的属性的对象。
            </summary>
      <returns>
              <see langword="My.Computer.Info" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>
              获取计算机名称。
            </summary>
      <returns>
              一个 <see langword="String" /> 包含的计算机的名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>
              获取一个对象，与计算机连接到网络中提供的属性和方法进行交互。
            </summary>
      <returns>
              <see langword="My.Computer.Network" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>
              获取一个对象，提供用于操作注册表属性和方法。
            </summary>
      <returns>
              <see langword="My.Computer.Registry" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>
              返回或设置 <see langword="String" /> 表达式，包含与错误关联的描述性字符串。
               读/写。
            </summary>
      <returns>
              返回或设置 <see langword="String" /> 表达式，包含与错误关联的描述性字符串。
               读/写。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>
              返回一个整数，指示上次执行的语句的行号。
               只读。
            </summary>
      <returns>
              返回一个整数，指示上次执行的语句的行号。
               只读。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
      <summary>
              返回或设置<see langword="Integer" />包含帮助文件中的主题的上下文 ID。
               读/写。
            </summary>
      <returns>
              返回或设置<see langword="Integer" />包含帮助文件中的主题的上下文 ID。
               读/写。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
      <summary>
              返回或设置<see langword="String" />表达式包含的帮助文件的完全限定的路径。
               读/写。
            </summary>
      <returns>
              返回或设置<see langword="String" />表达式包含的帮助文件的完全限定的路径。
               读/写。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>
              返回通过动态链接库 (DLL) 调用生成的系统错误代码。
               只读。
            </summary>
      <returns>
              返回通过动态链接库 (DLL) 调用生成的系统错误代码。
               只读。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>
              返回或设置指定错误的数字值。
               读/写。
            </summary>
      <returns>
              返回或设置指定错误的数字值。
               读/写。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="Number" /> 将大于 65535。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Source">
      <summary>
              返回或设置 <see langword="String" /> 表达式，指定的对象或最初生成错误的应用程序的名称。
               读/写。
            </summary>
      <returns>
              返回或设置 <see langword="String" /> 表达式，指定的对象或最初生成错误的应用程序的名称。
               读/写。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>
              获取或设置当前目录。
            </summary>
      <returns>
              文件 I/O 操作在当前目录。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  路径不是有效的。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>
              返回的所有可用的驱动器名称的只读集合。
            </summary>
      <returns>
              所有可用的驱动器作为只读集合 <see cref="T:System.IO.DriveInfo" /> 对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>
              获取格式不正确的行的行号。
            </summary>
      <returns>
              格式不正确的行的行号。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>
              获取指向的所有用户的应用程序数据目录的路径名称。
            </summary>
      <returns>
              所有用户应用程序数据目录的路径。
            </returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">
                  控件访问系统和用户环境变量。
                   关联的枚举︰ <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。
                </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  通常由于操作系统不支持目录路径为空。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>
              获取指向当前用户的应用程序数据目录的路径名称。
            </summary>
      <returns>
              当前用户的应用程序数据目录路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  通常由于操作系统不支持目录路径为空。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>
              获取指向桌面目录的路径名称。
            </summary>
      <returns>
              指向桌面目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>
              获取指向我的文档目录的路径名称。
            </summary>
      <returns>
              我的文档目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>
              获取指向我的音乐目录的路径名称。
            </summary>
      <returns>
              我的音乐目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>
              获取指向 My Pictures 目录的路径名称。
            </summary>
      <returns>
              My Pictures 目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>
              获取指向的路径 Program Files 目录。
            </summary>
      <returns>
              通往 Program Files 目录。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>
              获取指向程序目录的路径名称。
            </summary>
      <returns>
              指向程序目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>
              获取指向 Temp 目录的路径名称。
            </summary>
      <returns>
              Temp 目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>
              定义注释标记。
               注释标记是一个字符串，当位于行首时，指示该行是一个注释并且分析器应该忽略该行。
            </summary>
      <returns>
              一个字符串数组，包含注释的所有标记为<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  注释标记包含空白。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>
              定义文本文件的分隔符。
            </summary>
      <returns>
              一个字符串数组，包含所有字段分隔符 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  分隔符值设置为一个换行符，空字符串，或 <see langword="Nothing" />。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>
              返回 <see langword="True" /> 如果没有非空，非注释行的当前光标位置和文件末尾之间。
            </summary>
      <returns>
              <see langword="True" /> 如果没有更多的数据读取;否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>
              返回导致最近的一行 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常。
            </summary>
      <returns>
              导致最近的一行 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>
              返回导致最近的行数 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常。
            </summary>
      <returns>
              导致最新的行数 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 异常。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>
              表示正在分析的文本文件中每一列的宽度。
            </summary>
      <returns>
              一个整数数组，它包含正在分析的文本文件中每一列的宽度。
            </returns>
      <exception cref="T:System.ArgumentException">
                  中的最后一项之外的数组的任何位置的宽度值小于或等于零。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>
              指示在分析分隔的文件时是否用引号将字段括起来。
            </summary>
      <returns>
              <see langword="True" />如果字段用引号引起来;否则为<see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>
              返回当前行号，如果流中没有更多字符，则返回 -1。
            </summary>
      <returns>
              当前行号。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>
              指定要分析的文件是分隔的还是固定宽度的。
            </summary>
      <returns>
              一个 <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 值，该值指示是否要分析的文件分隔或固定宽度。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>
              指示是否应移除字段值中的前导和尾随空白。
            </summary>
      <returns>
              <see langword="True" /> 如果应从字段值; 删除前导空格和尾随空白字符否则为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngine">
      <summary>
              返回 <see langword="String" /> 表示当前正在使用运行时。
            </summary>
      <returns>
              返回 <see langword="String" /> 表示当前正在使用运行时。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion">
      <summary>
              返回 <see langword="Integer" /> 包含当前正在使用的运行时的内部版本号。
            </summary>
      <returns>
              返回 <see langword="Integer" /> 包含当前正在使用的运行时的内部版本号。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion">
      <summary>
              返回 <see langword="Integer" /> 包含当前正在使用运行时的主要版本号。
            </summary>
      <returns>
              返回 <see langword="Integer" /> 包含当前正在使用运行时的主要版本号。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion">
      <summary>
              返回 <see langword="Integer" /> 包含当前正在使用运行时的次版本号。
            </summary>
      <returns>
              返回 <see langword="Integer" /> 包含当前正在使用运行时的次版本号。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>
              确定是否将输出追加到当前文件或写入新文件。
            </summary>
      <returns>
              <see langword="Boolean" />与<see langword="True" />，该值指示输出将追加到当前的文件中，和<see langword="False" />，该值指示输出写入新文件。
               默认设置为此属性是<see langword="True" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>
              指示日志文件流写入刷新缓冲区。
            </summary>
      <returns>
              <see langword="Boolean" />与<see langword="True" />，该值指示流将刷新后每次写入; 否则为日志条目都是缓冲并更高效地编写。
               默认设置为此属性是<see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>
              获取或设置日志文件中，用于创建日志文件的完整名称的基名称。
            </summary>
      <returns>
              <see langword="String" />。
               日志文件基名称。
               默认值为应用程序的产品名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>
              获取或设置日志文件目录时<see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />属性设置为<see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />。
            </summary>
      <returns>
              <see langword="String" />这是日志文件目录的名称。
               此属性的默认设置是应用程序数据的用户的目录。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>
              获取或设置用来分隔日志消息中的字段的分隔符。
            </summary>
      <returns>
              <see langword="String" />, 它是使用一条日志消息中的字段的分隔符。
               此属性的默认设置是使用制表符。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>
              确定要执行的操作时写入日志文件，并且没有较少可用磁盘空间超过指定值 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性。
            </summary>
      <returns>
              <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />。
               确定如何处理在尝试写入日志文件，并且没有较少可用磁盘空间超过指定值时 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性，或如果日志文件大小大于什么 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 属性允许。
               默认值为 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>
              获取或设置要在创建新的日志文件时使用的编码。
            </summary>
      <returns>
              <see cref="T:System.Text.Encoding" />, 它编码时要使用创建新的日志文件。
               此属性的默认值为 <see cref="T:System.Text.UTF8Encoding" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>
              获取当前日志文件的完整名称。
            </summary>
      <returns>
              <see langword="String" />, 这是当前日志文件的完整名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>
              指示应在输出中包括日志记录计算机的主机名。
            </summary>
      <returns>
              <see langword="Boolean" />。
               使用 <see langword="True" /> 如果主机标识符应包括; 否则请使用 <see langword="False" />。
               默认值为 <see langword="False" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>
              获取或设置日志文件位置。
            </summary>
      <returns>
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, 这是日志文件的位置。
               默认值为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>
              确定要包括的日志文件的名称中的日期。
            </summary>
      <returns>
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />。
               这指示要在日志文件名称中包含的日期。
               默认值为 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>
              获取或设置日志文件中，允许的最大大小，以字节为单位。
            </summary>
      <returns>
              <see langword="Long" />。
               这是最大允许的日志文件大小，以字节为单位。
               默认值为 5000000。
            </returns>
      <exception cref="T:System.ArgumentException">
                  当此属性设置为一个值小于 1000年。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>
              获取或设置的可用磁盘空间量以字节为单位，有必要在消息可写入到日志文件之前。
            </summary>
      <returns>
              <see langword="Long" />。
               这是必需的可用磁盘空间量。
               默认值为 10000000。
            </returns>
      <exception cref="T:System.ArgumentException">
                  当此属性设置为小于 0 的值。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>
              获取文件 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象提供支持 <see langword="Log" /> 对象。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象提供支持 <see langword="Log" /> 对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>
              获取指向 <see cref="T:System.Diagnostics.TraceSource" /> 对象提供支持 <see langword="Log" /> 对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Diagnostics.TraceSource" /> 对象提供支持 <see langword="Log" /> 对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>
              此属性支持<see langword="My" />中Visual Basic。
            </summary>
      <returns>
              在创建该类型的实例的类中指定的方法。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>
              此属性支持 <see langword="My" /> 中 Visual Basic。
            </summary>
      <returns>
              指定返回类的默认实例的属性的名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>
              此属性支持 <see langword="My" /> 中 Visual Basic。
            </summary>
      <returns>
              在释放类型的实例的类中指定的方法。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>
              此属性支持 <see langword="My" /> 中 Visual Basic。
            </summary>
      <returns>
              指定编译器为其生成取值函数属性的类型的名称。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>
              获取或设置当前目录。
            </summary>
      <returns>
              文件 I/O 操作在当前目录。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  路径不是有效的。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  该用户缺少必要的权限。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>
              返回的所有可用的驱动器名称的只读集合。
            </summary>
      <returns>
              所有可用的驱动器作为只读集合 <see cref="T:System.IO.DriveInfo" /> 对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>
              获取一个对象，提供用于访问经常属性引用的目录。
            </summary>
      <returns>
              此属性返回 <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> 计算机对象。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>
              此属性支持 <see langword="My" /> 中 Visual Basic。
            </summary>
      <returns>
              与此类关联的值。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>
              返回<see cref="T:Microsoft.Win32.RegistryKey" />类型提供了访问权<see langword="HKEY_CLASSES_ROOT" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>
              返回<see cref="T:Microsoft.Win32.RegistryKey" />类型提供了访问权<see langword="HKEY_CURRENT_CONFIG" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>
              返回<see cref="T:Microsoft.Win32.RegistryKey" />类型提供了访问权<see langword="HKEY_CURRENT_USER" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData">
      <summary>
              返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，它提供对访问 <see langword="HKEY_DYNDATA" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>
              返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，它提供对访问 <see langword="HKEY_LOCAL_MACHINE" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>
              返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，它提供对访问 <see langword="HKEY_PERFORMANCE_DATA" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>
              返回 <see cref="T:Microsoft.Win32.RegistryKey" /> 类型，它提供对访问 <see langword="HKEY_USERS" />。
            </summary>
      <returns>
              <see cref="T:Microsoft.Win32.RegistryKey" />
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>
              获取指向的所有用户的应用程序数据目录的路径名称。
            </summary>
      <returns>
              所有用户应用程序数据目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  通常由于操作系统不支持目录路径为空。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>
              获取指向当前用户的应用程序数据目录的路径名称。
            </summary>
      <returns>
              当前用户的应用程序数据目录路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  通常由于操作系统不支持目录路径为空。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>
              获取指向桌面目录的路径名称。
            </summary>
      <returns>
              指向桌面目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>
              获取指向我的文档目录的路径名称。
            </summary>
      <returns>
              我的文档目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>
              获取指向我的音乐目录的路径名称。
            </summary>
      <returns>
              我的音乐目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>
              获取指向 My Pictures 目录的路径名称。
            </summary>
      <returns>
              My Pictures 目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>
              获取指向的路径 Program Files 目录。
            </summary>
      <returns>
              通往 Program Files 目录。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>
              获取指向程序目录的路径名称。
            </summary>
      <returns>
              指向程序目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>
              获取指向 Temp 目录的路径名称。
            </summary>
      <returns>
              Temp 目录的路径。
            </returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">
                  该路径为空，通常是因为操作系统不支持该目录。
                </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>
              返回数组的边界。
            </summary>
      <returns>
              包含一个整数数组，表示数组的边界。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>
              返回数组的大小。
            </summary>
      <returns>
              包含一个整数，表示数组中元素的数目。
            </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>
              获取字符串的长度。
            </summary>
      <returns>
              返回字符串的长度。
            </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>
              提供属性、 方法和与当前的应用程序相关的事件。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>
              提供用于获取有关应用程序，如版本号、 描述、 加载的程序集和等等的信息的属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>
              指示如何 Visual Basic 应用程序进行身份验证用户输入<see langword="My.User" />对象。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>
              <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" />构造函数初始化与当前用户的 Windows 用户信息的应用程序的主线程的主体。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>
              <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" />构造函数不初始化应用程序的主线程的主体。
               应用程序需要初始化应用程序的主线程的主体。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole">
      <summary>
              指示要时调用，检查角色类型<see cref="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />方法。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.AccountOperator">
      <summary>
              帐户操作员管理计算机或域上的用户帐户。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Administrator">
      <summary>
              管理员具有对计算机或域的完全且无限制访问。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.BackupOperator">
      <summary>
              备份或还原文件的唯一目的，备份操作员可以重写安全限制。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Guest">
      <summary>
              来宾是比用户更受限制。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PowerUser">
      <summary>
              超级用户具有大多数的管理权限，但受到一些限制。
               因此，超级用户可以运行旧版应用程序，除了认证应用程序。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.PrintOperator">
      <summary>
              打印运算符只能带打印机的控制权。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.Replicator">
      <summary>
              复制器支持在域中的文件复制。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.SystemOperator">
      <summary>
              系统操作员管理特定计算机。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.BuiltInRole.User">
      <summary>
              用户无法进行意外或故意系统范围的更改。
               因此，用户可以运行已认证应用程序，但不是大多数的旧版应用程序。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter">
      <summary>
              提供要转换的类型转换器<see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />枚举值来<see cref="T:System.Security.Principal.WindowsBuiltInRole" />枚举值。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>
              当单实例应用程序的后续实例无法连接到第一个应用程序实例时，引发此异常。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>
              提供属性、 方法和与当前的应用程序相关的事件。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>
              由 Visual Basic 应用程序模型，将引发此异常时 <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> 未设置属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>
              表示用来处理 <see langword="My.Application.Shutdown" /> 事件的方法。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.EventArgs" /> 对象。
              </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>
              指示哪个条件应导致要关闭的 Windows 窗体应用程序。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>
              当主窗体关闭时关闭。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>
              只有在最后一个窗体关闭后关闭。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>
              为 <see langword="My.Application.Startup" /> 事件提供数据。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>
              表示用来处理 <see langword="My.Application.Startup" /> 事件的方法。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> 对象。
              </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>
              为 <see langword="My.Application.StartupNextInstance" /> 事件提供数据。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>
              表示用来处理 <see langword="My.Application.StartupNextInstance" /> 事件的方法。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> 对象。
              </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>
              为 <see langword="My.Application.UnhandledException" /> 事件提供数据。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>
              表示用来处理 <see langword="My.Application.UnhandledException" /> 事件的方法。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> 对象。
              </param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>
              提供对有关当前用户的信息的访问。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WebUser">
      <summary>
              提供对有关当前用户的信息的访问。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>
              提供属性、 方法和在当前应用程序相关的事件。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>
              指示要在调用时，可用于所调用的程序的窗口样式<see langword="Shell" />函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>
              窗口将会隐藏，焦点传递给隐藏窗口。
               此成员等效于 Visual Basic 常量 <see langword="vbHide" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>
              窗口具有焦点并还原到其原始大小和位置。
               此成员等效于 Visual Basic 常量 <see langword="vbNormalFocus" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>
              为具有焦点图标将显示窗口。
               此成员等效于 Visual Basic 常量 <see langword="vbMinimizedFocus" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>
              最大化窗口并将焦点。
               此成员等效于 Visual Basic 常量 <see langword="vbMaximizedFocus" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>
              窗口还原到其最新的大小和位置。
               当前处于活动状态窗口保持活动状态。
               此成员等效于 Visual Basic 常量 <see langword="vbNormalNoFocus" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>
              以图标形式显示窗口。
               当前处于活动状态窗口保持活动状态。
               此成员等效于 Visual Basic 常量 <see langword="vbMinimizedNoFocus" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>
              指示如何调用音频方法时播放声音。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>
              导致<see langword="My.Computer.Audio.Play" />方法来播放声音，并等待，直到它完成之前调用的代码将继续。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>
              导致<see langword="My.Computer.Audio.Play" />方法以在后台中播放声音。
               调用代码继续执行。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>
              导致<see langword="My.Computer.Audio.Play" />方法以在后台之前播放声音<see cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" />调用方法。
               调用代码继续执行。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>
              指示的调用时要调用的过程的类型<see langword="CallByName" />函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>
              正在调用的方法。
                此成员等效于 Visual Basic 常量 <see langword="vbMethod" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>
              正在检索属性值。
                此成员等效于 Visual Basic 常量 <see langword="vbGet" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>
              要确定某个对象属性值。
               此成员等效于 Visual Basic 常量 <see langword="vbLet" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>
              要确定属性值。
                此成员等效于 Visual Basic 常量 <see langword="vbSet" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>
              Visual Basic <see langword="Collection" /> 是可作为单元引用的一组有序项。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>
              <see langword="ComClassAttribute" />属性指示编译器添加允许类公开为 COM 对象的元数据。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>
              指示如何比较字符串时调用比较函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>
              执行二进制比较。
               此成员等效于 Visual Basic 常量 <see langword="vbBinaryCompare" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>
              执行文本比较。
               此成员等效于 Visual Basic 常量 <see langword="vbTextCompare" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>
              此类已弃用截至 Visual Basic 2005。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>
              此类已弃用截至 Visual Basic 2005。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>
              此类已弃用截至 Visual Basic 2005。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>
              此类已弃用截至 Visual Basic 2005。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>
              提供执行各种类型转换的方法。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>
              应用于某个类时，编译器将从默认的综合构造函数隐式调用组件初始化方法。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ExceptionUtils">
      <summary>
              提供的异常处理对 Visual Basic 运行时支持。
               此类不应在代码中使用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.FlowControl">
      <summary>
              提供服务添加到 Visual Basic 编译器编译 <see langword="For...Next" /> 和 <see langword="For Each" /> 循环。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>
              返回对引用和有关当前的 Visual Basic 主机窗口的信息。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>
              Visual Basic 编译器在静态本地初始化，则为过程中使用此类它不是为了在代码中直接调用。
               如果静态局部变量无法初始化，将引发此类型的异常。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalErrorException">
      <summary>
              为内部的 Visual Basic 编译器错误引发的异常。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.InternalXmlHelper">
      <summary>
              提供属性和支持 Visual Basic XML 文本的方法。
               此类不应在代码中直接使用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>
              对于 Visual Basic 表示主机窗口。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>
              自 Visual Basic 2005 年以来，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>
              此类提供 Visual Basic 编译器使用为完成此工作的帮助器 Like 运算符 (Visual Basic)。
               它不是为了在代码中直接调用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>
              此类提供了帮助程序，Visual Basic 编译器使用后期绑定调用异步方法。它不是为了在代码中直接调用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>
              Visual Basic 编译器使用此类对象流控制;它不是为了在代码中直接调用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>
              提供服务添加到 Visual Basic 编译器编译 <see langword="For...Next" /> 循环。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>
              提供了后期绑定的数学运算符，如 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 和 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, ，后者对 Visual Basic 编译器内部使用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>
              指定当前 <see langword="Option Compare" /> 设置应传递作为参数的默认值。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>
              Visual Basic 编译器将发出此帮助器类，以指示 （用于 Visual Basic 调试） 正在使用的比较选项、 二进制或文本
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>
              对于 Visual Basic 中提供帮助器 <see langword="Err" /> 对象。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>
              此类提供了发送到中间语言 (IL) 时将应用于标准模块构造的属性。
               但并不是直接从代码中调用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>
              Visual Basic 编译器使用此类在内部初始化静态本地成员; 时它不是为了在代码中直接调用。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>
              从 Visual Basic 2005 年起，此类已被否决。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>
              包含 Visual Basic 编译器使用的实体。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>
              <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> 模块包含用于与对象、 应用程序和系统进行交互的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>
              <see langword="Constants" />模块包含杂项常量。
               可以在代码中任意位置使用这些常量。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>
              <see langword="ControlChars" />模块包含常量用作控制字符。
               可以在代码中任意位置使用这些常量。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>
              <see langword="Conversion" />模块包含用于执行各种转换操作的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>
              <see langword="DateAndTime" /> 模块包含的过程和在日期和时间操作中使用的属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>
              指示如何显示日期时调用 <see langword="FormatDateTime" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>
              对于实数，显示的日期和时间。
               如果数字没有小数部分，则只显示日期。
               如果数字没有整数部分，只显示时间。
               日期和时间显示取决于您的计算机的区域设置。
               此成员是等效的 Visual Basic 常量 <see langword="vbGeneralDate" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>
              显示使用计算机的区域设置中指定的长日期格式的日期。
               此成员是等效的 Visual Basic 常量 <see langword="vbLongDate" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>
              显示使用计算机的区域设置中指定的短日期格式的日期。
               此成员是等效的 Visual Basic 常量 <see langword="vbShortDate" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>
              显示您的计算机的区域设置中指定的长时间格式的时间。
               此成员是等效的 Visual Basic 常量 <see langword="vbLongTime" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>
              显示使用计算机的区域设置中指定的短时间格式的时间。
               此成员是等效的 Visual Basic 常量 <see langword="vbShortTime" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>
              指示当调用与日期相关的函数时如何确定日期间隔并设置其格式。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>
              年
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>
              一年的某一季度（1 到 4）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>
              月（1 到 12）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>
              一年的某一日（1 到 366）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>
              一月的某一日（1 到 31）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>
              一年的某一周（1 到 53）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>
              一周的某一日（1 到 7）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>
              小时（0 到 23）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>
              分钟（0 到 59）
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>
              秒（0 到 59）
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>
              提供用于播放声音的方法。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>
              提供用于访问从系统时钟的当前本地时间和协调世界时 （相当于格林威治标准时间） 属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>
              提供用于操作如音频、 时钟、 键盘、 文件系统和等等的计算机组件的属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>
              提供用于获取有关计算机的内存、 加载的程序集、 名称和操作系统信息的属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>
              提供用于访问键盘，如密钥当前按下和提供的方法可将击键发送到活动窗口中的当前状态的属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>
              提供用于获取有关的格式和本地计算机上安装的鼠标的配置信息的属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>
              提供了一个属性、 事件和计算机连接的网络进行交互的方法。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>
              提供有关 <see langword="My.Application.NetworkAvailabilityChanged" /> 和 <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> 事件的数据。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>
              表示将处理的方法 <see langword="My.Application.NetworkAvailabilityChanged" /> 或 <see langword="My.Computer.Network.NetworkAvailabilityChanged" /> 事件。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> 对象。
              </param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Ports">
      <summary>
              提供的属性和方法来访问计算机的串行端口。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>
              提供用于操作计算机组件，例如音频、 时钟、 键盘、 文件系统等属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>
              指示何时付款时调用财务方法。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>
              末尾的日期间隔介于
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>
              日期间隔的开始处的不断下降
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>
              <see langword="ErrObject" /> 模块包含属性和过程用来标识和处理使用的运行时错误 <see langword="Err" /> 对象。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>
              指示要在调用文件访问函数时使用的文件属性。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>
              正常 (默认值为 <see langword="Dir" /> 和 <see langword="SetAttr" />)。
               没有特殊特性适用于该文件。
               此成员是等效的 Visual Basic 常量 <see langword="vbNormal" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>
              只读属性。
               此成员是等效的 Visual Basic 常量 <see langword="vbReadOnly" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>
              隐藏。
               此成员是等效的 Visual Basic 常量 <see langword="vbHidden" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>
              系统文件。
               此成员是等效的 Visual Basic 常量 <see langword="vbSystem" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>
              卷标。
               此属性不是与一起使用时有效 <see langword="SetAttr" />。
               此成员是等效的 Visual Basic 常量 <see langword="vbVolume" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>
              目录或文件夹。
               此成员是等效的 Visual Basic 常量 <see langword="vbDirectory" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>
              文件自上次备份后已更改。
               此成员是等效的 Visual Basic 常量 <see langword="vbArchive" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>
              指定要从中删除一个目录包含文件或目录时应采取的操作。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>
              引发 <see cref="T:System.IO.IOException" /> 如果目录不为空。
              <see langword="Data" /> 异常属性会列出无法删除的文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>
              删除目录中，同时该目录的内容。
               默认。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>
              指示文本字段是分隔还是固定宽度。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>
              指示字段被分隔。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>
              指示字段均固定宽度。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>
              提供属性和方法用于处理驱动器、 文件和目录。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>
              时，将引发的异常 <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> 方法不能分析使用指定的格式的行。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>
              指定是否应被永久删除或放在一个文件 回收站。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>
              永久删除文件或目录。
               默认。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>
              发送文件或目录更改为 回收站。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>
              指定是否以搜索所有或仅为顶级目录。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>
              搜索指定的目录并不包括子目录。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>
              搜索指定的目录和其中的所有子目录。
               默认。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>
              提供用于访问经常属性引用的目录。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>
              提供分析结构化文本文件的方法和属性。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>
              指定当用户单击是否引发异常 取消 一次操作中。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>
              不执行任何操作，当用户单击 取消。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>
              引发异常，当用户单击 取消。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>
              指定要在复制、 删除或移动文件或目录时显示的对话框。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>
              仅显示错误对话框并隐藏进度对话框。
               默认。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>
              显示进度对话框和任何错误对话框。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>
              <see langword="FileSystem" /> 模块包含用于执行文件、 目录或文件夹和系统操作的过程。
              <see langword="My" /> 功能为您提供更好的工作效率和性能在文件 I/O 操作比使用 <see langword="FileSystem" /> 模块。
               有关详细信息，请参阅<see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>
              <see langword="Financial" /> 模块包含用于执行财务操作的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>
              指示在调用与日期相关的函数时使用的每周的第一天。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>
              在您的系统设置中指定一周的第一天此成员是等效的 Visual Basic 常量 <see langword="vbUseSystemDayOfWeek" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>
              此成员是等效的 Visual Basic 常量于星期日 （默认） <see langword="vbSunday" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>
              此成员是等效的 Visual Basic 常量星期一 <see langword="vbMonday" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>
              此成员是相等的 Visual Basic 常量的星期二 <see langword="vbTuesday" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>
              此成员是等效的 Visual Basic 常量于星期三 <see langword="vbWednesday" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>
              此成员是等效的 Visual Basic 常量星期四 <see langword="vbThursday" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>
              此成员是等效的 Visual Basic 常量的星期五 <see langword="vbFriday" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>
              此成员是等效的 Visual Basic 常量星期六 <see langword="vbSaturday" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>
              指示要在调用与日期相关的函数时使用的年份的第一周。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>
              在您的系统设置中为该年的第一周 weekspecified。
               此成员是等效的 Visual Basic 常量 <see langword="vbUseSystem" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>
              发生一周中的 1 月 1 日 （默认值）。
               此成员是等效的 Visual Basic 常量 <see langword="vbFirstJan1" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>
              在新一年中具有至少四天中的第一周。
               此成员是等效的 Visual Basic 常量 <see langword="vbFirstFourDays" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>
              该年的第一个完整的周。
               此成员是等效的 Visual Basic 常量 <see langword="vbFirstFullWeek" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Globals">
      <summary>
              <see langword="Globals" /> 模块包含脚本引擎函数。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>
              <see langword="HideModuleNameAttribute" />属性，当应用于某个模块时允许使用仅该模块所需的资格访问模块成员。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>
              <see langword="Information" /> 模块包含用于返回、 测试或验证信息的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>
              <see langword="Interaction" /> 模块包含用于与对象、 应用程序和系统进行交互的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.AspLog">
      <summary>
              提供属性和方法用于将事件和异常信息写入应用程序的日志侦听器。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>
              确定要执行的操作时 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 对象将尝试写入到日志中并且没有较少可用磁盘空间超过指定值 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 属性。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>
              引发异常。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>
              丢弃日志消息。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>
              提供一个简单的侦听器的日志记录将输出定向到文件。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>
              提供的属性和方法用于将事件和异常信息写入应用程序的日志侦听器。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>
              确定要包括的名称中的日期 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类日志文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>
              不在日志文件名称中包含的日期。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>
              在日志文件名称中包含当前日期。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>
              在日志文件名称中包含当前周的第一天。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>
              确定哪种预定义路径 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 类用来写入其日志文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>
              使用当前系统的临时文件夹的路径。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>
              使用用户的应用程序数据的路径。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>
              在所有用户之间共享的应用程序数据使用的路径。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>
              使用启动了应用程序的可执行文件的路径。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>
              如果指定的字符串 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> 不为空，则将其用作路径。
               否则，为用户的应用程序数据使用的路径。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>
              指示在消息框上按下了哪个按钮，由 <see langword="MsgBox" /> 函数返回。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>
              确定曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbOK" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>
              取消曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbCancel" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>
              中止曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbAbort" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>
              重试曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbRetry" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>
              忽略曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbIgnore" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>
              是曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbYes" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>
              不曾按下按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbNo" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>
              指示调用 <see langword="MsgBox" /> 函数时显示的按钮。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>
              确定按钮仅 （默认值）。
               此成员等效于 Visual Basic 常量 <see langword="vbOKOnly" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>
              确定和取消按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbOKCancel" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>
              中止，重试，和忽略按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbAbortRetryIgnore" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>
              是，否，和取消按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbYesNoCancel" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>
              是和否按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbYesNo" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>
              重试和取消按钮。
               此成员等效于 Visual Basic 常量 <see langword="vbRetryCancel" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>
              关键消息。
               此成员等效于 Visual Basic 常量 <see langword="vbCritical" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>
              警告查询。
               此成员等效于 Visual Basic 常量 <see langword="vbQuestion" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>
              警告消息。
               此成员等效于 Visual Basic 常量 <see langword="vbExclamation" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>
              信息消息。
               此成员等效于 Visual Basic 常量 <see langword="vbInformation" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>
              第一个按钮是默认值。
               此成员等效于 Visual Basic 常量 <see langword="vbDefaultButton1" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>
              第二个按钮是默认值。
               此成员等效于 Visual Basic 常量 <see langword="vbDefaultButton2" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>
              第三个按钮是默认值。
               此成员等效于 Visual Basic 常量 <see langword="vbDefaultButton3" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>
              应用程序模式消息框。
               此成员等效于 Visual Basic 常量 <see langword="vbApplicationModal" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>
              系统模式消息框。
               此成员等效于 Visual Basic 常量 <see langword="vbSystemModal" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>
              帮助文本。
               此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxHelp" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>
              右对齐文本。
               此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxRight" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>
              从右到左阅读的文本（希伯来语和阿拉伯语系统）。
               此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxRtlReading" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>
              前景消息框窗口。
               此成员等效于 Visual Basic 常量 <see langword="vbMsgBoxSetForeground" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>
              此特性支持 <see langword="My.Forms" /> 和 <see langword="My.WebServices" /> 中 Visual Basic。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>
              提供用于操作剪贴板的方法。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>
              提供属性和方法用于处理驱动器、 文件和目录。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>
              此类支持<see langword="My" />中Visual Basic。
            </summary>
      <typeparam name="T">
                要存储的对象的类型。
              </typeparam>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>
              提供用于操作注册表属性和方法。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>
              提供用于访问经常属性引用的目录。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>
              指示如何在调用文件访问函数打开一个文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>
              允许读取和写入访问。
               这是默认设置。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>
              允许读取访问权限。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>
              允许读取和写入访问。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>
              允许写入访问权限。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>
              指示如何在调用文件访问函数打开一个文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>
              打开文件进行读取访问权限。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>
              打开文件进行写访问权限。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>
              打开文件进行随机访问。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>
              打开文件以向其追加。
               默认。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>
              打开文件进行二进制访问。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>
              指示如何在调用文件访问函数打开一个文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
              <see langword="LockReadWrite" />。
               这是默认设置。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>
              任何进程可读取或写入该文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>
              其他进程无法读取文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>
              其他进程无法读取或写入该文件。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>
              其他进程无法写入该文件。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>
              此类支持 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函数。 
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>
              <see langword="Strings" /> 模块包含用于执行字符串操作的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>
              此类支持 Visual Basic <see langword="Print" /> 和 <see langword="PrintLine" /> 函数。 
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>
              表示一个布尔值或数字格式的函数调用时是否应使用默认值。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>
              如果为 false。
               此成员的数值为 0。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>
              则返回 true。
               此成员的数值为-1。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>
              默认设置。
               此成员的数值为-2。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>
              指示返回的变体对象的类型 <see langword="VarType" /> 函数。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>
              空引用。
               此成员是等效的 Visual Basic 常量 <see langword="vbEmpty" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>
              Null 对象。
               此成员是等效的 Visual Basic 常量 <see langword="vbNull" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
              <see langword="Short" />。
               (-32768 到 32767)。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
              <see langword="Integer" />。
               (-2147483648 到 2147483647)。
               此成员是等效的 Visual Basic 常量 <see langword="vbInteger" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
              <see langword="Single" />。
               (-3.402823 e + 38 到-1.401298 e-45 负值; 范围为 1.401298 e-45 到 3.402823 e + 38 正值。)
               此成员是等效的 Visual Basic 常量 <see langword="vbSingle" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
              <see langword="Double" />。
               (-1.79769313486231 e + 308 到-4.94065645841247 e-324 负值; 4.94065645841247 e-324 到 1.79769313486231 e + 308 的正值。)
               此成员是等效的 Visual Basic 常量 <see langword="vbDouble" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>
              货币。
               此成员是等效的 Visual Basic 常量 <see langword="vbCurrency" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
              <see langword="Date" />。
               (0: 00:00 0001 到 9999 年 12 月 31 日下午 11:59:59 年 1 月 1 日。)
               此成员是等效的 Visual Basic 常量 <see langword="vbDate" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
              <see langword="String" />。
               (0 到大约 20 亿个 Unicode 字符。)
               此成员是等效的 Visual Basic 常量 <see langword="vbString" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>
              任何类型可以存储在类型的变量 <see langword="Object" />。
               此成员是等效的 Visual Basic 常量 <see langword="vbObject" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
              <see cref="T:System.Exception" />
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
              <see langword="Boolean" />。
               (<see langword="True" /> or <see langword="False" />.)
               此成员是等效的 Visual Basic 常量 <see langword="vbBoolean" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
              <see langword="Variant" />。
               此成员是等效的 Visual Basic 常量 <see langword="vbVariant" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>
              DataObject。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
              <see langword="Decimal" />。
               (0 到 + /--7.9228162514264337593543950335，28 位小数; 右侧的位数为 0 到 + /-没有小数点 79228162514264337593543950335 最小的非零数为 + /-0.0000000000000000000000000001。)
               此成员是等效的 Visual Basic 常量 <see langword="vbDecimal" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
              <see langword="Byte" />。
               (0 到 255 之间。)
               此成员是等效的 Visual Basic 常量 <see langword="vbByte" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
              <see langword="Char" />。
               (0 到 65535 之间。)
               此成员是等效的 Visual Basic 常量 <see langword="vbChar" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
              <see langword="Long" />。
               (-9223372036854775808 到 9223372036854775807)。
               此成员是等效的 Visual Basic 常量 <see langword="vbLong" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>
              用户定义的类型。
               结构中的每个成员都有其数据类型，并独立于其他成员的范围决定。
               此成员是等效的 Visual Basic 常量 <see langword="vbUserDefinedType" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>
              数组。
               此成员是等效的 Visual Basic 常量 <see langword="vbArray" />。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>
              指示应将在结构或非本地变量的数组视为一个固定长度的数组。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>
              指示应视为一个字符串，如同固定长度。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>
              <see langword="VbMath" /> 模块包含用于执行数学运算的过程。
            </summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>
              指示调用 <see langword="StrConv" /> 函数时要执行的转换类型。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>
              不执行任何转换。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>
              将字符串转换为大写字符。
               此成员等效于 Visual Basic 常量 <see langword="vbUpperCase" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>
              将字符串转换为小写字符。
               此成员等效于 Visual Basic 常量 <see langword="vbLowerCase" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>
              将字符串中每个单词的第一个字母转换为大写。
               此成员等效于 Visual Basic 常量 <see langword="vbProperCase" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>
              将字符串中的窄（单字节）字符转换为宽（双字节）字符。
               适用于亚洲区域设置。
               此成员等效于 Visual Basic 常量 <see langword="vbWide" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>
              将字符串中的宽（双字节）字符转换为窄（单字节）字符。
               适用于亚洲区域设置。
               此成员等效于 Visual Basic 常量 <see langword="vbNarrow" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>
              将字符串中的平假名字符转换为片假名字符。
               仅适用于日语区域设置。
               此成员等效于 Visual Basic 常量 <see langword="vbKatakana" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>
              将字符串中片假名字符的转换为平假名字符。
               仅适用于日语区域设置。
               此成员等效于 Visual Basic 常量 <see langword="vbHiragana" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>
              将字符串转换为简体中文字符。
               此成员等效于 Visual Basic 常量 <see langword="vbSimplifiedChinese" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>
              将字符串转换为繁体中文字符。
               此成员等效于 Visual Basic 常量 <see langword="vbTraditionalChinese" />。
            </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>
              将字符串从用于大小写的文件系统规则转换为语言规则。
               此成员等效于 Visual Basic 常量 <see langword="vbLinguisticCasing" />。
            </summary>
    </member>
  </members>
</doc>