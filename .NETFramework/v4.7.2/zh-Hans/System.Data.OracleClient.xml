<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.OracleClient</name>
  </assembly>
  <members>
    <member name="E:System.Data.OracleClient.OracleConnection.InfoMessage">
      <summary>
              Oracle 发送警告或信息性消息时发生。
            </summary>
    </member>
    <member name="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated">
      <summary>
              对数据库执行命令后，更新操作期间发生。
            </summary>
    </member>
    <member name="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating">
      <summary>
              过程中发生 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 针对数据源执行命令之前。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBFile.Null">
      <summary>
              表示空 <see cref="T:System.Data.OracleClient.OracleBFile" /> 未绑定到物理文件的对象。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBinary.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.False">
      <summary>
              表示一个 false 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.One">
      <summary>
              表示一个值，可以分配给该值 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.True">
      <summary>
              表示一个 true 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.Zero">
      <summary>
              表示可以分配给的零值<see cref="P:System.Data.OracleClient.OracleBoolean.Value" />实例的属性<see cref="T:System.Data.OracleClient.OracleBoolean" />结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleClientFactory.Instance">
      <summary>
              获取实例 <see cref="T:System.Data.OracleClient.OracleClientFactory" />, ，它可以用于检索强类型化数据对象。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.MaxValue">
      <summary>
              表示的最大有效日期值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.MinValue">
      <summary>
              表示的最小有效日期值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLob.Null">
      <summary>
              表示空 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.MaxValue">
      <summary>
              表示的最大有效日期值 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.MinValue">
      <summary>
              表示的最小有效日期值 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.E">
      <summary>
              返回值 e-2.718。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxPrecision">
      <summary>
              一个常数，表示精度比较最大可能值。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxScale">
      <summary>
              一个常数，表示小数位数比较的最大值。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxValue">
      <summary>
              一个常数，表示的最大值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinScale">
      <summary>
              一个常数，表示小数位数比较的最小值。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinusOne">
      <summary>
              返回值为-1。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinValue">
      <summary>
              一个常数，表示最小值为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 类。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.One">
      <summary>
              返回值 1。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.PI">
      <summary>
              返回 pi 3.1415926535897932384626433832795028842 的值。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.Zero">
      <summary>
              返回值 0。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleString.Empty">
      <summary>
              表示可分配给一个空字符串 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleString.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.MaxValue">
      <summary>
              表示的最大有效日期值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.MinValue">
      <summary>
              表示的最小有效日期值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.Null">
      <summary>
              表示一个 null 值，可以分配给 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性的一个实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Clone">
      <summary>
              会创建一份 <see cref="T:System.Data.OracleClient.OracleBFile" /> 与原始的同一个物理文件相关联的对象。
            </summary>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象与原始的同一个物理文件相关联 <see langword="OracleBFile" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
      <summary>
              将复制的全部内容 <see cref="T:System.Data.OracleClient.OracleBFile" /> 到的目标开头 <see cref="T:System.Data.OracleClient.OracleLob" />。
            </summary>
      <param name="destination">
                目标 <see cref="T:System.Data.OracleClient.OracleLob" />
              </param>
      <returns>
              已复制的字节数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  目标 <see langword="OracleLob" /> 是空对象引用。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  目标为 null <see langword="OracleLob" />。
                
                  - 或 - 
                
                  与此连接 <see langword="OracleBFile" /> 关联已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see langword="OracleBFile" /> 关闭或释放对象为止。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
      <summary>
              将复制的全部内容 <see cref="T:System.Data.OracleClient.OracleBFile" /> 到目标 <see cref="T:System.Data.OracleClient.OracleLob" /> 指定偏移量处。
            </summary>
      <param name="destination">
                目标 <see cref="T:System.Data.OracleClient.OracleLob" />。
              </param>
      <param name="destinationOffset">
                要复制到的偏移量。
              </param>
      <returns>
              已复制的字节数。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  目标 <see langword="OracleLob" /> 是空对象引用。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  目标为 null <see langword="OracleLob" />。
                
                  - 或 - 
                
                  与此连接 <see langword="OracleBFile" /> 关联已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see langword="OracleBFile" /> 关闭或释放对象为止。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
      <summary>
              从该副本 <see cref="T:System.Data.OracleClient.OracleBFile" /> 到目标 <see cref="T:System.Data.OracleClient.OracleLob" /> 与指定的数据、 源偏移量和目标偏移量。
            </summary>
      <param name="sourceOffset">
                要从其中复制偏移量。
              </param>
      <param name="destination">
                目标 <see cref="T:System.Data.OracleClient.OracleLob" />。
              </param>
      <param name="destinationOffset">
                要复制到的偏移量。
              </param>
      <param name="amount">
                数据，以字节为单位，若要复制的数量。
              </param>
      <returns>
              已复制的字节数。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  量参数的值小于零或大于 4 千兆字节。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  目标 <see langword="OracleLob" /> 是空对象引用。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  目标为 null <see langword="OracleLob" />。
                
                  - 或 - 
                
                  与此连接 <see langword="OracleBFile" /> 关联已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see langword="OracleBFile" /> 关闭或释放对象为止。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Flush">
      <summary>
              当前不支持。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
              从当前读取的字节序列 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流并使提升读取的字节数的流中的位置。
            </summary>
      <param name="buffer">
                字节数组。
                 此方法返回时，该缓冲区包含指定的字节数组之间的值 <paramref name="offset" /> 和 (<paramref name="offset" /> + <paramref name="count" />) 由从当前源中读取的字节替换。
              </param>
      <param name="offset">
                <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。
              </param>
      <param name="count">
                要从当前流中最多读取的字节数。
              </param>
      <returns>
              读入缓冲区中的总字节数。
               这可能小于请求的字节数如果许多字节当前不可用，或零个如果已到达文件末尾。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="offset" /> 和 <paramref name="count" /> 的总和大于缓冲区长度。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="offset" /> 或 <paramref name="count" /> 为负数。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  与之连接 <see langword="BFILE" /> 关联已关闭。
                </exception>
      <exception cref="T:System.IO.IOException">
                  出现 I/O 错误。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  该流已关闭或释放后调用的方法。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
              对当前设置的位置 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流。
            </summary>
      <param name="offset">
                相对于原点的字节偏移量。
                 如果 <paramref name="offset" /> 是负数，新的位置将指定的位置之前通过 <paramref name="origin" /> 按指定的字节数 <paramref name="offset" />。
                 如果 <paramref name="offset" /> 为零，则新的位置是由指定的位置 <paramref name="origin" />。
                 如果 <paramref name="offset" /> 为正，则新位置将按照指定的位置 <paramref name="origin" /> 按指定的字节数 <paramref name="offset" />。
              </param>
      <param name="origin">
                <see langword="System.IO.SeekOrigin" /> 类型的值，指示用于获取新位置的参考点。
              </param>
      <returns>
              当前流中的新位置。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  试图将设置一个含有负值或大于流的长度的位置。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  该流已关闭或释放后调用的方法。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
      <summary>
              将绑定 <see cref="T:System.Data.OracleClient.OracleBFile" /> 到不同的文件在操作系统中的对象。
            </summary>
      <param name="directory">
                包含物理文件的目录对象的别名。
              </param>
      <param name="file">
                在操作系统中文件的名称。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  该操作必须在事务中。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
      <summary>
              当前不支持。
            </summary>
      <param name="value">
                当前不支持。
              </param>
      <exception cref="T:System.NotSupportedException">
                  当调用的方法不受支持时，或者当尝试读取、搜索或写入不支持所调用功能的流时引发的异常。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
              当前不支持。
            </summary>
      <param name="buffer">
                当前不支持。
              </param>
      <param name="offset">
                当前不支持。
              </param>
      <param name="count">
                当前不支持。
              </param>
      <exception cref="T:System.NotSupportedException">
                  当调用的方法不受支持时，或者当尝试读取、搜索或写入不支持所调用功能的流时引发的异常。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])">
      <summary>
              新实例初始化 <see langword="OracleBinary" /> 结构，将 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性设置为提供的字节数组的内容。
            </summary>
      <param name="b">
                字节数组存储在 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)">
      <summary>
              比较此 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象传递给所提供的对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                与此比较的对象 <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              有符号的数字，指示此相对值 <see langword="OracleBinary" /> 结构和对象。
            
                      返回值 
                    
                      条件 
                    
                      小于零 
                    
                      此值 <see langword="OracleBinary" /> 对象是小于的对象。
                    
                      零 
                    
                      这 <see langword="OracleBinary" /> 对象是与对象相同。
                    
                      大于零 
                    
                      这 <see langword="OracleBinary" /> 对象是否大于该对象。
                    
                      - 或 - 
                    
                      该对象为 null 引用。
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              串联两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以创建一个新 <see langword="OracleBinary" /> 结构。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see langword="OracleBinary" /> 结构的串连值 <paramref name="x" /> 和 <paramref name="y" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象的实例 <see cref="T:System.Data.OracleClient.OracleBinary" /> 安全以及需要两个相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.GetHashCode">
      <summary>
              返回此 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构的哈希代码。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构以确定它们是否不相等。
            </summary>
      <param name="x">
                <see langword="OracleBinary" /> 结构。
              </param>
      <param name="y">
                <see langword="OracleBinary" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              串联两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 参数，以创建一个新 <see langword="OracleBinary" /> 结构。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              串联的值 <paramref name="x" /> 和 <paramref name="y" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]">
      <summary>
              获取的内容 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleBinary" /> 参数作为字节数组。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleBinary" />。
              </param>
      <returns>
              字节数组。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary">
      <summary>
              将转换的字节数组到 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构。
            </summary>
      <param name="b">
                要转换的字节数组。
              </param>
      <returns>
              <see langword="OracleBinary" /> 结构，它表示转换后的字节数组。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构，以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <param name="y">
                一个 <see langword="OracleBinary" /> 对象。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see langword="OracleBinary" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see langword="OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，使用指定 <see langword="Boolean" />。
            </summary>
      <param name="value">
                <see langword="Boolean" /> 要用作的初始值 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，使用指定的整数。
            </summary>
      <param name="value">
                <see langword="integer" /> 要用作的初始值 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.And(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              计算两个指定的按位 AND <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              下表中所示了逻辑 AND 运算的结果。
            
                      <paramref name="x" /> 的值
                    
                      <paramref name="y" /> 的值
                    
                      结果 
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.CompareTo(System.Object)">
      <summary>
              比较此 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构与指定对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                要比较对象，则为 null 引用 (<see langword="Nothing" /> 在 Visual Basic 中)。
              </param>
      <returns>
              一个有符号的数字，指示此实例和值的相对值。
            
                      值 
                    
                      描述 
                    
                      负整数 
                    
                      此实例小于 <paramref name="value" />。
                    
                      零 
                    
                      此实例等于 <paramref name="value" />。
                    
                      正整数 
                    
                      此实例大于 <paramref name="value" />。
                    
                      - 或 - 
                    
                      <paramref name="value" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Equals(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              比较两个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象的实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 安全以及需要两个相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.GetHashCode">
      <summary>
              返回此实例的哈希代码。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.NotEquals(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 以确定它们是否不相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.OnesComplement(System.Data.OracleClient.OracleBoolean)">
      <summary>
              执行与求补运算对提供 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              二进制反码所提供的 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
               如果 <see langword="Boolean" /> 包含一个 null 值，结果也将 null 值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_BitwiseAnd(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              计算两个指定的按位 AND <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              下表中所示了逻辑 AND 运算的结果。
            
                      <paramref name="x" /> 的值
                    
                      <paramref name="y" /> 的值
                    
                      结果 
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_BitwiseOr(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              计算其两个的按位 OR <see cref="T:System.Data.OracleClient.OracleBoolean" /> 操作数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              下表中所示按位或运算的结果。
            
                      <paramref name="x" /> 的值
                    
                      <paramref name="y" /> 的值
                    
                      结果 
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="unknown" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Equality(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是否相等。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_ExclusiveOr(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              执行按位异或运算对提供 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 参数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              下表中显示了按位异或运算的结果。
            
                      <paramref name="x" /> 的值
                    
                      <paramref name="y" /> 的值
                    
                      结果 
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Explicit(System.Data.OracleClient.OracleBoolean)~System.Boolean">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 到 <see langword="Boolean" />。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将转换。
              </param>
      <returns>
              一个 <see langword="Boolean" /> 设置为 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
            </returns>
      <exception cref="T:System.NullReferenceException">
                  <see cref="T:System.Data.OracleClient.OracleBoolean" /> 包含一个 null 值。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Data.OracleClient.OracleBoolean">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 可转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，其值等于 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Explicit(System.String)~System.Data.OracleClient.OracleBoolean">
      <summary>
              将字符串转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
      <param name="x">
                要转换为一个字符串 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，其值等于 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_False(System.Data.OracleClient.OracleBoolean)">
      <summary>
              用于测试 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 以确定是否为 false。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构以进行测试。
              </param>
      <returns>
              <see langword="true" /> 如果所提供的参数 <see cref="T:System.Data.OracleClient.OracleBoolean" /> false; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Implicit(System.Boolean)~System.Data.OracleClient.OracleBoolean">
      <summary>
              将转换 <see langword="Boolean" /> 值赋给 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
            </summary>
      <param name="x">
                一个 <see langword="Boolean" /> 值要转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 值，该值包含 0 或 1。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Inequality(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是否不相等。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_LogicalNot(System.Data.OracleClient.OracleBoolean)">
      <summary>
              对执行 NOT 运算 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 对其执行非运算。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 与 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /><see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 参数是否为 true， <see cref="F:System.Data.OracleClient.OracleBoolean.Null" /> 如果参数为空，并且 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 否则为。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_OnesComplement(System.Data.OracleClient.OracleBoolean)">
      <summary>
              执行对一个值的求补运算指定 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              指定的二进制反码 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_True(System.Data.OracleClient.OracleBoolean)">
      <summary>
              用于测试 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 以确定其是否为 true。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构以进行测试。
              </param>
      <returns>
              <see langword="true" /> 如果所提供的参数 <see cref="T:System.Data.OracleClient.OracleBoolean" /> ，则返回 true; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Or(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              执行按位或运算，对两个指定 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              下表中所示按位或运算的结果。
            
                      <paramref name="x" /> 的值
                    
                      <paramref name="y" /> 的值
                    
                      结果 
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="unknown" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Parse(System.String)">
      <summary>
              将指定 <see cref="T:System.String" /> 到一个逻辑值的表示形式及其 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 等效。
            </summary>
      <param name="s">
                要转换的 <see cref="T:System.String" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，它包含已分析的值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.ToString">
      <summary>
              将当前 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 为字符串。
            </summary>
      <returns>
              包含的值的字符串 <see cref="T:System.Data.OracleClient.OracleBoolean" />。
               如果值为 null，则字符串将包含 null 值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Xor(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>
              执行按位异或运算对提供的参数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。
              </param>
      <returns>
              下表中显示了逻辑异或运算的结果。
            
                      <paramref name="x" /> 的值
                    
                      <paramref name="y" /> 的值
                    
                      结果 
                    
                      <see langword="true" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="false" />
                    
                      <see langword="true" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="false" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    
                      <see langword="unknown" />
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateCommand">
      <summary>
              返回一个强类型 <see cref="T:System.Data.Common.DbCommand" /> 实例。
            </summary>
      <returns>
              强类型化的新实例 <see cref="T:System.Data.Common.DbCommand" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateCommandBuilder">
      <summary>
              返回一个强类型 <see cref="T:System.Data.Common.DbCommandBuilder" /> 实例。
            </summary>
      <returns>
              强类型化的新实例 <see cref="T:System.Data.Common.DbCommandBuilder" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateConnection">
      <summary>
              返回一个强类型 <see cref="T:System.Data.Common.DbConnection" /> 实例。
            </summary>
      <returns>
              强类型化的新实例 <see cref="T:System.Data.Common.DbConnection" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateConnectionStringBuilder">
      <summary>
              返回一个强类型 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例。
            </summary>
      <returns>
              强类型化的新实例 <see cref="T:System.Data.Common.DbConnectionStringBuilder" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateDataAdapter">
      <summary>
              返回一个强类型 <see cref="T:System.Data.Common.DbDataAdapter" /> 实例。
            </summary>
      <returns>
              强类型化的新实例 <see cref="T:System.Data.Common.DbDataAdapter" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateParameter">
      <summary>
              返回一个强类型 <see cref="T:System.Data.Common.DbParameter" /> 实例。
            </summary>
      <returns>
              强类型化的新实例 <see cref="T:System.Data.Common.DbParameter" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>
              返回一个强类型 <see cref="T:System.Security.CodeAccessPermission" /> 实例。
            </summary>
      <param name="state">
                <see cref="T:System.Security.Permissions.PermissionState" /> 枚举的一个成员。
              </param>
      <returns>
              强类型化的实例的 <see cref="T:System.Security.CodeAccessPermission" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)">
      <summary>
              使用查询的文本初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 类的新实例。
            </summary>
      <param name="commandText">
                查询的文本。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 用文本的查询的类和一个 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象。
            </summary>
      <param name="commandText">
                查询的文本。
              </param>
      <param name="connection">
                <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象，表示与数据库连接。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 类用文本的查询、 查询 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象，和一个 <see cref="T:System.Data.OracleClient.OracleTransaction" />。
            </summary>
      <param name="commandText">
                查询的文本。
              </param>
      <param name="connection">
                <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象，表示与数据库连接。
              </param>
      <param name="tx">
                其中执行 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的 <see cref="T:System.Data.OracleClient.OracleTransaction" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.Cancel">
      <summary>
              尝试取消执行 <see cref="T:System.Data.OracleClient.OracleCommand" />。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.Clone">
      <summary>
              会创建一份 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。
            </summary>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleCommand" /> 中所有属性值是与原始对象相同的对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.CreateParameter">
      <summary>
              创建的新实例 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
      <summary>
              执行 SQL 语句针对 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> ，并返回受影响的行数。
            </summary>
      <returns>
              对于 UPDATE、 INSERT 和 DELETE 语句，返回值是由该命令影响的行数。
               对于 CREATE TABLE 和 DROP TABLE 语句，则返回值为 0。
               对于所有其他类型的语句，则返回值为-1。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该连接不存在。
                
                  - 或 - 
                
                  连接未打开。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
      <summary>
              执行 SQL 语句针对 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> ，并返回受影响的行数。
            </summary>
      <param name="rowid">
                Base64 字符串表示形式在服务器中的实际行 ID。
              </param>
      <returns>
              对于 UPDATE、 INSERT 和 DELETE 语句，返回值是由该命令影响的行数。
               对于 CREATE TABLE 和 DROP TABLE 语句，则返回值为 0。
               对于所有其他类型的语句，则返回值为-1。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  该连接不存在。
                
                  - 或 - 
                
                  连接未打开。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
      <summary>
              执行查询，并由查询特定于 Oracle 的数据类型作为返回的结果集中返回的第一行的第一列。
               额外的列或行将被忽略。
            </summary>
      <returns>
              在结果中的第一行的第一列将设置为一个特定于 Oracle 的数据类型，则为 null 引用，如果结果为 <see langword="REF CURSOR" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
      <summary>
              将发送 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 到 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 并生成 <see cref="T:System.Data.OracleClient.OracleDataReader" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
              将发送 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 到 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, ，并生成 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 使用一种 <see cref="T:System.Data.CommandBehavior" /> 值。
            </summary>
      <param name="behavior">
                <see cref="T:System.Data.CommandBehavior" /> 值之一。
              </param>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
      <summary>
              执行查询，并由查询作为.NET Framework 数据类型返回的结果集中返回的第一行的第一列。
               额外的列或行将被忽略。
            </summary>
      <returns>
              在结果中的第一行的第一列将设置为.NET Framework 数据类型，或者如果结果集为空，则为 null 引用或结果是 <see langword="REF CURSOR" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.Prepare">
      <summary>
              在数据源中创建该命令的已准备好 （或已编译） 版本。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 未设置。
                
                  - 或 - 
                
                  <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 不为 <see cref="M:System.Data.OracleClient.OracleConnection.Open" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout">
      <summary>
              重置 <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> 属性设置为默认值。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 使用关联的类 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象。
            </summary>
      <param name="adapter">
                <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 要与此关联对象 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
      <summary>
              从在指定的存储过程中检索参数信息 <see cref="T:System.Data.OracleClient.OracleCommand" /> 并填充 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 的指定集合 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。
            </summary>
      <param name="command">
                <see cref="T:System.Data.OracleClient.OracleCommand" /> 引用存储的过程将为派生参数信息。
                 派生的参数添加到 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 集合 <see cref="T:System.Data.OracleClient.OracleCommand" />。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  命令文本不是有效的存储的过程名称，或 <see cref="T:System.Data.CommandType" /> 指定未 <see cref="F:System.Data.CommandType.StoredProcedure" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
      <summary>
              获取自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 在数据库上执行删除操作所需的对象。
            </summary>
      <returns>
              自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象所需执行删除操作。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>
              获取自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 在数据库上执行删除操作所需的对象。
            </summary>
      <param name="useColumnsForParameterNames">
                如果为 true，则生成匹配的列名称，如有可能的参数名。
                 如果为 false，则生成 @p1、 @p2，等等。
              </param>
      <returns>
              自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象所需执行删除操作。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
      <summary>
              获取自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 在数据库上执行插入操作所需的对象。
            </summary>
      <returns>
              自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象所需执行插入操作。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>
              获取自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 在数据库上执行插入操作所需的对象。
            </summary>
      <param name="useColumnsForParameterNames">
                如果为 true，则生成匹配的列名称，如有可能的参数名。
                 如果为 false，则生成 @p1、 @p2，等等。
              </param>
      <returns>
              自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象所需执行插入操作。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
      <summary>
              获取自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 在数据库上执行更新所需的对象。
            </summary>
      <returns>
              自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象所需执行更新。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>
              获取自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 在数据库上执行更新所需的对象。
            </summary>
      <param name="useColumnsForParameterNames">
                如果为 true，则生成匹配的列名称，如有可能的参数名。
                 如果为 false，则生成 @p1、 @p2，等等。
              </param>
      <returns>
              自动生成 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象所需执行更新。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
      <summary>
              给定在正确的目录的情况下不带引号的标识符，将返回正确带引号的该标识符，包括正确转义任何在标识符中嵌入的引号的形式。
            </summary>
      <param name="unquotedIdentifier">
                原始的不带引号的标识符。
              </param>
      <returns>
              带引号的标识符版本。
               适当地转义标识符中嵌入的引号。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>
              给定带引号的标识符，将返回该标识符，包括正确取消转义的正确不带引号的形式嵌入的任何引号标识符中。
            </summary>
      <param name="quotedIdentifier">
                将删除其嵌入的引号的标识符。
              </param>
      <returns>
              不带引号的标识符，其嵌入的引号正确取消转义。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 类，具有指定的连接字符串。
            </summary>
      <param name="connectionString">
                用于打开数据库的连接。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.BeginTransaction">
      <summary>
              开始数据库事务。
            </summary>
      <returns>
              表示新事务的对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  不支持并行事务。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
              在具有指定数据库开始一个事务 <see cref="T:System.Data.IsolationLevel" /> 值。
            </summary>
      <param name="il">
                此连接事务隔离级别。
              </param>
      <returns>
              表示新事务的对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  不支持并行事务。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)">
      <summary>
              更改已打开的 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的当前数据库。
            </summary>
      <param name="value">
                要代替当前数据库加以使用的数据库的名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  数据库名称无效。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  连接未打开。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  不能更改数据库。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.ClearAllPools">
      <summary>
              清空连接池。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)">
      <summary>
              清空与指定连接关联的连接池。
            </summary>
      <param name="connection">
                要从池中清除的 <see cref="T:System.Data.OracleClient.OracleConnection" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.Close">
      <summary>
              关闭与数据库之间的连接。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.CreateCommand">
      <summary>
              创建并返回 <see cref="T:System.Data.OracleClient.OracleCommand" /> 与关联对象 <see cref="T:System.Data.OracleClient.OracleConnection" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>
              在指定的事务中登记为分布式事务。
            </summary>
      <param name="distributedTransaction">
                对用于登记的现有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的引用。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>
              在指定的事务中登记为分布式事务。
            </summary>
      <param name="transaction">
                对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.GetSchema">
      <summary>
              返回的数据源的架构信息 <see cref="T:System.Data.OracleClient.OracleConnection" />。
            </summary>
      <returns>
              一个包含架构信息的 <see cref="T:System.Data.DataTable" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)">
      <summary>
              返回的数据源的架构信息 <see cref="T:System.Data.OracleClient.OracleConnection" /> 使用架构名称指定的字符串。
            </summary>
      <param name="collectionName">
                指定要返回的架构的名称。
              </param>
      <returns>
              一个包含架构信息的 <see cref="T:System.Data.DataTable" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  将 <paramref name="collectionName" /> 指定为 null。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])">
      <summary>
              返回的数据源的架构信息 <see cref="T:System.Data.OracleClient.OracleConnection" /> 架构名称和指定的字符串数组的限制值使用指定的字符串。
            </summary>
      <param name="collectionName">
                指定要返回的架构的名称。
              </param>
      <param name="restrictionValues">
                请求的架构的一组限制值。
              </param>
      <returns>
              一个包含架构信息的 <see cref="T:System.Data.DataTable" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  将 <paramref name="collectionName" /> 指定为 null。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.Open">
      <summary>
              打开与数据库的连接由指定的属性设置 <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  连接未打开。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  不能更改数据库。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone">
      <summary>
              创建作为当前实例副本的新对象。
            </summary>
      <returns>
              此实例副本的新对象...
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。
               所提供的连接字符串为实例的内部连接信息提供数据。
            </summary>
      <param name="connectionString">
                对象内部连接信息的基础。
                 分析为名称/值对。
                 无效的键名会引发 <see cref="T:System.Collections.Generic.KeyNotFoundException" />。
              </param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
                  连接字符串中包含无效的键名。
                </exception>
      <exception cref="T:System.FormatException">
                  连接字符串中包含无效的值（具体而言，需要使用布尔值或数值，但字符串中并未提供）。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.Clear">
      <summary>
              清除 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例的内容。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.ContainsKey(System.String)">
      <summary>
              确定 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 是否包含特定键。
            </summary>
      <param name="keyword">
                要在 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中定位的键。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 包含具有指定的元素键; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="keyword" /> 为 Null（在 Visual Basic 中为 <see langword="Nothing" />）
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.Remove(System.String)">
      <summary>
              从 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例中移除具有指定的键的项。
            </summary>
      <param name="keyword">
                要从此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。
              </param>
      <returns>
              <see langword="true" /> 如果该键存在的连接字符串中并已被删除， <see langword="false" /> 如果该键不存在。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="keyword" /> 为 Null（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>
              指示此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例中是否存在指定的键。
            </summary>
      <param name="keyword">
                要在 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中定位的键。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 包含一个具有指定的项键; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>
              从此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中检索与提供的键相对应的值。
            </summary>
      <param name="keyword">
                要检索的项的键。
              </param>
      <param name="value">
                与 <paramref name="keyword." /> 对应的值
              </param>
      <returns>
              如果在连接字符串中找到 <paramref name="keyword" />，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 与指定的 SQL SELECT 语句一起使用的类。
            </summary>
      <param name="selectCommand">
                <see cref="T:System.Data.OracleClient.OracleCommand" /> ，是 SQL SELECT 语句或存储的过程，并将设置为 <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> 属性 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类，具有一个 SQL SELECT 语句和一个 <see cref="T:System.Data.OracleClient.OracleConnection" />。
            </summary>
      <param name="selectCommandText">
                一个字符串，它 SQL SELECT 语句或存储的过程以通过使用 <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> 属性 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />。
              </param>
      <param name="selectConnection">
                <see cref="T:System.Data.OracleClient.OracleConnection" /> 表示的连接。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类与一个 SQL SELECT 语句和连接字符串。
            </summary>
      <param name="selectCommandText">
                一个字符串，它 SQL SELECT 语句或存储的过程以通过使用 <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> 属性 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />。
              </param>
      <param name="selectConnectionString">
                连接字符串。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.ICloneable.Clone" />。
            </summary>
      <returns>
              作为此实例副本的新对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.Close">
      <summary>
              关闭 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)">
      <summary>
              以布尔值的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              一个布尔值，这是列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)">
      <summary>
              以字节的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              以字节的形式指定列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
              读取字节的流从指定的列偏移量到缓冲区作为一个数组，给定的缓冲区偏移量处开始。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <param name="fieldOffset">
                读取的操作即将开始的字段中的索引。
              </param>
      <param name="buffer2">
                若要读取的字节流读入的缓冲区。
              </param>
      <param name="bufferoffset">
                索引位置 <paramref name="buffer" /> 开始写入操作。
              </param>
      <param name="length">
                要读取的字节数。
              </param>
      <returns>
              读取的实际字节数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)">
      <summary>
              字符的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定为字符列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
              读取字符流，从指定的列偏移量到缓冲区作为一个数组，从给定的缓冲区偏移量开始。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <param name="fieldOffset">
                中开始读取的操作所在的行的索引。
              </param>
      <param name="buffer2">
                若要将数据复制到的缓冲区。
              </param>
      <param name="bufferoffset">
                索引位置 <paramref name="buffer" /> 开始写入操作。
              </param>
      <param name="length">
                要读取的字符数。
              </param>
      <returns>
              读取的实际字符数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)">
      <summary>
              获取源数据类型的名称。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              源数据类型的名称。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)">
      <summary>
              以 <see langword="DateTime" /> 对象的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see langword="DateTime" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)">
      <summary>
              以 <see langword="Decimal" /> 对象的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see langword="Decimal" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)">
      <summary>
              以双精度浮点数字的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              双精度浮点数字的形式指定列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetEnumerator">
      <summary>
              返回一个可用于循环访问数据读取器中的行的 <see cref="T:System.Collections.IEnumerator" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)">
      <summary>
              获取 <see cref="T:System.Type" /> ，它是该对象的数据类型。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              <see cref="T:System.Type" /> ，它是该对象的数据类型。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)">
      <summary>
              获取指定列的值作为单精度浮点数。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              作为单精度浮点数的指定列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)">
      <summary>
              以全局唯一标识符 (GUID) 的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              以 GUID 形式表示的指定列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)">
      <summary>
              16 位有符号整数形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列作为 16 位有符号整数的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)">
      <summary>
              作为 32 位有符号整数获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              作为 32 位有符号整数指定列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)">
      <summary>
              以 64 位有符号整数的形式获取指定列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列作为 64 位有符号整数的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetName(System.Int32)">
      <summary>
              获取指定列的名称。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              一个字符串，表示指定列的名称。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleString" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleString" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)">
      <summary>
              获取指定列的值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)">
      <summary>
              获取以其 Oracle 格式表示的指定序号处的列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              要返回的 Oracle 值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])">
      <summary>
              获取 Oracle 格式中的当前行中的所有属性列。
            </summary>
      <param name="values">
                类型的数组 <see cref="T:System.Object" /> 向其复制属性列。
              </param>
      <returns>
              数组中的 <see cref="T:System.Object" /> 实例数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)">
      <summary>
              获取列序号，给定的列的名称。
            </summary>
      <param name="name">
                列的名称。
              </param>
      <returns>
              从零开始的列序号。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>
              获取 <see langword="Object" /> ，它表示的基础提供程序特定的字段类型。
            </summary>
      <param name="i">
                一个 <see cref="T:System.Int32" />。
              </param>
      <returns>
              获取 <see cref="T:System.Object" /> ，它表示的基础提供程序特定的字段类型。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>
              获取 <see langword="Object" /> ，它表示的基础提供程序特定的字段类型。
            </summary>
      <param name="i">
                一个 <see cref="T:System.Int32" />。
              </param>
      <returns>
              获取 <see cref="T:System.Object" /> ，它表示的基础提供程序特定的字段类型。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>
              获取基础提供程序特定值的表示形式的对象的数组。
            </summary>
      <param name="values">
                一个 <see cref="T:System.Object" /> 数组。
              </param>
      <returns>
              数组中的 <see cref="T:System.Object" /> 实例数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetSchemaTable">
      <summary>
              返回 <see cref="T:System.Data.DataTable" /> 描述 OracleDataReader 的列元数据。
            </summary>
      <returns>
              一个描述列元数据的 <see cref="T:System.Data.DataTable" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetString(System.Int32)">
      <summary>
              获取指定列的值作为字符串。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              字符串形式指定列的值。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)">
      <summary>
              获取指定列的值 <see langword="System.TimeSpan" />。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              指定列的值 <see cref="T:System.TimeSpan" />。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  指定的强制转换无效。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)">
      <summary>
              获取以其本机格式表示的指定序号处的列的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              要返回的值。
            </returns>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  值是太大，无法存储在.NET 十进制。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])">
      <summary>
              使用来填充数组的对象的当前行的列的值。
            </summary>
      <param name="values">
                类型的数组 <see cref="T:System.Object" /> 向其复制属性列。
              </param>
      <returns>
              数组中的 <see cref="T:System.Object" /> 实例数。
            </returns>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  值是太大，无法存储在.NET 十进制。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)">
      <summary>
              获取一个值，该值指示列是否包含不存在或缺少的值。
            </summary>
      <param name="i">
                从零开始的列序号。
              </param>
      <returns>
              <see langword="true" /> 如果指定的列的值等效于 <see cref="T:System.DBNull" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.NextResult">
      <summary>
              前移 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 到下一个结果 
            </summary>
      <returns>
              <see langword="true" /> 如果有多个结果集;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.Read">
      <summary>
              前移 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 到下一个记录。
            </summary>
      <returns>
              <see langword="true" /> 如果有多个行;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Data.OracleClient.OracleDateTime)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 从现有的结构 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象。
            </summary>
      <param name="from">
                现有 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 从中进行复制的对象。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.DateTime)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 用指定的结构 <see cref="T:System.DateTime" />。
            </summary>
      <param name="dt">
                指定的 <see cref="T:System.DateTime" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的参数初始化年、 月和天的新结构。
            </summary>
      <param name="year">
                一个整数值，表示新的年 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="month">
                表示新的月份的整数值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="day">
                一个整数值，表示新的每月天数 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的参数初始化年、 月、 日和新结构的日历。
            </summary>
      <param name="year">
                一个整数值，表示新的年 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="month">
                表示新的月份的整数值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="day">
                一个整数值，表示新的每月天数 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="calendar">
                <see cref="T:System.Globalization.Calendar" /> 的此实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的参数初始化年、 月、 日、 小时、 分钟和第二个新的结构。
            </summary>
      <param name="year">
                一个整数值，表示新的年 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="month">
                表示新的月份的整数值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="day">
                一个整数值，表示新的每月天数 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="hour">
                一个整数值表示的小时部分新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="minute">
                一个整数值表示时间的分钟数新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="second">
                一个整数值表示的第二个新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的参数初始化年、 月、 日、 小时、 分钟和第二个用于指定日历的新结构。
            </summary>
      <param name="year">
                一个整数值，表示新的年 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="month">
                表示新的月份的整数值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="day">
                一个整数值，表示新的每月天数 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="hour">
                一个整数值表示的小时部分新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="minute">
                一个整数值表示时间的分钟数新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="second">
                一个整数值表示的第二个新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="calendar">
                <see cref="T:System.Globalization.Calendar" /> 的此实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的参数初始化年、 月、 日、 小时、 分钟、 秒和毫秒，新的结构。
            </summary>
      <param name="year">
                一个整数值，表示新的年 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="month">
                表示新的月份的整数值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="day">
                一个整数值，表示新的每月天数 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="hour">
                一个整数值表示的小时部分新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="minute">
                一个整数值表示时间的分钟数新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="second">
                一个整数值表示的第二个新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="millisecond">
                一个整数值表示的新毫秒 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的参数初始化新结构的指定日历的年、 月、 日、 小时、 分钟、 秒和毫秒。
            </summary>
      <param name="year">
                一个整数值，表示新的年 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="month">
                表示新的月份的整数值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="day">
                一个整数值，表示新的每月天数 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="hour">
                一个整数值表示的小时部分新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="minute">
                一个整数值表示时间的分钟数新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="second">
                一个整数值表示的第二个新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="millisecond">
                一个整数值表示的新毫秒 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="calendar">
                <see cref="T:System.Globalization.Calendar" /> 的此实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int64)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，使用所提供的计时周期数。
            </summary>
      <param name="ticks">
                以 100 毫微秒为单位表示的时间段。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.CompareTo(System.Object)">
      <summary>
              比较此 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构与所提供的对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                要比较的对象。
              </param>
      <returns>
              一个有符号的数字，指示该实例和对象的相对值。
            
                      返回值 
                    
                      条件 
                    
                      小于零 
                    
                      此结构是小于的对象。
                    
                      零 
                    
                      此结构是与对象相同。
                    
                      大于零 
                    
                      此结构是大于的对象 
                    
                      对象为 null 引用 (<see langword="Nothing" /> 在 Visual Basic 中) 
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Equals(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see langword="true" /> 如果两个值相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象的实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 且这两个相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GetHashCode">
      <summary>
              获取此实例的哈希代码。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GreaterThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GreaterThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.LessThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.LessThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.NotEquals(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              执行逻辑比较的两个实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定它们是否不相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Equality(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see langword="true" /> 如果两个值相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Explicit(System.Data.OracleClient.OracleDateTime)~System.DateTime">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构 <see cref="T:System.DateTime" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              一个 <see cref="T:System.DateTime" /> 结构，它的 <see cref="P:System.DateTime.Date" /> 和 <see cref="P:System.DateTime.TimeOfDay" /> 属性包含相同的日期和时间值 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性所提供的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Explicit(System.String)~System.Data.OracleClient.OracleDateTime">
      <summary>
              将转换 <see langword="String" /> 到 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </summary>
      <param name="x">
                一个 <see langword="String" /> 可转换为 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 中包含的值等于 <see langword="String" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_GreaterThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_GreaterThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Inequality(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              执行逻辑比较的两个实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_LessThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_LessThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Parse(System.String)">
      <summary>
              将指定 <see cref="T:System.String" /> 日期和时间表示形式及其 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 等效。
            </summary>
      <param name="s">
                <see langword="String" /> 要进行分析。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构等于的日期和时间指定表示 <see langword="String" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.ToString">
      <summary>
              将此转换 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构 <see cref="T:System.String" />。
            </summary>
      <returns>
              一个 <see langword="String" /> 表示 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用关于异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="si">
                <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存关于所引发异常的序列化对象数据。
              </param>
      <param name="context">
                <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含关于源或目标的上下文信息。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleInfoMessageEventArgs.ToString">
      <summary>
              检索的字符串表示形式 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件。
            </summary>
      <returns>
              一个字符串，表示 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
      <summary>
              将数据从指定追加 <see langword="LOB" /> 与当前 <see langword="LOB" />。
            </summary>
      <param name="source">
                <see langword="LOB" /> 要从其中追加数据。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  源 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或释放。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.BeginBatch">
      <summary>
              避免在执行多个读取的操作时激发服务器端触发器。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
      <summary>
              避免服务器端触发器激发时执行多个读和写操作中指定的访问模式。
            </summary>
      <param name="mode">
                模式 (之一 <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> 值) 在其中 <see langword="LOB" /> 可以访问之间这 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> 调用和相应 <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> 调用。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Clone">
      <summary>
              创建一个新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象，可引用同一个 Oracle <see langword="LOB" /> 与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。
            </summary>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象，可引用同一个 Oracle <see langword="LOB" /> 与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
      <summary>
              从该副本 <see cref="T:System.Data.OracleClient.OracleLob" /> 到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。
            </summary>
      <param name="destination">
                目标 <see cref="T:System.Data.OracleClient.OracleLob" />。
              </param>
      <returns>
              已复制的字节数。
               这不包括任何已填充的字节。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Data.OracleClient.OracleLob" /> 中指定 <paramref name="destination" /> 参数为 null。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
      <summary>
              从该副本 <see cref="T:System.Data.OracleClient.OracleLob" /> 到目标 <see cref="T:System.Data.OracleClient.OracleLob" /> 与指定的数据量。
            </summary>
      <param name="destination">
                目标 <see cref="T:System.Data.OracleClient.OracleLob" />
              </param>
      <param name="destinationOffset">
                要复制到的偏移量。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数个字节。
              </param>
      <returns>
              已复制的字节数。
               这不包括任何已填充的字节。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Data.OracleClient.OracleLob" /> 中指定 <paramref name="destination" /> 参数已满。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  中指定的值 <paramref name="destinationOffset" /> 参数小于零或大于 4 千兆字节。
                
                  - 或 - 
                
                  中指定的值 <paramref name="destinationOffset" /> 参数 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型不是偶数。
                
                  - 或 - 
                
                  必须指定 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 为偶数的字节的数据类型。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
      <summary>
              从该副本 <see cref="T:System.Data.OracleClient.OracleLob" /> 到目标 <see cref="T:System.Data.OracleClient.OracleLob" /> 具有指定的数据，以及源偏移量。
            </summary>
      <param name="sourceOffset">
                要从其中复制偏移量。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <param name="destination">
                目标 <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />。
              </param>
      <param name="destinationOffset">
                要复制到目标偏移量。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <param name="amount">
                数据，以字节为单位，若要复制的数量。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <returns>
              已复制的字节数。
               这不包括任何已填充的字节。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Data.OracleClient.OracleLob" /> 中指定 <paramref name="destination" /> 参数已满。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  中指定的值 <paramref name="amount" />, ，<paramref name="sourceOffset" />, ，或 <paramref name="destinationOffset" /> 参数小于零或大于 4 千兆字节。
                
                  - 或 - 
                
                  中指定的值 <paramref name="amount" />, ，<paramref name="sourceOffset" />, ，或 <paramref name="destinationOffset" /> 参数 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型不是偶数。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.EndBatch">
      <summary>
              允许服务器端触发器继续执行多个写入操作后的激发。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Erase">
      <summary>
              将清除所有数据从此 <see cref="T:System.Data.OracleClient.OracleLob" />。
            </summary>
      <returns>
              清除的字节数。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
      <summary>
              清除指定的数量的数据，这 <see cref="T:System.Data.OracleClient.OracleLob" />。
            </summary>
      <param name="offset">
                从要擦除的偏移量。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <param name="amount">
                数据，以字节为单位，擦除数量。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <returns>
              清除的字节数。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Flush">
      <summary>
              当前不支持。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
              从当前读取的字节序列 <see cref="T:System.Data.OracleClient.OracleLob" /> 流并使提升读取的字节数的流中的位置。
            </summary>
      <param name="buffer">
                字节数组。
                 此方法返回时，该缓冲区包含指定的字节数组之间的值 <paramref name="offset" /> 和 (<paramref name="offset" /> + <paramref name="count" />) 由从当前源中读取的字节替换。
              </param>
      <param name="offset">
                <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <param name="count">
                要从当前流中最多读取的字节数。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <returns>
              读入缓冲区中的总字节数。
               这可能小于请求的字节数如果许多字节当前不可用，或为零 (0) 如果已到达流结尾。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  中的值 <paramref name="offset" /> 或 <paramref name="count" /> 参数不是正数。
                
                  - 或 - 
                
                  偏移量和计数参数的总和大于缓冲区长度。
                
                  - 或 - 
                
                  中指定的值 <paramref name="amount" /> 或 <paramref name="offset" /> 参数小于零或大于 4 千兆字节。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
              对当前设置的位置 <see cref="T:System.Data.OracleClient.OracleLob" /> 流。
            </summary>
      <param name="offset">
                相对于原点的字节偏移量。
                 如果 <paramref name="offset" /> 是负数，新位置之前指定的位置 <paramref name="origin" /> 按指定的字节数 <paramref name="offset" />。
                 如果 <paramref name="offset" /> 为零，新的位置是由指定的位置 <paramref name="origin" />。
                 如果 <paramref name="offset" /> 是正数，由指定的位置的新位置之后 <paramref name="origin" /> 按指定的字节数 <paramref name="offset" />。
              </param>
      <param name="origin">
                <see cref="T:System.IO.SeekOrigin" /> 类型的值，指示用于获取新位置的参考点。
              </param>
      <returns>
              当前流中的新位置。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="origin" /> 参数不包含有效的值。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  最终位置不在值的长度。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或释放。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
      <summary>
              设置的长度 <see cref="T:System.Data.OracleClient.OracleLob" /> 流式传送到小于当前长度的值。
            </summary>
      <param name="value">
                所需的当前长度 <see cref="T:System.Data.OracleClient.OracleLob" /> 以字节为单位的流。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  中指定的值 <paramref name="value" /> 参数 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型不是偶数。
                
                  - 或 - 
                
                  中指定的值 <paramref name="value" /> 参数小于零或大于 4 千兆字节。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
              将一个字节序列写入当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流，并使该流中的当前位置提升写入的字节数。
            </summary>
      <param name="buffer">
                字节数组。
                 此方法在复制中指定的字节数 <paramref name="count" /> 从 <paramref name="buffer" /> 写入当前流。
              </param>
      <param name="offset">
                <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <param name="count">
                要写入当前流的字节数。
                 有关 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，这必须是偶数。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  中的值 <paramref name="offset" /> 或 <paramref name="count" /> 参数不是正数。
                
                  - 或 - 
                
                  总和 <paramref name="offset" /> 和 <paramref name="count" /> 参数大于 <paramref name="buffer" /> 长度。
                
                  - 或 - 
                
                  中指定的值 <paramref name="count" /> 或 <paramref name="offset" /> 参数小于零或大于 4 千兆字节。
                
                  - 或 - 
                
                  必须指定 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 为偶数的字节的数据类型。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  操作不是在一个事务内 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
      <summary>
              将一个字节写入当前位置以 <see cref="T:System.Data.OracleClient.OracleLob" /> 流，并将流内的位置提升一个字节。
            </summary>
      <param name="value">
                要写入流中的字节。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 从现有的结构。
            </summary>
      <param name="from">
                现有 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 从中创建新的结构的结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Int32)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构与指定的月数。
            </summary>
      <param name="months">
                月数。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Int32,System.Int32)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 限于指定数目年份和月份的结构。
            </summary>
      <param name="years">
                年份数。
              </param>
      <param name="months">
                月数。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  该参数指定 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 值小于 <see cref="F:System.Data.OracleClient.OracleMonthSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleMonthSpan.MaxValue" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.CompareTo(System.Object)">
      <summary>
              比较此 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构与所提供的对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                要比较的对象。
              </param>
      <returns>
              一个有符号的数字，指示该实例和对象的相对值。
            
                      返回值 
                    
                      条件 
                    
                      小于零 
                    
                      此实例是早于该对象。
                    
                      零 
                    
                      此实例与对象相同。
                    
                      大于零 
                    
                      此实例大于对象 
                    
                      - 或 - 
                    
                      该对象为空引用 (<see langword="Nothing" />)。
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Equals(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see langword="true" /> 如果两个值相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象的实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 安全以及需要两个相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GetHashCode">
      <summary>
              获取此实例的哈希代码。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GreaterThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GreaterThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.LessThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              将进行比较的两个实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.LessThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.NotEquals(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              执行逻辑比较的两个实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定它们是否不相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Equality(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see langword="true" /> 如果两个值相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Explicit(System.Data.OracleClient.OracleMonthSpan)~System.Int32">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构 <see langword="Int32" />。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构将转换为 <see langword="Int32" />。
              </param>
      <returns>
              一个 <see langword="Int32" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Explicit(System.String)~System.Data.OracleClient.OracleMonthSpan">
      <summary>
              将字符串转换为 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </summary>
      <param name="x">
                要转换为字符串 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_GreaterThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_GreaterThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Inequality(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              执行逻辑比较的两个实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_LessThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_LessThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Parse(System.String)">
      <summary>
              将指定 <see cref="T:System.String" /> 日期和时间表示形式及其 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 等效。
            </summary>
      <param name="s">
                要转换的 <see langword="String" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构等于的日期和时间指定表示 <see langword="String" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.ToString">
      <summary>
              将此转换 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构 <see cref="T:System.String" />。
            </summary>
      <returns>
              一个 <see langword="String" /> 表示 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Data.OracleClient.OracleNumber)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，使用所提供 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="from">
                提供 <see cref="T:System.Data.OracleClient.OracleNumber" /> 将作为新的值使用 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Decimal)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，使用所提供 <see cref="T:System.Decimal" /> 值。
            </summary>
      <param name="decValue">
                <see cref="T:System.Decimal" /> 值存储为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Double)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 使用提供的双精度值。
            </summary>
      <param name="dblValue">
                将用作新的值的提供的双精度值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，使用提供的整数值。
            </summary>
      <param name="intValue">
                提供的整数值将用作新值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Int64)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，使用提供的长整型值。
            </summary>
      <param name="longValue">
                将用作新的值的提供的长整型值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Abs(System.Data.OracleClient.OracleNumber)">
      <summary>
              获取数值的绝对值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </summary>
      <param name="n">
                <see langword="OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该无符号的数值表示数值的绝对值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Acos(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算反双曲余弦值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              以弧度计量的角度。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Add(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算两个总和 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含的总和。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Asin(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算反双曲正弦值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              以弧度计量的角度。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Atan(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算反双曲正切值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              以弧度计量的角度。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Atan2(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算两个反双曲正切值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              以弧度计量的角度。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Ceiling(System.Data.OracleClient.OracleNumber)">
      <summary>
              返回大于或等于指定的最小整数 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构为其上限值进行计算。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleNumber" /> 表示最小整数大于或等于指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.CompareTo(System.Object)">
      <summary>
              将此实例的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构与所提供的对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                要比较的对象。
              </param>
      <returns>
              一个有符号的数字，指示该实例和对象的相对值。
            
                      返回值 
                    
                      条件 
                    
                      小于零 
                    
                      此实例是早于该对象。
                    
                      零 
                    
                      此实例与对象相同。
                    
                      大于零 
                    
                      此实例大于该对象，或者此对象为空引用 (<see langword="Nothing" /> 在 Visual Basic 中) 
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Cos(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的余弦值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <paramref name="n" /> 的余弦值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Cosh(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的双曲余弦值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <paramref name="n" /> 的双曲余弦值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Divide(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构除以第二个的结果。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含除法运算的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Equals(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象的实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 且这两个相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Exp(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算 e 的幂 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               常数 e 等于 2.71828182845904，是自然对数的底数。
            </summary>
      <param name="p">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              数字的幂 <paramref name="p" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Floor(System.Data.OracleClient.OracleNumber)">
      <summary>
              指定将舍入 <see cref="T:System.Data.OracleClient.OracleNumber" /> 数字到下一个较小的整数。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 为其最小值是要计算的结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它包含的整数部分 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GetHashCode">
      <summary>
              返回此实例的哈希代码 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GreaterThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GreaterThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数，以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.LessThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.LessThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算自然对数 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               自然对数基于常量 e (2.71828182845904)。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              自然对数 <paramref name="n" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 到您指定的基。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="newBase">
                用户指定 <see cref="T:System.Data.OracleClient.OracleNumber" />。
              </param>
      <returns>
              指定数字在使用指定底的对数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>
              计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 到您指定的基。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="newBase">
                用户指定的整数。
              </param>
      <returns>
              指定数字在使用指定底的对数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log10(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算一个数字的对数。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              10 为底数指定的数字。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Max(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              返回两个较大 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数值。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              较大的 <paramref name="x" /> 或 <paramref name="y" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Min(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              返回两个较小 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数值。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              较小的 <paramref name="x" /> 或 <paramref name="y" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Modulo(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算所得结果的模数除以第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含的模数除法运算的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Multiply(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算两个产品 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含相乘的积。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Negate(System.Data.OracleClient.OracleNumber)">
      <summary>
              值求反 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleNumber" /> 用 x、 的负值或零，如果 <paramref name="x" /> 为零。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.NotEquals(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数，以确定它们是否不相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Addition(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算两个总和 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含的总和。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Division(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算除以第一个结果， <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含除法运算的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Equality(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Decimal">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构 <see cref="T:System.Decimal" />。
            </summary>
      <param name="x">
                要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see langword="Decimal" /> 结构，其值等于 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Double">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构 <see cref="T:System.Double" />。
            </summary>
      <param name="x">
                要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see langword="Double" /> 结构，其值等于 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Int32">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构 <see cref="T:System.Int32" />。
            </summary>
      <param name="x">
                要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see langword="Int32" /> 结构，其值等于 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Int64">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构 <see cref="T:System.Int64" />。
            </summary>
      <param name="x">
                要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see langword="Int64" /> 结构，其值等于 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Decimal)~System.Data.OracleClient.OracleNumber">
      <summary>
              将转换提供 <see langword="Decimal" /> 结构 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                要转换的 <see langword="Decimal" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 等于的值 <see langword="Decimal" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Double)~System.Data.OracleClient.OracleNumber">
      <summary>
              将转换提供 <see langword="Double" /> 结构 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                要转换的 <see langword="Double" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性等于的值 <see langword="Double" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Int32)~System.Data.OracleClient.OracleNumber">
      <summary>
              将转换提供 <see langword="Int32" /> 结构 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                要转换的整数结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性等于的值 <see langword="Int32" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Int64)~System.Data.OracleClient.OracleNumber">
      <summary>
              将转换提供 <see langword="Int64" /> 结构 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                要转换的 <see langword="Int64" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性是否等于的值 <see langword="Int64" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.String)~System.Data.OracleClient.OracleNumber">
      <summary>
              将转换提供 <see langword="String" /> 到 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                要转换的 <see langword="String" />。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 等于的值 <see langword="String" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_GreaterThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_GreaterThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数，以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Inequality(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数，以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_LessThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_LessThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleNumber" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Modulus(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算留下相除的余数 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的第二个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含的模数除法。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Multiply(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算两个产品 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含相乘的积。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Subtraction(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的结果中减去第二个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 从第一个结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_UnaryNegation(System.Data.OracleClient.OracleNumber)">
      <summary>
              求反 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 要求反的结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，其值包含求反的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Parse(System.String)">
      <summary>
              将转换 <see cref="T:System.String" /> 到数字表示形式及其 <see cref="T:System.Data.OracleClient.OracleNumber" /> 等效。
            </summary>
      <param name="s">
                <see langword="String" /> 要进行分析。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleNumber" /> 等效于包含在指定的值 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Pow(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算指定的计算结果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构与第二个指定的次幂 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 要乘幂。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 指定幂。
              </param>
      <returns>
              数字 <paramref name="x" /> 的 <paramref name="y" /> 次幂。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Pow(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>
              计算指定的计算结果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的指定次幂 <see langword="Int32" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 要乘幂。
              </param>
      <param name="y">
                <see langword="Int32" /> 结构，它指定一种动力。
              </param>
      <returns>
              数字 <paramref name="x" /> 的 <paramref name="y" /> 次幂。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Round(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>
              获取最接近指定的数字 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值与指定的精度。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构要舍入。
              </param>
      <param name="position">
                返回值中的有效小数位数 （精度） 数。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它包含舍入运算的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Shift(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>
              向左或向右移动指定的位数的数字。
            </summary>
      <param name="n">
                若要对进行操作的数量。
              </param>
      <param name="digits">
                要位移的小数位数的数。
              </param>
      <returns>
              操作的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sign(System.Data.OracleClient.OracleNumber)">
      <summary>
              获取一个值，该值的符号 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 其符号的计算结果的结构。
              </param>
      <returns>
              一个数字，指示的符号 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sin(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的正弦值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <paramref name="n" /> 的正弦值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sinh(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的双曲正弦值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <paramref name="n" /> 的双曲正弦值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sqrt(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算平方根 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              平方根 <paramref name="n" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Subtract(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的结果中减去第二个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 从第一个结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，其 Value 属性包含该减法运算的结果。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Tan(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算正切值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <paramref name="n" /> 的正切值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Tanh(System.Data.OracleClient.OracleNumber)">
      <summary>
              计算的双曲正切值 <see cref="T:System.Data.OracleClient.OracleNumber" />。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
              </param>
      <returns>
              <paramref name="n" /> 的双曲正切值。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.ToString">
      <summary>
              将此转换 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构 <see cref="T:System.String" />。
            </summary>
      <returns>
              一个新 <see cref="T:System.String" /> 对象，其中包含的字符串表示形式 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Truncate(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>
              将截断指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值与所需的位置。
            </summary>
      <param name="n">
                <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构被截断。
              </param>
      <param name="position">
                数字将被截断的十进制位置。
              </param>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构与其 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 截断为指定 <paramref name="position" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类，该类使用参数名称和数据类型。
            </summary>
      <param name="name">
                参数的名称。
              </param>
      <param name="oracleType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <exception cref="T:System.ArgumentException">
                  参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类，该类使用参数名称、 数据类型和长度。
            </summary>
      <param name="name">
                参数的名称。
              </param>
      <param name="oracleType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <param name="size">
                参数的长度。
              </param>
      <exception cref="T:System.ArgumentException">
                  参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类，该类使用参数名称、 数据类型、 长度、 源列名称、 参数方向、 数值精度和其他属性。
            </summary>
      <param name="name">
                参数的名称。
              </param>
      <param name="oracleType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <param name="size">
                参数的长度。
              </param>
      <param name="direction">
                <see cref="T:System.Data.ParameterDirection" /> 值之一。
              </param>
      <param name="isNullable">
                <see langword="true" /> 如果字段的值可以为 null，否则， <see langword="false" />。
              </param>
      <param name="precision">
                所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的小数点左右两侧的总位数。
              </param>
      <param name="scale">
                所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的总小数位数。
              </param>
      <param name="srcColumn">
                源列的名称。
              </param>
      <param name="srcVersion">
                <see cref="T:System.Data.DataRowVersion" /> 值之一。
              </param>
      <param name="value">
                作为 <see cref="T:System.Object" /> 的值的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类，该类使用参数名称、 数据类型、 大小、 方向、 源列、 源版本和其他属性。
            </summary>
      <param name="name">
                要映射的参数的名称。
              </param>
      <param name="oracleType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <param name="size">
                参数的长度。
              </param>
      <param name="direction">
                <see cref="T:System.Data.ParameterDirection" /> 值之一。
              </param>
      <param name="sourceColumn">
                源列的名称。
              </param>
      <param name="sourceVersion">
                <see cref="T:System.Data.DataRowVersion" /> 值之一。
              </param>
      <param name="sourceColumnNullMapping">
                <see langword="true" /> 如果源列可以为 null，否则 <see langword="false" />。
              </param>
      <param name="value">
                作为 <see cref="T:System.Object" /> 的值的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类，该类使用参数名称、 数据类型、 长度和源列名称。
            </summary>
      <param name="name">
                参数的名称。
              </param>
      <param name="oracleType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <param name="size">
                参数的长度。
              </param>
      <param name="srcColumn">
                源列的名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  参数 <paramref name="oracleType" /> 中提供的值不是有效的后端数据类型。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类，该类使用参数名称和一个 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </summary>
      <param name="name">
                参数的名称。
              </param>
      <param name="value">
                一个 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ResetDbType">
      <summary>
              重置与此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 关联的类型。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ResetOracleType">
      <summary>
              重置与此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 关联的类型。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone">
      <summary>
              有关此成员的说明，请参阅 <see cref="M:System.ICloneable.Clone" />。
            </summary>
      <returns>
              作为此实例副本的新对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ToString">
      <summary>
              获取一个包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字符串。
            </summary>
      <returns>
              一个包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.#ctor">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.Data.OracleClient.OracleParameter)">
      <summary>
              添加指定 <see cref="T:System.Data.OracleClient.OracleParameter" /> 到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
            </summary>
      <param name="value">
                要添加到集合中的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
              </param>
      <returns>
              对新的引用 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.Data.OracleClient.OracleParameter" /> 中指定 <paramref name="value" /> 参数已添加到这个或其他 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="value" /> 参数为 null。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.Object)">
      <summary>
              将指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。
            </summary>
      <param name="value">
                要添加到集合的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
              </param>
      <returns>
              新的索引 <see cref="T:System.Data.OracleClient.OracleParameter" /> 集合中的对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType)">
      <summary>
              添加 <see cref="T:System.Data.OracleClient.OracleParameter" /> 到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 给定参数名称和数据类型。
            </summary>
      <param name="parameterName">
                参数的名称。
              </param>
      <param name="dataType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <returns>
              对新的引用 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType,System.Int32)">
      <summary>
              添加 <see cref="T:System.Data.OracleClient.OracleParameter" /> 到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 给定参数名称、 数据类型和列的长度。
            </summary>
      <param name="parameterName">
                参数的名称。
              </param>
      <param name="dataType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <param name="size">
                列的长度。
              </param>
      <returns>
              对新的引用 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)">
      <summary>
              添加 <see cref="T:System.Data.OracleClient.OracleParameter" /> 到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 给定参数名称、 数据类型、 列长度和源列名称。
            </summary>
      <param name="parameterName">
                参数的名称。
              </param>
      <param name="dataType">
                <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。
              </param>
      <param name="size">
                列的长度。
              </param>
      <param name="srcColumn">
                源列的名称。
              </param>
      <returns>
              对新的引用 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Object)">
      <summary>
              添加 <see cref="T:System.Data.OracleClient.OracleParameter" /> 到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 给定参数名称和值。
            </summary>
      <param name="parameterName">
                参数的名称。
              </param>
      <param name="value">
                <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 要添加到集合。
              </param>
      <returns>
              对新的引用 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
      <exception cref="T:System.InvalidCastException">
                  <paramref name="value" /> 参数不是 <see cref="T:System.Data.OracleClient.OracleParameter" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddRange(System.Array)">
      <summary>
              向 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的末尾添加一个值数组。
            </summary>
      <param name="values">
                要添加的 <see cref="T:System.Array" /> 值。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddRange(System.Data.OracleClient.OracleParameter[])">
      <summary>
              向 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的末尾添加一个 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 值数组。
            </summary>
      <param name="values">
                要添加的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 值。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>
              向 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的末尾添加一个值。
            </summary>
      <param name="parameterName">
                参数的名称。
              </param>
      <param name="value">
                要添加的值。
              </param>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Clear">
      <summary>
              删除所有的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象从 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
            </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.Data.OracleClient.OracleParameter)">
      <summary>
              确定是否指定 <see cref="T:System.Data.OracleClient.OracleParameter" /> 处于 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
            </summary>
      <param name="value">
                <see cref="T:System.Data.OracleClient.OracleParameter" /> 值。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 包含的值， <see langword="false" /> 否则为。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.Object)">
      <summary>
              确定指定的对象是否在 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
            </summary>
      <param name="value">
                <see cref="T:System.Object" /> 值。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 包含的值， <see langword="false" /> 否则为。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.String)">
      <summary>
              指示是否 <see cref="T:System.Data.OracleClient.OracleParameter" /> 集合中是否包含具有指定名称。
            </summary>
      <param name="parameterName">
                要在集合中查找的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。
              </param>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              将当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的所有元素复制到指定的一维 <see cref="T:System.Array" /> 中，并以指定的目标 <see cref="T:System.Array" /> 索引位置作为复制到的起始位置。
            </summary>
      <param name="array">
                作为当前 <see cref="T:System.Array" /> 中的元素的复制目标的一维 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
              </param>
      <param name="index">
                一个 32 位整数，它表示 <see cref="T:System.Array" /> 中复制开始处的索引。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.CopyTo(System.Data.OracleClient.OracleParameter[],System.Int32)">
      <summary>
              将当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的所有元素复制到指定的 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中，并以指定的目标索引位置作为复制到的起始位置。
            </summary>
      <param name="array">
                作为当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的元素的复制目标的 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
              </param>
      <param name="index">
                一个 32 位整数，它表示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中复制开始处的索引。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.GetEnumerator">
      <summary>
              返回循环访问 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的枚举数。
            </summary>
      <returns>
              可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.Data.OracleClient.OracleParameter)">
      <summary>
              获取指定的位置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中。
            </summary>
      <param name="value">
                要查找的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
              </param>
      <returns>
              指定的从零开始的位置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 即 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.Object)">
      <summary>
              获取指定的位置 <see cref="T:System.Object" /> 在集合中。
            </summary>
      <param name="value">
                要查找的 <see cref="T:System.Object" />。
              </param>
      <returns>
              指定的从零开始的位置 <see cref="T:System.Object" /> 即 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.String)">
      <summary>
              获取具有指定名称的指定 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的位置。
            </summary>
      <param name="parameterName">
                要查找的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称（区分大小写）。
              </param>
      <returns>
              指定的从零开始的位置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 即 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Insert(System.Int32,System.Data.OracleClient.OracleParameter)">
      <summary>
              在 <see cref="T:System.Data.OracleClient.OracleParameter" /> 中的指定索引处插入一个 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 对象。
            </summary>
      <param name="index">
                应将值插入到的位置的索引（从零开始）。
              </param>
      <param name="value">
                要插入到 <see cref="T:System.Data.OracleClient.OracleParameter" /> 中的 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 对象。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
              将插入 <see cref="T:System.Object" /> 到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中指定索引处。
            </summary>
      <param name="index">
                应将值插入到的位置的索引（从零开始）。
              </param>
      <param name="value">
                一个 <see cref="T:System.Object" /> 中插入 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Remove(System.Data.OracleClient.OracleParameter)">
      <summary>
              从集合中移除指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </summary>
      <param name="value">
                要从集合中移除的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Remove(System.Object)">
      <summary>
              从集合中移除指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。
            </summary>
      <param name="value">
                要从集合中移除的 <see cref="T:System.Object" /> 对象。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.RemoveAt(System.Int32)">
      <summary>
              删除 <see cref="T:System.Data.OracleClient.OracleParameter" /> 集合中的指定索引处的对象。
            </summary>
      <param name="index">
                要移除的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的索引（从零开始）。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.RemoveAt(System.String)">
      <summary>
              删除 <see cref="T:System.Data.OracleClient.OracleParameter" /> 具有指定的名称从集合对象。
            </summary>
      <param name="parameterName">
                名称 <see cref="T:System.Data.OracleClient.OracleParameter" /> 要移除对象。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OraclePermission" /> 类之一 <see cref="T:System.Security.Permissions.PermissionState" /> 值。
            </summary>
      <param name="state">
                <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>
              创建新的权限集。
            </summary>
      <param name="connectionString">
                连接字符串。
              </param>
      <param name="restrictions">
                键的限制。
              </param>
      <param name="behavior">
                其中一个 <see cref="T:System.Data.KeyRestrictionBehavior" /> 枚举。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>
              由派生类实现时，创建并返回当前权限对象的相同副本。
            </summary>
      <returns>
              当前权限对象的副本。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>
              当在派生类中替代时，用 XML 编码重新构造具有指定状态的安全对象。
            </summary>
      <param name="securityElement">
                <see cref="T:System.Security.SecurityElement" /> 表达式。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>
              由派生类实现时，创建并返回属于当前权限和指定权限的交集的权限。
            </summary>
      <param name="target">
                要与当前权限相交的权限。
                 它必须与当前权限属于同一类型。
              </param>
      <returns>
              表示当前权限和指定权限的交集的一个新权限。
               如果交集为空，则此新权限为 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              由派生类实现时，确定当前权限是否为指定权限的子集。
            </summary>
      <param name="target">
                将要测试子集关系的权限。
                 此权限必须与当前权限属于同一类型。
              </param>
      <returns>
              如果当前权限是指定权限的子集，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>
              返回一个值，该值指示是否可以将权限表示为无限制权限语义任何不知情的情况下。
            </summary>
      <returns>
              <see langword="true" /> 如果该权限可以表示为无限制。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>
              创建安全对象及其当前状态的 XML 编码。
            </summary>
      <returns>
              安全对象的 XML 编码，包括任何状态信息。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>
              创建一个权限，该权限是当前权限与指定权限的并集。
            </summary>
      <param name="target">
                与当前权限合并的权限。
                 它必须与当前权限属于同一类型。
              </param>
      <returns>
              表示同时兼具当前权限和指定权限的新权限。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> 类的新实例。
            </summary>
      <param name="action">
                一个表示可以使用声明性安全执行的操作的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>
              返回 <see cref="T:System.Data.OracleClient.OraclePermission" /> 特性属性根据配置的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OraclePermission" /> 对象。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>
              标识是否该属性应序列化的连接字符串。
            </summary>
      <returns>
              <see langword="true" /> 如果该属性应序列化的连接字符串。否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>
              标识是否特性应序列化键限制集合。
            </summary>
      <returns>
              <see langword="true" /> 该属性如果应序列化的一套键限制，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleRowUpdatedEventArgs" /> 类的新实例。
            </summary>
      <param name="row">
                <see cref="T:System.Data.DataRow" /> 通过发送 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。
              </param>
      <param name="command">
                <see cref="T:System.Data.IDbCommand" /> 时执行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 调用。
              </param>
      <param name="statementType">
                其中一个 <see cref="T:System.Data.StatementType" /> 值，该值指定执行查询的类型。
              </param>
      <param name="tableMapping">
                <see cref="T:System.Data.Common.DataTableMapping" /> 通过发送 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
              初始化 <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" /> 类的新实例。
            </summary>
      <param name="row">
                要更新的 <see cref="T:System.Data.DataRow" />。
              </param>
      <param name="command">
                <see cref="T:System.Data.IDbCommand" /> 要更新的过程中执行。
              </param>
      <param name="statementType">
                其中一个 <see cref="T:System.Data.StatementType" /> 值，该值指定执行查询的类型。
              </param>
      <param name="tableMapping">
                <see cref="T:System.Data.Common.DataTableMapping" /> 通过更新发送。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleString" /> 类，并指定要存储的字符串。
            </summary>
      <param name="s">
                要存储的字符串。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.CompareTo(System.Object)">
      <summary>
              将此实例的 <see cref="T:System.Data.OracleClient.OracleString" /> 与提供的对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                要比较的对象。
              </param>
      <returns>
              一个有符号的数字，指示该实例和对象的相对值。
            
                      返回值 
                    
                      条件 
                    
                      小于零 
                    
                      此实例小于对象。
                    
                      零 
                    
                      此实例与对象相同。
                    
                      大于零 
                    
                      此实例大于对象 
                    
                      - 或 - 
                    
                      对象为 null 引用 (<see langword="Nothing" />) 
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              串联两个指定 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleString" /> 包含新串联的值表示两个内容 <see cref="T:System.Data.OracleClient.OracleString" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数以确定它们是否相等。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleString" /> 对象。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              相等比较将返回 <see langword="true" /> 的实例的对象是否 <see cref="T:System.Data.OracleClient.OracleString" /> 安全以及需要两个相等; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GetHashCode">
      <summary>
              获取此实例的哈希代码。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 以确定第一个是否大于第二个操作数。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 以确定第一个是否大于或等于第二个操作数。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 确定第一个是否小于或等于第二个操作数。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数以确定它们是否不相等。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              串联两个指定 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleString" /> 包含新串联的值表示两个内容 <see cref="T:System.Data.OracleClient.OracleString" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数以确定它们是否相等。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 两个实例是否相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 如果两个实例是否不相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString)~System.String">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleString" /> 到 <see cref="T:System.String" />。
            </summary>
      <param name="x">
                要转换的 <see langword="OracleString" />。
              </param>
      <returns>
              一个 <see langword="String" />, ，其内容将与相同 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性 <see langword="OracleString" /> 参数。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 以确定第一个是否大于第二个操作数。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 以确定第一个是否大于或等于第二个操作数。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Implicit(System.String)~System.Data.OracleClient.OracleString">
      <summary>
              将转换 <see cref="T:System.String" /> 参数 <see cref="T:System.Data.OracleClient.OracleString" />。
            </summary>
      <param name="s">
                要转换的 <see cref="T:System.String" />。
              </param>
      <returns>
              <see langword="OracleString" /> 包含的值的指定 <see langword="String" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数以确定它们是否相等。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleString" /> 确定第一个是否小于或等于第二个操作数。
            </summary>
      <param name="x">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <param name="y">
                一个 <see cref="T:System.Data.OracleClient.OracleString" />。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleString" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.ToString">
      <summary>
              将转换 <see langword="OracleString" /> 对象传递给 <see langword="String" />。
            </summary>
      <returns>
              一个 <see langword="String" /> 与此相同的值与 <see langword="OracleString" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 从现有的结构。
            </summary>
      <param name="from">
                现有 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 从中创建新的结构的结构。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构为指定的小时、 分钟和秒数。
            </summary>
      <param name="hours">
                小时数。
              </param>
      <param name="minutes">
                分钟数。
              </param>
      <param name="seconds">
                秒数。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  该参数指定 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 值小于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构为指定的天数、 小时、 分钟和秒数。
            </summary>
      <param name="days">
                天数。
              </param>
      <param name="hours">
                小时数。
              </param>
      <param name="minutes">
                分钟数。
              </param>
      <param name="seconds">
                秒数。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  该参数指定 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 值小于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构为指定的天数、 小时、 分钟、 秒和毫秒数。
            </summary>
      <param name="days">
                天数。
              </param>
      <param name="hours">
                小时数。
              </param>
      <param name="minutes">
                分钟数。
              </param>
      <param name="seconds">
                秒数。
              </param>
      <param name="milliseconds">
                毫秒数。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  该参数指定 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 值小于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" />。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int64)">
      <summary>
              初始化新 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构与指定的刻度数。
            </summary>
      <param name="ticks">
                以 100 毫微秒为单位表示的时间段。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.TimeSpan)">
      <summary>
              新实例初始化 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 用指定的结构 <see cref="T:System.TimeSpan" />。
            </summary>
      <param name="ts">
                指定的 <see cref="T:System.TimeSpan" />。
              </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.CompareTo(System.Object)">
      <summary>
              比较此 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构与所提供的对象并返回对其相对值的指示。
            </summary>
      <param name="obj">
                要比较的对象。
              </param>
      <returns>
              有符号的数字，指示的实例的相对值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构和对象。
            
                      返回值 
                    
                      条件 
                    
                      小于零 
                    
                      此实例是早于该对象。
                    
                      零 
                    
                      此实例与对象相同。
                    
                      大于零 
                    
                      此实例大于该对象，或者此对象为空引用 (<see langword="Nothing" /> 在 Visual Basic 中)。
                    </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Equals(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see langword="true" /> 如果两个值相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Equals(System.Object)">
      <summary>
              将提供的对象参数 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象。
            </summary>
      <param name="value">
                要比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果对象的实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 且这两个相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GetHashCode">
      <summary>
              获取此实例的哈希代码。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GreaterThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GreaterThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 将 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.LessThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.LessThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.NotEquals(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              执行逻辑比较的两个实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定它们是否不相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Equality(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              执行逻辑比较两个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see langword="true" /> 如果两个值相等，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Explicit(System.Data.OracleClient.OracleTimeSpan)~System.TimeSpan">
      <summary>
              将转换 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构 <see cref="T:System.TimeSpan" /> 结构。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构将转换为 <see cref="T:System.TimeSpan" /> 结构。
              </param>
      <returns>
              一个 <see cref="T:System.TimeSpan" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Explicit(System.String)~System.Data.OracleClient.OracleTimeSpan">
      <summary>
              将字符串转换为 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </summary>
      <param name="x">
                要转换为字符串 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_GreaterThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否大于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_GreaterThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否大于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否大于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Inequality(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              执行逻辑比较的两个实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定它们是否相等。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果两个实例是否不相等或 <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> 的两个实例是否相等。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_LessThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否小于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 如果第一个实例小于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_LessThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>
              比较两个实例的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 以确定第一个是否小于或等于第二个。
            </summary>
      <param name="x">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <param name="y">
                <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleBoolean" /> 即 <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> 的第一个实例是否小于或等于第二个实例，否则 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
               如果的任一实例 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 为 null， <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Parse(System.String)">
      <summary>
              将指定 <see cref="T:System.String" /> 日期和时间表示形式及其 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 等效。
            </summary>
      <param name="s">
                <see langword="String" /> 要进行分析。
              </param>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构等于的日期和时间指定表示 <see langword="String" />。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.ToString">
      <summary>
              将此转换 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构 <see cref="T:System.String" />。
            </summary>
      <returns>
              一个 <see langword="String" /> 表示 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTransaction.Commit">
      <summary>
              提交 SQL 数据库事务。
            </summary>
      <exception cref="T:System.Exception">
                  在尝试提交事务时出错。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已提交或回滚事务。
                
                  - 或 - 
                
                  连接已断开。
                </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTransaction.Rollback">
      <summary>
              从挂起状态回滚事务。
            </summary>
      <exception cref="T:System.Exception">
                  在尝试提交事务时出错。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已提交或回滚事务。
                
                  - 或 - 
                
                  连接已断开。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.CanRead">
      <summary>
              获取一个值，该值指示是否 <see langword="BFILE" /> 可以读取流。
            </summary>
      <returns>
              <see langword="false" /> 如果 <see langword="BFILE" /> 已关闭或释放; 否则为 <see langword="true" />。
               始终 <see langword="true" /> 为 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.CanSeek">
      <summary>
              获取一个值，该值指示是否向前和向后查找操作能否执行。
            </summary>
      <returns>
              <see langword="false" /> 如果 <see langword="BFILE" /> 已关闭或释放; 否则为 <see langword="true" />。
               始终 <see langword="true" /> 为 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.CanWrite">
      <summary>
              获取一个值，该值指示对象是否支持写入。
            </summary>
      <returns>
              始终返回 <see langword="false" /> 因为 Oracle <see langword="BFILE" /> 数据类型是只读的。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Connection">
      <summary>
              获取 <see cref="T:System.Data.OracleClient.OracleConnection" /> 此实例所使用的 <see cref="T:System.Data.OracleClient.OracleBFile" />。
            </summary>
      <returns>
              到数据源的连接。
               默认值为 null 值。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.DirectoryName">
      <summary>
              获取与其的目录对象的名称 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象将相关联。
            </summary>
      <returns>
              目录对象的名称。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  尝试调用 <see langword="DirectoryName" /> 对已关闭或释放 <see langword="OracleBFile" /> 对象。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.FileExists">
      <summary>
              获取一个值，该值指示是否包含的物理文件 <see langword="BFILE" /> 在操作系统中存在的数据。
            </summary>
      <returns>
              <see langword="true" /> 如果包含的物理文件 <see langword="BFILE" /> 存在数据; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Data.OracleClient.OracleBFile" /> 关闭或释放对象为止。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  与之连接 <see langword="BFILE" /> 关联已关闭。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.FileName">
      <summary>
              获取名称 <see langword="BFILE" /> 不带路径。
            </summary>
      <returns>
              BFILE 的名称。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Data.OracleClient.OracleBFile" /> 关闭或释放对象为止。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.IsNull">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Data.OracleClient.OracleBFile" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleBFile" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Length">
      <summary>
              获取一个值，返回的长度以字节为单位的物理文件与其 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象将相关联。
            </summary>
      <returns>
              表示以字节为单位的物理文件的长度的长值。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  该流已关闭或释放后调用的方法。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Position">
      <summary>
              获取当前读取居 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流。
            </summary>
      <returns>
              中的当前位置 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  试图将设置一个含有负值或大于流的长度的位置。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  该流已关闭或释放后调用的方法。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Value">
      <summary>
              获取 <see cref="T:System.Array" /> 类型的 <see cref="T:System.Byte" /> ，其中包含 <see cref="T:System.Data.OracleClient.OracleBFile" /> 数据。
            </summary>
      <returns>
              <see cref="T:System.Array" /> 类型的 <see cref="T:System.Byte" /> ，其中包含 <see cref="T:System.Data.OracleClient.OracleBFile" /> 数据。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.IsNull">
      <summary>
              获取一个值，该值指示是否 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构为 null。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see langword="Value" /> 为 null，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)">
      <summary>
              获取从单字节 <see langword="Value" /> 属性整数参数指示的位置位于 <paramref name="index" />。
               如果 <paramref name="index" /> 指示一个位置超出了字节数组的末尾，则引发异常。
            </summary>
      <param name="index">
                要检索的字节的位置。
              </param>
      <returns>
              由整数参数指示的位置处的字节。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.Length">
      <summary>
              获取用字节表示长度 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性。
               此属性是只读的。
            </summary>
      <returns>
              中的二进制数据的长度 <see langword="Value" /> 属性。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.Value">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构。
               此属性是只读的。
            </summary>
      <returns>
              值 <see langword="OracleBinary" /> 结构。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.IsFalse">
      <summary>
              指示是否当前 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see langword="Value" /> 是 <see langword="False" />, ，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.IsNull">
      <summary>
              指示是否的值 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构为 null。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 该结构的值是 Null, ，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.IsTrue">
      <summary>
              指示是否当前 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see langword="Value" /> 是 <see langword="True" />, ，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.Value">
      <summary>
              获取 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的值。
               此属性是只读的。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 是 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.CommandText">
      <summary>
              获取或设置 SQL 语句或存储的过程以对数据库执行。
            </summary>
      <returns>
              SQL 语句或执行存储的过程。
               默认值为空字符串 ("")。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.CommandTimeout">
      <summary>
              获取或设置在终止尝试执行命令并生成错误之前的等待时间。
            </summary>
      <returns>
              时间 （以秒为单位） 以等待要执行的命令。
               默认值为 30 秒。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.CommandType">
      <summary>
              获取或设置一个值，该值指示如何 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 属性将被解释。
            </summary>
      <returns>
              <see cref="T:System.Data.CommandType" /> 值之一。
               默认值为 <see langword="Text" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  该值不是有效的 <see cref="T:System.Data.CommandType" />。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.Connection">
      <summary>
              获取或设置 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的此实例使用的 <see cref="T:System.Data.OracleClient.OracleConnection" />。
            </summary>
      <returns>
              到数据源的连接。
               默认值为 null 值。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 属性在事务执行过程中发生了更改。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible">
      <summary>
              获取或设置一个值，该值指示命令对象是否应在一个自定义的界面控件中可见。
            </summary>
      <returns>
              <see langword="true" />, 如果命令对象应会显示在控件;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.Parameters">
      <summary>
              获取 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
            </summary>
      <returns>
              SQL 语句或存储的过程的参数。
               默认值为空集合。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.Transaction">
      <summary>
              获取或设置要在其中执行 <see cref="T:System.Data.OracleClient.OracleTransaction" /> 的 <see cref="T:System.Data.OracleClient.OracleCommand" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Data.OracleClient.OracleTransaction" />。
               默认值为 null 值。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
      <summary>
              获取或设置一个值，指定如何 <see langword="Update" /> 方法应该应用到的命令结果 <see cref="T:System.Data.DataRow" />。
            </summary>
      <returns>
              <see cref="T:System.Data.UpdateRowSource" /> 值之一。
            </returns>
      <exception cref="T:System.ArgumentException">
                  输入的值不是之一 <see cref="T:System.Data.UpdateRowSource" /> 值。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation">
      <summary>
              获取或设置 <see cref="T:System.Data.Common.CatalogLocation" /> 实例 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类。
            </summary>
      <returns>
              一个 <see cref="T:System.Data.Common.CatalogLocation" /> 对象。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator">
      <summary>
              设置或获取一个字符串，用于为实例的目录分隔符 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类。
            </summary>
      <returns>
              一个字符串，指示的实例一起使用的目录分隔符 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
      <summary>
              获取或设置 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 由此对象 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 对象将生成的 SQL 语句。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象，它是与此关联 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
      <summary>
              获取或设置要用于架构标识符和任何其他标识符之间的分隔符的字符。
            </summary>
      <returns>
              要用作架构分隔符的字符。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.ConnectionString">
      <summary>
              获取或设置用来打开 Oracle 数据库的字符串。
            </summary>
      <returns>
              Oracle 连接字符串中包含的设置，如服务器名称，需要建立初始连接。
               默认值为空字符串 ("")。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout">
      <summary>
              获取等待建立连接在终止尝试并生成错误之前的时间。
            </summary>
      <returns>
              等待连接打开所需的时间（以秒为单位）。
               默认值为 15 秒。
            </returns>
      <exception cref="T:System.ArgumentException">
                  指定的值小于 0。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.Database">
      <summary>
              获取当前数据库的名称或打开连接后要使用的数据库的名称。
            </summary>
      <returns>
              当前数据库的名称或打开连接后要使用的数据库的名称。
               默认值为一个空字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.DataSource">
      <summary>
              获取要连接到 Oracle 服务器的名称。
            </summary>
      <returns>
              要连接到 Oracle 服务器的名称。
               默认值为空字符串 ("")。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.ServerVersion">
      <summary>
              获取一个包含客户端连接到服务器的版本字符串。
            </summary>
      <returns>
              已连接的服务器的版本。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.State">
      <summary>
              获取连接的当前状态。
            </summary>
      <returns>
              <see cref="T:System.Data.ConnectionState" /> 值的按位组合。
               默认值为 <see langword="Closed" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource">
      <summary>
              获取或设置要连接到的 Oracle 数据源的名称。
            </summary>
      <returns>
              为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource" /> 属性的值，或者，如果未提供任何值，则为 <see cref="F:System.String.Empty" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist">
      <summary>
              获取或设置一个值，该值指示是否池进程就会自动登记在创建线程的当前事务上下文中的连接。
            </summary>
      <returns>
              值 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist" /> 属性，或 <see langword="true" /> 如果之前尚未设置该属性。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity">
      <summary>
              获取或设置一个值，该值指示是否在连接中指定"User ID"和"Password"(当 <see langword="false" />) 或当前的 Windows 帐户凭据用于身份验证 (当 <see langword="true" />)。
            </summary>
      <returns>
              值 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity" /> 属性，或 <see langword="false" /> 如果未提供任何。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.IsFixedSize">
      <summary>
              获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 是否具有固定大小。
            </summary>
      <returns>
              <see langword="true" /> 在所有情况下，因为 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 提供固定大小的键/值对的集合。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Item(System.String)">
      <summary>
              获取或设置与指定的键关联的值。
               在 C# 中，此属性为索引器。
            </summary>
      <param name="keyword">
                要获取或设置的项的键。
              </param>
      <returns>
              与指定的键相关联的值。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="keyword" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
                  尝试添加一个密钥，它不存在于可用键内。
                </exception>
      <exception cref="T:System.FormatException">
                  连接字符串中包含无效的值（具体而言，需要使用布尔值或数值，但字符串中并未提供）。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Keys">
      <summary>
              获取包含 <see cref="T:System.Collections.ICollection" /> 中的键的 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的键。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout">
      <summary>
              获取或设置的最短的时间，以秒为单位，为要删除之前在连接池中存活的连接。
            </summary>
      <returns>
              <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout" /> 属性的值，如果未提供任何值，则为 0。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize">
      <summary>
              获取或设置针对此特定连接字符串连接池中所允许的最大连接数。
            </summary>
      <returns>
              值 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize" /> 属性或如果未提供任何 100。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize">
      <summary>
              获取或设置针对此特定连接字符串连接池中所允许的最小连接数。
            </summary>
      <returns>
              值 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize" /> 属性或如果未提供任何为 0。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.OmitOracleConnectionName">
      <summary>
              获取或设置用于启用早期版本的 Oracle (8.1.7.4.1) 的事务回滚的标志。
            </summary>
      <returns>
              <see langword="true" /> 如果启用了事务回滚，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Password">
      <summary>
              获取或设置 Oracle 帐户的密码。
            </summary>
      <returns>
              为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Password" /> 属性的值，或者，如果未提供任何值，则为 <see cref="F:System.String.Empty" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo">
      <summary>
              获取或设置一个布尔值，该值指示如果连接是打开的或者一直处于打开状态，那么安全敏感信息（如密码）是否将不作为连接的一部分返回。
            </summary>
      <returns>
              为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo" /> 属性的值，或者，如果未提供任何值，则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling">
      <summary>
              获取或设置一个布尔值，该值指示是否将建立池连接，或是否会导致每个连接显式打开每个请求连接时的时间。
            </summary>
      <returns>
              为属性 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling" /> 的值，或者，如果未提供任何值，则为 <see langword="true " />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode">
      <summary>
              获取或设置一个布尔值，该值指示如果客户端支持更高版本的 Oracle 客户端中提供的 Unicode 功能，或者它是否非 Unicode 感知。
            </summary>
      <returns>
              为属性 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode" /> 的值，或者，如果未提供任何值，则为 <see langword="false " />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.UserID">
      <summary>
              获取或设置要连接到 Oracle 时要使用的用户 ID。
            </summary>
      <returns>
              为 <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.UserID" /> 属性的值，或者，如果未提供任何值，则为 <see cref="F:System.String.Empty" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Values">
      <summary>
              获取包含 <see cref="T:System.Collections.ICollection" /> 中的值的 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的值。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.DeleteCommand">
      <summary>
              获取或设置 SQL 语句或存储的过程，用于删除数据库中的记录。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleCommand" /> 更新操作期间用于删除数据库中对应的已删除行的记录 <see langword="DataSet" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.InsertCommand">
      <summary>
              获取或设置 SQL 语句或存储的过程，用于将新记录插入数据库。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleCommand" /> 更新操作期间用于将记录插入数据库中对应于中的新行 <see cref="T:System.Data.DataSet" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand">
      <summary>
              获取或设置的 SQL 语句或存储的过程用于在数据库中选择记录。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleCommand" /> ，填充操作过程中，用于从数据库中的放置操作选择记录 <see cref="T:System.Data.DataSet" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />。
            </summary>
      <returns>
              一个表示该命令字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />。
            </summary>
      <returns>
              一个表示该命令字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />。
            </summary>
      <returns>
              一个表示该命令字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>
              有关此成员的说明，请参阅 <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />。
            </summary>
      <returns>
              一个表示该命令字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize">
      <summary>
              获取或设置一个值，启用或禁用批处理支持，并指定可以在一个批次中执行的命令数。
            </summary>
      <returns>
              要处理的每批行数。
            
                      值:
                    
                      结果为︰
                    
                      0
                    
                      批大小没有限制。
                    
                      1
                    
                      禁用批量更新。
                    
                      &gt; 1
                    
                      使用多批发送更改 <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> 一次的操作。
                    
              当将其设置为 1 以外的值与关联的所有命令 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 必须具有其 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 属性设置为 <see langword="None" /> 或 <see langword="OutputParameters" />。
               否则引发异常。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.UpdateCommand">
      <summary>
              获取或设置的 SQL 语句或存储的过程用于更新数据库中的记录。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleCommand" /> 更新操作期间用于更新对应的数据库中记录为已修改的行 <see cref="T:System.Data.DataSet" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.Depth">
      <summary>
              获取一个值，该值指示当前行的嵌套深度。
            </summary>
      <returns>
              当前行的嵌套深度。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.FieldCount">
      <summary>
              获取当前行中的列数。
            </summary>
      <returns>
              如果未定位在有效记录集中，0;否则为当前记录中的列数。
               默认值为 -1。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  没有当前连接到数据源。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.HasRows">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 包含一个或多个行。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 包含一个或多个行; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.IsClosed">
      <summary>
              指示是否 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 已关闭。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 关闭; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.Item(System.Int32)">
      <summary>
              以其本机格式，在给定列序号获取指定列的值。
            </summary>
      <param name="i">
                列序号。
              </param>
      <returns>
              以其本机格式指定列的值。
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  传递的索引超出了范围 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" />。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.Item(System.String)">
      <summary>
              获取指定列的值以其本机格式，在给定列名称。
            </summary>
      <param name="name">
                列名。
              </param>
      <returns>
              以其本机格式指定列的值。
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  找到具有指定名称没有列。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.RecordsAffected">
      <summary>
              获取通过执行 SQL 语句更改、插入或删除的行数。
            </summary>
      <returns>
              更改、插入或删除的行数。
               在为 SELECT 语句; 的-1如果没有行受到影响，则为 0 或语句失败。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Day">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 至一天的结构。
            </summary>
      <returns>
              日期值介于 1 和 31 之间。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Hour">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 一小时的结构。
            </summary>
      <returns>
              一个介于 0 和 23 之间的小时。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.IsNull">
      <summary>
              获取一个值，该值指示是否 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构为 null。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 为 null，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Millisecond">
      <summary>
              获取此实例所表示日期的毫秒部分。
            </summary>
      <returns>
              毫秒，介于 0 和 999 之间。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Minute">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 一分钟的结构。
            </summary>
      <returns>
              分钟 （0 到 59 之间）。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Month">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 与每个月的结构。
            </summary>
      <returns>
              介于 1 和 12 之间的月份。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Second">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构作为第二个。
            </summary>
      <returns>
              介于 0 和 59 之间的第二个。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Value">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </summary>
      <returns>
              此值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Year">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 作为年份的结构。
            </summary>
      <returns>
              介于 1 和 4712 年。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleException.Code">
      <summary>
              以整数形式获取错误的代码部分。
            </summary>
      <returns>
              以整数形式的错误代码部分。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Code">
      <summary>
              获取作为消息的代码部分 <see langword="int" />。
            </summary>
      <returns>
              形式的消息中的代码部分 <see langword="int" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Message">
      <summary>
              获取从数据库发送的消息的完整文本。
            </summary>
      <returns>
              描述消息的文本。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Source">
      <summary>
              获取生成错误的对象的名称。
            </summary>
      <returns>
              生成错误的对象的名称。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanRead">
      <summary>
              获取一个值，该值指示是否 <see langword="LOB" /> 可以读取流。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see langword="LOB" /> 流支持读取，否则 <see langword="false" /> 如果 <see langword="LOB" /> 关闭或释放为止。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanSeek">
      <summary>
              获取一个值，该值指示是否向前和向后查找操作可以执行。
            </summary>
      <returns>
              <see langword="false" /> 如果 <see langword="LOB" /> 被关闭或释放，否则 <see langword="true" />。
               始终 <see langword="true" /> 为 <see cref="F:System.Data.OracleClient.OracleLob.Null" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanWrite">
      <summary>
              始终返回 true，而不管是否 <see langword="LOB" /> 是否支持写入。
            </summary>
      <returns>
              始终返回 <see langword="true" />, ，无论是否已打开或未释放的 <see langword="LOB" /> 是否，支持写入 <see langword="false" /> 如果 <see langword="LOB" /> 关闭或释放为止。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.ChunkSize">
      <summary>
              获取一个值，该值最小从检索或读/写操作期间向服务器发送的字节数。
            </summary>
      <returns>
              最小要检索或发送的字节数。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Connection">
      <summary>
              获取 <see cref="T:System.Data.OracleClient.OracleConnection" /> 此实例所使用的 <see cref="T:System.Data.OracleClient.OracleLob" />。
            </summary>
      <returns>
              到数据源的连接。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsBatched">
      <summary>
              获取一个值，该值指示应用程序调用 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法。
            </summary>
      <returns>
              <see langword="true" /> 如果应用程序调用 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法，否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsNull">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Data.OracleClient.OracleLob" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleLob" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsTemporary">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Data.OracleClient.OracleLob" /> 是临时 <see langword="LOB" />。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleLob" /> 是临时 <see langword="LOB" />, ，否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Length">
      <summary>
              获取一个值，返回的大小 <see cref="T:System.Data.OracleClient.OracleLob" />。
            </summary>
      <returns>
              大小 <see cref="T:System.Data.OracleClient.OracleLob" /> 以字节为单位。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.LobType">
      <summary>
              获取一个值，返回 <see langword="LOB" /> 数据类型。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> 数据类型。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Position">
      <summary>
              获取当前读取居 <see cref="T:System.Data.OracleClient.OracleLob" /> 流。
            </summary>
      <returns>
              中的当前位置 <see cref="T:System.Data.OracleClient.OracleLob" /> 流。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  连接已关闭。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Value">
      <summary>
              获取基础值的等效公共语言运行时流值。
            </summary>
      <returns>
              有关 <see cref="F:System.Data.OracleClient.OracleType.Blob" />, ，类型的数组 <see langword="Byte[]" />。
               有关 <see cref="F:System.Data.OracleClient.OracleType.Clob" /> 和 <see cref="F:System.Data.OracleClient.OracleType.NClob" />, 、 <see langword="String" />。
               对于 null 数据一样， <see cref="T:System.DBNull" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  关闭或释放该对象。
                </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">
                  Oracle 出错。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleMonthSpan.IsNull">
      <summary>
              获取一个值，该值指示是否 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构为 null。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 为 null，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleMonthSpan.Value">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </summary>
      <returns>
              此值 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleNumber.IsNull">
      <summary>
              指示是否 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 此 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构为 null。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 为 null，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleNumber.Value">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。
               此属性是只读的。
            </summary>
      <returns>
              一个数字到 79228162514，介于-79228162514264337593543950335 264,337,593,543,950,335。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.DbType">
      <summary>
              获取或设置参数的 <see cref="T:System.Data.DbType" />。
            </summary>
      <returns>
              <see cref="T:System.Data.DbType" /> 值之一。
               默认值为 <see cref="F:System.Data.DbType.AnsiString" />。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  该属性未设置为有效 <see cref="T:System.Data.DbType" />。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Direction">
      <summary>
              获取或设置一个值，该值指示参数是只可输入的参数、只可输出的参数、双向参数还是存储过程返回值参数。
            </summary>
      <returns>
              <see cref="T:System.Data.ParameterDirection" /> 值之一。
               默认值为 <see langword="Input" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  属性未设置为有效的 <see cref="T:System.Data.ParameterDirection" /> 值之一。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.IsNullable">
      <summary>
              获取或设置一个值，该值指示参数是否接受 null 值。
            </summary>
      <returns>
              <see langword="true" /> 如果接受 null 值，否则 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Offset">
      <summary>
              获取或设置偏移量 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性。
            </summary>
      <returns>
              位置偏移量 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.OracleType">
      <summary>
              获取或设置参数的 <see cref="T:System.Data.OracleClient.OracleType" />。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleType" /> 值，该值是 <see cref="T:System.Data.OracleClient.OracleType" /> 的参数。
               默认值为 <see cref="F:System.Data.OracleClient.OracleType.VarChar" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.ParameterName">
      <summary>
              获取或设置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。
               默认值为一个空字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Precision">
      <summary>
              获取或设置用于表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的最大位数。
            </summary>
      <returns>
              用于表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的最大位数。
               默认值为 0，它表示的数据提供程序设置的精度 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Scale">
      <summary>
              获取或设置所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的小数位数。
            </summary>
      <returns>
              所解析的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的小数位数。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Size">
      <summary>
              获取或设置列中的数据的最大大小（以字节为单位）。
            </summary>
      <returns>
              列中的数据的最大大小（以字节为单位）。
               默认值为 0 (如果不希望指定值的最大大小使用）。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceColumn">
      <summary>
              获取或设置映射到的源列的名称 <see cref="T:System.Data.DataSet" /> ，并且用于加载或返回 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />
            </summary>
      <returns>
              映射到 <see cref="T:System.Data.DataSet" /> 的源列的名称。
               默认值为空字符串("")。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping">
      <summary>
              设置或获取一个值，该值指示源列是否可以为 null。
               这允许 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 来正确生成为 null 的列的 Update 语句。
            </summary>
      <returns>
              <see langword="True" /> 如果源列可以为 null，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceVersion">
      <summary>
              获取或设置 <see cref="T:System.Data.DataRowVersion" /> 来加载时使用 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
      <returns>
              <see cref="T:System.Data.DataRowVersion" /> 值之一。
               默认值为 <see langword="Current" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Value">
      <summary>
              获取或设置参数的值。
            </summary>
      <returns>
              一个对象，它的参数值。
               默认值为 null。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Count">
      <summary>
              返回一个包含中的元素数的整数 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。
               只读。
            </summary>
      <returns>
              以整数形式表示的 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的元素数。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsFixedSize">
      <summary>
              获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 是否具有固定大小。
            </summary>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 具有固定的大小， <see langword="false" /> 否则为。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsReadOnly">
      <summary>
              获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 是否为只读。
            </summary>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 为只读， <see langword="false" /> 否则为。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsSynchronized">
      <summary>
              获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 是否已同步。
            </summary>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 同步时， <see langword="false" /> 否则为。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Item(System.Int32)">
      <summary>
              获取或设置指定索引处的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
            </summary>
      <param name="index">
                要检索的参数的索引（从零开始）。
              </param>
      <returns>
              位于指定索引处的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  指定的索引不存在。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Item(System.String)">
      <summary>
              获取或设置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 具有指定名称。
            </summary>
      <param name="parameterName">
                要检索的参数的名称。
              </param>
      <returns>
              具有指定名称的 <see cref="T:System.Data.OracleClient.OracleParameter" />。
            </returns>
      <exception cref="T:System.IndexOutOfRangeException">
                  指定的名称不存在。
                </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.SyncRoot">
      <summary>
              获取可用于同步对 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的访问的对象。
            </summary>
      <returns>
              可用于同步对 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的访问的对象。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>
              获取一个值，该值指示是否允许使用空白密码。
            </summary>
      <returns>
              <see langword="true" /> 如果允许密码为空，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>
              获取或设置一个值，该值指示是否允许密码为空。
            </summary>
      <returns>
              <see langword="true" /> 如果允许密码为空，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>
              获取或设置允许的连接字符串。
            </summary>
      <returns>
              允许的连接字符串。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>
              标识是否由连接字符串参数的列表标识 <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> 属性是允许的唯一连接字符串参数。
            </summary>
      <returns>
              <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> 值之一。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>
              获取或设置允许或禁止使用的字符串参数的连接。
            </summary>
      <returns>
              一个或多个连接字符串参数，允许或禁止使用。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleRowUpdatedEventArgs.Command">
      <summary>
              获取或设置 <see cref="T:System.Data.OracleClient.OracleCommand" /> 时执行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 调用。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleCommand" /> 时执行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 调用。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleRowUpdatingEventArgs.Command">
      <summary>
              获取或设置 <see cref="T:System.Data.OracleClient.OracleCommand" /> 时要执行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleCommand" /> 时要执行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.IsNull">
      <summary>
              指示是否 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleString" /> 是 <see cref="F:System.Data.OracleClient.OracleString.Null" />。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 是 <see cref="F:System.Data.OracleClient.OracleString.Null" />, ，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Item(System.Int32)">
      <summary>
              获取从单字节 <see langword="Value" /> 属性整数参数指示的位置位于 <paramref name="index" />。
            </summary>
      <param name="index">
                要检索的字节的位置。
              </param>
      <returns>
              由整数参数指示的位置处的字节。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Length">
      <summary>
              获取存储在此字符串的长度 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。
            </summary>
      <returns>
              存储的字符串的长度。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Value">
      <summary>
              获取存储在字符串 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。
            </summary>
      <returns>
              用于存储的字符串。
            
              此属性是只读的。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Days">
      <summary>
              获取此实例所表示的完整天数数。
            </summary>
      <returns>
              此实例的天数部分。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Hours">
      <summary>
              获取此实例所表示的整小时数。
            </summary>
      <returns>
              介于 0 和 23 之间的此实例的小时部分。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.IsNull">
      <summary>
              获取一个值，该值指示是否 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构为 null。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 为 null，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Milliseconds">
      <summary>
              获取此实例所表示的整毫秒数。
            </summary>
      <returns>
              介于 0 和 999 之间的此实例的毫秒部分。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Minutes">
      <summary>
              获取此实例所表示的整分钟数。
            </summary>
      <returns>
              介于 0 和 59 之间的此实例的分钟部分。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Seconds">
      <summary>
              获取此实例所表示的整秒数。
            </summary>
      <returns>
              介于 0 和 59 之间的此实例的第二个部分。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Value">
      <summary>
              获取的值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </summary>
      <returns>
              此值 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTransaction.Connection">
      <summary>
              指定 <see cref="T:System.Data.OracleClient.OracleConnection" /> 与事务关联的对象。
            </summary>
      <returns>
              <see cref="T:System.Data.OracleClient.OracleConnection" /> 与事务关联的对象。
            </returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTransaction.IsolationLevel">
      <summary>
              指定 <see cref="T:System.Data.IsolationLevel" /> 此事务。
            </summary>
      <returns>
              <see cref="T:System.Data.IsolationLevel" /> 此事务。
               默认值为 <see langword="ReadCommitted" />。
            </returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleBFile">
      <summary>
              表示托管 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象设计用于使用 Oracle <see langword="BFILE" /> 数据类型。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleBinary">
      <summary>
              表示要在存储中或从数据库中检索二进制数据的长度可变的流。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleBoolean">
      <summary>
              表示 Oracle 数据类型之间的数据库比较运算返回的值，并公开用于执行数据类型转换的方法。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleClientFactory">
      <summary>
              表示一组方法用于创建 Oracle 提供程序实现的数据源类的实例。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleCommand">
      <summary>
              表示要对数据库执行的 SQL 语句或存储过程。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleCommandBuilder">
      <summary>
              自动生成用于协调所做的更改的单表命令 <see cref="T:System.Data.DataSet" /> 与关联的数据库。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleConnection">
      <summary>
              表示与数据库的开放连接。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleConnectionStringBuilder">
      <summary>
              为创建和管理由 <see cref="T:System.Data.OracleClient.OracleConnection" /> 类使用的连接字符串的内容提供了一种简单方法。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleDataAdapter">
      <summary>
              表示用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据库的一组数据命令和一个数据库连接。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleDataReader">
      <summary>
              提供了一种从数据源中读取数据行的只进流。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleDateTime">
      <summary>
              表示日期和时间数据，范围介于公元前 4712 年 1 月 1，到公元 4712 年 12 月 31 日。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleException">
      <summary>
              Oracle 数据库或适用于 Oracle 的.NET Framework 数据提供程序返回警告或错误时生成异常。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleInfoMessageEventArgs">
      <summary>
              为 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件提供数据。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleInfoMessageEventHandler">
      <summary>
              表示将处理的方法 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件 <see cref="T:System.Data.OracleClient.OracleConnection" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Data.OracleClient.OracleInfoMessageEventArgs" /> 对象。
              </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleLob">
      <summary>
              表示二进制大型对象 (<see langword="LOB" />) 存储在 Oracle 服务器上的数据类型。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleLobOpenMode">
      <summary>
              指定是否 <see cref="T:System.Data.OracleClient.OracleLob" /> 应该会打开处于只读模式还是读/写模式。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLobOpenMode.ReadOnly">
      <summary>
              <see cref="T:System.Data.OracleClient.OracleLob" /> 在只读模式下打开。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLobOpenMode.ReadWrite">
      <summary>
              <see cref="T:System.Data.OracleClient.OracleLob" /> 在读/写模式下打开。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleMonthSpan">
      <summary>
              表示月中的时间间隔，并对应于 Oracle 9i <see langword="INTERVAL YEAR TO MONTH" /> 数据类型。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleNumber">
      <summary>
              表示固定的精度和小数位数之间的数值范围为-10 27 -1 和 10 27 -1 以存储中或从数据库中检索。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleParameter">
      <summary>
              表示 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的一个参数，还可以是到 <see cref="T:System.Data.DataColumn" /> 的映射。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleParameterCollection">
      <summary>
              表示与 <see cref="T:System.Data.OracleClient.OracleCommand" /> 相关的参数集合及其各自到 <see cref="T:System.Data.DataSet" /> 中列的映射。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>
              启用.NET Framework 数据提供程序 for Oracle 来帮助确保用户具有足够用来访问 Oracle 数据库的安全级别。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>
              将安全操作相关联的自定义安全特性。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatedEventArgs">
      <summary>
              为 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" /> 事件提供数据。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatedEventHandler">
      <summary>
              表示将处理的方法 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" /> 事件 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Data.OracleClient.OracleRowUpdatedEventArgs" />。
              </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatingEventArgs">
      <summary>
              为 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> 事件提供数据。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatingEventHandler">
      <summary>
              表示将处理的方法 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> 事件 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" />。
              </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleString">
      <summary>
              表示存储在中或从数据库中检索的字符的长度可变的流。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleTimeSpan">
      <summary>
              表示一个时间间隔，并对应于 Oracle 9i <see langword="INTERVAL DAY TO SECOND" /> 数据类型。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleTransaction">
      <summary>
              表示将在数据库中进行的事务。
            </summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleType">
      <summary>
              指定的字段或属性中使用的数据类型 <see cref="T:System.Data.OracleClient.OracleParameter" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.BFile">
      <summary>
              Oracle <see langword="BFILE" /> 数据类型，包含对外部文件中存储最大大小为 4 千兆字节的二进制数据的引用。
               使用 OracleClient <see cref="T:System.Data.OracleClient.OracleBFile" /> 数据类型，为 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Blob">
      <summary>
              Oracle <see langword="BLOB" /> 包含最大大小为 4 千兆字节的二进制数据的数据类型。
               使用 OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Char">
      <summary>
              Oracle <see langword="CHAR" /> 包含一个具有最大大小为 2000 字节的固定长度的字符字符串的数据类型。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Clob">
      <summary>
              Oracle <see langword="CLOB" /> 包含基于默认字符的字符数据的数据类型设置的服务器上，最大大小为 4 千兆字节。
               使用 OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Cursor">
      <summary>
              Oracle <see langword="REF CURSOR" />。
              <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象不可用。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.DateTime">
      <summary>
              Oracle <see langword="DATE" /> 包含固定长度表示的日期和时间，范围介于公元前 4712 年 1 月 1 日到公元年 12 月 31 日的数据类型4712，采用默认格式 日-mmm-年。
               到公元日期、 <see langword="DATE" /> 映射到 <see cref="T:System.DateTime" />。
               若要将绑定公元前年的日期，请使用 <see langword="String" /> 参数和 Oracle TO_DATE 或时出现 TO_CHAR 转换函数的输入和输出参数分别。
               使用.NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.IntervalDayToSecond">
      <summary>
              Oracle <see langword="INTERVAL DAY TO SECOND" /> 数据类型 (Oracle 9i 或更高版本)，其中包含的时间单位为天、 小时、 分钟和秒为单位的时间间隔，具有固定的大小的 11 个字节。
               使用.NET Framework <see cref="T:System.TimeSpan" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.IntervalYearToMonth">
      <summary>
              Oracle <see langword="INTERVAL YEAR TO MONTH" /> 数据类型 (Oracle 9i 或更高版本)，其中包含的年和月中的时间间隔，具有 5 个字节的固定的大小。
               使用.NET Framework <see cref="T:System.Int32" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.LongRaw">
      <summary>
              Oracle <see langword="LONGRAW" /> 包含最大大小的 2 千兆字节的可变长度二进制数据的数据类型。
               使用.NET Framework <see langword="Byte[]" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.LongVarChar">
      <summary>
              Oracle <see langword="LONG" /> 包含可变长度字符串，最大大小的 2 千兆字节的数据类型。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NChar">
      <summary>
              Oracle <see langword="NCHAR" /> 包含了可存储在数据库，并使用最多的国家/地区的字符集中的固定长度的字符字符串的数据类型大小为 2000 字节 （而不是字符） 时存储在数据库中。
               值的大小取决于数据库的国家/地区的字符集。
               请参阅 Oracle 文档详细信息。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NClob">
      <summary>
              Oracle <see langword="NCLOB" /> 包含字符数据存储在数据库，并使用最多的国家/地区的字符集中的数据类型大小为 4 千兆字节 （而不是字符） 时存储在数据库中。
               值的大小取决于数据库的国家/地区的字符集。
               请参阅 Oracle 文档详细信息。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Number">
      <summary>
              Oracle <see langword="NUMBER" /> 包含具有最大精度和小数位数为 38 的长度可变的数值数据的数据类型。
               此方法映射到 <see cref="T:System.Decimal" />。
               若要将绑定 Oracle <see langword="NUMBER" /> 超出什么 <see cref="F:System.Decimal.MaxValue" /> 可以包含使用 <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型或使用 <see langword="String" /> 参数和 Oracle TO_NUMBER 或时出现 TO_CHAR 转换函数的输入和输出参数分别。
               使用.NET Framework <see cref="T:System.Decimal" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NVarChar">
      <summary>
              Oracle <see langword="NVARCHAR2" /> 包含存储在数据库，并使用最多的国家/地区的字符集中的可变长度字符串的数据类型大小为 4000 字节 （而不是字符） 时存储在数据库中。
               值的大小取决于数据库的国家/地区的字符集。
               请参阅 Oracle 文档详细信息。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Raw">
      <summary>
              Oracle <see langword="RAW" /> 含有 2000 字节的最大大小的可变长度二进制数据的数据类型。
               使用.NET Framework <see langword="Byte[]" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.RowId">
      <summary>
              Base64 字符串表示形式 Oracle <see langword="ROWID" /> 数据类型。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Timestamp">
      <summary>
              Oracle <see langword="TIMESTAMP" /> (Oracle 9i 或更高版本)，其中包含日期和时间 （包括秒为单位），范围的大小从 7 到 11 个字节。
               使用.NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.TimestampLocal">
      <summary>
              Oracle <see langword="TIMESTAMP WITH LOCAL TIMEZONE" /> (Oracle 9i 或更高版本)，其中包含日期、 时间和对原始时区的引用，范围的大小从 7 到 11 个字节。
               使用.NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.TimestampWithTZ">
      <summary>
              Oracle <see langword="TIMESTAMP WITH TIMEZONE" /> (Oracle 9i 或更高版本)，其中包含日期、 时间和指定的时区，具有 13 个字节的固定的大小。
               使用.NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.VarChar">
      <summary>
              Oracle <see langword="VARCHAR2" /> 包含可变长度字符串，最大大小为 4000 字节的数据类型。
               使用.NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Byte">
      <summary>
              整数类型表示无符号的 8 位整数，其值介于 0 和 255 之间。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               使用.NET Framework <see cref="T:System.Byte" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.UInt16">
      <summary>
              整数类型表示无符号的 16 位整数，其值介于 0 和 65535 之间。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               有关 Oracle 数字值转换为公共语言运行时 (CLR) 数据类型的信息，请参阅 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               使用.NET Framework <see cref="T:System.UInt16" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.UInt32">
      <summary>
              整数类型表示其值介于 0 和 4294967295 之间的无符号的 32 位整数。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               有关 Oracle 数字值转换为公共语言运行时 (CLR) 数据类型的信息，请参阅 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               使用.NET Framework <see cref="T:System.UInt32" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.SByte">
      <summary>
              整型，表示有符号值介于-128 和 127 之间的 8 位整数。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               使用.NET Framework <see cref="T:System.SByte" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Int16">
      <summary>
              整型，表示有符号 16 位整数的值介于-32768 到 32767 之间。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               有关 Oracle 数字值转换为公共语言运行时 (CLR) 数据类型的信息，请参阅 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               使用.NET Framework <see cref="T:System.Int16" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Int32">
      <summary>
              整型，表示有符号 32 位整数的值介于-2147483648 和 2147483647 之间。
               这不是本机的 Oracle 数据类型，但绑定输入的参数时提供的性能。
               有关 Oracle 数字值转换为公共语言运行时数据类型的信息，请参阅 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               使用.NET Framework <see cref="T:System.Int32" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Float">
      <summary>
              单精度浮点值。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               有关 Oracle 数字值转换为公共语言运行时数据类型的信息，请参阅 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               使用.NET Framework <see cref="T:System.Single" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Double">
      <summary>
              一个双精度浮点值。
               这不是本机的 Oracle 数据类型，但可用于在绑定输入的参数时提高性能。
               有关 Oracle 数字值转换为公共语言运行时 (CLR) 数据类型的信息，请参阅 <see cref="T:System.Data.OracleClient.OracleNumber" />。
               使用.NET Framework <see cref="T:System.Double" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 中的数据类型 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。
            </summary>
    </member>
  </members>
</doc>