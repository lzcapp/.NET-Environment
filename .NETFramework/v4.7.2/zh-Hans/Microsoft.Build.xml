<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build</name>
  </assembly>
  <members>
    <member name="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectAdded">
      <summary>
              当项目添加到项目集合 ProjectRootElementCache 时的事件引发。
            </summary>
    </member>
    <member name="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectChanged">
      <summary>
              时引发 <see cref="T:Microsoft.Build.Evaluation.Project" /> 包含由此实例直接更改。
            </summary>
    </member>
    <member name="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged">
      <summary>
              当该实例上的状态更改时引发。
            </summary>
    </member>
    <member name="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectXmlChanged">
      <summary>
              时引发 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> 包含由此实例发生更改。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ElementLocation.#ctor">
      <summary>
              初始化 <see cref="T:Microsoft.Build.Construction.ElementLocation" /> 类的新实例。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ElementLocation.Equals(System.Object)">
      <summary>
              重写 Equals，使相同的字段表示相等的对象。
            </summary>
      <param name="obj">
                要与此元素位置进行比较的元素位置。
              </param>
      <returns>
              如果对象相等，则返回 <see langword="true" />；否则返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ElementLocation.GetHashCode">
      <summary>
              获得合理的哈希代码。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ElementLocation.ToString">
      <summary>
              元素的位置。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">
      <summary>
              追加<paramref name="child" />作为此项目容器的最后一个子级的元素。
            </summary>
      <param name="child">
                要追加的项目元素。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
      <summary>
              将插入 <paramref name="child" /> 元素的后面 <paramref name="reference" /> 元素。
            </summary>
      <param name="child">
                要插入的项目元素。
              </param>
      <param name="reference">
                要在其后插入的项目元素。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
      <summary>
              将插入 <paramref name="child" /> 元素之前 <paramref name="reference" /> 元素。
            </summary>
      <param name="child">
                要插入的项目元素。
              </param>
      <param name="reference">
                要插入之前的项目元素。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">
      <summary>
              前面添加 <paramref name="child" /> 作为此项目容器的第一个子级的元素。
            </summary>
      <param name="child">
                要在前面附加的项目元素。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren">
      <summary>
              如果有的话，从此项目容器中删除所有子级。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
      <summary>
              删除 <paramref name="child" /> 从此项目容器的元素。
            </summary>
      <param name="child">
                要删除的项目元素。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.AddImport(System.String)">
      <summary>
              在此导入组中的最后一个导入后添加一个新的导入。
            </summary>
      <param name="project">
                要导入的项目。
              </param>
      <returns>
              返回新的导入。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(System.String,System.String)">
      <summary>
              将元数据添加到此项定义。
               将元数据追加到所有现有元数据。
            </summary>
      <param name="name">
                元数据的名称。
              </param>
      <param name="unevaluatedValue">
                要添加的元数据。
              </param>
      <returns>
              返回修改的元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.AddItemDefinition(System.String)">
      <summary>
              在此项定义组中添加了新的项定义的最后一个子级之后。
            </summary>
      <param name="itemType">
                要添加项的元素名称。
              </param>
      <returns>
              返回新的项定义。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemElement.AddMetadata(System.String,System.String)">
      <summary>
              将元数据添加到此项目。
               将元数据追加到所有现有元数据。
            </summary>
      <param name="name">
                元数据名称。
              </param>
      <param name="unevaluatedValue">
                要添加的元数据。
              </param>
      <returns>
              返回修改的元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String)">
      <summary>
              将新项添加到的项组。
               项元素的名称，然后按 Include 特性，将首先排序项。
            </summary>
      <param name="itemType">
                要添加的项的项元素名称。
              </param>
      <param name="include">
                包含要添加的项的属性。
              </param>
      <returns>
              返回新的项元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              将元数据的新项添加到的项组。
               项元素的名称，然后按 Include 特性，将首先排序项。
            </summary>
      <param name="itemType">
                要添加的项的项元素名称。
              </param>
      <param name="include">
                包含要添加的项的属性。
              </param>
      <param name="metadata">
                要添加的元数据。
              </param>
      <returns>
              返回新的项元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.AddProperty(System.String,System.String)">
      <summary>
              将新属性追加到属性组。
            </summary>
      <param name="name">
                属性名称。
              </param>
      <param name="unevaluatedValue">
                属性值。
              </param>
      <returns>
              返回新的属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.SetProperty(System.String,System.String)">
      <summary>
              更新属性组中的给定属性的值。
            </summary>
      <param name="name">
                要更新的属性的名称。
              </param>
      <param name="unevaluatedValue">
                新的属性值。
              </param>
      <returns>
              返回更新的属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddImport(System.String)">
      <summary>
              将项目导入添加到此项目。
            </summary>
      <param name="project">
                要导入的项目。
              </param>
      <returns>
              返回添加的项目导入。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddImportGroup">
      <summary>
              在此项目的末尾创建一个导入组。
            </summary>
      <returns>
              返回此项目的结束时创建的导入组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String)">
      <summary>
              向此项目中添加一项。
            </summary>
      <param name="itemType">
                要添加的项的项类型。
              </param>
      <param name="include">
                要添加的项包括成本。
              </param>
      <returns>
              返回添加的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              将某个项与其元数据添加到此项目。
            </summary>
      <param name="itemType">
                要添加的项的项类型。
              </param>
      <param name="include">
                要添加的项包括成本。
              </param>
      <param name="metadata">
                要添加的元数据。
              </param>
      <returns>
              返回添加的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinition(System.String)">
      <summary>
              将项定义添加到此项目。
            </summary>
      <param name="itemType">
                要添加的项定义的项类型。
              </param>
      <returns>
              返回添加的项定义。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinitionGroup">
      <summary>
              将项定义组添加到此项目。
            </summary>
      <returns>
              返回添加的项定义组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemGroup">
      <summary>
              创建并向此项目添加项组。
            </summary>
      <returns>
              返回添加的项组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddProperty(System.String,System.String)">
      <summary>
              更新或将属性添加到此项目。
            </summary>
      <param name="name">
                要更新或添加的属性名称。
              </param>
      <param name="value">
                要更新或添加的属性值。
              </param>
      <returns>
              返回的已更新或添加属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddPropertyGroup">
      <summary>
              向此项目添加新的属性组。
            </summary>
      <returns>
              返回添加的属性组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddTarget(System.String)">
      <summary>
              将目标添加到项目。
            </summary>
      <param name="name">
                要添加的目标的名称。
              </param>
      <returns>
              返回添加的目标。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddUsingTask(System.String,System.String,System.String)">
      <summary>
              将添加UsingTask 元素 (MSBuild)到项目。
            </summary>
      <param name="name">
                任务名称。
              </param>
      <param name="assemblyFile">
                程序集的文件路径。
              </param>
      <param name="assemblyName">
                要加载的程序集的名称。
              </param>
      <returns>
              返回添加的 UsingTask 元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create">
      <summary>
              创建和初始化内存中的空 ProjectRootElement 实例并将其添加到全局项目集合。
            </summary>
      <returns>
              返回新的项目根目录。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建和初始化内存中的空 ProjectRootElement 实例并将其添加到指定的项目集合。
            </summary>
      <param name="projectCollection">
                要添加到项目集合。
              </param>
      <returns>
              返回新的项目根目录。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String)">
      <summary>
              创建和初始化内存中的空 ProjectRootElement 实例并将其添加到全局项目集合。
               在指定的文件路径中找到的数据的初始化新的项目根目录。
            </summary>
      <param name="path">
                用于初始化的数据文件路径。
              </param>
      <returns>
              返回新的项目根目录。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建和初始化内存中的空 ProjectRootElement 实例并将其添加到指定的项目集合。
               在指定的文件路径中找到的数据的初始化新的项目根目录。
            </summary>
      <param name="path">
                用于初始化的数据文件路径。
              </param>
      <param name="projectCollection">
                要添加到项目集合。
              </param>
      <returns>
              返回新的项目根目录。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader)">
      <summary>
              创建和初始化内存中的空 ProjectRootElement 实例并将其添加到全局项目集合。
               从指定的 XmlReader 读取的数据的初始化新的项目根目录。
            </summary>
      <param name="xmlReader">
                用于初始化 XML 读取器。
              </param>
      <returns>
              返回新的项目根目录。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建和初始化内存中的空 ProjectRootElement 实例并将其添加到指定的项目集合。
               从指定的 XmlReader 读取的数据的初始化新的项目根目录。
            </summary>
      <param name="xmlReader">
                用于初始化 XML 读取器。
              </param>
      <param name="projectCollection">
                要添加到项目集合。
              </param>
      <returns>
              返回新的项目根目录。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateChooseElement">
      <summary>
              创建选择元素 (MSBuild)。
            </summary>
      <returns>
              一个 <see cref="T:Microsoft.Build.Construction.ProjectChooseElement" /> 对象。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportElement(System.String)">
      <summary>
              创建导入元素 (MSBuild)。
            </summary>
      <param name="project">
                要导入的项目。
              </param>
      <returns>
              返回所创建的导入元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportGroupElement">
      <summary>
              创建一个导入组。
            </summary>
      <returns>
              返回的导入组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionElement(System.String)">
      <summary>
              创建项定义。
            </summary>
      <param name="itemType">
                项定义的项类型。
              </param>
      <returns>
              返回的项定义。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionGroupElement">
      <summary>
              创建项定义组。
            </summary>
      <returns>
              返回的项定义组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String)">
      <summary>
              创建一个项目。
            </summary>
      <param name="itemType">
                项目项类型。
              </param>
      <returns>
              返回的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String,System.String)">
      <summary>
              使用指定的 Include 值创建项。
            </summary>
      <param name="itemType">
                项目项类型。
              </param>
      <param name="include">
                项包含值。
              </param>
      <returns>
              返回的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemGroupElement">
      <summary>
              创建项组。
            </summary>
      <returns>
              返回的项组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String)">
      <summary>
              创建具有指定名称的元数据节点。
            </summary>
      <param name="name">
                元数据的名称。
              </param>
      <returns>
              返回元数据节点。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String,System.String)">
      <summary>
              创建具有指定的名称和值的元数据节点。
            </summary>
      <param name="name">
                元数据的名称。
              </param>
      <param name="unevaluatedValue">
                元数据的值。
              </param>
      <returns>
              返回的元数据元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOnErrorElement(System.String)">
      <summary>
              创建OnError 元素 (MSBuild)。
            </summary>
      <param name="executeTargets">
                任务失败时要执行的目标。
              </param>
      <returns>
              返回 OnError 元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOtherwiseElement">
      <summary>
              创建Otherwise 元素 (MSBuild)。
               调用方必须将其添加到所选项目中的位置。
            </summary>
      <returns>
              返回的其他元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOutputElement(System.String,System.String,System.String)">
      <summary>
              创建 Output 元素 (MSBuild)。
            </summary>
      <param name="taskParameter">
                任务输出参数的名称。
              </param>
      <param name="itemType">
                接收任务输出参数值的项。
              </param>
      <param name="propertyName">
                接收任务输出参数值的属性。
              </param>
      <returns>
              返回的输出元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateProjectExtensionsElement">
      <summary>
              创建ProjectExtensions 元素 (MSBuild)。
            </summary>
      <returns>
              返回 ProjectExtensions 元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyElement(System.String)">
      <summary>
              创建一个属性。
            </summary>
      <param name="name">
                属性的名称。
              </param>
      <returns>
              返回的属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyGroupElement">
      <summary>
              创建属性组。
            </summary>
      <returns>
              返回的属性组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateTargetElement(System.String)">
      <summary>
              创建一个目标。
            </summary>
      <param name="name">
                目标的名称。
              </param>
      <returns>
              返回的目标。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateTaskElement(System.String)">
      <summary>
              创建一个任务。
            </summary>
      <param name="name">
                任务的名称。
              </param>
      <returns>
              返回的任务。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskBodyElement(System.String,System.String)">
      <summary>
              创建一个任务将引用的UsingTask 元素 (MSBuild)。
            </summary>
      <param name="evaluate">
                要计算的字符串。
              </param>
      <param name="body">
                要添加的主体。
              </param>
      <returns>
              返回的任务。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(System.String,System.String,System.String)">
      <summary>
              将添加UsingTask 元素 (MSBuild)到项目。
            </summary>
      <param name="taskName">
                任务名称。
              </param>
      <param name="assemblyFile">
                程序集的文件路径。
              </param>
      <param name="assemblyName">
                要加载的程序集的名称。
              </param>
      <returns>
              返回 UsingTask 元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(System.String,System.String,System.String,System.String,System.String)">
      <summary>
              将添加UsingTask 元素 (MSBuild)到项目。
            </summary>
      <param name="taskName">
                任务名称。
              </param>
      <param name="assemblyFile">
                程序集的文件路径。
              </param>
      <param name="assemblyName">
                要加载的程序集的名称。
              </param>
      <param name="runtime">
                可选的运行时说明符。
              </param>
      <param name="architecture">
                可选的体系结构说明符。
              </param>
      <returns>
              返回 UsingTask 元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
      <summary>
              创建用于参数UsingTask 元素 (MSBuild)参数组。
            </summary>
      <param name="name">
                名称UsingTask元素。
              </param>
      <param name="output">
                将任务的输出存储于项目文件中。
              </param>
      <param name="required">
                用户定义的任务参数，其中包含作为其值的参数值。
              </param>
      <param name="parameterType">
                参数的类型。
              </param>
      <returns>
              返回参数。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterGroupElement">
      <summary>
              参数为创建组UsingTask 元素 (MSBuild)。
            </summary>
      <returns>
              返回参数组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateWhenElement(System.String)">
      <summary>
              创建When 元素 (MSBuild)具有指定的条件属性。
            </summary>
      <param name="condition">
                条件属性的值。
              </param>
      <returns>
              返回 When 元素。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String)">
      <summary>
              通过从指定的文件路径加载数据初始化全局项目集合中项目的根。
            </summary>
      <param name="path">
                对数据文件路径。
              </param>
      <returns>
              返回初始化的项目根。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              通过从指定的文件路径加载数据，初始化指定的项目集合中的项目根。
            </summary>
      <param name="path">
                对数据文件路径。
              </param>
      <param name="projectCollection">
                包含要初始化该项目的项目集合。
              </param>
      <returns>
              返回初始化的项目根。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save">
      <summary>
              如果修改，对文件系统，将保存该项目。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.IO.TextWriter)">
      <summary>
              将项目保存到指定的文本编写器，无论修改。
            </summary>
      <param name="writer">
                要写入到该项目的文本编写器。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.String)">
      <summary>
              如果修改，或者如果存储的文件路径已更改，将保存该项目。
            </summary>
      <param name="path">
                项目存储中的文件路径。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.String,System.Text.Encoding)">
      <summary>
              如果修改，或者如果存储的文件路径已更改，将保存该项目。
               使用指定的字符编码...
            </summary>
      <param name="path">
                项目存储中的文件路径。
              </param>
      <param name="encoding">
                用于保存项目的字符编码。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.Text.Encoding)">
      <summary>
              如果修改，使用指定的字符编码，保存该项目。
            </summary>
      <param name="saveEncoding">
                用于保存项目的字符编码。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String)">
      <summary>
              获取全局项目集合已加载到内存中指定的文件路径中的项目根目录位置。
               或者，如果该文件当前不在内存中。
            </summary>
      <param name="path">
                ProjectRootElement，该路径不能为 null。
              </param>
      <returns>
              返回的项目根目录位置。
               如果没有项目加载到内存中从指定的文件路径，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              获取已加载到内存中指定的文件路径指定的项目集合中的项目根目录位置。
               或者，如果该文件当前不在内存中。
            </summary>
      <param name="path">
                ProjectRootElement，该路径不能为 null。
              </param>
      <param name="projectCollection">
                要搜索的项目根目录的项目集合。
              </param>
      <returns>
              返回的项目根目录位置。
               如果没有项目加载到内存中从指定的文件路径，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddItemGroup">
      <summary>
              将项组添加最后一个子级之后。
            </summary>
      <returns>
              返回添加的项组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddPropertyGroup">
      <summary>
              最后一个子级之后添加属性组。
            </summary>
      <returns>
              返回添加的属性组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddTask(System.String)">
      <summary>
              在任何现有的任务之后，请向此目标中添加任务。
            </summary>
      <param name="taskName">
                要添加的任务名称。
              </param>
      <returns>
              返回添加的任务。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String)">
      <summary>
              最后一个子级之后添加一个输出项。
            </summary>
      <param name="taskParameter">
                输出到项的任务的名称。
              </param>
      <param name="itemType">
                其值设置为任务的输出的新项的项类型。
              </param>
      <returns>
              返回所添加的输出项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String,System.String)">
      <summary>
              最后一个子级之后将有条件的输出项添加到此任务。
            </summary>
      <param name="taskParameter">
                参数的名称。
              </param>
      <param name="itemType">
                项目项类型。
              </param>
      <param name="condition">
                参数的条件。
              </param>
      <returns>
              返回添加以输出项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String)">
      <summary>
              最后一个子级之后将输出属性添加到此任务。
            </summary>
      <param name="taskParameter">
                参数的名称。
              </param>
      <param name="propertyName">
                属性的名称。
              </param>
      <returns>
              返回添加的输出属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String,System.String)">
      <summary>
              最后一个子级之后将有条件的输出属性添加到此任务。
            </summary>
      <param name="taskParameter">
                参数的名称。
              </param>
      <param name="propertyName">
                属性的名称。
              </param>
      <param name="condition">
                属性的条件。
              </param>
      <returns>
              返回添加的条件输出属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.GetParameter(System.String)">
      <summary>
              获取具有指定名称的参数的值。
            </summary>
      <param name="name">
                参数的名称。
              </param>
      <returns>
              返回具有指定名称的参数的值。
               如果没有该名称的参数存在于该任务中，将返回一个空字符串。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters">
      <summary>
              从任务中删除所有参数。
               不会删除任何 ContinueOnError 和/或 Condition 属性。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(System.String)">
      <summary>
              移除具有指定名称的此任务上的任何参数。
               如果没有该名称的参数存在于该任务中，任何影响。
            </summary>
      <param name="name">
                要删除的参数的名称。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.SetParameter(System.String,System.String)">
      <summary>
              更新或添加对此任务的参数。
            </summary>
      <param name="name">
                要更新或添加的参数名称。
              </param>
      <param name="unevaluatedValue">
                参数的值。
              </param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.AddParameterGroup">
      <summary>
              将新的 ParameterGroup 元素添加到此内联任务。
            </summary>
      <returns>
              返回新的参数组。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.AddUsingTaskBody(System.String,System.String)">
      <summary>
              将新的 TaskBody 元素添加到此内联任务。
            </summary>
      <param name="evaluate">
                一个标志，它，如果为 true，可扩展任务正文中的项和属性值。
                 默认情况下，此标志适用。
              </param>
      <param name="taskBody">
                将任务作为字符串的正文。
              </param>
      <returns>
              返回新的任务正文。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(System.String)">
      <summary>
              将参数添加到此参数组。
            </summary>
      <param name="name">
                要添加的参数名称。
              </param>
      <returns>
              新的参数。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(System.String,System.String,System.String,System.String)">
      <summary>
              将参数添加到此参数组中，使用给定名称、 类型和属性。
            </summary>
      <param name="name">
                要添加的参数名称。
              </param>
      <param name="output">
                输出属性的值。
              </param>
      <param name="required">
                必需的特性的值。
              </param>
      <param name="parameterType">
                参数的类型。
              </param>
      <returns>
              返回新的参数。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.IslandWorker(Microsoft.Build.Debugging.DebuggerManager.IslandThread)">
      <summary>
              从数据岛调用私有的入口点。
               必须是公共的以便数据岛可以调用它。
               在调试器工作线程上调用。
            </summary>
      <param name="controller">
                调用的入口点的线程。
              </param>
    </member>
    <member name="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.System#IDisposable#Dispose">
      <summary>
              释放 <see cref="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread" /> 类的当前实例所使用的所有资源。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor">
      <summary>
              构造一个空的项目使用的全局项目集合的全局属性和默认工具版本。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>
              构造一个空的项目，并对其使用给定的项目根和全局项目集合全局属性和默认工具版本进行计算。
            </summary>
      <param name="xml">
                若要使用进行评估的 ProjectRootElement。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
              构造一个空的项目，并对其使用给定的项目根进行计算以及与给定的全局属性和给定的工具版本。
            </summary>
      <param name="xml">
                要使用进行评估的项目根。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              构造一个项目并对其使用给定的项目根进行计算以及与给定的全局属性和给定的工具版本。
            </summary>
      <param name="xml">
                要使用进行评估的项目根。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>
              构造一个项目并对其使用给定的项目根进行计算和给定的全局属性，与给定的工具版本以及给定的加载设置。
            </summary>
      <param name="xml">
                要使用进行评估的项目根。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
      <param name="loadSettings">
                要用于计算负载设置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>
              构造一个项目并对其使用给定的项目根进行计算和使用给定的全局属性、 工具和子工具集版本中，project 将集合中，并加载设置。
            </summary>
      <param name="xml">
                要使用进行评估的项目根。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
      <param name="subToolsetVersion">
                要使用进行评估的子工具集版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
      <param name="loadSettings">
                要用于计算负载设置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              构造一个空的项目使用给定的项目集合的全局属性和默认工具版本。
            </summary>
      <param name="projectCollection">
                新项目添加到项目集合。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              构造一个空项目，要计算与给定的项目集合和给定的全局属性和给定的工具版本。
            </summary>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                用于计算项目的工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                项目集合将新项目将添加到。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)">
      <summary>
              构造一个项目并对其进行计算，利用给定的源项目文件以及全局项目集合的全局属性和默认工具版本。
            </summary>
      <param name="projectFile">
                要计算的源项目文件。
              </param>
      <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
                  如果评估失败。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
              构造一个项目并从给定的源项目文件以及给定的全局属性和给定的工具版本对其进行计算。
            </summary>
      <param name="projectFile">
                源项目文件要进行求值的路径。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              构造一个项目并从给定的源项目文件以及给定的全局属性和给定的工具版本对其进行计算。
            </summary>
      <param name="projectFile">
                源项目文件要进行求值的路径。
              </param>
      <param name="globalProperties">
                全局属性。
                 可能为 null。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>
              构造一个项目并从给定的源项目文件以及给定的全局属性，给定的工具版本和给定的负载设置对其进行计算。
            </summary>
      <param name="projectFile">
                源项目文件要进行求值的路径。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
      <param name="loadSettings">
                要用于计算负载设置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>
              构造一个项目并对其进行计算，来自给定的源项目文件，而与给定的全局属性、 工具和子工具集版本、 项目集合和加载设置。
            </summary>
      <param name="projectFile">
                源项目文件要进行求值的路径。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="subToolsetVersion">
                子工具集版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
      <param name="loadSettings">
                要用于计算负载设置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)">
      <summary>
              构造一个项目并评估来自给定 XML 读取器读取的源代码。
               使用全局项目集合的全局属性和默认工具版本计算源代码。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
              构造一个项目并评估来自给定 XML 读取器读取的源代码。
               源代码是评估为具有给定的全局属性和给定的工具版本。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              构造一个项目并评估来自给定 XML 读取器读取的源代码。
               源代码是评估为具有给定的全局属性和给定的工具版本。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>
              构造一个项目并评估来自给定 XML 读取器读取的源代码。
               源代码是评估为具有给定的全局属性和给定的工具版本。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
      <param name="loadSettings">
                要用于计算负载设置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>
              构造一个项目并评估来自给定 XML 读取器读取的源代码。
               使用给定的全局属性、 工具和子工具集版本、 项目集合和负载设置来计算源代码。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
      <param name="globalProperties">
                要计算的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                要计算的工具版本。
                 可能为 null。
              </param>
      <param name="subToolsetVersion">
                子工具集版本使用进行评估。
                 可能为 null。
              </param>
      <param name="projectCollection">
                该项目的项目集合添加到。
                 可能不为空。
              </param>
      <param name="loadSettings">
                要用于计算负载设置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)">
      <summary>
              将具有任何元数据的项添加到项目。
            </summary>
      <param name="itemType">
                所添加项的项类型。
              </param>
      <param name="unevaluatedInclude">
                包含要添加的项的属性。
              </param>
      <returns>
              返回添加的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              将具有给定元数据的项添加到项目。
            </summary>
      <param name="itemType">
                所添加项的项类型。
              </param>
      <param name="unevaluatedInclude">
                包含要添加的项的属性。
              </param>
      <param name="metadata">
                所添加项的元数据。
              </param>
      <returns>
              返回添加的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)">
      <summary>
              将具有任何元数据的项添加到项目。
                不会尝试看到现有通配符是否已匹配新的项，除非它是项组中的第一个项。
                不会尝试找到附近相似的项目的新项。
            </summary>
      <param name="itemType">
                要添加的项类型。
              </param>
      <param name="unevaluatedInclude">
                要添加到项而言未计算的 Include 特性。
              </param>
      <returns>
              返回添加的项目项的列表。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              将某个项与其元数据添加到项目。
               元数据可能为 null，指示没有元数据。
               不会尝试看到现有通配符是否已匹配新的项，除非它是项组中的第一个项。
               不会尝试找到附近相似的项目的新项。
            </summary>
      <param name="itemType">
                要添加的项类型。
              </param>
      <param name="unevaluatedInclude">
                要添加到项而言未计算的 Include 特性。
              </param>
      <param name="metadata">
                要添加的元数据。
              </param>
      <returns>
              返回添加的项目项的列表。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build">
      <summary>
              生成此项目，使用默认目标。
            </summary>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)">
      <summary>
              生成此项目，使用默认目标和给定的记录器。
            </summary>
      <param name="logger">
                要在生成期间使用的记录器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              生成此项目，使用默认目标和给定的记录器。
            </summary>
      <param name="loggers">
                针对要在生成期间使用的所有记录器的枚举器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              生成此项目，使用默认目标和给定的记录器，并远程记录器。
            </summary>
      <param name="loggers">
                要在生成期间使用的记录器。
              </param>
      <param name="remoteLoggers">
                要在生成期间使用的远程记录器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String)">
      <summary>
              生成此项目，生成给定的目标。
            </summary>
      <param name="target">
                要生成的目标。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              生成此项目，生成给定的目标和使用给定的记录器。
            </summary>
      <param name="target">
                要生成的目标。
              </param>
      <param name="loggers">
                要在生成期间使用的记录器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              生成此项目，生成给定的目标和使用给定的记录器和远程记录器。
            </summary>
      <param name="target">
                要生成的目标。
              </param>
      <param name="loggers">
                要在生成期间使用的记录器。
              </param>
      <param name="remoteLoggers">
                要在生成期间使用的远程记录器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String[])">
      <summary>
              生成此项目，生成给定的目标。
            </summary>
      <param name="targets">
                要生成的目标的数组。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              生成此项目，生成给定的目标和使用给定的记录器。
            </summary>
      <param name="targets">
                要生成的目标。
              </param>
      <param name="loggers">
                要在生成期间使用的记录器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              生成此项目，生成给定的目标并使用给定的记录器和远程记录器。
            </summary>
      <param name="targets">
                要生成的目标。
              </param>
      <param name="loggers">
                要在生成期间使用的记录器。
              </param>
      <param name="remoteLoggers">
                要在生成期间使用的远程记录器。
              </param>
      <returns>
              如果成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
      <summary>
              创建一个项目实例基于此项目，但完全断开。
            </summary>
      <returns>
              返回项目实例。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)">
      <summary>
              创建一个项目实例基于此项目，但完全断开。
            </summary>
      <param name="settings">
                确定是否创建的项目实例是不可变，以及它是否包含查找表以提高性能。
              </param>
      <returns>
              返回项目实例。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)">
      <summary>
              通过展开项和属性计算给定的字符串。
               该字符串被评估像找的项目文件末尾。
            </summary>
      <param name="unexpandedValue">
                要计算的字符串。
              </param>
      <returns>
              返回计算的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)">
      <summary>
              获取计算，因此转义所提供的项的 Include 特性的值。
            </summary>
      <param name="item">
                要计算和转义的项。
              </param>
      <returns>
              返回计算转义所提供的项的 Include 特性的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)">
      <summary>
              获取提供的项定义的 Include 属性的计算、 转义值。
            </summary>
      <param name="item">
                要计算和转义的项定义。
              </param>
      <returns>
              返回包含属性的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)">
      <summary>
              获取给定的项类型的项目中的所有项。
               如果没有任何故障，则返回空列表。
               使用 AddItem 或 RemoveItem 来修改此项目中的项。
            </summary>
      <param name="itemType">
                要检索的项类型。
              </param>
      <returns>
              返回在给定的项类型的项目中的所有项。
               如果没有给定的项目同名的项，则返回空列表。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)">
      <summary>
              获取具有给定计算的 Include 特性的所有项。
            </summary>
      <param name="evaluatedInclude">
                计算的 Include 特性。
              </param>
      <returns>
              返回具有给定计算的 Include 特性的所有项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)">
      <summary>
              在给定类型的项目中获取所有项目及其条件属性的计算结果为 true。
               这是只读的列表︰ 使用 AddItem 或 RemoveItem 来修改此项目中的项。
            </summary>
      <param name="itemType">
                要检索的项类型。
              </param>
      <returns>
              返回在给定类型的项目中的所有项，及其条件属性的计算结果为 true。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetLogicalProject">
      <summary>
              获取"逻辑项目"中的所有元素的枚举器。
               逻辑项目定义为从单一的结果的 MSBuild 文件中获取未计算项目内联原始的 MSBuild 项目清单文件的所有导入的文本。
            </summary>
      <returns>
              "逻辑项目"中的所有元素都返回的枚举器。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)">
      <summary>
              获取具有所提供的名称的元数据的转义的值上所提供的项。
            </summary>
      <param name="item">
                将要对其进行转义其元数据中的项。
              </param>
      <param name="name">
                要对其进行转义的元数据名称。
              </param>
      <returns>
              获取具有所提供的名称的元数据的转义的值上所提供的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)">
      <summary>
              获取具有所提供的名称的元数据的转义的值上提供的项定义。
            </summary>
      <param name="item">
                项定义其元数据是对其进行转义。
              </param>
      <param name="name">
                要对其进行转义的元数据名称。
              </param>
      <returns>
              返回所提供的项定义上具有提供的名称的元数据的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)">
      <summary>
              获取提供的元数据的转义的值。
            </summary>
      <param name="metadatum">
                若要对其进行转义元数据。
              </param>
      <returns>
              获取提供的元数据的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)">
      <summary>
              获取具有指定的名称的项目中的任何属性。
            </summary>
      <param name="name">
                要检索的属性的名称。
              </param>
      <returns>
              返回具有指定的名称的项目中的任何属性。
               存在返回 null，如果没有该名称的属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)">
      <summary>
              获取此项目中的给定属性的值。
            </summary>
      <param name="name">
                要检索其值的属性的名称。
              </param>
      <returns>
              返回此项目中的给定属性的值。
               如果没有该名称的属性存在，则返回空字符串。
               转义序列将转换在返回字符串之前。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)">
      <summary>
              获取所提供的属性的转义的值。
            </summary>
      <param name="property">
                要对其进行转义的属性。
              </param>
      <returns>
              返回所提供的属性的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.MarkDirty">
      <summary>
              将此项目标记为已修改。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary">
      <summary>
              重新计算项目以合并的任何更改。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)">
      <summary>
              移除一个全局属性，并将项目标记为已修改。
            </summary>
      <param name="name">
                要删除的全局属性的名称。
              </param>
      <returns>
              如果设置了全局属性的值，则返回 true。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)">
      <summary>
              从项目中移除一个项。
               要移除的项必须出现在项目中，并且不得源自于导入的文件。
            </summary>
      <param name="item">
                要移除的项。
              </param>
      <returns>
              如果此计算的项目; 中存在该项，则返回 true否则为 false。
               通常情况下此方法返回为 true，因为如果请求的项不存在，则方法引发异常。
               如果该项是仅在 ItemsIgnoringCondition 集合中存在，但是，该方法返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})">
      <summary>
              从该项目中删除所有给定的项，除非它们源自于导入的项目。
            </summary>
      <param name="items">
                要删除的项。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)">
      <summary>
              从项目中移除一个属性。
               要删除的属性必须出现在项目中，并且不得源自于导入的文件。
            </summary>
      <param name="property">
                要删除的属性。
              </param>
      <returns>
              如果此计算的项目; 中存在的属性，则返回 true否则为 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save">
      <summary>
              将项目保存到文件系统中，如果使用默认的字符编码的修改。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)">
      <summary>
              指示修改项目，请将项目保存到提供的文本编写器。
               使用文本编写器的字符编码，并将标记为未修改的项目。
            </summary>
      <param name="writer">
                要保存到项目的文本编写器。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.String)">
      <summary>
              将项目保存到文件系统中，如果修改或如果项目源代码的路径发生更改，则使用默认的字符编码。
            </summary>
      <param name="path">
                指向项目源代码的路径。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)">
      <summary>
              将项目保存到文件系统中，如果修改或者项目源代码的路径发生更改，如果使用给定的字符编码。
            </summary>
      <param name="path">
                指向项目源代码的路径。
              </param>
      <param name="encoding">
                用于保存项目的字符编码。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)">
      <summary>
              将项目保存到文件系统中，如果使用给定的字符编码的修改。
            </summary>
      <param name="encoding">
                用于保存项目的字符编码。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)">
      <summary>
              将保存一个"逻辑"或"预处理过的"项目文件，其中包含所有导入的文件，就像它们构成了单个文件。
            </summary>
      <param name="writer">
                保存项目文件编写器。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)">
      <summary>
              在计算项目之后，请设置全局属性。
               如果值发生更改，项目被标记为需要重新计算。
            </summary>
      <param name="name">
                若要设置的全局属性的名称。
              </param>
      <param name="escapedValue">
                新的全局属性的值。
              </param>
      <returns>
              返回 <see langword="true" /> 如果值发生更改，否则，返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)">
      <summary>
              设置或向项目中添加具有给定名称和值的属性。
               如果它不是在导入的文件，请将属性的值覆盖具有相同的名称。
            </summary>
      <param name="name">
                要设置的属性的名称。
              </param>
      <param name="unevaluatedValue">
                属性的新的未计算的值。
              </param>
      <returns>
              返回的属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor">
      <summary>
              创建一个没有全局属性或记录器的项目集合。
               将利用配置文件和注册表初始化项目集合工具集。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
      <summary>
              创建一个没有全局属性或记录器的项目集合。
               将利用给定位置中的工具集初始化项目集合工具集。
            </summary>
      <param name="toolsetLocations">
                要从其中加载工具集的位置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
              实例化一个项目集合，该项目集合包含指定的全局属性但没有记录器，并从配置文件和注册表中读取工具集信息。
            </summary>
      <param name="globalProperties">
                要使用的默认全局属性。
                 可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
      <summary>
              实例化一个项目集合，该项目集合包含指定的全局属性和记录器，并使用指定的工具集位置。
            </summary>
      <param name="globalProperties">
                要使用的默认全局属性。
                 可能为 null。
              </param>
      <param name="loggers">
                要注册的记录器。
                 可能为 null。
              </param>
      <param name="toolsetDefinitionLocations">
                要从其中加载工具集的位置。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)">
      <summary>
              创建一个具有指定的全局属性、记录器、节点计数和 onlyLogCriticalEvents 值的项目集合。
               将利用给定位置中的工具集初始化项目集合工具集。
            </summary>
      <param name="globalProperties">
                要使用的默认全局属性。
                 可能为 null。
              </param>
      <param name="loggers">
                要注册的记录器。
                 可能为 null，此时改为指定给任何生成。
              </param>
      <param name="remoteLoggers">
                要注册的任何远程记录器。
                 可能为 null，此时改为指定给任何生成。
              </param>
      <param name="toolsetDefinitionLocations">
                要从其中加载工具集的位置。
              </param>
      <param name="maxNodeCount">
                要用于生成的节点的最大数量。
              </param>
      <param name="onlyLogCriticalEvents">
                如果设置为 true，则仅记录关键事件。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)">
      <summary>
              向项目集合中添加新的工具集。
               使用相同的工具版本替换任何现有工具集。
            </summary>
      <param name="toolset">
                要添加的工具集。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)">
      <summary>
              确定是否为给定的工具版本定义了工具集。
            </summary>
      <param name="toolsVersion">
                要搜索的工具版本。
              </param>
      <returns>
              如果为给定的工具版本定义了工具集，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose">
      <summary>
              释放托管资源和非托管资源。
                当主机不再需要该项目集合时调用。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)">
      <summary>
              释放托管资源和非托管资源。
                当主机不再需要该项目集合时调用。
               关闭该项目集合拥有的任何记录服务，并释放记录器线程。
            </summary>
      <param name="disposing">
                如果为 true，则释放托管资源和非托管资源；否则仅释放非托管资源。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)">
      <summary>
              将字符串中的特殊字符转换为 MSBuild 转义格式。
            </summary>
      <param name="unescapedString">
                要转换的字符串。
              </param>
      <returns>
              返回转换的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)">
      <summary>
              获取该项目集合的任何具有指定名称的全局属性。
            </summary>
      <param name="name">
                要检索的属性的名称。
              </param>
      <returns>
              返回该项目集合的任何具有指定名称的全局属性；否则返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)">
      <summary>
              获取其项目路径与给定路径相匹配的所有项目。
            </summary>
      <param name="fullPath">
                要匹配的项目文件的路径。
              </param>
      <returns>
              返回其项目路径与给定的路径相匹配的所有项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)">
      <summary>
              获取具有指定的工具版本的工具集。
            </summary>
      <param name="toolsVersion">
                要匹配的工具版本。
              </param>
      <returns>
              返回具有指定的工具版本的工具集。
               如果不存在与此工具版本相匹配的工具集，则返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)">
      <summary>
              利用给定的项目文件中的源代码计算一个项目。
               将使用此项目集合的全局属性和工具版本来计算源代码。
            </summary>
      <param name="fileName">
                要计算的项目文件。
              </param>
      <returns>
              如果已经利用给定的项目文件计算集合中的一个现有项目，则返回该现有项目。
               否则，将创建并计算一个新项目，将其添加到项目集合中，然后返回此项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
              利用从给定的项目文件读取的源代码计算一个项目。
               将使用给定的全局属性和工具版本计算源代码。
            </summary>
      <param name="fileName">
                要计算的项目文件。
              </param>
      <param name="globalProperties">
                要使用的全局属性。
                 可能为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <returns>
              如果已经利用给定的项目文件以及给定的全局属性和工具版本计算集合中的一个现有项目，则返回该现有项目。
               否则，将创建并计算一个新项目，将其添加到项目集合中，然后返回此项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)">
      <summary>
              利用从给定的项目文件读取的源代码计算一个项目。
               将使用此项目集合的全局属性和给定的工具版本来计算源代码。
            </summary>
      <param name="fileName">
                要计算的项目文件。
              </param>
      <param name="toolsVersion">
                要使用的工具版本。
                 可能为 null。
              </param>
      <returns>
              如果已经利用给定的项目文件和给定的工具版本计算集合中的一个现有项目，则返回该现有项目。
               否则，将创建并计算一个新项目，将其添加到项目集合中，然后返回此项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)">
      <summary>
              利用从给定的 XML 读取器读取的源代码计算一个项目。
               将使用此项目集合的全局属性和工具版本来计算源代码。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
      <returns>
              返回新项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
              利用从给定的 XML 读取器读取的源代码计算一个项目。
               将使用给定的全局属性和工具版本计算源代码。
            </summary>
      <param name="xmlReader">
                从中读取项目的 Xml 读取器。
              </param>
      <param name="globalProperties">
                要使用的全局属性。
                 可以为 null，在此情况下，将使用包含项目集合的全局属性。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <returns>
              返回新项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)">
      <summary>
              利用从给定的 XML 读取器读取的源代码计算一个项目。
               将使用此项目集合的全局属性和给定的工具版本来计算源代码。
            </summary>
      <param name="xmlReader">
                从中读取项目源代码的 Xml 读取器。
              </param>
      <param name="toolsVersion">
                要使用的工具版本。
                 可能为 null。
              </param>
      <returns>
              返回新项目。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>
              根元素，并且已被添加到项目集合。
            </summary>
      <param name="element">
                根元素，并且已被添加到项目集合。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              向用于此集合中的项目生成的远程记录器的集合添加给定的远程记录器。
            </summary>
      <param name="remoteLoggers">
                要添加的远程记录器。
                 可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)">
      <summary>
              向用于此集合中的项目生成的记录器集合添加给定的记录器。
            </summary>
      <param name="logger">
                要添加的记录器。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              向用于此集合中的项目生成的记录器集合添加给定的记录器。
            </summary>
      <param name="loggers">
                要添加的记录器。
                 可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets">
      <summary>
              从项目集合中移除所有工具集。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)">
      <summary>
              从默认全局属性集中移除一个全局属性。
            </summary>
      <param name="name">
                要移除的默认全局属性的名称。
              </param>
      <returns>
              如果在移除之前存在该全局属性，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)">
      <summary>
              从项目集合中移除一个工具集。
            </summary>
      <param name="toolsVersion">
                要移除的工具集。
              </param>
      <returns>
              如果在移除之前存在该工具集，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)">
      <summary>
              设置默认全局属性集中的一个属性的值。
            </summary>
      <param name="name">
                要添加或设置的默认全局属性的名称。
              </param>
      <param name="value">
                默认全局属性的新值。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>
              从集合中移除项目的尝试。
            </summary>
      <param name="projectRootElement">
                要卸载的项目的根元素。
              </param>
      <returns>
              如果该项目已卸载，则返回 true。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)">
      <summary>
              将字符串中的转义字符转换为具有特殊意义的 MSBuild 字符。
            </summary>
      <param name="escapedString">
                要转换的字符串。
              </param>
      <returns>
              返回转换的字符串。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects">
      <summary>
              移除此项目集合中的所有项目。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>
              从项目根缓存中移除项目根元素。
            </summary>
      <param name="projectRootElement">
                要卸载的项目根元素。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  如果要卸载的项目根元素仍在使用由已加载的项目或其导入，则抛出。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)">
      <summary>
              从项目集合中移除给定的项目。
            </summary>
      <param name="project">
                要移除的项目。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers">
      <summary>
              移除由此集合中的项目生成使用的记录器集合中的所有记录器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)">
      <summary>
              获取此项给定的元数据的计算结果的值。
            </summary>
      <param name="name">
                要检索其值的元数据的名称。
              </param>
      <returns>
              获取此项给定的元数据的计算结果的值。
               如果不存在具有给定名称的任何元数据，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)">
      <summary>
              对于此项，其中包括源自于项定义元数据获取给定元数据的计算结果的值。
            </summary>
      <param name="name">
                要检索其值的元数据的名称。
              </param>
      <returns>
              返回此项，其中包括源自于项定义元数据的给定元数据的计算的值。
               如果不存在具有给定名称的任何元数据，则返回空字符串。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)">
      <summary>
              确定是否在该项上定义具有给定名称的元数据。
            </summary>
      <param name="name">
                要搜索的元数据的名称。
              </param>
      <returns>
              如果此项; 定义了具有给定名称的元数据，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)">
      <summary>
              删除具有给定名称的任何元数据。
            </summary>
      <param name="name">
                要删除的元数据名称。
              </param>
      <returns>
              如果具有给定名称的元数据之前删除; 存在，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)">
      <summary>
              为给定的名称重命名项。
            </summary>
      <param name="name">
                项的新名称。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)">
      <summary>
              将具有给定名称和求的值的元数据添加到该项目。
            </summary>
      <param name="name">
                要添加的元数据的名称。
              </param>
      <param name="unevaluatedValue">
                要添加的元数据未计算的值。
              </param>
      <returns>
              返回新的元数据。
               如果已存在具有给定名称的元数据，将返回此元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)">
      <summary>
              获取具有给定名称的项定义中的任何元数据。
            </summary>
      <param name="name">
                要检索的元数据的名称。
              </param>
      <returns>
              获取具有给定名称的项定义中的任何元数据。
               如果没有元数据存在具有该名称，则，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)">
      <summary>
              获取具有指定的名称的项目中的任何元数据的值。
            </summary>
      <param name="name">
                要检索其元数据值的项的名称。
              </param>
      <returns>
              返回具有指定的名称; 的项中的任何元数据的值否则将返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)">
      <summary>
              项定义中设置给定的元数据的值。
            </summary>
      <param name="name">
                要设置的元数据名称。
              </param>
      <param name="unevaluatedValue">
                元数据的新的未计算的值。
              </param>
      <returns>
              返回具有给定名称的元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)">
      <summary>
              比较此项目元数据与给定项目元数据是否相等。
            </summary>
      <param name="other">
                要进行比较的项目元数据。
              </param>
      <returns>
              如果项目元数据相等，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)">
      <summary>
              比较此项目属性与给定项目属性是否相等。
            </summary>
      <param name="other">
                要进行比较的项目属性
              </param>
      <returns>
              如果项目属性相等，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)">
      <summary>
              使用给定的工具版本和工具的路径中创建一个工具集。
               全局，保留和环境属性，将从给定的项目集合。
            </summary>
      <param name="toolsVersion">
                该工具集的名称
              </param>
      <param name="toolsPath">
                此工具集的任务和目标的路径
              </param>
      <param name="projectCollection">
                要从中获取属性的项目集合。
              </param>
      <param name="msbuildOverrideTasksPath">
                要搜索的 msbuild overridetasks 文件的路径。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)">
      <summary>
              使用给定的工具版本和工具的路径中创建一个工具集。
               全局，保留和环境属性，将从给定的项目集合。
            </summary>
      <param name="toolsVersion">
                该工具集的名称。
              </param>
      <param name="toolsPath">
                此工具集的任务和目标路径。
              </param>
      <param name="buildProperties">
                应使用工具集相关联的属性。
              
                 可能为 null，在这种情况下将使用一个空属性组。
              </param>
      <param name="projectCollection">
                要从中获取属性的项目集合。
              </param>
      <param name="subToolsets">
                子工具集将添加到此工具集的组。
              </param>
      <param name="msbuildOverrideTasksPath">
                要搜索的 msbuild overridetasks 文件的路径。
                 组的子工具集将添加到此工具集
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)">
      <summary>
              使用给定的工具版本、 工具路径和生成属性创建一个工具集。
               全局，保留和环境属性，将从给定的项目集合。
            </summary>
      <param name="toolsVersion">
                该工具集的名称
              </param>
      <param name="toolsPath">
                此工具集的任务和目标的路径
              </param>
      <param name="buildProperties">
                应使用工具集相关联的属性。
              
                 可能为 null，在这种情况下将使用一个空属性组。
              </param>
      <param name="projectCollection">
                要从中获取属性的项目集合。
              </param>
      <param name="msbuildOverrideTasksPath">
                要搜索的 msbuild overridetasks 文件的路径。
              </param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion">
      <summary>
              创建要用于此工具集的子工具集版本。
            </summary>
      <returns>
              返回要用于此工具集的子工具集版本。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
      <summary>
              创建要用于此工具集的子工具集版本。
            </summary>
      <param name="overrideGlobalProperties">
                全局属性集中的要用于创建子工具集版本。
                 可能为 null。
              </param>
      <param name="solutionVersion">
                要用于创建子工具集版本的解决方案版本。
              </param>
      <returns>
              返回的子工具集版本。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)">
      <summary>
              获取由给定的属性名称和子工具集版本指定属性。
            </summary>
      <param name="propertyName">
                属性的名称。
              </param>
      <param name="subToolsetVersion">
                子工具集的子工具集版本。
                 可能为 null
              </param>
      <returns>
              如果找到，否则为返回 null，则返回指定，该属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor">
      <summary>
              创建一个 BuildAborted 例外。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用于 (de) 序列化的受保护构造函数。
            </summary>
      <param name="info">
                错误的信息。
              </param>
      <param name="context">
                错误上下文中。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.String)">
      <summary>
              创建一个 BuildAborted 例外。
            </summary>
      <param name="message">
                错误消息。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.String,System.Exception)">
      <summary>
              构造并附加的其他错误信息 BuildAbortedException 和内部异常。
            </summary>
      <param name="message">
                错误消息。
              </param>
      <param name="innerException">
                内部异常。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              由于异常实现此接口必须重写 iSerializable 方法。
            </summary>
      <param name="info">
                错误信息。
              </param>
      <param name="context">
                错误上下文。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor">
      <summary>
              默认构造函数。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  操作无效。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String)">
      <summary>
              创建使用指定的错误消息此异常的实例。
            </summary>
      <param name="message">
                错误消息。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  操作无效。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String,System.Exception)">
      <summary>
              创建使用指定的错误消息和内部异常此异常的实例。
            </summary>
      <param name="message">
                错误消息。
              </param>
      <param name="innerException">
                内部异常。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  操作无效。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              ISerializable 方法中，该异常以来，我们必须重写方法实现此接口，如果我们曾经将新成员添加到此类，我们将需要更新此部分。
            </summary>
      <param name="info">
                错误信息。
              </param>
      <param name="context">
                错误上下文。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor">
      <summary>
              默认构造函数。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String)">
      <summary>
              创建使用指定的错误消息此异常的实例。
            </summary>
      <param name="message">
                错误消息。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Exception)">
      <summary>
              创建使用指定的错误消息和内部异常此异常的实例。
            </summary>
      <param name="message">
                错误消息。
              </param>
      <param name="innerException">
                内部异常。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>
              创建使用丰富的错误信息此异常的实例。
            </summary>
      <param name="projectFile">
                无效的项目文件 （可以是空字符串）。
              </param>
      <param name="lineNumber">
                （如果不可用，则设置为零） 的项目中的无效的行号。
              </param>
      <param name="columnNumber">
                （如果不可用，则设置为零） 的项目中的无效的列号。
              </param>
      <param name="endLineNumber">
                （如果不可用，则设置为零） 的项目中的无效行范围的末尾。
              </param>
      <param name="endColumnNumber">
                （如果不可用，则设置为零） 的项目中的无效列范围的末尾。
              </param>
      <param name="message">
                异常的错误消息。
              </param>
      <param name="errorSubcategory">
                （可以为 null） 对错误进行描述的错误子类别。
              </param>
      <param name="errorCode">
                错误代码 （可以为 null）。
              </param>
      <param name="helpKeyword">
                宿主 IDE （可以为 null） 的 F1 帮助关键字。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              ISerializable 方法中，该异常以来，我们必须重写方法实现此接口，如果我们曾经将新成员添加到此类，我们将需要更新此部分。
            </summary>
      <param name="info">
                错误信息。
              </param>
      <param name="context">
                错误上下文。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor">
      <summary>
              基本的构造函数。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              基本的构造函数。
            </summary>
      <param name="info">
                错误信息。
              </param>
      <param name="context">
                错误上下文。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String)">
      <summary>
              基本的构造函数。
            </summary>
      <param name="message">
                错误消息。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String,System.Exception)">
      <summary>
              基本的构造函数。
            </summary>
      <param name="message">
                错误消息。
              </param>
      <param name="innerException">
                内部异常。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String,System.String)">
      <summary>
              MSBuild 错误代码构造函数
            </summary>
      <param name="message">
                错误消息。
              </param>
      <param name="errorCode">
                错误代码。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String,System.String,System.Exception)">
      <summary>
              MSBuild 错误代码构造函数
            </summary>
      <param name="message">
                错误消息。
              </param>
      <param name="errorCode">
                错误代码。
              </param>
      <param name="innerException">
                内部异常。
              </param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              ISerializable 方法中，该异常以来，我们必须重写方法实现此接口，如果我们曾经将新成员添加到此类，我们将需要更新此部分。
            </summary>
      <param name="info">
                错误信息。
              </param>
      <param name="context">
                错误上下文。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.#ctor">
      <summary>
              不指定名称获取新的生成管理器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.#ctor(System.String)">
      <summary>
              创建新的未命名的生成管理器。
            </summary>
      <param name="hostName">
                生成管理器主机。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters)">
      <summary>
              准备 BuildManager 接收版本请求。
            </summary>
      <param name="parameters">
                生成参数中。
                 可能为 null。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  当生成正在进行时引发。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)">
      <summary>
              将提交一个单独的生成请求，且块，直到结果都可用。
            </summary>
      <param name="parameters">
                生成参数。
              </param>
      <param name="requestData">
                生成请求数据。
              </param>
      <returns>
              返回生成结果。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  当生成正在进行时引发。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)">
      <summary>
              提交生成请求并进行阻塞，直到结果都可用。
            </summary>
      <param name="requestData">
                生成请求。
              </param>
      <returns>
              返回生成结果。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  如果尚未调用 StartBuild 或者如果已调用 EndBuild 引发。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.CancelAllSubmissions">
      <summary>
              以异步方式取消所有未完成的提交。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.Dispose">
      <summary>
              释放生成管理器类型。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.EndBuild">
      <summary>
              用信号通知到没有更多的生成请求均应 （或允许） 和 BuildManager 可能清理。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  如果没有生成正在进行中的，引发。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.Finalize">
      <summary>
              完成的生成管理器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)">
      <summary>
              获取匹配 ProjectInstance 的以前生成的项目 BuildManager 缓存中。
            </summary>
      <param name="project">
                应为其检索实例的项目。
              </param>
      <returns>
              以前生成的项目 BuildManager 缓存中返回匹配 ProjectInstance。
               如果不存在，请将从指定的项目创建一个新项目实例。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)">
      <summary>
              提交对当前生成的生成请求但不会立即启动它。
               允许用户执行异步执行或访问之前执行该请求的提交 ID。
            </summary>
      <param name="requestData">
                生成请求数据。
              </param>
      <returns>
              返回将生成的提交。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  如果未调用 StartBuild 或者已调用 EndBuild 引发。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.ResetCaches">
      <summary>
              清除所有生成管理器都缓存的信息。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor">
      <summary>
              创建生成参数。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建生成参数，并从项目集合中初始化它们。
            </summary>
      <param name="projectCollection">
                从中 BuildParameters 应填充本身 ProjectCollection。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.Clone">
      <summary>
              创建此生成参数对象的克隆。
            </summary>
      <returns>
              返回此生成参数对象的克隆。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.GetToolset(System.String)">
      <summary>
              获取给定的工具集。
            </summary>
      <param name="toolsVersion">
                要检索的工具集。
              </param>
      <returns>
              返回的工具集。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[])">
      <summary>
              构造生成基于项目实例的版本请求的请求数据。
            </summary>
      <param name="projectInstance">
                要生成的实例。
              </param>
      <param name="targetsToBuild">
                要生成的目标。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices)">
      <summary>
              构造生成基于项目实例的版本请求的请求数据。
            </summary>
      <param name="projectInstance">
                要生成的实例。
              </param>
      <param name="targetsToBuild">
                要生成的目标。
              </param>
      <param name="hostServices">
                若要使用，如果任何主机服务。
                  可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
      <summary>
              构造基于项目实例的版本请求 BuildRequestData。
            </summary>
      <param name="projectInstance">
                要生成的实例。
              </param>
      <param name="targetsToBuild">
                要生成的目标。
              </param>
      <param name="hostServices">
                若要使用，如果任何主机服务。
                  可能为 null。
              </param>
      <param name="flags">
                要用于生成的标志。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
              构造基于项目实例的版本请求 BuildRequestData。
            </summary>
      <param name="projectInstance">
                要生成的实例。
              </param>
      <param name="targetsToBuild">
                要生成的目标。
              </param>
      <param name="hostServices">
                若要使用，如果任何主机服务。
                  可能为 null。
              </param>
      <param name="flags">
                要用于生成的标志。
              </param>
      <param name="propertiesToTransfer">
                要从项目传输到的任何带进程节点的属性列表。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices)">
      <summary>
              构造与给定的项目路径的版本请求 BuildRequestData。
            </summary>
      <param name="projectFullPath">
                项目文件的完整路径。
              </param>
      <param name="globalProperties">
                要在计算项目的过程中使用的全局属性。
              </param>
      <param name="toolsVersion">
                要用于生成的工具版本。
                  可能为 null。
              </param>
      <param name="targetsToBuild">
                要生成的目标。
              </param>
      <param name="hostServices">
                若要使用，如果任何主机服务。
                  可能为 null。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
      <summary>
              构造与给定的项目路径的版本请求 BuildRequestData。
            </summary>
      <param name="projectFullPath">
                项目文件的完整路径。
              </param>
      <param name="globalProperties">
                要在计算项目的过程中使用的全局属性。
              </param>
      <param name="toolsVersion">
                要用于生成的工具版本。
                  可能为 null。
              </param>
      <param name="targetsToBuild">
                要生成的目标。
              </param>
      <param name="hostServices">
                若要使用，如果任何主机服务。
                  可能为 null。
              </param>
      <param name="flags">
                要用于生成的标志。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.#ctor">
      <summary>
              创建生成结果集。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.AddResultsForTarget(System.String,Microsoft.Build.Execution.TargetResult)">
      <summary>
              将指定的目标的结果添加到此生成结果集。
            </summary>
      <param name="target">
                其结果是要添加目标。
              </param>
      <param name="result">
                目标的结果。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.HasResultsForTarget(System.String)">
      <summary>
              确定是否存在给定的目标的任何结果。
            </summary>
      <param name="target">
                要检索其结果的目标。
              </param>
      <returns>
              如果结果存在; 则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.MergeResults(Microsoft.Build.Execution.BuildResult)">
      <summary>
              将此生成结果集与给定的结果。
            </summary>
      <param name="results">
                要合并的结果。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildSubmission.Execute">
      <summary>
              以同步方式开始生成请求并等待，直到结果都可用。
            </summary>
      <returns>
              返回生成请求。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  请求已启动或已完成。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)">
      <summary>
              启动生成请求以异步方式和在给定的上下文中。
               立即将控制权返回给调用方。
            </summary>
      <param name="callback">
                要完成的生成提交时调用的回调方法。
              </param>
      <param name="context">
                生成提交发生的上下文。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  请求已启动或已完成。
                </exception>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.#ctor">
      <summary>
              创建主机服务。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.GetHostObject(System.String,System.String,System.String)">
      <summary>
              获取给定任务的主机服务，该任务出现在目标中，并且具有给定名称的项目。
            </summary>
      <param name="projectFile">
                项目文件的名称。
              </param>
      <param name="targetName">
                目标的名称。
              </param>
      <param name="taskName">
                与主机服务关联的任务名称。
              </param>
      <returns>
              返回给定任务的主机服务，该任务出现在目标中，并且具有给定名称的项目。
               如果没有主机服务存在，则返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String)">
      <summary>
              获取给定的项目文件的节点关联。
            </summary>
      <param name="projectFile">
                与节点关联的项目文件。
              </param>
      <returns>
              返回给定的项目文件的节点关联。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.OnRenameProject(System.String,System.String)">
      <summary>
              命名或重命名项目时，请更新主机服务表。
            </summary>
      <param name="oldFullPath">
                项目文件的当前路径。
              </param>
      <param name="newFullPath">
                项目文件的新路径。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,Microsoft.Build.Framework.ITaskHost)">
      <summary>
              注册给定的任务/目标对一个宿主服务。
            </summary>
      <param name="projectFile">
                包含任务/目标对的项目文件。
              </param>
      <param name="targetName">
                目标的名称。
              </param>
      <param name="taskName">
                任务的名称。
              </param>
      <param name="hostObject">
                宿主服务。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.SetNodeAffinity(System.String,Microsoft.Build.Execution.NodeAffinity)">
      <summary>
              设置给定的项目文件的节点关联。
            </summary>
      <param name="projectFile">
                项目文件中。
                 如果设置为 String.Empty，所有项目都将都使用给定的节点关联。
                 如果设置为 null，所有节点关联都将被清除。
              </param>
      <param name="nodeAffinity">
                节点关联。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.UnregisterProject(System.String)">
      <summary>
              如果有的话注销项目的主机对象，并删除与之关联的任何节点关联。
            </summary>
      <param name="projectFullPath">
                指向要注销的项目的路径。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.OutOfProcNode.#ctor">
      <summary>
              构造函数。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.OutOfProcNode.Run(System.Exception@)">
      <summary>
              启动该节点和节点请求关闭时才处理消息。
            </summary>
      <param name="shutdownException">
                如果有导致关闭的异常。
              </param>
      <returns>
              关闭的原因。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>
              创建一个新项目实例并从给定的项目根节点，使用默认的项目集合对其进行初始化。
            </summary>
      <param name="xml">
                项目根元素。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建一个新项目实例并从给定的项目根节点，使用给定的全局属性、 工具版本和项目集合对其进行初始化。
            </summary>
      <param name="xml">
                项目根元素
              </param>
      <param name="globalProperties">
                要使用的全局属性。
                 可能为 null。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                项目集合
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建一个新项目实例，并从给定的项目根节点，使用给定的全局属性、 工具版本和项目集合对其进行初始化
            </summary>
      <param name="xml">
                项目根元素。
              </param>
      <param name="globalProperties">
                要使用的全局属性。
                 可能为 null。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="subToolsetVersion">
                子工具集版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                项目集合。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)">
      <summary>
              创建一个新项目实例并从给定的项目文件，使用默认的项目集合对其进行初始化。
            </summary>
      <param name="projectFile">
                项目文件的名称。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
              创建一个新项目实例并从给定的项目文件，使用给定的全局属性、 工具版本和默认的项目集合对其进行初始化。
            </summary>
      <param name="projectFile">
                项目文件的名称。
              </param>
      <param name="globalProperties">
                要使用的全局属性。
              </param>
      <param name="toolsVersion">
                工具版本。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建一个新项目实例并从给定的项目文件，使用给定的全局属性、 工具版本和项目集合对其进行初始化。
            </summary>
      <param name="projectFile">
                项目文件的名称。
              </param>
      <param name="globalProperties">
                要使用的全局属性。
                 可能为 null。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                项目集合
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>
              创建一个新项目实例并从给定的项目文件，使用给定的全局属性、 的工具版本、 子工具集版本和项目集合对其进行初始化。
            </summary>
      <param name="projectFile">
                项目文件的名称。
              </param>
      <param name="globalProperties">
                要使用的全局属性。
                 可能为 null。
              </param>
      <param name="toolsVersion">
                工具版本。
                 可能为 null。
              </param>
      <param name="subToolsetVersion">
                子工具集版本。
                 可能为 null。
              </param>
      <param name="projectCollection">
                项目集合。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)">
      <summary>
              将具有任何元数据的项添加到项目。
            </summary>
      <param name="itemType">
                要添加的项的项类型。
              </param>
      <param name="evaluatedInclude">
                计算的 Include 特性的项。
              </param>
      <returns>
              返回新的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              将具有给定元数据的项添加到项目。
            </summary>
      <param name="itemType">
                要添加的项的项类型。
              </param>
      <param name="evaluatedInclude">
                计算的 Include 特性的项。
              </param>
      <param name="metadata">
                项的元数据。
              </param>
      <returns>
              返回新的项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build">
      <summary>
              使用记录器的项目集合生成项目的默认的目标。
            </summary>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              使用给定的记录器生成项目的默认目标。
            </summary>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              使用给定的记录器和远程记录器生成项目的默认目标。
            </summary>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <param name="remoteLoggers">
                要用于生成的远程记录器。
                 可能为 null。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              使用给定的记录器生成项目的给定的目标。
            </summary>
      <param name="target">
                要生成的目标。
                 可能为 null。
              </param>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              使用给定的记录器和远程记录器生成项目的给定的目标。
            </summary>
      <param name="target">
                要生成的目标。
                 可能为 null。
              </param>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <param name="remoteLoggers">
                要用于生成的远程记录器。
                 可能为 null。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>
              使用给定的记录器生成项目的给定的目标。
            </summary>
      <param name="targets">
                要生成的目标。
                 可能为 null。
              </param>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)">
      <summary>
              使用指定的记录器生成目标的列表。
               目标可能为 null。
               记录器可能为 null。
            </summary>
      <param name="targets">
                要生成的目标的列表。
                 可能为 null。
              </param>
      <param name="loggers">
                要用于生成目标的记录器的枚举的列表。
              </param>
      <param name="targetOutputs">
                目标生成的输出。
              </param>
      <returns>
              如果成功，则返回 true；如果失败，则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>
              使用给定的记录器和远程记录器生成项目的给定的目标。
            </summary>
      <param name="targets">
                要生成的目标。
                 可能为 null。
              </param>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <param name="remoteLoggers">
                要用于生成的远程记录器。
                 可能为 null。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)">
      <summary>
              生成给定的目标与给定的目标输出和使用给定的记录器和远程记录器。
            </summary>
      <param name="targets">
                要生成的目标。
                 可能为 null。
              </param>
      <param name="loggers">
                要用于生成的记录器。
                 可能为 null。
              </param>
      <param name="remoteLoggers">
                要用于生成的远程记录器。
                 可能为 null。
              </param>
      <param name="targetOutputs">
                目标输出中。
              </param>
      <returns>
              如果生成成功，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy">
      <summary>
              在其中创建此项目，所有内容的独立的深层克隆。
               克隆都有与原来相同的可变性。
               编译单个文件或保留生成之间的生成结果很有用。
            </summary>
      <returns>
              创建此项目的独立深层克隆。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)">
      <summary>
              使用指定的可变性，创建此项目，所有内容的独立的深层克隆。
               编译单个文件或保留生成之间的生成结果很有用。
            </summary>
      <param name="isImmutable">
                标志，指示克隆可变性。
              </param>
      <returns>
              返回此项目中，独立的深层克隆，其中指定可变性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)">
      <summary>
              通过扩展项和属性，请使用的当前项和属性可用，然后执行逻辑求值会作为条件计算所提供的字符串。
            </summary>
      <param name="condition">
                要展开的字符串。
              </param>
      <returns>
              如果该字符串的计算结果为 true，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)">
      <summary>
              通过扩展项和属性，请使用的当前项和可用的属性的计算结果所提供的字符串。
            </summary>
      <param name="unexpandedValue">
                要展开的字符串。
              </param>
      <returns>
              返回扩展的字符串值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)">
      <summary>
              获取提供的项定义的 Include 属性的计算、 转义值。
            </summary>
      <param name="item">
                要计算和转义的项定义。
              </param>
      <returns>
              返回计算转义提供的项定义的 Include 特性的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)">
      <summary>
              获取所提供的项包含属性的计算、 转义值。
            </summary>
      <param name="item">
                要计算和转义的项。
              </param>
      <returns>
              返回计算转义所提供的项的 Include 特性的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)">
      <summary>
              获取指定类型的此项目中的所有项。
               这是只读的列表。
            </summary>
      <param name="itemType">
                要检索的项目项类型。
              </param>
      <returns>
              返回指定类型的此项目中的所有项。
               如果不存在，则返回空列表。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)">
      <summary>
              获取指定类型的此项目中的所有项和评估包含值。
               这是只读的列表。
            </summary>
      <param name="itemType">
                要检索的项目项类型。
              </param>
      <param name="evaluatedInclude">
                要检索的项的计算结果的包含值
              </param>
      <returns>
              返回指定类型的此项目中的所有项和评估包含值。
               如果不存在，则返回一个空集合。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)">
      <summary>
              获取具有提供的名称的提供的项定义的元数据的转义的值。
            </summary>
      <param name="item">
                要提供元数据值的项定义。
              </param>
      <param name="name">
                元数据名称。
              </param>
      <returns>
              返回的元数据具有提供的名称的提供的项定义的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)">
      <summary>
              获取具有所提供的名称的元数据的转义的值上所提供的项。
            </summary>
      <param name="item">
                要提供元数据值的项。
              </param>
      <param name="name">
                元数据名称。
              </param>
      <returns>
              返回上提供的项具有提供的名称的元数据的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)">
      <summary>
              获取提供的元数据的转义的值。
            </summary>
      <param name="metadatum">
                若要对其进行转义元数据。
              </param>
      <returns>
              返回提供的元数据的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)">
      <summary>
              获取具有给定名称的属性。
            </summary>
      <param name="name">
                要检索的属性的名称。
              </param>
      <returns>
              返回具有给定名称的属性。
               如果不存在具有该名称的任何属性，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)">
      <summary>
              获取具有给定名称的属性的值。
            </summary>
      <param name="name">
                要检索其值的属性的名称。
              </param>
      <returns>
              返回具有给定名称的属性的值。
               如果不存在属性具有该名称，则返回空字符串。
               返回的值有没有转义的字符序列。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)">
      <summary>
              获取所提供的属性的转义的值。
            </summary>
      <param name="property">
                要对其进行转义的属性。
              </param>
      <returns>
              返回所提供的属性的转义的值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)">
      <summary>
              如果存在，请从该项目中移除的项。
               如果它存在，则返回 false 否则，则返回 true。
            </summary>
      <param name="item">
                要移除的项。
              </param>
      <returns>
              如果该项已在移除; 之前存在则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)">
      <summary>
              删除具有给定名称的属性。
               如果该属性以前值 （可能为空字符串），否则为 false，则返回 true。
            </summary>
      <param name="name">
                要删除的属性的名称。
              </param>
      <returns>
              如果该属性以前在移除; 之前的值 （可能是一个空字符串） 则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)">
      <summary>
              向项目中添加具有指定的名称和值的属性。
               具有相同名称的属性集合中已覆盖任何属性。
            </summary>
      <param name="name">
                要添加的属性的名称。
              </param>
      <param name="evaluatedValue">
                要添加的属性计算结果的值。
              </param>
      <returns>
              返回新的属性。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement">
      <summary>
              此 ProjectInstance 的内容创建 ProjectRootElement。
            </summary>
      <returns>
              返回表示此实例 ProjectRootElement。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)">
      <summary>
              替换项目状态 <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, ，<see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> 和 <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> 与从指定 <see cref="T:Microsoft.Build.Execution.ProjectInstance" />。
            </summary>
      <param name="projectState">
                <see langword="ProjectInstance" /> 从进行更新。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.GetMetadata(System.String)">
      <summary>
              获取具有给定名称的此项定义中的任何元数据。
            </summary>
      <param name="name">
                要检索的元数据的名称。
              </param>
      <returns>
              返回具有给定名称的此项定义中的任何元数据。
               如果没有元数据存在具有此名称，则，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)">
      <summary>
              获取具有给定名称的元数据，包括元数据从项定义继承。
            </summary>
      <param name="name">
                元数据的名称。
              </param>
      <returns>
              返回具有给定名称的元数据。
               如果没有元数据存在具有该名称，则，返回 null。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)">
      <summary>
              获取具有给定名称，包括从项定义继承的元数据的元数据的值。
            </summary>
      <param name="name">
                元数据的名称。
              </param>
      <returns>
              获取具有给定名称，包括从项定义继承的元数据的元数据的值。
               如果没有元数据存在具有该名称，则返回空字符串。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)">
      <summary>
              确定是否具有给定名称的元数据定义上此项目 （即使其值为空字符串）。
            </summary>
      <param name="name">
                元数据的名称。
              </param>
      <returns>
              如果具有给定名称的元数据定义上 （即使其值为空字符串） 此项，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata">
      <summary>
              ITaskItem 实现。
               获取自定义元数据的集合。
            </summary>
      <returns>
              自定义元数据的集合。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
      <summary>
              ITaskItem 实现。
               将自定义元数据条目复制到另一个项。
            </summary>
      <param name="destinationItem">
                要复制到的元数据条目的项。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)">
      <summary>
              ITaskItem 实现。
               获取指定的元数据条目的值。
            </summary>
      <param name="metadataName">
                元数据条目的名称。
              </param>
      <returns>
              值 <paramref name="attributeName" /> 元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)">
      <summary>
              ITaskItem 实现。
               添加或更改的项的自定义元数据条目。
            </summary>
      <param name="metadataName">
                若要添加或更改的元数据名称。
              </param>
      <param name="metadataValue">
                若要添加或更改的元数据值。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped">
      <summary>
              ITaskItem2 实现。
               对此对象返回的元数据的副本。
                返回的值采用其原始的转义形式。
            </summary>
      <returns>
              返回克隆的元数据，并保留值的转义。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
      <summary>
              ITaskItem2 实现。
               允许查询此项的元数据的值。
            </summary>
      <param name="name">
                要查询的元数据。
              </param>
      <returns>
              返回转义元数据值。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
      <summary>
              ITaskItem2 实现。
               允许在此项上设置一段自定义元数据。
               假定传入的值未转义，并根据需要将值进行转义以维护其值。
            </summary>
      <param name="metadataName">
                元数据名称。
              </param>
      <param name="metadataValue">
                元数据的值。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)">
      <summary>
              删除具有给定名称的元数据。
            </summary>
      <param name="metadataName">
                元数据名称。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
              添加具有给定名称和值的元数据。
               覆盖具有相同名称已在集合中的任何元数据。
            </summary>
      <param name="metadataDictionary">
                要添加的元数据。
              </param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)">
      <summary>
              添加具有给定名称和值的元数据。
               覆盖具有相同名称已在集合中的任何元数据。
            </summary>
      <param name="name">
                要添加的元数据的名称。
              </param>
      <param name="evaluatedValue">
                要添加的元数据计算所得的值。
              </param>
      <returns>
              返回新的元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.ToString">
      <summary>
              获取一个字符串，表示当前项。
            </summary>
      <returns>
              返回一个字符串，表示当前项。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.DeepClone">
      <summary>
              复制的元数据，若要创建的深层克隆。
            </summary>
      <returns>
              返回新的元数据。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.System#IEquatable{Microsoft#Build#Execution#ProjectMetadataInstance}#Equals(Microsoft.Build.Execution.ProjectMetadataInstance)">
      <summary>
              比较此项目元数据与给定项目元数据是否相等。
            </summary>
      <param name="other">
                要进行比较的项目元数据。
              </param>
      <returns>
              如果项目元数据相等，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.ToString">
      <summary>
              获取此元数据的字符串表示。
            </summary>
      <returns>
              返回此元数据的字符串表示。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.System#IEquatable{Microsoft#Build#Execution#ProjectPropertyInstance}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)">
      <summary>
              比较此项目属性与给定项目属性是否相等。
            </summary>
      <param name="other">
                要进行比较的项目属性。
              </param>
      <returns>
              如果项目属性相等，则返回 true；否则返回 false。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.ToString">
      <summary>
              获取此属性的字符串表示形式。
            </summary>
      <returns>
              返回此属性的字符串表示形式。
            </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectTargetInstanceChild.#ctor">
      <summary>
              抽象类不能实例化。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectTaskInstanceChild.#ctor">
      <summary>
              抽象类不能实例化。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.#ctor">
      <summary>
              构造一个记录器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs)">
      <summary>
              此事件转发到中央记录器。
            </summary>
      <param name="e">
                要转发的事件。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>
              若要将事件记录到给定的生成了控制台记录器迹象。
            </summary>
      <param name="eventSource">
                生成事件的的事件的源。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>
              注册为所有控制台记录器记录生成事件。
            </summary>
      <param name="eventSource">
                生成事件的的事件的源。
              </param>
      <param name="nodeCount">
                节点计数。
                  未使用。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown">
      <summary>
              生成引擎完成与此记录器时调用。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.#ctor">
      <summary>
              创建一个默认记录器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>
              创建具有给定详细级别记录到默认控制台记录器实例。
            </summary>
      <param name="verbosity">
                详细级别。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity,Microsoft.Build.Logging.WriteHandler,Microsoft.Build.Logging.ColorSetter,Microsoft.Build.Logging.ColorResetter)">
      <summary>
              初始化记录器与备用输出处理程序。
            </summary>
      <param name="verbosity">
                详细级别。
              </param>
      <param name="write">
                写入处理程序。
              </param>
      <param name="colorSet">
                设置文本颜色。
              </param>
      <param name="colorReset">
                重置的文本颜色。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ApplyParameter(System.String,System.String)">
      <summary>
              适用于记录器参数。
            </summary>
      <param name="parameterName">
                参数的名称。
              </param>
      <param name="parameterValue">
                参数的值。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)">
      <summary>
              当在生成完成时调用。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件自变量。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)">
      <summary>
              当生成开始时调用。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件自变量。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)">
      <summary>
              调用以记录自定义事件。
            </summary>
      <param name="sender">
                事件的发件人。
              </param>
      <param name="e">
                事件自变量。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>
              调用来记录错误事件。
            </summary>
      <param name="sender">
                该事件的发件人。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>
              注册给定的生成事件的控制台记录器。
            </summary>
      <param name="eventSource">
                可用的事件。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>
              初始化与给定的事件源和节点计数记录器。
            </summary>
      <param name="eventSource">
                事件源。
              </param>
      <param name="nodeCount">
                节点计数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
      <summary>
              调用以记录的消息事件。
            </summary>
      <param name="sender">
                该事件的发件人。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
      <summary>
              调用它可记录项目已完成事件。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
      <summary>
              调用它可记录项目已开始事件。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.Shutdown">
      <summary>
              在生成完成时调用。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)">
      <summary>
              调用它可记录目标已完成事件。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)">
      <summary>
              调用它可记录目标已开始事件。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)">
      <summary>
              调用它可记录任务已完成事件。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)">
      <summary>
              调用它可记录任务已开始事件。
            </summary>
      <param name="sender">
                发件人 （应为 null）。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>
              调用来记录警告事件。
            </summary>
      <param name="sender">
                该事件的发件人。
              </param>
      <param name="e">
                事件参数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.#ctor">
      <summary>
              创建一个文件记录器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>
              初始化记录器与给定的事件源。
            </summary>
      <param name="eventSource">
                事件源。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>
              初始化与给定的事件源和节点计数记录器。
            </summary>
      <param name="eventSource">
                事件源。
              </param>
      <param name="nodeCount">
                节点计数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Shutdown">
      <summary>
              生成引擎完成与此记录器时调用。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.#ctor">
      <summary>
              创建一个文件记录器。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>
              注册给定的生成事件的控制台文件记录器。
            </summary>
      <param name="eventSource">
                可用的事件。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>
              初始化在多处理器环境中的一个文件记录器。
            </summary>
      <param name="eventSource">
                事件源。
              </param>
      <param name="nodeCount">
                节点计数。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.Shutdown">
      <summary>
              在生成完成时调用。
            </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ForwardingLoggerRecord.#ctor(Microsoft.Build.Framework.ILogger,Microsoft.Build.Logging.LoggerDescription)">
      <summary>
              创建转发记录器。
            </summary>
      <param name="centralLogger">
                中心记录器。
              </param>
      <param name="forwardingLoggerDescription">
                转发记录器的说明。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>
              从给定的数据创建记录器说明。
            </summary>
      <param name="loggerClassName">
                记录器类名。
              </param>
      <param name="loggerAssemblyName">
                实现记录器程序集名称。
              </param>
      <param name="loggerAssemblyFile">
                程序集实现的文件的记录器。
              </param>
      <param name="loggerSwitchParameters">
                记录器的开关参数。
              </param>
      <param name="verbosity">
                详细级别。
              </param>
    </member>
    <member name="M:Microsoft.Build.Logging.LoggerDescription.CreateLogger">
      <summary>
              根据此说明中的数据创建 ILogger 实例。
            </summary>
      <returns>
              此说明中的数据返回 ILogger 实例。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ElementLocation.Column">
      <summary>
              此元素位于其文件列号。
            
               第一列是编号为的 1。
            
               零表示"未知的位置"。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ElementLocation.File">
      <summary>
              此特定元素产生的文件。
               如果为例，它是已导入的一部分还是发起的目标文件中可能不同于 ProjectFile。
            
               如果未知，则返回空字符串。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ElementLocation.Line">
      <summary>
              此元素位于其文件行号。
            
               第一行是编号为的 1。
            
               0 表示"未知的位置"。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ElementLocation.LocationString">
      <summary>
              适用于更换成一条消息的窗体中的位置。
            
               示例:"c:\dir\proj.csproj (12,34)"调用此创建并格式化一个新字符串。
            
               仅在极少数情况下应位置转消息本身中。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.Condition">
      <summary>
              获取不存在的条件，则隐式为 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.ConditionLocation">
      <summary>
              这不允许使用条件，使其不应被调用。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement">
      <summary>
              获取任何 否则为元素 (MSBuild) 子。
            </summary>
      <returns>
              返回任何否则为子级。
               如果没有以其他方式子存在，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.WhenElements">
      <summary>
              获取所有 When 元素 (MSBuild) 子级。
            </summary>
      <returns>
              返回所有 When 子级。
               有条件时才能始终至少一个子级。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.AllParents">
      <summary>
              所有父此元素，最多 ProjectRootElement 接下来的元素。
            
               无如果这是 ProjectRootElement。
            
               如果，则无此已不附加到父尚未。
            </summary>
      <returns>
              返回所有父元素的枚举器。
               没有任何父级元素的项目元素是否 ProjectRootElement 或如果这尚未附加到父元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Condition">
      <summary>
              获取或设置条件值。
            
               它将返回空字符串如果的 condition 属性是合法的但它不存在或者没有值。
            
               它将返回 null 如果的 Condition 属性是在该元素上非法。
            
               如果要设置的值为空，则移除该属性。
            
               很可能是为了供派生类引发<see cref="T:System.InvalidOperationException" />如果设置条件不适用于这些元素。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.ConditionLocation">
      <summary>
              此元素，如果有的话上的"条件"属性的位置。
            
               如果没有此类的属性，返回 null。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.ContainingProject">
      <summary>
              ProjectRootElement （可能是导入），其中包含此 Xml。
            
               不能为 null。
            </summary>
      <returns>
              返回包含此项目的项目根容器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Label">
      <summary>
              获取或设置标签值。
            
               如果不存在，则返回空字符串。
            
               如果要设置的值为空，则移除该属性。
            </summary>
      <returns>
              返回的标签。
               如果标签不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.LabelLocation">
      <summary>
              此元素，如果有的话上的"标签"属性的位置。
            
               如果没有这样的属性，返回 null;
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Location">
      <summary>
              相应的 Xml 元素的位置。
            
               可能不正确如果不保存文件，或自上次保存后编辑文件。
            
               对于未保存的编辑，该位置仅包含该元素源自该文件的路径。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.NextSibling">
      <summary>
              下一个同级元素。
            
               可能为 null。
            </summary>
      <returns>
              返回此项目元素的下一个同级。
               如果下一个同级元素不存在，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Parent">
      <summary>
              如果这是 ProjectRootElement 为 null。
            
               如果这未附加到父尚未为 null。
            </summary>
      <returns>
              返回包含此项目的项目元素容器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.PreviousSibling">
      <summary>
              上一个同级元素。
            
               可能为 null。
            </summary>
      <returns>
              返回此项目元素的上一个同级。
               如果上一个同级元素不存在，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren">
      <summary>
              在所有子元素中获取的递归深度优先枚举器。
            </summary>
      <returns>
              返回所有子元素的递归深度优先枚举器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.Children">
      <summary>
              获取所有子元素。
            </summary>
      <returns>
              返回所有子元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed">
      <summary>
              获取所有子元素，从最后一个子级开始。
            </summary>
      <returns>
              返回所有子元素，从最后一个子级开始。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.Count">
      <summary>
              获取子元素的数目。
            </summary>
      <returns>
              返回子元素的数目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild">
      <summary>
              获取第一个子元素。
            </summary>
      <returns>
              返回第一个子元素。
               如果存在任何子元素，不则，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild">
      <summary>
              获取最后一个子元素。
            </summary>
      <returns>
              返回最后一个子元素。
               如果存在任何子元素，不则，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Condition">
      <summary>
              获取不存在的条件，则隐式为 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.ConditionLocation">
      <summary>
              这不允许使用条件，使其不应被调用。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Content">
      <summary>
              获取或设置任意 XML 内容的此项目扩展。
            </summary>
      <returns>
              返回的任意 XML 内容的此项目扩展。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Item(System.String)">
      <summary>
              获取或设置内容的第一个子元素与给定 <paramref name="name" /> 参数。
            </summary>
      <param name="name">
                子元素的名称。
              </param>
      <returns>
              返回元素的内容。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectImportElement.Project">
      <summary>
              获取或设置项目属性。
            </summary>
      <returns>
              返回的项目属性的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectImportElement.ProjectLocation">
      <summary>
              项目属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectImportGroupElement.Imports">
      <summary>
              获取在此项目导入所有属性。
            </summary>
      <returns>
              在此项目导入返回所有属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionElement.ItemType">
      <summary>
              获取项定义元素名称。
            </summary>
      <returns>
              返回项定义元素名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionElement.Metadata">
      <summary>
              获取所有子项的元数据定义。
            </summary>
      <returns>
              返回所有子项的元数据定义。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.ItemDefinitions">
      <summary>
              获取所有子项定义。
            </summary>
      <returns>
              返回所有子级项定义。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Exclude">
      <summary>
              获取或设置排除属性值。
            </summary>
      <returns>
              返回排除特性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.ExcludeLocation">
      <summary>
              排除属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.HasMetadata">
      <summary>
              确定此项目是否有任何子元数据元素。
            </summary>
      <returns>
              如果此项具有子元数据元素，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Include">
      <summary>
              获取或设置包含属性值。
            </summary>
      <returns>
              返回包含属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.IncludeLocation">
      <summary>
              Include 特性的位置
            </summary>
      <returns>
              返回包含位置
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.ItemType">
      <summary>
              获取项元素的类型。
            </summary>
      <returns>
              返回项的元素类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.KeepDuplicates">
      <summary>
              获取或设置 KeepDuplicates 值。
            </summary>
      <returns>
              返回的值 KeepDuplicates，或如果不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.KeepDuplicatesLocation">
      <summary>
              获取或设置 KeepDuplicates 特性的位置。
            </summary>
      <returns>
              返回 KeepDuplicates 特性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.KeepMetadata">
      <summary>
              获取或设置 KeepMetadata 属性值。
            </summary>
      <returns>
              返回 KeepMetadata 属性的值，或如果不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.KeepMetadataLocation">
      <summary>
              获取或设置 KeepMetadata 特性的位置。
            </summary>
      <returns>
              返回 KeepMetadata 的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Metadata">
      <summary>
              获取所有子元数据。
            </summary>
      <returns>
              返回所有子元数据。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Remove">
      <summary>
              获取或设置删除属性值。
            </summary>
      <returns>
              返回删除属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.RemoveLocation">
      <summary>
              删除属性位置
            </summary>
      <returns>
              返回删除属性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.RemoveMetadata">
      <summary>
              获取或设置 RemoveMetadata 属性。
            </summary>
      <returns>
              返回 RemoveMetadata 值，或如果不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.RemoveMetadataLocation">
      <summary>
              获取或设置 RemoveMetadata 特性的位置。
            </summary>
      <returns>
              返回 RemoveMetadata 特性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemGroupElement.Items">
      <summary>
              获取所有子项目。
            </summary>
      <returns>
              返回所有子项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectMetadataElement.Name">
      <summary>
              获取元数据名称。
            </summary>
      <returns>
              返回的元数据名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectMetadataElement.Value">
      <summary>
              获取或设置未计算元数据值。
            </summary>
      <returns>
              返回未计算元数据值。
               如果值未初始化，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsAttribute">
      <summary>
              获取或设置 ExecuteTargets 属性的值。
            </summary>
      <returns>
              返回 ExecuteTargets 属性的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsLocation">
      <summary>
              此元素，如果有的话上的"ExecuteTargets"属性的位置。
            
               如果没有这样的属性，返回 null;
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ChooseElements">
      <summary>
              获取所有子选择元素。
            </summary>
      <returns>
              返回所有子选择元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.Condition">
      <summary>
              获取不存在的条件，则隐式为 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ConditionLocation">
      <summary>
              这不允许使用条件，使其不应被调用。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ItemGroups">
      <summary>
              获取所有子组。
            </summary>
      <returns>
              返回所有子组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.PropertyGroups">
      <summary>
              获取所有子属性组。
            </summary>
      <returns>
              返回所有子属性组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.IsOutputItem">
      <summary>
              确定此输出元素是否表示一个输出项，而不是输出属性。
            </summary>
      <returns>
              如果此输出元素表示一个输出项; 则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.IsOutputProperty">
      <summary>
              确定此输出元素是否表示输出属性，而不是一个输出项。
            </summary>
      <returns>
              如果此输出元素表示输出属性; 则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.ItemType">
      <summary>
              获取或设置 ItemType 属性值。
            </summary>
      <returns>
              获取或设置 ItemType 属性值返回一个空字符串，如果该属性不存在。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.ItemTypeLocation">
      <summary>
              项类型特性，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.PropertyName">
      <summary>
              获取或设置属性名称属性值。
            </summary>
      <returns>
              获取或设置属性名称属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.PropertyNameLocation">
      <summary>
              属性名称的属性，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.TaskParameter">
      <summary>
              获取或设置 TaskParameter attributevalue。
            </summary>
      <returns>
              获取或设置 TaskParameter 属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.TaskParameterLocation">
      <summary>
              任务参数属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyElement.Name">
      <summary>
              获取属性名称。
            </summary>
      <returns>
              返回属性名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyElement.Value">
      <summary>
              获取或设置未计算的属性值。
            </summary>
      <returns>
              返回未计算的属性值。
               如果值未初始化，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyGroupElement.Properties">
      <summary>
              获取所有子属性。
            </summary>
      <returns>
              返回所有子属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyGroupElement.PropertiesReversed">
      <summary>
              获取所有子属性，从最后一个子级开始。
            </summary>
      <returns>
              返回所有子属性，从最后一个子级开始。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ChooseElements">
      <summary>
              获取所有子选择元素 (MSBuild)此项目中。
            </summary>
      <returns>
              返回所有子选择元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Condition">
      <summary>
              获取 null，因为条件属性是此元素不存在，并且不存在的条件为隐式 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ConditionLocation">
      <summary>
              请勿使用。
               条件属性不存在为<see cref="T:Microsoft.Build.Construction.ProjectRootElement" />。
               获取引发内部错误。
            </summary>
      <returns>
              引发内部错误，并返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.DefaultTargets">
      <summary>
              获取或设置 DefaultTargets 特性的值。
            </summary>
      <returns>
              返回 DefaultTargets 特性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.DefaultTargetsLocation">
      <summary>
              在此元素，如果有的话 DefaultTargets 特性的位置。
            </summary>
      <returns>
              返回 DefaultTargets 特性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.DirectoryPath">
      <summary>
              获取项目文件的目录路径。
            </summary>
      <returns>
              返回目录路径，永远不会为 null。
               如果未从磁盘加载该项目，将在加载该项目时的时间返回当前目录。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Encoding">
      <summary>
              指定将用于保存在项目文件的字符编码。
            </summary>
      <returns>
              返回的字符编码保存在项目文件。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.FullPath">
      <summary>
              获取项目文件的完整路径。
            </summary>
      <returns>
              返回项目文件的完整路径。
               如果未从磁盘加载该项目，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.HasUnsavedChanges">
      <summary>
              确定自上次加载或保存该项目是否已修改。
            </summary>
      <returns>
              如果已修改项目，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroups">
      <summary>
              获取此项目中的所有子导入组。
            </summary>
      <returns>
              返回此项目中的所有子导入组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed">
      <summary>
              获取此项目中，从最后一个组中的所有子导入组。
            </summary>
      <returns>
              返回所有子导入组在此项目中，从最后一个组开始。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Imports">
      <summary>
              获取此项目中的所有子导入元素。
            </summary>
      <returns>
              获取此项目中的所有子导入元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.InitialTargets">
      <summary>
              获取或设置 InitialTargets 属性的值。
            </summary>
      <returns>
              返回 InitialTargets 特性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.InitialTargetsLocation">
      <summary>
              在此元素，如果有的话 InitialTargets 属性的位置。
            </summary>
      <returns>
              返回 InitialTargets 属性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups">
      <summary>
              获取此项目中的所有子项目定义组。
            </summary>
      <returns>
              返回此项目中的所有子项目定义组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed">
      <summary>
              获取此项目，从最后一个组中的所有子项目定义组。
            </summary>
      <returns>
              返回此项目中，从最后一个组中的所有子项目定义组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions">
      <summary>
              获取此项目中的任意位置的所有项定义组中的所有子项项定义。
            </summary>
      <returns>
              获取此项目中的任意位置的所有项定义组中的所有子项项定义。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroups">
      <summary>
              获取此项目中的所有子组。
            </summary>
      <returns>
              返回此项目中的所有子组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed">
      <summary>
              获取所有子组存在于此项目中，从最后一个组开始。
            </summary>
      <returns>
              返回所有子组存在于此项目中，从最后一个组开始。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Items">
      <summary>
              获取此项目中的所有子项目。
            </summary>
      <returns>
              在此项目中，返回所有子项目，即使它们包含在选择元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.LastWriteTimeWhenRead">
      <summary>
              获取项目文件的上次编写时间。
            </summary>
      <returns>
              获取项目文件的上次编写时间。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ProjectFileLocation">
      <summary>
              源位置的文件本身，其中没有任何特定内容。
               如果该文件尚未提供一个名称，这是一个空的位置。
               这是不拥有任何位置的合法情况。
            </summary>
      <returns>
              返回原始的文件位置或空位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Properties">
      <summary>
              获取此项目中的所有子属性。
            </summary>
      <returns>
              在此项目中，返回所有子属性，即使它们包含在选择元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroups">
      <summary>
              获取此项目中的所有子属性组。
            </summary>
      <returns>
              返回此项目中的所有子属性组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed">
      <summary>
              获取所有子属性组存在于此项目中，从最后一个组开始。
            </summary>
      <returns>
              返回所有子属性组存在于此项目中，从最后一个组开始。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.RawXml">
      <summary>
              获取 XML 内容，它表示此项目。
            </summary>
      <returns>
              返回的 XML 内容表示为一个字符串，此项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Targets">
      <summary>
              获取此项目中的所有子目标。
            </summary>
      <returns>
              返回此项目中的所有子目标。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.TimeLastChanged">
      <summary>
              获取上次修改此项目的时间。
            </summary>
      <returns>
              返回上次修改此项目的时间。
               如果尚未创建或加载以来修改项目，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ToolsVersion">
      <summary>
              获取或设置 ToolsVersion 特性的值。
            </summary>
      <returns>
              返回 ToolsVersion 特性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ToolsVersionLocation">
      <summary>
              在此元素，如果有的话 ToolsVersion 特性的位置。
            </summary>
      <returns>
              返回 ToolsVersion 特性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalProperty">
      <summary>
              获取或设置 TreatAsLocalProperty 属性的值。
            </summary>
      <returns>
              返回 TreatAsLocalProperty 特性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.TreatAsLocalPropertyLocation">
      <summary>
              在此元素，如果有的话 TreatAsLocalProperty 特性的位置。
            </summary>
      <returns>
              返回 TreatAsLocalProperty 属性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.UsingTasks">
      <summary>
              获取所有子 UsingTask 元素 (MSBuild) 此项目中。
            </summary>
      <returns>
              返回此项目中的所有子 UsingTask 元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Version">
      <summary>
              获取此对象的版本号。
            </summary>
      <returns>
              返回此对象的版本号。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.AfterTargets">
      <summary>
              获取或设置AfterTargets属性值。
            </summary>
      <returns>
              返回AfterTargets属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.AfterTargetsLocation">
      <summary>
              AfterTargets 属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.BeforeTargets">
      <summary>
              获取或设置 BeforeTargets 属性值。
            </summary>
      <returns>
              返回 BeforeTargets 属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.BeforeTargetsLocation">
      <summary>
              BeforeTargets 属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargets">
      <summary>
              获取或设置 DependsOnTargets 属性值。
                如果不存在，则返回空字符串。
               如果要设置的值为空，则移除该属性。
            </summary>
      <returns>
              返回 DependsOnTargets 属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargetsLocation">
      <summary>
              DependsOnTargets 属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Inputs">
      <summary>
              获取或设置输入属性值。
                如果不存在，则返回空字符串。
               如果要设置的值为空，则移除该属性。
            </summary>
      <returns>
              返回输入属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.InputsLocation">
      <summary>
              输入属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.ItemGroups">
      <summary>
              获取所有子组
            </summary>
      <returns>
              返回所有子组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputs">
      <summary>
              获取或设置 TrimDuplicateOutputs 属性值。
            </summary>
      <returns>
              返回 TrimDuplicateOutputs 特性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputsLocation">
      <summary>
              TrimDuplicateOutputs 属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Name">
      <summary>
              获取或设置名称，此目标。
            </summary>
      <returns>
              返回此名称目标。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.NameLocation">
      <summary>
              名称属性的位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.OnErrors">
      <summary>
              获取所有子 OnError 元素 (MSBuild)。
            </summary>
      <returns>
              返回所有子 OnError 元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Outputs">
      <summary>
              获取或设置输出属性值。
                如果不存在，则返回空字符串。
               如果要设置的值为空，则移除该属性。
            </summary>
      <returns>
              返回的输出属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.OutputsLocation">
      <summary>
              输出属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.PropertyGroups">
      <summary>
              获取所有子属性组。
            </summary>
      <returns>
              返回所有子属性组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Returns">
      <summary>
              获取或设置返回属性值。
            </summary>
      <returns>
              返回该返回属性值;如果该属性不存在则为 null
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.ReturnsLocation">
      <summary>
              返回属性位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Tasks">
      <summary>
              获取所有子任务。
            </summary>
      <returns>
              返回所有子任务。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError">
      <summary>
              获取或设置ContinueOnError属性值。
            </summary>
      <returns>
              返回ContinueOnError属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.ContinueOnErrorLocation">
      <summary>
              此元素，如果有的话上的"ContinueOnError"属性的位置。
            
               如果没有此类的属性，将返回 null;
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitecture">
      <summary>
              获取或设置任务的体系结构值。
            
               如果不存在，则返回空字符串。
            
               如果要设置的值为空，则移除该属性。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.MSBuildArchitectureLocation">
      <summary>
              此元素，如果有的话上的"MSBuildArchitecture"属性的位置。
            
               如果没有这样的属性，返回 null;
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntime">
      <summary>
              获取或设置任务的运行时值。
            
               如果不存在，则返回空字符串。
            
               如果要设置的值为空，则移除该属性。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.MSBuildRuntimeLocation">
      <summary>
              此元素，如果有的话上的"MSBuildRuntime"属性的位置。
            
               如果没有这样的属性，返回 null;
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Name">
      <summary>
              获取此任务的名称。
            </summary>
      <returns>
              返回此任务的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Outputs">
      <summary>
              获取所有 Output 元素 (MSBuild) 子级。
            </summary>
      <returns>
              返回所有输出元素子级。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.ParameterLocations">
      <summary>
              枚举在任务上的参数的位置。
            
               条件和 ContinueOnError，有其自己的属性，不包括在此集合中。
            
               如果只是大小写不同的参数将返回仅的最后一个。
            
               主机仍可以通过使用 RemoveAllParameters() 删除其他参数。
            </summary>
      <returns>
              返回 <see cref="T:System.Collections.Generic.IEnumerable`1" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Parameters">
      <summary>
              获取此任务的所有未计算的参数。
            </summary>
      <returns>
              返回此任务的所有未计算的参数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition">
      <summary>
              获取 null，因为条件属性是此元素不存在，并且不存在的条件为隐式 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.ConditionLocation">
      <summary>
              请勿使用。
               条件属性不存在为<see cref="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement" />。
               获取引发内部错误。
            </summary>
      <returns>
              引发内部错误，并返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate">
      <summary>
              获取评估属性的值。
            </summary>
      <returns>
              返回求值属性，它是"true"或"false"的值。
               如果该属性不存在，则返回"true"。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.EvaluateLocation">
      <summary>
              此元素，如果有的话的求值属性的位置。
            </summary>
      <returns>
              返回评估属性位置。
               如果没有此类的属性，返回了元素，而不是默认属性的位置的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody">
      <summary>
              获取或设置的内容的内嵌任务的未计算的值。
            </summary>
      <returns>
              返回未计算的内部 XML 内容的内嵌任务。
               如果没有内联任务正文不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.Architecture">
      <summary>
              获取或设置此内联任务的体系结构属性。
            </summary>
      <returns>
              返回体系结构属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.ArchitectureLocation">
      <summary>
              此元素，如果有的话上的体系结构属性的位置。
            </summary>
      <returns>
              返回的体系结构特性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFile">
      <summary>
              获取 AssemblyFile 属性中，选择要加载的程序集的名称的值。
            </summary>
      <returns>
              返回 AssemblyFile 属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFileLocation">
      <summary>
              此元素，如果有的话上的 AssemblyFile 属性的位置。
            </summary>
      <returns>
              返回 AssemblyFile 特性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyName">
      <summary>
              获取和设置程序集名称属性的值。
            </summary>
      <returns>
              返回程序集名称属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyNameLocation">
      <summary>
              此元素，如果有的话上的程序集名称属性的位置。
            </summary>
      <returns>
              返回程序集名称特性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.ParameterGroup">
      <summary>
              获取此内联任务的任何 ParameterGroup 元素。
            </summary>
      <returns>
              返回参数组。
               如果参数组不存在，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.Runtime">
      <summary>
              获取或设置此内联任务的运行时属性。
            </summary>
      <returns>
              返回运行时特性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.RuntimeLocation">
      <summary>
              在此元素，如果有运行时特性的位置。
            </summary>
      <returns>
              返回运行时属性位置。
               如果没有此类的属性，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskBody">
      <summary>
              获取内部 XML 内容此内联任务。
            </summary>
      <returns>
              返回的内部 XML 内容的内嵌任务。
               如果没有正文存在，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactory">
      <summary>
              获取和设置此内联任务的 TaskFactory 属性的值。
            </summary>
      <returns>
              返回 TaskFactory 属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactoryLocation">
      <summary>
              在此元素，如果有的话 TaskFactory 属性的位置。
            </summary>
      <returns>
              返回 TaskFactory 属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskName">
      <summary>
              获取和设置 TaskName 属性的值。
            </summary>
      <returns>
              返回任务名属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskNameLocation">
      <summary>
              在此元素，如果有的话 TaskName 属性的位置。
            </summary>
      <returns>
              返回任务名属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition">
      <summary>
              获取不存在的条件，则隐式为 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ConditionLocation">
      <summary>
              请勿使用。
               该条件属性为此元素不存在。
               获取引发内部错误。
            </summary>
      <returns>
              引发内部错误，并返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name">
      <summary>
              获取和设置此内联任务的参数的名称。
            </summary>
      <returns>
              返回参数的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output">
      <summary>
              获取或设置此内联任务的可选输出属性。
            </summary>
      <returns>
              返回的输出属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.OutputLocation">
      <summary>
              在此元素，如果任何输出属性的位置。
            </summary>
      <returns>
              返回输出属性位置。
               如果没有此类的属性，返回了元素，而不是默认属性的位置的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType">
      <summary>
              获取或设置此内联任务的类型属性。
            </summary>
      <returns>
              返回类型属性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterTypeLocation">
      <summary>
              此元素，如果有的话的 ParameterType 属性的位置。
            </summary>
      <returns>
              返回的 ParameterType 属性位置。
               如果没有此类的属性，返回了元素，而不是默认属性的位置的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required">
      <summary>
              获取或设置所需的特性
            </summary>
      <returns>
              返回所需的特性的值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.RequiredLocation">
      <summary>
              在此元素，如果有必需的特性的位置。
            </summary>
      <returns>
              返回所需特性的位置。
               如果没有此类的属性，返回了元素，而不是默认属性的位置的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectWhenElement.ChooseElements">
      <summary>
              获取所有子选择元素 (MSBuild)。
            </summary>
      <returns>
              返回所有子选择元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectWhenElement.ItemGroups">
      <summary>
              获取所有子组。
            </summary>
      <returns>
              返回所有子组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectWhenElement.PropertyGroups">
      <summary>
              获取所有子属性组。
            </summary>
      <returns>
              返回所有子属性组。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.UsingTaskParameterGroupElement.Condition">
      <summary>
              获取不存在的条件，则隐式为 true。
            </summary>
      <returns>
              将返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.UsingTaskParameterGroupElement.ConditionLocation">
      <summary>
              这不允许使用条件，使其不应被调用。
            </summary>
      <returns>
              引发内部错误，并返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters">
      <summary>
              获取此参数组的所有参数。
            </summary>
      <returns>
              返回所有参数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata">
      <summary>
              获取在评估过程中遇到的所有项定义元数据。
            </summary>
      <returns>
              返回计算过程中遇到的所有项定义元数据。
               这不包括其条件计算结果不为 true，任何元素，也不自上次评估以来添加的任何项定义元数据。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems">
      <summary>
              获取在评估过程中遇到的所有项的枚举器。
               这些读取的第三个计算传递过程。
            </summary>
      <returns>
              返回一个枚举器在评估过程中遇到的所有项。
               这些读取的第三个计算传递过程。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties">
      <summary>
              获取在评估过程中遇到的所有属性。
            </summary>
      <returns>
              返回计算过程中遇到的所有属性。
               这不包括任何属性的条件计算结果不为 true，也不自上次评估以来添加的任何属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ConditionedProperties">
      <summary>
              获取用于评估找到有关属性、 属性组、 导入的条件的属性的可能的属性值的集合和时间的。
            </summary>
      <returns>
              返回用于评估找到有关属性、 属性组、 导入的条件的属性的可能的属性值的集合和时间的。
               该集合是采用规范格式。
               条目的名称是要进行求值的属性的名称和值是可能的属性值的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.DirectoryPath">
      <summary>
              获取此项目的根目录。
            </summary>
      <returns>
              返回此项目的根目录。
               根目录下永远不会为 null;内存中的项目在项目加载时使用的当前目录。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty">
      <summary>
              获取或设置一个标志确定是否 <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> 暂时禁用。
               这样，例如，全局属性，而不必获取标记为已更新为重新评估结果是将项目设置。
            </summary>
      <returns>
              返回一个标志确定是否 <see langword="MarkDirty" /> 暂时禁用。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.EvaluationCounter">
      <summary>
              获取一个数字，每次该项目会重新评估时都会递增。
            </summary>
      <returns>
              返回递增的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.FullPath">
      <summary>
              获取或设置项目源代码文件的完整路径。
            </summary>
      <returns>
              返回项目源代码文件的完整路径。
               如果未从磁盘加载该项目，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.GlobalProperties">
      <summary>
              获取用于此项目的求值的全局属性的字典。
            </summary>
      <returns>
              返回用于计算此项目的全局属性的字典。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Imports">
      <summary>
              获取导致计算此项目的所有文件的列表。
            </summary>
      <returns>
              返回计算此项目的贡献的所有文件的列表。
            
              每个项的名称是导致要导入文件的导入元素。
               每个项的值是项目的导入的项目根。
               导入其条件评估结果为 false 的特性不包含的元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates">
      <summary>
              如果导入已导入多个时间，请获取重复导入的列表。
               但是，仅第一个导入已在计算中使用。
            </summary>
      <returns>
              返回重复导入的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled">
      <summary>
              获取或设置用于选择是否可以生成的目标和任务的此项目的属性。
            </summary>
      <returns>
              如果可以生成的目标和任务的此项目，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.IsDirty">
      <summary>
              获取指示此项目，因此必须重新计算已修改的属性。
            </summary>
      <returns>
              返回一个属性，指示此项目是否已修改，因此必须重新计算。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ItemDefinitions">
      <summary>
              获取在此项目中，按项类型进行键控的项定义的字典。
            </summary>
      <returns>
              在此项目中，按项类型进行键控返回的项定义的字典。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Items">
      <summary>
              获取可枚举的所有项在此项目中的项类型的组排序。
            </summary>
      <returns>
              在此项目中的项类型的组排序的所有项返回的枚举。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition">
      <summary>
              获取可枚举的所有项在此项目中的项类型的组排序。
            </summary>
      <returns>
              返回此项目中，排序的项类型，包括其条件计算结果为 false，或包含在其条件的计算结果为 false 的项组内的项的组中的所有项的枚举。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ItemTypes">
      <summary>
              获取此项目中的所有项类型的枚举器。
            </summary>
      <returns>
              返回此项目中的所有项类型的枚举。
               这是一个有序的集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ProjectCollection">
      <summary>
              获取包含此项目的项目集合。
            </summary>
      <returns>
              返回的项目集合，其中包含此项目，永远不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation">
      <summary>
              源位置的文件本身，其中没有任何特定内容。
               如果该文件尚未提供一个名称，这是一个空的位置。
               这是不拥有任何位置的合法情况。
            </summary>
      <returns>
              返回原始的文件位置或空位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Properties">
      <summary>
              获取此项目中的所有属性的枚举器。
               这是一个无序的集合。
            </summary>
      <returns>
              返回此项目中的所有属性的枚举器。
               由于属性的计算所示，这是一个无序的集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.SkipEvaluation">
      <summary>
              获取或设置一个标志确定是否临时禁用 ReevaluateIfNecessary。
               这需要进行大量具有读取和写入到项目中，主机时很有用，并希望临时牺牲性能的正确性。
            </summary>
      <returns>
              返回一个标志，该标志确定是否临时禁用 ReevaluateIfNecessary。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion">
      <summary>
              如果有的话，请获取 SubToolsetVersion 属性的值。
               此值已合并在一起 ToolsVersion 特性，以确定此项目的工具集属性的值。
            </summary>
      <returns>
              返回 SubToolsetVersion 特性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Targets">
      <summary>
              获取在此项目中，由目标名称进行键控的所有目标的字典。
            </summary>
      <returns>
              在此项目中，由目标名称进行键控返回的所有目标的字典。
               在此集合中不包括重写的目标。
               此字典为只读的。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ToolsVersion">
      <summary>
              如果有的话，请获取此项目，将使用已计算的工具版本。
            </summary>
      <returns>
              如果有的话，请获取此项目，将使用已计算的工具版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Xml">
      <summary>
              获取与此项目关联的根项目。
               决不会为 null
            </summary>
      <returns>
              返回与此决不会为 null 的项目相关联的根项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectChangedEventArgs.Project">
      <summary>
              获取已标记为已更新的项目。
            </summary>
      <returns>
              决不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Count">
      <summary>
              获取当前加载到此集合中的项目的数量。
            </summary>
      <returns>
              返回当前加载到此集合中的项目的数量。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion">
      <summary>
              获取此项目集合的默认工具版本。
            </summary>
      <returns>
              返回此项目集合，始终会定义的默认工具版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty">
      <summary>
              获取或设置一个标志，决定是否 <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> 的此集合中的项目临时禁用。
               例如，可以通过此标记来设置全局属性，而不必将项目标记为已更新（从而导致重新计算）。
            </summary>
      <returns>
              返回一个标志，决定是否 <see langword="MarkDirty" /> 暂时禁用。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection">
      <summary>
              获取全局项目集合对象。
            </summary>
      <returns>
              返回全局项目集合对象。
               这是一个没有全局属性或记录器的单一实例项目集合。
               将从配置文件和注册表获取工具集信息。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties">
      <summary>
              获取此集合中的所有项目的只读默认全局属性。
            </summary>
      <returns>
              返回此集合中的只读默认全局属性的所有项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.HostServices">
      <summary>
              获取或设置一个对象，在生成项目集合中包含的项目的过程中，该对象将为各个任务提供主机服务。
            </summary>
      <returns>
              返回主机服务对象。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled">
      <summary>
              获取或设置一个属性，该属性在默认情况下选择是否可以生成项目集合中的项目的目标和任务。
            </summary>
      <returns>
              获取或设置一个属性，该属性在默认情况下选择是否可以生成此项目集合中的项目的目标和任务。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects">
      <summary>
              获取当前加载到此集合中的所有项目。
            </summary>
      <returns>
              返回当前加载到此集合的所有项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Loggers">
      <summary>
              获取此集合中的项目可用于其生成的所有记录器。
            </summary>
      <returns>
              返回此集合中的项目可用于其生成的所有记录器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents">
      <summary>
              获取或设置一个开关，该开关确定是否仅记录关键事件，例如警告和错误。
            </summary>
      <returns>
              如果仅记录关键事件（例如警告和错误），则为 true；否则为 false。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs.ProjectRootElement">
      <summary>
              并且已被添加到项目集合的根元素。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation">
      <summary>
              获取或设置一个标志，该标志确定是否对此集合中的项目临时禁用 ReevaluateIfNecessary。
               当主机希望对项目进行大量读写操作并希望临时牺牲准确性以换取性能，则可以使用此标志。
            </summary>
      <returns>
              返回一个标志，该标志确定是否临时禁用 ReevaluateIfNecessary。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations">
      <summary>
              获取用于查找工具集的位置。
            </summary>
      <returns>
              返回用于查找工具集的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Toolsets">
      <summary>
              获取可用于此项目集合的工具集。
            </summary>
      <returns>
              返回可用于此项目集合的工具集。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Version">
      <summary>
              获取包含 MSBuild 引擎的程序集文件的文件版本。
            </summary>
      <returns>
              返回包含 MSBuild 引擎的程序集文件的文件版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs.Changed">
      <summary>
              获取对所做更改的类型<see cref="T:Microsoft.Build.Evaluation.ProjectCollection" />。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata">
      <summary>
              获取项的所有元数据的枚举器。
            </summary>
      <returns>
              返回可枚举所有的项元数据，则可以永远不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount">
      <summary>
              获取此项添加元数据的计数。
            </summary>
      <returns>
              返回此项的元数据的计数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude">
      <summary>
              获取包含属性的计算结果的值。
            </summary>
      <returns>
              返回包含属性的计算的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.IsImported">
      <summary>
              确定此项是否源自从导入的文件。
            </summary>
      <returns>
              返回此项源自导入的文件; 如果为 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.ItemType">
      <summary>
              获取或设置此项的类型。
            </summary>
      <returns>
              返回项类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.Metadata">
      <summary>
              获取此项，其中包括源自于项定义的元数据的所有元数据。
            </summary>
      <returns>
              返回此项，其中包括源自于项定义的元数据的所有元数据。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount">
      <summary>
              获取此项，其中包括源自于项定义的任何元数据的元数据和任何内置元数据的计数。
            </summary>
      <returns>
              返回此项，其中包括源自于项定义的任何元数据的元数据和任何内置元数据的计数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.Project">
      <summary>
              获取包含此项目项的项目。
            </summary>
      <returns>
              返回包含此项目项的项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude">
      <summary>
              获取或设置包含属性的求的值。
            </summary>
      <returns>
              返回包含属性的求的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.Xml">
      <summary>
              获取与此项关联的项元素。
            </summary>
      <returns>
              返回与此决不会为 null 的项相关联的项元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType">
      <summary>
              获取此项定义的项类型。
            </summary>
      <returns>
              返回此项定义的项类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata">
      <summary>
              所有元数据获取的项定义的枚举数。
            </summary>
      <returns>
              返回可枚举项定义的所有元数据。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount">
      <summary>
              获取上的项定义的元数据的计数。
            </summary>
      <returns>
              返回的项定义的元数据的计数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Project">
      <summary>
              获取包含此项定义的项目。
            </summary>
      <returns>
              返回包含此项定义，即永远不会为 null 的项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation">
      <summary>
              Condition 属性的位置。
            </summary>
      <returns>
              返回条件特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue">
      <summary>
              获取计算元数据值。
            </summary>
      <returns>
              返回计算元数据值，该值永远不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported">
      <summary>
              确定是否元数据将产生从导入的文件。
            </summary>
      <returns>
              如果元数据来自导入的文件，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType">
      <summary>
              获取包含的项定义或项的项类型。
            </summary>
      <returns>
              返回所包含的项定义或项目项类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Location">
      <summary>
              元素的位置。
            </summary>
      <returns>
              返回的元素位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Name">
      <summary>
              获取元数据的名称。
            </summary>
      <returns>
              返回的元数据的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor">
      <summary>
              获取在评估期间此元数据重写 （从某个项定义或项） 的最后一个元数据。
            </summary>
      <returns>
              返回的最后一个元数据 （来自某个项定义或项） 其值在评估期间此元数据重写。
               如果元数据没有重写，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Project">
      <summary>
              获取包含此元数据的项目。
            </summary>
      <returns>
              返回包含此元数据，即永远不会为 null 的项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue">
      <summary>
              获取或设置未计算元数据值。
            </summary>
      <returns>
              返回未计算元数据值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml">
      <summary>
              获取关联的项目元数据元素。
            </summary>
      <returns>
              返回关联的项目元数据元素，它决不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue">
      <summary>
              获取计算的属性值。
            </summary>
      <returns>
              返回计算的属性值，该值永远不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty">
      <summary>
              确定属性是否源自环境变量。
            </summary>
      <returns>
              如果该属性源自环境变量; 则为 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty">
      <summary>
              确定属性是否为全局属性。
            </summary>
      <returns>
              如果该属性是一个全局属性; 则为 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported">
      <summary>
              确定属性是否源自于导入的文件。
            </summary>
      <returns>
              如果该属性源自从导入的文件而不是从一个环境变量、 全局属性或保留的属性，则返回 true。
               否则，返回 false。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty">
      <summary>
              确定属性是否为保留的属性，例如 MSBuildProjectFile。
            </summary>
      <returns>
              如果该属性是保留的属性，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Name">
      <summary>
              获取属性的名称。
            </summary>
      <returns>
              返回属性名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor">
      <summary>
              获取已被重写此属性在评估期间的最后一个属性。
            </summary>
      <returns>
              返回其值已被重写此属性在评估期间的最后一个属性。
               如果该属性未重写，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Project">
      <summary>
              获取包含此属性的项目。
            </summary>
      <returns>
              返回包含此属性，永远不会为 null 的项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue">
      <summary>
              获取或设置未计算的属性值。
            </summary>
      <returns>
              返回未计算的属性值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Xml">
      <summary>
              获取关联的属性元素。
               支持 XML 属性。
               只有当这是全局的 null、 环境中或内置属性。
            </summary>
      <returns>
              返回关联的属性元素。
               如果这是全局或保留的属性，或者来自环境变量，则返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.ProjectXml">
      <summary>
              获取项目根元素，而这只是更改...
            </summary>
      <returns>
              决不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs.Reason">
      <summary>
              获取更改的原因。
            </summary>
      <returns>
              可能为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ResolvedImport.ImportedProject">
      <summary>
              获取导入的项目之一。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> 表示导入的项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ResolvedImport.ImportingElement">
      <summary>
              获取导入完毕的元素。
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ProjectImportElement" /> 表示导入完毕的元素。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ResolvedImport.IsImported">
      <summary>
              获取标志以确定是否导入元素本身就是导入。
            </summary>
      <returns>
              返回 <see langword="true" /> 导入该元素时，如果 <see langword="false" /> 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.SubToolset.Properties">
      <summary>
              获取对应于此特定的子工具集的属性。
            </summary>
      <returns>
              返回到此特定的子工具集相对应的属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.SubToolset.SubToolsetVersion">
      <summary>
              获取对应于此子工具集的 Visual Studio 版本。
            </summary>
      <returns>
              返回包含此子工具集的 Visual Studio 版本的字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion">
      <summary>
              获取此工具集的默认子工具集版本。
            </summary>
      <returns>
              返回默认子工具集版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.Properties">
      <summary>
              获取工具集与关联的可选属性。
            </summary>
      <returns>
              返回与该工具集关联的可选属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.SubToolsets">
      <summary>
              获取与此工具集相关联的子工具集的集。
            </summary>
      <returns>
              返回的一套子工具集。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.ToolsPath">
      <summary>
              获取指向任务和目标的此工具集的路径。
            </summary>
      <returns>
              返回的任务和目标的此工具集的路径。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.ToolsVersion">
      <summary>
              获取此工具集的名称。
            </summary>
      <returns>
              返回此工具集的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.BuildAbortedException.ErrorCode">
      <summary>
              获取与异常消息关联的错误代码 （如果有）。
            </summary>
      <returns>
              作为字符串; 返回的错误代码如果没有任何错误代码，返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs">
      <summary>
              获取生成事件的详细信息 （如果有） 所记录。
            </summary>
      <returns>
              生成事件参数，则为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode">
      <summary>
              获取与此异常的消息 （而不是内部异常） 相关联的错误代码。
            </summary>
      <returns>
              错误代码字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword">
      <summary>
              获取宿主 IDE 的与此错误，关联的 F1 帮助关键字。
            </summary>
      <returns>
              关键字字符串中。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.InitializationException">
      <summary>
              如果在记录器初始化过程中发生异常，则返回 true
            </summary>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.BaseMessage">
      <summary>
              获取不包括项目文件的异常消息。
            </summary>
      <returns>
              仅错误消息字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ColumnNumber">
      <summary>
              在项目中获取的无效列号 （如果有）。
            </summary>
      <returns>
              无效的列数或零。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.EndColumnNumber">
      <summary>
              获取项目中的无效列范围的最后一个列号 （如果有）。
            </summary>
      <returns>
              最后一个无效的列号或零。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.EndLineNumber">
      <summary>
              获取项目中的无效行范围的最后一个行号 （如果有）。
            </summary>
      <returns>
              最后一个无效的行号或零。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorCode">
      <summary>
              获取与异常消息关联的错误代码 （如果有）。
            </summary>
      <returns>
              错误代码字符串，则为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorSubcategory">
      <summary>
              获取错误子类别 （如果有） 描述该错误的类型。
            </summary>
      <returns>
              子类别字符串或 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.HasBeenLogged">
      <summary>
              获取用于确定是否已记录异常的标志。
               允许在最适当的位置，记录，但继续传播异常。
            </summary>
      <returns>
              返回用于确定是否已记录异常的标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.HelpKeyword">
      <summary>
              获取宿主 IDE 的与此错误，关联的 F1 帮助关键字 （如果有）。
            </summary>
      <returns>
              关键字字符串或 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.LineNumber">
      <summary>
              在项目中 （如果有的话） 获取的无效行号。
            </summary>
      <returns>
              无效的行号，或者零。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.Message">
      <summary>
              获取异常消息包括受影响的项目文件 （如果有）。
            </summary>
      <returns>
              完整的消息字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ProjectFile">
      <summary>
              获取与此异常关联的文件 （如果有）。
               这可能是导入的文件。
            </summary>
      <returns>
              项目的文件名/路径字符串，则为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.ErrorCode">
      <summary>
              MSBuild 错误代码对应与此异常，或者，如果未指定。
            </summary>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildManager.DefaultBuildManager">
      <summary>
              获取生成管理器的单一实例。
            </summary>
      <returns>
              返回生成管理器的单独实例。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.BuildProcessEnvironment">
      <summary>
              获取此生成已创建时设置的环境变量。
            </summary>
      <returns>
              返回生成创建时设置的环境变量。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.BuildThreadPriority">
      <summary>
              获取或设置用于生成所需的线程优先级。
            </summary>
      <returns>
              返回生成的线程优先级
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.Culture">
      <summary>
              获取或设置要在生成过程中使用的区域性的名称。
            </summary>
      <returns>
              返回的区域性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion">
      <summary>
              获取或设置生成的默认工具版本。
            </summary>
      <returns>
              返回的工具版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.DetailedSummary">
      <summary>
              获取或设置指定是否在生成应发出详细的摘要日志末尾的交换机。
            </summary>
      <returns>
              返回指定生成是否应发出日志的结尾处详细的摘要开关的值
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.DisableInProcNode">
      <summary>
              获取或设置该标志确定是否使用在进程节点。
            </summary>
      <returns>
              返回该标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.EnableNodeReuse">
      <summary>
              获取或设置一个标志，该标志确定是否应生成后保持不变并等待后续生成进程外节点。
            </summary>
      <returns>
              返回该标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.EnvironmentProperties">
      <summary>
              获取不可变集合的环境属性。
            </summary>
      <returns>
              返回环境属性的不可变集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ForwardingLoggers">
      <summary>
              获取或设置转发记录器说明的集合。
            </summary>
      <returns>
              返回转发记录器说明的集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.GlobalProperties">
      <summary>
              获取或设置全局属性的不可变集合。
            </summary>
      <returns>
              返回不可变集合的全局属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.HostServices">
      <summary>
              获取或设置服务，允许主机提供对生成过程的更多控制。
            </summary>
      <returns>
              返回主机服务。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics">
      <summary>
              获取或设置一个启用或禁用旧式线程处理语义的开关。
            </summary>
      <returns>
              返回的交换机，启用或禁用旧的线程处理语义。如果启用，false 否则为 true。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.Loggers">
      <summary>
              获取或设置要在生成过程中使用的记录器集合。
            </summary>
      <returns>
              返回要在生成过程中使用记录器的集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.LogInitialPropertiesAndItems">
      <summary>
              获取或设置该标志确定是否在生成记录的输入的参数。
            </summary>
      <returns>
              返回该标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.LogTaskInputs">
      <summary>
              获取或设置该标志确定是否在生成记录任务参数。
            </summary>
      <returns>
              返回该标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.MaxNodeCount">
      <summary>
              获取或设置最大可能会使用此生成的节点数。
            </summary>
      <returns>
              返回的最大可能会使用此生成的节点数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.MemoryUseLimit">
      <summary>
              获取或设置生成应限制自身使用，以兆字节的内存量。
            </summary>
      <returns>
              返回生成应限制自身使用，以兆字节的内存量。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.NodeExeLocation">
      <summary>
              获取或设置可执行生成节点的位置。
            </summary>
      <returns>
              返回可执行文件的生成节点的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents">
      <summary>
              获取或设置一个标志，确定是否应丢弃非关键的日志记录事件。
            </summary>
      <returns>
              返回一个标志，确定是否应丢弃非关键的日志记录事件。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ResetCaches">
      <summary>
              获取或设置一个指定生成配置和结果缓存应该重置的开关。
            </summary>
      <returns>
              返回一个开关指定生成配置和结果缓存。 应该重置的开关如果应重置缓存，则返回 true、 false 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment">
      <summary>
              获取或设置一个开关，指定是否操作环境中的，例如当前目录和环境，应会保存和恢复之间生成项目和任务调用。
            </summary>
      <returns>
              返回一个开关，该开关，该值指示是否应保存和还原项目生成和任务调用; 之间的操作环境环境应保存，则返回 false 否则如果为 true。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ShutdownInProcNodeOnBuildFinish">
      <summary>
              获取或设置确定是否可以关闭正在进行的标志节点在生成完成时。
               默认值为 <see langword="false" />。
            </summary>
      <returns>
              返回该标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations">
      <summary>
              获取或设置要搜索的工具集的位置。
            </summary>
      <returns>
              返回要搜索的工具集的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.Toolsets">
      <summary>
              获取所有工具集。
            </summary>
      <returns>
              返回所有工具集。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.UICulture">
      <summary>
              获取或设置要在生成过程中使用的 UI 区域性的名称。
            </summary>
      <returns>
              返回要在生成过程中使用的 UI 区域性的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging">
      <summary>
              获取或设置指定是否只有一个进程时使用同步日志记录开关。
            </summary>
      <returns>
              返回指定只有一个进程; 时是否使用同步日志记录开关如果为 true，则使用同步日志记录，否则使用异步日志记录。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.ExplicitlySpecifiedToolsVersion">
      <summary>
              获取或设置要用于生成的工具版本。
            </summary>
      <returns>
              返回要用于生成的工具版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.Flags">
      <summary>
              获取或设置此生成请求的附加标志。
            </summary>
      <returns>
              返回生成请求标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.GlobalProperties">
      <summary>
              获取要用于此生成请求的全局属性。
            </summary>
      <returns>
              返回要用于此生成请求的全局属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.HostServices">
      <summary>
              获取此版本的主机服务。
            </summary>
      <returns>
              返回此版本的主机服务。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.ProjectFullPath">
      <summary>
              获取或设置此生成的项目文件的路径。
            </summary>
      <returns>
              返回此生成的项目文件的路径。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.ProjectInstance">
      <summary>
              获取或设置此生成的项目实例。
            </summary>
      <returns>
              项目实例，可以为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.PropertiesToTransfer">
      <summary>
              获取用于传输到生成进程节点的扩展属性的列表。
            </summary>
      <returns>
              返回属性的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.TargetNames">
      <summary>
              获取要生成的目标的名称。
            </summary>
      <returns>
              返回要生成的目标的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.CircularDependency">
      <summary>
              获取一个标志，指示是否检测到循环依赖关系。
            </summary>
      <returns>
              如果检测到循环依赖关系; 则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ConfigurationId">
      <summary>
              获取此生成结果集的配置 ID。
            </summary>
      <returns>
              返回此生成结果集的配置 ID。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.Exception">
      <summary>
              获取为此生成结果集生成的异常。
            </summary>
      <returns>
              返回为此生成结果集生成的异常。
               如果不发生任何异常，则返回 false。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.GlobalRequestId">
      <summary>
              获取此生成结果集的生成请求 id。
            </summary>
      <returns>
              返回此生成结果集的生成请求 id。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.Item(System.String)">
      <summary>
              获取可用于生成结果获得给定目标的索引。
            </summary>
      <param name="target">
                索引的目标。
              </param>
      <returns>
              索引的目标的生成结果。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.NodeRequestId">
      <summary>
              获取原始节点的生成请求 ID。
            </summary>
      <returns>
              返回原始节点的生成请求 ID。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.OverallResult">
      <summary>
              获取此生成的总体结果。
            </summary>
      <returns>
              返回此生成的总体结果。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ParentGlobalRequestId">
      <summary>
              获取颁发此生成结果集所导致的请求的全局生成请求 ID。
            </summary>
      <returns>
              返回发出导致此生成结果集的请求的全局生成请求 ID。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild">
      <summary>
              获取或设置 <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 在生成后状态。
            </summary>
      <returns>
              返回 <see langword="ProjectInstance" /> 对象。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ResultsByTarget">
      <summary>
              获取所有目标结果中此生成结果集的枚举。
            </summary>
      <returns>
              返回此生成结果集的所有目标结果的枚举器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.SubmissionId">
      <summary>
              获取此生成结果集的生成提交是带有关联。
            </summary>
      <returns>
              返回与关联此生成结果集的生成提交。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.AsyncContext">
      <summary>
              获取或设置到提供的异步上下文<see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />，如果任何。
            </summary>
      <returns>
              返回到提供的异步上下文<see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />。
               如果不提供任何上下文，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.BuildManager">
      <summary>
              获取或设置此生成提交与之关联的生成管理器。
            </summary>
      <returns>
              返回此生成提交是与关联的生成管理器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.BuildResult">
      <summary>
              获取或设置生成的结果。
            </summary>
      <returns>
              返回生成的结果。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.IsCompleted">
      <summary>
              确定此生成提交是否已完成。
            </summary>
      <returns>
              如果此生成提交已完成，则返回 truefalse 否则为。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.SubmissionId">
      <summary>
              获取或设置唯一标识此生成提交的 ID。
            </summary>
      <returns>
              返回唯一标识此生成提交的 ID。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.WaitHandle">
      <summary>
              获取 <see cref="T:System.Threading.WaitHandle" /> 完成生成时将发出的对象。
            </summary>
      <returns>
              将返回 null 直到 <see cref="M:Microsoft.Build.Execution.BuildSubmission.Execute" /> 或 <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" /> 返回时，则返回的 WaitHandle 对象。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ITargetResult.Exception">
      <summary>
              获取生成目标时产生的异常。
            </summary>
      <returns>
              返回生成目标时产生的异常。
               如果不发生任何异常，则返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ITargetResult.Items">
      <summary>
              获取由目标的输出的生成项集。
            </summary>
      <returns>
              返回由目标输出的生成项集。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ITargetResult.ResultCode">
      <summary>
              获取生成目标时返回的结果代码。
            </summary>
      <returns>
              返回的结果代码返回时生成目标。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets">
      <summary>
              获取或设置此项目的默认目标的列表。
            </summary>
      <returns>
              返回此项目的默认目标的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Directory">
      <summary>
              获取项目根目录。
               用于计算相对路径以及在生成过程中设置的当前目录。
               永远不会为 null︰ 未从磁盘加载的项目使用从生成开始的时的当前目录。
            </summary>
      <returns>
              返回项目根目录，永远不会为 null。
               未从磁盘加载的项目在生成开始时返回当前目录。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.FullPath">
      <summary>
              获取项目文件的完整路径。
               用于日志记录。
            </summary>
      <returns>
              返回项目文件的完整路径。
               如果项目永远不会被命名为，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties">
      <summary>
              如果有的话，请获取此项目，将使用已计算的全局属性的字典。
            </summary>
      <returns>
              返回计算此项目所使用的全局属性的字典。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets">
      <summary>
              获取列表的初始目标项目和及其所有导入，深度优先。
               在任何其他目标之前，会生成这些目标。
            </summary>
      <returns>
              返回为该项目及其所有导入，深度优先的初始目标的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable">
      <summary>
              获取指示项目实例不可变的标志。
               在创建实例时，将永久设置此标志。
            </summary>
      <returns>
              返回该标志。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions">
      <summary>
              在项目中，按项类型进行键控获取的项定义的只读字典。
            </summary>
      <returns>
              在项目中，按项类型进行键控返回的项定义的只读字典。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Items">
      <summary>
              获取此项目中的所有项。
            </summary>
      <returns>
              返回此项目中的所有项。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes">
      <summary>
              获取此项目中的所有项类型。
            </summary>
      <returns>
              返回此项目中的所有项类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation">
      <summary>
              获取原始文件本身的位置。
               决不会为 null。
            </summary>
      <returns>
              返回原始文件的位置。
               从不返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Properties">
      <summary>
              获取此项目中的所有属性。
            </summary>
      <returns>
              返回此项目中的所有属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Targets">
      <summary>
              获取此项目中所有目标枚举器。
               此集合为只读。
            </summary>
      <returns>
              此项目中的所有目标返回的枚举。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion">
      <summary>
              如果有的话，请获取此项目，将使用已计算的工具版本。
            </summary>
      <returns>
              如果有的话，则返回此项目，将使用已计算的工具版本。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.ItemType">
      <summary>
              获取此项定义的项类型。
            </summary>
      <returns>
              返回此项定义的项类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.Metadata">
      <summary>
              获取此项定义的所有元数据。
               这是只读集合。
            </summary>
      <returns>
              返回此项定义的所有元数据。
               如果没有元数据，则返回空集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataCount">
      <summary>
              获取上此项定义的元数据片数。
            </summary>
      <returns>
              返回此项定义的元数据片数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataNames">
      <summary>
              获取此项定义的元数据名称的枚举器。
               这是只读集合。
            </summary>
      <returns>
              返回此项定义的元数据名称的枚举器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition">
      <summary>
              获取或设置此项目元素的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.ConditionLocation">
      <summary>
              条件，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items">
      <summary>
              获取此项定义的所有子项目。
            </summary>
      <returns>
              返回此项定义的所有子项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Location">
      <summary>
              原始元素的位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Condition">
      <summary>
              获取未计算的条件属性值。
            </summary>
      <returns>
              返回的而言未计算的条件属性值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ConditionLocation">
      <summary>
              如果任何 condition 特性的位置
            </summary>
      <returns>
              返回 condition 特性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Exclude">
      <summary>
              获取未计算的排除属性值。
            </summary>
      <returns>
              返回未计算的排除特性值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ExcludeLocation">
      <summary>
              Exclude 特性，如果任何位置
            </summary>
      <returns>
              返回 exclude 属性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Include">
      <summary>
              获取未计算的包含属性值。
            </summary>
      <returns>
              返回未计算的包含属性值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.IncludeLocation">
      <summary>
              Include 特性，如果任何位置
            </summary>
      <returns>
              返回包含属性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ItemType">
      <summary>
              获取项类型，例如"编译"。
            </summary>
      <returns>
              返回项类型，例如"编译"。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepDuplicates">
      <summary>
              获取未计算的 KeepDuplicates 值。
            </summary>
      <returns>
              返回 KeepDuplicates 值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepDuplicatesLocation">
      <summary>
              获取或设置 KeepDuplicates 属性 （） 的位置，如果有的话。
            </summary>
      <returns>
              返回 KeepDuplicates 特性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepMetadata">
      <summary>
              获取未计算的 KeepMetadata 属性值
            </summary>
      <returns>
              返回 KeepMetadata 值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.KeepMetadataLocation">
      <summary>
              如果有的话，请获取 KeepMetadata 属性 （） 的位置。
            </summary>
      <returns>
              返回 KeepMetadata 的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Location">
      <summary>
              元素的位置
            </summary>
      <returns>
              返回该元素的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Metadata">
      <summary>
              在项上获取未计算元数据的有序的集合。
            </summary>
      <returns>
              返回项未计算元数据的有序的集合。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Remove">
      <summary>
              获取未计算的删除属性值。
            </summary>
      <returns>
              返回未计算的删除属性值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveLocation">
      <summary>
              删除属性，如果任何位置
            </summary>
      <returns>
              返回删除属性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveMetadata">
      <summary>
              获取未计算的 RemoveMetadata 值。
            </summary>
      <returns>
              返回 RemoveMetadata 值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.RemoveMetadataLocation">
      <summary>
              如果有的话，请获取 RemoveMetadata 属性 （） 的位置。
            </summary>
      <returns>
              返回 RemoveMetadata 位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Condition">
      <summary>
              获取未计算的条件属性值。
            </summary>
      <returns>
              返回的而言未计算的条件属性值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.ConditionLocation">
      <summary>
              如果任何 condition 特性的位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Location">
      <summary>
              元素的位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Name">
      <summary>
              获取此元数据的名称。
            </summary>
      <returns>
              返回此元数据的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Value">
      <summary>
              获取此元数据的求的值。
            </summary>
      <returns>
              返回此元数据的未计算的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount">
      <summary>
              在此项上获取的元数据的部分数。
            </summary>
      <returns>
              在该项上返回的元数据的部分数。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude">
      <summary>
              获取计算结果的包含属性值。
            </summary>
      <returns>
              返回计算结果的包含属性值，该值可以是空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.ItemType">
      <summary>
              获取项类型，例如"编译"。
            </summary>
      <returns>
              返回项类型，例如"编译"。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Metadata">
      <summary>
              获取计算的元数据的项的枚举器。
               这是只读集合。
            </summary>
      <returns>
              返回可枚举项的计算元数据。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataCount">
      <summary>
              获取元数据条目，包括从项定义继承的元数据的数目。
            </summary>
      <returns>
              返回的项数的元数据，包括从项定义继承的元数据
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataNames">
      <summary>
              获取此项，包括从项定义继承的元数据的所有元数据名称。
            </summary>
      <returns>
              返回此项，包括从项定义继承的元数据的所有元数据名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec">
      <summary>
              ITaskItem 实现。
               获取或设置项规范。
            </summary>
      <returns>
              项规范。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames">
      <summary>
              ITaskItem 实现。
               获取与项关联的元数据条目的名称。
            </summary>
      <returns>
              与项关联的元数据项的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped">
      <summary>
              ITaskItem2 实现。
               计算包含的值，根据需要进行转义。
               可能为空字符串。
               获取或设置该项目包含值。 对于基于磁盘的项，这将为文件路径。
            </summary>
      <returns>
              返回包含值的项。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Project">
      <summary>
              获取所属的项目。
            </summary>
      <returns>
              返回所属的项目。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectMetadataInstance.EvaluatedValue">
      <summary>
              获取或设置元数据的计算结果的值。
            </summary>
      <returns>
              返回的计算结果的值的元数据，即永远不会为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectMetadataInstance.Name">
      <summary>
              获取元数据的名称。
            </summary>
      <returns>
              返回的元数据的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.Condition">
      <summary>
              获取此 OnError 元素而言未计算的条件属性值。
            </summary>
      <returns>
              返回的而言未计算的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.ConditionLocation">
      <summary>
              条件，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargets">
      <summary>
              获取此元素的未计算的 ExecuteTargets 属性值。
            </summary>
      <returns>
              返回未计算的 ExecuteTargets 属性值，该值可以是空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargetsLocation">
      <summary>
              Execute 的位置以目标属性中，如果有
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.Location">
      <summary>
              元素的位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Condition">
      <summary>
              获取或设置此属性组的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.ConditionLocation">
      <summary>
              获取条件特性的位置。
            </summary>
      <returns>
              返回的 Condition 特性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Location">
      <summary>
              获取元素本身的位置。
            </summary>
      <returns>
              返回的元素的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Properties">
      <summary>
              获取此属性组中的所有子属性。
            </summary>
      <returns>
              返回此属性组中的所有子属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Condition">
      <summary>
              获取或设置此属性未计算的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.ConditionLocation">
      <summary>
              获取条件特性的位置。
            </summary>
      <returns>
              返回条件特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Location">
      <summary>
              获取元素本身的位置。
            </summary>
      <returns>
              返回的元素位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Name">
      <summary>
              获取此属性的名称。
            </summary>
      <returns>
              返回此属性的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Value">
      <summary>
              获取此属性的求的值。
            </summary>
      <returns>
              返回此属性的求的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue">
      <summary>
              获取或设置此属性的计算结果的值。
            </summary>
      <returns>
              返回此属性的计算的值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyInstance.IsImmutable">
      <summary>
              如果此对象是不可变; 则返回 truefalse 否则为。
            
               一个不可变对象不能成为可变。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyInstance.Name">
      <summary>
              获取此属性的名称。
            </summary>
      <returns>
              返回此属性的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.AfterTargetsLocation">
      <summary>
              获取 AfterTargets 特性的位置。
            </summary>
      <returns>
              返回 AfterTargets 特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.BeforeTargetsLocation">
      <summary>
              获取 BeforeTargets 特性的位置。
            </summary>
      <returns>
              返回 BeforeTargets 特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Children">
      <summary>
              获取此目标的子级的列表。
               生成将循环访问此列表来获取每个要执行的任务。
            </summary>
      <returns>
              返回此目标的子级的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Condition">
      <summary>
              获取此目标元素的而言未计算的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.ConditionLocation">
      <summary>
              获取条件特性的位置。
            </summary>
      <returns>
              返回条件特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets">
      <summary>
              获取未计算取决于此目标的目标的以分号分隔列表。
            </summary>
      <returns>
              返回此目标所依赖的目标的未计算的以分号分隔的列表。
               如果此目标中，不依赖于任何其他目标，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargetsLocation">
      <summary>
              获取 DependsOnTargets 属性的位置。
            </summary>
      <returns>
              返回 DependsOnTargets 属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.FullPath">
      <summary>
              获取此目标所源自的文件的完整路径。
            </summary>
      <returns>
              返回到此目标中，产生的文件的完整路径。
               如果使用未加载此目标源自在项目中且永远不会被授予一个路径，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Inputs">
      <summary>
              获取此目标元素未计算的输入。
            </summary>
      <returns>
              此目标元素中返回未计算的输入。
               如果此目标中已没有输入，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.InputsLocation">
      <summary>
              获取输入属性的位置。
            </summary>
      <returns>
              返回输入属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs">
      <summary>
              获取用于此目标中删除重复的输出计算的条件。
            </summary>
      <returns>
              返回用于从此目标删除重复的输出计算的条件。
               如果没有任何条件，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputsLocation">
      <summary>
              获取 KeepDuplicateOutputs 特性的位置。
            </summary>
      <returns>
              返回 KeepDuplicateOutputs 属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Location">
      <summary>
              获取元素本身的位置。
            </summary>
      <returns>
              返回的元素位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Name">
      <summary>
              获取目标的名称。
            </summary>
      <returns>
              返回目标的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren">
      <summary>
              获取到 OnError 目标，请参阅此目标的子级的列表。
            </summary>
      <returns>
              获取到 OnError 目标，请参阅此目标的子级的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Outputs">
      <summary>
              获取此目标元素计算的输出可能为空字符串。
            </summary>
      <returns>
              如果没有输出，此目标元素返回计算的输出将返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.OutputsLocation">
      <summary>
              获取输出属性的位置。
            </summary>
      <returns>
              返回的输出属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Returns">
      <summary>
              获取未计算的返回值的目标元素作为字符串。
            </summary>
      <returns>
              返回未计算的返回值作为字符串的目标元素。
               返回为空字符串或 null，如果未不指定任何返回值。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.ReturnsLocation">
      <summary>
              获取返回特性的位置。
            </summary>
      <returns>
              返回的返回属性的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Tasks">
      <summary>
              获取此目标的直接子级的所有任务。
            </summary>
      <returns>
              返回此目标的直接子级的所有任务。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstanceChild.Condition">
      <summary>
              获取或设置此目标的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstanceChild.ConditionLocation">
      <summary>
              获取条件特性的位置。
            </summary>
      <returns>
              返回条件特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstanceChild.FullPath">
      <summary>
              获取此任务产生的文件的完整路径。
            </summary>
      <returns>
              返回此任务产生的文件的完整路径。
               如果使用未加载来源于项目的任务且永远不会被授予一个路径，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstanceChild.Location">
      <summary>
              获取元素本身的位置。
            </summary>
      <returns>
              返回的元素位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Condition">
      <summary>
              获取此任务的而言未计算的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.ConditionLocation">
      <summary>
              条件，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError">
      <summary>
              获取任务而言未计算的 ContinueOnError 特性。
            </summary>
      <returns>
              返回任务而言未计算的 ContinueOnError 的特性。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnErrorLocation">
      <summary>
              ContinueOnError 特性，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Location">
      <summary>
              原始元素的位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.MSBuildArchitecture">
      <summary>
              在任务上的未计算的 MSBuildArchitecture。
            
               可能为空字符串。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.MSBuildArchitectureLocation">
      <summary>
              MSBuildArchitecture 特性，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.MSBuildRuntime">
      <summary>
              在任务上的未计算的 MSBuildRuntime。
            
               可能为空字符串。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.MSBuildRuntimeLocation">
      <summary>
              MSBuildRuntime 特性，如果任何位置
            </summary>
      <returns>
              返回 <see cref="T:Microsoft.Build.Construction.ElementLocation" />。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Name">
      <summary>
              获取显示在项目的名称可能是限定的该任务。
            </summary>
      <returns>
              在项目中所示，则返回的可能是限定的该任务的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Outputs">
      <summary>
              获取此任务的输出属性和项对象的有序的集。
            </summary>
      <returns>
              返回一组有序的任务的输出属性和项对象。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Parameters">
      <summary>
              获取任务参数名称无序的集和未计算的值的此任务。
            </summary>
      <returns>
              返回的任务参数名称无序的集和未计算的值的此任务。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstanceChild.Condition">
      <summary>
              获取此任务的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstanceChild.ConditionLocation">
      <summary>
              原始条件属性 （如果有） 的位置。
            </summary>
      <returns>
              返回位置的条件或为 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstanceChild.Location">
      <summary>
              获取原始元素的位置。
            </summary>
      <returns>
              返回原始元素的位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstanceChild.TaskParameterLocation">
      <summary>
              获取 TaskParameter 特性的位置。
            </summary>
      <returns>
              返回 TaskParameter 位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Condition">
      <summary>
              获取此项目元素的条件属性。
            </summary>
      <returns>
              返回的条件属性值。
               如果该属性不存在，则返回空字符串。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ConditionLocation">
      <summary>
              获取条件特性的位置。
            </summary>
      <returns>
              返回条件特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemType">
      <summary>
              获取输出要转到的项类型。
            </summary>
      <returns>
              返回输出要转到的项类型。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemTypeLocation">
      <summary>
              获取 ItemType 特性的位置。
            </summary>
      <returns>
              返回 ItemType 属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Location">
      <summary>
              获取元素本身的位置。
            </summary>
      <returns>
              返回的元素位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameter">
      <summary>
              获取此类，以从中检索输出的属性。
            </summary>
      <returns>
              返回要从中检索输出的此类的属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameterLocation">
      <summary>
              获取 TaskParameter 特性的位置。
            </summary>
      <returns>
              返回 TaskParameter 属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Condition">
      <summary>
              获取输出元素的条件属性。
            </summary>
      <returns>
              返回的输出元素的条件属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.ConditionLocation">
      <summary>
              获取条件特性的位置。
            </summary>
      <returns>
              返回条件特性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Location">
      <summary>
              获取元素本身的位置。
            </summary>
      <returns>
              返回的元素位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyName">
      <summary>
              获取接收输出的属性的名称。
            </summary>
      <returns>
              返回接收输出的属性的名称。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyNameLocation">
      <summary>
              获取属性名称特性的位置。
            </summary>
      <returns>
              返回的 PropertyName 属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameter">
      <summary>
              获取要从中检索输出的任务类的属性。
            </summary>
      <returns>
              返回要从中检索输出的任务类的属性。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameterLocation">
      <summary>
              获取 TaskParameter 特性的位置。
            </summary>
      <returns>
              返回 TaskParameter 属性位置。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.TargetResult.Exception">
      <summary>
              如果有的话，请获取中止此目标的异常。
            </summary>
      <returns>
              如果有的话，则返回的异常中止此目标。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.TargetResult.Items">
      <summary>
              获取此目标生成的项。
            </summary>
      <returns>
              返回此目标生成的项。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.TargetResult.ResultCode">
      <summary>
              获取用于生成此目标的结果代码。
            </summary>
      <returns>
              返回用于生成此目标的结果代码。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.BuildEventRedirector">
      <summary>
              获取或设置一个属性，确定如何节点记录器消息转发到中央记录器。
            </summary>
      <returns>
              返回一个属性，确定如何节点记录器消息转发到中央记录器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.NodeId">
      <summary>
              获取或设置节点的 ID。
            </summary>
      <returns>
              返回节点的 ID。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.Parameters">
      <summary>
              获取或设置一个开关，用于确定是否要禁止显示错误和警告的生成过程的结尾处的摘要的输出。
            </summary>
      <returns>
              返回一个开关，用于确定是否要禁止显示错误和警告的生成过程的结尾处的摘要的输出。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.Verbosity">
      <summary>
              获取或设置要显示在事件日志中的详细信息的级别。
            </summary>
      <returns>
              返回要在事件日志中显示的详细信息的级别。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.Parameters">
      <summary>
              获取或设置键 / 值对的以分号分隔的参数列表。
            </summary>
      <returns>
              键 / 值对返回的参数以分号分隔的列表。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.ShowSummary">
      <summary>
              获取或设置确定是否禁止显示错误和警告摘要的交换机。
            </summary>
      <returns>
              返回的交换机，确定是否禁止显示错误和警告摘要。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText">
      <summary>
              获取或设置确定是否禁止显示项目标题的交换机。
            </summary>
      <returns>
              返回一个确定是否禁止显示项目标题的开关。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.Verbosity">
      <summary>
              获取或设置要显示在事件日志中的详细信息的级别。
            </summary>
      <returns>
              返回要在事件日志中显示的详细信息的级别。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.WriteHandler">
      <summary>
              提供对写入处理程序委托访问，因此，如果有必要 （例如文件） 可以重定向。
            </summary>
      <returns>
              返回写入处理程序委托。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.BuildEventRedirector">
      <summary>
              获取或设置一个属性，确定如何节点记录器消息转发到中央记录器。
            </summary>
      <returns>
              返回一个属性，确定如何节点记录器消息转发到中央记录器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.NodeId">
      <summary>
              获取或设置节点的 ID。
            </summary>
      <returns>
              返回节点的 ID。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.Parameters">
      <summary>
              获取或设置一个开关，用于确定是否要禁止显示错误和警告的生成过程的结尾处的摘要的输出。
            </summary>
      <returns>
              返回一个开关，用于确定是否要禁止显示错误和警告的生成过程的结尾处的摘要的输出。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.Verbosity">
      <summary>
              获取或设置要显示在事件日志中的详细信息的级别。
            </summary>
      <returns>
              返回要在事件日志中显示的详细信息的级别。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ForwardingLoggerRecord.CentralLogger">
      <summary>
              获取中心的记录器。
            </summary>
      <returns>
              返回中心记录器。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ForwardingLoggerRecord.ForwardingLoggerDescription">
      <summary>
              获取转发记录器说明。
            </summary>
      <returns>
              返回转发记录器说明。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters">
      <summary>
              获取记录器参数的字符串。
            </summary>
      <returns>
              返回记录器参数的字符串。
                如果没有任何参数，返回 null。
            </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.LoggerDescription.Verbosity">
      <summary>
              返回此记录器的详细级别。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ElementLocation">
      <summary>
              一个文件中的 XML 节点的位置。
            
               项目的任何编辑 XML 通过 MSBuild API 将使失效该 XML 中的位置之前重新加载 XML。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectChooseElement">
      <summary>
              表示 选择元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectElement">
      <summary>
              MSBuild 构造对象模型元素的抽象基类。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectElementContainer">
      <summary>
              为项目元素提供的抽象容器类。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectExtensionsElement">
      <summary>
              表示 ProjectExtensions 元素 (MSBuild) MSBuild 项目中。
               Project 扩展可以包含任意 XML 内容。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectImportElement">
      <summary>
              表示 Import 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectImportGroupElement">
      <summary>
              表示在 MSBuild 项目中的 ImportGroup 元素。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemDefinitionElement">
      <summary>
              表示在 MSBuild 项目中的一个 ItemDefinition 元素。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement">
      <summary>
              表示 ItemDefinitionGroup 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemElement">
      <summary>
              表示 Item 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemGroupElement">
      <summary>
              表示 ItemGroup 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectMetadataElement">
      <summary>
              表示在 MSBuild 项目中的元数据元素。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectOnErrorElement">
      <summary>
              表示 OnError 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectOtherwiseElement">
      <summary>
              表示 否则为元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectOutputElement">
      <summary>
              表示 Output 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectPropertyElement">
      <summary>
              表示在 MSBuild 项目中的属性元素。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectPropertyGroupElement">
      <summary>
              表示在 MSBuild 项目中的 PropertyGroup 元素。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectRootElement">
      <summary>
              表示到 MSBuild 项目文件架构的 MSBuild 项目、 目标文件或相符的任何其他文件。
               此类及其相关的类允许完成 MSBuild 项目或目标的文件读取和写入。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectTargetElement">
      <summary>
              表示 Target 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectTaskElement">
      <summary>
              表示 Task 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement">
      <summary>
              表示内联任务的主体。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectUsingTaskElement">
      <summary>
              表示 UsingTask 元素 (MSBuild) MSBuild 项目中。
               UsingTask 元素可用于的内嵌任务和预编译的任务。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectUsingTaskParameterElement">
      <summary>
              表示内联任务的参数。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectWhenElement">
      <summary>
              表示 When 元素 (MSBuild) MSBuild 项目中。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Construction.UsingTaskParameterGroupElement">
      <summary>
              表示内联任务的 ParameterGroup。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Debugging.DebuggerManager">
      <summary>
              用于支持调试状态机管理器。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread">
      <summary>
              专用的工作线程上执行数据岛。
               辅助线程的实际调用堆栈则映射到解释程序的虚拟调用堆栈。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.Project">
      <summary>
              表示与设计时语义的项目。
               此类可以加载项目文件、 编辑项和属性并生成项目。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectChangedEventArgs">
      <summary>
              <see cref="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged" /> 事件的事件参数。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectCollection">
      <summary>
              封装一组相关项目及其工具集、默认的全局属性集以及生成这些项目应使用的记录器。
               此类的一个全局版本将用作默认的项目集合。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedEventHandler">
      <summary>
              接收已添加到项目集合的项目的处理程序。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                事件数据。
              </param>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectCollection.ProjectAddedToProjectCollectionEventArgs">
      <summary>
               提供有关哪些项目只获得添加到信息 <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" /> 项目集合。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectCollectionChangedEventArgs">
      <summary>
              事件参数 <see cref="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged" /> 事件。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectCollectionChangedState">
      <summary>
              属性或其他与相关联的可变状态 <see cref="T:Microsoft.Build.Evaluation.ProjectCollection" /> 项目集合。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.DefaultToolsVersion">
      <summary>
              <see cref="P:Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion" /> 属性已更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.Toolsets">
      <summary>
              工具集更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.Loggers">
      <summary>
              记录器更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.GlobalProperties">
      <summary>
              更改的全局属性。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.IsBuildEnabled">
      <summary>
              <see cref="P:Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled" /> 属性已更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.OnlyLogCriticalEvents">
      <summary>
              <see cref="P:Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents" /> 属性已更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.HostServices">
      <summary>
              <see cref="P:Microsoft.Build.Evaluation.ProjectCollection.HostServices" /> 属性已更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.DisableMarkDirty">
      <summary>
              <see cref="P:Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty" /> 属性已更改。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectCollectionChangedState.SkipEvaluation">
      <summary>
              <see cref="P:Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation" /> 属性已更改。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectItem">
      <summary>
              表示计算所得的设计时项目项。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectItemDefinition">
      <summary>
              表示一个特定的项类型的计算的项定义。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectLoadSettings">
      <summary>
              用于控制项目加载的标志。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.Default">
      <summary>
              正常的负载。
               这是默认设置。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports">
      <summary>
              计算项目时，请忽略不存在的目标文件。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordDuplicateButNotCircularImports">
      <summary>
              指示用于导入上包括重复项时，但不能采用循环，导入 ImportsIncludingDuplicates 应记录属性
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RejectCircularImports">
      <summary>
              指示是否检测到任何循环导入将引发异常。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectMetadata">
      <summary>
              表示计算的设计时元数据。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectProperty">
      <summary>
              表示计算的设计时属性。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectXmlChangedEventArgs">
      <summary>
              <see cref="E:Microsoft.Build.Evaluation.ProjectCollection.ProjectCollectionChanged" /> 事件的事件参数。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ResolvedImport">
      <summary>
              封装 ProjectImportElement 和导入的项目的 ProjectRootElement 之间计算项目中的导入关系。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.SubToolset">
      <summary>
              表示一个特定的子工具集的一组相对应的属性的聚合。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.Toolset">
      <summary>
              表示聚合的工具版本 （例如。
               "2.0")，工具的路径和可选的关联的属性集。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations">
      <summary>
              用于控制工具集初始化的标志。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.None">
      <summary>
              不要从任何外部位置读取工具集信息。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile">
      <summary>
              从 exe 配置文件中读取工具集信息。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry">
      <summary>
              从注册表 (HKLM\Software\Microsoft\MSBuild\ToolsVersions) 中读取工具集信息。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Exceptions.BuildAbortedException">
      <summary>
              由于错误异常的另一种表示这种情况，其中生成已中止的请求，而不是正在随意异常关闭。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Exceptions.InternalLoggerException">
      <summary>
              此异常用于包装来自记录器未经处理的异常。
               此异常中止生成，并仅可由 MSBuild 引擎引发。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
      <summary>
              用户的 XML 项目文件有问题时，将引发此异常。
               该问题可能是语义或语法。
               后者的作用很 （如果它由项目编写器） 通常由 XSD 验证捕获的类型。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException">
      <summary>
              ToolsetReaders 应引发的异常子类。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildManager">
      <summary>
              此类是用于执行生成的公共入口点。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildParameters">
      <summary>
              此类表示所有要启动生成，必须指定的设置。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildRequestData">
      <summary>
              封装所有提交生成请求所需的数据。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildRequestDataFlags">
      <summary>
              提供进一步控制生成请求的标志。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildRequestDataFlags.None">
      <summary>
              任何标志。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance">
      <summary>
              当存在此标志时，将使用它将在生成中现有的 ProjectInstance 替换为。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildRequestDataFlags.ProvideProjectStateAfterBuild">
      <summary>
              当存在，此标志时<see cref="T:Microsoft.Build.Execution.BuildResult" />中发出此请求的响应将包括<see cref="P:Microsoft.Build.Execution.BuildResult.ProjectStateAfterBuild" />。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildRequestDataFlags.IgnoreExistingProjectState">
      <summary>
              当此标志存在并且具有以前未生成的项目节点上其关联是与此请求要求，项目状态 （但不是目标结果） 之前生成的将忽略此生成请求的相关性不兼容。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildResult">
      <summary>
              表示当前结果集所有会产生针对特定配置的结果的目标。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildResultCode">
      <summary>
              枚举，该值指示生成结果的目标或生成请求的数据。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildResultCode.Success">
      <summary>
              目标或请求成功完成。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildResultCode.Failure">
      <summary>
              目标或请求失败以某种方式。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildSubmission">
      <summary>
              表示处理的生成管理器已提交的生成请求。
               若要执行同步或异步生成请求，并提供对完成后的结果的访问，则可能使用此类的方法。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildSubmissionCompleteCallback">
      <summary>
              在生成完成时接收通知回调函数。
            </summary>
      <param name="submission">
                启动生成提交。
              </param>
    </member>
    <member name="T:Microsoft.Build.Execution.HostServices">
      <summary>
              调解从生成到主机的访问的主机服务的实现。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ITargetResult">
      <summary>
              接口表示为特定目标的结果
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.NodeAffinity">
      <summary>
              枚举的数据类型，用于确定在其中生成项目。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeAffinity.InProc">
      <summary>
              仅可能在进程内节点上计划项目。
               这会自动进行的主机对象时，或者指定 ProjectInstance。
               主机可能会希望指定它是否已知某个任务取决于显式共享的静态数据或其他主机提供的对象。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeAffinity.OutOfProc">
      <summary>
              仅可能在进程外的节点上计划项目。
               主机可能会希望指定这如果已知所生成的项目无法留存宿主环境 （或主机可污染环境时进行生成。）
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeAffinity.Any">
      <summary>
              项目可能会安排任意位置。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.NodeEngineShutdownReason">
      <summary>
              关闭某个节点的原因。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.BuildComplete">
      <summary>
              BuildManager 发送要终止的命令指示该节点。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.BuildCompleteReuse">
      <summary>
              BuildManager 发送命令的命令指示该节点要终止，但若要重新启动以供重复使用。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.ConnectionFailed">
      <summary>
              通信链接失败。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.Error">
      <summary>
              NodeEngine 捕获了异常，这要求要关闭的情况下的节点。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.OutOfProcNode">
      <summary>
              此类表示一个扩展的进程外生成节点的实现。
                此类已弃用，有没有其他方法。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectInstance">
      <summary>
              表示项目实例。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectInstanceSettings">
      <summary>
              包含用于控制项目的实例创建的设置。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.ProjectInstanceSettings.None">
      <summary>
              创建不带任何选项的项目实例。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.ProjectInstanceSettings.Immutable">
      <summary>
              创建项目的不可变的实例。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.ProjectInstanceSettings.ImmutableWithFastItemLookup">
      <summary>
              创建不可变的实例的项目具有可提高性能表查找。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemDefinitionInstance">
      <summary>
              表示某个特定项类型，对项目源代码的所有引用剥离了计算的项定义。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemGroupTaskInstance">
      <summary>
              将包装对某个目标下的未计算项组。
               不可变。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance">
      <summary>
              目标中进行包装的项组下的未计算的项。
               不可变。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance">
      <summary>
              将某项下的未计算元数据包装在目标项组中。
               不可变。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemInstance">
      <summary>
              包装计算项以进行生成。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectMetadataInstance">
      <summary>
              包装用于生成目的的计算结果元数据。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectOnErrorInstance">
      <summary>
              包装 OnError 元素 (MSBuild)。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance">
      <summary>
              包装未计算的 propertygroup 某个目标下。
               不可变。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance">
      <summary>
              目标中包装属性组的未计算的属性。
               不可变。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectPropertyInstance">
      <summary>
              包装用于生成计算的属性。
               这些属性的实例添加和删除通过 ProjectInstance 对象上的方法。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTargetInstance">
      <summary>
              包装 目标元素 (MSBuild)。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTargetInstanceChild">
      <summary>
              提取 <see cref="T:Microsoft.Build.Execution.ProjectTaskInstance" />, ，<see cref="T:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance" /> 和 <see cref="T:Microsoft.Build.Execution.ProjectItemGroupTaskInstance" /> 类。
               这样，在单个目标子级的集合中使用这些类型
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskInstance">
      <summary>
              包装 任务元素 (MSBuild)。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskInstanceChild">
      <summary>
              提取的 TaskOutputItem 和 TaskOutputProperty 类的基类。
               这使他们能够在单个集合中使用。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskOutputItemInstance">
      <summary>
              包装的输出项元素 Task 元素 (MSBuild)。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance">
      <summary>
              表示输出属性元素的 Task 元素 (MSBuild)。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.TargetResult">
      <summary>
              表示用于生成单个目标和整个生成结果结果代码。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Execution.TargetResultCode">
      <summary>
              给定目标结果代码。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.TargetResultCode.Skipped">
      <summary>
              目标已跳过，因为不满足其条件。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.TargetResultCode.Success">
      <summary>
              成功生成目标。
            </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.TargetResultCode.Failure">
      <summary>
              目标生成失败。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ColorResetter">
      <summary>
              用于重置的控制台颜色的委托类型。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ColorSetter">
      <summary>
              用于设置的控制台颜色的委托类型。
            </summary>
      <param name="color">
                文本颜色。
              </param>
    </member>
    <member name="T:Microsoft.Build.Logging.ConfigurableForwardingLogger">
      <summary>
              表示将事件转发到中央记录器 （例如 ConsoleLogger） 记录器驻留在父节点上。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ConsoleLogger">
      <summary>
              表示默认的记录器输出到控制台 (stdout) 的事件数据。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.DistributedFileLogger">
      <summary>
              此类创建一个文本文件，它将包含一个节点的生成日志。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.FileLogger">
      <summary>
              记录到一个文件而不是控制台 ConsoleLogger 专用化。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ForwardingLoggerRecord">
      <summary>
              表示在多处理器日志记录中使用的中央/转发记录器对。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.LoggerDescription">
      <summary>
              包含有关记录器作为可用于实例化记录器，并可序列化不同进程之间传递的值的集合的信息。
            </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.WriteHandler">
      <summary>
              用于将字符串写入某些位置，例如控制台窗口或 IDE 生成窗口使用的委托。
            </summary>
      <param name="message">
                要写入的消息。
              </param>
    </member>
  </members>
</doc>