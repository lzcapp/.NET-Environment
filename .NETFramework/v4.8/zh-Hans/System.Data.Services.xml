<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Services</name>
  </assembly>
  <members>
    <member name="T:System.Data.Services.ChangeInterceptorAttribute">
      <summary>方法上的 <see cref="T:System.Data.Services.ChangeInterceptorAttribute" /> 用于处理对指定实体集名称的更新。</summary>
    </member>
    <member name="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)">
      <summary>为 <paramref name="entitySetName" /> 参数指定的实体集创建新更改拦截器。</summary>
      <param name="entitySetName">实体集的名称，其中包含要应用拦截器的实体。</param>
    </member>
    <member name="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName">
      <summary>获取要应用拦截器的实体集的名称。</summary>
      <returns>表示实体集名称的字符串值。</returns>
    </member>
    <member name="T:System.Data.Services.Configuration.DataServicesFeaturesSection">
      <summary>一个配置节，它允许您配置 WCF 数据服务功能。</summary>
    </member>
    <member name="M:System.Data.Services.Configuration.DataServicesFeaturesSection.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.Configuration.DataServicesFeaturesSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Configuration.DataServicesFeaturesSection.ReplaceFunction">
      <summary>获取或设置 DataServiceReplaceFunctionFeature 实例。</summary>
      <returns>一个 DataServiceReplaceFunctionFeature 实例。</returns>
    </member>
    <member name="T:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature">
      <summary>一个配置元素，它允许您启用或禁用数据服务替换功能。</summary>
    </member>
    <member name="M:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature.Enable">
      <summary>获取或设置指定是否启用替换功能的布尔值。</summary>
      <returns>如果启用了替换功能，则为 true，否则为 false。</returns>
    </member>
    <member name="T:System.Data.Services.Configuration.DataServicesSectionGroup">
      <summary>表示 DataServicesSectionGroup 配置节组。</summary>
    </member>
    <member name="M:System.Data.Services.Configuration.DataServicesSectionGroup.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.Configuration.DataServicesSectionGroup" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Configuration.DataServicesSectionGroup.Features">
      <summary>获取与 DataServicesSectionGroup 关联的 DataServicesFeaturesSection 实例。</summary>
      <returns>一个 DataServicesFeaturesSection 实例。</returns>
    </member>
    <member name="T:System.Data.Services.DataService`1">
      <summary>用于开发 ADO.NET 数据服务的主入口点。</summary>
      <typeparam name="T">定义数据服务的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.DataService`1.#ctor">
      <summary>创建部署模板类所指示类型数据的新数据服务。</summary>
    </member>
    <member name="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)">
      <summary>将数据服务主机附加到由参数 <paramref name="host" /> 标识的数据服务。</summary>
      <param name="host">
        <see cref="T:System.Data.Services.IDataServiceHost" /> 的一个实例。</param>
    </member>
    <member name="M:System.Data.Services.DataService`1.CreateDataSource">
      <summary>创建数据服务将使用的模板类的数据源。</summary>
      <returns>数据源的实例。</returns>
    </member>
    <member name="P:System.Data.Services.DataService`1.CurrentDataSource">
      <summary>获取当前正用于处理请求的数据源实例。</summary>
      <returns>服务的数据源实例。</returns>
    </member>
    <member name="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)">
      <summary>在处理请求的过程中引发异常时调用。</summary>
      <param name="args">异常自变量。</param>
    </member>
    <member name="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
      <summary>在处理每个请求之前调用。 对于批处理请求，将针对顶级批处理请求和批处理中的每个操作各调用一次。</summary>
      <param name="args">包含请求相关信息的 <see cref="T:System.Data.Services.ProcessRequestArgs" />。</param>
    </member>
    <member name="P:System.Data.Services.DataService`1.ProcessingPipeline">
      <summary>获取为数据服务处理管道定义事件的对象。</summary>
      <returns>用于为数据服务处理管道定义事件的 <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Services.DataService`1.ProcessRequest">
      <summary>处理 HTTP 请求。</summary>
    </member>
    <member name="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)">
      <summary>处理 HTTP 请求。</summary>
      <param name="messageBody">HTTP 请求的正文。</param>
      <returns>响应消息。</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceBehavior">
      <summary>添加用于将行为定义到自定义数据服务的设置。</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.AcceptCountRequests">
      <summary>获取或设置是否接受带有 <see langword="$count" /> 路径段或 <see langword="$inlinecount" /> 查询选项的请求。</summary>
      <returns>如果支持计数请求，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.AcceptProjectionRequests">
      <summary>获取或设置是否应接受投影请求。</summary>
      <returns>如果支持投影请求，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.AcceptReplaceFunctionInQuery">
      <summary>允许在请求 URL 中使用替换功能。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.InvokeInterceptorsOnLinkDelete">
      <summary>获取或设置当删除链接时是否调用变更侦听器。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，如果应调用侦听器，则该值为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.MaxProtocolVersion">
      <summary>获取或设置数据服务所发送响应支持的最高协议版本。</summary>
      <returns>一个表示响应中允许的最高版本的 <see cref="T:System.Data.Services.Common.DataServiceProtocolVersion" />。</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceConfiguration">
      <summary>管理 WCF Data Service 的配置。</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.DataServiceBehavior">
      <summary>获取一个定义数据服务的附加行为的 <see cref="T:System.Data.Services.DataServiceBehavior" /> 对象。</summary>
      <returns>
        <see cref="T:System.Data.Services.DataServiceBehavior" /> 对象。</returns>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.EnableTypeAccess(System.String)">
      <summary>向数据服务运行时注册数据类型，使得该数据类型可供自定义数据服务提供程序使用。</summary>
      <param name="typeName">启用后能够用于自定义数据服务提供程序的类型的命名空间限定名称。</param>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion">
      <summary>获取或设置数据服务运行时是否应将负载中所含类型转换为请求中指定的实际属性类型。</summary>
      <returns>一个指示是否执行转换的布尔值。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount">
      <summary>获取或设置单个批处理中允许的变更集和查询操作的最大数量。</summary>
      <returns>一个表示最大变更集数的值。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount">
      <summary>获取或设置可以包含在单个变更集中的最大更改数。</summary>
      <returns>允许的最大更改数。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount">
      <summary>获取或设置可使用 <see langword="$expand" /> 运算符在单个请求中包括的最大相关实体数。</summary>
      <returns>最大相关实体数。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth">
      <summary>获取或设置可在单个请求的 <see langword="$expand" /> 路径中包括的最大相关实体数。</summary>
      <returns>
        <see langword="$expand" /> 路径的最大深度。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert">
      <summary>获取或设置单个 POST 请求中能够包含的最大插入对象数。</summary>
      <returns>最大对象数。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection">
      <summary>获取或设置每个返回集合中的最大项数。</summary>
      <returns>最大项数。</returns>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)">
      <summary>向可由数据服务识别的类型列表中添加类型。</summary>
      <param name="type">要添加到已知类型的集合中的类型。</param>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
      <summary>为指定的实体集资源设置权限。</summary>
      <param name="name">要为其设置权限的实体集的名称。</param>
      <param name="rights">要授予此资源的访问权限，可作为 <see cref="T:System.Data.Services.EntitySetRights" /> 值传递。</param>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)">
      <summary>为实体集资源设置最大页面大小。</summary>
      <param name="name">要为其设置页面大小的实体集资源的名称。</param>
      <param name="size">
        <paramref name="name" /> 中指定的实体集资源的页面大小。</param>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
      <summary>为指定的服务操作设置权限。</summary>
      <param name="name">要为其设置权限的服务操作的名称。</param>
      <param name="rights">要授予此资源的访问权限，可作为 <see cref="T:System.Data.Services.ServiceOperationRights" /> 值传递。</param>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors">
      <summary>获取或设置数据服务是否应返回详细错误。</summary>
      <returns>是否返回详细错误。</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceException">
      <summary>使用指定的错误描述消息表示 <see cref="T:System.Data.Services.DataServiceException" /> 类的实例。</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor">
      <summary>使用由系统提供的用于描述错误的消息初始化 <see cref="T:System.Data.Services.DataServiceException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)">
      <summary>初始化 <see cref="T:System.Data.Services.DataServiceException" /> 类的新实例。</summary>
      <param name="statusCode">异常返回的 HTTP 状态代码。</param>
      <param name="message">异常的错误消息。</param>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)">
      <summary>初始化 <see cref="T:System.Data.Services.DataServiceException" /> 类的新实例。</summary>
      <param name="statusCode">异常的 HTTP 状态代码。</param>
      <param name="errorCode">其中包含错误代码的字符串值。</param>
      <param name="message">包含错误消息的字符串值。</param>
      <param name="messageXmlLang">用于指示错误消息的语言的字符串值。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.String)">
      <summary>使用指定的描述错误的消息初始化 <see cref="T:System.Data.Services.DataServiceException" /> 类的新实例。</summary>
      <param name="message">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Data.Services.DataServiceException" /> 类的新实例。</summary>
      <param name="message">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="P:System.Data.Services.DataServiceException.ErrorCode">
      <summary>获取错误代码。</summary>
      <returns>表示错误代码的整数值。</returns>
    </member>
    <member name="M:System.Data.Services.DataServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>获取导致异常的对象上的数据。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="P:System.Data.Services.DataServiceException.MessageLanguage">
      <summary>获取错误消息语言。</summary>
      <returns>表示消息语言的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceException.StatusCode">
      <summary>获取异常返回的 HTTP 状态代码。</summary>
      <returns>异常的 HTTP 状态代码。</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceHost">
      <summary>派生自 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 的 WCF Data Service 类用于实例化数据服务。</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>初始化 WCF 数据服务 的 <see cref="T:System.Data.Services.DataServiceHost" />。</summary>
      <param name="serviceType">向主机标识 WCF 数据服务。</param>
      <param name="baseAddresses">主机的 URI。</param>
    </member>
    <member name="T:System.Data.Services.DataServiceHostFactory">
      <summary>表示 WCF Data Services 基础结构用于连接 Windows Communication Foundation (WCF) 的类。</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceHostFactory.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.DataServiceHostFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>从 URI 创建新的 <see cref="T:System.Data.Services.DataServiceHost" />。</summary>
      <param name="serviceType">指定要承载的 WCF 服务的类型。</param>
      <param name="baseAddresses">该服务的基址的数组。</param>
      <returns>创建的 <see cref="T:System.Data.Services.DataServiceHost" /> 对象。</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceOperationContext">
      <summary>表示当前正在处理的操作。</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.AbsoluteRequestUri">
      <summary>获取当前操作的请求 URI。</summary>
      <returns>操作的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.AbsoluteServiceUri">
      <summary>获取请求的基本服务 URI。</summary>
      <returns>操作的基本 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.IsBatchRequest">
      <summary>获取指示当前操作是否为批处理请求的一部分的值。</summary>
      <returns>如果该操作为批处理请求的一部分，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.RequestHeaders">
      <summary>获取当前操作的请求标头。</summary>
      <returns>包含请求标头的 <see cref="T:System.Net.WebHeaderCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.RequestMethod">
      <summary>获取操作的 HTTP 请求方法。</summary>
      <returns>HTTP 请求方法。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.ResponseHeaders">
      <summary>获取当前操作的响应标头。</summary>
      <returns>包含响应标头的 <see cref="T:System.Net.WebHeaderCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.ResponseStatusCode">
      <summary>获取或设置响应的状态代码。</summary>
      <returns>操作响应的状态代码。</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceProcessingPipeline">
      <summary>为数据服务处理管道定义事件。</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceProcessingPipeline.#ctor">
      <summary>创建一个新的 <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> 实例。</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedChangeset">
      <summary>在已处理变更集之后发生。</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedRequest">
      <summary>在已处理请求之后发生。</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingChangeset">
      <summary>在已处理变更集之前发生。</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingRequest">
      <summary>在已处理请求之前发生。</summary>
    </member>
    <member name="T:System.Data.Services.DataServiceProcessingPipelineEventArgs">
      <summary>
        <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> 事件的事件参数类。</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceProcessingPipelineEventArgs.OperationContext">
      <summary>获取引发事件的操作的上下文。</summary>
      <returns>作为操作上下文的 <see cref="T:System.Data.Services.DataServiceOperationContext" />。</returns>
    </member>
    <member name="T:System.Data.Services.EntitySetRights">
      <summary>用于定义对 WCF Data Services 所部署数据的访问权限的枚举。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.All">
      <summary>授权创建、读取、更新和删除数据。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.AllRead">
      <summary>授权读取数据。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.AllWrite">
      <summary>授权写入数据。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.None">
      <summary>拒绝所有数据访问权限。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.ReadMultiple">
      <summary>授权读取数据集。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.ReadSingle">
      <summary>授权读取单一数据项。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteAppend">
      <summary>授权在数据集中创建新数据项。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteDelete">
      <summary>授权从数据集中删除数据项。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteMerge">
      <summary>授权合并数据。</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteReplace">
      <summary>授权替换数据。</summary>
    </member>
    <member name="T:System.Data.Services.ETagAttribute">
      <summary>使用实体类型上的此特性来指定用于确定内容更改的属性。</summary>
    </member>
    <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Data.Services.ETagAttribute" /> 类的新实例。</summary>
      <param name="propertyName">其中包含 eTag 值中所使用属性的字符串值。</param>
    </member>
    <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String[])">
      <summary>初始化 <see cref="T:System.Data.Services.ETagAttribute" /> 类的新实例。</summary>
      <param name="propertyNames">其中包含 eTag 值中所使用属性的字符串值。</param>
    </member>
    <member name="P:System.Data.Services.ETagAttribute.PropertyNames">
      <summary>获取 <see cref="T:System.Data.Services.ETagAttribute" /> 中所使用属性的名称。</summary>
      <returns>其中包含属性名称的字符串值。</returns>
    </member>
    <member name="T:System.Data.Services.ExpandSegment">
      <summary>用于指示是否应以内联方式（而不是作为延迟内容）返回数据的查询段。</summary>
    </member>
    <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)">
      <summary>用指定的属性名称和筛选表达式（可能为 null）初始化 <see cref="T:System.Data.Services.ExpandSegment" /> 对象。</summary>
      <param name="name">要扩展的属性的名称。</param>
      <param name="filter">对其应用扩展段的查询中的筛选选项。</param>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.ExpandedProperty">
      <summary>获取要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.Filter">
      <summary>对其应用扩展段的查询中的筛选选项。</summary>
      <returns>指定针对目标数据的筛选器的表达式。</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.HasFilter">
      <summary>获取一个值，该值指示是否将扩展语句与筛选表达式一起使用。</summary>
      <returns>
        <see langword="true" /> 如果将扩展语句用于一个筛选器表达式;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.MaxResultsExpected">
      <summary>获取预期结果的最大数量。</summary>
      <returns>用于指示最大结果数量的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.Name">
      <summary>要扩展的属性的名称。</summary>
      <returns>一个字符串值，其中包含属性的名称。</returns>
    </member>
    <member name="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})">
      <summary>返回一个值，该值指示路径是否包括针对目标数据的筛选选项。</summary>
      <param name="path">用于检查筛选器的各段的枚举。</param>
      <returns>如果路径中的任何段具有筛选器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Services.ExpandSegmentCollection">
      <summary>可由查询后面的 <c>$expand</c> 子句扩展的查询段。</summary>
    </member>
    <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor">
      <summary>为查询创建扩展段的集合。</summary>
    </member>
    <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)">
      <summary>初始化一个新的扩展段集合，该集合为空并具有指定的初始容量。</summary>
      <param name="capacity">新集合最初可以存储的扩展段数。</param>
    </member>
    <member name="P:System.Data.Services.ExpandSegmentCollection.HasFilter">
      <summary>布尔值，指示要扩展的段是否包括筛选子句。</summary>
      <returns>布尔值，指示要扩展的段是否包括筛选子句。</returns>
    </member>
    <member name="T:System.Data.Services.HandleExceptionArgs">
      <summary>指定所发生异常的详细信息，以及关联 HTTP 响应的详细信息。</summary>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.Exception">
      <summary>获取或设置将处理并在响应中返回的异常。</summary>
      <returns>将处理并在响应中返回的异常。</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.ResponseContentType">
      <summary>获取响应内容类型。</summary>
      <returns>用于指示响应格式的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode">
      <summary>获取当数据服务上发生错误时将在响应的 HTTP 标头部分中发送回的状态代码。</summary>
      <returns>HTTP 响应状态代码的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.ResponseWritten">
      <summary>获取一个值，该值指示是否已写入了响应。</summary>
      <returns>用于指示是否已写入响应的布尔值。</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors">
      <summary>获取或设置一个布尔值，该值指示是否将返回详细错误。</summary>
      <returns>用于指示是否将返回详细错误的布尔值。</returns>
    </member>
    <member name="T:System.Data.Services.IDataServiceConfiguration">
      <summary>
        <see cref="T:System.Data.Services.IDataServiceConfiguration" /> 由 WCF Data Services 用于设置服务的行为，包括针对实体集和服务操作的权限，对所允许的请求的限制，默认情况下不易发现的注册类型和关于错误处理的默认详细信息。</summary>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount">
      <summary>获取可在批处理中处理的最大请求数。</summary>
      <returns>指示可在批处理中处理的最大请求数的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount">
      <summary>获取可在批处理中处理的最大更改集数。</summary>
      <returns>指示可在批处理中处理的最大变更集数的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount">
      <summary>获取或设置可由所有对数据服务的请求的 $expand 查询选项展开的最大段数。</summary>
      <returns>要展开的最大段数。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth">
      <summary>获取或设置在所有对数据服务的请求的单一 <c>$expand</c> 路径中受支持的最大段数。</summary>
      <returns>表示的最大数目的整数支持中的段<c>$expand</c>路径。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert">
      <summary>获取或设置可插入单个请求中的最大对象数。</summary>
      <returns>包含可插入单个请求中的最大对象数的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection">
      <summary>获取每个集合的最大结果数。</summary>
      <returns>指示每个集合的最大结果数的整数值。</returns>
    </member>
    <member name="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)">
      <summary>注册数据服务所使用的资源类型。</summary>
      <param name="type">要注册的资源类型。</param>
    </member>
    <member name="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
      <summary>为指定的实体集设置访问规则。</summary>
      <param name="name">所配置访问的实体集名称。</param>
      <param name="rights">实体集所允许的权限。</param>
    </member>
    <member name="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
      <summary>为指定的服务操作设置访问规则。</summary>
      <param name="name">对其设置访问权限的服务操作的名称。</param>
      <param name="rights">根据 <see cref="T:System.Data.Services.ServiceOperationRights" /> 枚举允许的权限。</param>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors">
      <summary>获取或设置默认情况下是否对来自数据服务的所有响使用详细错误。</summary>
      <returns>指示是否返回详细错误的布尔值。</returns>
    </member>
    <member name="T:System.Data.Services.IDataServiceHost">
      <summary>用于指定 WCF Data Services 和其宿主环境之间的交互的接口。</summary>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri">
      <summary>获取一个由客户端发送的绝对 URI。</summary>
      <returns>一个字符串，表示请求的绝对 URI。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri">
      <summary>获取一个绝对 URI，它表示数据服务的根 URI。</summary>
      <returns>一个字符串，表示数据服务的绝对根 URI。</returns>
    </member>
    <member name="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)">
      <summary>获取由方法参数包含的标识键所标识的数据项。</summary>
      <param name="item">字符串值，其中包含所请求项的标识键。</param>
      <returns>由序列化为字符串的查询请求的数据项。</returns>
    </member>
    <member name="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)">
      <summary>使用 <paramref name="args" /> 参数中的信息处理数据服务异常。</summary>
      <param name="args">其中包含异常对象相关信息的 <see cref="T:System.Data.Services.HandleExceptionArgs" />。</param>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestAccept">
      <summary>由请求的 Accept 标头指定的传输协议。</summary>
      <returns>用于指示请求所需传输协议的字符串。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet">
      <summary>获取表示 <c>Accept-Charset</c> HTTP 标头的值的字符串。</summary>
      <returns>表示值的字符串<c>Accept-charset</c> HTTP 标头。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestContentType">
      <summary>获取由 Content Type 标头指定的传输协议。</summary>
      <returns>用于指示内容类型的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestHttpMethod">
      <summary>获取 GET、PUT、POST 或 DELETE 的请求方法。</summary>
      <returns>用于指示请求方法的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestIfMatch">
      <summary>获取当前请求中 If-Match 标头的值。</summary>
      <returns>当前请求中 If-Match 标头的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch">
      <summary>获取当前请求中 If-None-Match 标头的值。</summary>
      <returns>当前请求中 If-None-Match 标头的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestMaxVersion">
      <summary>获取标识请求客户端所能处理的最高版本的值。</summary>
      <returns>一个字符串，其中包含请求客户端所能处理的最高版本（可能为 null）。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestStream">
      <summary>获取包含 HTTP 请求正文的流。</summary>
      <returns>其中包含请求正文的 <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestVersion">
      <summary>获取标识客户端所提交请求版本的值（可能为 null）。</summary>
      <returns>一个字符串，用于标识客户端所提交请求的版本（可能为 null）。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseCacheControl">
      <summary>获取一个表示缓存控制信息的字符串值。</summary>
      <returns>一个表示缓存控制信息的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseContentType">
      <summary>获取响应的传输协议。</summary>
      <returns>其中包含内容类型的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseETag">
      <summary>获取一个 eTag 值，该值表示响应中数据的状态。</summary>
      <returns>一个表示 eTag 状态值的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseLocation">
      <summary>获取或设置服务位置。</summary>
      <returns>其中包含服务位置的字符串。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseStatusCode">
      <summary>获取或设置指示查询结果的响应代码。</summary>
      <returns>其中包含响应代码的整数值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseStream">
      <summary>获取将向其中写入 HTTP 响应正文的响应流。</summary>
      <returns>将向其中写入响应正文的 <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseVersion">
      <summary>获取响应中由宿主使用的版本。</summary>
      <returns>其中包含宿主版本的字符串值。</returns>
    </member>
    <member name="T:System.Data.Services.IDataServiceHost2">
      <summary>定义对 HTTP 中的请求和响应标头所需的 <see cref="T:System.Data.Services.IDataServiceHost" /> 的扩展。</summary>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost2.RequestHeaders">
      <summary>HTTP 请求的请求标头。</summary>
      <returns>标头的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost2.ResponseHeaders">
      <summary>HTTP 响应的响应标头。</summary>
      <returns>标头的字符串值。</returns>
    </member>
    <member name="T:System.Data.Services.IExpandedResult">
      <summary>声明为 WCF Data Services <c>$expand</c> 查询选项上的结果和关联段支持枚举器所需的成员。</summary>
    </member>
    <member name="P:System.Data.Services.IExpandedResult.ExpandedElement">
      <summary>获取带有扩展属性的元素。</summary>
      <returns>属性中由 <see cref="T:System.Data.Services.IExpandedResult" /> 扩展的对象。</returns>
    </member>
    <member name="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)">
      <summary>获取结果的命名属性的值。</summary>
      <param name="name">要为其获取可枚举结果的属性的名称。</param>
      <returns>该属性的值。</returns>
    </member>
    <member name="T:System.Data.Services.IExpandProvider">
      <summary>此接口声明为 WCF Data Services 支持 <c>$expand</c> 查询选项所需的方法。</summary>
    </member>
    <member name="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
      <summary>将扩展应用于指定的 <paramref name="queryable" /> 参数。</summary>
      <param name="queryable">要扩展的 <see cref="T:System.Linq.IQueryable`1" /> 对象。</param>
      <param name="expandPaths">要扩展的 <see cref="T:System.Data.Services.ExpandSegmentCollection" /> 路径的集合。</param>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 对象，其类型与所提供的 <paramref name="queryable" /> 对象（包含指定的 <paramref name="expandPaths" />）的类型相同。</returns>
    </member>
    <member name="T:System.Data.Services.IgnorePropertiesAttribute">
      <summary>通过 WCF Data Services 控制一个或多个属性的可见性。</summary>
    </member>
    <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> 类的新实例。</summary>
      <param name="propertyName">一个字符串值，其中包含一个或多个要特性化的属性。</param>
    </member>
    <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])">
      <summary>初始化 <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> 类的新实例。</summary>
      <param name="propertyNames">一个字符串值，其中包含一个或多个要特性化的属性。</param>
    </member>
    <member name="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames">
      <summary>获取或设置由 <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> 特性控制的一个或多个属性名称。</summary>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`1">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.Description">
      <summary>获取或设置 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" /> 的说明。</summary>
      <returns>
        <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" /> 的说明。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.ExpandedElement">
      <summary>获取或设置具有扩展属性的元素。</summary>
      <returns>属性中由 <see cref="T:System.Data.Services.IExpandedResult" /> 扩展的对象。</returns>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.GetExpandedPropertyValue(System.String)">
      <summary>返回扩展属性的值。</summary>
      <param name="name">属性的名称。</param>
      <returns>该属性的值。</returns>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.InternalGetExpandedPropertyValue(System.Int32)">
      <summary>返回扩展属性的属性对象。</summary>
      <param name="nameIndex">该属性的索引。</param>
      <returns>属性值。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.System#Data#Services#IExpandedResult#ExpandedElement">
      <summary>获取或设置具有扩展属性的元素。</summary>
      <returns>属性中由 <see cref="T:System.Data.Services.IExpandedResult" /> 扩展的对象。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`10">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty6">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty7">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty8">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`10.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`10" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty6">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty7">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty8">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`11">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty6">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty7">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty8">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty9">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`11.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`11" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty6">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty7">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty8">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty9">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`12">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty6">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty7">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty8">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty9">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty10">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`12.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`12" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty10">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty6">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty7">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty8">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty9">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`13">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty6">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty7">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty8">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty9">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty10">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty11">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`13.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`13" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty10">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty11">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty6">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty7">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty8">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty9">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`2">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`2.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`2" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`2.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`3">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`3.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`3" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`4">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`4.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`4" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`5">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`5.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`4" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`6">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`6.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`6" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`7">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`7.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`7" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`8">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty6">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`8.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`8" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty6">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`9">
      <summary>系统在内部使用此类，以便可支持预先加载了相关实体的查询。</summary>
      <typeparam name="TExpandedElement">扩展元素的类型。</typeparam>
      <typeparam name="TProperty0">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty1">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty2">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty3">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty4">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty5">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty6">要扩展的属性的类型。</typeparam>
      <typeparam name="TProperty7">要扩展的属性的类型。</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`9.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ExpandedWrapper`9" /> 类的实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty0">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty1">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty2">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty3">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty4">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty5">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty6">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty7">
      <summary>获取或设置要扩展的属性。</summary>
      <returns>要扩展的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper.GetProjectedPropertyValue(System.String)">
      <summary>获取结果的命名属性的值。</summary>
      <param name="propertyName">要获取该值的属性名称。</param>
      <returns>该结果的命名属性的值。</returns>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper.InternalGetProjectedPropertyValue(System.Int32)">
      <summary>按其索引获取指定属性的值。</summary>
      <param name="propertyIndex">要获取该值的属性索引。</param>
      <returns>属性的值。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper.PropertyNameList">
      <summary>以逗号分隔格式的文本形式获取属性名称列表。</summary>
      <returns>逗号分隔的名称的列表。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper.ResourceTypeName">
      <summary>获取表示此结果类型的 <see cref="T:System.Data.Services.Providers.ResourceType" /> 的全名。</summary>
      <returns>类型的全名。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper0">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper0.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper0" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper1">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper1.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper1" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper1.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper2">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper2.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper2" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper2.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper2.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper3">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper3.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper3" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper4">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper4.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper4" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty3">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper5">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper5.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper5" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty3">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty4">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper6">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper6.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper6" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty3">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty4">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty5">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper7">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper7.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper7" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty3">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty4">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty5">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty6">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper8">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper8.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapper8" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty3">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty4">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty5">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty6">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty7">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapperMany">
      <summary>通过结果元素提供包装，并提供了投影属性子集的能力。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapperMany.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapperMany.InternalGetProjectedPropertyValue(System.Int32)">
      <summary>按其索引获取指定属性的值。</summary>
      <param name="propertyIndex">要获取该值的属性索引。</param>
      <returns>属性的值。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.Next">
      <summary>获取或设置 <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany" /> 的另一实例，该实例包含下一组的八个投影属性以及可能的另一链接。</summary>
      <returns>下一组属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty0">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty1">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty2">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty3">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty4">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty5">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty6">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty7">
      <summary>获取或设置要投影的属性。</summary>
      <returns>要投影的属性。</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapperManyEnd">
      <summary>此类的实例分配给列表中的最后 <see cref="P:System.Data.Services.Internal.ProjectedWrapperMany.Next" />。</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapperManyEnd.#ctor">
      <summary>创建 <see cref="T:System.Data.Services.Internal.ProjectedWrapperManyEnd" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Data.Services.IRequestHandler">
      <summary>提供对成员的访问，这些成员控制请求消息的处理。</summary>
    </member>
    <member name="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)">
      <summary>提供请求的入口点。</summary>
      <param name="messageBody">其中包含请求的 <see cref="T:System.IO.Stream" /> 对象。</param>
      <returns>提供的请求所生成的消息。</returns>
    </member>
    <member name="T:System.Data.Services.IUpdatable">
      <summary>HTTP POST 方法用于插入或更新资源的接口。</summary>
    </member>
    <member name="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)">
      <summary>将指定值添加到集合。</summary>
      <param name="targetResource">用于定义属性的目标对象。</param>
      <param name="propertyName">应向其中添加资源的集合属性的名称。</param>
      <param name="resourceToBeAdded">表示要添加的资源的不透明对象。</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.ClearChanges">
      <summary>取消对数据的更改。</summary>
    </member>
    <member name="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)">
      <summary>创建具有指定类型并属于指定容器的资源。</summary>
      <param name="containerName">资源所属实体集的名称。</param>
      <param name="fullTypeName">资源的完全限定命名空间类型名称。</param>
      <returns>表示指定类型的资源并属于指定容器的对象。</returns>
    </member>
    <member name="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)">
      <summary>删除指定的资源。</summary>
      <param name="targetResource">要删除的资源。</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)">
      <summary>获取查询和类型名称所标识的指定类型的资源。</summary>
      <param name="query">指向特定资源的语言集成查询 (LINQ)。</param>
      <param name="fullTypeName">资源的完全限定类型名称。</param>
      <returns>表示指定类型的资源的不透明对象（由指定查询引用）。</returns>
    </member>
    <member name="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)">
      <summary>获取目标对象的指定属性的值。</summary>
      <param name="targetResource">一个表示资源的不透明对象。</param>
      <param name="propertyName">需要检索其值的属性的名称。</param>
      <returns>对象的值。</returns>
    </member>
    <member name="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
      <summary>从集合中移除指定值。</summary>
      <param name="targetResource">用于定义属性的目标对象。</param>
      <param name="propertyName">需要更新其值的属性的名称。</param>
      <param name="resourceToBeRemoved">需要移除的属性值。</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.ResetResource(System.Object)">
      <summary>将由参数 <paramref name="resource" /> 标识的资源重置为其默认值。</summary>
      <param name="resource">要更新的资源。</param>
      <returns>其值已重置为默认值的资源。</returns>
    </member>
    <member name="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)">
      <summary>返回由指定资源对象表示的资源的实例。</summary>
      <param name="resource">表示需要检索其实例的资源的对象。</param>
      <returns>由指定资源对象表示的资源的实例。</returns>
    </member>
    <member name="M:System.Data.Services.IUpdatable.SaveChanges">
      <summary>保存所有使用 <see cref="T:System.Data.Services.IUpdatable" /> API 进行的更改。</summary>
    </member>
    <member name="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)">
      <summary>设置目标对象的指定引用属性的值。</summary>
      <param name="targetResource">用于定义属性的目标对象。</param>
      <param name="propertyName">需要更新其值的属性的名称。</param>
      <param name="propertyValue">要更新的属性值。</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)">
      <summary>将目标资源上具有指定名称的属性的值设置为指定属性值。</summary>
      <param name="targetResource">用于定义属性的目标对象。</param>
      <param name="propertyName">需要更新其值的属性的名称。</param>
      <param name="propertyValue">要更新的属性值。</param>
    </member>
    <member name="T:System.Data.Services.MimeTypeAttribute">
      <summary>指示 HTTP 请求的 MIME 类型。</summary>
    </member>
    <member name="M:System.Data.Services.MimeTypeAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Data.Services.MimeTypeAttribute" /> 类的新实例。</summary>
      <param name="memberName">属性名。</param>
      <param name="mimeType">特性的 MIME 类型。</param>
    </member>
    <member name="P:System.Data.Services.MimeTypeAttribute.MemberName">
      <summary>获取特性名。</summary>
      <returns>一个包含特性名称的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.MimeTypeAttribute.MimeType">
      <summary>获取请求的 MIME 类型。</summary>
      <returns>一个包含 MIME 类型的字符串。</returns>
    </member>
    <member name="T:System.Data.Services.ProcessRequestArgs">
      <summary>表示由数据服务 HTTP 请求使用的参数。</summary>
    </member>
    <member name="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation">
      <summary>获取一个布尔值，该值指示数据服务 HTTP 请求是否为批处理操作。</summary>
      <returns>指示数据服务 HTTP 请求是否为批处理操作的布尔值。</returns>
    </member>
    <member name="P:System.Data.Services.ProcessRequestArgs.OperationContext">
      <summary>获取上下文，该上下文包含有关当前正在处理的操作的信息。</summary>
      <returns>包含有关当前操作的信息的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 对象。</returns>
    </member>
    <member name="P:System.Data.Services.ProcessRequestArgs.RequestUri">
      <summary>获取要处理的 HTTP 请求的 URI。</summary>
      <returns>一个 <see cref="T:System.Uri" />，其中包含要处理的请求的 URI。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.DataServiceProviderMethods">
      <summary>通过自定义数据服务提供程序执行资源集的后期绑定操作。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Boolean,System.Boolean)">
      <summary>返回操作表达式中布尔参数的比较信息。</summary>
      <param name="left">第一个参数值。</param>
      <param name="right">第二个参数值。</param>
      <returns>值 
  条件 
  -1 
 
                <paramref name="left" /> 小于 <paramref name="right" />。  

  0 
  x 等于 y。  

  1 
 
                <paramref name="left" /> 大于 <paramref name="right" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Guid,System.Guid)">
      <summary>返回操作表达式中 GUID 参数的比较信息。</summary>
      <param name="left">第一个参数值。</param>
      <param name="right">第二个参数值。</param>
      <returns>值 
  条件 
  -1 
 
                <paramref name="left" /> 小于 <paramref name="right" />。  

  0 
  x 等于 y。  

  1 
 
                <paramref name="left" /> 大于 <paramref name="right" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>返回操作表达式中可为 null 的布尔参数的比较信息。</summary>
      <param name="left">第一个参数值。</param>
      <param name="right">第二个参数值。</param>
      <returns>值 
  条件 
  -1 
 
                <paramref name="left" /> 小于 <paramref name="right" />。  

  0 
  x 等于 y。  

  1 
 
                <paramref name="left" /> 大于 <paramref name="right" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>返回操作表达式中可为 null 的 GUID 参数的比较信息。</summary>
      <param name="left">第一个参数值。</param>
      <param name="right">第二个参数值。</param>
      <returns>值 
  条件 
  -1 
 
                <paramref name="left" /> 小于 <paramref name="right" />。  

  0 
  x 等于 y。  

  1 
 
                <paramref name="left" /> 大于 <paramref name="right" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Compare(System.String,System.String)">
      <summary>返回操作表达式中字符串参数的比较信息。</summary>
      <param name="left">第一个参数值。</param>
      <param name="right">第二个参数值。</param>
      <returns>值 
  条件 
  -1 
 
                <paramref name="left" /> 小于 <paramref name="right" />。  

  0 
  x 等于 y。  

  1 
 
                <paramref name="left" /> 大于 <paramref name="right" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>将值强制转换为指定的类型。</summary>
      <param name="value">将强制转换为所请求 <see langword="type" /> 的值。</param>
      <param name="type">要检查的资源类型。</param>
      <returns>强制转换为所请求的 <paramref name="value" /> 的 <paramref name="type" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.GetSequenceValue``1(System.Object,System.Data.Services.Providers.ResourceProperty)">
      <summary>从指定对象获取命名值作为序列。</summary>
      <param name="value">包含值的对象。</param>
      <param name="property">
        <see cref="T:System.Data.Services.Providers.ResourceProperty" />，这是必须返回值的属性。</param>
      <typeparam name="T">生成的序列的类型。</typeparam>
      <returns>一个 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 实例，其中含有请求的值作为序列。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.GetValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
      <summary>从指定对象中获取命名值。</summary>
      <param name="value">包含值的对象。</param>
      <param name="property">
        <see cref="T:System.Data.Services.Providers.ResourceProperty" />，这是必须返回值的属性。</param>
      <returns>表示所请求值的对象。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>确定值是否为指定类型。</summary>
      <param name="value">要检查的值。</param>
      <param name="type">要进行比较的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</param>
      <returns>如果该值为指定类型，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceMetadataProvider">
      <summary>维护有关自定义数据服务提供程序的元数据。</summary>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerName">
      <summary>数据资源的容器名称。</summary>
      <returns>包含容器名称的字符串。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerNamespace">
      <summary>数据源的命名空间名称。</summary>
      <returns>包含命名空间名称的字符串。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
      <summary>尝试返回从指定的资源类型派生的所有类型。</summary>
      <param name="resourceType">基 <see cref="T:System.Data.Services.Providers.ResourceType" />。</param>
      <returns>派生的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象的 <see cref="T:System.Data.Services.Providers.ResourceType" /> 集合。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
      <summary>在给定源关联端时，获取 <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> 实例。</summary>
      <param name="resourceSet">源关联端的资源集。</param>
      <param name="resourceType">源关联端的资源类型。</param>
      <param name="resourceProperty">源关联端的资源属性。</param>
      <returns>一个 <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> 实例。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
      <summary>确定资源类型是否具有派生类型。</summary>
      <param name="resourceType">要计算的 <see cref="T:System.Data.Services.Providers.ResourceType" /> 对象。</param>
      <returns>如果 <paramref name="resourceType" /> 表示具有派生类型的实体，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ResourceSets">
      <summary>获取所有可用的容器。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象的 <see cref="T:System.Data.Services.Providers.ResourceSet" /> 集合。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ServiceOperations">
      <summary>返回此数据源中的所有服务操作。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象的 <see cref="T:System.Data.Services.Providers.ServiceOperation" /> 集合。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)">
      <summary>尝试获取基于指定名称的资源集。</summary>
      <param name="name">要解析的 <see cref="T:System.Data.Services.Providers.ResourceSet" /> 的名称。</param>
      <param name="resourceSet">返回相应的资源集，如果找不到具有给定的 <paramref name="name" /> 的资源集，则返回 <see langword="null" /> 值。</param>
      <returns>如果找到了具有给定的 <paramref name="name" /> 的资源集，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)">
      <summary>尝试获取基于指定名称的资源类型。</summary>
      <param name="name">要解析的类型的名称。</param>
      <param name="resourceType">返回相应的资源类型，如果找不到具有给定的 <paramref name="name" /> 的资源类型，则返回 <see langword="null" /> 值。</param>
      <returns>如果找到了具有给定的 <paramref name="name" /> 的资源类型，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)">
      <summary>尝试获取基于指定名称的服务操作。</summary>
      <param name="name">要解析的服务操作的名称。</param>
      <param name="serviceOperation">返回相应的服务操作，如果找不到具有给定的 <paramref name="name" /> 的服务操作，则返回 <see langword="null" /> 值。</param>
      <returns>如果找到了具有给定的 <paramref name="name" /> 的服务操作，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.Types">
      <summary>返回此数据源中的所有类型。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象的 <see cref="T:System.Data.Services.Providers.ResourceType" /> 集合。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServicePagingProvider">
      <summary>为自定义数据服务提供程序的客户端提供分页支持。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServicePagingProvider.GetContinuationToken(System.Collections.IEnumerator)">
      <summary>返回下一页标记以放入 <see langword="$skiptoken" /> 查询选项中。</summary>
      <param name="enumerator">正在请求其延续令牌的枚举器。</param>
      <returns>作为基元类型集合的下一页标记。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServicePagingProvider.SetContinuationToken(System.Linq.IQueryable,System.Data.Services.Providers.ResourceType,System.Object[])">
      <summary>从请求 URI 的 <see langword="$skiptoken" /> 查询选项获得下一页标记。</summary>
      <param name="query">正在提供其延续令牌的查询。</param>
      <param name="resourceType">将应用 <see langword="$skip" /> 标记的结果的资源类型。</param>
      <param name="continuationToken">分析为基元类型值的延续标记。</param>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceQueryProvider">
      <summary>为自定义数据服务提供程序定义一个元数据和查询源实现。</summary>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceQueryProvider.CurrentDataSource">
      <summary>提供数据的数据源对象。</summary>
      <returns>数据源。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetOpenPropertyValue(System.Object,System.String)">
      <summary>获取开放属性的值。</summary>
      <param name="target">声明开放属性的类型的实例。</param>
      <param name="propertyName">开放属性的名称。</param>
      <returns>开放属性的值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetOpenPropertyValues(System.Object)">
      <summary>获取在一个开放类型的给定实例中定义的所有属性的名称和值。</summary>
      <param name="target">声明开放属性的类型的实例。</param>
      <returns>所有开放属性的名称和值的集合。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
      <summary>获取开放属性的值。</summary>
      <param name="target">声明开放属性的类型的实例。</param>
      <param name="resourceProperty">开放属性的值。</param>
      <returns>属性的值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
      <summary>获取表示容器的 <see cref="T:System.Linq.IQueryable`1" />。</summary>
      <param name="resourceSet">资源集。</param>
      <returns>一个表示资源集的 <see cref="T:System.Linq.IQueryable`1" />，如果没有用于指定的 <paramref name="resourceSet" /> 的资源集，则为 <see langword="null" /> 值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetResourceType(System.Object)">
      <summary>获取由参数指定的实例的资源类型。</summary>
      <param name="target">要从中提取资源类型的实例。</param>
      <returns>提供的对象的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
      <summary>调用给定的服务操作并返回结果。</summary>
      <param name="serviceOperation">要调用的服务操作。</param>
      <param name="parameters">要传递给服务操作的参数的值。</param>
      <returns>服务操作的结果，对于返回 <see langword="null" /> 的服务操作，则为 <see langword="void" /> 值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceQueryProvider.IsNullPropagationRequired">
      <summary>获取一个值，该值指示 null 传播是否为表达式树中所必需的。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，它指示 null 传播是否为必需的。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceStreamProvider">
      <summary>使得二进制数据能够被访问并被更改为属于某实体（为媒体链接项）的媒体资源。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.DeleteStream(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>删除媒体链接项时会删除关联的媒体资源。</summary>
      <param name="entity">删除的媒体链接项。</param>
      <param name="operationContext">处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="entity" /> 或 <paramref name="operationContext" /> 为 <see langword="null" /> 时。</exception>
      <exception cref="T:System.ArgumentException">当 <paramref name="entity" /> 不是有二进制属性要进行流处理的实体时。</exception>
      <exception cref="T:System.Data.Services.DataServiceException">当无法删除与 <paramref name="entity" /> 关联的流时。</exception>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStream(System.Object,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
      <summary>返回包含指定实体（即媒体链接项）的媒体资源数据的流。</summary>
      <param name="entity">作为具有相关媒体资源的媒体链接项的实体。</param>
      <param name="etag">作为发送到数据服务的 HTTP 请求的一部分发送的 eTag 值。</param>
      <param name="checkETagForEquality">一个可以为 null 的 <see cref="T:System.Boolean" /> 值，该值确定数据服务是否必须为所使用的 eTag 类型。</param>
      <param name="operationContext">数据服务用来处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <returns>包含 <paramref name="entity" /> 的二进制属性数据的数据 <see cref="T:System.IO.Stream" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStreamUri(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>返回用于请求属于指定实体的媒体资源的 URI。</summary>
      <param name="entity">作为具有相关媒体资源的媒体链接项的实体。</param>
      <param name="operationContext">数据服务用来处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <returns>一个用于请求二进制数据流的 <see cref="T:System.Uri" /> 值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamContentType(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>返回属于指定实体的媒体资源的内容类型。</summary>
      <param name="entity">作为具有相关媒体资源的媒体链接项的实体。</param>
      <param name="operationContext">数据服务用来处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <returns>二进制数据的有效 Content-Type。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamETag(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>返回属于指定媒体链接项的媒体资源的 eTag。</summary>
      <param name="entity">作为具有相关媒体资源的媒体链接项的实体。</param>
      <param name="operationContext">数据服务用来处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <returns>与 <paramref name="entity" /> 关联的媒体资源的 eTag。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetWriteStream(System.Object,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
      <summary>返回流，该流由数据服务用于写入从客户端接收的属于指定实体的媒体资源的二进制数据。</summary>
      <param name="entity">作为具有相关媒体资源的媒体链接项的实体。</param>
      <param name="etag">作为发送到数据服务的 HTTP 请求的一部分发送的 eTag 值。</param>
      <param name="checkETagForEquality">一个可以为 null 的 <see cref="T:System.Boolean" /> 值，该值指示客户端请求的并发检查的类型。</param>
      <param name="operationContext">数据服务用来处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <returns>一个有效的 <see cref="T:System.IO.Stream" />，数据服务使用它来写入从客户端接收的二进制数据的内容。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.ResolveType(System.String,System.Data.Services.DataServiceOperationContext)">
      <summary>返回一个命名空间限定的类型名称，该名称表示数据服务运行时必须为媒体链接项创建的类型，该媒体链接项与正在插入的媒体资源的数据流相关联。</summary>
      <param name="entitySetName">完全限定的实体集名称。</param>
      <param name="operationContext">数据服务用来处理请求的 <see cref="T:System.Data.Services.DataServiceOperationContext" /> 实例。</param>
      <returns>一个命名空间限定的类型名称。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceStreamProvider.StreamBufferSize">
      <summary>获取流缓冲区的大小。</summary>
      <returns>表示缓冲区的大小的整数。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceUpdateProvider">
      <summary>定义必须实现以便向自定义数据服务提供程序提供 eTag 值的方法。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceUpdateProvider.SetConcurrencyValues(System.Object,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>为给定的实体资源提供 eTag 值。</summary>
      <param name="resourceCookie">表示资源的 Cookie。</param>
      <param name="checkForEquality">一个 <see cref="T:System.Boolean" />。如果必须对属性值进行相等性比较，则该值为 <see langword="true" />；如果必须对属性值进行不相等性比较，则为 <see langword="false" />。</param>
      <param name="concurrencyValues">ETag 属性名称和相应值的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 列表。</param>
    </member>
    <member name="T:System.Data.Services.Providers.OpenTypeMethods">
      <summary>用于执行开放属性的后期绑定操作。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Add(System.Object,System.Object)">
      <summary>两个值相加。</summary>
      <param name="left">要相加的第一个值。</param>
      <param name="right">要相加的第二个值。</param>
      <returns>算术运算的结果。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.AndAlso(System.Object,System.Object)">
      <summary>在两个表达式之间执行逻辑 <see langword="and" /> 运算。</summary>
      <param name="left">左侧的值。</param>
      <param name="right">右侧的值。</param>
      <returns>逻辑 <see langword="and" /> 运算的结果。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Ceiling(System.Object)">
      <summary>返回给定值的上限。</summary>
      <param name="value">
        <see cref="T:System.Decimal" /> 或 <see cref="T:System.Double" /> 对象。</param>
      <returns>给定值的上限值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Concat(System.Object,System.Object)">
      <summary>连接两个字符串值。</summary>
      <param name="first">第一个字符串。</param>
      <param name="second">第二个字符串。</param>
      <returns>串联字符串的新实例。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>将值转换为指定类型。</summary>
      <param name="value">要转换的值。</param>
      <param name="type">转换的资源类型。</param>
      <returns>转换后的值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Day(System.Object)">
      <summary>返回给定 <see cref="T:System.DateTime" /> 实例的日期值。</summary>
      <param name="dateTime">
        <see cref="T:System.DateTime" /> 对象。</param>
      <returns>给定 <see cref="T:System.DateTime" /> 实例的日期值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Divide(System.Object,System.Object)">
      <summary>两个值相除。</summary>
      <param name="left">第一个值（被除数）。</param>
      <param name="right">第二个值（除数）。</param>
      <returns>除后得到的值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.EndsWith(System.Object,System.Object)">
      <summary>确定一个字符串的末尾是否与另一个字符串匹配。</summary>
      <param name="targetString">要比较的字符串。</param>
      <param name="substring">要与之比较的字符串。</param>
      <returns>如果 <see langword="true" /> 以 <paramref name="targetString" /> 结尾，则返回 <paramref name="substring" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Equal(System.Object,System.Object)">
      <summary>确定指定的对象是否可视为相等。</summary>
      <param name="left">要比较的第一个对象。</param>
      <param name="right">要比较的第二个对象。</param>
      <returns>如果两个对象相等，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Floor(System.Object)">
      <summary>返回给定值的下限。</summary>
      <param name="value">要计算的 <see cref="T:System.Decimal" /> 或 <see cref="T:System.Double" /> 对象。</param>
      <returns>给定对象的下限值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.GetValue(System.Object,System.String)">
      <summary>获取指定对象的指定属性的值。</summary>
      <param name="value">要从中获取属性值的对象。</param>
      <param name="propertyName">要从中获取值的属性的名称。</param>
      <returns>请求的值；如果无法确定值，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThan(System.Object,System.Object)">
      <summary>确定一个对象的值是否大于另一个对象的值。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>如果第一个对象的值大于第二个对象的值，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(System.Object,System.Object)">
      <summary>确定一个对象的值是否大于或等于另一个对象的值。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>如果第一个对象的值大于或等于第二个对象的值，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Hour(System.Object)">
      <summary>返回给定 <see cref="T:System.DateTime" /> 实例的小时值。</summary>
      <param name="dateTime">一个 <see cref="T:System.DateTime" /> 对象。</param>
      <returns>给定 <see cref="T:System.DateTime" /> 实例的小时值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.IndexOf(System.Object,System.Object)">
      <summary>返回目标字符串中的子字符串的索引。</summary>
      <param name="targetString">目标字符串。</param>
      <param name="substring">要查找的子字符串。</param>
      <returns>
        <paramref name="substring" /> 中 <paramref name="targetString" /> 位置的索引。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Length(System.Object)">
      <summary>获取所提供的字符串对象中的字符数。</summary>
      <param name="value">要检查的字符串。</param>
      <returns>字符串值的长度。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThan(System.Object,System.Object)">
      <summary>确定一个对象的值是否小于另一个对象的值。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>如果第一个对象的值小于第二个对象的值，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(System.Object,System.Object)">
      <summary>确定一个对象的值是否小于或等于另一个对象的值。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>如果第一个对象的值小于或等于第二个对象的值，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Minute(System.Object)">
      <summary>返回给定 <see cref="T:System.DateTime" /> 实例的分钟值。</summary>
      <param name="dateTime">
        <see cref="T:System.DateTime" /> 对象。</param>
      <returns>给定 <see cref="T:System.DateTime" /> 实例的分钟值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Modulo(System.Object,System.Object)">
      <summary>计算一个值除以另一个值的算术余数。</summary>
      <param name="left">第一个值（被除数）。</param>
      <param name="right">第二个值（除数）。</param>
      <returns>余数值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Month(System.Object)">
      <summary>返回给定 <see cref="T:System.DateTime" /> 实例的月份值。</summary>
      <param name="dateTime">
        <see cref="T:System.DateTime" /> 对象。</param>
      <returns>给定 <see cref="T:System.DateTime" /> 实例的月份值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Multiply(System.Object,System.Object)">
      <summary>将两个值相乘。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>两个值的积。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Negate(System.Object)">
      <summary>返回指定值与负值相乘的结果。</summary>
      <param name="value">要求反的值。</param>
      <returns>
        <paramref name="value" /> 与负值相乘的积。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Not(System.Object)">
      <summary>执行所提供值的（逻辑）按位求补运算。</summary>
      <param name="value">要执行逻辑求补运算的值。</param>
      <returns>所提供值的按位求补。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.NotEqual(System.Object,System.Object)">
      <summary>执行两个值的逻辑比较，以确定这两个值是否不相等。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>如果两个对象不相等，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.OrElse(System.Object,System.Object)">
      <summary>对两个值执行逻辑 <see langword="OR" /> 运算。</summary>
      <param name="left">第一个值。</param>
      <param name="right">第二个值。</param>
      <returns>逻辑 <see langword="OR" /> 运算的结果。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Replace(System.Object,System.Object,System.Object)">
      <summary>将目标字符串中的一个子字符串替换为另一个子字符串。</summary>
      <param name="targetString">包含要替换的子字符串的字符串。</param>
      <param name="substring">要替换的子字符串。</param>
      <param name="newString">新的子字符串。</param>
      <returns>用新子字符串替换旧子字符串后得到的新字符串。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Round(System.Object)">
      <summary>舍入所提供的值。</summary>
      <param name="value">要舍入的 <see cref="T:System.Decimal" /> 或 <see cref="T:System.Double" />。</param>
      <returns>舍入后的值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Second(System.Object)">
      <summary>返回给定 <see cref="T:System.DateTime" /> 实例的秒值。</summary>
      <param name="dateTime">一个 <see cref="T:System.DateTime" /> 对象。</param>
      <returns>给定 <see cref="T:System.DateTime" /> 实例的秒值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.StartsWith(System.Object,System.Object)">
      <summary>检查目标字符串是否以子字符串开头。</summary>
      <param name="targetString">要比较的字符串。</param>
      <param name="substring">
        <paramref name="targetString" /> 可能以之开头的子字符串。</param>
      <returns>如果目标字符串以给定子字符串开头，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object)">
      <summary>返回指定的起始索引位置以后的子字符串。</summary>
      <param name="targetString">要从中返回子字符串的字符串。</param>
      <param name="startIndex">子字符串的起始索引。</param>
      <returns>子字符串。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object,System.Object)">
      <summary>返回指定的起始索引位置后特定长度的子字符串。</summary>
      <param name="targetString">要从中返回子字符串的字符串。</param>
      <param name="startIndex">子字符串的起始索引。</param>
      <param name="length">子字符串的长度。</param>
      <returns>子字符串。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.SubstringOf(System.Object,System.Object)">
      <summary>确定一个子字符串是否出现在另一个字符串中。</summary>
      <param name="substring">要查找的子字符串。</param>
      <param name="targetString">要搜索的字符串。</param>
      <returns>如果 <paramref name="substring" /> 存在于 <paramref name="targetString" /> 中，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Subtract(System.Object,System.Object)">
      <summary>两个值相减。</summary>
      <param name="left">减法运算中的第一个值。</param>
      <param name="right">减法运算中的第二个值。</param>
      <returns>算术运算的结果。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.ToLower(System.Object)">
      <summary>返回转换为小写的字符串的副本。</summary>
      <param name="targetString">要转换的字符串。</param>
      <returns>只有小写的新字符串值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.ToUpper(System.Object)">
      <summary>返回转换为大写的字符串的副本。</summary>
      <param name="targetString">要转换的字符串。</param>
      <returns>只有大写字符的新字符串值。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Trim(System.Object)">
      <summary>从字符串中删除所有前导和尾随空格字符。</summary>
      <param name="targetString">要裁剪的字符串。</param>
      <returns>裁剪后的字符串。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>检查指定值的类型。</summary>
      <param name="value">要检查的值。</param>
      <param name="type">要检查的资源类型。</param>
      <returns>如果该值为指定的资源类型，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Year(System.Object)">
      <summary>返回给定 <see cref="T:System.DateTime" /> 实例的年份值。</summary>
      <param name="dateTime">一个 <see cref="T:System.DateTime" /> 对象。</param>
      <returns>给定 <see cref="T:System.DateTime" /> 实例的年份值。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceAssociationSet">
      <summary>描述两个资源集之间的关联。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceAssociationSet.#ctor(System.String,System.Data.Services.Providers.ResourceAssociationSetEnd,System.Data.Services.Providers.ResourceAssociationSetEnd)">
      <summary>创建 <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> 类的新实例。</summary>
      <param name="name">关联集的名称。</param>
      <param name="end1">在关联集源端的 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />。</param>
      <param name="end2">在关联集目标端的 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSet.End1">
      <summary>获取关联集的源端。</summary>
      <returns>在关联集源端的 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSet.End2">
      <summary>获取关联集的目标端。</summary>
      <returns>在关联集目标端的 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSet.Name">
      <summary>获取关联集的名称。</summary>
      <returns>关联集的名称。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceAssociationSetEnd">
      <summary>描述资源关联集的端点。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceAssociationSetEnd.#ctor(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
      <summary>创建 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 类的新实例。</summary>
      <param name="resourceSet">
        <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 端点所属的资源集。</param>
      <param name="resourceType">
        <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 端点所属的资源类型。</param>
      <param name="resourceProperty">返回 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 端点的资源属性。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceProperty">
      <summary>获取返回 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 的资源属性。</summary>
      <returns>资源属性。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceSet">
      <summary>获取 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 的资源集。</summary>
      <returns>资源集。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceType">
      <summary>获取 <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> 的资源类型。</summary>
      <returns>资源类型。</returns>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceProperty">
      <summary>提供用于描述资源属性的类型。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceProperty.#ctor(System.String,System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType)">
      <summary>为开放属性初始化一个新的 <see cref="T:System.Data.Services.Providers.ResourceProperty" />。</summary>
      <param name="name">字符串形式的属性的属性名称。</param>
      <param name="kind">
        <see cref="T:System.Data.Services.Providers.ResourcePropertyKind" />。</param>
      <param name="propertyResourceType">属性所指资源的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.CanReflectOnInstanceTypeProperty">
      <summary>获取一个值，用于指示是否可以通过声明资源实例类型上的反射来访问此属性。</summary>
      <returns>
        <see langword="true" /> 如果此属性可以访问通过反射;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.CustomState">
      <summary>获取或设置由开发人员定义的资源属性的相关自定义状态信息。</summary>
      <returns>状态信息。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.IsReadOnly">
      <summary>获取用于指示属性是否为只读属性的布尔值。</summary>
      <returns>如果该属性为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.Kind">
      <summary>获取与资源相关的资源属性的类型。</summary>
      <returns>一个 <see cref="T:System.Data.Services.Providers.ResourcePropertyKind" /> 值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.MimeType">
      <summary>获取或设置属性的 MIME 类型。</summary>
      <returns>用于指示 MIME 类型的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.Name">
      <summary>获取资源属性的名称。</summary>
      <returns>作为字符串的资源属性的名称。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.ResourceType">
      <summary>获取资源属性的类型。</summary>
      <returns>资源属性的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceProperty.SetReadOnly">
      <summary>将资源属性设置为只读。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourcePropertyKind">
      <summary>资源可以有的属性类型的枚举。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ComplexType">
      <summary>复杂或复合属性。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ETag">
      <summary>一个 <c>ETag</c> 属性。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Key">
      <summary>作为键的一部分的属性。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Primitive">
      <summary>一个基元类型属性。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceReference">
      <summary>对另一资源的引用。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceSetReference">
      <summary>对资源集的引用。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceSet">
      <summary>表示实体类型值的集合。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceSet.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
      <summary>创建实体类型值的新集合。</summary>
      <param name="name">作为字符串的项集的名称。</param>
      <param name="elementType">集中各项的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.CustomState">
      <summary>获取或设置由开发人员定义的自定义状态信息。</summary>
      <returns>由开发人员定义的自定义状态信息。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.IsReadOnly">
      <summary>获取指示集是否为只读的布尔值。</summary>
      <returns>如果该集为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.Name">
      <summary>获取集合的名称。</summary>
      <returns>包含资源集名称的字符串值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.ResourceType">
      <summary>获取集合的类型。</summary>
      <returns>集合的类型。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceSet.SetReadOnly">
      <summary>设置集合的只读状态。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceType">
      <summary>表示数据服务基元类型、复杂类型或实体类型。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Boolean)">
      <summary>创建数据服务 <see cref="T:System.Data.Services.Providers.ResourceType" /> 的实例。</summary>
      <param name="instanceType">表示 WCF 数据服务 运行时内的格式的 CLR 类型。</param>
      <param name="resourceTypeKind">资源类型的 <see cref="T:System.Data.Services.Providers.ResourceTypeKind" />。</param>
      <param name="baseType">作为字符串的资源类型的基类型。</param>
      <param name="namespaceName">作为字符串的资源类型的命名空间名称。</param>
      <param name="name">作为字符串的给定资源类型的名称。</param>
      <param name="isAbstract">用于指示资源类型是否为抽象类型的布尔值。</param>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute(System.Data.Services.Common.EntityPropertyMappingAttribute)">
      <summary>添加资源类型的 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />。</summary>
      <param name="attribute">要添加的 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />。</param>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.AddProperty(System.Data.Services.Providers.ResourceProperty)">
      <summary>将由 <paramref name="resourceProperty" /> 参数提供的属性添加到类型。</summary>
      <param name="property">要添加的 <see cref="T:System.Data.Services.Providers.ResourceProperty" /> 属性。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.BaseType">
      <summary>获取基资源类型的引用（如果有）。</summary>
      <returns>基类型的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.CanReflectOnInstanceType">
      <summary>获取一个值，该值指示相应的实例类型是否表示此实体的 CLR 类型。</summary>
      <returns>
        <see langword="true" /> 如果实例类型表示 CLR 类型;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.CustomState">
      <summary>获取或设置占位符，以便保留由开发人员定义的资源类型的相关自定义状态信息。</summary>
      <returns>由开发人员定义的自定义状态信息。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.ETagProperties">
      <summary>获取此类型的属性列表。</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceType" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.FullName">
      <summary>获取资源的全名。</summary>
      <returns>作为字符串的资源类型的全名。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.GetPrimitiveResourceType(System.Type)">
      <summary>给定 <see cref="T:System.Type" /> 对象时，获取表示基元类型的资源类型。</summary>
      <param name="type">要从中获取基元类型的 <see cref="T:System.Type" /> 类型。</param>
      <returns>资源类型。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.InstanceType">
      <summary>此资源所代表的 CLR 类型的引用。</summary>
      <returns>作为 <see cref="T:System.Data.Services.Providers.ResourceType" /> 的实例类型。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsAbstract">
      <summary>获取用于指示此类型是否为抽象类型的布尔值。</summary>
      <returns>
        <see langword="true" /> 如果<see cref="T:System.Data.Services.Providers.ResourceType" />抽象; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsMediaLinkEntry">
      <summary>获取或设置一个布尔值，该值在资源类型包括默认流时为 true。</summary>
      <returns>一个布尔值，当资源类型包括默认流时，此值为 true。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsOpenType">
      <summary>获取一个值，该值指示资源类型是否具有开放属性。</summary>
      <returns>
        <see langword="true" /> 如果资源类型已定义; 开放属性否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsReadOnly">
      <summary>获取一个布尔值，该值在此资源类型已设置为只读时为 true。</summary>
      <returns>
        <see langword="true" /> 如果此资源类型设置为只读的;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.KeyProperties">
      <summary>获取此类型的键属性列表</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceProperty" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.LoadPropertiesDeclaredOnThisType">
      <summary>返回此资源类型所声明的属性的列表。</summary>
      <returns>此类型上声明的属性列表。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.Name">
      <summary>获取资源类型的名称。</summary>
      <returns>字符串形式的资源类型的名称。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.Namespace">
      <summary>获取资源类型的命名空间。</summary>
      <returns>字符串形式的资源类型的命名空间。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.Properties">
      <summary>获取为此类型声明的属性的列表，其中仅包括在此类型（而非基类型）上定义的属性。</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceProperty" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.PropertiesDeclaredOnThisType">
      <summary>在此类型上声明的属性的列表。</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceProperty" /> 的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.ResourceTypeKind">
      <summary>获取类型的 <see cref="T:System.Data.Services.Providers.ResourceTypeKind" />。</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceTypeKind" />。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.SetReadOnly">
      <summary>将资源类型设置为只读。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceTypeKind">
      <summary>资源键的类型枚举。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourceTypeKind.ComplexType">
      <summary>复杂类型资源。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourceTypeKind.EntityType">
      <summary>实体类型资源。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourceTypeKind.Primitive">
      <summary>基元类型资源。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ServiceOperation">
      <summary>表示一个自定义服务操作。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperation.#ctor(System.String,System.Data.Services.Providers.ServiceOperationResultKind,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceOperationParameter})">
      <summary>创建服务操作的新实例。</summary>
      <param name="name">服务操作的名称。</param>
      <param name="resultKind">表示此操作预期的结果种类的 <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind" />。</param>
      <param name="resultType">表示操作的结果的 <see cref="T:System.Data.Services.Providers.ResourceType" />。</param>
      <param name="resultSet">表示操作的结果的 <see cref="T:System.Data.Services.Providers.ResourceSet" />。</param>
      <param name="method">服务操作响应的协议方法。</param>
      <param name="parameters">表示操作的参数的 <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" /> 对象的有序集合。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.CustomState">
      <summary>获取或设置有关服务操作的自定义状态信息。</summary>
      <returns>状态信息。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.IsReadOnly">
      <summary>指示服务操作是否为只读。</summary>
      <returns>指示服务操作是否为只读的布尔值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.Method">
      <summary>获取服务操作响应的 HTTP 协议方法。</summary>
      <returns>HTTP 方法名。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.MimeType">
      <summary>基元结果上指定的 MIME 类型，可能为 null。</summary>
      <returns>MIME 类型值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.Name">
      <summary>服务操作的名称。</summary>
      <returns>字符串名称。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.Parameters">
      <summary>服务操作的有序参数的集合。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 对象的 <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.ResourceSet">
      <summary>获取从其读取实体的实体集。</summary>
      <returns>作为 <see cref="T:System.Data.Services.Providers.ResourceSet" /> 对象的实体集。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.ResultKind">
      <summary>此服务操作预期的结果的种类。</summary>
      <returns>表示此操作预期的结果种类的 <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind" />。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.ResultType">
      <summary>此服务操作所返回的结果的类型。</summary>
      <returns>作为 <see cref="T:System.Data.Services.Providers.ResourceType" /> 的结果的类型。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperation.SetReadOnly">
      <summary>设置服务操作是否为只读。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ServiceOperationParameter">
      <summary>表示服务操作的参数信息。</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperationParameter.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
      <summary>创建 <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" /> 的新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="parameterType">参数的数据类型。</param>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.CustomState">
      <summary>开发人员定义的有关服务操作参数的自定义状态信息。</summary>
      <returns>由开发人员定义的自定义状态信息。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.IsReadOnly">
      <summary>获取一个布尔值，该值定义参数是否为只读。</summary>
      <returns>定义参数是否为只读的布尔值。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.Name">
      <summary>获取服务操作参数的名称。</summary>
      <returns>一个指定服务操作参数的名称的字符串。</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.ParameterType">
      <summary>获取服务操作参数的数据类型。</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceType" /> 形式的服务操作参数的数据类型。</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperationParameter.SetReadOnly">
      <summary>将服务操作参数设置为只读。</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ServiceOperationResultKind">
      <summary>描述服务操作提供的结果的种类的枚举。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.DirectValue">
      <summary>无法进一步组合的单个值。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Enumeration">
      <summary>无法进一步组合的值的枚举。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithMultipleResults">
      <summary>一个返回多个元素的可查询对象。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithSingleResult">
      <summary>一个返回单个项的查询。</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Void">
      <summary>没有结果。</summary>
    </member>
    <member name="T:System.Data.Services.QueryInterceptorAttribute">
      <summary>方法上的 <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> 将其批注为指定实体集上的查询拦截器。</summary>
    </member>
    <member name="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)">
      <summary>为 <paramref name="entitySetName" /> 参数指定的实体集初始化 <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> 类的新实例。</summary>
      <param name="entitySetName">实体集的名称，其中包含要应用拦截器的实体。</param>
    </member>
    <member name="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName">
      <summary>获取实体集的名称，其中包含要应用拦截器的实体。</summary>
      <returns>一个指示实体集名称的字符串，该实体集包含要应用拦截器的实体。</returns>
    </member>
    <member name="T:System.Data.Services.ServiceOperationRights">
      <summary>一个枚举，用于定义对 WCF Data Services 所部署服务操作的访问权限。</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.All">
      <summary>分配给服务操作的所有权限。</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.AllRead">
      <summary>授权读取服务操作所部署的一个或多个数据项。</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.None">
      <summary>未授权访问服务操作。</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.OverrideEntitySetRights">
      <summary>使用服务操作权限重写在数据服务中显式定义的实体集权限。</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.ReadMultiple">
      <summary>授予通过使用服务操作读取多个数据项。</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.ReadSingle">
      <summary>授予通过使用服务操作读取一个数据项。</summary>
    </member>
    <member name="T:System.Data.Services.SingleResultAttribute">
      <summary>用在服务操作上的属性，可指定操作返回其返回元素的单个实例。</summary>
    </member>
    <member name="M:System.Data.Services.SingleResultAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Data.Services.SingleResultAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Data.Services.UpdateOperations">
      <summary>一个枚举，用于指定对实体执行的更新操作。</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.Add">
      <summary>添加了实体。</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.Change">
      <summary>修改了实体。</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.Delete">
      <summary>删除了实体。</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.None">
      <summary>未对资源执行任何操作。</summary>
    </member>
  </members>
</doc>