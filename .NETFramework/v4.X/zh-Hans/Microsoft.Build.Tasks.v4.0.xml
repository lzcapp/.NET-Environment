<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Tasks.v4.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.AL">
      <summary>实现 <c>AL</c> 任务。 使用项目文件中的 <c>AL</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 AL （程序集链接器）任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.AL" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>使用开关和其他可存入响应文件的信息填充指定的 <paramref name="commandLine" />。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.AlgorithmId">
      <summary>获取或设置一种算法来对多文件程序集中的所有文件（包含程序集清单的文件除外）进行哈希处理。</summary>
      <returns>对多文件程序集中的所有文件（包含程序集清单的文件除外）进行哈希处理的算法。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.BaseAddress">
      <summary>获取或设置一个地址，运行时将在用户计算机上的此地址加载 DLL。</summary>
      <returns>该地址的 DLL 将加载用户的计算机运行时。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.CompanyName">
      <summary>获取或设置程序集中的 <c>Company</c> 字段。</summary>
      <returns>
        <c>公司</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Configuration">
      <summary>获取或设置程序集中的 <c>Configuration</c> 字段。</summary>
      <returns>
        <c>配置</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Copyright">
      <summary>获取或设置程序集中的 <c>Copyright</c> 字段。</summary>
      <returns>
        <c>版权所有</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Culture">
      <summary>获取或设置要与程序集关联的区域性字符串。</summary>
      <returns>要与程序集关联的区域性字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.DelaySign">
      <summary>获取或设置一个布尔值，该值指示是仅将公钥放在程序集 (<see langword="true" />) 中还是对程序集 (<see langword="false" />) 进行完全签名。</summary>
      <returns>如果仅将公钥放在该程序集，为 <see langword="true" />；如果对程序集进行完全签名，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Description">
      <summary>获取或设置程序集中的 <c>Description</c> 字段。</summary>
      <returns>
        <c>说明</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.EmbedResources">
      <summary>获取或设置要在包含程序集清单的映像中嵌入的资源。</summary>
      <returns>要在包含程序集清单的映像中嵌入的资源。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.EvidenceFile">
      <summary>获取或设置要在资源名称为 <c>Security.Evidence</c> 的程序集中嵌入的文件。</summary>
      <returns>要使用的资源名称的程序集中嵌入的文件<c>Security.Evidence</c>。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.Execute">
      <summary>执行 <c>AL</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.FileVersion">
      <summary>获取或设置程序集中的 <c>File Version</c> 字段。</summary>
      <returns>
        <c>文件版本</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Flags">
      <summary>获取或设置程序集中的 <c>Flags</c> 字段。</summary>
      <returns>
        <c>标志</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.GenerateFullPaths">
      <summary>获取或设置一个布尔值，该值指示是否使任务对错误消息中报告的任何文件都使用绝对路径。</summary>
      <returns>如果任务将对错误消息中报告的任何文件都使用绝对路径，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AL.GenerateFullPathToTool">
      <summary>返回 AL 工具的完整文件路径。</summary>
      <returns>AL 工具的完整文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.KeyContainer">
      <summary>获取或设置保存密钥对的容器。</summary>
      <returns>保存密钥对的容器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.KeyFile">
      <summary>获取或设置一个文件，该文件包含密钥对或只包含用于对程序集进行签名的公钥。</summary>
      <returns>一个文件，该文件包含密钥对或只包含用于对程序集进行签名的公钥。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.LinkResources">
      <summary>获取或设置要链接到程序集的资源文件。</summary>
      <returns>要链接到程序集的资源文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.MainEntryPoint">
      <summary>获取或设置用作将模块转换为可执行文件时的入口点的方法的完全限定名称 (class.method)。</summary>
      <returns>完全限定的名称 (class.method) 要用作将模块转换为可执行文件时的入口点的方法。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.OutputAssembly">
      <summary>获取或设置此任务生成的文件的名称。</summary>
      <returns>此任务生成的文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Platform">
      <summary>获取或设置一个字符串，该字符串限制可运行此代码的平台；必需是下面的某一项：<c>x86</c>、<c>Itanium</c>、<c>x64</c> 或 <c>anycpu</c>。</summary>
      <returns>一个字符串，用于限制哪些平台上; 可以运行此代码必须是一个<c>x86</c>， <c>Itanium</c>， <c>x64</c>，或者<c>anycpu</c>。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Prefer32Bit">
      <summary>获取或设置一个值，此值指示任务是否在 32 位平台上运行。</summary>
      <returns>
        <see langword="true" /> 如果任务运行于 32 位平台;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ProductName">
      <summary>获取或设置程序集中的 <c>Product</c> 字段。</summary>
      <returns>
        <c>产品</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ProductVersion">
      <summary>获取或设置程序集中的 <c>ProductVersion</c> 字段。</summary>
      <returns>
        <c>ProductVersion</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ResponseFiles">
      <summary>获取或设置一些响应文件的名称，这些文件含有 AL 工具的命令。</summary>
      <returns>响应文件的名称，其中这些文件含有 AL 工具的命令。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.SdkToolsPath">
      <summary>获取或设置 SDK 工具的路径。</summary>
      <returns>SDK 工具的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.SourceModules">
      <summary>获取或设置要编译到程序集中的模块。</summary>
      <returns>要编译到程序集中的模块。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.TargetType">
      <summary>获取或设置输出文件的文件格式：<c>library</c>（代码库）、<c>exe</c>（控制台应用程序）或 <c>win</c>（基于 Windows 的应用程序）。</summary>
      <returns>输出文件的文件格式：<c>库</c>（代码库）、 <c>exe</c> （控制台应用程序） 或<c>赢取</c>（基于 Windows 的应用程序）。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.TemplateFile">
      <summary>获取或设置程序集，除区域性字段之外的所有程序集元数据都从该程序集继承。</summary>
      <returns>除区域性字段之外的所有程序集元数据都从其继承的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Title">
      <summary>获取或设置程序集中的 <c>Title</c> 字段。</summary>
      <returns>
        <c>标题</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.ToolName">
      <summary>获取工具的名称 (Al.exe)。</summary>
      <returns>工具的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Trademark">
      <summary>获取或设置程序集中的 <c>Trademark</c> 字段。</summary>
      <returns>
        <c>商标</c>字段在程序集中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Version">
      <summary>获取或设置此程序集的版本信息。</summary>
      <returns>此程序集的版本信息。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Win32Icon">
      <summary>获取或设置要在程序集中插入的 .ico 文件。</summary>
      <returns>要在程序集中插入的 .ico 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AL.Win32Resource">
      <summary>获取或设置一个要插入到输出文件中的 Win32 资源（.res 文件）。</summary>
      <returns>要插入到输出文件中的 Win32 资源（.res 文件）。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension">
      <summary>提供与 <see cref="T:Microsoft.Build.Utilities.Task" /> 类相同，但派生自 <see cref="T:System.MarshalByRefObject" /> 的功能，以便可以在其自己的应用程序域中进行实例化。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension.Log">
      <summary>获取包含任务日志记录方法的 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 类的实例。</summary>
      <returns>日志记录帮助器对象。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AspNetCompiler">
      <summary>实现 <c>AspNetCompiler</c> 任务。 使用项目文件中的 <c>AspNetCompiler</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 AspNetCompiler 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.AspNetCompiler" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>生成 AspNetCompiler 工具的命令行参数。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.AllowPartiallyTrustedCallers">
      <summary>获取或设置一个布尔值，该值指示 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />（允许部分受信任的调用方访问程序集）是否应该应用于 Aspnet_compiler.exe 生成的具有强名称的程序集。</summary>
      <returns>如果 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 应该应用于 Aspnet_compiler.exe 生成的具有强名称的程序集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Clean">
      <summary>获取或设置一个布尔值，该值指示是否将以全新方式生成预编译的应用程序。</summary>
      <returns>如果将以全新方式生成预编译的应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Debug">
      <summary>获取或设置一个布尔值，该值表示是否在编译时发出调试信息（.PDB 文件）。</summary>
      <returns>如果在编译时发出调试信息（.PDB 文件），则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.DelaySign">
      <summary>获取或设置一个布尔值，该值指示是否应向生成的程序集应用 <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />（指示程序集应只使用公钥标记而不使用公钥/私钥对进行签名）。</summary>
      <returns>如果应向生成的程序集应用 <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.Execute">
      <summary>执行 <c>AspNetCompiler</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.FixedNames">
      <summary>获取或设置一个布尔值，该值指示是否应该为应用程序中的每个页面生成一个程序集。</summary>
      <returns>如果应该为应用程序中的每个页面生成一个程序集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Force">
      <summary>获取或设置一个布尔值，该值指定是否应覆盖 <paramref name="targetDir" /> 目录及其子目录中的现有文件。</summary>
      <returns>如果应覆盖 <paramref name="targetDir" /> 目录及其子目录中的现有文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.GenerateFullPathToTool">
      <summary>返回 AspNetCompiler 工具的完整文件路径。</summary>
      <returns>AspNetCompiler 工具的完整文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.KeyContainer">
      <summary>获取或设置一个布尔值，该值表示是否应向编译后的程序集应用 <see cref="T:System.Reflection.AssemblyKeyNameAttribute" />（表示用于生成强名称的公钥/私钥对的容器名称）。</summary>
      <returns>如果应向编译后的程序集应用 <see cref="T:System.Reflection.AssemblyKeyNameAttribute" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.KeyFile">
      <summary>获取或设置一个布尔值，该值指示是否应向编译后的程序集应用 <see cref="T:System.Reflection.AssemblyKeyFileAttribute" />（表示包含用于生成强名称的公钥/私钥对的文件名称）。</summary>
      <returns>如果应向编译后的程序集应用 <see cref="T:System.Reflection.AssemblyKeyFileAttribute" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.MetabasePath">
      <summary>获取或设置应用程序的完整 IIS 元数据库路径。</summary>
      <returns>应用程序的完整 IIS 元数据库路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.PhysicalPath">
      <summary>获取或设置要编译的应用程序的物理路径。</summary>
      <returns>要编译的应用程序的物理路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.TargetFrameworkMoniker">
      <summary>获取或设置 TargetFrameworkMoniker，用于指示应使用哪个 .NET Framework 版本的 aspnet_compiler.exe。</summary>
      <returns>TargetFrameworkMoniker。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.TargetPath">
      <summary>获取或设置应用程序将编译到的物理路径。</summary>
      <returns>应用程序将编译到的物理路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.ToolName">
      <summary>获取 AspNetCompiler 工具的名称 (aspnet_compiler.exe)。</summary>
      <returns>AspNetCompiler 工具的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.Updateable">
      <summary>获取或设置一个布尔值，该值指示预编译的应用程序是否可以更新。</summary>
      <returns>如果预编译的应用程序可以更新，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AspNetCompiler.ValidateParameters">
      <summary>验证输入参数和日志错误或警告（如果有）。 返回一个布尔值，该值指示是否应继续执行任务。</summary>
      <returns>如果应继续执行任务，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AspNetCompiler.VirtualPath">
      <summary>获取或设置要编译的应用程序的虚拟路径。</summary>
      <returns>要编译的应用程序的虚拟路径。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignCulture">
      <summary>实现 <c>AssignCulture</c> 任务。 使用项目文件中的 <c>AssignCulture</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 AssignCulture 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignCulture.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.AssignCulture" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles">
      <summary>获取向其中每项添加了 <c>Culture</c> 元数据条目的 <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" /> 的列表。</summary>
      <returns>列表<see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" />，使用<c>区域性</c>元数据条目添加到每个项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture">
      <summary>获取具有 <c>Culture</c> 元数据条目的 <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> 的子集。</summary>
      <returns>一个子集<see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" />具有<c>区域性</c>元数据条目。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture">
      <summary>获取不具有 <c>Culture</c> 元数据条目的 <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> 的子集。</summary>
      <returns>一个子集<see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" />不具有<c>区域性</c>元数据条目。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles">
      <summary>获取不具有 <c>Culture</c> 元数据条目的 <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> 的子集。</summary>
      <returns>一个子集<see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" />不具有<c>区域性</c>元数据条目。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignCulture.Execute">
      <summary>执行 <c>AssignCulture</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignCulture.Files">
      <summary>获取或设置要为其分配区域性并且嵌入了区域性名称的文件的列表。</summary>
      <returns>要为其分配区域性并且嵌入了区域性名称的文件的列表。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignProjectConfiguration">
      <summary>将 XML 项目配置分配给项目引用任务项。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.AssignProjectConfiguration" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.AddSyntheticProjectReferencesForSolutionDependencies">
      <summary>获取或设置一个标志，此标志确定是否使用传入解决方案 Blob 的解决方案依赖项信息，以便添加用于生成排序的合成项目引用。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.AssignedProjects">
      <summary>获取或设置解析的项目引用路径的列表，同时保留原始的项目引用特性。</summary>
      <returns>解析的项目引用路径的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProject">
      <summary>获取或设置项目的完整路径。</summary>
      <returns>返回项目的完整路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectConfiguration">
      <summary>获取或设置当前项目的配置。</summary>
      <returns>返回当前项目的配置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.CurrentProjectPlatform">
      <summary>获取或设置当前项目的平台。</summary>
      <returns>返回当前项目的平台。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.DefaultToVcxPlatformMapping">
      <summary>获取或设置以分号分隔的映射列表，从大多数 VS 类型使用的平台名称到 .vcxprojs 使用的平台名称。</summary>
      <returns>返回以分号分隔的映射列表，从大多数 VS 类型使用的平台名称到 .vcxprojs 使用的平台名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.Execute">
      <summary>执行 <c>AssignProjectConfiguration</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration">
      <summary>指定是否应生成引用（即使这些引用在项目配置中被禁用）。</summary>
      <returns>返回 <see langword="true" />。 如果应生成引用;<see langword="false" />否则为。 默认为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.OutputType">
      <summary>获取或设置项目的输出类型。</summary>
      <returns>返回项目的输出类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveConfigurationPlatformUsingMappings">
      <summary>获取或设置一个开关，该开关指定是否应使用默认映射来解析项目引用中传递的配置/平台。</summary>
      <returns>如果应使用默认映射，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.ShouldUnsetParentConfigurationAndPlatform">
      <summary>获取或设置一个开关，该开关确定是否在项目引用上设置 GlobalPropertiesToRemove 元数据，以便执行 MSBuild 调用时，取消设置 Configuration 和 Platform 元数据，从而允许在其默认的配置/平台中生成子项目。</summary>
      <returns>如果取消设置 Configuration 和 Platform 元数据，则返回 true；否则返回 false。 默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.SolutionConfigurationContents">
      <summary>获取或设置包含项目配置的 XML 字符串。</summary>
      <returns>包含项目配置的 XML 字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.UnassignedProjects">
      <summary>获取或设置项目引用项的列表，这些项无法使用输出的预解析列表进行解析。</summary>
      <returns>项目引用项的列表，其中这些项无法使用输出的预解析列表进行解析。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignProjectConfiguration.VcxToDefaultPlatformMapping">
      <summary>获取或设置以分号分隔的映射列表，从 .vcxproj 平台名称到大多数其他 VS 项目类型使用的平台名称。</summary>
      <returns>返回以分号分隔的映射列表。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.AssignTargetPath">
      <summary>将目标路径分配给输入文件。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignTargetPath.#ctor">
      <summary>创建 <see cref="T:Microsoft.Build.Tasks.AssignTargetPath" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.AssignedFiles">
      <summary>获取分配给目标路径的输出文件。</summary>
      <returns>分配给目标路径的输出文件。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.AssignTargetPath.Execute">
      <summary>执行 <c>AssignTargetPath</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.Files">
      <summary>获取或设置要向其分配目标路径的输入文件。</summary>
      <returns>输入文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.AssignTargetPath.RootFolder">
      <summary>获取或设置目标文件路径相对的根文件夹。</summary>
      <returns>目标文件路径相对的根文件夹。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CallTarget">
      <summary>实现 <c>CallTarget</c> 任务。 使用项目文件中的 <c>CallTarget</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 CallTarget 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CallTarget.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CallTarget" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CallTarget.Execute">
      <summary>指示 MSBuild 引擎在当前项目中生成一个或多个目标。</summary>
      <returns>如果成功生成所有目标，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.RunEachTargetSeparately">
      <summary>获取或设置一个布尔值，该值指示是否每个目标都调用一次 MSBuild 引擎 (<see langword="true" />) 或调用一次 MSBuild 引擎以生成所有目标 (<see langword="false" />)。</summary>
      <returns>
        <see langword="true" /> 如果MSBuild引擎，则为每个目标;<see langword="false" />如果MSBuild引擎调用一次以生成所有目标。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.TargetOutputs">
      <summary>获取所有生成目标的输出。</summary>
      <returns>所有生成目标的输出。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.Targets">
      <summary>获取或设置要生成的一个或多个目标。</summary>
      <returns>要生成的一个或多个目标。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CallTarget.UseResultsCache">
      <summary>获取或设置一个布尔值，该值指示 MSBuild 引擎是否返回缓存中的已生成目标。</summary>
      <returns>如果 MSBuild 引擎将返回缓存中的已生成目标，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CodeTaskFactory">
      <summary>一个任务工厂，它可以采用支持代码 DOM 的语言并使用该语言来创建任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.#ctor">
      <summary>创建任务工厂。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
      <summary>清理任务中使用的任何上下文或状态。</summary>
      <param name="task">要清理的任务。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
      <summary>创建一个 <c>taskfactory</c> 实例，其中包含需要在各任务调用之间刷新的数据。</summary>
      <param name="loggingHost">记录任务工厂中的信息的主机。</param>
      <returns>新任务。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CodeTaskFactory.FactoryName">
      <summary>MSBuild 引擎使用此名称来进行记录。</summary>
      <returns>任务的名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters">
      <summary>获取所有任务参数的类型信息。</summary>
      <returns>所有任务参数的类型信息的数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
      <summary>初始化任务工厂。</summary>
      <param name="taskName">任务的名称。</param>
      <param name="taskParameters">任务的参数。</param>
      <param name="taskElementContents">任务的元素内容。</param>
      <param name="taskFactoryLoggingHost">获取有关任务的信息的日志记录主机。</param>
      <returns>新的任务工厂。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CodeTaskFactory.TaskType">
      <summary>表示任务的类型。</summary>
      <returns>任务类型。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CombinePath">
      <summary>将指定路径合并到单个路径。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CombinePath" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.BasePath">
      <summary>获取或设置与其他路径组合的基路径。 可以是相对路径、绝对路径或空白。</summary>
      <returns>与其他路径组合的基路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.CombinedPaths">
      <summary>获取或设置由 <c>CombinePath</c> 任务创建的组合路径。</summary>
      <returns>创建的组合的路径<c>CombinePath</c>任务。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CombinePath.Execute">
      <summary>执行 <c>CombinePath</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CombinePath.Paths">
      <summary>获取或设置要与 <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> 组合成组合路径的各个路径的列表。 路径可以是相对路径，也可以是绝对路径。</summary>
      <returns>要与 <see cref="P:Microsoft.Build.Tasks.CombinePath.BasePath" /> 组合成组合路径的各个路径的列表。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CommandLineBuilderExtension">
      <summary>包含用于构造命令行的扩展实用工具方法。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.GetQuotedText(System.String)">
      <summary>返回适合追加到命令行的带引号的字符串。</summary>
      <param name="unquotedText">要转换的字符串。</param>
      <returns>一个字符串，表示新的带引号的字符串。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ConvertToAbsolutePath">
      <summary>实现 <c>ConvertToAbsolutePath</c> 任务。 使用项目文件中的 <c>ConvertToAbsolutePath</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 ConvertToAbsolutePath 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ConvertToAbsolutePath" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.AbsolutePaths">
      <summary>获取或设置绝对路径列表。</summary>
      <returns>绝对路径的列表。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ConvertToAbsolutePath.Execute">
      <summary>执行 <c>ConvertToAbsolutePath</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ConvertToAbsolutePath.Paths">
      <summary>获取或设置要转换为绝对路径的相对路径的列表。</summary>
      <returns>要转换为绝对路径的相对路径的列表。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Copy">
      <summary>实现 <c>Copy</c> 任务。 使用项目文件中的 <c>Copy</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Copy 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Copy" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.Cancel">
      <summary>尽快停止并返回（在一个未定义状态）。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.CopiedFiles">
      <summary>获取已成功复制的项。</summary>
      <returns>已成功复制的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.DestinationFiles">
      <summary>获取或设置要对其复制源文件的文件的列表。</summary>
      <returns>要对其复制源文件的文件的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.DestinationFolder">
      <summary>获取或设置要将文件复制到的目录。</summary>
      <returns>要将文件复制到的目录。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Copy.Execute">
      <summary>执行 <c>Copy</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles">
      <summary>获取或设置一个布尔值，该值指示是否覆盖文件（即使将文件标为只读文件也不例外）。</summary>
      <returns>
        <see langword="true" /> 如果<c>副本</c>任务应覆盖文件，即使它们标记为只读文件; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.Retries">
      <summary>在前面的所有尝试失败的情况下，尝试复制的次数。 默认为零。 警告：重试方法可能会掩盖生成过程中的同步问题。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds">
      <summary>任何必要重试之间的延迟。 默认值为 1,000 毫秒。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.SkipUnchangedFiles">
      <summary>获取或设置一个布尔值，该值指示 <c>Copy</c> 任务是否应跳过复制在源和目标之间保持不变的文件。</summary>
      <returns>
        <see langword="true" /> 如果<c>副本</c>任务应跳过复制的文件的源和目标之间保持不变; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.SourceFiles">
      <summary>获取或设置要复制的文件。</summary>
      <returns>要复制的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible">
      <summary>指示是否应使用硬链接。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateCSharpManifestResourceName">
      <summary>从给定的资源文件名创建 C# 样式清单名称。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CreateCSharpManifestResourceName" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>返回对应于指定资源文件的 C# 样式清单资源名称。</summary>
      <param name="fileName">从中创建 C# 清单名称的资源文件的名称。</param>
      <param name="linkFileName">链接文件的名称。</param>
      <param name="rootNamespace">资源文件的根命名空间，通常取自于项目文件。 可为 <see langword="null" />。</param>
      <param name="dependentUponFileName">资源文件（通常为 .cs 文件）的父级的名称。 可为 <see langword="null" />。</param>
      <param name="binaryStream">文件内容的二进制流。 可为 <see langword="null" />。</param>
      <returns>对应于指定的资源文件的清单资源名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.IsSourceFile(System.String)">
      <summary>指示指定的文件是否为 C# 源文件。</summary>
      <param name="fileName">要检查的文件名。</param>
      <returns>如果指定的文件为 C# 源文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateItem">
      <summary>实现 <c>CreateItem</c> 任务。 使用项目文件中的 <c>CreateItem</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 CreateItem 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateItem.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CreateItem" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.AdditionalMetadata">
      <summary>获取或设置要附加到输出项的其他元数据。</summary>
      <returns>要附加到输出项的其他元数据。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.Exclude">
      <summary>获取或设置要从输出项集合中排除的项。</summary>
      <returns>要从输出项集合中排除的项。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateItem.Execute">
      <summary>执行 <c>CreateItem</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.Include">
      <summary>获取或设置要包含在输出项集合中的项。</summary>
      <returns>要包含在输出项集合中的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateItem.PreserveExistingMetadata">
      <summary>获取或设置一个布尔值，该值指示是否只在不存在元数据的情况下才应用附加元数据。</summary>
      <returns>
        <see langword="true" /> 如果<c>CreateItem</c>任务应仅适用于其他元数据不存在; 否则为<see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateManifestResourceName">
      <summary>确定要分配给资源的清单资源名称。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CreateManifestResourceName" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>当在派生类中被重写时，创建清单资源名称。</summary>
      <param name="fileName">依赖文件的名称。</param>
      <param name="linkFileName">链接特性指定的文件的名称。</param>
      <param name="rootNamespaceName">根命名空间。 此参数可以是空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</param>
      <param name="dependentUponFileName">此依赖项的父级的文件名称。 此参数可以为 null 引用（<see langword="Nothing" />）。</param>
      <param name="binaryStream">文件的二进制流内容。 此参数可以为 null 引用（<see langword="Nothing" />）。</param>
      <returns>清单资源名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.Execute">
      <summary>运行该任务。</summary>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.IsSourceFile(System.String)">
      <summary>当在派生类中重写时，指示指定的文件是否为有效的源文件。</summary>
      <param name="fileName">文件名。</param>
      <returns>如果该文件是有效的源文件，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="F:Microsoft.Build.Tasks.CreateManifestResourceName.itemSpecToTaskitem">
      <summary>包含目录中的任务项以提供来自派生类的快速访问。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)">
      <summary>创建与 Visual Studio 2003 配合使用的有效标识符。</summary>
      <param name="name">文件名。</param>
      <returns>与 Visual Studio 2003 配合使用的标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ManifestResourceNames">
      <summary>获取已创建的清单资源名称。</summary>
      <returns>已创建的清单资源名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.PrependCultureAsDirectory">
      <summary>获取或设置是否应在清单资源名称之前附加区域性名称以作为目录。</summary>
      <returns>如果应在前面附加区域性名称，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFiles">
      <summary>获取或设置从属资源文件。</summary>
      <returns>从属资源文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.ResourceFilesWithManifestResourceNames">
      <summary>获取或设置资源名称的初始列表以及清单资源名称的附加元数据。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 对象，表示资源名称和元数据。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateManifestResourceName.RootNamespace">
      <summary>获取或设置用于命名的根命名空间。</summary>
      <returns>用于命名的根命名空间。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateProperty">
      <summary>实现 <c>CreateProperty</c> 任务。 使用项目文件中的 <c>CreateProperty</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 CreateProperty 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateProperty.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CreateProperty" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateProperty.Execute">
      <summary>执行 <c>CreateProperty</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateProperty.Value">
      <summary>获取或设置要复制到新属性的值。</summary>
      <returns>要复制到新属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.CreateProperty.ValueSetByTask">
      <summary>包含与 <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> 属性相同的值。</summary>
      <returns>与 <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> 属性相同的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName">
      <summary>从给定的资源文件名创建 Visual Basic 样式清单名称。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
      <summary>返回对应于指定资源文件的 Visual Basic 样式清单资源名称。</summary>
      <param name="fileName">从中创建 Visual Basic 清单名称的资源文件的名称。</param>
      <param name="linkFileName">链接文件的名称。</param>
      <param name="rootNamespace">资源文件的根命名空间，通常取自于项目文件。 可为 <see langword="null" />。</param>
      <param name="dependentUponFileName">资源文件（通常为 .vb 文件）的父级的名称。 可为 <see langword="null" />。</param>
      <param name="binaryStream">文件内容的二进制流。 可为 <see langword="null" />。</param>
      <returns>对应于指定的资源文件的清单资源名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.IsSourceFile(System.String)">
      <summary>指示指定的文件是否为 Visual Basic 源文件。</summary>
      <param name="fileName">要检查的文件名。</param>
      <returns>如果指定的文件是 Visual Basic 源文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Csc">
      <summary>实现 <c>Csc</c> 任务。 使用项目文件中的 <c>Csc</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Csc 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Csc" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>使用开关和其他可存入响应文件的信息填充指定的 <paramref name="commandLine" />。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.AllowUnsafeBlocks">
      <summary>获取或设置一个布尔值，该值指示是否编译使用 unsafe 关键字的代码。</summary>
      <returns>
        <see langword="true" /> 如果将编译使用的代码unsafe关键字; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ApplicationConfiguration">
      <summary>返回配置信息。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.BaseAddress">
      <summary>获取或设置加载 DLL 的首选基址。</summary>
      <returns>加载 DLL 的首选基址。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.CallHostObjectToExecute">
      <summary>通过主机对象编译项目。</summary>
      <returns>如果编译成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.CheckForOverflowUnderflow">
      <summary>获取或设置一个值，该值指示 <c>Csc</c> 任务是否会对溢出数据类型边界的整数算法导致运行时异常。</summary>
      <returns>
        <see langword="true" /> 如果<c>Csc</c>任务应导致异常时运行时溢出的数据类型边界的整数算法; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.DisabledWarnings">
      <summary>获取或设置要禁用的警告的列表。</summary>
      <returns>要禁用的警告的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.DocumentationFile">
      <summary>获取或设置用于保存文档注释的 XML 文件。</summary>
      <returns>用于保存文档注释的 XML 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ErrorEndLocation">
      <summary>如果正确，输出每个错误结尾位置的行和列。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ErrorReport">
      <summary>获取或设置用于将 C# 内部编译器错误报告给 Microsoft 的方法。</summary>
      <returns>用于将 C# 内部编译器错误报告给 Microsoft 的方法。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.GenerateFullPaths">
      <summary>获取或设置一个布尔值，该值指示是在编译器输出中生成文件的绝对路径 (<see langword="true" />) 还是在编译器输出中生成文件的名称 (<see langword="false" />)。</summary>
      <returns>
        <see langword="true" /> 如果<c>Csc</c>任务应在编译器输出; 生成的文件的绝对路径<see langword="false" />如果<c>Csc</c>任务应在编译器输出中生成的文件的名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.GenerateFullPathToTool">
      <summary>返回 Csc 工具的完整文件路径。</summary>
      <returns>Csc 工具的完整文件路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Csc.InitializeHostObject">
      <summary>返回用于指示下一步操作的宿主对象初始化状态值。</summary>
      <returns>用于指示下一步操作的宿主对象初始化状态值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.LangVersion">
      <summary>获取或设置要使用的语言版本。</summary>
      <returns>要使用的语言版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ModuleAssemblyName">
      <summary>获取或设置一个程序集，.netmodule 可以访问其非公共类型。</summary>
      <returns>一个程序集，.netmodule 可以访问其非公共类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.NoStandardLib">
      <summary>获取或设置一个布尔值，该值指示 <c>Csc</c> 任务是否应阻止导入 mscorlib.dll，后者定义整个系统命名空间。</summary>
      <returns>
        <see langword="true" /> 如果<c>Csc</c>任务应该阻止导入 mscorlib.dll; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.PdbFile">
      <summary>获取或设置 .pbd 文件的路径。</summary>
      <returns>.pbd 文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.PreferredUILang">
      <summary>传递给“/preferreduilang”编译器选项的语言的名称。</summary>
      <returns>语言的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.ToolName">
      <summary>返回 Csc 工具的名称 (csc.exe)。</summary>
      <returns>Csc 工具的名称 (csc.exe)。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.UseHostCompilerIfAvailable">
      <summary>获取或设置一个布尔值，该值指示 <c>Csc</c> 任务是否应使用进程内编译器对象（如果可用）。</summary>
      <returns>
        <see langword="true" /> 如果<c>Csc</c>任务应使用进程内编译器对象，如果可用; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.WarningLevel">
      <summary>获取或设置编译器显示的警告级别。</summary>
      <returns>编译器显示的警告级别。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.WarningsAsErrors">
      <summary>获取或设置将被视为错误的警告的列表。</summary>
      <returns>将被视为错误的警告的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Csc.WarningsNotAsErrors">
      <summary>获取或设置不被视为错误的警告的列表。</summary>
      <returns>不被视为错误的警告的列表。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Delete">
      <summary>实现 <c>Delete</c> 任务。 使用项目文件中的 <c>Delete</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Delete 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Delete.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Delete" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Delete.Cancel">
      <summary>尽快停止并返回（在一个未定义状态）。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Delete.DeletedFiles">
      <summary>获取或设置已成功删除的文件。</summary>
      <returns>已成功删除的文件。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Delete.Execute">
      <summary>执行 <c>Delete</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Delete.Files">
      <summary>获取或设置要删除的文件。</summary>
      <returns>要删除的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Delete.TreatErrorsAsWarnings">
      <summary>获取或设置一个布尔值，该值指示是否将错误记录为警告。</summary>
      <returns>如果将错误记录为警告，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder">
      <summary>引导程序系统的顶级对象。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.#ctor">
      <summary>初始化 <see langword="BootstrapperBuilder" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.#ctor(System.String)">
      <summary>使用指定的 Visual Studio 版本初始化 <see langword="BootstrapperBuilder" /> 类的新实例。</summary>
      <param name="visualStudioVersion">要使用的 Visual Studio 版本。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
      <summary>使用指定设置生成引导程序。</summary>
      <param name="settings">用于创建引导程序的属性。</param>
      <returns>引导程序生成的结果。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetOutputFolders(System.String[],System.String,System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation)">
      <summary>如果给定为指定的设置，则返回创建引导程序组件文件时将其所复制到的目录。</summary>
      <param name="productCodes">所选组件的 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode" /> 值。</param>
      <param name="culture">用于创建引导程序的区域性。</param>
      <param name="fallbackCulture">用于创建引导程序的回退区域性。</param>
      <param name="componentsLocation">指定引导程序打包选定组件的方式。</param>
      <returns>在指定的设置下，向其复制引导程序组件文件的目录（在创建后）。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path">
      <summary>获取或设置所需引导程序文件的位置。</summary>
      <returns>所需引导程序文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Products">
      <summary>获取在当前引导程序 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> 中可以使用的所有产品。</summary>
      <returns>在当前引导程序 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> 中可以使用的所有产品。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage">
      <summary>定义在执行 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 生成操作期间出现的消息。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpId">
      <summary>获取宿主 IDE 的 MSBuild 帮助 ID。</summary>
      <returns>表示帮助 ID 的整数值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.HelpKeyword">
      <summary>获取宿主 IDE 的 MSBuild F1 帮助关键字，或为 null。</summary>
      <returns>一个表示 F1 帮助关键字的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Message">
      <summary>获取生成消息的详细信息。</summary>
      <returns>一个描述生成消息的详细信息的文本字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.Severity">
      <summary>获取生成消息的严重级别。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity" /> 类定义的生成消息的严重级别。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity">
      <summary>此枚举针对生成消息提供三个重要性级别。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Error">
      <summary>指示该消息对应于一个生成错误。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Info">
      <summary>指示该消息对应于生成信息。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity.Warning">
      <summary>指示该消息对应于一个生成警告。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 生成操作的结果。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.ComponentFiles">
      <summary>获取复制的组件安装程序文件的路径。</summary>
      <returns>包含复制的组件安装程序文件的路径的字符串数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.KeyFile">
      <summary>获取生成的主引导程序文件的路径。</summary>
      <returns>一个字符串，表示生成的主引导程序文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Messages">
      <summary>获取引导程序生成中生成的生成消息。</summary>
      <returns>来自引导程序生成的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage" /> 消息的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Succeeded">
      <summary>获取一个布尔值，该值指示引导程序生成是否成功。</summary>
      <returns>一个布尔值，指示引导程序生成是否成功。 如果引导程序生成成功，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings">
      <summary>定义引导程序生成操作的设置。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationFile">
      <summary>获取或设置要在引导程序安装必需组件后安装的文件。</summary>
      <returns>要在安装所需组件后安装的文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationName">
      <summary>获取或设置要在引导程序安装所有必需组件后安装的应用程序的名称。</summary>
      <returns>要在安装必需组件后安装的应用程序的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationRequiresElevation">
      <summary>获取或设置一个值，以指示在将组件安装到目标计算机上时是否以提升的权限运行该组件。</summary>
      <returns>如果使用提升的权限运行已安装的组件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ApplicationUrl">
      <summary>当引导程序发布到网站时，获取或设置预期源位置。</summary>
      <returns>一个 URL，它在引导程序发布到网站时表示预期源位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation">
      <summary>获取或设置引导程序组件的安装位置。</summary>
      <returns>引导程序组件的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation" /> 安装位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsUrl">
      <summary>如果 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> 设置为 <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />，则获取或设置引导程序要将组件复制到的位置。</summary>
      <returns>如果 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> 设置为 <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />，引导程序要将组件复制到的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.CopyComponents">
      <summary>获取或设置一个值，该值指示引导程序组件是否将复制到生成输出目录。</summary>
      <returns>如果引导程序组件将复制到生成输出目录，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.FallbackLCID">
      <summary>获取或设置 LCID 标识符不可用时要使用的区域性标识符。</summary>
      <returns>一个整数值，表示 LCID 标识符不可用时要使用的区域性标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.LCID">
      <summary>获取或设置区域性标识符，它指定针对其生成引导程序的区域性。</summary>
      <returns>表示该区域性标识符的整数值，该标识符指定针对其生成引导程序的区域性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.OutputPath">
      <summary>获取或设置要将输出文件复制到的文件位置。</summary>
      <returns>一个字符串，表示要将输出文件复制到的文件位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ProductBuilders">
      <summary>获取用于生成引导程序的产品生成器。</summary>
      <returns>用于生成引导程序的产品生成器 (<see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection" />) 的集合。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.SupportUrl">
      <summary>获取或设置包含引导程序支持信息的网站的 URL。</summary>
      <returns>包含引导程序支持信息的网站的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.Validate">
      <summary>获取或设置一个值，该值表示该引导程序是否对组件清单执行 XML 验证。</summary>
      <returns>如果引导程序对组件清单执行 XML 验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation">
      <summary>指定所需组件的发布方式。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute">
      <summary>指定应在特定位置查找产品。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.HomeSite">
      <summary>指定应根据可再发行供应商的指定 URL 查找产品。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Relative">
      <summary>指定应根据生成的引导程序查找产品。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder">
      <summary>公开创建引导程序必须具有的功能。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
      <summary>生成基于指定设置的引导程序。</summary>
      <param name="settings">用于创建引导程序的属性。</param>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults" /> 对象，它表示引导程序生成结果。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path">
      <summary>获取或设置所需引导程序文件的位置。</summary>
      <returns>一个字符串值，表示所需引导程序文件的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Products">
      <summary>获取在当前引导程序路径中可以使用的所有产品。</summary>
      <returns>表示在当前的引导程序 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBootstrapperBuilder.Path" /> 中可以使用的所有产品的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 生成操作过程中出现的消息。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpId">
      <summary>获取宿主 IDE 的 MSBuild 帮助 ID。</summary>
      <returns>表示宿主 IDE 的 MSBuild 帮助 ID 的整数。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.HelpKeyword">
      <summary>获取宿主 IDE 的 MSBuild F1 帮助关键字。</summary>
      <returns>宿主 IDE 的 MSBuild F1 帮助关键字。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Message">
      <summary>获取对生成消息的详细信息的描述。</summary>
      <returns>描述生成消息的详细信息的文本字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildMessage.Severity">
      <summary>获取生成消息的严重性。</summary>
      <returns>一个表示生成消息严重性的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 生成操作的结果。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.ComponentFiles">
      <summary>获取复制的组件安装程序文件的文件路径。</summary>
      <returns>包含复制的组件安装程序文件的文件路径的字符串数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.KeyFile">
      <summary>获取生成的主引导程序文件的文件路径。</summary>
      <returns>一个字符串，表示生成的主引导程序文件的文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Messages">
      <summary>获取引导程序生成中生成的生成消息。</summary>
      <returns>引导程序生成中生成的生成消息。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildResults.Succeeded">
      <summary>获取一个值，该值指示引导程序生成是否成功。</summary>
      <returns>
        <see langword="true" /> 如果引导程序生成是否成功;否则为<see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings">
      <summary>定义引导程序生成操作的设置。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationFile">
      <summary>获取或设置要在引导程序安装必需组件后安装的文件。</summary>
      <returns>要在引导程序安装必需组件后安装的文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationName">
      <summary>获取或设置要在引导程序安装所有必需组件后安装的应用程序的名称。</summary>
      <returns>要在引导程序安装所有必需组件后安装的应用程序的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationRequiresElevation">
      <summary>获取或设置一个值，以指示在将组件安装到目标计算机上时是否以提升的权限运行该组件。</summary>
      <returns>如果使用提升的权限运行已安装的组件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ApplicationUrl">
      <summary>当引导程序发布到网站时，获取或设置预期源位置。</summary>
      <returns>将引导程序发布到网站时的预期源位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsLocation">
      <summary>获取或设置引导程序组件的安装位置。</summary>
      <returns>引导程序组件的安装位置 (<see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation" />)。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ComponentsUrl">
      <summary>如果 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> 设置为 <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />，则获取或设置引导程序要将组件复制到的位置。</summary>
      <returns>如果 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings.ComponentsLocation" /> 设置为 <see cref="F:Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation.Absolute" />，引导程序要将组件复制到的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.CopyComponents">
      <summary>获取或设置一个值，该值指示引导程序组件是否将复制到生成输出目录。</summary>
      <returns>如果引导程序组件将复制到生成输出目录，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.FallbackLCID">
      <summary>获取或设置 LCID 标识符不可用时要使用的区域性标识符。</summary>
      <returns>一个整数值，表示 LCID 标识符不可用时要使用的区域性标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.LCID">
      <summary>获取或设置区域性标识符，它指定针对其生成引导程序的区域性。</summary>
      <returns>表示该区域性标识符的整数值，该标识符指定针对其生成引导程序的区域性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.OutputPath">
      <summary>获取或设置要将输出文件复制到的文件位置。</summary>
      <returns>一个字符串，表示要将输出文件复制到的文件位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.ProductBuilders">
      <summary>获取用于生成引导程序的产品生成器。</summary>
      <returns>用于生成引导程序的产品生成器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.SupportUrl">
      <summary>获取或设置包含引导程序支持信息的网站的 URL。</summary>
      <returns>包含引导程序支持信息的网站的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IBuildSettings.Validate">
      <summary>获取或设置一个值，该值表示该引导程序是否对组件清单执行 XML 验证。</summary>
      <returns>如果引导程序对组件清单执行 XML 验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 在 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> 属性中查找到的产品。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Includes">
      <summary>获取此产品安装的所有产品。</summary>
      <returns>包含此产品安装的所有产品的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.Name">
      <summary>获取此产品的用户可读名称。</summary>
      <returns>包含此产品用户可读名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductBuilder">
      <summary>获取此产品的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 表示形式。</summary>
      <returns>一个<see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" />对象，表示此产品。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProduct.ProductCode">
      <summary>获得此产品的唯一产品标识符。</summary>
      <returns>一个字符串，指定此产品的唯一产品标识符。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 的可生成版本。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilder.Product">
      <summary>获取与此 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象对应的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象。</summary>
      <returns>与此 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象对应的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection">
      <summary>包含 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象的集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>将 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象添加到产品生成器集合。</summary>
      <param name="builder">要添加到集合的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象集合。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Count">
      <summary>获取产品集合中包含的元素数。</summary>
      <returns>产品集合中包含的元素数。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Item(System.Int32)">
      <summary>检索位于指定索引处的产品。</summary>
      <param name="index">要获取的元素的索引(索引从零开始)。</param>
      <returns>指定索引处的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.IProductCollection.Product(System.String)">
      <summary>检索具有指定产品代码的产品。</summary>
      <param name="productCode">要获取的产品的唯一标识符。</param>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象，该对象具有指定的产品代码；如果找不到指定的产品码，则为 null。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 在 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> 属性中查找到的产品。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.#ctor">
      <summary>初始化 <see langword="Product" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Includes">
      <summary>获取此产品安装的所有产品。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection" /> 对象，它表示此产品安装的所有产品的。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.Name">
      <summary>获取此产品的用户可读名称。</summary>
      <returns>表示此产品用户可读名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductBuilder">
      <summary>获取产品的可生成版本。</summary>
      <returns>表示产品的可生成版本的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductCode">
      <summary>获取一个字符串，该字符串指示此产品的唯一产品标识符。</summary>
      <returns>用于指示此产品的唯一产品标识符的字符串。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 的可生成版本。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder.Product">
      <summary>获取与此 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象对应的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象。</summary>
      <returns>与此 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象对应的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection">
      <summary>包含 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象的集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder)">
      <summary>将 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象添加到产品生成器集合。</summary>
      <param name="builder">要添加到集合的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder" /> 对象。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator">
      <summary>返回一个可循环访问产品生成器集合的枚举器。</summary>
      <returns>一个可循环访问产品生成器集合的枚举器。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection">
      <summary>此接口表示 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象集合。 该集合是由 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder" /> 基于 <see cref="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Path" /> 属性生成的封闭集。 客户端无法添加或移除此集合中的项。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Count">
      <summary>获取产品集合中包含的元素数。</summary>
      <returns>指示产品集合中包含的元素数的整数。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.GetEnumerator">
      <summary>返回一个可循环访问产品集合的枚举器。</summary>
      <returns>一个可循环访问产品集合的枚举器。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Item(System.Int32)">
      <summary>检索位于指定索引处的产品。</summary>
      <param name="index">要获取的元素的索引(索引从零开始)。</param>
      <returns>一个表示指定索引处的产品的 <see cref="T:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Product(System.String)">
      <summary>检索具有指定产品代码的产品。</summary>
      <param name="productCode">要获取的产品的唯一标识符。</param>
      <returns>该产品具有指定的产品代码；如果找不到指定的产品码，则返回 <see langword="null" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity">
      <summary>提供 ClickOnce 应用程序的唯一标识符。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.#ctor(System.String,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity" /> 类的新实例。</summary>
      <param name="url">ClickOnce 部署清单的部署提供程序 URL。</param>
      <param name="deployManifestIdentity">ClickOnce 部署清单的程序集标识。</param>
      <param name="applicationManifestIdentity">ClickOnce 应用程序清单的程序集标识。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity" /> 类的新实例。</summary>
      <param name="url">ClickOnce 部署清单的部署提供程序 URL。</param>
      <param name="deployManifestPath">ClickOnce 部署清单的路径。 将从指定文件获取程序集标识。</param>
      <param name="applicationManifestPath">ClickOnce 应用程序清单的路径。 将从指定文件获取程序集标识。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.ToString">
      <summary>返回完整的 ClickOnce 应用程序标识。</summary>
      <returns>包含 ClickOnce 应用程序标识的字符串。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest">
      <summary>描述 ClickOnce 或本机 Win32 应用程序清单。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> 类的新实例。</summary>
      <param name="targetFrameworkVersion">一个表示 .NET Framework 版本的标记。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile">
      <summary>获取或设置应用程序配置文件。</summary>
      <returns>一个字符串，它表示应用程序配置文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.EntryPoint">
      <summary>获取或设置表示应用程序入口点的程序集引用。</summary>
      <returns>表示应用程序入口点的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl">
      <summary>获取或设置错误报告的 URL。</summary>
      <returns>一个包含错误报告 URL 的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations">
      <summary>获取或设置在清单中定义的文件关联。</summary>
      <returns>一个包含文件关联的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser">
      <summary>获取或设置一个值，该值指定应用程序是否承载于浏览器中（例如，WPF Web 浏览器应用程序就承载于浏览器中）。</summary>
      <returns>一个布尔值，指示是否在浏览器中承载要部署的应用程序。如果是，则为 <see langword="True" />；否则为 <see langword="False" />。 <see langword="True" /> 值仅适用于 WPF Web 浏览器应用程序。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile">
      <summary>获取或设置程序图标文件。</summary>
      <returns>表示图标文件名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest">
      <summary>获取或设置一个值，指定该清单是一个 ClickOnce 应用程序清单还是本机 Win32 应用程序清单。</summary>
      <returns>一个布尔值，指定该清单是一个 ClickOnce 应用程序清单 (<see langword="True" />) 还是本机 Win32 清单 (<see langword="False" />)。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.MaxTargetPath">
      <summary>获取或设置一个值，该值指定 ClickOnce 应用程序部署中允许的最大文件路径长度。 如果指定此值，则将针对此限制检查应用程序中每个文件路径的长度。 超出该限制的任何项都会导致一条警告消息。 如果此输入未指定或为零，则不会执行任何检查。 对于本机 Win32 清单，将忽略此输入。</summary>
      <returns>一个整数，它指示 ClickOnce 应用程序部署中允许的最大文件路径长度。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription">
      <summary>获取或设置一个值，该值指定操作系统依赖项的文本说明。</summary>
      <returns>指示操作系统依赖项的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl">
      <summary>获取或设置一个值，该值指定操作系统依赖项的支持 URL。</summary>
      <returns>指示操作系统依赖项的支持 URL的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSVersion">
      <summary>获取或设置一个值，该值指定应用程序所需的最低操作系统版本。</summary>
      <returns>表示应用程序所需最低操作系统版本的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product">
      <summary>获取或设置一个值，该值指定项目文件中的 <see langword="ProductName" /> 属性。</summary>
      <returns>与项目文件中 <see langword="ProductName" /> 属性相对应的字符串值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher">
      <summary>获取或设置一个值，该值指定项目文件中的 <see langword="PublisherName" /> 属性。</summary>
      <returns>与项目文件中 <see langword="PublisherName" /> 属性相对应的字符串值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName">
      <summary>获取或设置在清单中定义的套件名称。</summary>
      <returns>一个包含套件名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl">
      <summary>获取或设置一个值，该值指定项目文件中的 <see langword="SupportUrl" /> 属性。</summary>
      <returns>与项目文件中 <see langword="SupportUrl" /> 属性相对应的字符串值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TargetFrameworkVersion">
      <summary>获取或设置一个标记，该标记表示 .NET Framework 的版本。</summary>
      <returns>一个 <see cref="T:System.String" />，它表示 .NET Framework 的版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.TrustInfo">
      <summary>获取或设置一个值，该值指定用于定义应用程序安全性的信任对象。</summary>
      <returns>一个用于定义应用程序安全性的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust">
      <summary>获取或设置一个值，该值指定是否将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" />、<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> 和 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> 属性写入应用程序清单。</summary>
      <returns>一个布尔值，用于指示是否将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" />、<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> 和 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> 属性写入应用程序清单。 如果该值为 <see langword="True" />，则将这些属性写入应用程序清单。 如果该值为 <see langword="False" />，则忽略这些属性。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Validate">
      <summary>执行各项检查以验证该清单的有效性。 在 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> 对象中报告任何生成的错误或警告。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlConfigFile">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ConfigFile" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointIdentity">
      <summary>获取或设置一个用于将入口点标识序列化为 XML 文件的属性。</summary>
      <returns>入口点标识。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointParameters">
      <summary>获取或设置一个用于将入口点参数序列化为 XML 文件的属性。</summary>
      <returns>入口点参数。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlEntryPointPath">
      <summary>获取或设置一个属性，该属性指定用于执行程序集的入口点并用于将入口点序列化为 XML 文件。</summary>
      <returns>用于执行程序集的入口点。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlErrorReportUrl">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ErrorReportUrl" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlFileAssociations">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlHostInBrowser">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see langword="true" /> 或 <see langword="false" />。 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.HostInBrowser" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIconFile">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IconFile" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlIsClickOnceManifest">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see langword="true" /> 或 <see langword="false" />。 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.IsClickOnceManifest" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSBuild">
      <summary>获取或设置一个属性，该属性用于将操作系统的生成版本序列化为 XML 文件。</summary>
      <returns>操作系统的生成版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSDescription">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSDescription" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMajor">
      <summary>获取或设置一个用于将操作系统版本号的修订版本部分序列化为 XML 文件的属性。</summary>
      <returns>操作系统版本号的主要部分。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSMinor">
      <summary>获取或设置一个属性，该属性用于将操作系统版本号的次要部分序列化到 XML 文件</summary>
      <returns>操作系统版本号的次要部分。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSRevision">
      <summary>获取或设置一个属性，该属性用于将操作系统版本号的修订部分序列化为 XML 文件。</summary>
      <returns>操作系统版本号的修订部分。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlOSSupportUrl">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.OSSupportUrl" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlProduct">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Product" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlPublisher">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.Publisher" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSuiteName">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SuiteName" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlSupportUrl">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.SupportUrl" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.XmlUseApplicationTrust">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.UseApplicationTrust" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity">
      <summary>指定一个程序集的标识。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
      <param name="identity">指定要复制的另一个实例。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
      <param name="name">指定程序集的简单名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
      <param name="name">指定程序集的简单名称。</param>
      <param name="version">指定程序集的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
      <param name="name">指定程序集的简单名称。</param>
      <param name="version">指定程序集的版本。</param>
      <param name="publicKeyToken">指定程序集的公钥标记，该标记为程序集签名时所用公钥的 SHA-1 哈希的最后 8 个字节。</param>
      <param name="culture">指定程序集的区域性。 指示固定区域性的空白字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
      <param name="name">指定程序集的简单名称。</param>
      <param name="version">指定程序集的版本。</param>
      <param name="publicKeyToken">指定程序集的公钥标记，该标记为程序集签名时所用公钥的 SHA-1 哈希的最后 8 个字节。</param>
      <param name="culture">指定程序集的区域性。 指示固定区域性的空白字符串。</param>
      <param name="processorArchitecture">指定程序集的处理器体系结构。 有效值为 <see langword="msil" />、<see langword="x86" />、<see langword="ia64" /> 和 <see langword="amd64" />。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 类的新实例。</summary>
      <param name="name">指定程序集的简单名称。</param>
      <param name="version">指定程序集的版本。</param>
      <param name="publicKeyToken">指定程序集的公钥标记，该标记为程序集签名时所用公钥的 SHA-1 哈希的最后 8 个字节。</param>
      <param name="culture">指定程序集的区域性。 指示固定区域性的空白字符串。</param>
      <param name="processorArchitecture">指定程序集的处理器体系结构。 有效值为 <see langword="msil" />、<see langword="x86" />、<see langword="ia64" /> 和 <see langword="amd64" />。</param>
      <param name="type">指定程序集的类型属性。 有效值为 <see langword="win32" /> 或空白字符串。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture">
      <summary>获取或设置程序集的区域性。</summary>
      <returns>指示程序集区域性的字符串。 指示固定区域性的空白字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromAssemblyName(System.String)">
      <summary>分析字符串以获取程序集标识。 如果无法获取标识，则返回 null。</summary>
      <param name="assemblyName">程序集的全名，即所谓的显示名称。</param>
      <returns>生成的程序集标识。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromFile(System.String)">
      <summary>获取指定程序集的标识。 文件可以是具有嵌入式 xml 清单的 PE、独立 xml 清单文件或 .NET 程序集。 如果无法获取标识，则返回 null。</summary>
      <param name="path">要从中获取标识的文件的名称。</param>
      <returns>指定文件的程序集标识。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManagedAssembly(System.String)">
      <summary>获取指定的 .NET 程序集的标识。 文件必须是 .NET 程序集。 如果无法获取标识，则返回 null。</summary>
      <param name="path">要从中获取标识的文件的名称。</param>
      <returns>指定文件的程序集标识。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(System.String)">
      <summary>获取指定的清单文件的标识。 文件必须是独立的 XML 清单文件。 如果无法获取标识，则返回 null。</summary>
      <param name="path">要从中获取标识的文件的名称。</param>
      <returns>指定文件的程序集标识。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromNativeAssembly(System.String)">
      <summary>获取指定本机程序集的标识。 文件必须是具有嵌入式 XML 清单的 PE 或独立 XML 清单文件。 如果无法获取标识，则返回 null。</summary>
      <param name="path">要从中获取标识的文件的名称。</param>
      <returns>指定文件的程序集标识。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags">
      <summary>此类表示 <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags)" /> 函数返回的属性。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.All">
      <summary>包括所有属性。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Default">
      <summary>包括名称、版本、区域性和 PublicKeyToken 属性。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.ProcessorArchitecture">
      <summary>包括名称、版本、区域性、PublicKeyToken 和 ProcessorArchitecture 属性。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags.Type">
      <summary>包括名称、版本、区域性、PublicKeyToken 和类型属性。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags)">
      <summary>返回程序集的全名。</summary>
      <param name="flags">指定全名中要包括的属性。</param>
      <returns>全名的字符串表示形式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsFrameworkAssembly">
      <summary>如果此程序集是 .NET Framework 的一部分，则返回 <see langword="True" />。</summary>
      <returns>一个 <see langword="Boolean" /> 值，表示此程序集是否为 .NET Framework 的一部分。 如果此程序集是 .NET Framework 的一部分，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsNeutralPlatform">
      <summary>获取一个值，该值指示程序集标识是否表示非特定平台程序集。</summary>
      <returns>指示程序集标识是否表示非特定平台程序集的 <see langword="Boolean" /> 值。 如果程序集标识表示非特定平台程序集则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.IsStrongName">
      <summary>获取一个值，该值指示此程序集标识是否时强名称。</summary>
      <returns>一个 <see langword="Boolean" /> 值，该值指示此程序集标识是否时强名称。 如果程序集标识是强名称，则为 <see langword="True" />；否则为 <see langword="False" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name">
      <summary>获取或设置程序集的简单名称。</summary>
      <returns>一个字符串，指示程序集的简单名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture">
      <summary>获取或设置程序集的处理器架构。</summary>
      <returns>表示程序集的处理器架构的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken">
      <summary>获取或设置程序集的公钥标记，该标记为程序集签名时所用公钥的 SHA-1 哈希的最后 8 个字节。</summary>
      <returns>一个字符串，指示程序集的公钥标记。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ToString">
      <summary>返回完整的 ClickOnce 程序集标识。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type">
      <summary>获取或设置程序集的类型属性。</summary>
      <returns>一个字符串，指示程序集的类型属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version">
      <summary>获取或设置程序集的版本。</summary>
      <returns>指示程序集版本的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlCulture">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture" /> 属性序列化为 XML 文件。</summary>
      <returns>用于序列化的属性<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Culture" />到 XML 文件的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlName">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name" /> 属性序列化为 XML 文件。</summary>
      <returns>用于序列化的属性<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Name" />到 XML 文件的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlProcessorArchitecture">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture" /> 属性序列化为 XML 文件。</summary>
      <returns>用于序列化的属性<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.ProcessorArchitecture" />到 XML 文件的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlPublicKeyToken">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken" /> 属性序列化为 XML 文件。</summary>
      <returns>用于序列化的属性<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.PublicKeyToken" />到 XML 文件的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlType">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type" /> 属性序列化为 XML 文件。</summary>
      <returns>用于序列化的属性<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Type" />到 XML 文件的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.XmlVersion">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version" /> 属性序列化为 XML 文件。</summary>
      <returns>用于序列化的属性<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.Version" />到 XML 文件的属性。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest">
      <summary>描述 Win32 程序集清单。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.ExternalProxyStubs">
      <summary>为独立的应用程序和 Reg-Free COM 获取由清单引用的外部代理存根集。</summary>
      <returns>独立应用程序和 Reg-free COM 的清单引用的外部代理存根集</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest.XmlExternalProxyStubs">
      <summary>获取或设置一组外部代理存根，它们由独立应用程序和无需注册的 COM 的清单按 XML 格式引用。</summary>
      <returns>引用由独立应用程序和 Reg-free COM 的清单按 XML 格式的外部代理存根集。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference">
      <summary>描述一个清单程序集引用。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> 类的新实例。</summary>
      <param name="path">文件的指定源路径。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity">
      <summary>指定程序集引用的标识。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 对象，表示程序集引用的标识。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite">
      <summary>指定程序集引用是否为系统必备。</summary>
      <returns>一个布尔值，它指示程序集引用是 (<see langword="True" />) 否 (<see langword="False" />) 为系统必备。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ReferenceType">
      <summary>指定程序集引用的类型。</summary>
      <returns>表示程序集引用的类型的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType" /> 对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.ToString">
      <summary>返回完整的 ClickOnce 程序集引用。</summary>
      <returns>包含 ClickOnce 程序集引用的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlAssemblyIdentity">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.AssemblyIdentity" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsNative">
      <summary>获取或设置一个值，该值指示引用是否为本机引用。</summary>
      <returns>一个值，该值指示引用是否为本机引用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.XmlIsPrerequisite">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference.IsPrerequisite" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection">
      <summary>提供清单程序集引用的集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
      <summary>将指定的程序集引用添加到集合。</summary>
      <param name="assembly">要添加的程序集引用。</param>
      <returns>添加的程序集引用实例。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Add(System.String)">
      <summary>将指定的程序集引用添加到集合。</summary>
      <param name="path">要添加的程序集的路径。</param>
      <returns>添加的程序集引用实例。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Clear">
      <summary>从集合中删除所有对象。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Count">
      <summary>获取集合中包含的对象数。</summary>
      <returns>一个整数，表示集合中的对象数。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
      <summary>根据指定的程序集标识在集合中查找程序集引用。</summary>
      <param name="identity">指定的程序集标识。</param>
      <returns>找到的程序集引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(System.String)">
      <summary>根据简单名称在集合中查找程序集引用。</summary>
      <param name="name">指定的程序集简单名称。</param>
      <returns>找到的程序集引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.FindTargetPath(System.String)">
      <summary>按指定目标路径在集合中查找程序集引用。</summary>
      <param name="targetPath">指定的目标路径。</param>
      <returns>找到的程序集引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.GetEnumerator">
      <summary>返回一个可循环访问集合的枚举数。</summary>
      <returns>一个可循环访问集合的枚举器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Item(System.Int32)">
      <summary>获取指定索引处的元素。</summary>
      <param name="index">要获取的项的从零开始的索引。</param>
      <returns>程序集引用实例。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
      <summary>从集合中移除指定的程序集引用。</summary>
      <param name="assemblyReference">要移除的指定的程序集引用。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType">
      <summary>此类表示程序集引用的类型。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ClickOnceManifest">
      <summary>指定 ClickOnce 清单。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.ManagedAssembly">
      <summary>指定 .NET Framework 程序集。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.NativeAssembly">
      <summary>指定 Win32 本机程序集。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType.Unspecified">
      <summary>程序集类型未指定，将由 <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo" /> 方法决定。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference">
      <summary>描述文件引用和程序集引用所共有的基本功能。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference" /> 类的新实例。</summary>
      <param name="path">程序集基引用的路径。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Group">
      <summary>获取或设置按需下载功能的组。</summary>
      <returns>指示按需下载功能的组的字符串。 指示主文件的空白字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash">
      <summary>获取或设置文件的 SHA1 哈希。</summary>
      <returns>一个字符串，指示文件的 SHA1 哈希。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional">
      <summary>获取或设置文件是否可选用按需下载功能。</summary>
      <returns>一个布尔值，它指示文件是否可选用按需下载功能。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ResolvedPath">
      <summary>获取或设置文件的解析路径。 此路径由 Resolve 方法确定，用于通过 <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo" /> 方法计算文件信息。</summary>
      <returns>指示文件的解析路径的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size">
      <summary>获取或设置文件大小（以字节为单位）。</summary>
      <returns>文件大小（以字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SortName">
      <summary>获取一个值，该值用于对应用程序清单中的引用程序集进行排序。</summary>
      <returns>排序依据的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.SourcePath">
      <summary>获取或设置文件的源路径。</summary>
      <returns>指示文件源路径的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.TargetPath">
      <summary>获取或设置文件的目标路径。 这是用于生成清单中的规范的路径。</summary>
      <returns>指示文件目标路径的字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.ToString">
      <summary>返回基引用名称。</summary>
      <returns>指示基引用名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlGroup">
      <summary>获取或设置按需下载功能的组。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHash">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Hash" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlHashAlgorithm">
      <summary>获取或设置用于将哈希算法序列化为 XML 文件的属性。</summary>
      <returns>哈希算法。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlIsOptional">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.IsOptional" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlPath">
      <summary>获取或设置用于将路径序列化为 XML 文件的属性。</summary>
      <returns>引用的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.XmlSize">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference.Size" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass">
      <summary>表示清单中所述的 COM 类。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId">
      <summary>获取 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的类标识符 (ClsId)。</summary>
      <returns>一个以 {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx} 模式进行格式化的 <see cref="T:System.String" />，其中 GUID 的值表示为一系列小写的十六进制位，且它们分别以 8 个、4 个、4 个、4 个和 12 个为一组并由连字符分隔开。 例如，返回值为“{382c74c3-721d-4f34-80e5-57657b6cbc27}”。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description">
      <summary>获取 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的说明。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的说明。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId">
      <summary>获取 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的编程标识符 (ProgId)。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的编程标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel">
      <summary>获取 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的线程模型。</summary>
      <returns>一个字符串，例如“Apartment”。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId">
      <summary>获取一个值，该值是包含有关该类的类型信息的类型库的标识符。</summary>
      <returns>包含有关该类的类型信息的类型库的标识符。 一个以 {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx} 模式进行格式化的 <see cref="T:System.String" />，其中 GUID 的值表示为一系列小写的十六进制位，且它们分别以 8 个、4 个、4 个、4 个和 12 个为一组并由连字符分隔开。 例如，返回值为“{382c74c3-721d-4f34-80e5-57657b6cbc27}”。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlClsId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ClsId" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlDescription">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.Description" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlProgId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ProgId" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlThreadingModel">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.ThreadingModel" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.XmlTlbId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass.TlbId" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework">
      <summary>描述应用程序可在其上运行的 .NET Framework 的版本。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Profile">
      <summary>表示相应 .NET Framework 的配置文件。</summary>
      <returns>一个 <see cref="T:System.String" /> 对象，该对象表示 .NET Framework 的配置文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.SupportedRuntime">
      <summary>获取或设置框架的支持的运行时。</summary>
      <returns>一个 <see cref="T:System.String" /> 对象，该对象表示相应 .NET Framework 的运行时版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.Version">
      <summary>获取或设置框架的版本。</summary>
      <returns>一个 <see cref="T:System.String" /> 对象，该对象表示 .NET Framework 的版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlProfile">
      <summary>获取或设置框架的 XML 版本。</summary>
      <returns>一个 XML 元素的数组，它表示 .NET Framework 的配置文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlSupportedRuntime">
      <summary>获取或设置框架的支持的 XML 格式运行时。</summary>
      <returns>一个 XML 元素的数组，它表示相应 .NET Framework 的运行时版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework.XmlVersion">
      <summary>获取或设置框架的版本。</summary>
      <returns>一个 XML 元素的数组，它表示 .NET Framework 的版本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection">
      <summary>表示应用程序运行时首选基于的 .NET Framework 的版本集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework)">
      <summary>将一个框架添加到 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework" /> 类。</summary>
      <param name="compatibleFramework">要添加的框架。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Clear">
      <summary>清除集合。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Count">
      <summary>获取 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection" /> 集合中列出的 .NET Framework 版本数。</summary>
      <returns>一个 <see cref="T:System.Int32" /> 对象，该对象表示 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection" /> 集合中列出的 .NET Framework 版本数。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.GetEnumerator">
      <summary>获取集合的枚举器。</summary>
      <returns>一个可循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 接口。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.Item(System.Int32)">
      <summary>获取应用程序运行时首选基于的 .NET Framework 的版本。</summary>
      <param name="index">要在最终用户计算机上检查的 .NET Framework 的版本。</param>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework" /> 对象，该对象表示应用程序运行时首选基于的 .NET Framework 的版本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest">
      <summary>表示 ClickOnce 部署清单。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> 的新实例。</summary>
      <param name="targetFrameworkMoniker">一个表示 .NET Framework 运行时版本的标记。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CompatibleFrameworks">
      <summary>获取应用程序可在其上运行的 .NET Framework 的版本。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection" /> 类，该类表示应用程序可在其上运行的 .NET Framework 的版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut">
      <summary>获取或设置一个值，该值指示是否创建桌面快捷方式。</summary>
      <returns>“True”或“False”。 一个包含值的字符串，该值指示是否创建桌面快捷方式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl">
      <summary>获取或设置应用程序的更新位置。</summary>
      <returns>指示应用程序更新位置的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation">
      <summary>获取或设置一个值，该值指示是否应阻止通过 URL 启动应用程序。</summary>
      <returns>如果阻止通过 URL 启动应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.EntryPoint">
      <summary>获取或设置作为应用程序入口点的部署引用。</summary>
      <returns>表示应用程序入口点的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl">
      <summary>获取或设置错误报告的 URL。</summary>
      <returns>一个包含错误报告 URL 的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install">
      <summary>获取或设置一个值，该值指示应用程序是已安装应用程序还是仅联机应用程序。</summary>
      <returns>如果应用程序是已安装应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions">
      <summary>获取或设置一个值，该值指示是否使用 .deploy 文件扩展名映射。</summary>
      <returns>如果使用 .deploy 文件扩展名映射，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion">
      <summary>获取或设置所需的应用程序的最低版本号。</summary>
      <returns>一个字符串，表示所需的应用程序的最低版本号。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product">
      <summary>获取或设置应用程序的名称。</summary>
      <returns>指示应用程序的名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher">
      <summary>获取或设置应用程序的发布者。</summary>
      <returns>表示应用程序的发布者的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName">
      <summary>获取或设置在清单中定义的套件名称。</summary>
      <returns>一个包含套件名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl">
      <summary>获取或设置应用程序链接，该链接显示在“控制面板”中的“添加或删除程序”中。</summary>
      <returns>指示支持 URL 的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TargetFrameworkMoniker">
      <summary>获取或设置一个标记，该标记表示 .NET Framework 运行时的版本。</summary>
      <returns>一个 <see cref="T:System.String" />，它表示 .NET Framework 运行时的版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters">
      <summary>获取或设置一个值，该值指示应用程序是否可以使用 URL 查询字符串参数。</summary>
      <returns>如果应用程序可以使用 URL 查询字符串参数，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled">
      <summary>获取或设置指示应用程序是否可更新的值。</summary>
      <returns>如果应该程序可更新，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval">
      <summary>获取或设置应用程序的更新间隔。</summary>
      <returns>一个整数，指示应用程序的更新间隔。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode">
      <summary>获取或设置一个对象，该对象表示是在应用程序启动之前在前台检查更新，还是在应用程序运行时在后台检查更新。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode" /> 对象，该对象表示是在应用程序启动之前，还是应用程序运行时检查更新。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit">
      <summary>获取或设置用于 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> 属性的单位。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit" /> 对象，指示用于 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> 属性的单位。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Validate">
      <summary>执行各项检查以验证该清单的有效性。 在 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> 对象中报告任何生成的错误或警告。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCompatibleFrameworks">
      <summary>获取或设置 XML 元素的数组，这些元素表示应用程序可在其上运行的 .NET Framework 的版本。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFramework" /> 类，该类表示应用程序可在其上运行的 .NET Framework 的版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlCreateDesktopShortcut">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CreateDesktopShortcut" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDeploymentUrl">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DeploymentUrl" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlDisallowUrlActivation">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DisallowUrlActivation" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlErrorReportUrl">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.ErrorReportUrl" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlInstall">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Install" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMapFileExtensions">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MapFileExtensions" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlMinimumRequiredVersion">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.MinimumRequiredVersion" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlProduct">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Product" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlPublisher">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.Publisher" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSuiteName">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SuiteName" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlSupportUrl">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.SupportUrl" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlTrustUrlParameters">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.TrustUrlParameters" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateEnabled">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateEnabled" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateInterval">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateInterval" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateMode">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateMode" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.XmlUpdateUnit">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.UpdateUnit" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation">
      <summary>表示要与应用程序关联的文件扩展名。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon">
      <summary>获取或设置要用于文件的图标，这些文件使用特定 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" />。</summary>
      <returns>包含图标的文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description">
      <summary>获取或设置 shell 使用的文件类型的说明。</summary>
      <returns>对文件类型的说明。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension">
      <summary>获取或设置要与应用程序关联的文件扩展名。</summary>
      <returns>要与应用程序关联的文件扩展名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId">
      <summary>获取或设置唯一标识文件关联的文件类型的名称。</summary>
      <returns>唯一标识文件类型的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDefaultIcon">
      <summary>获取或设置一个属性，该属性用于将文件关联的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.DefaultIcon" /> 属性序列化为 XML 文件。</summary>
      <returns>此文件关联的 DefaultIcon 的 XML 表示形式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlDescription">
      <summary>获取或设置一个属性，该属性用于将文件关联的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description" /> 属性序列化为 XML 文件。</summary>
      <returns>此文件关联的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Description" /> 值的 XML 表示形式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlExtension">
      <summary>获取或设置一个属性，该属性用于将文件关联的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" /> 属性序列化为 XML 文件。</summary>
      <returns>此文件关联的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.Extension" /> 值的 XML 表示形式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.XmlProgId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId" /> 属性序列化为 XML 文件。</summary>
      <returns>此文件关联的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation.ProgId" /> 值的 XML 表示形式。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection">
      <summary>表示文件关联的集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociation)">
      <summary>将指定的文件关联添加到集合。</summary>
      <param name="fileAssociation">要添加的文件关联。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Clear">
      <summary>从集合中移除所有文件关联。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Count">
      <summary>获取集合中文件关联的数目。</summary>
      <returns>集合中文件关联的数目。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.GetEnumerator">
      <summary>返回一个可循环访问集合的枚举数。</summary>
      <returns>一个接口，它表示可循环访问集合的枚举数。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.Item(System.Int32)">
      <summary>获取出现在指定索引处的文件关联。</summary>
      <param name="index">要获取的文件关联的从零开始的索引。</param>
      <returns>位于指定索引处的文件关联。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference">
      <summary>描述清单文件引用。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference" /> 类的新实例。</summary>
      <param name="path">文件的指定源路径。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses">
      <summary>返回由独立应用程序和无需注册的 COM 的清单引用的 COM 类集。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComClass" /> 对象的一个数组，这些对象表示由独立应用程序和无需注册的 COM 的清单引用的 COM 类集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.IsDataFile">
      <summary>获取或设置文件是否为数据文件。</summary>
      <returns>一个布尔值，该值指示文件是否为数据文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs">
      <summary>返回由独立应用程序和无需注册的 COM 的清单引用的代理存根集。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub" /> 对象的一个数组，这些对象表示由独立应用程序和无需注册的 COM 的清单引用的代理存根集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs">
      <summary>返回由清单引用的类型库集。</summary>
      <returns>
        <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib" /> 对象的一个数组，这些对象表示由清单引用的类型库集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlComClasses">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ComClasses" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlProxyStubs">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ProxyStubs" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlTypeLibs">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.TypeLibs" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.XmlWriteableType">
      <summary>获取或设置一个值，该值指示文件是否为数据文件。</summary>
      <returns>“applicationData”是唯一有效的设置。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection">
      <summary>表示清单文件引用的集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference)">
      <summary>将指定的文件引用添加到集合。</summary>
      <param name="file">要添加的指定文件引用。</param>
      <returns>添加的文件引用对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Add(System.String)">
      <summary>将指定的文件引用添加到集合。</summary>
      <param name="path">要添加的指定文件引用的路径。</param>
      <returns>添加的文件引用对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Clear">
      <summary>从集合中删除所有对象。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Count">
      <summary>返回集合中包含的对象数。</summary>
      <returns>集合中包含的对象数。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.FindTargetPath(System.String)">
      <summary>按指定目标路径在集合中查找文件引用。</summary>
      <param name="targetPath">指定的目标路径。</param>
      <returns>找到的文件引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.GetEnumerator">
      <summary>返回一个可循环访问集合的枚举数。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" /> 接口，表示可循环访问集合的枚举器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Item(System.Int32)">
      <summary>返回指定索引处的元素。</summary>
      <param name="index">要获取的项的从零开始的索引。</param>
      <returns>文件引用对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.Remove(Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference)">
      <summary>从集合中删除指定的文件引用。</summary>
      <param name="file">要删除的指定文件引用。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest">
      <summary>表示所有受支持的清单类型所共有的基本功能。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity">
      <summary>获取或设置的清单的标识。</summary>
      <returns>表示清单标识的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences">
      <summary>获取清单引用的程序集的集合</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection" /> 对象，表示清单引用的程序集的集合。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description">
      <summary>获取或设置该清单的文本说明。</summary>
      <returns>用于描述清单的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.EntryPoint">
      <summary>获取或设置作为应用程序入口点的程序集引用。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference" /> 对象，表示作为应用程序入口点的程序集引用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences">
      <summary>获取清单所引用文件的集合</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection" /> 对象，它表示清单引用的文件集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream">
      <summary>获取或设置从中读取清单的输入流。</summary>
      <returns>一个 <see cref="T:System.IO.Stream" /> 对象，表示从中读取清单的输入流。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.OutputMessages">
      <summary>获取当前错误和警告消息的集合。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection" /> 对象，包含当前错误和警告消息的集合。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReadOnly">
      <summary>获取或设置一个值，该值指示清单是在只读模式运行还是在读写模式下运行。</summary>
      <returns>一个 <see langword="Boolean" /> 值，该值指示清单是在只读模式运行还是在读写模式下运行。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles">
      <summary>通过在与加载的清单相同的目录或当前目录中进行搜索，以查找所有指定的程序集和文件引用。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles(System.String[])">
      <summary>通过在指定的目录中进行搜索来查找所有指定的程序集和文件引用。</summary>
      <param name="searchPaths">指定要搜索的目录的字符串数组。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.SourcePath">
      <summary>获取或设置加载或保存清单的位置。</summary>
      <returns>一个字符串，它指示加载或保存清单的位置。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ToString">
      <summary>返回清单名称。</summary>
      <returns>一个字符串，指示清单名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo">
      <summary>更新每个引用的程序集和文件的文件信息。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileInfo(System.String)">
      <summary>更新每个引用的程序集和文件的信息，使用目标框架的指定版本。</summary>
      <param name="targetFrameworkVersion">要使用的目标的版本。 如果没有目标框架版本则为 Null。 如果没有目标框架版本，使用 sha256 算法。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Validate">
      <summary>执行各项检查以验证该清单的有效性。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ValidatePlatform">
      <summary>验证清单平台。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyIdentity">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyIdentity" /> 属性序列化为 XML 文件。</summary>
      <returns>指定程序集标识的对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlAssemblyReferences">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences" /> 属性序列化为 XML 文件。</summary>
      <returns>清单程序集引用的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlDescription">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.Description" /> 属性序列化为 XML 文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlFileReferences">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences" /> 属性序列化为 XML 文件。</summary>
      <returns>清单文件引用对象的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.XmlSchema">
      <summary>获取或设置一个用于将架构序列化为 XML 文件的属性。</summary>
      <returns>XML 文件的架构。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader">
      <summary>将 XML 清单文件读取为对象表示形式。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream,System.Boolean)">
      <summary>读取指定的清单 XML 并返回对象表示形式。</summary>
      <param name="input">指定输入流。</param>
      <param name="preserveStream">指定是否在生成的清单对象的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> 属性中保留输入流。 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> 用来重建对象表示形式中未表示的输入。</param>
      <returns>清单的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> 对象表示形式。 可强制转换为 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />、<see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> 或 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> 以访问更具体的功能。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.Boolean)">
      <summary>读取指定的清单 XML 并返回对象表示形式。</summary>
      <param name="path">输入文件的完全限定的路径名称。 例如，完整路径可能是 c:\directory\folder\filename.manifest。</param>
      <param name="preserveStream">指定是否在生成的清单对象的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> 属性中保留输入流。 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> 用来重建对象表示形式中未表示的输入。</param>
      <returns>清单的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> 对象表示形式。 可强制转换为 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />、<see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> 或 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> 以访问更具体的功能。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.IO.Stream,System.Boolean)">
      <summary>读取指定的清单 XML 并返回对象表示形式。</summary>
      <param name="manifestType">指定清单的预期类型。 有效值为 <see langword="AssemblyManifest" />、<see langword="ApplicationManifest" /> 或 <see langword="DeployManifest" />。</param>
      <param name="input">指定输入流。</param>
      <param name="preserveStream">指定是否在生成的清单对象的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> 属性中保留输入流。 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> 用来重建对象表示形式中未表示的输入。</param>
      <returns>清单的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> 对象表示形式。 可强制转换为 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />、<see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> 或 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> 以访问更具体的功能。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.String,System.Boolean)">
      <summary>读取指定的清单 XML 并返回对象表示形式。</summary>
      <param name="manifestType">指定清单的预期类型。 有效值为 <see langword="AssemblyManifest" />、<see langword="ApplicationManifest" /> 或 <see langword="DeployManifest" />。</param>
      <param name="path">输入文件的路径名称。</param>
      <param name="preserveStream">指定是否在生成的清单对象的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.InputStream" /> 属性中保留输入流。 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter" /> 用来重建对象表示形式中未表示的输入。</param>
      <returns>清单的 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest" /> 对象表示形式。 可强制转换为 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyManifest" />、<see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest" /> 或 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest" /> 以访问更具体的功能。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter">
      <summary>写入 XML 清单的对象表示形式。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>将指定的清单对象写入 XML。</summary>
      <param name="manifest">清单对象。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.IO.Stream)">
      <summary>将指定的清单对象写入 XML。</summary>
      <param name="manifest">清单对象。</param>
      <param name="output">指定输出流。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.String)">
      <summary>将指定的清单对象写入 XML。</summary>
      <param name="manifest">清单对象。</param>
      <param name="path">输出文件的路径名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.String,System.String)">
      <summary>将指定的清单对象写入 XML。</summary>
      <param name="manifest">清单对象。</param>
      <param name="path">输出文件的路径名称。</param>
      <param name="targetframeWorkVersion">目标框架版本。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage">
      <summary>此类表示清单生成器的错误、警告或信息性输出消息。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.GetArguments">
      <summary>返回消息的自变量的字符串数组。</summary>
      <returns>消息的自变量的字符串数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Name">
      <summary>返回消息的标识符。</summary>
      <returns>指示消息名称的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Text">
      <summary>返回消息文本。</summary>
      <returns>指示消息文本的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.Type">
      <summary>返回此消息是错误、警告，还是信息性消息。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType" /> 对象，它指示消息类型。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection">
      <summary>此类表示输出消息的集合。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Clear">
      <summary>从集合中删除所有对象。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.ErrorCount">
      <summary>获取集合中的错误消息数。</summary>
      <returns>集合中的错误消息数。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.GetEnumerator">
      <summary>返回一个可循环访问集合的枚举数。</summary>
      <returns>一个可循环访问集合的枚举器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.Item(System.Int32)">
      <summary>获取指定索引处的元素。</summary>
      <param name="index">要获取的项的从零开始的索引。</param>
      <returns>文件引用对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.WarningCount">
      <summary>获取集合中的警告消息数。</summary>
      <returns>集合中的警告消息数。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType">
      <summary>将输出消息的类型指定为错误、警告或信息。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Error">
      <summary>指示错误。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Info">
      <summary>指示信息性消息。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType.Warning">
      <summary>指示警告。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub">
      <summary>表示 ClickOnce 应用程序清单中的代理。 .</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface">
      <summary>获取接口的 IID，<see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID" /> 属性所描述的接口是从该接口派生的。</summary>
      <returns>基接口的 IID。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID">
      <summary>获取为其声明代理的接口的 IID。</summary>
      <returns>接口的 IID。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name">
      <summary>获取组件的名称。</summary>
      <returns>组件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods">
      <summary>获取组件中的方法数目。</summary>
      <returns>组件中的方法数目。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId">
      <summary>获取组件的类型库的 GUID。</summary>
      <returns>类型库的 GUID。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlBaseInterface">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.BaseInterface" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlIID">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.IID" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlName">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.Name" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlNumMethods">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.NumMethods" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.XmlTlbId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ProxyStub.TlbId" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities">
      <summary>提供用于操作安全权限集和签名的一套实用函数。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])">
      <summary>通过计算区域默认权限集、删除任何排除的权限并添加任何包括的权限，来生成权限集。</summary>
      <param name="targetZone">指定区域默认权限集，该权限集是从计算机策略中获取的。 有效值为 <see langword="Internet" />、<see langword="LocalIntranet" /> 或 <see langword="Custom" />。 如果已指定 <see langword="Custom" />，则生成的权限集仅基于 <paramref name="includedPermissionSet" /> 参数。</param>
      <param name="includedPermissionSet">一个 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet" /> 对象，它包含将显式包含于生成权限集的一组权限。 <paramref name="targetZone" /> 或 <paramref name="excludedPermissions" /> 参数如何，此参数中指定的权限都将逐字包含在生成的权限集中。</param>
      <param name="excludedPermissions">要从区域默认权限集中排除的权限标识字符串的数组。 可以使用 <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)" /> 方法进行计算的权限标识字符串。 如果 <paramref name="targetZone" /> 不为 <see langword="Internet" /> 或 <see langword="LocalIntranet" />，则将忽略此参数。</param>
      <returns>生成的权限集。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])">
      <summary>将权限标识字符串数组转换为权限集对象。</summary>
      <param name="ids">权限标识字符串数组。</param>
      <returns>转换的权限集。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)">
      <summary>将权限集对象转换为权限标识字符串数组。</summary>
      <param name="permissionSet">要转换的输入权限集。</param>
      <returns>权限标识字符串数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)">
      <summary>对 ClickOnce 清单或 PE 文件进行签名。</summary>
      <param name="cert">用于对文件进行签名的证书。</param>
      <param name="timestampUrl">指示该文件将由位于指定 HTTP 地址的时间戳服务器加盖时间戳。 如果不想加盖时间戳，则此参数可以为 NULL。</param>
      <param name="path">要签名的文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)">
      <summary>对 ClickOnce 清单进行签名。</summary>
      <param name="certPath">用于对文件进行签名的证书。 该证必须包含私钥。 <see langword="KeyUsage" /> 扩展名是可选的，但如果它存在，则 <see langword="DigitalSignature" /> 必须设置为 <see langword="True" />。 <see langword="EnhancedKeyUsage" /> 扩展名也是可选的，但如果它存在，则证书必须包含对象标识符 (OID) 支持。</param>
      <param name="certPassword">证书密码。</param>
      <param name="timestampUrl">指示该文件将由位于指定 HTTP 地址的时间戳服务器加盖时间戳。 如果不想加盖时间戳，则此参数可以为 NULL。</param>
      <param name="path">要签名的文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)">
      <summary>对 ClickOnce 清单或 PE 文件进行签名。</summary>
      <param name="certThumbprint">指定指纹，该指纹是保留在你的个人证书存储中的签名证书的 SHA1 哈希。</param>
      <param name="timestampUrl">指示该文件将由位于指定 HTTP 地址的时间戳服务器加盖时间戳。 如果不想加盖时间戳，则此参数可以为 NULL。</param>
      <param name="path">要签名的文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)">
      <summary>将 XML 元素转换为权限集对象。</summary>
      <param name="element">权限集的 XML 表示形式。</param>
      <returns>转换后的权限集对象。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo">
      <summary>此类表示应用程序安全信任信息。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Clear">
      <summary>将 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo" /> 对象重置为完全信任的默认状态。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.HasUnmanagedCodePermission">
      <summary>确定应用程序是否具有调用非托管代码的权限。</summary>
      <returns>一个布尔值，指示应用程序是否具有调用非托管代码的权限。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.IsFullTrust">
      <summary>确定应用程序是完全信任的还是部分信任的。</summary>
      <returns>一个布尔值，它指示应用程序是完全信任还是部分信任。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet">
      <summary>获取或设置应用程序信任的权限集对象。</summary>
      <returns>应用程序信任的 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PermissionSet" /> 对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.PreserveFullTrustPermissionSet">
      <summary>获取或设置设置完全信任标志后是否保留部分信任权限。</summary>
      <returns>指示设置完全信任标志后是否保留部分信任权限的布尔值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.IO.Stream)">
      <summary>从 XML 文件读取应用程序信任。</summary>
      <param name="input">指定输入流。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.String)">
      <summary>从 XML 文件读取应用程序信任。</summary>
      <param name="path">输入文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream)">
      <summary>读取 ClickOnce 应用程序清单中的应用程序信任。</summary>
      <param name="input">指定输入流。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.String)">
      <summary>读取 ClickOnce 应用程序清单中的应用程序信任。</summary>
      <param name="path">输入文件的名称。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.SameSiteAccess">
      <summary>获取或设置允许的同一站点访问级别，该级别指定应用程序是否具有与部署它的服务器进行通信的权限。</summary>
      <returns>指示允许的同一站点访问级别的字符串。 其值可以是 <see langword="site" /> 或 <see langword="none" />。  
 <see langword="site" /> 指定应用程序可以在部署它的同一个 URL 上调用 Web 服务；如果是从共享部署的，则应用程序有权从该共享读取文件。  
 <see langword="none" /> 指定应用程序既不能从部署它的同一个 URL 访问 Web 服务，也不能从部署它的共享访问文件。  
“应用程序”指的是为其读取清单（使用 <see cref="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream)" />）的应用程序。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ToString">
      <summary>将应用程序安全信任对象中的所有信息作为字符串返回。</summary>
      <returns>包含应用程序安全信任对象中的信息的字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.IO.Stream)">
      <summary>将应用程序信任写入 XML 文件。</summary>
      <param name="output">指定输出流。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.String)">
      <summary>将应用程序信任写入 XML 文件。</summary>
      <param name="path">输出文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream)">
      <summary>将应用程序信任写入新的模板 ClickOnce 应用程序清单。</summary>
      <param name="output">指定要向其写入更新的清单文件的输出流。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream,System.IO.Stream)">
      <summary>更新具有指定信任度的现有 ClickOnce 应用程序清单。</summary>
      <param name="input">指定要更新的包含输入流的清单。</param>
      <param name="output">指定要向其写入更新的清单文件的输出流。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.String)">
      <summary>将应用程序信任写入 ClickOnce 应用程序清单。</summary>
      <param name="path">输出文件的名称。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib">
      <summary>表示类型库。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags">
      <summary>获取此类型库的类型库标志的字符串表示形式。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory">
      <summary>获取类型库中类型的帮助文件所在的目录。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId">
      <summary>获取区域设置标识符 (LCID) 的十六进制字符串表示形式。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId">
      <summary>获取类型库的唯一 ID。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version">
      <summary>获取类型库的版本号。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlFlags">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Flags" /> 属性序列化为 XML 文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlHelpDirectory">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.HelpDirectory" /> 属性序列化为 XML 文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlResourceId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.ResourceId" /> 属性序列化为 XML 文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlTlbId">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.TlbId" /> 属性序列化为 XML 文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.XmlVersion">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.Version" /> 属性序列化为 XML 文件。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode">
      <summary>指定应用程序如何检查更新。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Background">
      <summary>在应用程序启动后在后台检查更新。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateMode.Foreground">
      <summary>在应用程序启动前在前台检查更新。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit">
      <summary>指定更新间隔的单位。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Days">
      <summary>更新间隔以天为单位。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Hours">
      <summary>更新间隔以小时为单位。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Deployment.ManifestUtilities.UpdateUnit.Weeks">
      <summary>更新间隔以周为单位。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass">
      <summary>表示应用程序清单中的窗口类。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.#ctor(System.String,System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass" /> 类的新实例，并指定窗口类的版本控制状态信息。</summary>
      <param name="name">类的名称。</param>
      <param name="versioned">控制在注册中使用的内部窗口类名称是否包括含有窗口类的程序集的版本。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name">
      <summary>获取窗口类的名称。</summary>
      <returns>窗口类的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned">
      <summary>获取一个值，该值控制在注册中使用的内部窗口类名是否包括含有窗口类的程序集版本。</summary>
      <returns>如果用于注册的名称包含程序集的版本，则为 <see langword="yes" />；否则为 <see langword="no" />。 默认值为 <see langword="yes" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlName">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.XmlVersioned">
      <summary>获取或设置一个属性，它用于将 <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned" /> 属性序列化为 XML 文件。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned" /> 属性的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Error">
      <summary>实现 <c>Error</c> 任务。 使用项目文件中的 <c>Error</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Delete 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Error.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Error" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.Code">
      <summary>获取或设置与错误关联的错误代码。</summary>
      <returns>与错误关联的错误代码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Error.Execute">
      <summary>执行 <c>Error</c> 任务 — 记录错误并停止生成。</summary>
      <returns>在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.File">
      <summary>相关文件（如果有）。 如果未提供任何文件，则将使用包含“错误”任务的文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.HelpKeyword">
      <summary>获取或设置与错误关联的 Help 关键字。</summary>
      <returns>与错误关联的 Help 关键字。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Error.Text">
      <summary>获取或设置错误文本。</summary>
      <returns>错误文本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Exec">
      <summary>实现 <c>Exec</c> 任务。 使用项目文件中的 <c>Exec</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Exec 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Exec" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>生成命令行工具必须直接从命令行而不是从响应文件运行的命令行参数。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Command">
      <summary>获取或设置要执行的命令。</summary>
      <returns>要执行的命令</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.ConsoleOutput">
      <summary>将输出作为项返回。 空格已删除。  
当 ConsoleToMSBuild 为真时，启用 ConsoleOutput。 如果没有使用，则避免在内存中保存线。 ConsoleOutput 为 stdout 和 stderr 的组合。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.ConsoleToMSBuild">
      <summary>启用向一个项发送标准输出。 （StandardOutput）。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.CustomErrorRegularExpression">
      <summary>获取或设置用于找出工具输出中的错误行的正则表达式。</summary>
      <returns>用于找出工具输出中的错误行的正则表达式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.CustomWarningRegularExpression">
      <summary>获取或设置用于找出工具输出中的警告行的正则表达式。</summary>
      <returns>用于找出工具输出中的警告行的正则表达式。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ExecuteTool(System.String,System.String,System.String)">
      <summary>执行 cmd.exe 工具，等待它完成，然后在完成执行后清理批处理文件。</summary>
      <param name="pathToTool">要执行工具的路径。</param>
      <param name="responseFileCommands">应存入临时响应文件的命令行参数。</param>
      <param name="commandLineCommands">应直接传递到工具的命令行参数。</param>
      <returns>工具所返回的退出代码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GenerateFullPathToTool">
      <summary>返回系统工具 cmd.exe 的完整路径。</summary>
      <returns>系统工具 cmd.exe 的完整路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.GetWorkingDirectory">
      <summary>返回要用于工具处理的工作目录。</summary>
      <returns>要用于工具处理的工作目录。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.HandleTaskExecutionErrors">
      <summary>记录错误消息和处理退出代码。</summary>
      <returns>如果退出代码被忽略，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreExitCode">
      <summary>获取或设置一个布尔值，该值指示在执行命令返回非零的退出代码 (<see langword="false" />) 时，<c>Exec</c> 任务应忽略执行命令 (<see langword="true" />) 所提供的退出代码，还是应返回 <see langword="false" />。</summary>
      <returns>
        <see langword="true" /> 如果<c>Exec</c>任务应忽略执行命令; 提供的退出代码<see langword="false" />如果<c>Exec</c>任务应返回<see langword="false" />执行的命令返回非零退出代码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat">
      <summary>获取或设置指示是否忽略标准错误和警告格式并将输出中的错误和警告记录为常规消息的布尔值。</summary>
      <returns>
        <see langword="true" /> 如果<c>Exec</c>任务应忽略标准错误和警告格式并作为常规消息，则应记录错误和警告<see langword="false" />如果<c>Exec</c>任务应记录错误和警告的标准错误和警告格式相匹配。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>如果指定的一行文本与自定义或标准的错误和警告格式匹配，则将这行文本记录为错误或警告；如果 <see cref="P:Microsoft.Build.Tasks.Exec.IgnoreStandardErrorWarningFormat" /> 设置为 <see langword="true" /> 且没有匹配的自定义格式，则记录为常规消息。</summary>
      <param name="singleLine">要分析的输出的单行。</param>
      <param name="messageImportance">关于记录消息的重要性。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogPathToTool(System.String,System.String)">
      <summary>记录工具名称和路径。</summary>
      <param name="toolName">工具名称。</param>
      <param name="pathToTool">在其中运行工具的当前目录。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.LogToolCommand(System.String)">
      <summary>记录要执行的批处理文件命令。</summary>
      <param name="message">指定一个空字符串。 未使用此参数。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.Outputs">
      <summary>获取或设置任务的输出项。</summary>
      <returns>任务的输出项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorEncoding">
      <summary>获取已捕获的任务标准错误流的编码。</summary>
      <returns>已捕获的任务标准错误流的编码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardErrorLoggingImportance">
      <summary>获取在标准错误流中记录普通消息的重要性。</summary>
      <returns>在标准错误流中记录普通消息的重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputEncoding">
      <summary>获取捕获的任务标准输出流的编码。</summary>
      <returns>已捕获的任务标准输出流的编码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StandardOutputLoggingImportance">
      <summary>获取在标准输出流中用于记录普通消息的重要性。</summary>
      <returns>在标准输出流中用于记录普通消息的重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdErrEncoding">
      <summary>获取或设置对项目可见的已捕获任务标准错误流的编码。</summary>
      <returns>对项目可见的已捕获任务标准错误流的编码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.StdOutEncoding">
      <summary>获取或设置对项目可见的已捕获任务标准输出流的编码。</summary>
      <returns>对项目可见的已捕获任务标准输出流的编码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.ToolName">
      <summary>获取工具的名称 (cmd.exe)。</summary>
      <returns>工具的名称 (cmd.exe)。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Exec.ValidateParameters">
      <summary>验证输入参数和日志错误或警告（如果有）。 返回一个布尔值，该值指示是否应继续执行任务。</summary>
      <returns>如果应继续执行任务，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Exec.WorkingDirectory">
      <summary>获取或设置将在其中运行命令的目录。</summary>
      <returns>将在其中运行命令的目录。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ExtractedClassName">
      <summary>从语言源文件中提取类名。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock">
      <summary>获取或设置一个值，该值指示在有条件编译的代码块内是否存在提取的类名。</summary>
      <returns>如果指示提取的类名存在于条件编译代码块中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ExtractedClassName.Name">
      <summary>获取或设置已提取的类名。</summary>
      <returns>已提取的类名。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindAppConfigFile">
      <summary>在提供的列表中查找 app.config 文件（若有）。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.FindAppConfigFile" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.AppConfigFile">
      <summary>获取或设置在列表中找到的第一个匹配的项（如果找到任何匹配项）。</summary>
      <returns>在列表中找到的第一个匹配的项；如果未找到任何匹配项，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.Execute">
      <summary>查找应用程序配置文件。</summary>
      <returns>在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.PrimaryList">
      <summary>获取或设置要搜索的主列表。</summary>
      <returns>要对其进行搜索的主列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.SecondaryList">
      <summary>获取或设置要搜索的第二个列表。</summary>
      <returns>要对其进行搜索的第二个列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath">
      <summary>获取或设置要添加为 <see cref="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath" /> 元数据的值。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.FindAppConfigFile.TargetPath" /> 元数据。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindInList">
      <summary>在指定的列表中查找具有匹配的 itemspec 的项。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindInList.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.FindInList" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.CaseSensitive">
      <summary>获取或设置一个布尔值，该值指示是否区分大小写进行匹配。</summary>
      <returns>
        <see langword="true" />
        <c>FindInList</c>任务应匹配大小写，区分大小写; 否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindInList.Execute">
      <summary>执行 <c>FindInList</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.FindLastMatch">
      <summary>获取或设置一个布尔值，该值指示是返回最后一个匹配项 (<see langword="true" />)，还是返回第一个匹配项 (<see langword="false" />)。</summary>
      <returns>
        <see langword="true" /> 如果<c>FindInList</c>任务应该返回最后一个匹配项;<see langword="false" />如果<c>FindInList</c>任务应该返回第一个匹配项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.ItemFound">
      <summary>获取或设置在列表中找到的第一个匹配的项（如果找到任何匹配项）。</summary>
      <returns>在列表中发现的第一个匹配项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.ItemSpecToFind">
      <summary>获取或设置要搜索的项规范。</summary>
      <returns>要搜索的 itemspec。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.List">
      <summary>获取或设置要在其中搜索项规范的列表。</summary>
      <returns>要在其中搜索 itemspec 的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindInList.MatchFileNameOnly">
      <summary>获取或设置一个布尔值，该值指示是只根据项规范中的文件名部分进行匹配，还是根据整个项规范进行匹配。</summary>
      <returns>
        <see langword="true" /> 如果<c>FindInList</c>任务应匹配只需的文件名称部分项规范;<see langword="false" />如果<c>FindInList</c>任务应匹配整个项规范。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FindUnderPath">
      <summary>实现 <c>FindUnderPath</c> 任务。 使用项目文件中的 <c>FindUnderPath</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 FindUnderPath 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindUnderPath.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.FindUnderPath" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FindUnderPath.Execute">
      <summary>执行 <c>FileUnderPath</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.Files">
      <summary>获取或设置应将其路径与 <see cref="P:Microsoft.Build.Tasks.FindUnderPath.Path" /> 属性指定的路径进行比较的文件。</summary>
      <returns>应将其路径与 <see cref="P:Microsoft.Build.Tasks.FindUnderPath.Path" /> 属性指定的路径进行比较的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.InPath">
      <summary>获取或设置在指定路径下找到的项。</summary>
      <returns>在指定路径下找到的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.OutOfPath">
      <summary>获取或设置在指定路径下未找到的项。</summary>
      <returns>在指定路径下未找到的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.Path">
      <summary>获取或设置用作参考的文件夹路径。</summary>
      <returns>用作参考的文件夹路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FindUnderPath.UpdateToAbsolutePaths">
      <summary>获取或设置一个布尔值，该值指示输出项的路径是否应更新为绝对路径。</summary>
      <returns>如果输出项的路径应更新为绝对路径，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FormatUrl">
      <summary>将 URL 转换为正确的 URL 格式。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatUrl.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.FormatUrl" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatUrl.Execute">
      <summary>执行 <c>FormatUrl</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatUrl.InputUrl">
      <summary>获取或设置要格式化的 URL。</summary>
      <returns>要格式化的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatUrl.OutputUrl">
      <summary>获取或设置带有格式的 URL。</summary>
      <returns>带有格式的 URL。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.FormatVersion">
      <summary>将修订号追加到版本号。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.FormatVersion" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.FormatVersion.Execute">
      <summary>执行 <c>FormatVersion</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.FormatType">
      <summary>获取或设置格式类型。</summary>
      <returns>格式类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.OutputVersion">
      <summary>获取或设置包含修订版本号的输出版本。</summary>
      <returns>包含修订版本号的输出版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Revision">
      <summary>获取或设置要追加到该版本的修订版本。</summary>
      <returns>要追加到该版本的修订版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.FormatVersion.Version">
      <summary>获取或设置要进行格式化的版本号字符串。</summary>
      <returns>要进行格式化的版本号字符串。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateApplicationManifest">
      <summary>实现 <c>GenerateApplicationManifest</c> 任务。 使用项目文件中的 <c>GenerateApplicationManifest</c> 元素创建和执行此任务。 相关用法和参数信息，请参阅 GenerateApplicationManifest 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GenerateApplicationManifest" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ClrVersion">
      <summary>获取或设置应用程序需要的公共语言运行时 (CLR) 的最低版本。</summary>
      <returns>应用程序需要的 CLR 的最低版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ConfigFile">
      <summary>获取或设置包含应用程序配置文件的任务项。</summary>
      <returns>包含应用程序配置文件的任务项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Dependencies">
      <summary>获取或设置为生成的清单定义依赖程序集集合的项列表。</summary>
      <returns>依赖程序集名称的项列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ErrorReportUrl">
      <summary>获取或设置在 ClickOnce 安装期间对话框中显示的网页的 URL。</summary>
      <returns>一个字符串值，表示网页的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.FileAssociations">
      <summary>获取或设置与 ClickOnce 部署清单关联的一个或多个文件类型的列表。 文件关联只在面向 .NET Framework 3.5 或更高版本时才有效。</summary>
      <returns>与所生成清单关联的文件类型的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Files">
      <summary>获取或设置要包括在清单中的文件的完整路径。</summary>
      <returns>包含在清单中的文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.HostInBrowser">
      <summary>获取或设置应用程序是否承载于在浏览器中（与 WPF Web 浏览器应用程序一样）。</summary>
      <returns>一个布尔值，指示是否在浏览器中承载要部署的应用程序。如果是，则为 <see langword="true" />；否则为 <see langword="false" />。 <see langword="true" /> 值仅适用于 WPF Web 浏览器应用程序。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.IconFile">
      <summary>获取或设置应用程序的图标文件。</summary>
      <returns>要用于应用程序的图标文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.IsolatedComReferences">
      <summary>获取或设置要在生成清单中隔离的 COM 组件。</summary>
      <returns>要在生成清单中隔离的 COM 组件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.ManifestType">
      <summary>获取或设置要生成的清单类型。</summary>
      <returns>要生成的清单类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.OSVersion">
      <summary>获取或设置应用程序所要求的操作系统 (OS) 的最低版本。</summary>
      <returns>应用程序所要求的操作系统的最低版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product">
      <summary>指定项目文件中的 <c>ProductName</c> 属性。</summary>
      <returns>一个字符串值，对应于<c>ProductName</c>项目文件中的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher">
      <summary>指定项目文件中的 <c>PublisherName</c> 属性。</summary>
      <returns>一个字符串值，对应于<c>PublisherName</c>项目文件中的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.RequiresMinimumFramework35SP1">
      <summary>获取或设置应用程序是否需要 .NET Framework 3.5 SP1。</summary>
      <returns>如果应用程序需要 .NET Framework 3.5 SP1，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SuiteName">
      <summary>获取或设置在完成 ClickOnce 部署后，“开始”菜单上应用程序所在文件夹的名称。</summary>
      <returns>表示名称的字符串启动菜单文件夹。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl">
      <summary>指定项目文件中的 <c>SupportUrl</c> 属性。</summary>
      <returns>一个字符串值，对应于<c>SupportUrl</c>项目文件中的属性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkProfile">
      <summary>获取或设置目标框架配置文件。</summary>
      <returns>目标框架配置文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TargetFrameworkSubset">
      <summary>获取或设置要针对的 .NET Framework 子集的名称。</summary>
      <returns>此 .NET Framework 子集的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.TrustInfoFile">
      <summary>获取或设置指定应用程序安全性的 XML 文档。</summary>
      <returns>指定应用程序安全性的 XML 文档。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateApplicationManifest.UseApplicationTrust">
      <summary>指定是否将 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />、<see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" /> 和 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> 属性写入到应用程序清单中。</summary>
      <returns>一个布尔值，该值指示是否将 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Product" />、<see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.Publisher" /> 和 <see cref="P:Microsoft.Build.Tasks.GenerateApplicationManifest.SupportUrl" /> 属性写入应用程序清单，如果该值为 <see langword="true" />，则写入。 如果该值为 <see langword="false" />，则忽略这些属性。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateBootstrapper">
      <summary>实现 <c>GenerateBootstrapper</c> 任务。 使用项目文件中的 <c>GenerateBootstrapper</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 GenerateBootstrapper 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateBootstrapper.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GenerateBootstrapper" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationFile">
      <summary>获取或设置引导程序将用于在安装所有系统必备项后开始安装此应用程序的文件。</summary>
      <returns>引导程序将用于在安装所有系统必备项后开始安装此应用程序的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationName">
      <summary>获取或设置引导程序将安装的应用程序的名称。</summary>
      <returns>引导程序将安装的应用程序的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationRequiresElevation">
      <summary>获取或设置在目标计算机上安装组件时，该组件是否使用提升的权限运行。</summary>
      <returns>如果使用提升的权限运行已安装的组件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ApplicationUrl">
      <summary>获取或设置承载应用程序的安装程序的 Web 位置。</summary>
      <returns>承载应用程序的安装程序的 Web 位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperComponentFiles">
      <summary>获取或设置引导程序包文件的生成位置。</summary>
      <returns>引导程序包文件的生成位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperItems">
      <summary>获取或设置要置入引导程序中的产品。</summary>
      <returns>要置入引导程序中的产品。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.BootstrapperKeyFile">
      <summary>获取或设置 setup.exe 的生成位置。</summary>
      <returns>setup.exe 的生成位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsLocation">
      <summary>获取或设置一个位置，以供引导程序查找要安装的安装必备组件。</summary>
      <returns>供引导程序查找要安装的安装必备组件的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.ComponentsUrl">
      <summary>获取或设置包含安装必备组件的 URL。</summary>
      <returns>包含安装必备组件的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.CopyComponents">
      <summary>获取或设置一个布尔值，该值指示引导程序是否会将所有输出文件都复制到 <see cref="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath" /> 属性中指定的路径。</summary>
      <returns>如果引导程序应将所有输出文件都复制到 <see cref="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath" /> 属性中指定的路径，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Culture">
      <summary>获取或设置用于引导程序 UI 和安装必备组件的区域性。</summary>
      <returns>用于引导程序 UI 和安装必备组件的区域性。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateBootstrapper.Execute">
      <summary>执行 <c>GenerateBootstrapper</c> 任务。</summary>
      <returns>如果任务执行成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.FallbackCulture">
      <summary>获取或设置用于引导程序 UI 和安装必备组件的辅助区域性。</summary>
      <returns>用于引导程序 UI 和安装必备组件的辅助区域性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.OutputPath">
      <summary>获取或设置用于复制 setup.exe 和所有包文件的位置。</summary>
      <returns>用于复制 setup.exe 和所有包文件的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Path">
      <summary>获取或设置所有可用的系统必备包的位置。</summary>
      <returns>所有可用的系统必备包的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.SupportUrl">
      <summary>获取或设置要在引导程序安装失败时提供的 URL。</summary>
      <returns>要在引导程序安装失败时提供的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.Validate">
      <summary>获取或设置一个布尔值，该值指示引导程序是否将对指定输入的引导程序项执行 XSD 验证。</summary>
      <returns>如果引导程序对指定输入的引导程序项执行 XSD 验证，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateBootstrapper.VisualStudioVersion">
      <summary>Visual Studio 版本的形式为 &lt;major build.minor build&gt;，例如“4.0”。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateDeploymentManifest">
      <summary>实现 <c>GenerateDeploymentManifest</c> 任务。 使用项目文件中的 <c>GenerateDeploymentManifest</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 GenerateDeploymentManifest 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateDeploymentManifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GenerateDeploymentManifest" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.CreateDesktopShortcut">
      <summary>获取或设置在 ClickOnce 应用程序安装期间是否在桌面上创建图标。</summary>
      <returns>如果在安装期间在桌面上创建图标，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.DeploymentUrl">
      <summary>获取或设置应用程序的更新位置。</summary>
      <returns>应用程序的更新位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.DisallowUrlActivation">
      <summary>获取或设置一个布尔值，该值指示当通过 URL 打开应用程序时是否应该自动运行应用程序。</summary>
      <returns>
        <see langword="true" /> 如果应用程序只能从启动启动菜单; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.ErrorReportUrl">
      <summary>获取或设置在 ClickOnce 安装期间对话框中显示的网页的 URL。</summary>
      <returns>一个字符串，表示网页的 URL。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Install">
      <summary>获取或设置一个布尔值，该值指示应用程序是已安装应用程序还是仅联机应用程序。</summary>
      <returns>
        <see langword="true" /> 如果应用程序安装在本地计算机上，并且可以通过使用移除添加或删除程序对话框;<see langword="false" />如果应用程序是用于在网页上联机使用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.MapFileExtensions">
      <summary>获取或设置一个布尔值，该值指示是否使用 .deploy 文件扩展名映射。</summary>
      <returns>如果每个程序文件都是通过 .deploy 文件扩展名发布的，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.MinimumRequiredVersion">
      <summary>获取或设置一个布尔值，该值指示用户是否可跳过更新。</summary>
      <returns>如果用户可跳过更新，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Product">
      <summary>获取或设置应用程序的名称。</summary>
      <returns>应用程序的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.Publisher">
      <summary>获取或设置应用程序的发布者。</summary>
      <returns>应用程序的发布者。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.SuiteName">
      <summary>获取或设置在完成 ClickOnce 部署后，“开始”菜单上应用程序所在文件夹的名称。</summary>
      <returns>表示名称的字符串启动菜单文件夹。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.SupportUrl">
      <summary>获取或设置在应用程序的“卸载或更改程序”对话框中显示的链接。 指定的值应为完全限定的 URL 或 UNC 路径。</summary>
      <returns>在显示的链接卸载或更改程序应用程序对话框。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.TrustUrlParameters">
      <summary>获取或设置一个布尔值，该值指示是否应使 URL 查询字符串参数对应用程序可用。</summary>
      <returns>如果应使 URL 查询字符串参数对应用程序可用，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateEnabled">
      <summary>获取或设置一个布尔值，该值指示是否为更新启用应用程序。</summary>
      <returns>如果为更新启用应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval">
      <summary>获取或设置应用程序的更新间隔。</summary>
      <returns>应用程序的更新间隔。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateMode">
      <summary>获取或设置一个布尔值，该值指示是否应检查更新。 可在应用程序启动前（在前台）、或在应用程序运行时（在后台）检查更新。</summary>
      <returns>若应检查更新，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateUnit">
      <summary>获取或设置 <see cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval" /> 属性的时间单位。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.GenerateDeploymentManifest.UpdateInterval" /> 属性的时间单位。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateManifestBase">
      <summary>表示所有清单生成任务的基类。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GenerateManifestBase" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>基于指定的项，将程序集引用添加到清单。</summary>
      <param name="item">从其创建要添加到清单的程序集引用的项。</param>
      <returns>添加到清单中的程序集引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)">
      <summary>根据指定项和程序集引用类型，向清单添加程序集引用。</summary>
      <param name="item">从其创建要添加到清单的程序集引用的项。</param>
      <param name="referenceType">程序集引用类型。</param>
      <returns>添加到清单中的程序集引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)">
      <summary>根据指定项和程序集引用类型，向清单添加入口点引用。</summary>
      <param name="item">创建要添加到清单中的入口点所依据的项。</param>
      <param name="referenceType">入口点程序集引用类型。</param>
      <returns>已添加到清单中的入口点引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>基于指定项向清单中添加文件引用。</summary>
      <param name="item">创建要添加到清单中的文件引用所依据的项。</param>
      <returns>已添加到清单中的文件引用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.AssemblyName">
      <summary>获取或设置程序集的名称。</summary>
      <returns>程序集的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.AssemblyVersion">
      <summary>获取或设置程序集版本。</summary>
      <returns>程序集版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.Description">
      <summary>获取或设置清单说明文本。</summary>
      <returns>清单说明文本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.EntryPoint">
      <summary>获取或设置作为清单入口点的托管程序集或 ClickOnce 清单引用。</summary>
      <returns>作为应用程序入口点的托管程序集或 ClickOnce 清单引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.Execute">
      <summary>执行 <c>GenerateManifestBase</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>返回与指定项匹配的清单文件引用。</summary>
      <param name="item">要为其获取文件引用的项。</param>
      <returns>与指定项匹配的清单文件引用。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.GetObjectType">
      <summary>在派生类中实现时，返回清单的类型。</summary>
      <returns>清单类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.InputManifest">
      <summary>获取或设置输入清单。</summary>
      <returns>输入清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.MaxTargetPath">
      <summary>获取或设置清单文件名最大长度。</summary>
      <returns>清单文件名最大长度。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.OnManifestLoaded(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>当在派生类中实现时，设置清单属性和所有依赖项。</summary>
      <param name="manifest">要设置其属性的清单。</param>
      <returns>若在设置清单属性时未发生错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.OnManifestResolved(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
      <summary>在派生类中实现时，设置已解析的清单属性。</summary>
      <param name="manifest">要设置其属性的清单。</param>
      <returns>若在设置清单属性时未发生错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.OutputManifest">
      <summary>获取或设置所生成的清单。</summary>
      <returns>生成的清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.Platform">
      <summary>获取或设置清单平台。</summary>
      <returns>清单平台。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetCulture">
      <summary>获取或设置清单目标区域性代码。</summary>
      <returns>清单目标区域性代码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkMoniker">
      <summary>获取或设置目标框架名字对象。</summary>
      <returns>目标框架名字对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateManifestBase.TargetFrameworkVersion">
      <summary>项目的目标 .NET Framework 版本。</summary>
      <returns>一个表示 .NET Framework 版本的字符串。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.ValidateInputs">
      <summary>验证 <c>GenerateManifestBase</c> 任务的输入。</summary>
      <returns>如果输入验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.ValidateOutput">
      <summary>验证生成的清单。</summary>
      <returns>如果清单验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateResource">
      <summary>实现 <c>GenerateResource</c> 任务。 使用项目文件中的 <c>GenerateResource</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 GenerateResource 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GenerateResource" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.AdditionalInputs">
      <summary>获取或设置 <c>GenerateResource</c> 任务执行的依赖项检查的其他输入信息。</summary>
      <returns>依赖项检查的其他输入<c>GenerateResource</c>任务执行。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.EnvironmentVariables">
      <summary>获取或设置除了（或者有选择地重写）常规的环境块之外，应传递到生成的 resgen.exe 的环境变量名称-值对的数组。</summary>
      <returns>环境变量的名称-值对的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.ExcludedInputPaths">
      <summary>获取或设置项的数组，这些项指定最新检查期间将从其忽略跟踪输入的路径。</summary>
      <returns>指定最新检查期间将从中忽略跟踪的输入的路径的项的数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateResource.Execute">
      <summary>执行 <c>GenerateResource</c> 任务。</summary>
      <returns>如果 <c>GenerateResource</c> 任务执行成功，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.ExecuteAsTool">
      <summary>允许 ResolveComReferences 的多目标功能的属性：如果为 true，则将从进程外运行适当目标框架中的 tlbimp.exe 和 aximp.exe 以生成所需的包装器程序集。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.ExtractResWFiles">
      <summary>获取或设置一个值，该值指定该规则是否生成 .resources 文件或从程序集提取 .ResW 文件。</summary>
      <returns>表示的标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.FilesWritten">
      <summary>获取或设置写入磁盘的所有文件的名称（如存在），包括缓存文件。</summary>
      <returns>写入磁盘的所有文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.MinimalRebuildFromTracking">
      <summary>获取或设置一个值，该值指示是否将使用跟踪的增量生成。</summary>
      <returns>
        <see langword="true" /> 如果启用了增量生成;<see langword="false" />如果将强制重新生成。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.NeverLockTypeAssemblies">
      <summary>获取或设置一个布尔值，该值指定是创建新的 <see cref="T:System.AppDomain" /> 来计算资源 (.resx) 文件 (<see langword="true" />) 还是仅当资源文件引用用户的程序集时才创建新的 <see cref="T:System.AppDomain" /> (<see langword="false" />)。</summary>
      <returns>
        <see langword="true" /> 如果<c>GenerateResource</c>任务应创建一个新<see cref="T:System.AppDomain" />来计算资源 (.resx) 文件中;<see langword="false" />如果<c>GenerateResource</c>任务应创建一个新<see cref="T:System.AppDomain" />仅当资源 (.resx) 文件引用用户的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.OutputDirectory">
      <summary>获取或设置指定提取 .ResW 文件的位置的值。</summary>
      <returns>指定从中提取的值。ResW 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.OutputResources">
      <summary>获取或设置生成的文件（如 .resources 文件）的名称。</summary>
      <returns>生成的文件（如 .resources 文件）的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.PublicClass">
      <summary>获取或设置一个布尔值，该值指示 <c>GenerateResource</c> 任务是否应该将强类型资源类创建成公共类。</summary>
      <returns>
        <see langword="true" /> 如果<c>GenerateResource</c>任务应将强类型的资源类创建成公共类; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.References">
      <summary>获取或设置要从中加载 .resx 文件中的类型的引用。</summary>
      <returns>要从中加载 .resx 文件中的类型的引用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.SdkToolsPath">
      <summary>即使生成资源任务将在进程中进行处理，也将会生成日志消息。 此日志消息将包含 Windows SDK 的路径。 由于目标此时将在 Windows SDK 路径中传递，因此我们将使用它来进行日志记录。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.Sources">
      <summary>获取或设置要转换的项。</summary>
      <returns>要转换的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StateFile">
      <summary>获取或设置一个可选缓存文件的路径，该文件用于加快对 .resx 输入文件中的链接的依赖项检查。</summary>
      <returns>一个可选缓存文件的路径，该文件用于加快对 .resx 输入文件中的链接的依赖项检查。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedClassName">
      <summary>获取或设置强类型资源类的类名。</summary>
      <returns>强类型资源类的类名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedFileName">
      <summary>获取或设置源文件的文件名。</summary>
      <returns>源文件的文件名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedLanguage">
      <summary>获取或设置在为强类型资源生成类源时要使用的语言。</summary>
      <returns>在为强类型资源生成类源时要使用的语言。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedManifestPrefix">
      <summary>获取或设置要在为强类型资源生成的类源中使用的资源命名空间或清单前缀。</summary>
      <returns>要在为强类型资源生成的类源中使用的资源命名空间或清单前缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.StronglyTypedNamespace">
      <summary>获取或设置要用于强类型资源的生成类源的命名空间。</summary>
      <returns>要用于强类型资源的生成类源的命名空间。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TLogReadFiles">
      <summary>获取表示读取跟踪日志的项的数组。</summary>
      <returns>表示读取跟踪日志项的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TLogWriteFiles">
      <summary>获取表示写入跟踪日志的项的数组。</summary>
      <returns>表示写入跟踪日志项的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.ToolArchitecture">
      <summary>ResGen.exe 的 Microsoft.Build.Utilities.ExecutableType。 用于确定是否需要使用 Tracker.exe 来生成 ResGen.exe。 如果为空，则使用启发方法来确定默认体系结构。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TrackerFrameworkPath">
      <summary>包含 FileTracker.dll 的相应 .NET Framework 位置的路径。 如果设置此参数，则用户应负责确保其传递的 FileTracker.dll 的位数与其要使用的 ResGen.exe 的位数相匹配。 如果未设置，则任务会基于当前的 .NET Framework 版本决定合适的位置。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TrackerLogDirectory">
      <summary>获取或设置中间目录，将在该目录中放置运行此任务的跟踪日志。</summary>
      <returns>运行此任务的跟踪日志将放置中间目录。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TrackerSdkPath">
      <summary>包含 Tracker.exe 的相应 Windows SDK 位置的路径。 如果设置此参数，则用户应负责确保其传递的 Tracker.exe 的位数与其要使用的 ResGen.exe 的位数相匹配。 如果未设置，则任务会基于当前的 Windows SDK 决定合适的位置。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.TrackFileAccess">
      <summary>获取或设置一个值，该值指示是否应跟踪文件访问模式。</summary>
      <returns>
        <see langword="true" /> 如果应跟踪文件访问模式;，否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateResource.UseSourcePath">
      <summary>获取或设置一个布尔值，该值指示是否要使用输入文件的目录来解析相对文件路径。</summary>
      <returns>如果要使用输入文件的目录来解析相对文件路径，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GenerateTrustInfo">
      <summary>从基本清单以及从 <see cref="P:Microsoft.Build.Tasks.GenerateTrustInfo.TargetZone" /> 和 <see cref="P:Microsoft.Build.Tasks.GenerateTrustInfo.ExcludedPermissions" /> 属性生成应用程序信任。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateTrustInfo.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GenerateTrustInfo" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.ApplicationDependencies">
      <summary>获取或设置依赖程序集。</summary>
      <returns>依赖程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.BaseManifest">
      <summary>获取或设置要从中生成应用程序信任的基本清单。</summary>
      <returns>要从中生成应用程序信任的基本清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.ExcludedPermissions">
      <summary>获取或设置一个或多个要从区域默认权限集中排除的权限标识值（这些值由分号分隔）。</summary>
      <returns>要从区域默认权限集中排除的权限标识值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GenerateTrustInfo.Execute">
      <summary>执行 <c>GenerateTrustInfo</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.TargetFrameworkMoniker">
      <summary>获取或设置目标框架名字对象。</summary>
      <returns>目标框架名字对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.TargetZone">
      <summary>获取或设置区域默认权限集，该权限集是从计算机策略中获取的。</summary>
      <returns>区域默认权限集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GenerateTrustInfo.TrustInfoFile">
      <summary>获取或设置包含应用程序安全信任信息的文件。</summary>
      <returns>包含应用程序安全信任信息的文件。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetAssemblyIdentity">
      <summary>实现 <c>GetAssemblyIdentity</c> 任务。 使用项目文件中的 <c>GetAssemblyIdentity</c> 元素创建和执行此任务。 有关用法和参数的信息，请参阅 GetAssemblyIdentity 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GetAssemblyIdentity" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.Assemblies">
      <summary>获取或设置检索到的程序集标识。</summary>
      <returns>检索到的程序集标识。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetAssemblyIdentity.AssemblyFiles">
      <summary>获取或设置要从中检索标识的文件。</summary>
      <returns>要从中检索标识的文件。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.Execute">
      <summary>执行 <c>GetAssemblyIdentity</c> 任务。</summary>
      <returns>如果 <c>GetAssemblyIdentity</c> 任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetFrameworkPath">
      <summary>实现 <c>GetFrameworkPath</c> 任务。 使用项目文件中的 <c>GetFrameworkPath</c> 元素创建和执行此任务。 有关用法和参数的信息，请参阅 GetFrameworkPath 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkPath.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GetFrameworkPath" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkPath.Execute">
      <summary>在所有情况下均返回 <see langword="true" />。</summary>
      <returns>在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion11Path">
      <summary>获取或设置包含 .NET Framework 1.1 程序集的文件夹的路径。</summary>
      <returns>包含的文件夹的路径.NET Framework1.1 程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion20Path">
      <summary>获取或设置包含 .NET Framework 2.0 程序集的文件夹的路径。</summary>
      <returns>包含的文件夹的路径.NET Framework2.0 程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion30Path">
      <summary>获取或设置包含 .NET Framework 3.0 程序集的文件夹的路径。</summary>
      <returns>包含的文件夹的路径.NET Framework3.0 程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion35Path">
      <summary>获取或设置包含 .NET Framework 3.5 程序集的文件夹的路径。</summary>
      <returns>包含的文件夹的路径.NET Framework3.5 程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion40Path">
      <summary>指向 v4.0 框架的路径（如果有）</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.FrameworkVersion45Path">
      <summary>指向 v4.5 框架的路径（如果有）</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkPath.Path">
      <summary>获取或设置包含 .NET Framework 程序集最新版本的文件夹的路径。</summary>
      <returns>包含 .NET Framework 程序集最新版本的文件夹的路径。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetFrameworkSdkPath">
      <summary>实现 <c>GetFrameworkSdkPath</c> 任务。 使用项目文件中的 <c>GetFrameworkSdkPath</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 GetFrameworkSdkPath 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkSdkPath.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.GetFrameworkSdkPath" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetFrameworkSdkPath.Execute">
      <summary>在所有情况下均返回 <see langword="true" />。</summary>
      <returns>在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion20Path">
      <summary>获取或设置到 .NET Framework 2.0 SDK 的路径。</summary>
      <returns>指向 .NET Framework 2.0 SDK 的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion35Path">
      <summary>获取或设置到 .NET Framework 3.5 SDK 的路径。</summary>
      <returns>到 .NET Framework 3.5 SDK 的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion40Path">
      <summary>如果找到 v4.0 .NET SDK，则为指向它的路径。 如果找不到 SDK，则为 String.Empty。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.FrameworkSdkVersion45Path">
      <summary>如果找到 v4.5 .NET SDK，则为指向它的路径。 如果找不到 SDK，则为 String.Empty。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetFrameworkSdkPath.Path">
      <summary>获取或设置指向最新版本的 .NET Framework SDK的路径。</summary>
      <returns>指向 .NET Framework SDK 的最新版本的路径。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetInstalledSDKLocations">
      <summary>在注册表项中和磁盘上收集安装的 SDK 列表，把其输出到项目中，当 SDK 引用解析和 RAR 期间，就可以在单文件中使用它们。  
如果“v”显示在它的名称中，GetInstalledSDKLocations 不会识别版本文件夹。  例如，位于 C:\Windows\Program Files\Microsoft SDKs\Windows\8.0\SDKFolders\3rdPartySDK\2.5\ 路径的 SDK 将被正确定位。 但是，位于 C:\Windows\Program Files\Microsoft SDKs\Windows\8.0\SDKFolders\3rdPartySDK\v2.5\ 的相同的 SDK 找不到或将被忽略。 如果忽略 SDK，则在此日志不会记录该故障，并且不会引发错误。  
V版本文件夹名称需构成 major.minor[.build[.revision]]。 有关详情，请参阅<see cref="M:System.Version.TryParse(System.String,System.Version@)" />。  
若要查看具有特定版本的 SDK，则查找的版本必须与请求的版本相匹配。 例如，如果 SDK 有个文件夹版本名称为 8.0.0，而客户请求的 SDK 版本是 8.0，两者不匹配，SDK 不会被发现。  
有关版本匹配的更多信息，请参见<see cref="M:System.Version.CompareTo(System.Version)" />。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetInstalledSDKLocations.#ctor">
      <summary>创建 GetInstalledSDKLocations 的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetInstalledSDKLocations.Execute">
      <summary>获取 SDK。</summary>
      <returns>如果该方法成功，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetInstalledSDKLocations.InstalledSDKs">
      <summary>表示所有在 SDKDirectory 和 SDKRegistry 根找到的已安装 SDK 的项的获取或设置。  
项规范是 SDK 安装位置。 具有称为包含 SDK 的名称 SDKName 的元数据片断。</summary>
      <returns>找到 Sdk 安装的所有组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKDirectoryRoots">
      <summary>获取或设置在磁盘上查找 SDK 的根目录。</summary>
      <returns>根目录。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetInstalledSDKLocations.SDKRegistryRoot">
      <summary>获取或设置从中查找 SDK 的根注册表根。</summary>
      <returns>注册表根。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformIdentifier">
      <summary>获取目标平台标识符。</summary>
      <returns>目标平台标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetInstalledSDKLocations.TargetPlatformVersion">
      <summary>获取目标平台版本。</summary>
      <returns>目标平台版本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetReferenceAssemblyPaths">
      <summary>返回指向各种框架的引用程序集路径。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.#ctor">
      <summary>创建 GetReferenceAssemblyPaths 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.BypassFrameworkInstallChecks">
      <summary>获取或设置一个开关，该开关指定 GetReferenceAssemblyPaths 是否执行简单检查以确保根据目标框架安装了某些运行时框架。</summary>
      <returns>
        <see langword="true" /> 如果 GetReferenceAssemblyPaths 不应执行这些简单检查;否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.Execute">
      <summary>如果设置了目标框架名字对象，则会生成正确的路径。</summary>
      <returns>如果路径已生成，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.FullFrameworkReferenceAssemblyPaths">
      <summary>基于传入的 TargetFrameworkMoniker 获取路径，而无需考虑名字对象的配置文件部分。</summary>
      <returns>基于传入的 TargetFrameworkMoniker 而无需考虑名字对象的配置文件部分路径。 如果 TargetFrameworkMoniker 为<see langword="null" />或为空，任何路径将返回。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.ReferenceAssemblyPaths">
      <summary>返回基于传入的 TargetFrameworkMoniker 的路径。 如果 TargetFrameworkMoniker 为 null 或为空，则该路径将为 null 或为空。</summary>
      <returns>路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.RootPath">
      <summary>用于生成引用程序集路径的根路径</summary>
      <returns>根路径中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMoniker">
      <summary>要为其获取引用程序集路径的目标框架名字对象</summary>
      <returns>框架名字对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.TargetFrameworkMonikerDisplayName">
      <summary>获取或设置目标框架名字对象的显示名称。</summary>
      <returns>目标框架名字对象显示名称。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.GetSDKReferenceFiles">
      <summary>将 SDKReference 解析为磁盘上的完整路径</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetSDKReferenceFiles.#ctor">
      <summary>创建 GetSDKReferenceFiles 的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.CacheFileFolderPath">
      <summary>获取或设置缓存文件存储所在的路径。</summary>
      <returns>返回缓存文件文件夹路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.CopyLocalFiles">
      <summary>需要本机复制的文件。 这些是引用程序集和 xml intellisense 文件。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.GetSDKReferenceFiles.Execute">
      <summary>执行此任务</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogCacheFileExceptions">
      <summary>获取或设置一个标志，此标志指示是否记录缓存文件读取或写入异常。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictBetweenSDKsAsWarning">
      <summary>获取或设置一个标志，此标志指定是否将跨不同引用 SDK 的 <see langword="redist" /> 文件之间的冲突记录为消息或警告。 默认为 <see langword="true" />，将其记录为警告。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistConflictWithinSDKAsWarning">
      <summary>获取或设置一个标志，此标志指定是否将 SDK 内的引用文件之间的冲突记录为消息或警告。 默认为 <see langword="false" />，将其记录为消息。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogRedistFilesList">
      <summary>获取或设置一个标志，此标志指定是否记录作为解析 SDK 的一部分找到的 <see langword="redist" /> 文件。 默认为 <see langword="true" />，记录 <see langword="redist" /> 文件。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictBetweenSDKsAsWarning">
      <summary>获取或设置一个标志，此标志指定是否将跨不同引用 SDK 的引用文件之间的冲突记录为消息或警告。 默认为 <see langword="true" />，将其记录为警告。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferenceConflictWithinSDKAsWarning">
      <summary>获取或设置一个标志，此标志指定是否将跨不同引用 SDK 的引用文件之间的冲突记录为消息或警告。 默认为 <see langword="false" />，将其记录为消息。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.LogReferencesList">
      <summary>获取或设置一个标志，此标志指定是否记录作为解析 SDK 的一部分找到的引用文件。 默认为 <see langword="true" />，记录引用。</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.RedistFiles">
      <summary>获取已解析 <see langword="redist" /> 文件。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.ReferenceExtensions">
      <summary>应被看做是引用文件的扩展。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.References">
      <summary>已解析的引用项。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.GetSDKReferenceFiles.ResolvedSDKReferences">
      <summary>解决我们将从中获取引用程序集的 SDK 引用。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject">
      <summary>定义使 Csc 任务可以与主机集成开发环境 (IDE) 进行通信的接口。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.BeginInitialization">
      <summary>开始 <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> 的初始化。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.Compile">
      <summary>编译该项目。</summary>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.EndInitialization(System.String@,System.Int32@)">
      <summary>结束使用指定的错误消息和代码对 <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> 进行的初始化。</summary>
      <param name="errorMessage">错误消息。</param>
      <param name="errorCode">错误代码。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsDesignTime">
      <summary>返回一个值，该值指示集成开发环境 (IDE) 当前是否处于设计时模式。</summary>
      <returns>如果 IDE 目前处于设计时模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsUpToDate">
      <summary>返回一个值，它指示编译后的项目是否为最新。</summary>
      <returns>如果编译后的项目是最新的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAdditionalLibPaths(System.String[])">
      <summary>指定要在其中搜索引用的其他目录。</summary>
      <param name="additionalLibPaths">要在其中搜索引用的目录的数组。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAddModules(System.String[])">
      <summary>指定将构成程序集一部分的一个或多个模块。</summary>
      <param name="addModules">将构成程序集一部分的模块的数组。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAllowUnsafeBlocks(System.Boolean)">
      <summary>指定一个值，该值指示是否允许使用 <see langword="unsafe" /> 关键字进行编译的代码存在。</summary>
      <param name="allowUnsafeBlocks">如果允许使用 unsafe 关键字进行编译的代码存在，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetBaseAddress(System.String)">
      <summary>指定要加载 DLL 的首选基址。</summary>
      <param name="baseAddress">加载 DLL 的首选基址。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCheckForOverflowUnderflow(System.Boolean)">
      <summary>指定溢出数据类型边界的整数算法是否将导致运行时异常。</summary>
      <param name="checkForOverflowUnderflow">若要在整数算术溢出数据类型边界时引发异常则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCodePage(System.Int32)">
      <summary>指定要用于编译中所有源代码文件的代码页。</summary>
      <param name="codePage">要用于编译中所有源代码文件的代码页。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDebugType(System.String)">
      <summary>指定调试类型。</summary>
      <param name="debugType">调试类型，可为 <see langword="full" /> 或 <see langword="pdbonly" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDefineConstants(System.String)">
      <summary>指定要定义的预处理器符号。</summary>
      <param name="defineConstants">要定义的预处理器符号。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDelaySign(System.Boolean,System.Boolean)">
      <summary>指定一个值，该值指示是否创建一个完全签名的程序集。</summary>
      <param name="delaySignExplicitlySet">如果 <see langword="DelaySign" /> 参数是显式设置的，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="delaySign">如果要创建完全签名的程序集，则为 <see langword="true" />；如果只想要将公钥置于程序集中，则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDisabledWarnings(System.String)">
      <summary>指定要禁用的警告的列表。</summary>
      <param name="disabledWarnings">要禁用的警告的列表。 多个警告之间用逗号分隔。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDocumentationFile(System.String)">
      <summary>指定要保存已处理的文档注释的 XML 文件。</summary>
      <param name="documentationFile">一个字符串，它包含要保存已处理的文档注释的文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetEmitDebugInformation(System.Boolean)">
      <summary>指定一个值，它指示是否生成调试信息以及是否将它放在程序数据库 (pdb) 文件中。</summary>
      <param name="emitDebugInformation">若要生成调试信息并将它放在 .pdb 文件中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetErrorReport(System.String)">
      <summary>指定一个值，该值指示如何将内部编译器错误报告给 Microsoft。</summary>
      <param name="errorReport">指定如何将内部编译器错误报告给 Microsoft 的值。 此值可为 <see langword="prompt" />、<see langword="send" /> 或 <see langword="none" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetFileAlignment(System.Int32)">
      <summary>指定输出文件中各节的大小。</summary>
      <param name="fileAlignment">输出文件中各节的大小。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetGenerateFullPaths(System.Boolean)">
      <summary>指定一个值，该值表示是否在编译器输出中指定文件的绝对路径。</summary>
      <param name="generateFullPaths">如果在编译器输出中指定文件的绝对路径，则为 <see langword="true" />；如果仅在编译器输出中指定文件的名称，则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyContainer(System.String)">
      <summary>指定加密密钥容器的名称。</summary>
      <param name="keyContainer">加密密钥容器的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyFile(System.String)">
      <summary>指定含有加密密钥的文件名。</summary>
      <param name="keyFile">含有加密密钥的文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLangVersion(System.String)">
      <summary>指定要使用的语言版本。</summary>
      <param name="langVersion">要使用的语言版本。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>创建指向输出文件中指定的 .NET Framework 资源的链接；资源文件不在输出文件中。</summary>
      <param name="linkResources">要链接到输出文件的 .NET Framework 资源。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetMainEntryPoint(System.String,System.String)">
      <summary>指定 Main <c></c>方法的位置。</summary>
      <param name="targetType">输出文件的文件格式。 此值可以为 <see langword="library" />、<see langword="exe" />、<see langword="module" /> 或 <see langword="winexe" />。</param>
      <param name="mainEntryPoint">
        <see langword="Main" /> 方法的位置。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetModuleAssemblyName(System.String)">
      <summary>指定一个程序集，.netmodule 可以访问其非公共类型。</summary>
      <param name="moduleAssemblyName">一个程序集，.netmodule 可以访问其非公共类型。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoConfig(System.Boolean)">
      <summary>指定一个值，该值指示是否阻止编译器使用 csc.rsp 文件进行编译。</summary>
      <param name="noConfig">若要阻止编译器使用 csc.rsp 文件进行编译则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoStandardLib(System.Boolean)">
      <summary>指定一个值，该值指示是否阻止导入 mscorlib.dll。</summary>
      <param name="noStandardLib">如果阻止导入 mscorlib.dll，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOptimize(System.Boolean)">
      <summary>指定一个指示是否启用优化的值。</summary>
      <param name="optimize">若要启用优化，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOutputAssembly(System.String)">
      <summary>指定输出文件的名称。</summary>
      <param name="outputAssembly">输出文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPdbFile(System.String)">
      <summary>指定要在其中放置生成的调试信息的程序数据库 (.pdb) 文件。</summary>
      <param name="pdbFile">要在其中放置生成的调试信息的 .pdb 文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPlatform(System.String)">
      <summary>指定将作为输出文件目标的处理器平台。</summary>
      <param name="platform">将作为输出文件目标的处理器平台。 此值可为 <see langword="x86" />、<see langword="x64" /> 或 <see langword="anycpu" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定要从中将公共类型信息导入到当前项目的项。</summary>
      <param name="references">要从中将公共类型信息导入到当前项目的项。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定要嵌入到输出文件中的 .NET Framework 资源。</summary>
      <param name="resources">要嵌入到输出文件的 .NET Framework 资源。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定包含编译器的命令的响应文件。</summary>
      <param name="responseFiles">包含编译器的命令的响应文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定一个或多个 Visual C# 源文件。</summary>
      <param name="sources">一个或多个 Visual C# 源文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTargetType(System.String)">
      <summary>指定输出文件的文件格式。</summary>
      <param name="targetType">输出文件的文件格式。 此值可以为 <see langword="library" />、<see langword="exe" />、<see langword="module" /> 或 <see langword="winexe" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTreatWarningsAsErrors(System.Boolean)">
      <summary>指定一个值，该值指示是否将所有警告视为错误。</summary>
      <param name="treatWarningsAsErrors">如果将所有警告视为错误，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningLevel(System.Int32)">
      <summary>指定警告级别，值在 0 到 4 之间。</summary>
      <param name="warningLevel">警告级别，值在 0 到 4 之间。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsAsErrors(System.String)">
      <summary>指定将被视为错误的警告的列表。</summary>
      <param name="warningsAsErrors">将被视为错误的警告的列表。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsNotAsErrors(System.String)">
      <summary>指定不被视为错误的警告的列表。</summary>
      <param name="warningsNotAsErrors">不被视为错误的警告的列表。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Icon(System.String)">
      <summary>指定要插入到程序集的 .ico 文件。</summary>
      <param name="win32Icon">要插入到程序集的 .ico 文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Resource(System.String)">
      <summary>指定要插入输出文件的 Win32 资源 (.res) 文件。</summary>
      <param name="win32Resource">要插入输出文件的 Win32 资源 (.res) 文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject2">
      <summary>定义使 Csc 任务可以与主机集成开发环境 (IDE) 进行通信的接口。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject2.SetWin32Manifest(System.String)">
      <summary>指定要插入到程序集中的清单文件。</summary>
      <param name="win32Manifest">要插入到程序集中的清单的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject3">
      <summary>表示 Csc 宿主编译器。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject3.SetApplicationConfiguration(System.String)">
      <summary>设置应用程序配置。</summary>
      <param name="applicationConfiguration">应用程序配置。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.ICscHostObject4">
      <summary>表示 Csc 宿主编译器。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetHighEntropyVA(System.Boolean)">
      <summary>按照说明，设置 <c>/highentropyva</c> 值。</summary>
      <param name="highEntropyVA">如果将 <c>/highentropyva</c> 设置为指示支持高熵地址空间布局随机化 (ASLR)，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns>如果该方法成功，则返回 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetPlatformWith32BitPreference(System.String)">
      <summary>将 <c>/platform</c> 值设置为 <see langword="AnyCPU32BitPreferred" />。</summary>
      <param name="platformWith32BitPreference">如果将 <c>/platform</c> 值设置为 <see langword="AnyCPU32BitPreferred" />，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果方法成功，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetSubsystemVersion(System.String)">
      <summary>设置指定的子系统版本标志。</summary>
      <param name="subsystemVersion">子系统版本。</param>
      <returns>如果该方法成功，则返回<see langword="true" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject">
      <summary>定义一个接口，它使 Vbc 任务可以与主机集成开发环境 (IDE) 进行通信。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.BeginInitialization">
      <summary>开始 <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" /> 的初始化。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.Compile">
      <summary>编译该项目。</summary>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.EndInitialization">
      <summary>
        <see cref="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject" /> 的初始化已结束。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsDesignTime">
      <summary>返回一个值，该值指示集成开发环境 (IDE) 当前是否处于设计时模式。</summary>
      <returns>如果 IDE 目前处于设计时模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.IsUpToDate">
      <summary>返回一个值，它指示编译后的项目是否为最新。</summary>
      <returns>如果编译后的项目是最新的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAdditionalLibPaths(System.String[])">
      <summary>指定要在其中搜索引用的其他目录。</summary>
      <param name="additionalLibPaths">要在其中搜索引用的目录的数组。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetAddModules(System.String[])">
      <summary>指定将构成程序集一部分的一个或多个模块。</summary>
      <param name="addModules">将构成程序集一部分的模块的数组。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetBaseAddress(System.String,System.String)">
      <summary>指定要加载 DLL 的首选基址。</summary>
      <param name="targetType">输出文件的文件格式。 此值可以为 <see langword="library" />、<see langword="exe" />、<see langword="module" /> 或 <see langword="winexe" />。</param>
      <param name="baseAddress">加载 DLL 的首选基址。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetCodePage(System.Int32)">
      <summary>指定要用于编译中所有源代码文件的代码页。</summary>
      <param name="codePage">要用于编译中所有源代码文件的代码页。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDebugType(System.Boolean,System.String)">
      <summary>指定调试类型。</summary>
      <param name="emitDebugInformation">若要生成调试信息并将它放置在程序数据库 (pdb) 文件中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="debugType">调试类型，可为 <see langword="full" /> 或 <see langword="pdbonly" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDefineConstants(System.String)">
      <summary>指定要定义的预处理器符号。</summary>
      <param name="defineConstants">要定义的预处理器符号。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDelaySign(System.Boolean)">
      <summary>指定一个值，该值指示是否创建一个完全签名的程序集。</summary>
      <param name="delaySign">如果要创建完全签名的程序集，则为 <see langword="true" />；如果只想要将公钥置于程序集中，则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDisabledWarnings(System.String)">
      <summary>指定要禁用的警告的列表。</summary>
      <param name="disabledWarnings">要禁用的警告的列表。 多个警告之间用逗号分隔。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetDocumentationFile(System.String)">
      <summary>指定要保存已处理的文档注释的 XML 文件。</summary>
      <param name="documentationFile">一个字符串，它包含要保存已处理的文档注释的文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetErrorReport(System.String)">
      <summary>指定一个值，该值指示如何将内部编译器错误报告给 Microsoft。</summary>
      <param name="errorReport">指定如何将内部编译器错误报告给 Microsoft 的值。 此值可为 <see langword="prompt" />、<see langword="send" /> 或 <see langword="none" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetFileAlignment(System.Int32)">
      <summary>指定输出文件中各节的大小。</summary>
      <param name="fileAlignment">输出文件中各节的大小。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetGenerateDocumentation(System.Boolean)">
      <summary>指定一个值，该值指示是否生成文档并将其放入 XML 文件中，此 XML 文件使用编译器正在创建的可执行文件或库的名称来命名。</summary>
      <param name="generateDocumentation">如果生成文档文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetImports(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定要导入的命名空间。</summary>
      <param name="importsList">要导入的命名空间。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyContainer(System.String)">
      <summary>指定加密密钥容器的名称。</summary>
      <param name="keyContainer">加密密钥容器的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetKeyFile(System.String)">
      <summary>指定含有加密密钥的文件名。</summary>
      <param name="keyFile">含有加密密钥的文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>创建指向输出文件中指定的 .NET Framework 资源的链接；资源文件不在输出文件中。</summary>
      <param name="linkResources">要链接到输出文件的 .NET Framework 资源。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetMainEntryPoint(System.String)">
      <summary>指定包含 <c>Sub Main</c> 过程的位置的类或模块。</summary>
      <param name="mainEntryPoint">包含 <see langword="Sub Main" /> 过程的类或模块。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoConfig(System.Boolean)">
      <summary>指定一个值，该值指示是否阻止编译器使用 vbc.rsp 文件进行编译。</summary>
      <param name="noConfig">如果阻止编译器使用 vbc.rsp 文件进行编译，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoStandardLib(System.Boolean)">
      <summary>指定一个值，该值指示是否阻止导入 mscorlib.dll。</summary>
      <param name="noStandardLib">如果阻止导入 mscorlib.dll，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetNoWarnings(System.Boolean)">
      <summary>指定一个值，该值指示编译器是否禁止所有警告。</summary>
      <param name="noWarnings">禁止显示所有警告，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptimize(System.Boolean)">
      <summary>指定一个指示是否启用优化的值。</summary>
      <param name="optimize">若要启用优化，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionCompare(System.String)">
      <summary>指定一个值，该值指示编译器如何进行字符串比较。</summary>
      <param name="optionCompare">指示编译器如何进行字符串比较的值。 该值必须为 <see langword="binary" /> 或 <see langword="text" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionExplicit(System.Boolean)">
      <summary>指定一个值，该值指示是否需要变量的显式声明。</summary>
      <param name="optionExplicit">若要要求显式声明变量，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrict(System.Boolean)">
      <summary>指定一个值，该值指示编译器是否强制执行严格的类型语义来限制隐式类型转换。</summary>
      <param name="optionStrict">若要强制执行严格类型语义来限制隐式类型转换，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOptionStrictType(System.String)">
      <summary>指定编译器应在未遵从严格语言语义时发出警告。</summary>
      <param name="optionStrictType">传递到 <see langword="OptionStrictType" /> 参数的字符串。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetOutputAssembly(System.String)">
      <summary>指定输出文件的名称。</summary>
      <param name="outputAssembly">输出文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetPlatform(System.String)">
      <summary>指定将作为输出文件目标的处理器平台。</summary>
      <param name="platform">将作为输出文件目标的处理器平台。 此值可以为 <see langword="x86" />、<see langword="x64" />、<see langword="Itanium" /> 或 <see langword="anycpu" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定要从中将公共类型信息导入到当前项目的项。</summary>
      <param name="references">要从中将公共类型信息导入到当前项目的项。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRemoveIntegerChecks(System.Boolean)">
      <summary>指定一个值，该值指示是否禁用整数溢出错误检查。</summary>
      <param name="removeIntegerChecks">如果删除整数溢出错误检查，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定要嵌入到输出文件中的 .NET Framework 资源。</summary>
      <param name="resources">要嵌入到输出文件的 .NET Framework 资源。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定包含编译器的命令的响应文件。</summary>
      <param name="responseFiles">包含编译器的命令的响应文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetRootNamespace(System.String)">
      <summary>指定所有类型声明的根命名空间。</summary>
      <param name="rootNamespace">所有类型声明的根命名空间。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSdkPath(System.String)">
      <summary>指定 mscorlib.dll 和 microsoft.visualbasic.dll 的位置。</summary>
      <param name="sdkPath">mscorlib.dll 和 microsoft.visualbasic.dll 的位置。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])">
      <summary>指定一个或多个 Visual Basic 源文件。</summary>
      <param name="sources">一个或多个 Visual Basic 源文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetCompactFramework(System.Boolean)">
      <summary>指定一个值，该值指示是否面向 .NET Compact Framework。</summary>
      <param name="targetCompactFramework">如果面向 .NET Compact Framework，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTargetType(System.String)">
      <summary>指定输出文件的文件格式。</summary>
      <param name="targetType">输出文件的文件格式。 此值可以为 <see langword="library" />、<see langword="exe" />、<see langword="module" /> 或 <see langword="winexe" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetTreatWarningsAsErrors(System.Boolean)">
      <summary>指定一个值，该值指示是否将所有警告视为错误。</summary>
      <param name="treatWarningsAsErrors">如果将所有警告视为错误，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsAsErrors(System.String)">
      <summary>指定将被视为错误的警告的列表。</summary>
      <param name="warningsAsErrors">将被视为错误的警告的列表。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWarningsNotAsErrors(System.String)">
      <summary>指定不被视为错误的警告的列表。</summary>
      <param name="warningsNotAsErrors">不被视为错误的警告的列表。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Icon(System.String)">
      <summary>指定要插入到程序集的 .ico 文件。</summary>
      <param name="win32Icon">要插入到程序集的 .ico 文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject.SetWin32Resource(System.String)">
      <summary>指定要插入输出文件的 Win32 资源 (.res) 文件。</summary>
      <param name="win32Resource">要插入输出文件的 Win32 资源 (.res) 文件。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject2">
      <summary>定义一个接口，它使 Vbc 任务可以与主机集成开发环境 (IDE) 进行通信。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetModuleAssemblyName(System.String)">
      <summary>指定模块文件的名称。</summary>
      <param name="moduleAssemblyName">一个字符串，表示模块文件的名称。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetOptionInfer(System.Boolean)">
      <summary>指定一个值，指示是否必须显式声明变量类型。</summary>
      <param name="optionInfer">如果要求显式声明变量类型，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns>如果此方法成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject2.SetWin32Manifest(System.String)">
      <summary>设置要使用的 Win32 清单。</summary>
      <param name="win32Manifest">Win32 清单</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject3">
      <summary>定义一个接口，它使 Vbc 任务可以与主机集成开发环境 (IDE) 进行通信。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject3.SetLanguageVersion(System.String)">
      <summary>设置语言版本。</summary>
      <param name="languageVersion">语言版本。</param>
      <returns>如果设置了语言版本，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject4">
      <summary>定义 Vbc 任务的接口以便进行 IDE。 具体而言， Vbc 任务将委托实际编辑器给 IDE，而不是支付给 command-line 编译器。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject4.SetVBRuntime(System.String)">
      <summary>定义 Vbc 任务的接口以便进行 IDE。 具体而言， Vbc 任务将委托实际编辑器给 IDE，而不是支付给命令行编译器。</summary>
      <param name="VBRuntime">Visual Basic 运行库的名称。</param>
      <returns>如果该方法成功，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObject5">
      <summary>定义提供一个自由线宿主对象的接口，以便直接调用后台线程 (避免封送到 UI 线程)。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.CompileAsync(System.IntPtr@,System.IntPtr@)">
      <summary>此代码在 UI 线程上仅调用并开始使 VB 的实际生成。</summary>
      <param name="buildSucceededEvent">[out] 生成成功事件。</param>
      <param name="buildFailedEvent">[out] 生成失败事件。</param>
      <returns>如果该方法成功，则返回 0。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.EndCompile(System.Boolean)">
      <summary>在编译结尾处执行函数。</summary>
      <param name="buildSuccess">指示生成是否已成功的标志。 值 <see langword="true" /> 成功。</param>
      <returns>如果该方法成功，则返回 0。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.GetFreeThreadedHostObject">
      <summary>获取允许后台线程直接调用的自由线程主机对象。 避免封送到 UI 线程。</summary>
      <returns>自由线程的主机对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetHighEntropyVA(System.Boolean)">
      <summary>按照说明，设置 <c>/highentropyva</c> 值。</summary>
      <param name="highEntropyVA">如果将 <c>/highentropyva</c> 设置为指示支持高熵地址空间布局随机化 (ASLR)，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns>如果方法成功，则为 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetPlatformWith32BitPreference(System.String)">
      <summary>将 <c>/platform</c> 值设置为 <see langword="AnyCPU32BitPreferred" />。</summary>
      <param name="platformWith32BitPreference">如果将 <c>/platform</c> 值设置为 <see langword="AnyCPU32BitPreferred" />，则为 <see langword="True" />；否则为 <see langword="False" />。</param>
      <returns>如果该方法成功，则返回 <see langword="True" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObject5.SetSubsystemVersion(System.String)">
      <summary>设置指定的子系统版本。</summary>
      <param name="subsystemVersion">子系统版本。</param>
      <returns>如果该成功，则返回 <see langword="true" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded">
      <summary>定义 Vbc 任务的自由线程接口以便进行 IDE 通信。 具体而言， Vbc 任务将委托实际编辑器给 IDE，而不是支付给 command-line 编译器。  
此 Compile 的特定版本（不同于 IVbcHostObject::Compile）不会封送回 UI 线程。 负责任意封送的接口的实现。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Hosting.IVbcHostObjectFreeThreaded.Compile">
      <summary>编译这个源文件。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.IFixedTypeInfo">
      <summary>通过修改 <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> 和 <see cref="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(System.Int32,System.IntPtr@)" /> 的定义来提供 <see cref="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr,Microsoft.Build.Tasks.IFixedTypeInfo@)" /> 的替代项。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)" />。</summary>
      <param name="memid">成员的标识符。</param>
      <param name="invKind">要使用的调用的类型。</param>
      <param name="ppv">地址要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)" />。</summary>
      <param name="pUnkOuter">指向 IUNknow 接口的指针。</param>
      <param name="riid">类的 GUID。</param>
      <param name="ppvObj">指针返回到接口的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)" />。</summary>
      <param name="ppTLB">ITypeLib 接口的位置要返回的位置。</param>
      <param name="pIndex">该索引要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)" />。</summary>
      <param name="memid">成员的标识符。</param>
      <param name="invKind">要使用的调用的类型。</param>
      <param name="pBstrDllName">包含接口的DLL的名称。</param>
      <param name="pBstrName">入口点的名称。</param>
      <param name="pwOrdinal">输入点的初始值。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />。</summary>
      <param name="index">文档文章的索引。</param>
      <param name="strName">主题的名称。</param>
      <param name="strDocString">文档的名称。</param>
      <param name="dwHelpContext">该帮助文章的上下文编号。</param>
      <param name="strHelpFile">帮助文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />。</summary>
      <param name="index">函数的索引。</param>
      <param name="ppFuncDesc">指向说明的指针要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />。</summary>
      <param name="rgszNames">函数名。</param>
      <param name="cNames">传递的的名称数。</param>
      <param name="pMemId">该说明要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)" />。</summary>
      <param name="index">标记的索引。</param>
      <param name="pImplTypeFlags">该标志要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetMops(System.Int32,System.String@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)" />。</summary>
      <param name="memid">Mops 的标识符。</param>
      <param name="pBstrMops">Mops 要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />。</summary>
      <param name="memid">成员的标识符。</param>
      <param name="rgBstrNames">该名称要返回的位置。</param>
      <param name="cMaxNames">在 rgBstrNames 分配的字节数。</param>
      <param name="pcNames">名称数要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeInfo(System.IntPtr,Microsoft.Build.Tasks.IFixedTypeInfo@)">
      <summary>检索被引用的类型说明（如果该类型说明引用其他类型说明）。</summary>
      <param name="hRef">要返回的被引用类型说明的句柄。</param>
      <param name="ppTI">此方法返回时，包含被引用的类型说明。 此参数未经初始化即被传递。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetRefTypeOfImplType(System.Int32,System.IntPtr@)">
      <summary>检索实现的接口类型的类型说明（如果类型说明描述 COM 类）。</summary>
      <param name="index">返回其句柄的已实现类型的索引。</param>
      <param name="href">此方法返回时，包含对已实现接口的句柄的引用。 此参数未经初始化即被传递。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeAttr(System.IntPtr@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)" />。</summary>
      <param name="ppTypeAttr">类型特性要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)" />。</summary>
      <param name="ppTComp">类型 comp 要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.GetVarDesc(System.Int32,System.IntPtr@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />。</summary>
      <param name="index">变量的索引。</param>
      <param name="ppVarDesc">该说明要返回的位置。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)" />。</summary>
      <param name="pvInstance">指向此类型说明描述的接口的实例的指针。</param>
      <param name="memid">标识接口成员。</param>
      <param name="wFlags">描述 Invoke 调用的上下文的标志，如下： 
DISPATCH_METHOD 如果把该成员作为方法访问。 如果存在多义性，则可以同时设置此标志和 DISPATCH_PROPERTYGET 标志。  
DISPATCH_PROPERTYGET 如果把此成员作为属性或数据成员进行检索。  
DISPATCH_PROPERTYPUT 如果把此成员作为属性或数据成员进行更改。  
DISPATCH_PROPERTYPUTREF 如果通过使用引用分配而不是值分配更改此成员。 此值仅当属性接受对对象的引用时才有效。</param>
      <param name="pDispParams">指向结构，该结构包含一个参数数组、一个命名参数的 DISPID 数组和每个数组中元素数的计数。</param>
      <param name="pVarResult">如果调用方不需要任何结果，则应为 Null。 否则，它应该是指向要存储结果的位置的指针。 如果 wFlags 指定 DISPATCH_PROPERTYPUT 或 DISPATCH_PROPERTYPUTREF，则忽略 pVarResultis。</param>
      <param name="pExcepInfo">指向异常信息结构的指针，该结构仅在返回 DISP_E_EXCEPTION 时才被填充。 如果 pExcepInfois 在输入中为 Null，则将只返回 HRESULT 错误。</param>
      <param name="puArgErr">如果调用返回 DISP_E_TYPEMISMATCH，则 puArgErr 指示具有错误类型的参数的索引（在 rgvarg 中）。 如果多个参数返回错误，则 puArgErr 仅指示第一个具有错误的参数。 pDispParams-&gt;rgvarg 中的参数采用逆序显示，因此第一个参数是数组中具有最大索引的参数。 不能为 Null。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseFuncDesc(System.IntPtr)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseFuncDesc(System.IntPtr)" />。</summary>
      <param name="pFuncDesc">指向要释放的 FUNCDESC 的指针。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseTypeAttr(System.IntPtr)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseTypeAttr(System.IntPtr)" />。</summary>
      <param name="pTypeAttr">指向要释放 TYPEATTR 的指针。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.IFixedTypeInfo.ReleaseVarDesc(System.IntPtr)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.ReleaseVarDesc(System.IntPtr)" />。</summary>
      <param name="pVarDesc">指向要释放 VARDESC 的指针。</param>
    </member>
    <member name="T:Microsoft.Build.Tasks.LC">
      <summary>实现 <c>LC</c> 任务。 使用项目文件中的 <c>LC</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 LC 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.LC" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>生成命令行参数，许可证编译器工具 (lc.exe) 必须直接从命令行而不是从响应文件运行这些参数。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.GenerateFullPathToTool">
      <summary>返回许可证编译器工具 (lc.exe) 的完整文件路径。</summary>
      <returns>许可证编译器工具的完整文件路径或如果找不到许可证编译器工具文件，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.LicenseTarget">
      <summary>获取或设置将为其生成 .licenses 文件的可执行文件。</summary>
      <returns>将为其生成 .licenses 文件的可执行文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.NoLogo">
      <summary>获取或设置一个布尔值，该值指定是否禁止显示 Microsoft 启动版权标志。</summary>
      <returns>如果禁止显示 Microsoft 启动版权标志，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputDirectory">
      <summary>获取或设置用来放置输出 .licenses 文件的目录。</summary>
      <returns>用来放置输出 .licenses 文件的目录。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.OutputLicense">
      <summary>获取或设置 .licenses 文件的名称。</summary>
      <returns>.licenses 文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ReferencedAssemblies">
      <summary>获取或设置要在生成 .licenses 文件时加载的引用组件。</summary>
      <returns>要在生成 .licenses 文件时加载的引用组件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.SdkToolsPath">
      <summary>获取或设置用于搜索 SDK 工具的路径。</summary>
      <returns>返回 SDK 工具路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.Sources">
      <summary>获取或设置包含许可使用的组件的项，这些组件将要包含在 .licenses 文件中。</summary>
      <returns>包含许可使用的组件的项，这些组件将要包含在 .licenses 文件中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.LC.ToolName">
      <summary>获取许可证编译器工具的名称。</summary>
      <returns>许可证编译器工具的名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.LC.ValidateParameters">
      <summary>验证输入参数和日志错误或警告（如果有）。 返回一个布尔值，该值指示是否应继续执行任务。</summary>
      <returns>如果应继续执行任务，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MakeDir">
      <summary>实现 <c>MakeDir</c> 任务。 使用项目文件中的 <c>MakeDir</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 MakeDir 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MakeDir.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.MakeDir" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.MakeDir.Directories">
      <summary>获取或设置要创建的目录集。</summary>
      <returns>要创建的目录集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MakeDir.DirectoriesCreated">
      <summary>获取 <c>MakeDir</c> 任务创建的目录。</summary>
      <returns>目录的<c>MakeDir</c>创建任务。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.MakeDir.Execute">
      <summary>执行 <c>MakeDir</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ManagedCompiler">
      <summary>定义托管编译器任务共有的属性和方法。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ManagedCompiler" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>生成命令行工具必须直接从命令行而不是从响应文件运行的命令行参数。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.AdditionalLibPaths">
      <summary>获取或设置要在其中查找程序集的其他文件夹。</summary>
      <returns>要在其中查找程序集的其他文件夹。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.AddModules">
      <summary>获取或设置可用于你正在进行编译的项目的编译器的模块。</summary>
      <returns>可用于你正在进行编译的项目的编译器的模块。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>用开关和可以进入响应文件的其他信息填充指定的 <paramref name="commandLine" />。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.CheckAllReferencesExistOnDisk">
      <summary>验证所有指定的引用都存在于磁盘上。</summary>
      <returns>如果所有引用都存在于磁盘上，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.CheckHostObjectSupport(System.String,System.Boolean)">
      <summary>如果宿主编译器不支持指定的参数，则记录一条消息。</summary>
      <param name="parameterName">要在宿主编译器上设置的参数名称。</param>
      <param name="resultFromHostObjectSetOperation">如果宿主编译器支持 <paramref name="parameterName" />，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.CodePage">
      <summary>获取或设置要用于编译中所有源代码文件的代码页。</summary>
      <returns>要用于编译中所有源代码文件的代码页。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.DebugType">
      <summary>获取或设置调试类型。</summary>
      <returns>调试类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.DefineConstants">
      <summary>获取或设置条件编译器常量。</summary>
      <returns>条件编译器常量。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.DelaySign">
      <summary>获取或设置一个值，该值指示是否在程序集中放置公钥。</summary>
      <returns>如果在程序集中放置公钥，则为 <see langword="true" />；如果程序集已完全签名，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.EmitDebugInformation">
      <summary>获取或设置一个值，该值指示编译器是否生成调试信息。</summary>
      <returns>如果生成了调试信息，则为 <see langword="true" />；否则为 <see langword="false" />；</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.FileAlignment">
      <summary>获取或设置一个值，该值表示要将输出文件的代码段对齐到的位置。</summary>
      <returns>表示要将输出文件的代码段对齐到的位置的值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.HandleTaskExecutionErrors">
      <summary>处理编译器的返回代码。</summary>
      <returns>如果已成功处理返回代码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.HighEntropyVA">
      <summary>获取或设置 HighEntropyVA 特性。</summary>
      <returns>HighEntropyVA 特性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.HostCompilerSupportsAllParameters">
      <summary>获取或设置一个值，该值指示主机编译器是否支持所有任务参数。</summary>
      <returns>如果主机编译器支持所有任务参数，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.KeyContainer">
      <summary>获取或设置加密密钥容器的名称。</summary>
      <returns>加密密钥容器的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.KeyFile">
      <summary>获取或设置包含加密密钥的文件名。</summary>
      <returns>包含加密密钥的文件名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.LinkResources">
      <summary>获取或设置要链接到输出文件的 .NET Framework 资源文件。</summary>
      <returns>要链接到输出文件的 .NET Framework 资源文件。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.ListHasNoDuplicateItems(Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>确定指定的任务参数中是否存在任何重复项。</summary>
      <param name="itemList">要检查重复项的项列表。</param>
      <param name="parameterName">包含 <paramref name="itemList" /> 的参数的名称。</param>
      <returns>如果项列表不包含重复项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.MainEntryPoint">
      <summary>获取或设置包含主入口点的类或模块。</summary>
      <returns>包含主入口点的类或模块。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoConfig">
      <summary>获取或设置一个值，该值指示编译器是否应使用默认响应文件。</summary>
      <returns>如果编译器没有使用默认响应文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoLogo">
      <summary>获取或设置一个值，该值表示是否禁止显示编译器横幅信息。</summary>
      <returns>如果禁止显示编译器横幅信息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.NoWin32Manifest">
      <summary>获取或设置一个布尔值，该值指定是否为应用程序生成外部 UAC 清单。</summary>
      <returns>如果为应用程序生成外部 UAC 清单，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Optimize">
      <summary>获取或设置指示是否启用编译器优化的值。</summary>
      <returns>若要启用编译器优化则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.OutputAssembly">
      <summary>获取或设置输出文件的名称。</summary>
      <returns>输出文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Platform">
      <summary>获取或设置平台特性。</summary>
      <returns>平台特性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Prefer32Bit">
      <summary>获取或设置 Prefer32Bit 特性。</summary>
      <returns>Prefer32Bit 特性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.References">
      <summary>获取或设置编译器将从中导入公共类型信息的项。</summary>
      <returns>编译器将从中导入公共类型信息的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Resources">
      <summary>获取或设置要嵌入到输出文件的 .NET Framework 资源。</summary>
      <returns>要嵌入到输出文件的 .NET Framework 资源。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.ResponseFiles">
      <summary>获取或设置包含任务命令的响应文件。</summary>
      <returns>包含任务命令的响应文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Sources">
      <summary>获取或设置要编译的源文件。</summary>
      <returns>要编译的源文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.StandardOutputEncoding">
      <summary>获取或设置已捕获的任务标准输出流的编码。</summary>
      <returns>已捕获的任务标准输出流的编码。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.SubsystemVersion">
      <summary>获取或设置 SubsystemVersion 特性值。</summary>
      <returns>子系统版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.TargetType">
      <summary>获取或设置输出文件的文件格式。</summary>
      <returns>输出文件的文件格式。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.TreatWarningsAsErrors">
      <summary>获取或设置一个值，该值表示是否将警告视为错误。</summary>
      <returns>如果将警告视为错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.UseAlternateCommandLineToolToExecute">
      <summary>如果在项目文件中指定备用工具名称或工具路径，则对集成开发环境 (IDE) 生成使用该工具而不是宿主编译器。</summary>
      <returns>如果应使用宿主编译器，则为 <see langword="false" />；否则为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.UsedCommandLineTool">
      <summary>无论是否调用了命令行编译器，都将代替宿主对象编译器。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Utf8Output">
      <summary>获取或设置一个值，该值指示是否使用 UTF-8 编码记录编译器输出。</summary>
      <returns>如果使用 UTF-8 记录编译器输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ManagedCompiler.ValidateParameters">
      <summary>验证任务参数。</summary>
      <returns>如果所有参数都有效，则为 <see langword="true" />，否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Icon">
      <summary>获取或设置图标文件名。</summary>
      <returns>图标文件名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Manifest">
      <summary>获取或设置 Win32 清单。</summary>
      <returns>Win32 清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ManagedCompiler.Win32Resource">
      <summary>获取或设置要插入到输出文件中的 Win32 资源 (.res) 文件。</summary>
      <returns>要插入到输出文件中的 Win32 资源 (.res) 文件。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Message">
      <summary>实现 <c>Message</c> 任务。 使用项目文件中的 <c>Message</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Message 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Message.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Message" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Code">
      <summary>消息代码</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Message.Execute">
      <summary>执行 <c>Message</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.File">
      <summary>相关文件（如果有）。  
如果未提供任何内容并且指示关键消息，则将使用包含“消息”任务的文件。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.HelpKeyword">
      <summary>消息帮助关键字</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Importance">
      <summary>获取或设置消息的重要性。</summary>
      <returns>消息的重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.IsCritical">
      <summary>指示这是否是一次重要消息</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Message.Text">
      <summary>获取或设置要记录的错误文本。</summary>
      <returns>要记录的错误文本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Move">
      <summary>要移动一个或多个文件的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Move.#ctor">
      <summary>创建要移动一个或多个文件的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Move.Cancel">
      <summary>尽快停止并返回（在一个未定义状态）。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.DestinationFiles">
      <summary>获取或设置表示匹配的源文件的目标的目标文件。</summary>
      <returns>一个表示目标文件的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.DestinationFolder">
      <summary>获取或设置源文件的目标文件夹。</summary>
      <returns>一个表示目标文件夹的项。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Move.Execute">
      <summary>执行移动。</summary>
      <returns>如果移动成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.MovedFiles">
      <summary>获取一个表示已成功移动的文件的项。</summary>
      <returns>一个表示已成功移动的文件的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.OverwriteReadOnlyFiles">
      <summary>获取或设置一个开关，此开关用于选择是否可以覆盖目标文件夹中设置了只读特性的文件。</summary>
      <returns>
        <see langword="true" /> 如果可以覆盖文件，否则， <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Move.SourceFiles">
      <summary>获取或设置一个项，它表示要移动的文件的列表。</summary>
      <returns>一个表示要移动的文件列表的项。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.MSBuild">
      <summary>实现 <c>MSBuild</c> 任务。 使用项目文件中的 <c>MSBuild</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 MSBuild 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.MSBuild" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.BuildInParallel">
      <summary>获取或设置一个布尔值，该值指定是否尽可能并行生成在 <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> 属性中指定的项目。</summary>
      <returns>如果尽可能并行生成在 <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> 属性中指定的项目，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.MSBuild.Execute">
      <summary>指示 MSBuild 引擎生成一个或多个项目文件，这些项目文件的位置由 <see cref="P:Microsoft.Build.Tasks.MSBuild.Projects" /> 属性指定。</summary>
      <returns>如果成功生成所有项目，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Projects">
      <summary>获取或设置要生成的项目文件。</summary>
      <returns>要生成的项目文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Properties">
      <summary>获取或设置以分号分隔的作为全局属性应用到子项目的属性名称/值对列表。</summary>
      <returns>以分号分隔的作为全局属性应用到子项目的属性名称/值对列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RebaseOutputs">
      <summary>获取或设置一个布尔值，指定生成项目中目标输出项的相对路径是否将其路径调整为相对于调用项目。</summary>
      <returns>如果指定生成项目中目标输出项的相对路径将其路径调整为相对于调用项目，则为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RemoveProperties">
      <summary>获取或设置要移除的全局属性集。</summary>
      <returns>要删除的全局属性集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.RunEachTargetSeparately">
      <summary>获取或设置一个布尔值，该值指定 MSBuild 任务是否一次一个地调用列表中被传递到 MSBuild 的每个目标，而不是同时调用。</summary>
      <returns>如果 MSBuild 任务一次一个地调用列表中被传递到 MSBuild 的每个目标，则此值为 <see langword="true" />；如果 MSBuild 任务在同一时间调用列表中的所有目标，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.SkipNonexistentProjects">
      <summary>获取或设置一个布尔值，该值指定是否将跳过磁盘上不存在的项目文件。</summary>
      <returns>如果将跳过磁盘上不存在的项目文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.StopOnFirstFailure">
      <summary>获取或设置一个布尔值，该值指定任务是否应在其中一个项目可能失效时立即停止生成剩余项目。</summary>
      <returns>如果任务应在其中一个项目失效立即停止生成剩余项目，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetAndPropertyListSeparators">
      <summary>获取或设置要从指定的 <see cref="P:Microsoft.Build.Tasks.MSBuild.Properties" /> 和 <see cref="P:Microsoft.Build.Tasks.MSBuild.Targets" /> 中恢复原义的转义符。</summary>
      <returns>要从指定的 <see cref="P:Microsoft.Build.Tasks.MSBuild.Properties" /> 和 <see cref="P:Microsoft.Build.Tasks.MSBuild.Targets" /> 中恢复原义的转义符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.TargetOutputs">
      <summary>返回出自所有项目文件的生成目标的输出。 仅返回出自所指定目标的输出，不返回存在于目标所依赖的目标上的任何输出。</summary>
      <returns>出自所有项目文件的生成目标的输出。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.Targets">
      <summary>获取或设置要在该项目文件中生成的一个目标或多个目标。 使用分号分隔一系列目标名称。</summary>
      <returns>要在项目文件中生成的一个或多个目标。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.ToolsVersion">
      <summary>获取或设置一个要用于生成该项目的目标 .NET Framework 版本，这样，MSBuild 任务可以生成一个针对非该项目中指定的 .NET Framework 版本的项目。 有效值为 <paramref name="2.0" />、<paramref name="3.0" /> 和 <paramref name="3.5" />。</summary>
      <returns>要用于生成该项目的目标 .NET Framework 版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.UnloadProjectsOnCompletion">
      <summary>获取或设置一个布尔值，该值指定在操作完成后是否将卸载项目。</summary>
      <returns>如果在操作完成后将卸载项目，则为 <see langword="true" />；否则为 <see langword="false" />。 该属性不再在 4.0 版中使用</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.MSBuild.UseResultsCache">
      <summary>获取或设置一个布尔值，该值指示 MSBuild 引擎是否返回缓存中的已生成目标。</summary>
      <returns>如果 MSBuild 引擎将返回缓存中的已生成目标，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ReadLinesFromFile">
      <summary>实现 <c>ReadLinesFromFile</c> 任务。 使用项目文件中的 <c>ReadLinesFromFile</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 ReadLinesFromFile 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ReadLinesFromFile.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ReadLinesFromFile" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ReadLinesFromFile.Execute">
      <summary>执行 <c>ReadLinesFromFile</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ReadLinesFromFile.File">
      <summary>获取或设置要读取的文件。</summary>
      <returns>要读取的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ReadLinesFromFile.Lines">
      <summary>获取或设置从文件读取的行。</summary>
      <returns>从文件读取的行。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RegisterAssembly">
      <summary>实现 <c>RegisterAssembly</c> 任务。 使用项目文件中的 <c>RegisterAssembly</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 RegisterAssembly 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.RegisterAssembly" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.Assemblies">
      <summary>获取或设置要向 COM 注册的程序集。</summary>
      <returns>要向 COM 注册的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.AssemblyListFile">
      <summary>获取或设置 <c>RegisterAssembly</c> 任务和 UnregisterAssembly 任务之间的状态信息。 这样可以防止 <c>UnregisterAssembly</c> 任务尝试注销无法在 <c>RegisterAssembly</c> 任务中注册的程序集。</summary>
      <returns>所需的状态信息<c>UnregisterAssembly</c>任务执行适当的清理操作。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.CreateCodeBase">
      <summary>获取或设置一个布尔值，该值指定任务是否在注册表中创建 codebase 项，该项指定未在全局程序集缓存中安装的程序集的文件路径。</summary>
      <returns>如果任务在注册表中创建 codebase 项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.Execute">
      <summary>执行 <c>RegisterAssembly</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)">
      <summary>用于报告类型库导出事件的回调方法。</summary>
      <param name="kind">描述类型库导出程序在导出类型库时进行的回调。</param>
      <param name="code">导出事件的错误代码。</param>
      <param name="msg">导出事件的消息。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ResolveRef(System.Reflection.Assembly)">
      <summary>用于查找指定程序集的类型库的回调方法。</summary>
      <param name="assemblyToResolve">要为其查找类型库的程序集。</param>
      <returns>在所有情况下均为 <see langword="null" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RegisterAssembly.TypeLibFiles">
      <summary>获取或设置要从指定的程序集中生成的类型库。</summary>
      <returns>要从指定的程序集中生成的类型库。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RemoveDir">
      <summary>实现 <c>RemoveDir</c> 任务。 使用项目文件中的 <c>RemoveDir</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 RemoveDir 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDir.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.RemoveDir" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDir.Directories">
      <summary>获取或设置要删除的目录。</summary>
      <returns>要删除的目录。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDir.Execute">
      <summary>执行 <c>RemoveDir</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDir.RemovedDirectories">
      <summary>获取或设置已成功删除的目录。</summary>
      <returns>已成功删除的目录。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RemoveDuplicates">
      <summary>实现 <c>RemoveDuplicates</c> 任务。 使用项目文件中的 <c>RemoveDuplicates</c> 元素创建和执行此任务。 有关用法和参数的信息，请参阅 RemoveDuplicates 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDuplicates.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.RemoveDuplicates" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RemoveDuplicates.Execute">
      <summary>执行 <c>RemoveDuplicates</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDuplicates.Filtered">
      <summary>获取或设置删除了所有重复项的项集合。</summary>
      <returns>删除了所有重复项的项集合。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RemoveDuplicates.Inputs">
      <summary>获取或设置要从中删除重复项的项。</summary>
      <returns>要从中删除重复项的项。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly">
      <summary>确定应用程序是否需要 .NET Framework 3.5 SP1。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Assemblies">
      <summary>获取或设置此应用程序中引用的程序集。</summary>
      <returns>应用程序中引用的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.CreateDesktopShortcut">
      <summary>获取或设置安装期间是否在桌面上创建图标。</summary>
      <returns>如果将快捷方式图标添加到桌面，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.DeploymentManifestEntryPoint">
      <summary>获取或设置应用程序的清单文件名。</summary>
      <returns>应执行的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.EntryPoint">
      <summary>获取或设置应用程序运行时，应执行的程序集。</summary>
      <returns>应执行的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ErrorReportUrl">
      <summary>获取或设置 ClickOnce 安装期间所遇对话框中显示的网站。</summary>
      <returns>要显示的网站的 URL。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Execute">
      <summary>执行任务，该任务确定应用程序是否需要 .NET Framework 3.5 SP1。</summary>
      <returns>如果应用程序需要 .NET Framework 3.5 SP1，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.Files">
      <summary>获取或设置发布应用程序时，要部署的所有文件的列表。</summary>
      <returns>将部署的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ReferencedAssemblies">
      <summary>获取或设置您项目中引用的程序集。</summary>
      <returns>您项目中的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.RequiresMinimumFramework35SP1">
      <summary>获取或设置应用程序是否需要 .NET Framework 3.5 SP1。</summary>
      <returns>如果应用程序需要 .NET Framework 3.5 SP1，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SigningManifests">
      <summary>获取或设置 ClickOnce 清单是否已签名。</summary>
      <returns>如果 ClickOnce 清单已签名，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.SuiteName">
      <summary>获取或设置“开始”菜单上，应用程序的安装文件夹的名称。</summary>
      <returns>安装文件夹的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.TargetFrameworkVersion">
      <summary>获取或设置此应用程序的目标 .NET Framework 的版本。</summary>
      <returns>.NET Framework 版本的名称。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveAssemblyReference">
      <summary>实现 <c>ResolveAssemblyReference</c> 任务。 使用项目文件中的 <c>ResolveAssemblyReference</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 ResolveAssemblyReference 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveAssemblyReference" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedAssemblyExtensions">
      <summary>获取或设置要在引用解析期间考虑的程序集扩展。</summary>
      <returns>要在引用解析期间考虑的程序集扩展。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AllowedRelatedFileExtensions">
      <summary>获取或设置将在搜索相关文件时考虑的扩展名。</summary>
      <returns>将在搜索相关文件时考虑的扩展名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile">
      <summary>获取或设置 App.Config 文件路径。</summary>
      <returns>App.Config 文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.Assemblies">
      <summary>获取或设置要解析为完整路径并为之查找依赖项的程序集名称。</summary>
      <returns>要解析为完整路径并为之查找依赖项的程序集名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AssemblyFiles">
      <summary>获取或设置用以查找依赖项的完全限定程序集路径的列表。</summary>
      <returns>用以查找依赖项的完全限定程序集路径的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify">
      <summary>获取或设置一个布尔值，该值指定是否自动处理最后得到的依赖项关系图，如同向 <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile" /> 属性传递了 App.Config 文件一样。</summary>
      <returns>如果自动处理最后得到的依赖项关系图，如同向 <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AppConfigFile" /> 属性传递了 App.Config 文件一样，则为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CandidateAssemblyFiles">
      <summary>获取或设置要用于搜索和解析过程的程序集列表（必须是绝对文件名或与项目相关的文件名）。</summary>
      <returns>要用于搜索和解析过程的程序集列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalDependenciesWhenParentReferenceInGac">
      <summary>获取或设置一个值，该值决定依赖项的确定方式以及是否仅在本地复制依赖项。</summary>
      <returns>
        <see langword="true" /> 如果当确定如果依赖项应在本地复制，完成的检查之一是查看项目文件中的父引用是否了 Private 元数据设置。 如果设置的元数据，我们将使用的依赖项。  
如果没有设置该元数据，则依赖项将通过与父引用相同的检查。 其中一项检查是查看该引用是否位于 GAC 中。 如果某个引用位于 GAC 中，则不会对该引用进行本地复制，因为它假定该引用也位于目标计算机上的 gac 中。 但是，这只适用于具体引用，而不适用于其依赖项。  
这意味着项目文件中的某个引用可能是复制本地 false，原因是该引用位于 GAC 中，但由于依赖项不在 GAC 中，因此可能仍然会对依赖项进行本地复制。 这是 RAR 的默认行为，该行为会导致此属性的默认值为 true。  
返回<see langword="false" />如果我们仍将检查项目文件引用，以查看它们是否位于 GAC 中并根据需要设置其复制本地状态。  
但是，对于依赖项，我们不仅要检查它们是否位于 GAC 中，还要检查项目文件中的父引用是否位于 GAC 中。  
如果项目文件中的父引用位于 GAC 中，则不会对依赖项进行本地复制。  
   
 如果存在多个父引用并且任何一个父引用都不来自 GAC，则会将复制本地设置为 true。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.CopyLocalFiles">
      <summary>返回 <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles" />、<see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles" />、<see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles" />、<see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles" /> 和 <see cref="T:Microsoft.Build.Tasks.ResolveAssemblyReference" /> 属性中 <c>CopyLocal</c> 项元数据的值为 <see langword="true" /> 的所有文件。</summary>
      <returns>中的所有文件<see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles" />， <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles" />， <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles" />， <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles" />，并<see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles" />具有属性的<c>CopyLocal</c>项元数据的值为<see langword="true" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.Execute">
      <summary>执行 <c>ResolveAssemblyReference</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FilesWritten">
      <summary>获取或设置写入到磁盘的项。</summary>
      <returns>写入到磁盘的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindDependencies">
      <summary>获取或设置一个布尔值，该值指定是将查找依赖项 (<see langword="true" />) 还是仅将查找主引用 (<see langword="false" />)。</summary>
      <returns>如果将查找依赖项，则为 <see langword="true" />；如果仅将查找主引用，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindRelatedFiles">
      <summary>获取或设置一个布尔值，指定是否将找到相关的文件，如 .pdb 文件和 .xml 文件。</summary>
      <returns>如果将找到相关的文件，如 .pdb 文件和 .xml 文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindSatellites">
      <summary>获取或设置一个布尔值，该值指定是否会找到附属程序集。</summary>
      <returns>如果会找到附属程序集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FindSerializationAssemblies">
      <summary>获取或设置一个布尔值，该值指定是否会找到序列化程序集。</summary>
      <returns>如果会找到序列化程序集，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkAssemblyTables">
      <summary>获取或设置一个项列表，这些项表示包含配置文件的完全框架的 XML 文件。</summary>
      <returns>表示包含配置文件的完全框架的 XML 文件的项的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullFrameworkFolders">
      <summary>获取或设置一个文件夹列表，这些文件夹中包含一个表示给定客户端配置文件的完全框架的 RedistList 目录，例如：%programfiles%\reference assemblies\microsoft\framework\v4.0</summary>
      <returns>文件夹包含 RedistList 目录表示给定客户端配置文件的完整框架的列表</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.FullTargetFrameworkSubsetNames">
      <summary>一个字符串，包含指定目标框架的子集的名称。</summary>
      <returns>一个包含子集名称的字符串值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblySubsetTables">
      <summary>获取或设置一个布尔值，该值指定任务是否应该查找和使用附加的已安装程序集子集表（也称子集列表），这些表位于 SubsetList 目录中所提供的 TargetFrameworkDirectories 下面。</summary>
      <returns>如果使用附加的程序集子集表，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreDefaultInstalledAssemblyTables">
      <summary>获取或设置一个布尔值，该值指定 <c>ResolveAssemblyReference</c> 任务是应该忽略附加的已安装程序集表（位于 RedistList 目录中所提供的 <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories" /> 下面）(<see langword="true" />)，还是应该搜索和使用这些已安装的程序集表 (<see langword="false" />)。</summary>
      <returns>如果该任务应该忽略附加的已安装程序集表，则为 <see langword="true" />；如果该任务应该搜索和使用附加的已安装程序集表，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreTargetFrameworkAttributeVersionMismatch">
      <summary>获取或设置指示检查程序集是否与目标框架兼容时是否忽略框架属性的值。</summary>
      <returns>
        <see langword="true" /> 若要忽略框架属性;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.IgnoreVersionForFrameworkReferences">
      <summary>获取或设置一个值，该值指示是否忽略框架程序集的版本信息，实际通过当前目标框架解析框架程序集。 如果主引用是框架程序集，则标志适用。</summary>
      <returns>
        <see langword="true" /> 若要忽略的版本信息;否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblySubsetTables">
      <summary>一个表示 XML 文件列表的 <see cref="T:Microsoft.Build.Framework.ITaskItem" />，这些 XML 文件包含应在目标子集中的程序集。</summary>
      <returns>XML 文件的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.InstalledAssemblyTables">
      <summary>获取或设置包含将在目标计算机上安装的程序集的 XML 文件的列表。</summary>
      <returns>包含将在目标计算机上安装的程序集的 XML 文件的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.LatestTargetFrameworkDirectories">
      <summary>获取或设置目录列表，这些目录包含面向计算机的最新框架的 redist 列表。</summary>
      <returns>这些目录包含的 redist 列表列出了可以为目标计算机上的最新框架。 如果未设置，然后搜索给定的目标框架标识符的计算机上安装的最高框架的值，并将使用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ProfileName">
      <summary>获取或设置目标框架配置文件的名称。 例如，客户端、Web 或网络。</summary>
      <returns>目标框架配置文件的名称。 例如，客户端、Web 或网络。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.RelatedFiles">
      <summary>获取与引用项具有相同基名称的相关文件，如 .xml 和 .pdb 文件。</summary>
      <returns>相关文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedDependencyFiles">
      <summary>获取第 n 级依赖项路径。</summary>
      <returns>N级依赖关系路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedFiles">
      <summary>获取已解析为完整路径的所有主引用列表。</summary>
      <returns>已解析为完整路径的所有主引用列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ResolvedSDKReferences">
      <summary>包含 SDK 名称、SDK 位置和目标配置的已解析的 SDK 引用的列表。  
如果引用具有 SDKName 元数据附加到，这些位置仅被搜索。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SatelliteFiles">
      <summary>获取找到的任意附属文件。</summary>
      <returns>找到的任意附属文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.ScatterFiles">
      <summary>获取与某个给定的程序集关联的散点文件。</summary>
      <returns>与某个给定的程序集关联的散点文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SearchPaths">
      <summary>指定目录或特殊位置，将在其中进行搜索以找到磁盘上表示程序集的文件。</summary>
      <returns>目录或特殊位置，将在其中进行搜索以找到磁盘上表示程序集的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SerializationAssemblyFiles">
      <summary>获得序列化程序集。</summary>
      <returns>序列化程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.Silent">
      <summary>获取或设置一个布尔值，该值指定是否未记录任何消息。</summary>
      <returns>如果未记录任何消息，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.StateFile">
      <summary>获取或设置一个文件名，该文件名表示用于保存此任务的中间生成状态的位置。</summary>
      <returns>表示用于保存此任务的中间生成状态的位置的文件名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.SuggestedRedirects">
      <summary>为每个不重复的冲突程序集标识获取一个项，而不考虑 <see cref="P:Microsoft.Build.Tasks.ResolveAssemblyReference.AutoUnify" /> 属性的值。</summary>
      <returns>对应于不重复冲突程序集标识的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetedRuntimeVersion">
      <summary>获取或设置目标运行时的名称。 例如：2.0.57027。</summary>
      <returns>目标运行时的名称。 可以将“v”作为名称前缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkDirectories">
      <summary>获取或设置目标框架目录的路径。</summary>
      <returns>目标框架目录的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMoniker">
      <summary>获取或设置目标框架名字对象（如果有）。</summary>
      <returns>目标框架名字对象，如果有或默认情况下为空字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkMonikerDisplayName">
      <summary>获取或设置目标框架名字对象的显示名称（如果有）。</summary>
      <returns>目标框架名字对象，如果有显示名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkSubsets">
      <summary>将在目标框架目录中搜索的目标框架子集名称的列表。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetFrameworkVersion">
      <summary>获取或设置用于筛选引用的项目目标框架版本。</summary>
      <returns>用于筛选引用的项目目标框架版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.TargetProcessorArchitecture">
      <summary>获取或设置用于分析全局程序集缓存 (GAC) 引用的首选目标处理器体系结构，它可以具有 <c>x86</c>、<c>IA64</c> 或 <c>AMD64</c> 的值。</summary>
      <returns>用于分析全局程序集缓存 (GAC) 引用的首选目标处理器体系结构。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveAssemblyReference.WarnOrErrorOnTargetArchitectureMismatch">
      <summary>获取或设置一个字符串值，此值指定目标处理器架构和主引用架构之间不匹配时的行为。 如果它为“错误”，将为不匹配记录错误。 如果它为“警告”，将为不匹配记录警告。 如果它为“无”，不会为不匹配记录任何错误或警告。</summary>
      <returns>"错误"、"警告"或"None"的一个字符串值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveComReference">
      <summary>实现 <c>ResolveComReference</c> 任务。 使用项目文件中的 <c>ResolveComReference</c> 元素创建和执行此任务。 相关用法和参数信息，请参阅 ResolveComReference 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveComReference.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveComReference" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.DelaySign">
      <summary>获取或设置一个布尔值，该值指定 <c>ResolveComReference</c> 任务是在程序集中放置公钥 (<see langword="true" />)，还是对程序集进行完全签名 (<see langword="false" />)。</summary>
      <returns>
        <see langword="true" /> 如果<c>ResolveComReference</c>任务会将公钥放置在程序集;<see langword="false" />如果<c>ResolveComReference</c>完全任务程序集进行签名。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.EnvironmentVariables">
      <summary>获取或设置除了（或者有选择地重写）常规的环境块之外，应传递到生成的 tlbimp.exe 和 aximp.exe 的环境变量名称-值对的数组。</summary>
      <returns>环境变量的名称-值对的数组。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveComReference.Execute">
      <summary>执行 <c>ResolveComReference</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ExecuteAsTool">
      <summary>允许 ResolveComReferences 的多目标功能的属性：如果为 true，则将从进程外运行适当目标框架中的 tlbimp.exe 和 aximp.exe 以生成所需的包装器程序集。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.IncludeVersionInInteropName">
      <summary>若设置为 true，则 typelib 版本将包含在包装名称中。 默认值为 false。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.KeyContainer">
      <summary>获取或设置保存密钥对的容器。</summary>
      <returns>保存密钥对的容器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.KeyFile">
      <summary>获取或设置包含密钥对的项。</summary>
      <returns>包含密钥对的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.NoClassMembers">
      <summary>获取或设置一个布尔值，该值指定是否将 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PreventClassMembers" /> 标志传递给 .tlb 包装器生成。</summary>
      <returns>如果该任务应该将 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PreventClassMembers" /> 标志传递给 .tlb 包装器生成，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ResolvedAssemblyReferences">
      <summary>获取或设置已解析的程序集引用。</summary>
      <returns>已解析的程序集引用。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ResolvedFiles">
      <summary>获取或设置磁盘上的完全限定文件，这些文件与作为此任务的输入提供的类型库的物理位置相对应。</summary>
      <returns>与作为此任务的输入提供的类型库的物理位置相对应的磁盘上的完全限定文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.ResolvedModules">
      <summary>获取或设置找到的模块的路径。</summary>
      <returns>找到的模块的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.SdkToolsPath">
      <summary>如果 ExecuteAsTool 为 true，则必须将此项设置为目标框架版本的 SDK 工具路径。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.Silent">
      <summary>获取或设置一个值，该值指示是否记录消息或警告。</summary>
      <returns>
        <see langword="true" /> 如果不记录消息和警告;否则为<see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.StateFile">
      <summary>获取或设置 COM 组件时间戳的缓存文件。</summary>
      <returns>COM 组件时间戳的缓存文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TargetFrameworkVersion">
      <summary>项目目标框架版本。 默认为空， 这意味着不会基于引用的目标框架来对其进行筛选。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TargetProcessorArchitecture">
      <summary>获取或设置转换之后传递到 tlbimp.exe/计算机标志的首选目标处理器架构名称，例如 x86、ia64、amd64 或 msil。</summary>
      <returns>首选的目标处理器体系结构的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TypeLibFiles">
      <summary>获取或设置到 COM 引用的类型库文件路径。</summary>
      <returns>COM 引用的类型库文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.TypeLibNames">
      <summary>获取或设置要解析的类型库名称。</summary>
      <returns>要解析的类型库名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveComReference.WrapperOutputDirectory">
      <summary>获取或设置生成的互操作程序集放置在磁盘上的位置。</summary>
      <returns>生成的互操作程序集放置在磁盘上的位置。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveKeySource">
      <summary>实现 <c>ResolveKeySource</c> 任务。 使用项目文件中的 <c>ResolveKeySource</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 ResolveKeySource 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveKeySource.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveKeySource" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptShow">
      <summary>获取或设置显示倒计时消息的时间长度（以秒为单位）。</summary>
      <returns>显示倒计时消息的时间长度（以秒为单位）。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.AutoClosePasswordPromptTimeout">
      <summary>获取或设置在关闭密码提示对话框之前要等待的时间量（以秒为单位）。</summary>
      <returns>在关闭密码提示对话框之前要等待的时间量（以秒为单位）。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.CertificateFile">
      <summary>获取或设置证书文件的路径。</summary>
      <returns>证书文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.CertificateThumbprint">
      <summary>获取或设置证书指纹。</summary>
      <returns>证书指纹。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveKeySource.Execute">
      <summary>执行 <c>ResolveKeySource</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.KeyFile">
      <summary>获取或设置密钥文件的路径。</summary>
      <returns>密钥文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyContainer">
      <summary>获取或设置已解析的密钥容器。</summary>
      <returns>已解析的密钥容器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ResolvedKeyFile">
      <summary>获取或设置已解析的密钥文件。</summary>
      <returns>已解析的密钥文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ResolvedThumbprint">
      <summary>获取或设置解析的证书指纹。</summary>
      <returns>已解析的证书指纹。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.ShowImportDialogDespitePreviousFailures">
      <summary>获取或设置一个布尔值，该值指定无论以前失败与否是否都要显示导入对话框。</summary>
      <returns>如果无论以前失败与否该任务都应该显示导入对话框，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveKeySource.SuppressAutoClosePasswordPrompt">
      <summary>获取或设置一个布尔值，该值指定密码提示对话框是否不应该自动关闭。</summary>
      <returns>如果密码提示对话框不应该自动关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveManifestFiles">
      <summary>该任务将生成过程中的以下各项解析到用于清单生成的文件：生成的项、依赖项、附属项、内容、调试符号和文档。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveManifestFiles" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.DeploymentManifestEntryPoint">
      <summary>获取或设置部署清单的名称。</summary>
      <returns>作为入口点的部署清单名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.EntryPoint">
      <summary>获取或设置作为清单入口点的托管程序集或 ClickOnce 清单引用。</summary>
      <returns>入口点。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.Execute">
      <summary>执行 <c>ResolveManifestFiles</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.ExtraFiles">
      <summary>获取或设置额外文件。</summary>
      <returns>额外文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.Files">
      <summary>获取或设置输入文件。</summary>
      <returns>输入文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.ManagedAssemblies">
      <summary>获取或设置托管程序集。</summary>
      <returns>托管程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.NativeAssemblies">
      <summary>获取或设置本机程序集。</summary>
      <returns>本机程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputAssemblies">
      <summary>获取或设置所生成的程序集。</summary>
      <returns>所生成的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputDeploymentManifestEntryPoint">
      <summary>获取或设置输出部署清单入口点。</summary>
      <returns>部署清单入口点。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputEntryPoint">
      <summary>获取或设置输出入口点。</summary>
      <returns>输出入口点。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.OutputFiles">
      <summary>获取或设置输出文件。</summary>
      <returns>输出文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.PublishFiles">
      <summary>获取或设置发布文件。</summary>
      <returns>发布文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.SatelliteAssemblies">
      <summary>获取或设置附属程序集。</summary>
      <returns>附属程序集</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.SigningManifests">
      <summary>获取或设置一个值，该值指示清单是否已签名。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.TargetCulture">
      <summary>获取或设置附属程序集的目标区域性。</summary>
      <returns>附属程序集的目标区域性。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.TargetFrameworkVersion">
      <summary>获取或设置目标 .NET Framework 的版本。</summary>
      <returns>目标 .NET Framework 的版本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNativeReference">
      <summary>实现 <c>ResolveNativeReference</c> 任务。 使用项目文件中的 <c>ResolveNativeReference</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 ResolveNativeReference 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveNativeReference" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.AdditionalSearchPaths">
      <summary>获取或设置用于解析本机引用的程序集标识的搜索路径。</summary>
      <returns>用于解析本机引用的程序集标识的搜索路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedComComponents">
      <summary>获取或设置本机程序集的 COM 组件。</summary>
      <returns>本机程序集的 COM 组件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseEtcFiles">
      <summary>获取或设置本机清单中列出的松散 Etc 文件。</summary>
      <returns>本机清单中列出的松散 Etc 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedLooseTlbFiles">
      <summary>获取或设置本机程序集的松宽松 .tlb 文件。</summary>
      <returns>本机程序集的松散 .tlb 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedPrerequisiteAssemblies">
      <summary>获取或设置在可使用清单前必须存在的程序集。</summary>
      <returns>在可使用清单前必须存在的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainedTypeLibraries">
      <summary>获取或设置本机程序集的类型库。</summary>
      <returns>本机程序集的类型库。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.ContainingReferenceFiles">
      <summary>获取或设置引用文件。</summary>
      <returns>引用文件。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.Execute">
      <summary>执行 <c>ResolveNativeReference</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNativeReference.NativeReferences">
      <summary>获取或设置 Win32 本机程序集引用。</summary>
      <returns>Win32 本机程序集引用。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput">
      <summary>确定非 MSBuild 项目引用的输出文件。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.Execute">
      <summary>执行 <c>ResolveNonMSBuildProjectOutput</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.PreresolvedProjectOutputs">
      <summary>获取或设置包含解析的项目输出的 XML 字符串。</summary>
      <returns>包含解析的项目输出的 XML 字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolvedOutputPaths">
      <summary>获取或设置保留原始项目引用特性的已解析引用路径。</summary>
      <returns>保留原始项目引用特性的已解析引用路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.UnresolvedProjectReferences">
      <summary>获取或设置使用 MSBuild 格式的项目引用项。</summary>
      <returns>使用 MSBuild 格式的项目引用项。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveProjectBase">
      <summary>表示 <see cref="T:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput" /> 和 <see cref="T:Microsoft.Build.Tasks.AssignProjectConfiguration" /> 的基类。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.ResolveProjectBase" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.AddSyntheticProjectReferences(System.String)">
      <summary>用于检索在解决方案 blob 中通过的多余的“项目引用”的 helper 方法。 这些来自解决方案文件中所表述的依赖项。</summary>
      <param name="currentProjectAbsolutePath">当前项目的绝对路径。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.GetProjectElement(Microsoft.Build.Framework.ITaskItem)">
      <summary>检索表示给定项目的 XML 元素。</summary>
      <param name="projectRef">项目引用项。</param>
      <returns>项目元素。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.GetProjectItem(Microsoft.Build.Framework.ITaskItem)">
      <summary>检索指定项目的项目元素的 XML 内容。</summary>
      <param name="projectRef">一个包含项目 GUID 属性的项目引用。</param>
      <returns>指定项目的项目元素的 XML 内容。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveProjectBase.ProjectReferences">
      <summary>获取或设置项目引用。</summary>
      <returns>项目引用。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ResolveSDKReference">
      <summary>将 SDKReference 解析为磁盘上的完整路径</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveSDKReference.#ctor">
      <summary>创建 ResolveSDKReference 的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ResolveSDKReference.Execute">
      <summary>执行此任务。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.InstalledSDKs">
      <summary>安装的 SDKs 列表 SDK 的位置， SDKName 元数据是 SDKName。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.LogResolutionErrorsAsWarnings">
      <summary>指定解决 SDKs 的问题是否已记录为警告或错误。  
如果解决方案问题被记录为错误，该编译失败。  
如果解决方案问题被记录为警告，我们将发出警告并继续。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.Prefer32Bit">
      <summary>在生成中使用的 Prefer32Bit 标志的值</summary>
      <returns>返回标志。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.References">
      <summary>引用可以传递，以便 SDKNames 可以得到解析。 一旦解决，sdkroot 路径能追加至引用，因此 RAR 能找到正确程序集 sdk 位置。</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.ResolvedSDKReferences">
      <summary>已解析的 SDK 引用</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.SDKReferences">
      <summary>磁盘上要解析为路径的 SDK 设置</summary>
      <returns>返回 <see cref="T:Microsoft.Build.Framework.ITaskItem" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKArchitecture">
      <summary>目标 SDK 的体系结构</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ResolveSDKReference.TargetedSDKConfiguration">
      <summary>解析的 SDK 的配置</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.SGen">
      <summary>实现 <c>SGen</c> 任务。 使用项目文件中的 <c>SGen</c> 元素创建和执行此任务。 有关用法有关用法和参数信息，请参阅 SGen 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.SGen" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.BuildAssemblyName">
      <summary>获取或设置要为其生成序列化代码的程序集。</summary>
      <returns>要为其生成序列化代码的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.BuildAssemblyPath">
      <summary>获取或设置要生成序列化代码的程序集的路径。</summary>
      <returns>要生成序列化代码的程序集的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.DelaySign">
      <summary>获取或设置一个布尔值，该值指定 <c>SGen</c>任务是在程序集中放置公钥 (<see langword="true" />)，还是对程序集进行完全签名 (<see langword="false" />)。</summary>
      <returns>
        <see langword="true" /> 如果<c>SGen</c>任务会将公钥放置在程序集;<see langword="false" />如果<c>SGen</c>完全任务程序集进行签名。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.GenerateCommandLineCommands">
      <summary>获取命令行工具必须直接从命令行（而不是从响应文件）运行的开关和其他信息。</summary>
      <returns>一个字符串，它包含命令行工具必须直接从命令行（而不是从响应文件）运行的开关和其他信息。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.GenerateFullPathToTool">
      <summary>获取 SGen 工具的完整文件路径。</summary>
      <returns>SGen 工具的完整文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.KeyContainer">
      <summary>获取或设置保存密钥对的容器。</summary>
      <returns>保存密钥对的容器。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.KeyFile">
      <summary>获取或设置要用于对程序集进行签名的密钥对或公钥。</summary>
      <returns>要用于对程序集进行签名的密钥对或公钥。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.Platform">
      <summary>获取或设置用于生成输出程序集的编译器平台。</summary>
      <returns>要使用的编译器平台。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.References">
      <summary>获取或设置由需要 XML 序列化的类型引用的程序集。</summary>
      <returns>由需要 XML 序列化的类型引用的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SdkToolsPath">
      <summary>获取或设置 SDK 工具路径。</summary>
      <returns>SDK Tools 路径中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SerializationAssembly">
      <summary>获取或设置生成的序列化程序集。</summary>
      <returns>生成的序列化程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.SerializationAssemblyName">
      <summary>获取生成的序列化程序集的名称。</summary>
      <returns>生成的序列化程序集的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.ShouldGenerateSerializer">
      <summary>获取或设置一个布尔值，该值指定 <c>SGen</c> 任务是否应生成序列化程序集。</summary>
      <returns>
        <see langword="true" /> 如果<c>SGen</c>任务应生成序列化程序集; 否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.SkipTaskExecution">
      <summary>指示是否应跳过任务执行。</summary>
      <returns>如果应跳过任务执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.ToolName">
      <summary>获取工具可执行文件的名称 (sgen.exe)。</summary>
      <returns>工具可执行文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.Types">
      <summary>获取或设置要为其生成序列化代码的特定类型的列表。 <see langword="SGen" /> 只为这些类型生成代码。</summary>
      <returns>特定类型的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SGen.UseProxyTypes">
      <summary>获取或设置一个布尔值，该值指定 <c>SGen</c> 任务是否仅为 XML Web 服务代理类型生成序列化代码。</summary>
      <returns>
        <see langword="true" /> 如果<c>SGen</c>任务生成的序列化代码仅为 XML Web 服务代理类型; 否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SGen.ValidateParameters">
      <summary>验证输入参数和日志错误或警告（如果有）。 返回一个布尔值，该值指示是否应继续执行任务。</summary>
      <returns>如果应继续执行任务，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.SignFile">
      <summary>实现 <c>SignFile</c> 任务。 使用项目文件中的 <c>SignFile</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 SignFile 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.SignFile.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.SignFile" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.CertificateThumbprint">
      <summary>获取或设置用于签名的证书。</summary>
      <returns>用于签名的证书。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.SignFile.Execute">
      <summary>执行 <c>SignFile</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.SigningTarget">
      <summary>获取或设置要用证书进行签名的文件。</summary>
      <returns>要用证书进行签名的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.SignFile.TimestampUrl">
      <summary>获取或设置时间戳服务器的 URL。</summary>
      <returns>时间戳服务器的 URL。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.TaskExtension">
      <summary>包含帮助扩展任务的属性。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.TaskExtension.Log">
      <summary>获取包含任务记录方法的 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 的实例。</summary>
      <returns>包含任务记录方法的 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 的实例。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension">
      <summary>对各种消息启用日志记录。 还启用资源加载和格式设置。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.#ctor(Microsoft.Build.Framework.ITask,System.Resources.ResourceManager,System.Resources.ResourceManager,System.String)">
      <summary>使用任务实例、主要资源、共享资源以及“帮助”关键字前缀初始化 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 类的新实例。</summary>
      <param name="taskInstance">一个包含 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 类的实例的任务。</param>
      <param name="primaryResources">UI 和字符串资源。</param>
      <param name="sharedResources">共享 UI 和字符串资源。</param>
      <param name="helpKeywordPrefix">用于构成“帮助”关键字的前缀。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.FormatResourceString(System.String,System.Object[])">
      <summary>加载指定的资源字符串，并可以选择使用给定的参数设置该字符串的格式。 当前线程的区域性用于格式设置。</summary>
      <param name="resourceName">要加载的字符串资源的名称。</param>
      <param name="args">用于设置加载的字符串的格式的可选参数，或 <see langword="null" />。</param>
      <returns>格式化的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.TaskLoggingHelperExtension.TaskSharedResources">
      <summary>获取或设置共享的 UI 和字符串资源。</summary>
      <returns>共享的 UI 和字符串资源。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.ToolTaskExtension">
      <summary>构成一些扩展的实用工具方法，用于构造包装命令行工具的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>使用开关和命令行工具必须从命令行中运行而不是从响应文件中运行的其他信息来填充指定的 <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" />。</summary>
      <param name="commandLine">要填充的 <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" />。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>使用命令行工具可从响应文件中运行的开关和其他信息来填充指定的 <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" />。</summary>
      <param name="commandLine">要填充的 <see cref="T:Microsoft.Build.Tasks.CommandLineBuilderExtension" />。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag">
      <summary>获取派生任务类所使用参数的集合。</summary>
      <returns>派生任务类所使用参数的集合。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands">
      <summary>获取命令行工具必须直接从命令行（而不是从响应文件）运行的开关和其他信息。</summary>
      <returns>一个字符串，它包含命令行工具必须直接从命令行（而不是从响应文件）运行的开关和其他信息。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands">
      <summary>获取命令行工具指定响应文件时所用的开关。</summary>
      <returns>命令行工具指定响应文件时所用的开关。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)">
      <summary>获取指定布尔参数的值。</summary>
      <param name="parameterName">要返回的参数的名称。</param>
      <param name="defaultValue">当 <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" /> 中不存在 <paramref name="parameterName" /> 时要返回的值。</param>
      <returns>参数值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)">
      <summary>获取指定整数参数的值。</summary>
      <param name="parameterName">要返回的参数的名称。</param>
      <param name="defaultValue">当 <see cref="P:Microsoft.Build.Tasks.ToolTaskExtension.Bag" /> 中不存在 <paramref name="parameterName" /> 时要返回的值。</param>
      <returns>参数值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors">
      <summary>返回此 ToolTask 是否记录了任何错误。</summary>
      <returns>如果 ToolTask 记录了错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.ToolTaskExtension.Log">
      <summary>获取包含任务日志记录方法的 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 类的实例。</summary>
      <returns>包含任务日志记录方法的 <see cref="T:Microsoft.Build.Tasks.TaskLoggingHelperExtension" /> 类的实例。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Touch">
      <summary>实现 <c>Touch</c> 任务。 使用项目文件中的 <c>Touch</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Touch 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Touch.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Touch" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.AlwaysCreate">
      <summary>获取或设置一个布尔值，该值指定是否创建尚未存在的任何文件。</summary>
      <returns>
        <see langword="true" /> 如果<c>接触</c>任务创建任何文件，尚不存在; 否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Touch.Execute">
      <summary>执行 <c>Touch</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.Files">
      <summary>获取或设置要改动的文件。</summary>
      <returns>要改动的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.ForceTouch">
      <summary>获取或设置一个布尔值，该值指定是否即使文件是只读的也强制改动文件。</summary>
      <returns>
        <see langword="true" /> 如果<c>接触</c>任务强制改动文件，即使这些文件是只读的; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.Time">
      <summary>获取或设置当前时间以外的时间。 格式必须为 <see cref="M:System.DateTime.Parse(System.String)" /> 方法可接受的格式。</summary>
      <returns>当前时间以外的时间</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Touch.TouchedFiles">
      <summary>获取或设置已成功改动的项。</summary>
      <returns>已成功改动的项。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.UnregisterAssembly">
      <summary>实现 <c>UnregisterAssembly</c> 任务。 使用项目文件中的 <c>UnregisterAssembly</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 UnregisterAssembly 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.UnregisterAssembly" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.Assemblies">
      <summary>获取或设置要取消注册的程序集。</summary>
      <returns>要取消注册的程序集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.AssemblyListFile">
      <summary>获取或设置有关 <c>RegisterAssembly</c> 任务和 <c>UnregisterAssembly</c> 任务用于避免注销在 <c>RegisterAssembly</c> 任务中注册失败的程序集的 <c>UnregisterAssembly</c> 任务。</summary>
      <returns>有关之间状态的信息<c>RegisterAssembly</c>任务和<c>UnregisterAssembly</c>任务。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.Execute">
      <summary>执行 <c>UnregisterAssembly</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UnregisterAssembly.TypeLibFiles">
      <summary>获取或设置一个布尔值，它指定是否要从指定的程序集中撤消注册指定的类型库。</summary>
      <returns>
        <see langword="true" /> 如果<c>UnregisterAssembly</c>任务应撤销注册指定的类型库从指定的程序集; 否则为<see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.UpdateManifest">
      <summary>更新清单中所选的属性并重新签名。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.UpdateManifest.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.UpdateManifest" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.ApplicationManifest">
      <summary>获取或设置应用程序清单。</summary>
      <returns>应用程序清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.ApplicationPath">
      <summary>获取或设置应用程序清单的路径。</summary>
      <returns>应用程序清单的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.UpdateManifest.Execute">
      <summary>执行任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；如果出错，则为 <see cref="T:System.InvalidOperationException" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.InputManifest">
      <summary>获取或设置要更新的清单。</summary>
      <returns>要更新的清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.OutputManifest">
      <summary>获取或设置包含已更新的属性的清单。</summary>
      <returns>包含更新的属性的清单。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.UpdateManifest.TargetFrameworkVersion">
      <summary>获取或设置目标框架的版本。</summary>
      <returns>目标框架版本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Vbc">
      <summary>实现 <c>Vbc</c> 任务。 使用项目文件中的 <c>Vbc</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Vbc 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Vbc" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>使用开关和其他可存入响应文件的信息填充指定的 <paramref name="commandLine" />。</summary>
      <param name="commandLine">要向其添加参数的命令行生成器。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.BaseAddress">
      <summary>获取或设置 DLL 的基址。</summary>
      <returns>DLL 的基址。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.CallHostObjectToExecute">
      <summary>通过主机对象编译项目。</summary>
      <returns>如果编译成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.DisabledWarnings">
      <summary>获取或设置由警告标识符数字部分所指定的一条或多条要取消显示的警告。</summary>
      <returns>由警告标识符数字部分所指定的一条或多条要取消显示的警告。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.DocumentationFile">
      <summary>打开文档注释处理，并获取或设置输出文档 XML 文件。</summary>
      <returns>输出文档 XML 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ErrorReport">
      <summary>获取或设置一个字符串值，该值指定任务将如何报告内部编译器错误。</summary>
      <returns>指定任务将如何报告内部编译器错误的字符串值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.Execute">
      <summary>在编译器完成后，重写执行因此我们可以移动 PDB 文件（如果我们需要）。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.GenerateDocumentation">
      <summary>获取或设置一个布尔值，该值指定是否将文档注释处理到一个 XML 文件。</summary>
      <returns>
        <see langword="true" /> 如果<c>Vbc</c>任务文档注释处理到一个 XML 文件; 否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.GenerateFullPathToTool">
      <summary>返回工具的完整文件路径。</summary>
      <returns>工具的完整文件路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Imports">
      <summary>获取或设置要从中导入命名空间的项集合。</summary>
      <returns>要从中导入命名空间的项集合。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.InitializeHostObject">
      <summary>返回用于指示下一步操作的宿主对象初始化状态值。</summary>
      <returns>用于指示下一步操作的宿主对象初始化状态值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.LangVersion">
      <summary>获取或设置语言版本。</summary>
      <returns>语言版本。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>此方法截获要记录的来自 VBC 的 STDOUT 的行。</summary>
      <param name="singleLine">从 vbc 编译器的 STDOUT 捕获的单行</param>
      <param name="messageImportance">消息的重要性：高、低或正常</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ModuleAssemblyName">
      <summary>获取或设置包含此模块的程序集的名称。</summary>
      <returns>包含此模块的程序集的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoStandardLib">
      <summary>获取或设置一个布尔值，指定编译器是否不应该引用标准库。</summary>
      <returns>如果编译器不应该引用标准库，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoVBRuntimeReference">
      <summary>获取或设置一个布尔值，该值指定编译器是否应该在不引用 Visual Basic 运行库的情况下进行编译。</summary>
      <returns>如果编译器应该在不引用 Visual Basic 运行库的情况下进行编译，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.NoWarnings">
      <summary>获取或设置一个布尔值，该值指定任务是否将取消显示所有警告。</summary>
      <returns>如果任务将取消显示所有警告，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionCompare">
      <summary>获取或设置一个字符串值，该值指定如何进行字符串比较。</summary>
      <returns>指定如何进行字符串比较的字符串值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionExplicit">
      <summary>获取或设置一个布尔值，该值指定是否要求显式声明变量。</summary>
      <returns>如果要求显示变量声明，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionInfer">
      <summary>获取或设置一个布尔值，该值指示是否在变量声明中使用局部类型推理。</summary>
      <returns>
        <see langword="true" /> 如果<c>Vbc</c>任务将使用局部类型推理的变量声明; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionStrict">
      <summary>获取或设置一个布尔值，该值指定任务是否强制执行严格的类型语义来限制隐式类型转换。</summary>
      <returns>如果任务强制执行严格的类型语义，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.OptionStrictType">
      <summary>获取或设置 <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> 属性的值。 当前，该值可以设置为“custom”并指定任务是否针对隐式收缩类型转换生成警告。</summary>
      <returns>
        <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> 属性的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.PdbFile">
      <summary>.Pdb 文件的路径。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.RemoveIntegerChecks">
      <summary>获取或设置一个布尔值，该值指示是否禁用整数溢出错误检查。</summary>
      <returns>
        <see langword="true" /> 如果<c>Vbc</c>任务将禁用整数溢出错误检查; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.RootNamespace">
      <summary>获取或设置所有类型声明的根命名空间。</summary>
      <returns>所有类型声明的根命名空间。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.SdkPath">
      <summary>获取或设置 mscorlib.dll 和 microsoft.visualbasic.dll 的位置。</summary>
      <returns>mscorlib.dll 和 microsoft.visualbasic.dll 的位置。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.TargetCompactFramework">
      <summary>获取或设置一个布尔值，它指定是否面向 .NET Compact Framework。</summary>
      <returns>
        <see langword="true" /> 如果<c>Vbc</c>任务应面向.NET Compact Framework; 否则为<see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.ToolName">
      <summary>获取工具可执行文件的名称 (vbc.exe)。</summary>
      <returns>工具可执行文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.UseHostCompilerIfAvailable">
      <summary>获取或设置一个布尔值，该值指定是否使用进程内编译器对象（如果可用）。 仅由 Visual Studio 使用。</summary>
      <returns>
        <see langword="true" /> 如果<c>Vbc</c>任务将使用进程内编译器对象，如果可用; 否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Vbc.ValidateParameters">
      <summary>验证输入参数和日志错误或警告（如果有）。 返回一个布尔值，该值指示是否应继续执行任务。</summary>
      <returns>如果应继续执行任务，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.VBRuntime">
      <summary>指定是否用默认 Visual Basic 运行时编译。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.VBRuntimePath">
      <summary>到要使用的 Visual Basic 运行时的路径。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.Verbosity">
      <summary>获取或设置编译器输出的详细级别（可以为 <c>Quiet</c>、<c>Normal</c> 或 <c>Verbose</c>）。</summary>
      <returns>编译器的详细级别的输出。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.WarningsAsErrors">
      <summary>获取或设置将被视为错误的警告的列表。</summary>
      <returns>将被视为错误的警告的列表。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Vbc.WarningsNotAsErrors">
      <summary>获取或设置不被视为错误的警告的列表。</summary>
      <returns>不被视为错误的警告的列表。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Warning">
      <summary>实现 <c>Warning</c> 任务。 使用项目文件中的 <c>Warning</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 Warning 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Warning.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Warning" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.Code">
      <summary>获取或设置警告代码。</summary>
      <returns>警告代码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Warning.Execute">
      <summary>执行 <c>Warning</c> 任务。</summary>
      <returns>在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.File">
      <summary>相关文件（如果有）。 如果未提供任何文件，则将使用包含“警告”任务的文件。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.HelpKeyword">
      <summary>获取或设置与警告关联的 Help 关键字。</summary>
      <returns>与警告关联的 Help 关键字。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Warning.Text">
      <summary>获取或设置 MSBuild 记录的警告文本。</summary>
      <returns>MSBuild 记录的警告文本。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.WinMDExp">
      <summary>将托管程序集导出到 windows 运行时的元数据。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.WinMDExp.#ctor">
      <summary>创建 WinMDExp 的实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.WinMDExp.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
      <summary>用在执行此工具时使用的所有命令行选项填充所提供的 CommandLineBuilderExtension</summary>
      <param name="commandLine">使用命令行命令进行填充</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.DisabledWarnings">
      <summary>要禁用的警告代码</summary>
      <returns>要禁用的警告代码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WinMDExp.GenerateFullPathToTool">
      <summary>返回要执行的工具的完整路径。</summary>
      <returns>要执行的工具的完整路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.InputDocumentationFile">
      <summary>获取或设置输入文档文件。</summary>
      <returns>输入的文档文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.InputPDBFile">
      <summary>获取或设置输入 PDB 文件。</summary>
      <returns>输入的 PDB 文件中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.OutputDocumentationFile">
      <summary>获取或设置输出文档文件。</summary>
      <returns>输出文档文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.OutputPDBFile">
      <summary>获取或设置输出 PDB 文件。</summary>
      <returns>输出 PDB 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.OutputWindowsMetadataFile">
      <summary>获取或设置输出窗口元数据文件 .winmd。</summary>
      <returns>输出 windows 元数据文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.References">
      <summary>获取或设置一组传递到 winmdexp 工具的引用。</summary>
      <returns>要传递到 winmdexp 工具引用的集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.SdkToolsPath">
      <summary>获取或设置包含此工具的 SDK 目录的路径</summary>
      <returns>SDK 目录路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WinMDExp.SkipTaskExecution">
      <summary>返回一个值，该值指示是否需要执行任务。 在 ValidateParameters 后执行。</summary>
      <returns>若要跳过任务执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.StandardErrorEncoding">
      <summary>获取指定捕获的任务标准错误流的编码值。</summary>
      <returns>指定错误流编码的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.StandardOutputEncoding">
      <summary>获取指定捕获的任务标准输出流的编码值。</summary>
      <returns>指定输出流编码的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.ToolName">
      <summary>获取要执行的工具的名称。</summary>
      <returns>工具名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.TreatWarningsAsErrors">
      <summary>获取或设置一个值，该值指示是否将警告视为错误。</summary>
      <returns>如果应将警告视为错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.UTF8Output">
      <summary>获取或设置一个值，该值指示使用 UTF-8 输出流式编码。</summary>
      <returns>
        <see langword="true" /> 如果应使用 utf-8 输出流编码;否则为<see langword="false" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WinMDExp.ValidateParameters">
      <summary>如果执行应继续，会出现验证参数、日志错误和警告并返回 <see langword="true" />。</summary>
      <returns>如果执行应继续操作，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WinMDExp.WinMDModule">
      <summary>获取或设置要为其生成 WinMDFile 的 WinMDModule。</summary>
      <returns>WinMDModule。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.WriteCodeFragment">
      <summary>生成一个临时代码文件，其中包含指定的生成代码片段。  不会删除该文件。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteCodeFragment.#ctor">
      <summary>创建一个临时代码文件，其中包含指定的生成代码片段。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes">
      <summary>获取或设置要写入的特性。</summary>
      <returns>其值是该属性的完整类型名称的项。 例如，"System.AssemblyVersionAttribute"。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteCodeFragment.Execute">
      <summary>执行 WriteCodeFragment 方法。</summary>
      <returns>如果已写入代码片段，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.Language">
      <summary>获取或设置要生成的代码的语言。</summary>
      <returns>要生成的代码语言。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory">
      <summary>获取或设置生成的代码的目标文件夹（通常为中间文件夹）。</summary>
      <returns>生成代码的目标文件夹。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputFile">
      <summary>获取或设置已生成的文件的路径。</summary>
      <returns>生成文件的路径。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.WriteLinesToFile">
      <summary>实现 <c>WriteLinesToFile</c> 任务。 使用项目文件中的 <c>WriteLinesToFile</c> 元素创建和执行此任务。 有关用法和参数信息，请参阅 <c>WriteLinesToFile</c>WriteLinesToFile 任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteLinesToFile.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.WriteLinesToFile" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.Encoding">
      <summary>获取或设置系统文本编码。 例如：UTF-8。</summary>
      <returns>系统文本编码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.WriteLinesToFile.Execute">
      <summary>执行 <c>WriteLinesToFile</c> 任务。</summary>
      <returns>如果任务成功执行，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.File">
      <summary>获取或设置要将项写入到的文件。</summary>
      <returns>要将项写入到的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.Lines">
      <summary>获取或设置要写入到文件的项。</summary>
      <returns>要写入到文件的项。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.WriteLinesToFile.Overwrite">
      <summary>获取或设置一个布尔值，该值指定任务是否替代文件中的任何现有内容。</summary>
      <returns>如果该任务替代文件中的任何现有内容，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation">
      <summary>封装的命令行参数之间的关系。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.#ctor(System.String,System.String,System.Boolean,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation" /> 类的实例。</summary>
      <param name="argument">参数。</param>
      <param name="value">值。</param>
      <param name="required">
        <see langword="true" />（如果需要）。</param>
      <param name="separator">自变量之间的分隔符。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineArgumentRelation.Separator">
      <summary>在命令行参数中包含分隔符。</summary>
      <returns>包含分隔符的字符串。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineGenerator">
      <summary>生成命令行的类。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.#ctor(Microsoft.Build.Framework.XamlTypes.Rule,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Xaml.CommandLineGenerator" /> 类的新实例。</summary>
      <param name="rule">规则</param>
      <param name="parameterValues">参数值。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AdditionalOptions">
      <summary>包含要包括在命令行上的附加选项的字符串。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.AlwaysAppend">
      <summary>包含字符串以在没有模板时追加到命令行。</summary>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.CommandLineTemplate">
      <summary>包含创建命令行时要使用的模板。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateCommandLine">
      <summary>生成命令行。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch">
      <summary>表示单个命令行工具开关。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch" /> 的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.#ctor(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType)">
      <summary>通过初始化一个 <see cref="T:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch" /> 来保存名称、工具、属性、依赖开关和值的新实例。</summary>
      <param name="toolType">开关的类型。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.AllowMultipleValues">
      <summary>指示是否允许多个值。</summary>
      <returns>如果允许多重值，则为 <see langword="True" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ArgumentRequired">
      <summary>获取或设置指示命令行工具切换中是否需要参数的值。</summary>
      <returns>如果需要参数，则为 <see langword="True" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Arguments">
      <summary>获取或设置命令行工具开关所需的参数。</summary>
      <returns>减少命令行工具开关所需的参数。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.BooleanValue">
      <summary>获取或设置命令行开关的布尔值。</summary>
      <returns>命令行开关的布尔值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Description">
      <summary>获取或设置单个命令行工具开关的说明。</summary>
      <returns>单个命令行工具开关的说明。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.DisplayName">
      <summary>获取或设置开关的显示名称。</summary>
      <returns>开关的显示名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FallbackArgumentParameter">
      <summary>获取或设置回退参数。</summary>
      <returns>回退参数。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.FalseSuffix">
      <summary>获取或设置包含开关是 false 或 negated 时，要使用的后缀。</summary>
      <returns>开关是 false 或 negated 时要使用的后缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IncludeInCommandLine">
      <summary>获取或设置指示命令行中是否包含命令行工具的值。</summary>
      <returns>如果包括命令行中的命令行工具开关，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.IsValid">
      <summary>获取或设置此开关是否有效。</summary>
      <returns>如果该切换有效，则为 <see langword="True" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Name">
      <summary>获取或设置开关的名称。</summary>
      <returns>开关的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Number">
      <summary>获取或设置用于整数类型切换的值。</summary>
      <returns>整数类型开关的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Overrides">
      <summary>获取开关的重写。</summary>
      <returns>开关的重写。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Parents">
      <summary>获取开关的父级。</summary>
      <returns>开关的父级。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Required">
      <summary>获取或设置是否需要此开关。</summary>
      <returns>如果该切换是必需的，则为 <see langword="True" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.ReverseSwitchValue">
      <summary>获取或设置反向切换文本。</summary>
      <returns>逆向切换文本。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Reversible">
      <summary>获取或设置此开关是否可逆。</summary>
      <returns>如果该切换可逆，则为 <see langword="True" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Separator">
      <summary>获取或设置在开关和参数之间包含分隔符。</summary>
      <returns>在开关和其参数之间的分隔符。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.StringList">
      <summary>获取或设置字符串的集合。</summary>
      <returns>字符串的集合。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.SwitchValue">
      <summary>获取或设置用于切换的值。</summary>
      <returns>开关的值。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TaskItemArray">
      <summary>获取或设置源任务项的数组。</summary>
      <returns>任务项的数组。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.TrueSuffix">
      <summary>获取或设置包含开关是 true 时，要使用的后缀。</summary>
      <returns>开关是 true 时要使用的后缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Type">
      <summary>获取或设置开关的类型。</summary>
      <returns>开关的类型。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch.Value">
      <summary>获取或设置开关的值。</summary>
      <returns>开关的值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType">
      <summary>枚举命令行开关的类型。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.Boolean">
      <summary>指示布尔类型。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.Integer">
      <summary>指示整数类型。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.ITaskItemArray">
      <summary>指示任务项数组类型。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.String">
      <summary>指示字符串类型。</summary>
    </member>
    <member name="F:Microsoft.Build.Tasks.Xaml.CommandLineToolSwitchType.StringArray">
      <summary>指示字符串类型的数组。</summary>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.PropertyRelation">
      <summary>表示参数和属性之间的关系。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.PropertyRelation.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Xaml.PropertyRelation" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.PropertyRelation.#ctor(System.String,System.String,System.Boolean)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Xaml.PropertyRelation" /> 类的新实例。</summary>
      <param name="argument">参数。</param>
      <param name="value">该属性的值。</param>
      <param name="required">如果该属性是必需的，则为 <see langword="true" />。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.PropertyRelation.Argument">
      <summary>包含参数名。</summary>
      <returns>名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.PropertyRelation.Required">
      <summary>指示（如果该属性是必需的）。</summary>
      <returns>如果该属性是必需的，则为 <see langword="true" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.PropertyRelation.Value">
      <summary>包含属性的值。</summary>
      <returns>值。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask">
      <summary>表示由 Xaml 任务中心生成的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.#ctor(System.String[],System.Resources.ResourceManager)">
      <summary>初始化 <see cref="T:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask" /> 类的实例。</summary>
      <param name="switchOrderList">按照交换机应出现的顺序排列其列表。</param>
      <param name="taskResources">任务资源。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AcceptableNonZeroExitCodes">
      <summary>获取或设置包含不会导致错误的非零代码数组。</summary>
      <returns>非零代码数组</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitches">
      <summary>获取一组活动工具开关。</summary>
      <returns>活动工具切换集。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ActiveToolSwitchesValues">
      <summary>获取或设置活动工具开关的值。</summary>
      <returns>设置活动工具开关的值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AddActiveSwitchToolValue(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
      <summary>把开关值添加到活动值的列表。</summary>
      <param name="switchToAdd">要添加的交换机。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AdditionalOptions">
      <summary>获取或设置项目文件中指定的任何其他选项。</summary>
      <returns>列出选项的字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.CommandLineTemplate">
      <summary>获取或设置命令行模板。</summary>
      <returns>命令行模板。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.CreateSwitchValue(System.String,System.String,System.String,System.Tuple{System.String,System.Boolean}[])">
      <summary>创建 <see cref="T:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask" /> 开关值。</summary>
      <param name="propertyName">属性名称。</param>
      <param name="baseSwitch">基开关。</param>
      <param name="separator">分隔符。</param>
      <param name="arguments">自变量。</param>
      <returns>已创建的开关值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.Execute">
      <summary>执行该任务，然后关闭创建的事件句柄。</summary>
      <returns>执行的结果。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateCommandLineCommands">
      <summary>如果命令行少于 32k，则将生成该命令行。</summary>
      <returns>所生成的命令。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateFullPathToTool">
      <summary>如果未指定工具路径，则查找工具。</summary>
      <returns>生成的完整路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateResponseFileCommands">
      <summary>创建响应文件命令。</summary>
      <returns>生成的响应文件命令。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.HandleTaskExecutionErrors">
      <summary>处理工具的返回代码。</summary>
      <returns>返回代码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.IsPropertySet(System.String)">
      <summary>指示（如果设置属性）。</summary>
      <param name="propertyName">属性的名称。</param>
      <returns>（如果属性设置为 ），则为 <see langword="true" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReadSwitchMap(System.String,System.String[][],System.String)">
      <summary>检查要设置属性的值，并查找相应的开关。</summary>
      <param name="propertyName">要检查的属性的名称。</param>
      <param name="switchMap">交换机映射。</param>
      <param name="value">该属性的值。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReadSwitchMap2(System.String,System.Tuple{System.String,System.String,System.Tuple{System.String,System.Boolean}[]}[],System.String)">
      <summary>检查要设置属性的值，并查找相应的开关。</summary>
      <param name="propertyName">要检查的属性的名称。</param>
      <param name="switchMap">交换机映射。</param>
      <param name="value">该属性的值。</param>
      <returns>检查的值。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReplaceToolSwitch(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
      <summary>将现有切换替换成指定的同名切换。</summary>
      <param name="switchToAdd">开关的名称。</param>
    </member>
    <member name="P:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ResponseFileEncoding">
      <summary>获取响应文件编码。</summary>
      <returns>响应文件编码。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ValidateInteger(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>检查整数属性以查看其是否在制定范围内。</summary>
      <param name="switchName">要检查此开关的名称。</param>
      <param name="min">最小值。</param>
      <param name="max">最大值。</param>
      <param name="value">该属性的值。</param>
      <returns>
        <see langword="true" />（如果值在指定范围内）。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ValidateParameters">
      <summary>验证参数。</summary>
      <returns>如果这些参数都有效，则为 <see langword="true" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XamlTaskFactory">
      <summary>XAML 任务的任务工厂提供程序。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.#ctor">
      <summary>为 XAML 任务创建任务工厂。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
      <summary>清理给定任务可能已积累的任何上下文或状态。</summary>
      <param name="task">要清理的任务。</param>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
      <summary>创建要使用的任务的实例。</summary>
      <param name="taskFactoryLoggingHost">记录任务上下文中的消息的任务工厂日志记录主机。</param>
      <returns>新的任务工厂。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.FactoryName">
      <summary>获取要在错误消息中使用的此任务工厂的名称。 例如，任务“Mytask”未能从“FactoryName”加载。</summary>
      <returns>此任务工厂的名称</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters">
      <summary>获取任务参数的类型信息。</summary>
      <returns>类型信息。</returns>
    </member>
    <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
      <summary>初始化工厂。</summary>
      <param name="taskName">任务的名称。</param>
      <param name="taskParameters">要传递给该任务的参数。</param>
      <param name="taskElementContents">元素的内容。</param>
      <param name="taskFactoryLoggingHost">记录任务上下文中的消息的任务工厂日志记录主机。</param>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents">
      <summary>获取或设置 UsingTask 主体的内容。</summary>
      <returns>UsingTask 主体的内容。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskName">
      <summary>获取或设置从 XAML 中提取的任务的名称。</summary>
      <returns>任务的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace">
      <summary>获取或设置从 XAML 中提取的任务的命名空间。</summary>
      <returns>任务的命名空间。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskType">
      <summary>获取或设置从 XAML 中提取的任务的类型。</summary>
      <returns>任务类型。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XmlPeek">
      <summary>一个可从 XML 文件返回 XPath 查询指定的值的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPeek.#ctor">
      <summary>创建一个可从 XML 文件返回 XPath 查询指定的值的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPeek.Execute">
      <summary>执行 XMLPeek 任务。</summary>
      <returns>如果转换成功，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.Namespaces">
      <summary>获取或设置 XPath 查询的前缀的命名空间。</summary>
      <returns>命名空间。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.Query">
      <summary>获取或设置 XPath 查询。</summary>
      <returns>XPath 查询中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.Result">
      <summary>获取此任务返回的结果。</summary>
      <returns>结果。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.XmlContent">
      <summary>获取或设置字符串形式的 XML 输入。</summary>
      <returns>XML 输入为字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPeek.XmlInputPath">
      <summary>获取或设置文件路径形式的 XML 输入。</summary>
      <returns>XML 输入文件路径。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XmlPoke">
      <summary>一个可将 XPath 查询指定的值设置到 XML 文件中的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPoke.#ctor">
      <summary>创建一个可将 XPath 查询指定的值设置到 XML 文件中的任务。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XmlPoke.Execute">
      <summary>执行 XMLPoke 任务。</summary>
      <returns>如果转换成功，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.Namespaces">
      <summary>获取或设置 XPath 查询的前缀的命名空间。</summary>
      <returns>XPath 查询前缀的命名空间。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.Query">
      <summary>获取或设置 XPath 查询。</summary>
      <returns>XPath 查询中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.Value">
      <summary>获取或设置输出文件。</summary>
      <returns>输出文件中。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XmlPoke.XmlInputPath">
      <summary>获取或设置文件路径形式的 XML 输入。</summary>
      <returns>XML 输入文件路径。</returns>
    </member>
    <member name="T:Microsoft.Build.Tasks.XslTransformation">
      <summary>使用 XSLT 或编译的 XSLT 转换 XML 输入，并将其输出到一个输出设备或文件。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XslTransformation.#ctor">
      <summary>创建 XML 转换。</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.XslTransformation.Execute">
      <summary>执行 XslTransform 任务。</summary>
      <returns>如果转换成功，则返回 <see langword="true" />；否则，返回 <see langword="false" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.OutputPaths">
      <summary>获取或设置 XML 转换的输出文件。</summary>
      <returns>XML 转换的输出文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.Parameters">
      <summary>获取或设置 XSLT 输入文档的参数。</summary>
      <returns>XSLT 输入文档的参数。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XmlContent">
      <summary>获取或设置字符串形式的 XML 输入。</summary>
      <returns>XML 输入为字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XmlInputPaths">
      <summary>获取或设置 XML 输入文件。</summary>
      <returns>XML 输入的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XslCompiledDllPath">
      <summary>获取或设置编译的 XSLT。</summary>
      <returns>已编译的 XSLT 程序集的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XslContent">
      <summary>获取或设置字符串形式的 XSLT 输入。</summary>
      <returns>XSLT 输入为字符串。</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.XslTransformation.XslInputPath">
      <summary>获取或设置 XSLT 输入文件。</summary>
      <returns>XSLT 输入的文件。</returns>
    </member>
    <member name="T:System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription">
      <summary>创建 <see cref="T:System.Security.Cryptography.RSAPKCS1SignatureFormatter" /> 和 <see cref="T:System.Security.Cryptography.RSAPKCS1SignatureDeformatter" /> 对象。</summary>
    </member>
    <member name="M:System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.#ctor">
      <summary>初始化 <see cref="T:System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>创建具有指定密匙的非对称签名反格式化程序实例。</summary>
      <param name="key">要在反格式化程序中使用的密钥。</param>
      <returns>非对称签名反格式化对象。</returns>
    </member>
    <member name="M:System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>创建具有指定密匙的非对称签名格式化程序实例。</summary>
      <param name="key">要在反格式化程序中使用的密钥。</param>
      <returns>非对称签名格式化对象。</returns>
    </member>
  </members>
</doc>