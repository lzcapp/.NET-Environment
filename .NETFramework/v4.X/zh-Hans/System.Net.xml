<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="E:System.Net.INetworkProgress.ProgressChanged">
      <summary>
              网络进度已更改。
            </summary>
    </member>
    <member name="E:System.Net.INetworkProgress.ProgressCompleted">
      <summary>
              网络进度已完成。
            </summary>
    </member>
    <member name="E:System.Net.INetworkProgress.ProgressFailed">
      <summary>
              网络进度已失败。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
      <summary>
              每当引发 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 中 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 已更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
      <summary>
              每当引发 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> 方法完成。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
      <summary>
              每当引发 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 中 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 已更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
      <summary>
              每当注册的联系人中的某个对象时引发 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对象已更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
      <summary>
              时引发的在线状态 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 中 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 已更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
      <summary>
              订阅的联系人列表更改时引发。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  已释放此对象。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted">
      <summary>
              远程对等方的邀请过程已完成时引发。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged">
      <summary>
              引发此事件每次 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 添加、 更新或删除订阅的终结点上的远程对等。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged">
      <summary>
              时引发 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 中 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 本地主机上的本地对等方发生更改。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged">
      <summary>
              时引发的名称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 本地对等方的本地主机上已更改。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged">
      <summary>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 中 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 本地主机上的本地对等方发生更改。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged">
      <summary>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 已更改的本地主机上本地对等方。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged">
      <summary>
              只要与关联的应用程序会引发此事件 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged">
      <summary>
              终止此事件每次 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged">
      <summary>
              引发此事件每次 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已更改其状态。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted">
      <summary>
              在完成订阅操作时引发。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged">
      <summary>
              使用关联的名称时收到信号 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象的更改。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged">
      <summary>
              当新时终止 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 找到的实例，不再可用，或关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象信息发生更改。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted">
      <summary>
              发出信号时 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 或 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" /> 操作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例已完成。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged">
      <summary>
              发出信号时 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的更改。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
      <summary>
              特定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 的对等名称解析请求完成时发出 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件信号。
            </summary>
    </member>
    <member name="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
      <summary>
              每当发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象时会发出有关此事件的信号，以响应针对特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Cloud.AllLinkLocal">
      <summary>
              返回对 <see cref="T:System.Net.PeerToPeer.Cloud" /> 表示客户端或对等方当前参与的所有链接-本地群。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Cloud.Available">
      <summary>
              返回的静态引用 <see cref="T:System.Net.PeerToPeer.Cloud" /> 表示客户端当前参与的所有可用的云。
            </summary>
    </member>
    <member name="M:System.Net.IPEndPointCollection.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.IPEndPointCollection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)">
      <summary>
              将插入 <see cref="T:System.Net.IPEndPoint" /> 元素插入 <see cref="T:System.Net.IPEndPointCollection" /> 中指定索引处。
            </summary>
      <param name="index">
                应插入 <paramref name="item" /> 的从零开始的索引。
              </param>
      <param name="item">
                <see cref="T:System.Net.IPEndPoint" /> 要插入对象。
                 对于引用类型，该值可以为 <see langword="null" />。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 参数小于零 
                
                  - 或 - 
                
                  <paramref name="index" /> 参数是否大于中的项的当前计数 <see cref="T:System.Net.IPEndPointCollection" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)">
      <summary>
              将替换 <see cref="T:System.Net.IPEndPoint" /> 中指定索引处的元素。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                新 <see cref="T:System.Net.IPEndPoint" /> 位于指定索引处的元素的值。
                 对于引用类型，该值可以为 <see langword="null" />。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="index" /> 参数小于零 
                
                  - 或 - 
                
                  <paramref name="index" /> 参数是否大于中的项的当前计数 <see cref="T:System.Net.IPEndPointCollection" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.IUnsafeWebRequestCreate.Create(System.Uri)">
      <summary>
              初始化新 <see cref="T:System.Net.WebRequest" /> 为指定的 URI 方案。
            </summary>
      <param name="uri">
                所请求资源的 URI。
              </param>
      <returns>
              返回 <see cref="T:System.Net.WebRequest" />。
            
              指定的 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。
            </returns>
    </member>
    <member name="M:System.Net.NetworkProgressChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>
              初始化 <see cref="T:System.Net.NetworkProgressChangedEventArgs" /> 类的新实例。
            </summary>
      <param name="percentage">
                已完成的异步任务的百分比。
              </param>
      <param name="processedBytes">
                已处理的字节数。
              </param>
      <param name="totalBytes">
                总字节数。
              </param>
      <param name="userState">
                唯一的用户状态。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 类型的新实例。
               这会使用序列化云对象所需的数据填充序列化信息对象。
            </summary>
      <param name="info">
                对象的引用，该对象保存反序列化此实例时所需的数据。
              </param>
      <param name="context">
                提供反序列化数据的方式的上下文。
                 也称为序列化数据的源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)">
      <summary>
              执行两个云对象之间的比较区分大小写。
            </summary>
      <param name="other">
                要与此比较云 <see cref="T:System.Net.PeerToPeer.Cloud" />。
              </param>
      <returns>
              <see langword="True" /> 如果 <see cref="T:System.Net.PeerToPeer.Cloud" /> 指定否则标识与当前的相同资源 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)">
      <summary>
              确定是否此对等方的内容 <see cref="T:System.Net.PeerToPeer.Cloud" /> 等同于内容的 <see cref="N:System" /> 对象。
            </summary>
      <param name="obj">
                要与此 <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行比较的 <see cref="T:System.Object" />。
              </param>
      <returns>
              <see langword="True" /> 如果 <see cref="T:System.Net.PeerToPeer.PeerName" /> 和比较对象包含相同的信息; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds">
      <summary>
              获取对等项的集合调用对等方已知的云。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 云所知的调用的对等方对象，它指定对等项的集合。
                如果没有云可用， <see langword="null" /> 返回。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)">
      <summary>
              返回 <see cref="T:System.Net.PeerToPeer.Cloud" /> 具有指定的云名称的对象。
            </summary>
      <param name="cloudName">
                包含的 PNRP 名称 <see cref="T:System.Net.PeerToPeer.Cloud" />。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Cloud" /> 具有指定的云名称的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.Net.PeerToPeer.Cloud" /> 名称未知。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetHashCode">
      <summary>
              重写 <see cref="M:System.Object.GetHashCode" />。
            </summary>
      <returns>
              为当前的哈希代码 <see cref="T:System.Object" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化 <see cref="T:System.Net.PeerToPeer.Cloud" /> 所需的数据填充 <see cref="N:System.Runtime.Serialization" /> 信息对象。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.Cloud" /> 实例所需的数据。
            </summary>
      <param name="info">
                包含序列化的数据与关联 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象。
              </param>
      <param name="context">
                包含与关联的序列化流的目标 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.ToString">
      <summary>
              返回当前的字符串表示 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <returns>
              表示当前 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的字符串。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>
              将 <see cref="T:System.Net.PeerToPeer.Cloud" /> 插入到 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 中的指定索引位置处。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                位于指定索引处的新元素的值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  提供的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 不能为 <see langword="null." />
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>
              替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                待替换元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  提供的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 不能为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>
              将指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 添加到本地对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
            </summary>
      <param name="peerContact">
                要添加到 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="peerContact" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已存在。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerContact" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放指定的 <paramref name="peerContact" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      <paramref name="peerContact" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 无法从其序列化 XML 格式重新构成。
                    
                      无法将本地对等添加到正在构造的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 实例。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>
              创建 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 为指定的实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。
            </summary>
      <param name="peerNearMe">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 将与新关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 为指定的实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerNearMe" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      联系人管理器远程对等方的传入 <paramref name="peerNearMe" /> 无法访问或无法从其读取联系人。
                    
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例传入 <paramref name="peerNearMe" /> 未设置对它的任何终结点。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
      <summary>
              为指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象创建一个连接实例。
            </summary>
      <param name="peerNearMe">
                要关联到新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
              </param>
      <param name="userToken">
                用户定义的 <see cref="T:System.Object" />，它包含 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> 操作的相关信息。
                 它将被传递给异步操作回调进行标识。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="userToken" /> 已存在且正在使用。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerNearMe" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例上没有设置任何终结点。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>
              从本地对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 删除指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <param name="peerContact">
                要从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 移除的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerContact" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
      <summary>
              从本地对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中删除与指定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <param name="peerName">
                要从 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中删除的与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  无法在联系人管理器中找到与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象之前让 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> 对其进行了调用，并且不能用于将来的操作。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
      <summary>
              返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的指定对象的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。
            </summary>
      <param name="peerName">
                <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 要从中检索。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 使用所提供关联 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      中找不到联系人 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
                    
                      无法获取所提供的联系人 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
      <summary>
              返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> ，其中包含其中的所有联系人 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 远程对等方。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> 其中包含其中的所有联系人 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 远程对等方。
            
              如果联系人管理器为空，然后返回的集合大小为零 (0) 是。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  此方法尝试枚举时返回了无效的值 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 在此对等方联系集合。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>
              更新与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的数据。
            </summary>
      <param name="peerContact">
                要更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <exception cref="T:System.ArgumentException">
                      在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerContact" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 类型。
            </summary>
      <param name="serializationInfo">
                对包含要反序列化此实例所需的数据的对象引用。
              </param>
      <param name="streamingContext">
                用于反序列化数据提供了一种方法的上下文。
                 也称为序列化的数据源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象占用的非托管资源并（可选）释放托管资源。
            </summary>
      <param name="disposing">
                设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)">
      <summary>
              执行区分大小写的比较，当前 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 和指定的对等方。
            </summary>
      <param name="other">
                一个 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 实例要与此实例进行比较。
              </param>
      <returns>
              返回 <see langword="true" /> 如果提供 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 实例具有相同 <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" /> 为此对等方实例，否则为 <see langword="false" />。
               此方法也返回 <see langword="false" /> 如果等参数为 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 时所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
      <summary>
              从本地缓存中获取数据对象的集合。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对等方或指定的此实例终结点的集合。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  调用方未订阅到终结点，或尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  该方法不能完成由于基础的对等协作基础结构中出现错误。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 关联与所提供对象 <see cref="T:System.Guid" /> 从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />。
            </summary>
      <param name="objectId">
                <see cref="T:System.Guid" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 要从集合中检索对象
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 关联与所提供对象 <see cref="T:System.Guid" />。
               如果未找到的对象，被返回一个大小为零 (0)
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  对象 ID 是 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  调用方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 或尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 针对它。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  从对等方获取对象的信息时出错。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              获取可用状态信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <param name="peerEndPoint">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 为其检索状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 对象，其中包含可用的终结点的状态信息是否可用; 否则为它是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="peerEndPoint" /> 不包含有效的终结点。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerEndPoint" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已释放，不能在当前对等操作中使用。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  从对等方检索状态信息时出错。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Invite">
      <summary>
              发送到的邀请 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 以启动特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 从收到邀请的对等方。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      邀请过程中出错。
                    
                      当前正在执行的应用程序未注册到对等协作基础结构。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>
              发送到的邀请 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 以启动特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="applicationToInvite">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 为发送的邀请。
              </param>
      <param name="message">
                要向应用程序邀请以及远程对等方发送的消息。
                  该消息可以是不能超过 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                用户定义的数据 blob 将与邀请相关联。
                  其大小可能会不能超过 16384 个字节。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 从收到邀请的对等方。
            </returns>
      <exception cref="T:System.ArgumentException">
                  应用程序未注册的协作。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="invitationData" /> 大于 16384 个字节。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      邀请过程中出错。
                    
                      当前正在执行的应用程序未注册到对等协作基础结构。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>
              开始异步邀请操作，该操作会向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启用特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="applicationToInvite">
                要向其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
              </param>
      <param name="message">
                要与应用程序邀请一起发送到远程对等方的消息。
                 此消息的最大大小为 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                与邀请关联的用户定义的数据 Blob。
                  其大小不能超过 16,384 字节。
              </param>
      <param name="userToken">
                要传递给异步操作回调进行标识的用户定义的对象。
                 此所需参数在正在进行的所有异步邀请操作中必须唯一。
              </param>
      <exception cref="T:System.ArgumentException">
                  应用程序未注册到协作基础结构。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="userToken" /> 为 <see langword="null." />
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="invitationData" /> 大于 16,384 字节。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      在邀请过程中出现错误。
                    
                      当前正在执行的应用程序未注册到协作基础结构。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)">
      <summary>
              开始异步邀请操作，该操作会向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启用特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="userToken">
                要传递给异步操作回调进行标识的用户定义的对象。
                 此所需参数在正在进行的所有异步邀请操作中必须唯一。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="userToken" /> 为 <see langword="null." />
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      在邀请过程中出现错误。
                    
                      当前正在执行的应用程序未注册到协作基础结构。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)">
      <summary>
              取消使用 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> 方法发送的邀请。
            </summary>
      <param name="userToken">
                要传递给 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> 操作回调进行标识的用户定义的对象。
                 此所需参数在正在进行的所有异步邀请操作中必须唯一。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="userToken" /> 参数不能为 <see langword="null." />
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  异步邀请不是未完成的。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)">
      <summary>
              引发 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件。
            </summary>
      <param name="e">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，它包含要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件关联的代理的事件数据。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化指定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例所需的数据填充 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 类实例。
               派生的类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.ToString">
      <summary>
              返回 <see cref="T:System.String" /> 表示 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 表示 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 类型的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>
              使用提供的应用程序 ID、说明、范围和数据元素初始化新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
            </summary>
      <param name="id">
                用户指定的 <see cref="T:System.Guid" />，用于标识 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
              </param>
      <param name="description">
                对等应用程序的 <see cref="T:System.String" /> 说明。
              </param>
      <param name="data">
                与对等应用程序关联的二进制数据对象，例如小图像。
              </param>
      <param name="path">
                对等应用程序的本地文件系统路径。
              </param>
      <param name="commandLineArgs">
                用于启动对等应用程序的命令行参数。
              </param>
      <param name="peerScope">
                应用程序将注册对等协作的范围。
              </param>
      <exception cref="T:System.ArgumentException">
                      二进制数据对象的长度不能小于 1 或大于 16k。
                    
                      将 <paramref name="id" /> 设置为 <see langword="null" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化所需的数据初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 类型的新实例。
            </summary>
      <param name="serializationInfo">
                与 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
              </param>
      <param name="streamingContext">
                与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 相关联的序列化目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象使用的资源。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象占用的非托管资源并（可选）释放托管资源。
            </summary>
      <param name="disposing">
                设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
            </summary>
      <param name="other">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
               此方法也返回 <see langword="false" /> 如果 <paramref name="other" /> 是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 到指定 <see cref="T:System.Object" />。
            </summary>
      <param name="obj">
                <see cref="T:System.Object" /> 来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 是否等于指定的对象实例，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  已释放了 <see cref="T:System.Object" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)">
      <summary>
              确定是否指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象被视为相等。
            </summary>
      <param name="objA">
                第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />    进行比较。
              </param>
      <param name="objB">
                要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
              </param>
      <returns>
              返回 <see langword="true" /> 如果指定的对象具有同一个全局唯一的应用程序 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 和 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />, 、 其他 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode">
      <summary>
              返回的哈希代码 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
            </summary>
      <returns>
              一个 32 位带符号整数哈希代码，用于比较此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用将目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <summary>
              引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> 事件。
            </summary>
      <param name="appChangedArgs">
                <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> 对象包含要传送到 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> 事件委托的数据。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 所需的数据。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
              </param>
      <param name="context">
                此序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString">
      <summary>
              返回一个字符串，包含 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 和 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
            </summary>
      <returns>
              一个字符串，包含 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 和 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例，并用空格分隔。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>
              将新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 元素插入指定索引或键处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引
              </param>
      <param name="item">
                位于指定索引处的元素的新值
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>
              替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                位于指定索引处的元素的新值。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.ToString">
      <summary>
              返回 <see cref="T:System.String" /> 表示的当前值的每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象，并用逗号隔开。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 表示的当前值的每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 中 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />, ，以逗号分隔。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>
              注销与调用对等相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </summary>
      <param name="peerObject">
                要注销的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerObject" /> 参数不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
      <summary>
              获取所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 在本地计算机注册的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> ，其中包含的所有应用程序在本地计算机上注册。
               如果未找到应用程序，被返回一个大小为零 (0)
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  此方法尝试枚举注册到此对等方的应用程序时返回了无效的值。
                   请确保所有应用程序具有有效的注册表值。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>
              获取所有的集合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象在指定的本地计算机注册 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />。
            </summary>
      <param name="type">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 若要返回为指定的应用程序。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> ，其中包含指定的所有应用程序 <paramref name="type" /> 在本地计算机上注册。
               如果未找到应用程序，被返回一个大小为零 (0)
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="type" /> 参数未设置为中的已知值 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 枚举。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  此方法尝试枚举注册到此对等方的应用程序时返回了无效的值。
                   请确保所有应用程序具有有效的注册表值。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects">
      <summary>
              获取所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 由调用对等方与注册实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构在此计算机上的。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 后者包含所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 由调用对等方与注册实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 在本地计算机上的基础结构。
            
              如果注册 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 在本地计算机上未发现实例，则返回一个大小为零 (0)。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  此方法尝试枚举所有可用时返回了无效的值 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe">
      <summary>
              返回的所有集合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 子网上的调用的对等方的当前登录的终结点。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> ，其中包含所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 当前登录到网络邻居范围的终结点。
            
              如果在子网上未发现对等方，则返回大小为零 (0) 的集合。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  对等方未登录到网络邻居范围。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  此方法尝试枚举所有已知的网络邻居终结点时返回了无效的值。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>
              注册指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />，可用于通过调用对等进行协作会话。
            </summary>
      <param name="application">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />，要为其在相关范围（全局、本地和链接-本地）内注册调用对等。
              </param>
      <param name="type">
                要执行的注册类型。
                  应用程序可以仅针对调用对等注册，或针对使用计算机的所有对等注册。
              </param>
      <exception cref="T:System.ArgumentException">
                      传递给 <paramref name="application" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象上的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> 属性为 <see langword="null." />
                    
                      提供的对等应用程序实例具有与已注册应用程序相同的全局唯一 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />。
                        必须先注销现有注册，然后才能向提供的标识符注册新的应用程序。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="application" /> 和 <paramref name="type" /> 参数不能为 <see langword="null" />。
                    必须指定这两个参数。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  未将类型参数设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 枚举中的已知值。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  在调用方登录到基础结构前，无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>
              注册与调用对等相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </summary>
      <param name="peerObject">
                要注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
      <exception cref="T:System.ArgumentException">
                  对象已注册
                </exception>
      <exception cref="T:System.ArgumentNullException">
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 不能为 <see langword="null." />
                    
                      <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> 不能为 <see langword="null." />
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>
              让对等方以指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 登录协作基础结构。
            </summary>
      <param name="peerScope">
                对等方加入 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 活动使用的范围。
              </param>
      <exception cref="T:System.ArgumentException">
                  将 <paramref name="peerScope" /> 设置为 <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="peerScope" /> 参数包含无效枚举值。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>
              从指定范围注销对等方。
            </summary>
      <param name="peerScope">
                由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 指定的范围枚举。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="peerScope" /> 参数包含无效枚举值。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>
              从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中注销指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="application">
                要为调用对等注销的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
              </param>
      <param name="type">
                要为调用对等或计算机上存在的所有对等执行的注销类型。
              </param>
      <exception cref="T:System.ArgumentException">
                  指定应用程序的全局唯一 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  将 <paramref name="application" /> 或 <paramref name="type" /> 参数设置为 <see langword="null." />
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  未将 <paramref name="type" /> 参数设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 中的已知值。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的新实例。
               调用构造函数时，将传递此实例的初始 <see cref="T:System.Security.Permissions.PermissionState" />。
            </summary>
      <param name="state">
                <see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的值之一。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>
              创建并返回当前一份 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Object" /> ，包含当前实例的副本 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>
              表示用于对安全对象进行编码的 XML 对象模型。
            </summary>
      <param name="e">
                用于重新构造权限的 XML 编码。
              </param>
      <exception cref="T:System.ArgumentException">
                      该参数为无效权限元素。
                    
                      该参数不包含有效类型或类。
                    
                      不支持该参数的版本号。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>
              创建并返回的权限，则当前的交集 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定 <paramref name="target" /> 权限。
            </summary>
      <param name="target">
                对权限 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> 与当前权限。
                 它必须与当前权限属于同一类型。
              </param>
      <returns>
              一个新的权限，表示当前的交集 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定 <paramref name="target" /> 权限。
               此新权限是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中) 如果交集为空。
            </returns>
      <exception cref="T:System.ArgumentException">
                  目标参数不是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中) 并不是与当前权限相同的类的实例。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              确定是否当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是指定的一个子集 <paramref name="target" /> 权限。
            </summary>
      <param name="target">
                将要测试子集关系的权限。
                 此权限必须与当前权限属于同一类型。
              </param>
      <returns>
              <see langword="True" /> 如果当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是指定的权限的子集; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  该参数是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中)。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>
              返回值，该值指定是否当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是不受限制。
            </summary>
      <returns>
              <see langword="True" /> 如果当前权限不受限制;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>
              创建的 XML 编码 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 及其当前状态。
            </summary>
      <returns>
              权限的 XML 编码，包括任何状态信息。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>
              创建一个权限，是当前的联合整体 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定 <paramref name="target" /> 权限。
            </summary>
      <param name="target">
                与当前权限合并的权限。
                 它必须与当前权限属于同一类型。
              </param>
      <returns>
              一个新的权限，表示 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> 的当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定的权限。
            </returns>
      <exception cref="T:System.ArgumentException">
                  该参数是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中)。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              使用指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。
            </summary>
      <param name="action">
                指定一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>
              创建并返回一个新的 <see cref="T:System.Security.IPermission" />。
            </summary>
      <returns>
              一个新 <see cref="T:System.Security.IPermission" /> 对象。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              不为此类定义公共构造函数。
            </summary>
      <param name="serializationInfo">
                与 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <param name="streamingContext">
                与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相关联的序列化目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)">
      <summary>
              释放非托管资源，并（可选）释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象占用的托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="True" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
            </summary>
      <param name="other">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例与指定的对象。
            </summary>
      <param name="obj">
                比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例与指定的对象。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
               此方法也返回 <see langword="false" /> 如果传递的参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)">
      <summary>
              确定是否指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例视为相等。
            </summary>
      <param name="objA">
                要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <param name="objB">
                要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)">
      <summary>
              创建 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 基于实例提供的 XML 数据。
            </summary>
      <param name="peerContactXml">
                用于重新构造的 XML 编码 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <returns>
              一个字符串，表示为编码的 XML 对象模型 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  参数不能为 <see langword="null." />
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> 操作
                    
                      参数不是有效 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> 对象。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
      <summary>
              检索 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 到本地缓存中注册的远程对等方的对象。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 从本地缓存。
               如果关联的应用程序找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, ，则返回零 (0) 的大小的集合。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                      调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
                    
                      调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)">
      <summary>
              获取的集合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象具有指定 <see cref="T:System.Guid" /> 从本地缓存。
            </summary>
      <param name="applicationId">
                <see cref="T:System.Guid" /> 要检索的对等应用程序。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 从本地缓存。
               如果没有应用程序找到具有指定 <paramref name="applicationId" />, ，则返回零 (0) 的大小的集合。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                      调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
                    
                      调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              获取与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <param name="peerEndPoint">
                包含与关联的终结点信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <returns>
              与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
               如果应用程序不与指定的关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, ，则返回零 (0) 的大小的集合。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                      调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
                    
                      调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <summary>
              获取与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <param name="peerEndPoint">
                与关联的终结点 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。
              </param>
      <param name="applicationId">
                包含与关联的应用程序信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
              </param>
      <returns>
              与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象的集合。
            
              如果按 ID 标识的应用程序找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, ，或者终结点 ID <see langword="null" /> 或无效，将返回一个大小为零 (0) 的集合。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                      调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
                    
                      调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode">
      <summary>
              返回的哈希代码 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
            </summary>
      <returns>
              32 位有符号整数哈希代码。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 时所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 注册由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 并存储在本地缓存中。
            </summary>
      <param name="peerEndPoint">
                要从中检索对象终结点。
              </param>
      <returns>
              与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
               如果没有应用程序都与该终结点相关联，被返回一个大小为零 (0)
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                      调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
                    
                      调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <summary>
              获取已注册的指定对象的集合，对等方 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 并且在已注册 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 由指定标识 <see cref="T:System.Guid" />。
            </summary>
      <param name="peerEndPoint">
                要从中检索对象终结点。
              </param>
      <param name="objectId">
                <see cref="T:System.Guid" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 要从中检索。
              </param>
      <returns>
              与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
               如果没有应用程序都与该终结点相关联，被返回一个大小为零 (0)
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                      调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
                    
                      调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
      <summary>
              发送的邀请加入到由发件人发起的对等协作。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 从对等方是否收到了邀请。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 当前应用程序不存在。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>
              发送指定的邀请加入到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 赞助商发件人。
            </summary>
      <param name="applicationToInvite">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 为发送的邀请。
              </param>
      <param name="message">
                要向应用程序邀请以及远程对等方发送的消息。
              </param>
      <param name="invitationData">
                用户定义的数据 blob 将与邀请相关联。
                  其大小可能会不能超过 16384 个字节。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 从对等方是否收到了邀请。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 为当前应用程序不存在或为空。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              发送到特定终结点的邀请加入与发件人的邀请的对等协作。
            </summary>
      <param name="peerEndPoint">
                要接收邀请的终结点。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 从收到邀请的对等终结点。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> 操作。
                    
                      当前正在执行的应用程序未注册到对等协作基础结构。
                    
                      <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象无效。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>
              将发送到指定指定的邀请 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 加入到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 赞助商发件人的应用程序。
            </summary>
      <param name="peerEndPoint">
                终结点或向其发送邀请的远程对等方。
              </param>
      <param name="applicationToInvite">
                应用程序将发送邀请。
              </param>
      <param name="message">
                要向应用程序邀请以及远程对等方发送的消息。
                  该消息可以是不能超过 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                用户定义的数据 blob 将与邀请相关联。
                  其大小可能会不能超过 16384 个字节。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 从对等方是否收到了邀请。
            </returns>
      <exception cref="T:System.ArgumentException">
                  中的终结点 <paramref name="PeerEndPoint" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象不能为空。
                    
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 找不到对象 <see langword="null" />。
                    </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 为当前应用程序不存在或为空。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>
              为指定的对等终结点开始异步邀请操作，以加入由邀请的发件人赞助的指定协作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="applicationToInvite">
                要为其发送邀请的应用程序。
              </param>
      <param name="message">
                要与应用程序邀请一起发送到远程对等方的消息。
                  消息的长度不能超过 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                与邀请关联的用户定义的数据 Blob。
                  其大小不能超过 16,384 字节。
              </param>
      <param name="userToken">
                要传递给异步操作回调的用户定义的对象。
                 也用于标识取消的异步操作。
                 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="UserToken" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象不能为 <see langword="null." />
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      当前应用程序的 <see cref="T:System.Guid" /> 不存在或为空。
                    
                      终结点集合为空或 <see langword="null." />
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)">
      <summary>
              为指定的对等终结点开始异步邀请操作，以加入由邀请的发件人赞助的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。
               使用指定的 <see cref="T:System.Object" /> 标识邀请。
            </summary>
      <param name="peerEndPoint">
                要向其发送邀请的终结点或远程对等方。
              </param>
      <param name="userToken">
                要传递给异步操作回调的用户定义的对象。
                 也用于标识取消的异步操作。
                 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。
              </param>
      <exception cref="T:System.ArgumentException">
                      <paramref name="UserToken" /> 不能为 <see langword="null." />
                    
                      <paramref name="peerEndPoint" /> 中的终结点不能为 <see langword="null" />。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerEndPoint" /> 对象不能为 <see langword="null." />
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  当前应用程序的 <see cref="T:System.Guid" /> 不存在或为空。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)">
      <summary>
              为指定的 <paramref name="peerEndPoint" /> 开始一个异步邀请操作，以加入由邀请的发件人赞助的指定协作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <param name="peerEndPoint">
                要向其发送邀请的终结点或远程对等方。
              </param>
      <param name="message">
                要与应用程序邀请一起发送到远程对等方的消息。
                  消息的长度不能超过 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                与邀请关联的用户定义的数据 Blob。
                  其大小不能超过 16,384 字节。
              </param>
      <param name="applicationToInvite">
                要为其发送邀请的应用程序。
              </param>
      <param name="userToken">
                要传递给异步操作回调的用户定义的对象。
                 也用于标识取消的异步操作。
                 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。
              </param>
      <exception cref="T:System.ArgumentException">
                      <paramref name="UserToken" /> 不能为 null。
                    
                      由 <paramref name="peerEndPoint" /> 指定的终结点不能为 <see langword="null" />。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象不能为 <see langword="null." />
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)">
      <summary>
              为一个终结点开始一个异步邀请操作，以加入由邀请的发件人赞助的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。
               使用指定的 <see cref="T:System.Object" /> 标识邀请。
            </summary>
      <param name="userToken">
                要传递给异步操作回调的用户定义的对象。
                 也用于标识取消的异步操作。
                 必须在正在进行的所有异步邀请操作中指定此参数且此参数具有唯一性。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="UserToken" /> 不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。
                    
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 不能为 <see langword="null." />
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <summary>
              引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件。
            </summary>
      <param name="appChangedArgs">
                <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> 对象，要将其要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件关联的代理。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <summary>
              当远程对等添加、更新或删除 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 时将引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> 事件。
            </summary>
      <param name="objChangedArgs">
                对象更改的类型，由 <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" /> 指定。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)">
      <summary>
              当对等的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 发生更改时，引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件。
            </summary>
      <param name="presenceChangedArgs">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> 对象，要将其要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件关联的代理。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)">
      <summary>
              引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件。
            </summary>
      <param name="e">
                与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> 对象。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe">
      <summary>
              订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的调用对等方，这样对等方就可接收此后所有与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  调用对等方未登录到网络邻居。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> 操作。
                   失败原因可能是无法与对等方建立 TCP 连接。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)">
      <summary>
              异步订阅调用对等方到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />，这样对等方就可接收此后与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。
            </summary>
      <param name="userToken">
                用户定义的 <see cref="T:System.Object" />，它包含 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 操作的相关信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="UserToken" /> 不能为 <see langword="null." />
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  调用对等方未登录到网络邻居。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 标识符重复。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例所需的数据。
            </summary>
      <param name="info">
                包含序列化的数据与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。
              </param>
      <param name="context">
                包含与关联的序列化流的目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString">
      <summary>
              返回 <see cref="T:System.String" /> 表示形式 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 表示形式 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml">
      <summary>
              将序列化为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 到持久存储或网络传输的 XML 字符串。
            </summary>
      <returns>
              XML 编码 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> 操作。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe">
      <summary>
              删除对 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的订阅，其结果为调用对等方不再接收与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>
              将新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 元素插入指定索引或键处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引
              </param>
      <param name="item">
                位于指定索引处的元素的新值
              </param>
      <exception cref="T:System.ArgumentNullException">
                  提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是 <see langword="null" />
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>
              替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                位于指定索引处的元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是 <see langword="null" />
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.ToString">
      <summary>
              返回 Unicode <see cref="T:System.String" /> 表示的当前值的每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, ，以逗号分隔。
            </summary>
      <returns>
              Unicode <see cref="T:System.String" /> 表示的当前值的每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, ，以逗号分隔。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor">
      <summary>
              生成的新实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 类。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)">
      <summary>
              新实例初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 类中包含的对等方关联的终结点 <see cref="T:System.Net.IPEndPoint" />。
            </summary>
      <param name="endPoint">
                与对等方关联的终结点。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 类中包含的对等方关联的终结点 <see cref="T:System.Net.IPEndPoint" /> 和一个字符串，指定 <paramref name="endPointName" />。
            </summary>
      <param name="endPoint">
                与对等方关联的终结点。
              </param>
      <param name="endPointName">
                指定与关联的名称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="endPoint" /> 参数指定 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="endPoint" /> 指定不是有效的 IPv6 终结点。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 序列化所需的关联参数的实例。
            </summary>
      <param name="serializationInfo">
                与 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
              </param>
      <param name="streamingContext">
                与相关联的序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)">
      <summary>
              释放使用的非托管的资源 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象，并可以选择释放托管的资源。
            </summary>
      <param name="disposing">
                设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </summary>
      <param name="other">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 到指定 <see cref="T:System.Object" />。
            </summary>
      <param name="obj">
                <see cref="T:System.Object" /> 来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 是否等于指定的对象实例，其他 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)">
      <summary>
              确定是否指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象被视为相等。
            </summary>
      <param name="objA">
                第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />    进行比较。
              </param>
      <param name="objB">
                要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode">
      <summary>
              返回的哈希代码 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </summary>
      <returns>
              一个 32 位带符号整数哈希代码，用于比较此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 与序列化指定所需的数据的类实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
               派生的类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)">
      <summary>
              当发生更改时调用 <paramref name="PeerName" /> 由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </summary>
      <param name="nameChangedArgs">
                指定已发生的更改的类型 <paramref name="PeerName" />。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 从序列化的源获取的数据的实例。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString">
      <summary>
              返回 <see cref="T:System.String" /> ，它表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </summary>
      <returns>
              <see cref="T:System.String" /> 表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 到指定的对象。
            </summary>
      <param name="other">
                 要比较的对象。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 是否等于指定的对象。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              插入一个新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 元素插入 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 的指定的索引或键处。
            </summary>
      <param name="index">
                要替换的元素的从零开始的索引
              </param>
      <param name="item">
                指定索引处的元素的新值
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              将替换 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 中指定索引处的元素。
            </summary>
      <param name="index">
                 要替换的元素的从零开始的索引
              </param>
      <param name="item">
                指定索引处的元素的新值
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.ToString">
      <summary>
              返回 <see cref="T:System.String" /> 表示的每个实例的当前值 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, ，以逗号分隔。
            </summary>
      <returns>
              Unicode <see cref="T:System.String" /> 表示的每个实例的当前值 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 类的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 序列化所需的关联参数的实例。
            </summary>
      <param name="serializationInfo">
                与 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
              </param>
      <param name="streamingContext">
                与相关联的序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
      <summary>
              生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象并将其与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与相关联的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  协作基础结构未能创建并关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)">
      <summary>
              生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 从关联的描述性参数 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象并将其与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
            </summary>
      <param name="displayName">
                分配给新创建的联系人的显示名称。
              </param>
      <param name="nickname">
                <paramref name="nickname" /> 要分配给新创建的联系人。
              </param>
      <param name="emailAddress">
                <see cref="T:System.Net.Mail.MailAddress" /> 指定要分配给新创建的联系人的电子邮件地址的对象。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与相关联的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 包含描述性的参数。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  协作基础结构无法创建或更新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>
              生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 从所提供的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <param name="peerEndPoint">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 指定与对等方关联的终结点的对象。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 与相关联的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerEndPoint" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  所引用 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 指定 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)">
      <summary>
              释放使用的非托管的资源 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象，并可以选择释放托管的资源。
            </summary>
      <param name="disposing">
                设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。
            </summary>
      <param name="other">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="other" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例与指定的对象。
            </summary>
      <param name="obj">
                要测试相等的对象。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)">
      <summary>
              确定是否指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例视为相等。
            </summary>
      <param name="objA">
                要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
              </param>
      <param name="objB">
                要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode">
      <summary>
              返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的哈希代码。
            </summary>
      <returns>
              一个 32 位带符号整数哈希代码，用于比较此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 与序列化指定所需的数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
               派生的类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)">
      <summary>
              启动网络操作以检索特定于应用程序、 对象和状态数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。
            </summary>
      <param name="state">
                指定与相关的应用程序、 对象和状态数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
      <summary>
              发送的邀请加入到远程对等方对对等协作应用程序。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，其中包含相关 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 远程对等方所指定的值。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 是 <see langword="null" /> 或 '0' 关联的终结点的值计数。
                    
                      一个 <see cref="T:System.Guid" /> 时尚未与当前对等应用程序相关联。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>
              发送的邀请加入到远程对等方包含的数据的描述或指定应用程序邀请对对等协作应用程序。
            </summary>
      <param name="applicationToInvite">
                指定相关的对等协作应用程序，它们由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
              </param>
      <param name="message">
                要向应用程序邀请以及远程对等方发送的消息。
                  该消息可以是不能超过 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                用户定义的数据 blob 将与邀请相关联。
                  大小被限制为 16k （16384 个字节）。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，其中包含相关 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 远程对等方所指定的值。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="applicationToInvite" /> 参数指定 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      <paramref name="applicationToInvite" /> 参数指定了空 <see cref="T:System.Guid" />。
                    
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 是 <see langword="null" /> 或 '0' 关联的终结点的值计数。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>
              从对等方有关对等协作应用程序的邀请接收邀请响应。
            </summary>
      <param name="applicationToInvite">
                指定由相关的对等协作应用程序信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。
              </param>
      <param name="message">
                要向应用程序邀请以及远程对等方发送的消息。
                 该消息可以是不能超过 255 个 Unicode 字符。
              </param>
      <param name="invitationData">
                用户定义的数据 blob 将与邀请相关联。
                  大小被限制为 16k。
              </param>
      <param name="userToken">
                用户定义对象传递给回调的异步操作进行标识。
                 所有异步邀请操作仍然正在进行中，此参数是必需必须唯一。
              </param>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="applicationToInvite" /> 参数指定 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="userToken" /> 参数指定 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      通过指定的终结点 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 找不到。
                    
                      <paramref name="applicationToInvite" /> 参数指定了空 <see cref="T:System.Guid" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)">
      <summary>
              来自对等方收到邀请响应有关加入对等协作应用程序。
            </summary>
      <param name="userToken">
                用户定义对象传递给回调的异步操作进行标识。
                 所有异步邀请操作仍然正在进行中，此参数是必需必须唯一。
              </param>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="userToken" /> 参数指定 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象未指定有效的 <see cref="T:System.Guid" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)">
      <summary>
              信号 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" /> 事件。
            </summary>
      <param name="e">
                中包含的事件数据 <see cref="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" /> 实例。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData">
      <summary>
              启动网络操作以检索特定于应用程序、 对象和状态数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)">
      <summary>
              启动网络操作以检索特定于应用程序、 对象和状态数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。
            </summary>
      <param name="userToken">
                此方法完成该操作时传递给委托的用户指定的状态对象。
              </param>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="userToken" /> 参数指定 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  之前的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" /> 调用尚未完成。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 从序列化的源获取的数据的实例。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString">
      <summary>
              返回 <see cref="T:System.String" /> ，它表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。
            </summary>
      <returns>
              <see cref="T:System.String" /> 表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>
              插入一个新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 元素插入 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> 的指定的索引或键处。
            </summary>
      <param name="index">
                在该元素所在的从零开始索引。
              </param>
      <param name="item">
                中的指定索引的元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>
              将替换 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 中指定索引处的元素。
            </summary>
      <param name="index">
                在该元素所在的从零开始索引。
              </param>
      <param name="item">
                在指定索引中元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.ToString">
      <summary>
              返回的每个实例的当前值的字符串表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, ，以逗号分隔。
            </summary>
      <returns>
              Unicode 字符串，表示每个实例的当前值 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 类的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Guid,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>
              初始化新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 具有关联的作用域和数据实例。
            </summary>
      <param name="Id">
                为用户定义的标识符 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
      <param name="data">
                包含以下信息的数据 blob <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
                 此参数是有限大小必须小于或等于 16k。
              </param>
      <param name="peerScope">
                在其中指定的范围 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 是要注册。
              </param>
      <exception cref="T:System.ArgumentException">
                  提供给此方法的参数之一无效。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 序列化所需的关联参数的实例。
            </summary>
      <param name="serializationInfo">
                与 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
      <param name="streamingContext">
                与相关联的序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
      <summary>
              释放所有资源利用 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                设置为 <see langword="true" /> 可释放托管资源和非托管资源；设置为 <see langword="false" /> 只能释放非托管资源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 到指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
            </summary>
      <param name="other">
                <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例来测试相等性。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 指定实例 <paramref name="other" /> 已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)">
      <summary>
              比较 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 到指定的对象。
            </summary>
      <param name="obj">
                 要测试相等的对象。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
            
              提供的实例都有匹配的数据，其他 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  指定的对象 <paramref name="obj" /> 已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)">
      <summary>
              确定是否指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例视为相等。
            </summary>
      <param name="objA">
                要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
      <param name="objB">
                要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
              </param>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 提供实例具有匹配的数据，其他 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetHashCode">
      <summary>
              返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的哈希代码。
            </summary>
      <returns>
              一个 32 位带符号整数哈希代码，用于比较此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 释放实例。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 与序列化指定所需的数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </summary>
      <param name="info">
                <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 要用数据填充的实例。
              </param>
      <param name="context">
                序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <summary>
              发出信号时 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 添加、 更新或被远程对等方中删除具有指定 ID 的实例。
            </summary>
      <param name="objChangedArgs">
                通过指定的对象更改的类型 <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />。
              </param>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 与此更改关联实例已被释放。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 从序列化的源获取的数据的实例。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                序列化的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.ToString">
      <summary>
              返回表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的 <see cref="T:System.String" />。
            </summary>
      <returns>
              表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的 <see cref="T:System.String" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  已释放了 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>
              插入一个新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 元素插入 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 的指定的索引或键处。
            </summary>
      <param name="index">
                在该元素所在的从零开始索引。
              </param>
      <param name="item">
                在指定索引中元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>
              将替换 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 中指定索引处的元素。
            </summary>
      <param name="index">
                在该元素所在的从零开始索引。
              </param>
      <param name="item">
                在指定索引中元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="item" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.ToString">
      <summary>
              返回的每个实例的当前值的字符串表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />, ，以逗号分隔。
            </summary>
      <returns>
              对于 PeerObject，用逗号分隔每个实例表示的当前值的字符串。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor">
      <summary>
              初始化的新默认实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 对象。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor(System.Net.PeerToPeer.Collaboration.PeerPresenceStatus,System.String)">
      <summary>
              初始化的实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 包括一个描述状态本地对等方的 Unicode 字符串的对象。
            </summary>
      <param name="presenceStatus">
                 对等方的状态。
              </param>
      <param name="description">
                 存在状态的说明。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 时所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。
            </summary>
      <param name="info">
                对象的引用，该对象保存反序列化此实例时所需的数据。
              </param>
      <param name="context">
                提供反序列化数据的方式的上下文。
                 也称为序列化数据的源。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  一个或多个参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
      <summary>
              使用提供的完全限定对等名称 <see cref="T:System.Net.PeerToPeer.PeerName" /> 值初始化类型 <see cref="T:System.String" /> 的新对象。
            </summary>
      <param name="remotePeerName">
                包含要作为 <see cref="T:System.Net.PeerToPeer.PeerName" /> 实例进行编码的对等名称。
              </param>
      <exception cref="T:System.ArgumentException">
                  提供的 <see cref="T:System.String" /> 不是有效的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="remotePeerName" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 类的新实例。
            </summary>
      <param name="classifier">
                <see cref="T:System.String" />，其包含要作为 <see cref="T:System.Net.PeerToPeer.PeerName" /> 进行编码的对等名。
              </param>
      <param name="peerNameType">
                一个 <see cref="T:System.Net.PeerToPeer.PeerNameType" /> 枚举值，用于指定要创建的对等名的类型。
              </param>
      <exception cref="T:System.ArgumentException">
                  <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> 包含一个或多个非法字符。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  一个或多个参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      无法检索用作 <see cref="T:System.Net.PeerToPeer.PeerName" /> 基础的默认标识。
                    
                      无法创建 <see cref="T:System.Net.PeerToPeer.PeerName" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
      <summary>
              创建一个新实例的指定 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 对象替换指定的对等的主机名。
            </summary>
      <param name="peerHostName">
                一个字符串，其中包含 DNS 限定的主机名称。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象，表示指定的对等主机名。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.String" /> 提供不是有效的对等主机名称字符串。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />   是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 无法创建所提供的 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
      <summary>
              创建一个新 <see cref="T:System.Net.PeerToPeer.PeerName" /> 通过替换 <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> 定义对提供的字段 <see cref="T:System.Net.PeerToPeer.PeerName" /> 用指定的分类器的字符串值。
            </summary>
      <param name="peerName">
                <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象在其上设置新的分类器字符串值。
              </param>
      <param name="classifier">
                <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> 设置对返回 <see cref="T:System.Net.PeerToPeer.PeerName" />。
              </param>
      <returns>
              新 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象，其中包含已更新的分类器。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <see cref="T:System.String" /> 提供不是有效的对等名称分类器。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  一个或多个参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 无法创建所提供的 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
      <summary>
              执行区分大小写的比较，当前 <see cref="T:System.Net.PeerToPeer.PeerName" /> 和指定的对等名称。
            </summary>
      <param name="other">
                要与此比较的对等名称 <see cref="T:System.Net.PeerToPeer.PeerName" />。
              </param>
      <returns>
              返回 <see langword="True" /> 如果指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 标识相同的资源与当前对等名称对象; 否则此方法返回 <see langword="False" />。
            
              此方法也返回 <see langword="False" /> 如果 <paramref name="other" /> 设置为 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
      <summary>
              确定是否此内容 <see cref="T:System.Net.PeerToPeer.PeerName" /> 是否等于另一个对象的内容。
            </summary>
      <param name="obj">
                要与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
              </param>
      <returns>
              <see langword="True" /> 如果 <see cref="T:System.Net.PeerToPeer.PeerName" /> 和比较对象包含相同的信息; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.GetHashCode">
      <summary>
              重写 <see cref="M:System.Object.GetHashCode" /> 方法。
            </summary>
      <returns>
              为当前的哈希代码 <see cref="T:System.Object" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 时所需的数据填充序列化信息对象。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 实例所需的数据。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.ToString">
      <summary>
              返回当前的字符串表示 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。
            </summary>
      <returns>
              一个字符串，表示当前 <see cref="T:System.Net.PeerToPeer.PeerName" />, ，并采用以下格式指定︰ 颁发。
               例如，"0.MyInternetPeer"。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 类的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 类的新默认实例。
            </summary>
      <param name="info">
                对象的引用，该对象保存反序列化此实例时所需的数据。
              </param>
      <param name="context">
                提供反序列化数据的方式的上下文。
                 也称为序列化数据的源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 时所需的数据填充序列化信息对象。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 实例所需的数据。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 实例关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 实例关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <summary>
              将 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 元素插入指定索引处的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                位于指定索引处的新元素的值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  提供的项不能为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <summary>
              替换指定索引处的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。
            </summary>
      <param name="index">
                待替换元素的从零开始的索引。
              </param>
      <param name="item">
                待替换元素的新值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  提供的项不能为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
      <summary>
              使用指定的名称和端口号初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。
            </summary>
      <param name="name">
                要注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。
              </param>
      <param name="port">
                指定要注册的端口号的整数值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="name" /> 参数不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的端口号小于零。
                    端口号必须大于或等于零且小于 65,535 (0xFFFF)。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      已从此主机注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
                    
                      远程对等方不具有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>
              使用指定的对等名称、端口号和 <see cref="T:System.Net.PeerToPeer.Cloud" /> 初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。
            </summary>
      <param name="name">
                要注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。
              </param>
      <param name="port">
                指定要注册的端口号的整数值。
              </param>
      <param name="cloud">
                要在其中注册对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="name" /> 参数不能为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的端口号小于零。
                    端口号必须大于或等于零且小于 65,535 (0xFFFF)。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      已从此主机注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
                    
                      远程对等方不具有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化一个新的可序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象。
            </summary>
      <param name="info">
                对象的引用，该对象保存反序列化此实例时所需的数据。
              </param>
      <param name="context">
                提供反序列化数据的方式的上下文。
                 也称为序列化数据的源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <summary>
              释放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
      <summary>
              释放非托管资源，并（可选）释放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象占用的托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="True" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例所需的数据填充序列化信息对象。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
      <summary>
              获取或设置是否在指定的对等名称 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性注册与一个特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 在主机上。
            </summary>
      <returns>
              如果 <see langword="true" />, ，对等名注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 为对等方主机。
               如果 <see langword="false" />, ，则在注册过程可以开始使用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  不注册已释放的对象。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
      <summary>
              将 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 注册到 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />。
               如果未指定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />，则将自动地址选择和由 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> 属性指定的端口值结合使用。
            </summary>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象此前让 Dispose() 对其进行调用。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已注册。
                      <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法必须用于更新注册。
                    
                      远程对等方不具有指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。
                    
                      未指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 或 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />；必须提供其中一个。
                    
                      消息或数据元素均无效。
                       或者，未设置 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> 或未指定任何数据 blob 或 <see cref="T:System.Net.IPEndPoint" />。
                    </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
      <summary>
              从对等名称注册的所有云中注销 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名称。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  尚未注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。
                   使用空构造函数构造 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象时会出现此种情况。
                   调用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 前必须在此实例中填充 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象此前让 Dispose() 对其进行调用。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例所需的数据。
            </summary>
      <param name="info">
                保存与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例关联的序列化数据。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
      <summary>
              为在特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中注册的节点更新 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />。
               使用属性中指定的信息执行更新。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                      尚未注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。
                      <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名在一个或多个云中注册之前，无法调用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法。
                    
                      在注册相应的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 后，<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名会更改。
                    </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法注册已处理的对象。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  将 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 属性设置为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 类的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
      <summary>
              引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件后，将返回对等解析数据。
            </summary>
      <param name="e">
                一个 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 对象，包含 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件返回的数据。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
      <summary>
              引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件时，将返回对等解析进度数据。
            </summary>
      <param name="e">
                一个 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 对象，它包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件返回的对等名称解析进度信息。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
      <summary>
              解析指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 中调用的对等方已知的所有云。
            </summary>
      <param name="peerName">
                <see cref="T:System.Net.PeerToPeer.PeerName" /> 若要解决。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> ，其中包含所有对等名称记录 (表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象) 与指定的对等名称相关联。
               对于不安全的对等名称，相同 <see cref="T:System.Net.PeerToPeer.PeerName" /> 可以由不同用户在同一个注册 <see cref="T:System.Net.PeerToPeer.Cloud" />, ，并与不同的终结点相关联。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerName" /> 参数设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  指定对等名称无法解析。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
      <summary>
              调用对等方，返回指定的数不超过已知所有群中的指定的对等名称解析 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
            </summary>
      <param name="peerName">
                <see cref="T:System.Net.PeerToPeer.PeerName" /> 若要解决。
              </param>
      <param name="maxRecords">
                最大数 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象以获取从所有 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象提供 <paramref name="peerName" />。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 其大小是否小于或等于 <paramref name="maxRecords" /> 条目。
               此集合包含与关联的对等名称记录 <see cref="T:System.Net.PeerToPeer.PeerName" /> ，已得到解决。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerName" /> 参数设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="maxRecords" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法解析提供的对等名称。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
      <summary>
              解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 在指定 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <param name="peerName">
                <see cref="T:System.Net.PeerToPeer.PeerName" /> 若要解决。
              </param>
      <param name="cloud">
                <see cref="T:System.Net.PeerToPeer.Cloud" /> 用于对等名称解析顺序。
              </param>
      <returns>
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 其中包含所有对等名称记录 (表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象) 与指定的对等名称相关联。
               对于不安全的对等名称，相同 <see cref="T:System.Net.PeerToPeer.PeerName" /> 可以由不同用户在同一个注册 <see cref="T:System.Net.PeerToPeer.Cloud" />, ，并与不同的终结点相关联。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerName" /> 参数设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法解析提供的对等名称。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
      <summary>
              解析指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 在指定 <see cref="T:System.Net.PeerToPeer.Cloud" />, ，返回指定的数不超过 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
            </summary>
      <param name="peerName">
                <see cref="T:System.Net.PeerToPeer.PeerName" /> 若要解决。
              </param>
      <param name="cloud">
                <see cref="T:System.Net.PeerToPeer.Cloud" /> 在其中解析 <paramref name="peerName" />。
              </param>
      <param name="maxRecords">
                对等名称记录对象以获取从指定的云，为指定的最大数 <paramref name="peerName" />。
              </param>
      <returns>
              一个 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 其大小是否小于或等于 <paramref name="maxRecords" /> 条目。
               此集合包含与关联的对等名称记录 <see cref="T:System.Net.PeerToPeer.PeerName" /> ，已得到解决。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="peerName" /> 参数设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="maxRecords" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  无法解析提供的对等名称。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
      <summary>
              在调用对等方已知的所有云中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作，返回不超过 <paramref name="maxRecords" /> 的对等名称条目。
            </summary>
      <param name="peerName">
                要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
              </param>
      <param name="maxRecords">
                为对等名称获取的最大的记录数。
              </param>
      <param name="userState">
                一个用户定义对象，其中包含解析操作的相关信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="maxRecords" /> 参数小于或等于零。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
      <summary>
              在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。
                该解析操作为指定的对等名称所解析的条目不会超过 <paramref name="maxRecords" /> 个。
            </summary>
      <param name="peerName">
                要解析的 <paramref name="peerName" />。
              </param>
      <param name="cloud">
                要在其中解析 <paramref name="peerName" /> 的 <paramref name="cloud" />。
              </param>
      <param name="maxRecords">
                从 <paramref name="cloud" /> 获取的 <paramref name="peerName" /> 的最大数量的记录数。
              </param>
      <param name="userState">
                一个用户定义的对象，其中包含对等名称解析操作的相关信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  提供的一个或多个参数均无效。
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  要成功完成此操作至少需要一个事件处理程序。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="maxRecords" /> 参数小于或等于零。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
      <summary>
              在指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中为指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 开始异步对等名称解析操作。
            </summary>
      <param name="peerName">
                要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
              </param>
      <param name="cloud">
                在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。
              </param>
      <param name="userState">
                一个用户定义的 <see cref="T:System.Object" />，其中包含对等名称解析操作的相关信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
      <summary>
              在调用对等方已知的所有云中为指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 开始异步对等名称解析操作。
            </summary>
      <param name="peerName">
                要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。
              </param>
      <param name="userState">
                一个用户定义的对象，其中包含对等名称解析操作的状态信息。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  将 <paramref name="peerName" /> 和/或 <paramref name="userState" /> 参数设置为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
      <summary>
              取消指定的异步对等名称解析请求。
            </summary>
      <param name="userState">
                向启动解析操作的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 方法实例提供的对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="userState" /> 参数不能为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新默认实例。
            </summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              用序列化数据初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新实例。
            </summary>
      <param name="info">
                对象的引用，该对象持有反序列化对象所需的数据。
              </param>
      <param name="context">
                提供反序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 数据的方式的上下文。
                 也称为序列化数据的源。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)">
      <summary>
              使用提供的消息字符串初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新实例。
            </summary>
      <param name="message">
                提供异常原因的错误消息。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)">
      <summary>
              使用提供的消息字符串和异常初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新实例。
            </summary>
      <param name="message">
                解释 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 原因的错误消息。
              </param>
      <param name="innerException">
                导致当前 <see cref="T:System.Exception" /> 的异常实例。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化对等对象所需的数据。
            </summary>
      <param name="info">
                包含序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 对象所需的信息。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 对象关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 实例所需的数据。
            </summary>
      <param name="info">
                包含序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 实例所需的信息。
              </param>
      <param name="context">
                包含与 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 实例关联的序列化流的目标。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
              初始化具有所提供的初始权限状态的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 类的新实例。
            </summary>
      <param name="state">
                <see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的值之一。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>
              创建并返回当前的相同副本 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />。
            </summary>
      <returns>
              具有 IPermission 接口，其实例都包含一份的当前实例的对象 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                      该参数不是有效 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。
                    
                      不支持参数的版本号。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  该参数是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中)。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>
              通过 XML 编码重新构造具有指定状态的安全对象。
            </summary>
      <param name="e">
                用于重新构造权限的 XML 编码。
              </param>
      <exception cref="T:System.ArgumentException">
                      参数不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。
                    
                      不支持该参数的版本号。
                    </exception>
      <exception cref="T:System.ArgumentNullException">
                  该参数为 <see langword="null" /> 引用（在 Visual Basic 中为 <see langword="Nothing" />）。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>
              创建并返回的权限，则当前的交集 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定的权限。
            </summary>
      <param name="target">
                对权限 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> 与当前权限。
                 它必须与当前权限属于同一类型。
              </param>
      <returns>
              一个新的权限，表示当前的交集 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定的权限。
               此新权限是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中) 如果交集为空。
            </returns>
      <exception cref="T:System.ArgumentException">
                  目标参数不是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中) 并不是与当前权限相同的类的实例。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
              确定是否当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定的权限的子集。
            </summary>
      <param name="target">
                将要测试子集关系的权限。
                 此权限必须与当前权限属于同一类型。
              </param>
      <returns>
              <see langword="True" /> 如果当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定的权限的子集; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  目标参数不是 <see langword="null" /> 引用 (<see langword="Nothing" /> 在 Visual Basic 中) 并不是与当前权限相同的类的实例。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>
              返回值，该值指定是否当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是不受限制。
            </summary>
      <returns>
              <see langword="True" /> 如果当前权限不受限制;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>
              创建的 XML 编码 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 及其当前状态。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.SecurityElement" /> 对象，其中包含权限，包括任何状态信息的 XML 编码。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>
              创建一个权限，是当前的联合整体 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定的权限。
            </summary>
      <param name="target">
                与当前权限合并的权限。
                 它必须与当前权限属于同一类型。
              </param>
      <returns>
              一个新的权限，表示 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> 的当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定的权限。
            </returns>
      <exception cref="T:System.ArgumentException">
                  <paramref name="target" /> 参数无效。
                </exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
              使用指定的 <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 类的新实例。
            </summary>
      <param name="action">
                <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>
              创建并返回一个新的 <see cref="T:System.Security.IPermission" />。
            </summary>
      <returns>
              一个新 <see cref="T:System.Security.IPermission" /> 对象。
            </returns>
    </member>
    <member name="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 类的新实例。
            </summary>
      <param name="peerNameRecordCollection">
                与已解析的对等名称关联的集合。
              </param>
      <param name="error">
                如果出现错误，则返回异常。
              </param>
      <param name="canceled">
                如果 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作被取消，则为 <see langword="True" />；否则为 <see langword="False" />。
              </param>
      <param name="userToken">
                <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作启动时指定的用户令牌。
              </param>
    </member>
    <member name="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)">
      <summary>
              初始化 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 类的新实例。
            </summary>
      <param name="peerNameRecord">
                要查找的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
              </param>
      <param name="userToken">
                启动 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作时，提供了唯一的用户状态对象。
              </param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor(System.Uri,System.Net.IPAddress)">
      <summary>
              初始化 <see cref="T:System.Net.Sockets.HttpPolicyDownloaderProtocol" /> 类的新实例。
            </summary>
      <param name="appUri">
                承载应用程序的 URI。
              </param>
      <param name="address">
                IP 地址将运行应用。
              </param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort">
      <summary>
              中止策略文件的下载。
            </summary>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(System.Net.Sockets.SecurityCriticalAction)">
      <summary>
              开始下载的策略文件。
            </summary>
      <param name="callback">
                用于提供重要的安全操作的回调函数。
              </param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(System.IAsyncResult)">
      <summary>
              用于接收结果下载回调函数。
            </summary>
      <param name="ar">
                <see cref="T:System.IAsyncResult" /> 异步操作完成时接收结果。
              </param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(System.IAsyncResult)">
      <summary>
              要读取的策略文件的读的回调函数。
            </summary>
      <param name="ar">
                <see cref="T:System.IAsyncResult" /> 异步操作完成时接收结果。
              </param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(System.Net.IUnsafeWebRequestCreate)">
      <summary>
              寄存器的对象创建不安全 <see cref="T:System.Net.WebRequest" /> 到统一资源标识符 (URI)。
            </summary>
      <param name="creator">
                要创建不安全的对象 <see cref="T:System.Net.WebRequest" />。
              </param>
    </member>
    <member name="M:System.Net.Sockets.SocketPolicy.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.Sockets.SocketPolicy" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>
              创建一个新 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP 客户端都可以订阅一组地址并从任何源接收数据报。
            </summary>
      <param name="groupAddress">
                此接收器要订阅的多播组地址。
              </param>
      <param name="localPort">
                此接收器要绑定到的本地端口。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="groupAddress" /> 为 <see langword="null" />。
                   reference
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="localPort" /> 小于 0- <paramref name="localPort" /> 大于 65535。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>
              将绑定套接字并开始多播组以允许从任何组参与者接收的数据报的联接运算。
            </summary>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  已经联接多播组，或联接操作正在进行。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始执行从已联接的多播组接收数据包的操作，并在来自任何发送方的数据包到达组时调用指定的回调。
            </summary>
      <param name="buffer">
                用于存储已接收数据的缓冲区。
              </param>
      <param name="offset">
                应存储数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。
              </param>
      <param name="count">
                要接收并存储在 <paramref name="buffer" /> 中的最大字节数。
              </param>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="offset" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0
                
                  - 或 - 
                
                  <paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>
              开始执行向指定目标发送单播数据包的操作。
            </summary>
      <param name="buffer">
                包含要发送的数据的缓冲区。
              </param>
      <param name="offset">
                要从中读取待发送数据的从 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。
              </param>
      <param name="count">
                要从 <paramref name="buffer" /> 发送的字节数。
              </param>
      <param name="remoteEndPoint">
                要向其发送数据包的远程终结点。
              </param>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="offset" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始执行将数据包发送到已联接的多播组的操作，并在已将数据包发送到组时调用指定的回调。
            </summary>
      <param name="buffer">
                包含要发送的数据的缓冲区。
              </param>
      <param name="offset">
                要从中读取待发送数据的从 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。
              </param>
      <param name="count">
                要从 <paramref name="buffer" /> 发送的字节数。
              </param>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="offset" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
      <summary>
              阻止源，从而不再接收源自它的多播数据包。
            </summary>
      <param name="sourceAddress">
                要阻止的源地址。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
      <summary>
              离开多播组并释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 类和基础 <see cref="T:System.Net.Sockets.Socket" /> 的当前实例所使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>
              完成多播组的异步联接组操作。
            </summary>
      <param name="result">
                异步联接操作的结果。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>
              完成从已联接的多播组接收数据包的异步操作并提供接收到的信息。
            </summary>
      <param name="result">
                异步接收操作的结果。
              </param>
      <param name="source">
                从中接收数据包的源终结点。
              </param>
      <returns>
              存储在传递给 <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法的缓冲区参数中的消息长度（以字节为单位）。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
      <summary>
              完成向指定目标发送单播数据包的操作。
            </summary>
      <param name="result">
                异步发送操作的结果。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
      <summary>
              完成将数据包发送到多播组的操作。
            </summary>
      <param name="result">
                异步发送操作的结果。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
      <summary>
              取消阻止以前通过调用 <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> 方法阻止的源，以便接收来自该源的多播数据包。
            </summary>
      <param name="sourceAddress">
                要取消阻止的源的地址。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
      <summary>
              创建一个可以订阅组地址并从单一源接收数据报的新 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP 客户端。
            </summary>
      <param name="sourceAddress">
                此接收器要订阅的发送器源地址。
              </param>
      <param name="groupAddress">
                此接收器要订阅的多播组地址。
              </param>
      <param name="localPort">
                此接收器要绑定到的本地端口。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="sourceAddress" /> 和 <paramref name="groupAddress" /> 必须为相同地址族。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="sourceAddress" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                
                  - 或 -
                
                  <paramref name="groupAddress" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="localPort" /> 小于 0
                
                  - 或 -
                
                  <paramref name="localPort" /> 大于 65,535。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  <paramref name="localPort" /> 小于 1024
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>
              绑定套接字并开始多播组的联接操作，以便允许接收来自单个源地址的数据报。
            </summary>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  已经联接多播组，或联接操作正在进行。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始执行从已联接的多播组接收数据包的操作，并在来自指定发送器的数据包到达组时调用指定的回叫。
            </summary>
      <param name="buffer">
                用于存储已接收数据的缓冲区。
              </param>
      <param name="offset">
                应存储数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。
              </param>
      <param name="count">
                要接收并存储在 <paramref name="buffer" /> 中的最大字节数。
              </param>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="offset" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  试图访问供接收的套接字时发生错误。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始执行向之前指定的源发送单播数据包的操作。
            </summary>
      <param name="buffer">
                包含要发送的数据的缓冲区。
              </param>
      <param name="offset">
                要从中读取待发送数据的从 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。
              </param>
      <param name="count">
                要从 <paramref name="buffer" /> 发送的字节数。
              </param>
      <param name="remotePort">
                要向其发送数据包的远程端口。
                 通过指定的远程地址 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> 构造函数。
              </param>
      <param name="callback">
                要在此操作完成时调用的回调方法。
              </param>
      <param name="state">
                要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。
              </param>
      <returns>
              返回 <see cref="T:System.IAsyncResult" />。
            
              引用此操作的 <see cref="T:System.IAsyncResult" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  <paramref name="offset" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0
                
                  - 或 -
                
                  <paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。
                
                  - 或 - 
                
                  <paramref name="remotePort" /> 小于 0 或大于 65,535。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
      <summary>
              离开多播组并释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 类和基础 <see cref="T:System.Net.Sockets.Socket" /> 的当前实例所使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>
              完成多播组的异步联接组操作。
            </summary>
      <param name="result">
                异步联接操作的结果。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
      <summary>
              完成从已联接的多播组接收数据包的异步操作并提供接收到的信息。
            </summary>
      <param name="result">
                异步接收操作的结果。
              </param>
      <param name="sourcePort">
                从中接收数据包的源终结点。
              </param>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              存储在传递给 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法的 <paramref name="buffer" /> 参数中的消息的长度（以字节为单位）。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
      <summary>
              完成向单个源发送单播数据包的操作。
            </summary>
      <param name="result">
                异步发送操作的结果。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  尝试访问套接字时出错。
                   有关详细信息，请参阅备注部分。
                </exception>
    </member>
    <member name="P:System.Net.NetworkProgressChangedEventArgs.ProcessedBytes">
      <summary>
              获取已处理的字节数。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              处理的字节数。
            </returns>
    </member>
    <member name="P:System.Net.NetworkProgressChangedEventArgs.TotalBytes">
      <summary>
              获取已传输的字节总数。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              传输的字节总数。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Global">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Cloud" /> 实例，它包含全局 (internet) 范围内对等方。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Cloud" /> 该函数包含通过全局网络范围将通信对等方。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Name">
      <summary>
              获取的对等名 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <returns>
              对等名 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Scope">
      <summary>
              获取对等方的网络作用域 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.PnrpScope" /> 指定当前对等云实例的 PNRP 范围的枚举值。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.ScopeId">
      <summary>
              获取此对等方的标识符的特定 IP 地址 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <returns>
              一个指定为此对等云的作用域特定 ID 的整数值。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerApplication">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 为引发该事件。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 已更新的实例。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerChangeType">
      <summary>
              获取对更改的类型 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 发生。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 枚举值，该值指定已对执行的更改的类型 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerContact">
      <summary>
              获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerEndPoint">
      <summary>
              为其获取的终结点 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 信息已更改。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> ，其中包含已更改的应用程序信息的终结点。
               除非显式指定，否则针对所有引用类型的属性，该参数的默认值为 <see langword="null" />，针对 <see langword="int" /> 类型的属性，该参数的默认值为 0。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 表示本地对等方。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例，表示本地对等方。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
      <summary>
              当设置此属性的值时，作为异步操作的结果不激发的所有事件都将都具有创建特定的线程上回调的关联的事件处理程序 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />。
            </summary>
      <returns>
              对象，它实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口，并由创建它的线程上的事件处理程序同步此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs.PeerContact">
      <summary>
              获取引发事件的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              与事件关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对邀请操作。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 到邀请。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.Name">
      <summary>
              获取新 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <returns>
              获取新 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerContact">
      <summary>
              获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <returns>
              与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerEndPoint">
      <summary>
              获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 与关联 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerChangeType">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> ，它指定已发生的更改的类型 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 指定已发生的更改的类型。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerContact">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 取消对哪个对象已更改信息。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 依据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 信息已更改。
                如果该终结点没有关联的联系人 <see langword="null" /> 返回。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerEndPoint">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 取消对哪个对象已更改信息。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 依据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 信息已更改。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerObject">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 已添加、 删除或更新。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 已添加、 删除或更新。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline">
      <summary>
              获取一个值，指定如果 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 是当前联机。
            </summary>
      <returns>
              返回 <see langword="true" /> 如果 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 联机在任何与之关联的终结点; 否则为 <see langword="false" />。
            
              除非指定，此属性的默认值是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints">
      <summary>
              获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />。
            </summary>
      <returns>
              与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject">
      <summary>
              当设置此属性的值时，作为异步操作的结果不激发的所有事件都将都具有创建特定的线程上回调的关联的事件处理程序 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />。
            </summary>
      <returns>
              对象，它实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口，并由创建它的线程上的事件处理程序同步此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs">
      <summary>
              获取或设置启动时要使用的命令行参数 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 它表示特定于应用程序启动时要使用的命令行参数 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data">
      <summary>
              获取或设置与当前关联的数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
            </summary>
      <returns>
              数组 <see cref="T:System.Byte" /> 包含二进制对象将与对等应用程序相关联的数据。
               通常，这是一个小图像或 XML blob。
            </returns>
      <exception cref="T:System.ArgumentException">
                  此二进制数据对象的大小小于 0 或大于 4096 字节。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description">
      <summary>
              获取或设置 Unicode <see cref="T:System.String" /> 描述 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 描述应用程序的值。
               除非指定，此属性的默认值是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id">
      <summary>
              获取或设置用户定义 <see cref="T:System.Guid" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。
            </summary>
      <returns>
              <see cref="T:System.Guid" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。
               除非指定，此属性的默认值是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path">
      <summary>
              获取或设置指定的位置的路径 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 可执行文件驻留在本地文件系统。
            </summary>
      <returns>
              <see cref="T:System.String" /> 表示文件路径。
               除非显式指定，此属性的默认值是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope">
      <summary>
              获取或设置作用域在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 注册进行协作。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 在其中指定的范围的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 将相互协作。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject">
      <summary>
              当设置此属性的值时，作为异步操作的结果不激发的所有事件都将都具有创建特定的线程上回调的关联的事件处理程序 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />。
            </summary>
      <returns>
              对象，它实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口，并由创建它的线程上的事件处理程序同步此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data">
      <summary>
              获取或设置与关联的应用程序定义的二进制数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 邀请。
            </summary>
      <returns>
              一个包含数据与关联的字节数组 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message">
      <summary>
              获取或设置与响应关联的消息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请。
            </summary>
      <returns>
              与相关联的短信 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerApplication">
      <summary>
              获取或设置 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 为发送的邀请。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 为其 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请已发送。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerContact">
      <summary>
              获取或设置 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 发送邀请。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 发送邀请。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerEndPoint">
      <summary>
              获取或设置 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 从中 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 邀请已发送。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 从发送的邀请。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> 对象，其中包含因远程对等方的协作请求而启动的应用程序时所需信息。
            </summary>
      <returns>
              如果应用程序启动邀请，由于 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> 对象，其中包含有关发送应用程序邀请，并且本身的邀请的对等方这两种信息是返回; 否则为 <see langword="null" /> 返回。
                此属性的默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager">
      <summary>
              获取包含所有的持久存储区 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 远程对等点的对象。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 包含所有对等联系人对象的远程对等点的对象。
               此属性的默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName">
      <summary>
              获取或设置的名称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 与调用的对等方相关联。
            </summary>
      <returns>
              <see cref="T:System.String" /> 其中包含与调用的对等终结点关联的名称 (作为提供 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 属性)。
               此属性的默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  不能设置 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo">
      <summary>
              获取或设置调用对等方内是否存在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> ，它包含已注册的调用对等方的状态显示信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 会话。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 不能指定 <see langword="null" />
                </exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                      <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> 处于脱机状态
                    
                      无法设置  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
                    </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 调用对等方可以向其中发布状态显示、 功能和对象信息。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 指定调用的对等方将参与的作用域的对象。
               此属性的默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject">
      <summary>
              获取或设置所有事件处理程序的回调对象的事件处理程序。
            </summary>
      <returns>
              与对象 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 实现它，以用于应用程序线程同步。
            
              此属性的默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials">
      <summary>
              获取或设置在 x509 证书 （公钥） 对等方标识由此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
            </summary>
      <returns>
              在 x509 证书 （公钥） 对等方标识由此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。
               此属性的默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName">
      <summary>
              获取或设置一个字符串，它表示的显示名称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 它表示的显示名称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
               除非显式指定，所有属性的默认值是 <see langword="null" /> 对于引用类型。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress">
      <summary>
              获取或设置与关联的电子邮件地址 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see cref="T:System.Net.Mail.MailAddress" /> 对象，包含电子邮件地址与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed">
      <summary>
              获取或设置一个值，指定是否当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 订阅或取消订阅到终结点。
               或者，此属性获取或设置一个值，指定当前对等方宿主或宿主应用程序是否已订阅或取消订阅到此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see langword="True" /> 如果此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 订阅对该终结点， <see langword="false" /> 如果联系人尚未订阅或已取消订阅。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname">
      <summary>
              获取或设置一个字符串，它表示 <paramref name="Nickname" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 它表示的昵称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
               此属性的默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints">
      <summary>
              获取与此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联与此集合 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
               此属性的默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName">
      <summary>
              获取或设置与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
            </summary>
      <returns>
              <see cref="T:System.String" /> 该类表示 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。
               除非显式指定，所有属性的默认值是 <see langword="null" /> 对于引用类型。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed">
      <summary>
              获取或设置一个值，指定是否 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 公开与对等或拥有所有权的应用程序相关联的协作事件 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象所在。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> 枚举值，该值指定是否这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 暴露协作事件属于对等方宿主或宿主应用程序。
               除非显式指定，所有属性的默认值是 <see langword="null" /> 对于引用类型。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  这 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
                
                  对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint">
      <summary>
              获取或设置 <see cref="T:System.Net.IPEndPoint" /> ，其中包含与关联的 IP 地址 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </summary>
      <returns>
              与关联的 IP 地址 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  指定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 端点并不是有效的 IPv6 终结点。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name">
      <summary>
              获取或设置 <see cref="T:System.String" /> 表示的显示的名称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。
            </summary>
      <returns>
              <see cref="T:System.String" /> 表示显示名称的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject">
      <summary>
              当设置此属性的值时，作为异步操作的结果不激发的所有事件都将都具有创建特定的线程上回调的关联的事件处理程序 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />。
            </summary>
      <returns>
              对象，它实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口，并由创建它的线程上的事件处理程序同步此类型的实例。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse.PeerInvitationResponseType">
      <summary>
              获取或设置指定的远程对等方邀请响应 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 类。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 包含来自远程对等方的邀请的响应对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname">
      <summary>
              获取或设置 <see cref="T:System.String" /> 表示的昵称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。
            </summary>
      <returns>
              <see cref="T:System.String" /> 它表示的昵称 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerChangeType">
      <summary>
              获取对更改的类型 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 出现的对象。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 指定的更改类型的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 发生的实例。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerNearMe">
      <summary>
              获取实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 已更改。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 已更改的对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.Data">
      <summary>
              获取或设置与关联的描述性数据 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对对等协作应用程序的实例。
            </summary>
      <returns>
              描述性数据 （如文本或一个小图像） 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  已释放了 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
                </exception>
      <exception cref="T:System.ArgumentException">
                  提供给此方法的参数之一无效。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id">
      <summary>
              获取或设置 <see cref="T:System.Guid" /> 与关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
            </summary>
      <returns>
              <see cref="T:System.Guid" /> 与相关联 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
            
              。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 释放实例。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.PeerScope">
      <summary>
              获取或设置 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 顺序 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 注册实例。
            </summary>
      <returns>
              在其中指定的范围的 PeerScope <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 注册。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  已释放了 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject">
      <summary>
              获取或设置用于封送发出的事件处理程序调用的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例更改。
            </summary>
      <returns>
              实现对象 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口。
               此对象用于事件处理程序同步。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  调用对象已被释放。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.DescriptiveText">
      <summary>
              获取或设置本地对等方进一步描述状态的 Unicode 字符串。
            </summary>
      <returns>
              描述对等方状态的 Unicode 字符串。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus">
      <summary>
              获取或设置本地对等方的状态。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> 指定对等方状态的枚举。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerChangeType">
      <summary>
              指定对等方状态已发生的更改的类型。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 包含指定的对等方状态已发生的更改的类型的数据对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerContact">
      <summary>
              指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 上已更改的状态信息。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与相关联的对象 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 上已更改的状态信息。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerEndPoint">
      <summary>
              指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 上已更改的状态信息。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 在其上已更改的状态信息。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerPresenceInfo">
      <summary>
              指定已更改的状态显示信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 提供的字符串以及 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 描述已更新的状态。
            </summary>
      <returns>
              更改的状态信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 和描述已更新的状态的字符串。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs.PeerEndPoint">
      <summary>
              指定更新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。
            </summary>
      <returns>
              已更新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象，其中包含将对等终结点数据。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerContact">
      <summary>
              指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 为其请求订阅。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 为其请求订阅的对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerNearMe">
      <summary>
              指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 为其请求订阅。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 为其请求订阅的对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerChangeType">
      <summary>
              指定已发生的更改的类型。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 在订阅列表上执行指定的更改的类型的枚举。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerContact">
      <summary>
              指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 用于更改订阅列表。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 其订阅列表已发生更改的对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerEndPoint">
      <summary>
              指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对于订阅通知已收到。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 其订阅列表已发生更改的对象。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.Authority">
      <summary>
              返回一个字符串，指定 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> 由此 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。
            </summary>
      <returns>
              该字符串包含指定的身份验证部分 <see cref="T:System.Net.PeerToPeer.PeerName" />。
               对于安全的对等名称，此属性包含 40 个字符的十六进制字符串形式的公钥。
               对于不安全的对等名称，此属性设置为零 (0)。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.Classifier">
      <summary>
              返回一个字符串，其中包含有关对等的分类器 <see cref="T:System.Net.PeerToPeer.PeerName" />。
            </summary>
      <returns>
              该字符串包含用来标识的对等名称的分类器部分 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 或内部 PNRP 解析 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            
              除非显式指定，否则针对所有引用类型的属性，该参数的默认值为 <see langword="null" />，针对 <see langword="int" /> 类型的属性，该参数的默认值为 0。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.IsSecured">
      <summary>
              获取一个布尔值，指定它是否是安全的对等名称。
            </summary>
      <returns>
              如果 <see langword="true" />, ，此对等名称使用私钥保护密钥 / 公钥对。
               其名称包含该对等计算机的用户证书的公钥的安全哈希算法 (SHA) 哈希。
               否则为如果 <see langword="false" />, ，对等名称有没有关联的标识。
            
              除非显式指定，否则针对所有引用类型的属性，该参数的默认值为 <see langword="null" />，针对 <see langword="int" /> 类型的属性，该参数的默认值为 0。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.PeerHostName">
      <summary>
              获取对等主机的名称。
               这是 DNS 编码版本 <see cref="T:System.Net.PeerToPeer.PeerName" /> 这等同于 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 在于它们都是标识符。
                这两个区别在于可视化表示形式。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 值，该值的对等主机的名称。
               除非显式指定，所有属性的默认值是 <see langword="null" /> 对于引用类型。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.Comment">
      <summary>
              获取或设置有关的其他信息 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
            </summary>
      <returns>
              与关联的注释 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
               此属性的默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentException">
                  要设置的注释是大于 39 个 Unicode 字符或少于 1 个字符。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  要设置的注释 <see langword="null." />
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.Data">
      <summary>
              获取或设置应用程序定义的二进制数据 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
            </summary>
      <returns>
              包含与此项关联的二进制数据的字节数组。
               此属性的默认值是空 （长度为零） 数组实例。
            </returns>
      <exception cref="T:System.ArgumentException">
                  要设置的二进制数据数组的长度为 4096 大于或等于或大于 1。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  若要设置的数据 <see langword="null." />
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 对象，其中包含可用于与此关联的对等方的所有终结点 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
            </summary>
      <returns>
              一个包含 <see cref="T:System.Net.IPEndPointCollection" /> 对象的集合的 <see cref="T:System.Net.IPEndPoint" /> 对象。
               这些对象包含在云计算环境相关联的对等方参与其他对等节点的终结点。
               此属性的默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.PeerName">
      <summary>
              获取或设置 <see cref="T:System.Net.PeerToPeer.PeerName" /> 在此 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
               对等名称是一个字符串，用来标识对等资源。
            </summary>
      <returns>
              <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 在此 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。
               此属性的默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
      <summary>
              获取或设置中的信息 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 到此 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 将注册对象。
            </summary>
      <returns>
              类型的对象 <see cref="T:System.Net.PeerToPeer.Cloud" /> ，它指定为其定义此注册的对等群。
               此属性设置为 <see langword="null" /> 默认情况下。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
      <summary>
              获取或设置有关的其他信息 <see cref="T:System.Net.PeerToPeer.PeerName" /> 将与已注册的对象 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
      <returns>
              包含有关其他信息的注释 <see cref="T:System.Net.PeerToPeer.PeerName" /> 联 <see cref="T:System.Net.PeerToPeer.Cloud" />。
               此属性设置为 <see langword="null" /> 默认情况下。
            </returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
                  指定的字符串值将大于 39 个 Unicode 字符。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
      <summary>
              获取或设置应用程序定义的二进制数据 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象。
            </summary>
      <returns>
              包含与此项关联的二进制数据的字节数组。
               此属性设置为 <see langword="null" /> 默认情况下。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> 大于 4096 个字节。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
      <summary>
              获取网络终结点为其注册关联的对等名称的集合。
            </summary>
      <returns>
              <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> 对象，其中包含为其注册关联的对等名称的网络终结点。
               除非显式指定，所有属性的默认值是 <see langword="null" /> 对于引用类型。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
      <summary>
              获取或设置要与对等云注册的对等名称。
            </summary>
      <returns>
              类型的对象 <see cref="T:System.Net.PeerToPeer.PeerName" /> ，其中包含与此相关联的值 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象。
               除非显式指定，所有属性的默认值是 <see langword="null" /> 对于引用类型。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
      <summary>
              获取或设置 TCP/IP 端口号正在注册到对等方使用 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象。
            </summary>
      <returns>
              一个整数值，指示将 TCP 端口号 <see cref="T:System.Net.IPEndPoint" />。
               除非显式指定，否则此属性的默认值为零 (0)。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的端口值小于零。
                    端口号必须大于或等于零且小于 65535 (0xFFFF)。
                </exception>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
      <summary>
              获取或设置一个值，该值指定是否要遍历的对等网格时使用自动终结点选定内容或 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />。
            </summary>
      <returns>
              <see langword="True" /> 如果自动终结点选择是要使用; <see langword="false" /> 如果将使用某些其他方法来确定终结点。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象解析。
            </summary>
      <returns>
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象解析为在响应中找到的一个 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 对特定操作 <see cref="T:System.Net.PeerToPeer.PeerName" />。
            </returns>
    </member>
    <member name="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord">
      <summary>
              获取 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象解析。
            </summary>
      <returns>
              在响应中找到对等名称记录对象 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 对特定操作 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />。
            
              除非显式指定，否则针对所有引用类型的属性，该参数的默认值为 <see langword="null" />，针对 <see langword="int" /> 类型的属性，该参数的默认值为 0。
            </returns>
    </member>
    <member name="P:System.Net.Sockets.HttpPolicyDownloaderProtocol.Result">
      <summary>
              获取套接字策略文件在下载后的结果。
            </summary>
      <returns>
              返回 <see cref="T:System.Net.Sockets.SocketPolicy" />。
            
              已下载的套接字策略文件。
            </returns>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
      <summary>
              获取或设置一个值，指定是否传出多播的数据包将传输到发送应用程序。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            
              一个值，该值指示是否到多播组的传出数据包将传输到发送应用程序。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
      <summary>
              获取或设置大小，以字节为单位的接收缓冲区的 <see cref="T:System.Net.Sockets.Socket" /> 用于对此多路广播的接收操作 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />  实例。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              接收缓冲区的大小（以字节为单位）。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的缓冲区大小小于 0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
      <summary>
              获取或设置大小，以字节为单位的发送缓冲区的 <see cref="T:System.Net.Sockets.Socket" /> 用于对此多路广播的发送操作 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />  实例。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              发送缓冲区的大小（以字节为单位）。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的缓冲区大小小于 0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。
                </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
      <summary>
              获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的接收缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 实例上的多播接收操作。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              接收缓冲区的大小（以字节为单位）。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的缓冲区大小小于 0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
      <summary>
              获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的发送缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 实例上的多播发送操作。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              发送缓冲区的大小（以字节为单位）。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  指定的缓冲区大小小于 0。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未联接多播组。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已释放 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />。
                </exception>
    </member>
    <member name="P:System.Net.UiSynchronizationContext.Current">
      <summary>
              获取当前线程的同步上下文。
            </summary>
      <returns>
              返回 <see cref="T:System.Threading.SynchronizationContext" />。
            
              用于当前线程的同步上下文。
            </returns>
    </member>
    <member name="P:System.Net.UiSynchronizationContext.ManagedUiThreadId">
      <summary>
              获取当前托管线程的唯一标识符。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" />。
            
              一个整数，表示此托管线程的唯一标识符。
            </returns>
    </member>
    <member name="T:System.Net.INetworkProgress">
      <summary>
              提供有关在通过网络发送数据的网络进度信息。
            </summary>
    </member>
    <member name="T:System.Net.IPEndPointCollection">
      <summary>
              表示用于将网络终结点存储为 <see cref="T:System.Net.IPEndPoint" /> 对象的集合。
            </summary>
    </member>
    <member name="T:System.Net.IUnsafeWebRequestCreate">
      <summary>
              创建不安全 <see cref="T:System.Net.WebRequest" /> 到统一资源标识符 (URI)。
            </summary>
    </member>
    <member name="T:System.Net.NetworkProgressChangedEventArgs">
      <summary>
              网络更改进度事件提供数据。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Cloud">
      <summary>
              指定定义对等的值 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.CloudCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 元素的容器。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <summary>
              表示一套 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 保留在 Windows 通讯簿中的对象。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.Peer">
      <summary>
              此类表示远程对等方。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <summary>
              表示可用于在对等协作基础结构的应用程序。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 元素的容器。
               此类型的实例由 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" /> 静态方法返回。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo">
      <summary>
              表示所需的启动信息 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> ，以响应对等协作邀请已启动。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType">
      <summary>
              指定要为执行注册的类型 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 注册。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.CurrentUser">
      <summary>
              仅为与调用的对等方关联的用户注册应用程序或对象
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.AllUsers">
      <summary>
              <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />  或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 被注册应用程序主机的所有对等方
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerChangeType">
      <summary>
              指定对等发生更改的类型。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Added">
      <summary>
              已添加对等对象、 终结点或应用程序。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Deleted">
      <summary>
              对等对象、 终结点或应用程序已被删除。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Updated">
      <summary>
              已更新对等对象、 终结点或应用程序。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <summary>
              与对等协作基础结构进行交互。
               许多的核心协作方案开始与此类。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>
              指定定义或在中使用的值 <see cref="N:System.Net.PeerToPeer.Collaboration" /> 对象权限。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>
              允许对要使用声明性安全应用到代码中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 执行安全操作。
               无法继承此类。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <summary>
              表示用户已为其检索扩展的信息的对等方。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 元素的容器。
               此类型的实例由 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" /> 静态方法返回。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <summary>
              表示位置的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, ，或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 描述的当前实例指定一个唯一的网络地址配置与实例 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对等协作基础结构内。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象的元素的容器。
               此类型的实例由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 类返回。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse">
      <summary>
              表示通过发送一份邀请从远程对等方收到的响应 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" /> 或 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" /> 方法。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType">
      <summary>
              指定本地对等方可以接收来自应用程序驱动的协作邀请请求的响应。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Declined">
      <summary>
              对等方谢绝邀请请求。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Accepted">
      <summary>
              对等方接受了邀请请求。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Expired">
      <summary>
              邀请请求已过期。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <summary>
              表示位于"网络邻居"基础结构的对等方。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象的元素的容器。
               此类型的实例由 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" /> 静态方法返回。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <summary>
              表示具有自动生成的 PeerObject 类的新实例 <see cref="T:System.Guid" />。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的元素的容器。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo">
      <summary>
              表示一个对等方的状态信息。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus">
      <summary>
              指定对等方的存在状态。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Offline">
      <summary>
              指定对等方处于脱机状态。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OutToLunch">
      <summary>
              指定对等方目前"外出就餐"，无法进行响应。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Away">
      <summary>
              指定对等方"离开"，无法进行响应。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.BeRightBack">
      <summary>
              指定对等方已暂时离开应用程序，并将很快参与。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Idle">
      <summary>
              指定对等方状态为空闲。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Busy">
      <summary>
              指定对等方是"忙碌"，并且不希望被打扰。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OnThePhone">
      <summary>
              指定对等方目前在手机上，并且不希望被打扰。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Online">
      <summary>
              指定在对等协作网络中积极参与对等方。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerScope">
      <summary>
              指定对等方的当前网络范围。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.None">
      <summary>
              指定的对等方未登录到对等协作作用域。
               此将值传递给 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 方法会生成任何结果。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.NearMe">
      <summary>
              指定登录到网络邻居作用域。
               此范围有利于为通过对等协作方法位于同一子网的所有对等端的连接。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.Internet">
      <summary>
              指定登录到 Internet 作用域。
               此范围有利于与联系人管理器中的所有联系人的连接。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.All">
      <summary>
              指定登录到网络邻居作用域和的 Internet 作用域。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" /> 或 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs">
      <summary>
              向提供限定信息 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)" /> 方法时 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" /> 事件发生。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 发出事件信号。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs">
      <summary>
              提供到回调方法的限定信息时 <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" /> 发出事件信号。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscriptionType">
      <summary>
              指定远程对等订阅本地对等方可以接收事件通知。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Blocked">
      <summary>
              指定远程对等方可以订阅本地对等方，但不是会收到事件通知。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed">
      <summary>
              指定的远程对等方可以订阅本地对等方，以及接收事件通知。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerName">
      <summary>
              指定定义对等的值 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。
               对等名称通常是一个字符串，用来标识对等资源。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRecord">
      <summary>
              定义值，它构成一个对等名称记录对象的集合。
               此记录包含对等名称和与之通信的终结点的集合等项。
               对等名称记录用于定义内的单个对等节点 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <summary>
              表示 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 元素的容器。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRegistration">
      <summary>
              注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 中 <see cref="T:System.Net.PeerToPeer.Cloud" /> 或一组云。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameResolver">
      <summary>
              指定解析的值 <see cref="T:System.Net.PeerToPeer.PeerName" /> 到 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 使用 PNRP Namespace 提供程序 API 协议。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameType">
      <summary>
              定义的类型 <see cref="T:System.Net.PeerToPeer.PeerName" /> 来创建。
               对等名称保护，或者不安全的。
               安全的对等名称提供名称的所有权证明。
               不安全的对等名称有没有关联的标识。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PeerNameType.Secured">
      <summary>
              创建一个安全 <see cref="T:System.Net.PeerToPeer.PeerName" />  使用当前用户的标识。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PeerNameType.Unsecured">
      <summary>
              创建一个不安全 <see cref="T:System.Net.PeerToPeer.PeerName" />  使用当前用户的标识。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerToPeerException">
      <summary>
              表示由对等基础结构将引发错误时引发的异常。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>
              指定在中使用的值 <see cref="N:System.Net.PeerToPeer" /> 对象权限。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>
              允许的操作安全 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 要应用于代码中使用声明性安全。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>
              指定 PNRP 群的不同作用域。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>
              允许所有 IP 地址向 PNRP 注册 <see cref="T:System.Net.PeerToPeer.Cloud" />。
               任何作用域和所有作用域之间没有区别。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>
              作用域是全局范围;允许所有有效的 IP 地址向 PNRP 注册 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>
              作用域是站点本地的;仅为站点定义的 IP 地址才可以向 PNRP 注册。
            </summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>
              作用域是链路本地;允许只为本地子网定义的 IP 地址向 PNRP 注册 <see cref="T:System.Net.PeerToPeer.Cloud" />。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <summary>
              结合使用<see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />事件，特定的解析请求时收到信号<see cref="T:System.Net.PeerToPeer.PeerName" />已完成。
            </summary>
    </member>
    <member name="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <summary>
              与通知配合使用 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件。
                发出信号后只要 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 在响应中找到对象 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 对特定操作 <see cref="T:System.Net.PeerToPeer.PeerName" />。
            </summary>
    </member>
    <member name="T:System.Net.Sockets.HttpPolicyDownloaderProtocol">
      <summary>
              下载策略文件的一个实例 <see cref="T:System.Net.Sockets.Socket" /> 类将使用。
            </summary>
    </member>
    <member name="T:System.Net.Sockets.SecurityCriticalAction">
      <summary>
              表示安全关键操作。
            </summary>
    </member>
    <member name="T:System.Net.Sockets.SocketPolicy">
      <summary>
              表示策略文件实例。
            </summary>
    </member>
    <member name="T:System.Net.Sockets.UdpAnySourceMulticastClient">
      <summary>
              客户端接收来自任何源，也称为 Any 源多路广播 (ASM) 或 Internet 标准多播 (ISM) 的多播通信。
            </summary>
    </member>
    <member name="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
      <summary>
              从单个源，也称为源特定多路广播 (SSM) 多播通信客户端接收器。
            </summary>
    </member>
    <member name="T:System.Net.UiSynchronizationContext">
      <summary>
              在同步模型中使用的托管用户界面提供的同步上下文。
            </summary>
    </member>
  </members>
</doc>