<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.CommonDialog">
      <summary>用于显示通用 Win32 对话框的抽象基类。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.#ctor">
      <summary>在由派生类的构造函数调用时，提供基类值的初始化。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog">
      <summary>确定是否有足够的权限来显示对话框。</summary>
      <exception cref="T:System.Security.SecurityException">如果没有足够的权限来显示对话框。</exception>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>定义要重写的通用对话框挂钩过程，以便向通用对话框添加特定功能。</summary>
      <returns>始终返回 <see cref="F:System.IntPtr.Zero" />。</returns>
      <param name="hwnd">Win32 对话框的窗口句柄。</param>
      <param name="msg">要由 Win32 对话框处理的 Windows 消息。</param>
      <param name="wParam">用于对话框操作的参数。</param>
      <param name="lParam">用于对话框操作的参数。</param>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.Reset">
      <summary>在派生类中进行重写时，将通用对话框的属性重置为其默认值。</summary>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)">
      <summary>在派生类中进行重写时，将被调用以显示 Win32 通用对话框的特定类型。</summary>
      <returns>如果用户单击显示的对话框（例如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）中的“确定”按钮，则返回 true，否则返回 false。</returns>
      <param name="hwndOwner">对话框所在的窗口的句柄。 </param>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog">
      <summary>显示通用对话框。</summary>
      <returns>如果用户单击显示的对话框的“确定”按钮（例如（例如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）中的“确定”按钮，则返回 true，否则返回 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)">
      <summary>显示通用对话框。</summary>
      <returns>如果用户单击显示的对话框的“确定”按钮（例如（例如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）中的“确定”按钮，则返回 true，否则返回 false。</returns>
      <param name="owner">对话框所在的窗口的句柄。 </param>
    </member>
    <member name="P:Microsoft.Win32.CommonDialog.Tag">
      <summary>获取或设置与对话框关联的对象。这将提供向对话框附加任意对象的能力。</summary>
      <returns>附加到对话框或与对话框关联的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialog">
      <summary>一个抽象基类，用于封装文件对话框（包括 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）的通用功能。</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Win32.FileDialog" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.AddExtension">
      <summary>获取或设置一个值，该值指示如果用户省略扩展名，文件对话框是否自动在文件名中添加扩展名。</summary>
      <returns>如果添加扩展名，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckFileExists">
      <summary>获取或设置一个值，该值指示如果用户指定不存在的文件名，文件对话框是否显示警告。</summary>
      <returns>如果显示警告，则为 true；否则为 false。此基类中的默认设置为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CheckPathExists">
      <summary>获取或设置一个值，该值指定如果用户键入无效的路径和文件名，是否显示警告。</summary>
      <returns>如果显示警告，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.CustomPlaces">
      <summary>获取或设置文件对话框的自定义空间的列表。 </summary>
      <returns>自定义空间的列表。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DefaultExt">
      <summary>获取或设置一个值，该值指定用来筛选显示的文件列表的默认扩展名字符串。</summary>
      <returns>默认扩展名字符串。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.DereferenceLinks">
      <summary>获取或设置一个值，该值指示文件对话框是返回快捷方式引用的文件的位置，还是返回快捷方式文件 (.lnk) 的位置。</summary>
      <returns>true 返回引用的位置；false 返回快捷方式位置。默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileName">
      <summary>获取或设置一个字符串，其中包含在文件对话框中选定的文件的完整路径。</summary>
      <returns>一个 <see cref="T:System.String" />，表示文件对话框中选定的文件的完整路径。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FileNames">
      <summary>获取一个数组，其中包含与每个选定文件一一对应的文件名。</summary>
      <returns>一个 <see cref="T:System.String" /> 数组，其中包含与每个选定文件一一对应的文件名。默认值是一个由值为 <see cref="F:System.String.Empty" /> 的单个项组成的数组。</returns>
    </member>
    <member name="E:Microsoft.Win32.FileDialog.FileOk">
      <summary>当用户通过单击 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 的“打开”按钮或 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 的“保存”按钮选择某个文件名时发生。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Filter">
      <summary>获取或设置筛选器字符串，该字符串确定在 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 或 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 中显示的文件类型。</summary>
      <returns>一个包含筛选器的 <see cref="T:System.String" />。默认值为 <see cref="F:System.String.Empty" />，这意味着，不应用任何筛选器并显示所有文件类型。</returns>
      <exception cref="T:System.ArgumentException">筛选器字符串无效。</exception>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.FilterIndex">
      <summary>获取或设置文件对话框中当前选定的筛选器的索引。</summary>
      <returns>一个 <see cref="T:System.Int32" />，表示选定的筛选器的索引。默认值为 1。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>定义要重写的通用文件对话框挂钩过程，以便向文件对话框添加通用功能。</summary>
      <returns>返回 <see cref="F:System.IntPtr.Zero" /> 以指示成功；否则返回非零值以指示失败。</returns>
      <param name="hwnd">Win32 对话框的窗口句柄。</param>
      <param name="msg">要由 Win32 对话框进行处理的消息。</param>
      <param name="wParam">用于对话框操作的参数。</param>
      <param name="lParam">用于对话框操作的参数。</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.InitialDirectory">
      <summary>获取或设置文件对话框显示的初始目录。</summary>
      <returns>一个包含初始目录的 <see cref="T:System.String" />。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
      <summary>引发 <see cref="E:Microsoft.Win32.FileDialog.FileOk" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Options">
      <summary>获取 Win32 通用文件对话框标志，文件对话框使用这些标志来进行初始化。</summary>
      <returns>一个包含 Win32 通用文件对话框标志的 <see cref="T:System.Int32" />，文件对话框使用这些标志来进行初始化。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.Reset">
      <summary>将文件对话框的所有属性设置回其初始值。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.RestoreDirectory">
      <summary>不实现此属性。  </summary>
      <returns>未实现。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)">
      <summary>调用 <see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" /> 以在派生类中显示文件对话框，如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />。</summary>
      <returns>如果用户单击显示的对话框（例如 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 和 <see cref="T:Microsoft.Win32.SaveFileDialog" />）的“确定”按钮，则为 true；否则为 false。</returns>
      <param name="hwndOwner">对话框所在的窗口的句柄。 </param>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileName">
      <summary>获取一个字符串，其中仅包含选定文件的文件名。</summary>
      <returns>一个 <see cref="T:System.String" />，其中仅包含选定文件的文件名。默认值为 <see cref="F:System.String.Empty" />，当未选定文件或选定目录时也为此值。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.SafeFileNames">
      <summary>获取一个数组，其中包含与每个选定文件一一对应的安全文件名。</summary>
      <returns>一个 <see cref="T:System.String" /> 数组，其中包含与每个选定文件一一个对应的安全文件名。默认值是一个由值为 <see cref="F:System.String.Empty" /> 的单个项组成的数组。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.Title">
      <summary>获取或设置在文件对话框的标题栏中显示的文本。</summary>
      <returns>一个 <see cref="T:System.String" />，表示在文件对话框的标题栏中显示的文本。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:Microsoft.Win32.FileDialog.ToString">
      <summary>返回表示文件对话框的字符串。</summary>
      <returns>
        <see cref="T:Microsoft.Win32.FileDialog" /> 的 <see cref="T:System.String" /> 表示形式，其中包含从 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 或 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 选择的任何文件的完整路径名。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialog.ValidateNames">
      <summary>获取或设置一个值，该值指示对话框是否只接受有效的 Win32 文件名。</summary>
      <returns>如果在提供无效文件名时将显示警告，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlace">
      <summary>表示 <see cref="T:Microsoft.Win32.FileDialog" /> 自定义空间列表中的项。</summary>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.Guid)">
      <summary>使用指定的已知文件夹 GUID 初始化 <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> 类的新实例。 </summary>
      <param name="knownFolder">已知文件夹的 GUID。</param>
    </member>
    <member name="M:Microsoft.Win32.FileDialogCustomPlace.#ctor(System.String)">
      <summary>使用指定的路径初始化 <see cref="T:Microsoft.Win32.FileDialogCustomPlace" /> 类的新实例。 </summary>
      <param name="path">文件夹的路径。</param>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.KnownFolder">
      <summary>获取自定义空间的已知文件夹的 GUID。</summary>
      <returns>已知文件夹的 GUID。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlace.Path">
      <summary>获取自定义空间的文件路径。</summary>
      <returns>自定义空间的路径。</returns>
    </member>
    <member name="T:Microsoft.Win32.FileDialogCustomPlaces">
      <summary>为文件对话框中的自定义空间定义已知文件夹。</summary>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Contacts">
      <summary>获取当前用户的“联系人”文件夹。</summary>
      <returns>当前用户的“联系人”文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Cookies">
      <summary>获取当前用户的 Internet Cookie 文件夹。</summary>
      <returns>当前用户的 Internet Cookie 文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Desktop">
      <summary>获取当前用户用于存储桌面上的文件的文件夹。</summary>
      <returns>当前用户用于存储桌面上的文件的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Documents">
      <summary>获取当前用户的“文档”文件夹。</summary>
      <returns>当前用户的“文档”文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Favorites">
      <summary>获取当前用户的“收藏夹”文件夹。</summary>
      <returns>当前用户的“收藏夹”文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.LocalApplicationData">
      <summary>获取包含当前非漫游用户使用的应用程序特定数据的文件夹。</summary>
      <returns>包含当前非漫游用户使用的应用程序特定数据的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Music">
      <summary>获取当前用户的“音乐”文件夹。</summary>
      <returns>当前用户的“音乐”文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Pictures">
      <summary>获取当前用户的“图片”文件夹。</summary>
      <returns>当前用户的“图片”文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFiles">
      <summary>获取 Program Files 文件夹。</summary>
      <returns>Program Files 文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.ProgramFilesCommon">
      <summary>获取包含应用程序间共享的组件的文件夹。</summary>
      <returns>包含应用程序间共享的组件的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Programs">
      <summary>获取包含当前用户的程序组的文件夹。</summary>
      <returns>包含当前用户的程序组的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.RoamingApplicationData">
      <summary>获取包含当前漫游用户的应用程序特定数据的文件夹。</summary>
      <returns>包含当前漫游用户的应用程序特定数据的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.SendTo">
      <summary>获取包含当前用户的“发送到”菜单项的文件夹。</summary>
      <returns>包含当前用户的“发送到”菜单项的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.StartMenu">
      <summary>获取包含当前用户的“开始”菜单项的文件夹。</summary>
      <returns>包含当前用户的“开始”菜单项的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Startup">
      <summary>获取与当前用户的“启动”程序组对应的文件夹。</summary>
      <returns>与当前用户的“启动”程序组对应的文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.System">
      <summary>获取 System 文件夹。</summary>
      <returns>System 文件夹。</returns>
    </member>
    <member name="P:Microsoft.Win32.FileDialogCustomPlaces.Templates">
      <summary>获取包含当前用户的文档模板的文件夹。</summary>
      <returns>包含当前用户的文档模板的文件夹。</returns>
    </member>
    <member name="T:Microsoft.Win32.OpenFileDialog">
      <summary>表示一个通用对话框，用户可以使用此对话框来指定一个或多个要打开的文件的文件名。</summary>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.Multiselect">
      <summary>获取或设置一个选项，该选项指示 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 是否允许用户选择多个文件。</summary>
      <returns>如果允许多重选择，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFile">
      <summary>为用户使用 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 选定的文件打开只读流。</summary>
      <returns>一个新的 <see cref="T:System.IO.Stream" />，其中包含选定的文件。</returns>
      <exception cref="T:System.InvalidOperationException">在对话框中未选定任何文件。</exception>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.OpenFiles">
      <summary>创建一个数组，其中包含与用户使用 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 选定的每个文件一一对应的只读流。</summary>
      <returns>由多个新的 <see cref="T:System.IO.Stream" /> 对象构成的数组，这些对象包含选定的文件。</returns>
      <exception cref="T:System.InvalidOperationException">在对话框中未选定任何文件。</exception>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked">
      <summary>获取或设置一个值，该值指示是否选中 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 显示的只读复选框。</summary>
      <returns>如果选中该复选框，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.OpenFileDialog.Reset">
      <summary>将所有 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 属性重置为其默认值。</summary>
    </member>
    <member name="P:Microsoft.Win32.OpenFileDialog.ShowReadOnly">
      <summary>获取或设置一个值，该值指示 <see cref="T:Microsoft.Win32.OpenFileDialog" /> 是否包含只读复选框。</summary>
      <returns>如果显示该复选框，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="T:Microsoft.Win32.SaveFileDialog">
      <summary>表示一个通用对话框，用户可以使用此对话框来指定一个要将文件另存为的文件名。在部分信任情况下执行的应用程序不能使用 <see cref="T:Microsoft.Win32.SaveFileDialog" />。</summary>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 类的新实例。</summary>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.CreatePrompt">
      <summary>获取或设置一个值，该值指示如果用户指定一个不存在的文件，<see cref="T:Microsoft.Win32.SaveFileDialog" /> 是否提示用户以允许创建文件。</summary>
      <returns>如果对话框应在保存到一个以前不存在的文件名之前进行提示，则为 true，否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.OpenFile">
      <summary>为用户使用 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 选定的文件名创建读/写文件流。</summary>
      <returns>一个新的 <see cref="T:System.IO.Stream" />，其中包含选定的文件。</returns>
      <exception cref="T:System.InvalidOperationException">在对话框中未选定任何文件。</exception>
    </member>
    <member name="P:Microsoft.Win32.SaveFileDialog.OverwritePrompt">
      <summary>获取或设置一个值，该值指示如果用户指定的文件名已存在，<see cref="T:Microsoft.Win32.SaveFileDialog" /> 是否显示警告。</summary>
      <returns>如果对话框应在用一个以前已有的文件名进行保存之前进行提示，则为 true，否则为 false。默认值为 true。</returns>
    </member>
    <member name="M:Microsoft.Win32.SaveFileDialog.Reset">
      <summary>将所有 <see cref="T:Microsoft.Win32.SaveFileDialog" /> 属性重置为其默认值。</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>提供用于与设计器进行通信的附加属性。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>获取指定 <see cref="T:System.Windows.UIElement" /> 的 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 附加属性的值。</summary>
      <returns>该元素的 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 属性值。</returns>
      <param name="element">从中读取属性值的元素。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>获取或设置是否在设计器的上下文中运行 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <returns>指示 <see cref="T:System.Windows.DependencyObject" /> 是否在设计器的上下文中运行的 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>标识 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 附加属性。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>将<see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 附加属性的值设置为指定元素。 </summary>
      <param name="element">附加属性所写入的元素。</param>
      <param name="value">所需的 <see cref="T:System.Boolean" /> 值。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Application">
      <summary>封装 Windows Presentation Foundation (WPF) 应用程序。 </summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Application" /> 类的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">多 <see cref="T:System.Windows.Application" /> 类的一个实例每 <see cref="T:System.AppDomain" />创建。</exception>
    </member>
    <member name="E:System.Windows.Application.Activated">
      <summary>，当应用程序成为前台应用程序，发生。</summary>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>获取当前 <see cref="T:System.AppDomain" />的 <see cref="T:System.Windows.Application" /> 对象。</summary>
      <returns>当前 <see cref="T:System.AppDomain" />的 <see cref="T:System.Windows.Application" /> 对象。</returns>
    </member>
    <member name="E:System.Windows.Application.Deactivated">
      <summary>，当应用程序不再是前台应用程序，发生。</summary>
    </member>
    <member name="E:System.Windows.Application.DispatcherUnhandledException">
      <summary>，如果异常是由应用程序引发，但未处理，发生。</summary>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>发生，在应用程序关闭之前，不能撤消。</summary>
    </member>
    <member name="M:System.Windows.Application.FindResource(System.Object)">
      <summary>搜索一个 用户界面 (UI) 资源，如 <see cref="T:System.Windows.Style" /> 或 <see cref="T:System.Windows.Media.Brush" />，具有指定键的，并引发异常，如果未找到请求的资源 (请参见 XAML 资源)。</summary>
      <returns>请求的资源对象。如果未找到请求的资源时， <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 将引发。</returns>
      <param name="resourceKey">查找资源的名称。</param>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">未能找到资源。</exception>
    </member>
    <member name="E:System.Windows.Application.FragmentNavigation">
      <summary>发生，在应用程序的一个浏览器启动导航到内容片段导航时，会立即发生，如果所需片段在当前目录，或者，在源 XAML 目录加载后，如果所需片段在其他内容。</summary>
    </member>
    <member name="M:System.Windows.Application.GetContentStream(System.Uri)">
      <summary>返回查找指定的 <see cref="T:System.Uri" /> 的内容数据文件的资源流 (请参见 WPF 应用程序资源、内容和数据文件)。</summary>
      <returns>包含内容数据文件位于指定的 <see cref="T:System.Uri" />的 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 。如果未找到一个松散资源，返回 null。</returns>
      <param name="uriContent">该计数器的 <see cref="T:System.Uri" /> 映射到一个松散资源。</param>
      <exception cref="T:System.ArgumentNullException">传递给 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">传递给 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /><see cref="T:System.Uri" /> 的 <see cref="P:System.Uri.OriginalString" /> 属性为空。</exception>
      <exception cref="T:System.ArgumentException">传递给 <see cref="M:System.Windows.Application.GetContentStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 是绝对 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.Windows.Application.GetCookie(System.Uri)">
      <summary>检索 <see cref="T:System.Uri" />指定的位置的 cookie。</summary>
      <returns>
        <see cref="T:System.String" /> 值，因此，如果该 cookie 存在;否则， <see cref="T:System.ComponentModel.Win32Exception" /> 将引发。</returns>
      <param name="uri">指定位置 cookie 创建的 <see cref="T:System.Uri" /> 。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">Win32 错误。InternetGetCookie  函数引发 (称为 <see cref="M:System.Windows.Application.GetCookie(System.Uri)" />)，如果发生问题，当尝试检索指定 cookie。</exception>
    </member>
    <member name="M:System.Windows.Application.GetRemoteStream(System.Uri)">
      <summary>返回查找指定的 <see cref="T:System.Uri" /> 的源站点数据文件的资源流 (请参见 WPF 应用程序资源、内容和数据文件)。</summary>
      <returns>包含源站点数据文件的资源流查找指定的 <see cref="T:System.Uri" />的 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 。如果未找到所需松散资源， null 返回。</returns>
      <param name="uriRemote">该 <see cref="T:System.Uri" /> 映射到一个松散资源在站点。</param>
      <exception cref="T:System.ArgumentNullException">传递给 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">传递给 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /><see cref="T:System.Uri" /> 的 <see cref="P:System.Uri.OriginalString" /> 属性为空。</exception>
      <exception cref="T:System.ArgumentException">传递给 <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 不是绝对或相对的，但不能使用 pack://siteoforigin:,,,/ 形式。</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>返回查找指定的 <see cref="T:System.Uri" /> 的资源数据文件的资源流 (请参见 WPF 应用程序资源、内容和数据文件)。</summary>
      <returns>包含资源数据文件的资源流查找指定的 <see cref="T:System.Uri" />的 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 。 </returns>
      <param name="uriResource">该 <see cref="T:System.Uri" /> 映射到嵌入资源。</param>
      <exception cref="T:System.ArgumentNullException">传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /><see cref="T:System.Uri" /> 的 <see cref="P:System.Uri.OriginalString" /> 属性为空。</exception>
      <exception cref="T:System.ArgumentException">传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 不是绝对或相对的，但不能使用 pack://application:,,,/ 形式。</exception>
      <exception cref="T:System.IO.IOException">传递给 <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)" /> 的 <see cref="T:System.Uri" /> 无法找到。</exception>
    </member>
    <member name="E:System.Windows.Application.LoadCompleted">
      <summary>发生，在导航到在应用程序中的一个浏览器的目录加载的，分析并已呈现。</summary>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>加载查找指定的 统一资源标识符 (URI) 的一 XAML 文件并将其转换为由 XAML 文件的根元素指定对象的实例。</summary>
      <param name="component">类型的对象和 XAML 文件相同的根元素。</param>
      <param name="resourceLocator">该 <see cref="T:System.Uri" /> 映射到相对 XAML 文件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为空。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" />
        <see cref="T:System.Uri" /> 参数的 <see cref="P:System.Uri.OriginalString" /> 属性为空。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> 是绝对 URI。</exception>
      <exception cref="T:System.Exception">
        <paramref name="component" /> 不匹配 XAML 文件的根元素的类型。</exception>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Uri)">
      <summary>加载查找指定的 统一资源标识符 (URI)的一 XAML 文件，并将其转换为由 XAML 文件的根元素指定对象的实例。</summary>
      <returns>XAML 文件中指定的根元素的实例加载。 </returns>
      <param name="resourceLocator">该 <see cref="T:System.Uri" /> 映射到相对 XAML 文件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceLocator" /> 为空。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" />
        <see cref="T:System.Uri" /> 参数的 <see cref="P:System.Uri.OriginalString" /> 属性为空。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> 是绝对 URI。</exception>
      <exception cref="T:System.Exception">文件不是 XAML 文件。</exception>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
      <summary>获取或设置应用程序的主窗口。</summary>
      <returns>被指定为主应用程序窗口的 <see cref="T:System.Windows.Window" /> 。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Application.MainWindow" /> 从浏览器承载的应用程序设置，例如 XAML 浏览器应用程序 (XBAP)。</exception>
    </member>
    <member name="E:System.Windows.Application.Navigated">
      <summary>发生，在导航到在应用程序中使用浏览器已找到的内容，不过，它可能无法完成加载。</summary>
    </member>
    <member name="E:System.Windows.Application.Navigating">
      <summary>，在一个新的导航由应用程序，一个浏览器请求发生。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationFailed">
      <summary>出现问题，则错误，当应用程序的一个浏览器导航到所请求的内容时。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationProgress">
      <summary>定期发生在应用程序中使用浏览器管理提供导航进度信息的下载过程。</summary>
    </member>
    <member name="E:System.Windows.Application.NavigationStopped">
      <summary>发生，在一个浏览器的 StopLoading 方法在应用程序的调用，或者，如果新的导航由浏览器请求，在当前导航正在进行的。</summary>
    </member>
    <member name="M:System.Windows.Application.OnActivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Activated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。 </param>
    </member>
    <member name="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Deactivated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Exit" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.ExitEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.FragmentNavigation" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.LoadCompleted" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Navigated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Navigating" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.NavigationFailed" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.NavigationProgress" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.NavigationStopped" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Navigation.NavigationEventArgs" /> 。 </param>
    </member>
    <member name="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.SessionEnding" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Application.Startup" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.StartupEventArgs" /> 。</param>
    </member>
    <member name="P:System.Windows.Application.Properties">
      <summary>获取应用程序范围的属性集合。</summary>
      <returns>包含应用程序范围的属性的 <see cref="T:System.Collections.IDictionary" /> 。</returns>
    </member>
    <member name="P:System.Windows.Application.ResourceAssembly">
      <summary>获取或设置对于 WPF 应用程序的资源提供已装箱 统一资源标识符 (URI) 的 <see cref="T:System.Reflection.Assembly" /> 。</summary>
      <returns>为 WPF 应用程序的资源提供已装箱 统一资源标识符 (URI) 到 <see cref="T:System.Reflection.Assembly" /> 的引用。</returns>
      <exception cref="T:System.InvalidOperationException">WPF 应用程序具有项程序集，或者 <see cref="P:System.Windows.Application.ResourceAssembly" /> 已经设置为。</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
      <summary>获取或设置应用程序范围资源的集合，例如样式和画笔。</summary>
      <returns>包含零个或多个应用程序范围资源的 <see cref="T:System.Windows.ResourceDictionary" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Application.Run">
      <summary>开始 Windows Presentation Foundation (WPF) 应用程序。</summary>
      <returns>
        <see cref="T:System.Int32" /> 应用程序退出返回到操作系统的代码，当应用程序关闭。默认情况下，退出代码值为 0。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> 从一个浏览器承载的应用程序 (例如， XAML 浏览器应用程序 (XBAP)) 调用。</exception>
    </member>
    <member name="M:System.Windows.Application.Run(System.Windows.Window)">
      <summary>开始 Windows Presentation Foundation (WPF) 应用程序并打开指定的窗口。</summary>
      <returns>
        <see cref="T:System.Int32" /> 应用程序退出返回到操作系统的代码，当应用程序关闭。默认情况下，退出代码值为 0。</returns>
      <param name="window">自动打开的 <see cref="T:System.Windows.Window" /> ，当应用程序启动。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Application.Run" /> 从一个浏览器承载的应用程序 (例如， XAML 浏览器应用程序 (XBAP)) 调用。</exception>
    </member>
    <member name="E:System.Windows.Application.SessionEnding">
      <summary>发生，当用户在注销或关闭操作系统关闭 Windows 会话。</summary>
    </member>
    <member name="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
      <summary>创建 <see cref="T:System.Uri" />指定的位置的 cookie。</summary>
      <param name="uri">指定位置应创建该 cookie 的 <see cref="T:System.Uri" /> 。</param>
      <param name="value">包含 cookie 数据的 <see cref="T:System.String" /> 。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">Win32 错误。 InternetSetCookie 函数引发 (称为 <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)" />)，如果发生问题，当尝试创建指定的 cookie。</exception>
    </member>
    <member name="M:System.Windows.Application.Shutdown">
      <summary>关闭应用程序。</summary>
    </member>
    <member name="M:System.Windows.Application.Shutdown(System.Int32)">
      <summary>关闭返回指定的退出代码对操作系统的应用程序。</summary>
      <param name="exitCode">整数退出应用程序的代码。该默认退出代码为 0。</param>
    </member>
    <member name="P:System.Windows.Application.ShutdownMode">
      <summary>获取或设置会导致 <see cref="M:System.Windows.Application.Shutdown" /> 方法调用的情况。</summary>
      <returns>
        <see cref="T:System.Windows.ShutdownMode" /> 枚举值。默认值为 <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose" />。</returns>
    </member>
    <member name="E:System.Windows.Application.Startup">
      <summary>，当 <see cref="T:System.Windows.Application" /> 对象的 <see cref="M:System.Windows.Application.Run" /> 方法调用，发生。</summary>
    </member>
    <member name="P:System.Windows.Application.StartupUri">
      <summary>获取或设置自动显示的 UI ，当应用程序启动时。</summary>
      <returns>引用 UI 自动打开的 <see cref="T:System.Uri" /> ，当应用程序启动。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Application.StartupUri" /> 设置为空值。</exception>
    </member>
    <member name="M:System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>查询为指定的环境属性是否可用在当前范围内。</summary>
      <returns>true ，如果请求的单个属性可用;否则， false。</returns>
      <param name="propertyName">请求的单个属性的名称。</param>
    </member>
    <member name="M:System.Windows.Application.TryFindResource(System.Object)">
      <summary>搜索指定的资源。</summary>
      <returns>请求的资源对象。如果未找到请求的资源时，空引用返回。</returns>
      <param name="resourceKey">查找资源的名称。</param>
    </member>
    <member name="P:System.Windows.Application.Windows">
      <summary>获取在应用程序中实例化窗口。 </summary>
      <returns>包含的 <see cref="T:System.Windows.WindowCollection" /> 对当前 <see cref="T:System.AppDomain" />的所有窗口对象。</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
      <summary>指定 附加属性 具有扩展到 逻辑树的子元素的可浏览的大小。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
      <summary>确定当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> .NET Framework 特性 是否与指定的对象相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 与当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />相等;否则， false。</returns>
      <param name="obj">比较的 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> 与当前 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />。</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />的.NET Framework 特性  哈希代码 。</summary>
      <returns>无符号 32 位整数值。</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
      <summary>获取或设置是否声明为父元素检测到 附加属性 的使用深的模式此 .NET Framework 特性 是应用的值。</summary>
      <returns>true ，如果该附加属性为拥有该附加属性父元素的逻辑树中的所有子元素可浏览的。false ，如果该附加属性为拥有该附加属性父元素的直接子元素只能供浏览。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.BaseValueSource">
      <summary>标识特定 依赖项属性 值的属性系统源。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Default">
      <summary>源是默认值，所定义的属性元数据。 </summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyle">
      <summary>源是从默认样式的 setter。默认样式来自当前主题。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.DefaultStyleTrigger">
      <summary>源是从在默认样式中的触发器。默认样式来自当前主题。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ImplicitStyleReference">
      <summary>源是隐式样式引用 (样式根据类型检测或基于类型)。此值只返回对 style 属性，而不是通过这些样式 setter 或触发器设置的属性。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Inherited">
      <summary>源是通过值传递属性值继承。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Local">
      <summary>源是本地设置的值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplate">
      <summary>根据源元素使用的父模板。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.ParentTemplateTrigger">
      <summary>源是从创建组件的父模板的基于触发器的值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Style">
      <summary>源是从非主题样式的样式 setter。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.StyleTrigger">
      <summary>源是非主题样式的基于触发器的值。</summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.TemplateTrigger">
      <summary>源 " 是从非主题样式中的模板的基于触发器的值。 </summary>
    </member>
    <member name="F:System.Windows.BaseValueSource.Unknown">
      <summary>源未知。这是默认值。</summary>
    </member>
    <member name="T:System.Windows.ColorConvertedBitmapExtension">
      <summary>实现支持 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> 创建的标记扩展。<see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> 没有嵌入配置文件、根据源的配置文件和目标值。</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.ColorConvertedBitmapExtension" /> 类的新实例。</summary>
      <param name="image">分析确定三 URI的字符串:对图像，源颜色上下文和目标颜色上下文。</param>
    </member>
    <member name="M:System.Windows.ColorConvertedBitmapExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回在属性应设置此扩展的应用对象。对于 <see cref="T:System.Windows.ColorConvertedBitmapExtension" />，这是完整 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" />。</summary>
      <returns>根据的值 <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap" /> 传递给构造函数。</returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。此服务应为 <see cref="T:System.Windows.Markup.IUriContext" />提供结果。</param>
    </member>
    <member name="T:System.Windows.ColumnSpaceDistribution">
      <summary>介绍如何将在 columnated 流内容的空间。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Between">
      <summary>空格均匀分布。在所有列之间。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Left">
      <summary>空间分配在第一列之前。</summary>
    </member>
    <member name="F:System.Windows.ColumnSpaceDistribution.Right">
      <summary>空格在最后一列后分配。</summary>
    </member>
    <member name="T:System.Windows.ComponentResourceKey">
      <summary>定义或引用基于外部程序集的类名的资源键，以及一个附加的标识符。</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ComponentResourceKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
      <summary>初始化定义键 <see cref="T:System.Windows.ComponentResourceKey" /> 的新实例，指定 <see cref="T:System.Type" /> 和要使用的对象为附加资源标识符。</summary>
      <param name="typeInTargetAssembly">定义资源键的类型。</param>
      <param name="resourceId">以将此自定义项 <see cref="T:System.Windows.ComponentResourceKey" /> 的唯一标识符与 <paramref name="typeInTargetAssembly" /> 类型。</param>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.Assembly">
      <summary>获取指示的程序集对象查找哪个程序集的字典为值与此密钥。</summary>
      <returns>检索的程序集，作为反射类。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
      <summary>确定提供的对象是否与当前 <see cref="T:System.Windows.ComponentResourceKey" />相等。 </summary>
      <returns>true ，如果对象相等;否则， false。</returns>
      <param name="o">对象和当前 <see cref="T:System.Windows.ComponentResourceKey" /><see cref="T:System.Windows.ComponentResourceKey" /><see cref="T:System.Windows.ComponentResourceKey" />。</param>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.ComponentResourceKey" />的哈希代码。 </summary>
      <returns>一个有符号的 32 位整数值。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.ResourceId">
      <summary>获取或设置唯一标识符区分其他的此密钥与此类型。</summary>
      <returns>唯一标识符。这通常是字符串。</returns>
    </member>
    <member name="M:System.Windows.ComponentResourceKey.ToString">
      <summary>获取 <see cref="T:System.Windows.ComponentResourceKey" />的字符串表示形式。 </summary>
      <returns>字符串表示形式。</returns>
    </member>
    <member name="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
      <summary>获取或设置定义资源键的 <see cref="T:System.Type" /> 。</summary>
      <returns>定义资源键的类型。</returns>
    </member>
    <member name="T:System.Windows.Condition">
      <summary>表示 <see cref="T:System.Windows.MultiTrigger" /> 和 <see cref="T:System.Windows.MultiDataTrigger" />的条件，应用于基于的属性值更改设置条件。</summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Condition" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Condition" /> 类的新实例。 </summary>
      <param name="binding">指定条件的属性的绑定。</param>
      <param name="conditionValue">条件的值。</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Condition" /> 类的新实例具有指定的属性和的值。此构造函数执行参数验证。</summary>
      <param name="conditionProperty">条件的属性。</param>
      <param name="conditionValue">条件的值。</param>
    </member>
    <member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>初始化 <see cref="T:System.Windows.Condition" /> 类的新实例使用指定的属性、值和源对象的名称。</summary>
      <param name="conditionProperty">条件的属性。</param>
      <param name="conditionValue">条件的值。</param>
      <param name="sourceName"> 对象的x:Name 与 <paramref name="conditionProperty" />的。</param>
    </member>
    <member name="P:System.Windows.Condition.Binding">
      <summary>获取或设置指定条件的属性的绑定。这仅适用于 <see cref="T:System.Windows.MultiDataTrigger" /> 对象。</summary>
      <returns>默认值为空。</returns>
    </member>
    <member name="P:System.Windows.Condition.Property">
      <summary>获取或设置该条件的属性。这仅适用于 <see cref="T:System.Windows.MultiTrigger" /> 对象。</summary>
      <returns>指定条件的属性的 <see cref="T:System.Windows.DependencyProperty" /> 。默认值为空。</returns>
    </member>
    <member name="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>处理大小写标记扩展 <see cref="T:System.Windows.Condition" /> 对象的属性的位置提供值。</summary>
      <param name="targetObject">对象标记扩展将值的位置。</param>
      <param name="eventArgs">与标记扩展处理关系数据。</param>
    </member>
    <member name="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>处理大小写的类型转换器。<see cref="T:System.Windows.Condition" /> 对象的位置属性提供值。</summary>
      <param name="targetObject">对象该类型转换器将值的位置。</param>
      <param name="eventArgs">与类型转换器处理关系数据。</param>
    </member>
    <member name="P:System.Windows.Condition.SourceName">
      <summary>获取或设置对象的名称与将关联的 setter 应用的属性。这仅适用于 <see cref="T:System.Windows.MultiTrigger" /> 对象。</summary>
      <returns>默认属性是 null。如果此属性为 null，则是对象的属性样式的原因关联的 setter 将适用。</returns>
      <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Windows.Condition" /> 正在使用后，就不能修改它。</exception>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>表示初始化开始的对象。</summary>
    </member>
    <member name="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>对象初始化的信号完成。</summary>
    </member>
    <member name="P:System.Windows.Condition.Value">
      <summary>获取或设置该条件的值。</summary>
      <returns>
        <see cref="P:System.Windows.Condition.Value" /> 属性不能为空为特定 <see cref="T:System.Windows.Condition" />。异常参见部分。默认值为空。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Markup.MarkupExtension" />的不受支持。</exception>
      <exception cref="T:System.ArgumentException">表达式不受支持。</exception>
    </member>
    <member name="T:System.Windows.ConditionCollection">
      <summary>表示 <see cref="T:System.Windows.Condition" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.ConditionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ConditionCollection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.ConditionCollection.IsSealed">
      <summary>获取一个值此触发器是否是只读的，不能更改。</summary>
      <returns>true ，如果触发器是只读的;否则， false。</returns>
    </member>
    <member name="T:System.Windows.CornerRadius">
      <summary>表示矩形的角的半径。 </summary>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <summary>初始化 <see cref="T:System.Windows.CornerRadius" /> 类的新实例具有指定的统一半径值的每个角或矩形。 </summary>
      <param name="uniformRadius">半径值应用于该矩形的每个角。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.CornerRadius" /> 类的新实例使用指定的半径值的矩形的每个角的。 </summary>
      <param name="topLeft">左上角的半径。</param>
      <param name="topRight">右上角的半径。</param>
      <param name="bottomRight">变为的右下角半径。</param>
      <param name="bottomLeft">左下角的半径。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
      <summary>获取或设置该左下角的半径。 </summary>
      <returns>左下角的半径。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
      <summary>获取或设置底部的右上角半径。 </summary>
      <returns>变为的右下角半径。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否 <see cref="T:System.Windows.CornerRadius" /> ，并且是否包含角半径值和此 <see cref="T:System.Windows.CornerRadius" />相同。 </summary>
      <returns>true ，如果 <paramref name="obj" /> 是 <see cref="T:System.Windows.CornerRadius" /> 并包含角半径值和此 <see cref="T:System.Windows.CornerRadius" />相同;否则， false。</returns>
      <param name="obj">比较的 <see cref="T:System.Object" /> 。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <summary>比较相等的两 <see cref="T:System.Windows.CornerRadius" /> 结构。</summary>
      <returns>true ，如果 <paramref name="cornerRadius" /> 包含角半径值和此 <see cref="T:System.Windows.CornerRadius" />相同;否则， false。</returns>
      <param name="cornerRadius">比较的 <see cref="T:System.Windows.CornerRadius" /> 与此 <see cref="T:System.Windows.CornerRadius" />。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.CornerRadius" />的哈希代码。 </summary>
      <returns>此 <see cref="T:System.Windows.CornerRadius" /> 结构的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>比较相等的两 <see cref="T:System.Windows.CornerRadius" /> 结构。</summary>
      <returns>true ，如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有所有角 ( <see cref="P:System.Windows.CornerRadius.TopLeft" />、 <see cref="P:System.Windows.CornerRadius.TopRight" />、 <see cref="P:System.Windows.CornerRadius.BottomLeft" />， <see cref="P:System.Windows.CornerRadius.BottomRight" />相同的值相等的值); false ，如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有一个或多个角不同的值。</returns>
      <param name="cr1">比较的第一 <see cref="T:System.Windows.CornerRadius" /> 。</param>
      <param name="cr2">比较的第二 <see cref="T:System.Windows.CornerRadius" /> 。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>比较不相等的两 <see cref="T:System.Windows.CornerRadius" /> 结构。 </summary>
      <returns>true ，如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有一个或多个角 ( <see cref="P:System.Windows.CornerRadius.TopLeft" />、 <see cref="P:System.Windows.CornerRadius.TopRight" />、 <see cref="P:System.Windows.CornerRadius.BottomLeft" />， <see cref="P:System.Windows.CornerRadius.BottomRight" />不同的值不同的值); false ，如果 <paramref name="cr1" /> 和 <paramref name="cr2" /> 具有相同的位置。</returns>
      <param name="cr1">比较的第一 <see cref="T:System.Windows.CornerRadius" /> 。</param>
      <param name="cr2">比较的第二 <see cref="T:System.Windows.CornerRadius" /> 。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
      <summary>获取或设置该左上角的半径。 </summary>
      <returns>左上角的半径。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
      <summary>获取或设置右上角的半径。 </summary>
      <returns>右上角的半径。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
      <summary>返回 <see cref="T:System.Windows.CornerRadius" />的字符串表示形式。 </summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" />的字符串表示形式。</returns>
    </member>
    <member name="T:System.Windows.CornerRadiusConverter">
      <summary>来回 <see cref="T:System.Windows.CornerRadius" />转换为其他类型的实例。 </summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.CornerRadiusConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示对象是否能从特定类型转换为 <see cref="T:System.Windows.CornerRadius" />。 </summary>
      <returns>true ，如果 <paramref name="sourceType" /> 是类型 <see cref="T:System.String" />;否则， false。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="sourceType">用于将查询的源 <see cref="T:System.Type" /> 支持。</param>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定 <see cref="T:System.Windows.CornerRadius" /> 值是否可以转换为指定的类型。 </summary>
      <returns>true ，如果 <paramref name="destinationType" /> 是类型 <see cref="T:System.String" />;否则， false。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="destinationType">所需类型此 <see cref="T:System.Windows.CornerRadius" /> 计算转换。</param>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>转换为 <see cref="T:System.Windows.CornerRadius" />的指定对象。</summary>
      <returns>从转换 <paramref name="source" />创建的 <see cref="T:System.Windows.CornerRadius" /> 。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述转换的类型的 <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="source">已转换的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 不是 null 并不是可转换为 <see cref="T:System.Windows.CornerRadius" />的有效类型。</exception>
    </member>
    <member name="M:System.Windows.CornerRadiusConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的 <see cref="T:System.Windows.CornerRadius" /> 转换为指定的类型。</summary>
      <returns>从将此 <see cref="T:System.Windows.CornerRadius" /> 创建的对象 (字符串)。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述转换的类型的 <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="value">转换的 <see cref="T:System.Windows.CornerRadius" /> 。</param>
      <param name="destinationType">转换 <see cref="T:System.Windows.CornerRadius" /> 的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 null 并且不是 <see cref="T:System.Windows.Media.Brush" />，或者，如果 <paramref name="destinationType" /> 不是有效的目标类型。</exception>
    </member>
    <member name="T:System.Windows.DataTemplate">
      <summary>描述数据对象的可视结构。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.DataTemplate" /> 类的新实例使用指定的 <see cref="P:System.Windows.DataTemplate.DataType" /> 属性。</summary>
      <param name="dataType">如果模板供对象数据，这是数据对象的类型名称。 </param>
    </member>
    <member name="P:System.Windows.DataTemplate.DataTemplateKey">
      <summary>获取 <see cref="T:System.Windows.DataTemplate" />的默认键。 </summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" />的默认键。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.DataType">
      <summary>获取或设置此 <see cref="T:System.Windows.DataTemplate" /> 预期的类型。 </summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.DataTemplate.Triggers">
      <summary>获取应用属性值或根据一个或多个条件的事件触发器的集合。</summary>
      <returns>trigger 对象的集合。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>基于校验模板化父规则集。</summary>
      <param name="templatedParent">元素此模板是应用。</param>
    </member>
    <member name="T:System.Windows.DataTemplateKey">
      <summary>表示 <see cref="T:System.Windows.DataTemplate" /> 类的资源键。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DataTemplateKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.DataTemplateKey" /> 类的新实例具有指定类型的。</summary>
      <param name="dataType">此模板模型的类型。这是 <see cref="T:System.Type" /> (指示 <see cref="T:System.Windows.DataTemplate" /> 用于显示给定类型的项)，或者字符串 (指示 <see cref="T:System.Windows.DataTemplate" /> 来显示具有给定的标记名称的 <see cref="T:System.Xml.XmlNode" /> 元素)。</param>
    </member>
    <member name="T:System.Windows.DataTrigger">
      <summary>表示应用属性值或执行操作的触发器，该绑定数据与指定的条件时。</summary>
    </member>
    <member name="M:System.Windows.DataTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DataTrigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.DataTrigger.Binding">
      <summary>获取或设置导致数据对象的属性的绑定。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>处理大小写标记扩展 <see cref="T:System.Windows.DataTrigger" /> 对象的属性的位置提供值。</summary>
      <param name="targetObject">对象标记扩展将值的位置。</param>
      <param name="eventArgs">与标记扩展处理关系数据。</param>
    </member>
    <member name="P:System.Windows.DataTrigger.Setters">
      <summary>获取 <see cref="T:System.Windows.Setter" /> 对象的集合，描述属性值应用，该数据项满足指定条件时。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="P:System.Windows.DataTrigger.Value">
      <summary>获取或设置值与数据对象进行比较的属性值。</summary>
      <returns>默认值为 null。异常参见部分。</returns>
      <exception cref="T:System.ArgumentException">仅加载时 <see cref="T:System.Windows.Markup.MarkupExtension" />的支持。</exception>
      <exception cref="T:System.ArgumentException">表达式不受支持。绑定不受支持。</exception>
    </member>
    <member name="T:System.Windows.DeferrableContent">
      <summary>表示在 BAML 中保存为流的 deferrable 内容。</summary>
    </member>
    <member name="T:System.Windows.DeferrableContentConverter">
      <summary>转换流转换为 <see cref="T:System.Windows.DeferrableContent" /> 实例。</summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DeferrableContentConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换为 <see cref="T:System.Windows.DeferrableContent" /> 对象的指定对象。</summary>
      <returns>true ，如果该转换器可以执行转换;否则， false。 </returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。 </param>
      <param name="sourceType">
        <see cref="T:System.Type" /> 表示的类型要强制转换为。 </param>
    </member>
    <member name="M:System.Windows.DeferrableContentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的流转换为新的 <see cref="T:System.Windows.DeferrableContent" /> 对象。</summary>
      <returns>新的 <see cref="T:System.Windows.DeferrableContent" /> 对象。</returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。 </param>
      <param name="culture">使用的 <see cref="T:System.Globalization.CultureInfo" /> 为当前区域性。 </param>
      <param name="value">转换的源流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="context" /> 无法为 BAML 提供必要的 XAML 架构上下文。- 或 -<see cref="T:System.Windows.Markup.IProvideValueTarget" /><paramref name="context" /> 的服务解释确定目标对象不是 <see cref="T:System.Windows.ResourceDictionary" />。- 或 -<paramref name="value" /> 不是有效的字节流。</exception>
    </member>
    <member name="T:System.Windows.DependencyPropertyHelper">
      <summary>为 依赖项属性的有效值提供一个帮助器方法 (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) 报告属性系统源。</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回报告指定的 依赖项属性 的各种元数据和属性系统功能在特定 <see cref="T:System.Windows.DependencyObject" />的结构。</summary>
      <returns>报告的信息的 <see cref="T:System.Windows.ValueSource" /> 结构。</returns>
      <param name="dependencyObject">包含 <paramref name="dependencyProperty" /> 报告信息的元素。</param>
      <param name="dependencyProperty">依赖项属性的标识符可以报告信息。</param>
    </member>
    <member name="T:System.Windows.DialogResultConverter">
      <summary>与其他类型进行来回转换 <see cref="P:System.Windows.Window.DialogResult" /> 属性，其类型为 <see cref="T:System.Boolean" />的 <see cref="T:System.Nullable`1" /> 值，。</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DialogResultConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持将所有其他类型都 <see cref="P:System.Windows.Window.DialogResult" /> (类型 <see cref="T:System.Boolean" />) 的 <see cref="T:System.Nullable`1" /> 值。</summary>
      <returns>始终返回 false的 <see cref="T:System.Boolean" /> 。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="sourceType">表示类型转换的 <see cref="T:System.Type" /> 。</param>
    </member>
    <member name="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持将 <see cref="P:System.Windows.Window.DialogResult" /> (类型 <see cref="T:System.Boolean" />) 的 <see cref="T:System.Nullable`1" /> 值转换为其他类型。</summary>
      <returns>始终返回 false的 <see cref="T:System.Boolean" /> 。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="destinationType">表示类型转换的 <see cref="T:System.Type" /> 。</param>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持将 <see cref="P:System.Windows.Window.DialogResult" /> (类型 <see cref="T:System.Boolean" />) 的 <see cref="T:System.Nullable`1" /> 值转换为其他类型。</summary>
      <returns>始终引发 <see cref="T:System.InvalidOperationException" />。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="cultureInfo">使用的 <see cref="T:System.Globalization.CultureInfo" /> 为当前区域性。如果 null 通过，当前区域性假定。</param>
      <param name="source">转换的 <see cref="T:System.Object" /> 。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> 调用。</exception>
    </member>
    <member name="M:System.Windows.DialogResultConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <see cref="T:System.Windows.DialogResultConverter" /> 不支持将所有其他类型都 <see cref="P:System.Windows.Window.DialogResult" /> (类型 <see cref="T:System.Boolean" />) 的 <see cref="T:System.Nullable`1" /> 值。</summary>
      <returns>始终引发 <see cref="T:System.InvalidOperationException" />。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="cultureInfo">使用的 <see cref="T:System.Globalization.CultureInfo" /> 为当前区域性。如果 null 通过，当前区域性假定。</param>
      <param name="value">转换的 <see cref="T:System.Object" /> 。</param>
      <param name="destinationType">转换值参数的 <see cref="T:System.Type" /> 。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> 调用。</exception>
    </member>
    <member name="T:System.Windows.DynamicResourceExtension">
      <summary>实现支持动态资源引用。 XAML进行的标记扩展。 </summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DynamicResourceExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.DynamicResourceExtension" /> 类的新实例，使用提供的初始键。</summary>
      <param name="resourceKey">此标记扩展引用资源的键。</param>
    </member>
    <member name="M:System.Windows.DynamicResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回在属性应设置此扩展的应用对象。对于 <see cref="T:System.Windows.DynamicResourceExtension" />，这是在 <see cref="P:System.Windows.DynamicResourceExtension.ResourceKey" />密钥的当前父链的资源字典中的对象。</summary>
      <returns>设置的对象在扩展应用于的属性。而不是实际值，这将是后要计算的表达式。</returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。</param>
      <exception cref="T:System.InvalidOperationException">尝试对未提供 <paramref name="resourceKey" />的扩展提供值。</exception>
    </member>
    <member name="P:System.Windows.DynamicResourceExtension.ResourceKey">
      <summary>获取或设置此动态资源指定的键引用。键用于查找资源在资源字典，将一个中间表达式。</summary>
      <returns>此动态资源引用的资源键指定。</returns>
    </member>
    <member name="T:System.Windows.DynamicResourceExtensionConverter">
      <summary>从 XAML 分析的转换到 <see cref="T:System.Windows.DynamicResourceExtension" /> 和支持动态资源引用由 XAML 进行。 </summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.DynamicResourceExtensionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回指示此转换器使用上下文，是否的值可以转换为特定目标类型的对象。 </summary>
      <returns>true ，如果 <paramref name="destinationType" /> 是 <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />的类型;否则， false。</returns>
      <param name="context">所提供的类型应计算的上下文。</param>
      <param name="destinationType">转换目标/输出的类型。</param>
    </member>
    <member name="M:System.Windows.DynamicResourceExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换到另一种类型的指定的对象。</summary>
      <returns>返回已转换的对象。转换为请求的类型。通常应将到 <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />。</returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="culture">指定区域性表示数字的 <see cref="T:System.Globalization.CultureInfo" /> 对象。 </param>
      <param name="value">将转换后的值。这应为类型 <see cref="T:System.Windows.DynamicResourceExtension" />。</param>
      <param name="destinationType">键入翻译。 </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不能指派为 <see cref="T:System.Windows.DynamicResourceExtension" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 是 null。</exception>
    </member>
    <member name="T:System.Windows.EventSetter">
      <summary>表示样式的一个事件 setter。事件 setter 调用指定的事件处理程序以响应事件。</summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.EventSetter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)">
      <summary>使用提供的事件和处理程序参数， <see cref="T:System.Windows.EventSetter" /> 初始化类的新实例，。 </summary>
      <param name="routedEvent">特定路由事件 <see cref="T:System.Windows.EventSetter" /> 响应。</param>
    </member>
    <member name="P:System.Windows.EventSetter.Event">
      <summary>获取或设置特定 路由事件 此 <see cref="T:System.Windows.EventSetter" /> 响应。</summary>
      <returns>路由事件的标识符字段。</returns>
      <exception cref="T:System.InvalidOperationException">尝试设置在密封 <see cref="T:System.Windows.EventSetter" /> 了此属性。</exception>
    </member>
    <member name="P:System.Windows.EventSetter.HandledEventsToo">
      <summary>获取或设置确定的值处理程序将分配给 setter 是否仍应调用，因此，即使该事件在其事件数据已标记为已处理。 </summary>
      <returns>true ，如果处理程序仍应调用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.EventSetter.Handler">
      <summary>获取或设置引用路由事件的处理程序在 setter。 </summary>
      <returns>对由此 <see cref="T:System.Windows.EventSetter" />附加的处理程序。</returns>
    </member>
    <member name="T:System.Windows.EventTrigger">
      <summary>表示应用设置事件以响应操作的触发器。</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.EventTrigger" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)">
      <summary>初始化 <see cref="T:System.Windows.EventTrigger" /> 类的新实例与指定的事件。</summary>
      <param name="routedEvent">激活该触发器的 <see cref="T:System.Windows.RoutedEvent" /> 。</param>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
      <summary>，当发生事件时，获取事件的收集应用。</summary>
      <returns>默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.EventTrigger.AddChild(System.Object)">
      <summary>向时事触发器的 <see cref="P:System.Windows.EventTrigger.Actions" /> 集合中指定的对象。</summary>
      <param name="value">添加的 <see cref="T:System.Windows.TriggerAction" /> 对象到此触发器的 <see cref="P:System.Windows.EventTrigger.Actions" /> 集合。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.AddText(System.String)">
      <summary>此方法不支持它不会导致异常。</summary>
      <param name="text">不使用此参数。</param>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
      <summary>获取或设置将激活该触发器的 <see cref="T:System.Windows.RoutedEvent" /> 。</summary>
      <returns>默认值为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.EventTrigger.RoutedEvent" /> 属性不能为空。</exception>
    </member>
    <member name="M:System.Windows.EventTrigger.ShouldSerializeActions">
      <summary>返回序列化过程是否应序列化 <see cref="P:System.Windows.EventTrigger.Actions" /> 属性的有效值此类实例的。</summary>
      <returns>，如果序列化，返回 true<see cref="P:System.Windows.EventTrigger.Actions" /> 属性值;否则， false。</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.SourceName">
      <summary>获取或设置对象的名称与激活该触发器的事件。元素触发器或模板触发器只使用此类型。</summary>
      <returns>默认值为 null。如果此属性为 null，则为引发监控的元素事件是模板化父或逻辑树的根。</returns>
      <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Windows.EventTrigger" /> 正在使用后，就不能修改它。</exception>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
      <summary>为 <see cref="T:System.Windows.Controls.Image" /> 和 <see cref="T:System.Windows.Controls.MediaElement" /> 失败事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <summary>获取导致错误状态的异常。</summary>
      <returns>详细特定错误条件的异常。</returns>
      <exception cref="T:System.Security.SecurityException">访问的尝试媒体文件被拒绝。</exception>
      <exception cref="T:System.IO.FileNotFoundException">未找到媒体文件。</exception>
      <exception cref="T:System.IO.FileFormatException">媒体文件格式不跟任何安装的 编解码器支持。- 或 -文件格式不识别。</exception>
      <exception cref="T:System.NotSupportedException">或更高版本未检测到 Windows Media Player 版本 10。- 或 -视频资源的媒体播放是不够的。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">COM 错误代码显示。</exception>
    </member>
    <member name="T:System.Windows.ExitEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.Exit" /> 事件的事件参数。</summary>
    </member>
    <member name="P:System.Windows.ExitEventArgs.ApplicationExitCode">
      <summary>获取或设置应用程序返回到操作系统的退出代码，当应用程序退出时。</summary>
      <returns>应用程序返回到操作系统的退出代码，当应用程序退出。</returns>
    </member>
    <member name="T:System.Windows.ExitEventHandler">
      <summary>表示该方法处理 <see cref="E:System.Windows.Application.Exit" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.FigureHorizontalAnchor">
      <summary>描述一个位置为一个水平方向正在引用。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnCenter">
      <summary>锚定运行在列的内容区域的中心。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnLeft">
      <summary>在列的内容区域左边锚定该图中。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ColumnRight">
      <summary>在列的内容区域右侧锚定该图中。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentCenter">
      <summary>锚定运行在页的内容区域的中心。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentLeft">
      <summary>在页的内容区域左边锚定该图中。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.ContentRight">
      <summary>在页的内容区域右侧锚定该图中。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageCenter">
      <summary>锚定运行在页区域的中心。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageLeft">
      <summary>在页区域左边锚定该图中。</summary>
    </member>
    <member name="F:System.Windows.FigureHorizontalAnchor.PageRight">
      <summary>在页区域右侧锚定该图中。</summary>
    </member>
    <member name="T:System.Windows.FigureLength">
      <summary>描述 <see cref="T:System.Windows.Documents.Figure" />的高度或宽度。</summary>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double)">
      <summary>初始化 <see cref="T:System.Windows.FigureLength" /> 类的新实例与长度像素的指定数量的。</summary>
      <param name="pixels">组成该长度与设备无关的像素 (96 像素每英寸) 的数目。</param>
    </member>
    <member name="M:System.Windows.FigureLength.#ctor(System.Double,System.Windows.FigureUnitType)">
      <summary>初始化 <see cref="T:System.Windows.FigureLength" /> 类的新实例使用指定的 <see cref="P:System.Windows.FigureLength.Value" /> 和 <see cref="P:System.Windows.FigureLength.FigureUnitType" />的。</summary>
      <param name="value">
        <see cref="T:System.Windows.FigureLength" /> 类的 <see cref="P:System.Windows.FigureLength.Value" /> 。</param>
      <param name="type">
        <see cref="P:System.Windows.FigureLength.FigureUnitType" /> 类的 <see cref="P:System.Windows.FigureLength.Value" /> 。</param>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否 <see cref="T:System.Windows.FigureLength" /> ，并且是否与此 <see cref="T:System.Windows.FigureLength" />相同。</summary>
      <returns>true ，如果 <paramref name="oCompare" /> 是 <see cref="T:System.Windows.FigureLength" /> 并将此 <see cref="T:System.Windows.FigureLength" />相同;否则， false。</returns>
      <param name="oCompare">比较的 <see cref="T:System.Object" /> 与此实例。</param>
    </member>
    <member name="M:System.Windows.FigureLength.Equals(System.Windows.FigureLength)">
      <summary>比较相等的两 <see cref="T:System.Windows.FigureLength" /> 结构。</summary>
      <returns>true ，如果 <paramref name="figureLength" /> 与此 <see cref="T:System.Windows.FigureLength" />相同;否则， false。</returns>
      <param name="figureLength">比较的 <see cref="T:System.Windows.FigureLength" /> 与此实例。</param>
    </member>
    <member name="P:System.Windows.FigureLength.FigureUnitType">
      <summary>获取 <see cref="P:System.Windows.FigureLength.Value" />的单位类型。</summary>
      <returns>此 <see cref="P:System.Windows.FigureLength.Value" />的单位类型。默认值为 <see cref="F:System.Windows.FigureUnitType.Auto" />。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.FigureLength" />的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.FigureLength" /> 结构的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAbsolute">
      <summary>获取用于确定的值此 <see cref="T:System.Windows.FigureLength" /> 是否表示一个绝对值 (以像素为单位)。</summary>
      <returns>true ，如果此 <see cref="T:System.Windows.FigureLength" /> 一个表示绝对值 (以像素为单位);否则， 错误。默认值为 错误。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsAuto">
      <summary>获取用于确定的值此 <see cref="T:System.Windows.FigureLength" /> 是否是自动的 (未指定)。</summary>
      <returns>true ，如果此 <see cref="T:System.Windows.FigureLength" /> 是自动的 (未指定);否则， 错误。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsColumn">
      <summary>获取用于确定的值此 <see cref="T:System.Windows.FigureLength" /> 是否有 <see cref="F:System.Windows.FigureUnitType.Column" />的一个 <see cref="T:System.Windows.FigureUnitType" /> 属性值。</summary>
      <returns>true ，如果此 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="F:System.Windows.FigureUnitType.Column" />的一个 <see cref="T:System.Windows.FigureUnitType" /> 属性值;否则， 错误。默认值为 错误。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsContent">
      <summary>获取用于确定的值此 <see cref="T:System.Windows.FigureLength" /> 是否有 <see cref="F:System.Windows.FigureUnitType.Content" />的一个 <see cref="T:System.Windows.FigureUnitType" /> 属性值。</summary>
      <returns>，如果此 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="F:System.Windows.FigureUnitType.Content" />，将会 <see cref="T:System.Windows.FigureUnitType" /> 属性值返回 true ;否则， 错误。默认值为 错误。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.IsPage">
      <summary>获取用于确定的值此 <see cref="T:System.Windows.FigureLength" /> 是否有 <see cref="F:System.Windows.FigureUnitType.Page" />的一个 <see cref="T:System.Windows.FigureUnitType" /> 属性值。</summary>
      <returns>true ，如果此 <see cref="T:System.Windows.FigureLength" /> 具有 <see cref="F:System.Windows.FigureUnitType.Page" />的一个 <see cref="T:System.Windows.FigureUnitType" /> 属性值;否则， 错误。默认值为 错误。</returns>
    </member>
    <member name="M:System.Windows.FigureLength.op_Equality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>比较相等的两 <see cref="T:System.Windows.FigureLength" /> 结构。</summary>
      <returns>true ，如果 <paramref name="fl1" /> 和 <paramref name="fl2" /> 相等;否则， false。</returns>
      <param name="fl1">比较的第一 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
      <param name="fl2">比较的第二 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
    </member>
    <member name="M:System.Windows.FigureLength.op_Inequality(System.Windows.FigureLength,System.Windows.FigureLength)">
      <summary>比较不相等的两 <see cref="T:System.Windows.FigureLength" /> 结构。</summary>
      <returns>true ，如果 <paramref name="fl1" /> 和 <paramref name="fl2" /> 不相等;否则， false。</returns>
      <param name="fl1">比较的第一 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
      <param name="fl2">比较的第二 <see cref="T:System.Windows.FigureLength" /> 结构。</param>
    </member>
    <member name="M:System.Windows.FigureLength.ToString">
      <summary>创建此 <see cref="T:System.Windows.FigureLength" />的一个 <see cref="T:System.String" /> 表示。</summary>
      <returns>此 <see cref="T:System.Windows.FigureLength" />的 <see cref="T:System.String" /> 表示。</returns>
    </member>
    <member name="P:System.Windows.FigureLength.Value">
      <summary>获取此 <see cref="T:System.Windows.FigureLength" />的值。 </summary>
      <returns>此 <see cref="T:System.Windows.FigureLength" />的值。默认值为 1。</returns>
    </member>
    <member name="T:System.Windows.FigureLengthConverter">
      <summary>来回 <see cref="T:System.Windows.FigureLength" />转换为其他类型的实例。</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FigureLengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示对象是否能从特定类型转换为 <see cref="T:System.Windows.FigureLength" />的实例。</summary>
      <returns>true ，如果指定类型的对象可以转换为 <see cref="T:System.Windows.FigureLength" />;否则， false。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="sourceType">用于将查询的源 <see cref="T:System.Type" /> 支持。</param>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定 <see cref="T:System.Windows.FigureLength" /> 实例是否可以转换为指定的类型。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.FigureLength" /> 实例可以转换为 <paramref name="destinationType" />;否则， false。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="destinationType">所需类型此 <see cref="T:System.Windows.FigureLength" /> 计算转换。</param>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>转换为 <see cref="T:System.Windows.FigureLength" />的指定对象。</summary>
      <returns>从转换 <paramref name="source" />创建的 <see cref="T:System.Windows.FigureLength" /> 。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述转换的类型的 <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="source">已转换的对象。</param>
    </member>
    <member name="M:System.Windows.FigureLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的 <see cref="T:System.Windows.FigureLength" /> 转换为指定的类型。</summary>
      <returns>从将此 <see cref="T:System.Windows.FigureLength" />创建的对象。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">描述转换的类型的 <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="value">转换的 <see cref="T:System.Windows.FigureLength" /> 。</param>
      <param name="destinationType">转换 <see cref="T:System.Windows.FigureLength" /> 的类型。</param>
    </member>
    <member name="T:System.Windows.FigureUnitType">
      <summary>介绍单元类型与 <see cref="T:System.Windows.FigureLength" />的宽度或高度。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Auto">
      <summary>默认值，但在 <see cref="T:System.Windows.FigureLength" /> 未指定哪些创建计算，而无需约束 <see cref="T:System.Windows.Documents.Figure" /> 的宽度或高度的值。注意: ，当 <see cref="T:System.Windows.FigureUnitType" /> 设置为 <see cref="F:System.Windows.FigureUnitType.Auto" />时， <see cref="T:System.Windows.FigureLength" /><see cref="P:System.Windows.FigureLength.Value" /> 属性设置为 1。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Column">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> 的宽度或高度值表示，在部分 (包括部分大大超过 1) 列的宽度 <see cref="T:System.Windows.Documents.Figure" /> 。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Content">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> 的宽度或高度值表示为分数 (包括部分大大超过 1) <see cref="T:System.Windows.Documents.Figure" />的内容的宽度。注意:必须设置 注意: ，当 <see cref="T:System.Windows.FigureUnitType" /> 设置为 <see cref="F:System.Windows.FigureUnitType.Content" />时， <see cref="T:System.Windows.FigureLength" /><see cref="P:System.Windows.FigureLength.Value" /> 特性添加到 0 和 1范围的值。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Page">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> 的宽度或高度值表示为分数 (包括部分大大超过 1) 的页宽 <see cref="T:System.Windows.Documents.Figure" /> 。注意:必须设置 注意: ，当 <see cref="T:System.Windows.FigureUnitType" /> 设置为 <see cref="F:System.Windows.FigureUnitType.Page" />时， <see cref="T:System.Windows.FigureLength" /><see cref="P:System.Windows.FigureLength.Value" /> 特性添加到 0 和 1范围的值。</summary>
    </member>
    <member name="F:System.Windows.FigureUnitType.Pixel">
      <summary>
        <see cref="T:System.Windows.Documents.Figure" /> 的宽度或高度的值由像素 (96 像素每英寸) 表示。</summary>
    </member>
    <member name="T:System.Windows.FigureVerticalAnchor">
      <summary> 描述点引用在垂直方向的一个图形。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentBottom">
      <summary> 锚定该图中对页内容区域的底部。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentCenter">
      <summary> 锚定该图中对页内容区域的中心。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ContentTop">
      <summary> 在页的内容区域的左边和该图中。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageBottom">
      <summary> 锚定该图中对页区域的底部。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageCenter">
      <summary> 锚定该图中对页区域的中心。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.PageTop">
      <summary> 在页区域的左边和该图中。 </summary>
    </member>
    <member name="F:System.Windows.FigureVerticalAnchor.ParagraphTop">
      <summary> 在当前段的左边和该图中。 </summary>
    </member>
    <member name="T:System.Windows.FontSizeConverter">
      <summary>与其他类型进行来回表示平移字号值。</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FontSizeConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定从一个指定类型的转换到 <see cref="T:System.Double" /> 值是可能的。</summary>
      <returns>true ，如果 <paramref name="sourceType" /> 可以转换为 <see cref="T:System.Double" />;否则， false。</returns>
      <param name="context">描述一个元素的上下文信息 (如其容器和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="sourceType">标识数据类型为转换的目的计算。</param>
    </member>
    <member name="M:System.Windows.FontSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定字体大小值转换为一个指定类型是可能的。</summary>
      <returns>true ，则可以将此类型;否则， false。</returns>
      <param name="context">一个元素的上下文信息 (如其容器和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="destinationType">计算的数据类型对于转换的用途。</param>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的类型转换为 <see cref="T:System.Double" />。</summary>
      <returns>表示转换的字体大小值的 <see cref="T:System.Double" /> 值。</returns>
      <param name="context">一个元素的上下文信息 (如其容器和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="culture">区域性特定的信息，包括使用编写系统和日历。</param>
      <param name="value">转换为字号的值。</param>
    </member>
    <member name="M:System.Windows.FontSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换 <see cref="T:System.Double" /> 值转换为指定的类型。</summary>
      <returns>是要转换的值的新 <see cref="T:System.Object" /> 。</returns>
      <param name="context">一个元素的上下文信息 (如其容器和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="culture">区域性特定的信息，包括使用编写系统和日历。</param>
      <param name="value">转换后的 <see cref="T:System.Object" /> 。</param>
      <param name="destinationType">数据类型此字体大小的值的转换。</param>
    </member>
    <member name="T:System.Windows.FrameworkCompatibilityPreferences">
      <summary>包含属性，用于指定应用程序相对于 PresentationFramework 程序集中的 WPF 功能的行为方式。</summary>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported">
      <summary>获取或设置一个值，指示应用程序是否应使用<see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" />和<see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" />属性为非活动状态的选定项的颜色。</summary>
      <returns>true如果应用程序应使用<see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" />和<see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" />的非活动状态的选定项 ； 颜色的属性 否则为false</returns>
    </member>
    <member name="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty">
      <summary>获取或设置一个值，指示是否将数据绑定<see cref="T:System.Windows.Controls.TextBox" />应显示一个字符串，它与源中的值相同的<see cref="P:System.Windows.Controls.TextBox.Text" />属性</summary>
      <returns>true如果数据绑定<see cref="T:System.Windows.Controls.TextBox" />应显示一个字符串，它与源中的值相同的<see cref="P:System.Windows.Controls.TextBox.Text" />属性。 否则为false。</returns>
    </member>
    <member name="T:System.Windows.FrameworkContentElement">
      <summary>
        <see cref="T:System.Windows.FrameworkContentElement" /> 是 <see cref="T:System.Windows.ContentElement" /> 基类的 框架级别的 WPF 实现和展开。<see cref="T:System.Windows.FrameworkContentElement" /> 添加对附加输入 API (包括工具提示和上下文菜单)，演示图板，数据绑定的数据上下文支持，样式支持和逻辑树帮助器 API。</summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkContentElement" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)">
      <summary>添加所提供的元素作为此元素的子级。 </summary>
      <param name="child">要添加的子元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginInit">
      <summary>对元素进行初始化。 </summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>开始在所提供的演示图板包含的序列。 </summary>
      <param name="storyboard">开始的 storyboard。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary> 开始在所提供的演示图板包含的序列，当选项指定为时发生什么。，如果属性已进行动画处理。 </summary>
      <param name="storyboard">开始的 storyboard。</param>
      <param name="handoffBehavior">描述行为使用枚举的值，如果在演示图板描述的属性中尚未进行动画处理。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary> 开始在所提供的演示图板包含的序列，以动画的控件的指定的状态，在启动后。 </summary>
      <param name="storyboard">开始的 storyboard。 </param>
      <param name="handoffBehavior">描述行为使用枚举的值，如果在演示图板描述的属性中尚未进行动画处理。</param>
      <param name="isControllable">声明动画是否可控件 (可以暂停)，在启动后。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.BindingGroup">
      <summary>获取或设置用于组件的 <see cref="T:System.Windows.Data.BindingGroup" /> 。 </summary>
      <returns>使用组件的 <see cref="T:System.Windows.Data.BindingGroup" /> 。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.BindingGroupProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.BindingGroup" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.BringIntoView">
      <summary>尝试将此元素访问视图中，在所有可滚动的区域它包含内。 </summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ContextMenu">
      <summary>获取或设置要显示的上下文菜单元素，只要上下文菜单。 用户界面 (UI) 请求来自此元素内。 </summary>
      <returns>此元素使用的上下文菜单。 </returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuClosing">
      <summary>，在元素的所有上下文菜单关闭之前，发生。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" />路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> 事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ContextMenuOpening">
      <summary> ，打开时，发生在元素的所有上下文菜单。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" />路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ContextMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.ContextMenu" /> 依赖项属性 标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Cursor">
      <summary>获取或设置显示的光标鼠标指针何时在此元素。</summary>
      <returns>显示的光标。默认定义为 null 每个此依赖项属性。但是，在运行时的实际默认值将来自各种因素。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.CursorProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.Cursor" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DataContext">
      <summary>，它将参与数据绑定时，获取或设置元素的数据上下文。 </summary>
      <returns>对于使用的对象作为数据上下文。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.DataContextChanged">
      <summary> ，在此元素的数据上下文发生更改，发生。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DataContextProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.DataContext" /> 依赖项属性 标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.DefaultStyleKey">
      <summary>获取或设置键使用查找此控件的样式模板在主题。 </summary>
      <returns>样式键。在主题样式查找一部分，若要正常工作，此值应为带样式的元素的 <see cref="T:System.Type" /> 。null 属于某一用例的一个接受值;请参见 " 备注 "。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey" /> 依赖项属性 标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.EndInit">
      <summary> 调用在元素之后初始化。 </summary>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindName(System.String)">
      <summary> 查找具有提供的标识符名称的元素。 </summary>
      <returns>请求的元素。; 如果未找到，可能为 null 匹配的元素。</returns>
      <param name="name">搜索的元素的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.FindResource(System.Object)">
      <summary> ，如果找不到，则搜索具有指定密钥的资源和引发异常以找到请求的资源。 </summary>
      <returns>已找到资源或 null ，如果未找到匹配的资源 (不过，也会引发异常，如果 null)。</returns>
      <param name="resourceKey">将找到的资源的键标识符。</param>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">未找到请求的资源键。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.FocusVisualStyle">
      <summary>获取或设置一个外观、角色，或其他样式特性自定义设置将应用于此元素的对象，则获取键盘焦点时。</summary>
      <returns>将所需的样式焦点。默认为声明依赖项属性为 null 的静态 <see cref="T:System.Windows.Style" />。但是，在运行时的有效值 (通常，但不总是) 是样式如提供主题提供控件的支持。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ForceCursor">
      <summary>获取或设置指示此是否 <see cref="T:System.Windows.FrameworkContentElement" /> 的值应强制 用户界面 (UI) 呈现光标如声明此实例的 <see cref="P:System.Windows.FrameworkContentElement.Cursor" /> 属性。</summary>
      <returns> 强制光标表示的true ，在此元素对游标时使用设置的实例 (包括所有子元素);否则 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ForceCursorProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.ForceCursor" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary> 获取指定的属性绑定 <see cref="T:System.Windows.Data.BindingExpression" /> 。 </summary>
      <returns>，如果目标是数据绑定，返回 <see cref="T:System.Windows.Data.BindingExpression" /> ;否则， null。</returns>
      <param name="dp">目标的 <see cref="T:System.Windows.DependencyProperty" /> 获取绑定。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.GetUIParentCore">
      <summary>; 如果没有可视父级，则返回此元素的其他逻辑父级。在这种情况下， <see cref="T:System.Windows.FrameworkContentElement" /> 父始终是值和 <see cref="P:System.Windows.FrameworkContentElement.Parent" /> 属性相同。</summary>
      <returns>返回不同于 null 外，无论此方法的 框架级别的 WPF 实现具有非可视父连接。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Initialized">
      <summary>，在此 <see cref="T:System.Windows.FrameworkContentElement" /> 初始化，发生。这与 <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> 属性的值从 false 更改的情况下进行匹配 (或未定义) true。</summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.InputScope">
      <summary>获取或设置此 <see cref="T:System.Windows.FrameworkContentElement" />使用输入的上下文。</summary>
      <returns>输入范围，修改输入从不同输入法如何解释。默认值为 (生成默认处理命令) 的 null 。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.InputScopeProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.InputScope" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.InputScope" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsInitialized">
      <summary>获取显式指示此元素是否的值通过加载已初始化，或者 可扩展应用程序标记语言 (XAML)，或者让其 <see cref="M:System.Windows.FrameworkContentElement.EndInit" /> 方法调用。 </summary>
      <returns>true ，如果该元素的每个以上加载或方法初始化调用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.IsLoaded">
      <summary>获取指示此元素是否的值用于呈现加载的。 </summary>
      <returns>true ，如果当前元素附加到元素树和呈现; false ，如果该元素不附加到一个实心元素树。 </returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Language">
      <summary>获取或设置本地化/全球化应用于单个元素的语言信息。</summary>
      <returns>此元素的区域性信息。默认值为与其 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 值的 <see cref="T:System.Windows.Markup.XmlLanguage" /> 实例设置为字符串 “en-us”。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LanguageProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Language" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.Language" /> 依赖项属性 标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Loaded">
      <summary> 发生，当元素进行布局，呈现时，对交互准备。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.LoadedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.Loaded" />路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.Loaded" /> 事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.LogicalChildren">
      <summary>获取此元素的逻辑种属性元素的枚举数。 </summary>
      <returns>此元素的逻辑种属性元素的枚举数。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary> 从此元素移动键盘焦点移动到另一个元素。 </summary>
      <returns>，如果焦点成功，将返回 true ; false ，如果在定向的目标元素作为指定不存在。</returns>
      <param name="request">焦点将移动后的方向，以枚举的值。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Name">
      <summary>获取或设置元素的标识的名称。该名称提供实例的引用，以便程序模型代码隐藏，如事件处理程序代码，可以引用元素在分析 XAML， ，一旦构造。</summary>
      <returns>元素的名称。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.NameProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Name" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.Name" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>调用，只要该 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>调用，只要该 <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">事件数据将作为事件。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.ContentElement.GotFocus" /> 事件的类处理程序。</summary>
      <param name="e">事件数据将作为事件。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.FrameworkContentElement.Initialized" /> 事件。此方法调用，只要 <see cref="P:System.Windows.FrameworkContentElement.IsInitialized" /> 设置为 true。</summary>
      <param name="e">事件数据将作为事件。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>调用，每当更新了所有 依赖项属性 的有效值本 <see cref="T:System.Windows.FrameworkContentElement" /> 的。更改的特定依赖项属性在实参参数报告。重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">描述属性更改事件数据，包括的旧值和新值。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>调用，当正在使用此元素更改的样式。 </summary>
      <param name="oldStyle">旧样式。</param>
      <param name="newStyle">新样式。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary>调用，只要该 <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary>调用，只要该 <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle">
      <summary>获取或设置指示此元素是否的值将主题样式的样式属性。 </summary>
      <returns>true ，如果此元素不使用主题样式属性;所有样式提供的属性来自本地应用程序的样式，并且，主题样式属性不适用。false ，如果应用程序首先应用样式，主题样式然后应用于应用程序的样式不专门设置的属性。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Parent">
      <summary>获取 逻辑树 的父此元素的。 </summary>
      <returns>此元素的逻辑父级。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>确定将接收焦点相对一个提供的焦点移动方向此元素的下一个元素，但是，实际上不移动焦点。此方法会密封并且不能被复盖。</summary>
      <returns>焦点将移动的下一个元素，如果焦点实际遍历。，如果焦点无法移动相对于所提供的方向，此元素返回 null 。</returns>
      <param name="direction">预期焦点更改应确定的方向。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定了在 <see cref="T:System.Windows.Input.TraversalRequest" />的以下说明: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />， <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />， <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />， <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />。这些说明。 <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (，但不是非法的。 <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />上合法的)。</exception>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)">
      <summary>提供简化对 <see cref="T:System.Windows.NameScope" /> 注册方法的访问器访问。</summary>
      <param name="name">使用的名称为指定的名称对象映射。</param>
      <param name="scopedElement">映射对象。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)">
      <summary>从此元素的 逻辑树 中移除指定的元素。 </summary>
      <param name="child">要移除的元素。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Resources">
      <summary>获取或设置当前本地定义的资源字典。 </summary>
      <returns>当前本地定义的资源。这是资源字典，在字典中的资源由键访问。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>附加绑定到此元素，根据提供的源属性名称作为限定路径传递给数据源。 </summary>
      <returns>记录绑定的条件。此返回值可用于错误检查。</returns>
      <param name="dp">标识绑定属性。</param>
      <param name="path">源属性名称或路径用于绑定的属性。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>附加绑定到此元素，根据提供的绑定对象。 </summary>
      <returns>记录绑定的条件。此返回值可用于错误检查。</returns>
      <param name="dp">标识绑定属性。</param>
      <param name="binding">表示数据绑定。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>搜索具有指定名称的资源和设置了资源对它所指定的属性。 </summary>
      <param name="dp">该资源绑定的属性。</param>
      <param name="name">资源的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeResources">
      <summary>返回序列化过程是否应序列化 <see cref="P:System.Windows.FrameworkContentElement.Resources" /> 属性的内容此类实例的。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.FrameworkContentElement.Resources" /> 属性值;否则， false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle">
      <summary>返回序列化过程是否应序列化 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 属性的内容此类实例的。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 属性值;否则， false。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.SourceUpdated">
      <summary>，当参与此元素中的绑定的所有关联的数据源更改，发生。 </summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Style">
      <summary>获取或设置此组件将使用的样式。  </summary>
      <returns>元素的 (如果有) 应用程序，非默认的样式，。否则， null。默认构造 <see cref="T:System.Windows.FrameworkContentElement" /> 的默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.StyleProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Style" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.Style" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> 方法。</summary>
      <returns>true ，如果 <paramref name="propertyName" /> 可用;否则， false。 </returns>
      <param name="propertyName">请求的单个属性的名称。</param>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.Tag">
      <summary>获取或设置可用于存储有关此元素的自定义信息的任意对象的值。  </summary>
      <returns>预期的值。此属性不具有默认值。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.TagProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.Tag" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.Tag" />的依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.TargetUpdated">
      <summary> ，当参与此元素中的绑定的所有关联的目标属性更改，发生。 </summary>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.TemplatedParent">
      <summary>具有引用此元素的模板父级。，如果组件未通过模板，创建此属性无关。</summary>
      <returns>
        <see cref="T:System.Windows.FrameworkTemplate" /> <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 导致此元素创建的元素。此值通常是 null;请参见 " 备注 "。</returns>
    </member>
    <member name="P:System.Windows.FrameworkContentElement.ToolTip">
      <summary>获取或设置对于 用户界面 (UI)的此元素显示的工具提示对象。 </summary>
      <returns>工具提示对象。请参见下面的 " 备注 "。有关此参数的原因的详细信息不是强类型的。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipClosing">
      <summary> ，在元素的所有工具提示关闭之前，发生。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" />路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing" /> 事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.ToolTipOpening">
      <summary> ，打开时，发生在元素的所有工具提示。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" />路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.ToolTipProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.FrameworkContentElement.ToolTip" /> 依赖项属性 标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)">
      <summary>搜索具有指定密钥的资源，并返回该资源，如果找到。 </summary>
      <returns>找到的资源。如果未找到资源， null 返回。</returns>
      <param name="resourceKey">将找到的资源的键标识符。</param>
    </member>
    <member name="E:System.Windows.FrameworkContentElement.Unloaded">
      <summary>，当元素从加载的元素，元素树中移除发生。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkContentElement.UnloadedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkContentElement.Unloaded" />路由事件概述。 </summary>
      <returns>
        <see cref="E:System.Windows.FrameworkContentElement.Unloaded" /> 事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)">
      <summary>简化对 <see cref="T:System.Windows.NameScope" /> 取消注册方法。</summary>
      <param name="name">名称的对象的名称与从当前范围移除。</param>
    </member>
    <member name="M:System.Windows.FrameworkContentElement.UpdateDefaultStyle">
      <summary>重新应用默认样式的当前 <see cref="T:System.Windows.FrameworkContentElement" />。</summary>
    </member>
    <member name="T:System.Windows.FrameworkElement">
      <summary>为 Windows Presentation Foundation (WPF) 元素提供 WPF 框架级属性集、事件集和方法集。此类表示附带的 WPF 框架级实现，它是基于由 <see cref="T:System.Windows.UIElement" /> 定义的 WPF 核心级 API 构建的。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElement" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
      <summary>获取此元素的呈现高度。</summary>
      <returns>元素的高度，这是一个采用与设备无关的单位（每个单位 1/96 英寸）的值。默认值为 0（零）。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
      <summary>获取此元素的呈现宽度。</summary>
      <returns>元素的宽度，这是一个采用与设备无关的单位（每个单位 1/96 英寸）的值。默认值为 0（零）。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
      <summary>将提供的对象添加到此元素的逻辑树。</summary>
      <param name="child">要添加的子元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ApplyTemplate">
      <summary>在必要时构建当前模板的可视化树，然后返回一个值，该值指示可视化树是否由此调用重新构建。</summary>
      <returns>如果在树中添加了可视对象，则返回 true；否则返回 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
      <summary>实现 <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />（在 <see cref="T:System.Windows.UIElement" /> 中定义为虚拟对象）并密封实现。</summary>
      <param name="finalRect">父级中此元素应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <summary>在派生类中重写时，请为 <see cref="T:System.Windows.FrameworkElement" /> 派生类定位子元素并确定大小。</summary>
      <returns>使用的实际大小。</returns>
      <param name="finalSize">父级中此元素应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginInit">
      <summary>启动此元素的初始化过程。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
      <summary>开始所提供的演示图板中包含的操作序列。</summary>
      <param name="storyboard">要开始的演示图板。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>开始所提供的演示图板中包含的操作序列，并指定选项来指明当已对属性进行动画处理时应发生的行为。</summary>
      <param name="storyboard">要开始的演示图板。</param>
      <param name="handoffBehavior">一个枚举值，该值描述演示图板中描述的属性在经过动画处理后要使用的行为。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary> 开始所提供的演示图板中包含的操作序列，并使动画控件在动画开始后具有指定的状态。</summary>
      <param name="storyboard">要开始的演示图板。</param>
      <param name="handoffBehavior">一个枚举值，该值描述演示图板中描述的属性在经过动画处理后要使用的行为。</param>
      <param name="isControllable">声明在动画开始后是否仍可以对它进行控制（可以暂停）。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.BindingGroup">
      <summary>获取或设置用于该元素的 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
      <returns>用于该元素的 <see cref="T:System.Windows.Data.BindingGroup" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.BindingGroupProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView">
      <summary>尝试将此元素放入其所在的任何可滚动区域内的视图中。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
      <summary>尝试将此元素的提供区域大小放入其所在的任何可滚动区域内的视图中。</summary>
      <param name="targetRectangle">也应放入视图中的元素的指定大小。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.ContextMenu">
      <summary> 获取或设置每当通过用户界面 (UI) 从此元素内部请求上下文菜单时应该显示的上下文菜单元素。</summary>
      <returns>分配给此元素的上下文菜单。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuClosing">
      <summary>在元素上的任何上下文菜单关闭之前发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ContextMenuOpening">
      <summary>在元素上的任何上下文菜单打开时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ContextMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
      <summary>获取或设置在鼠标指针位于此元素上时显示的光标。</summary>
      <returns>要显示的光标。根据此依赖项属性，默认值被定义为 null。但是，运行时的实际默认值将受到多种因素的影响。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
      <summary> 获取或设置元素在参与数据绑定时的数据上下文。</summary>
      <returns>要用作数据上下文的对象。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.DataContextChanged">
      <summary>当此元素的数据上下文更改时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DefaultStyleKey">
      <summary>在使用或定义主题样式时，获取或设置用于引用此控件的样式的键。</summary>
      <returns>样式键。为了在主题样式查找中正确工作，此值应为样式化控件的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> 依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.EndInit">
      <summary>指示元素的初始化过程已完成。</summary>
      <exception cref="T:System.InvalidOperationException">调用 <see cref="M:System.Windows.FrameworkElement.EndInit" /> 之前尚未在元素上调用 <see cref="M:System.Windows.FrameworkElement.BeginInit" />。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
      <summary>查找具有提供的标识符名的元素。</summary>
      <returns>请求的元素。如果未找到匹配的元素，该值将为 null。</returns>
      <param name="name">所请求元素的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindResource(System.Object)">
      <summary>搜索具有指定密钥的资源，如果未找到请求的资源，则会引发异常。</summary>
      <returns>所请求的资源。如果未找到具有所提供键的资源，将引发异常。在发生异常的情况下，可能还会返回一个 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 值。</returns>
      <param name="resourceKey">所请求资源的键标识符。</param>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">找不到 <paramref name="resourceKey" />，且事件管理器对于 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件不存在。- 或 -找不到 <paramref name="resourceKey" />，且 <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> 属性在 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件中为 false。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
      <summary>获取或设置文本和其他用户界面 (UI) 元素在控制它们布局的任何父元素中的流动方向。</summary>
      <returns>文本和其他 UI 元素在它们的父元素中的流动方向，是一个枚举值。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.FocusVisualStyle">
      <summary>获取或设置一个属性，该属性支持自定义将在此元素捕获键盘焦点时应用于此元素的外观、效果或其他样式特征。</summary>
      <returns>要应用于焦点的所需样式。该依赖项属性中声明的默认值是一个空的静态 <see cref="T:System.Windows.Style" />。但是，运行时的有效值通常是（但并非总是）控件的主题支持所提供的样式。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FocusVisualStyleProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ForceCursor">
      <summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.FrameworkElement" /> 是否应该强制用户界面 (UI) 按照 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 属性所声明的方式呈现光标。</summary>
      <returns>如果强制光标在位于此元素（包括所有子元素）上时的呈现使用光标的当前 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 设置，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ForceCursorProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>返回表示指定属性上的绑定的 <see cref="T:System.Windows.Data.BindingExpression" />。</summary>
      <returns>如果目标属性具有活动绑定，将返回 <see cref="T:System.Windows.Data.BindingExpression" />；否则返回 null。</returns>
      <param name="dp">从中获取绑定的目标 <see cref="T:System.Windows.DependencyProperty" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
      <summary>获取指定 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 附加属性的值。</summary>
      <returns>所请求的流方向（作为一个枚举值）。</returns>
      <param name="element">要为其返回 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 的元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
      <summary>返回剪切蒙版的形状。如果布局系统尝试排列的元素大小超过可用显示空间，将会应用蒙版。</summary>
      <returns>剪切形状。</returns>
      <param name="layoutSlotSize">执行可视化演示的元素的部分大小。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
      <summary>返回实例化的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 可视化树中的命名元素。</summary>
      <returns>请求的元素。如果具有所请求名称的元素不存在，则可以为 null。</returns>
      <param name="childName">要查找的子级的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetUIParentCore">
      <summary>如果没有此元素的可视化父级，则返回此元素的备用逻辑父级。</summary>
      <returns>每当此方法的 WPF 框架级实现包含非可视化父级连接时，均返回非 null 的值。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
      <summary>重写 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />，然后从子元素集合返回指定索引处的子级。</summary>
      <returns>所请求的子元素。它不应返回 null；如果提供的索引超出范围，将引发异常。</returns>
      <param name="index">集合中所请求子元素从零开始的索引。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
      <summary> 获取或设置元素的建议高度。</summary>
      <returns>元素的高度（采用与设备无关的单位（每个单位 1/96 英寸））。默认值为 <see cref="F:System.Double.NaN" />。此值必须大于等于 0.0。有关上限信息，请参见“备注”。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Height" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Height" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <summary>获取或设置在父元素(如 Panel 或项控件)中组合此元素时所应用的水平对齐特征。</summary>
      <returns>水平对齐设置，它是一个枚举值。默认值为 <see cref="F:System.Windows.HorizontalAlignment.Stretch" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.InheritanceBehavior">
      <summary>获取或设置属性值继承、资源键查找和RelativeSource FindAncestor 查找的范围限制。</summary>
      <returns>枚举的一个值。默认值为 <see cref="F:System.Windows.InheritanceBehavior.Default" />。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Initialized">
      <summary>初始化此 <see cref="T:System.Windows.FrameworkElement" /> 时发生。此事件与 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性的值从 false（或未定义）更改为 true 的情况相符。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.InputScope">
      <summary>获取或设置此 <see cref="T:System.Windows.FrameworkElement" /> 使用的输入的上下文。</summary>
      <returns>解释输入范围，在该输入范围内修改从其他输入方法输入的方式。默认值为 null（这导致对命令的默认处理）。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.InputScopeProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.InputScope" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.InputScope" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsInitialized">
      <summary>获取一个值，该值指示此元素是否已初始化（在 XAML 处理器处理的过程中初始化，或通过显式调用其 <see cref="M:System.Windows.FrameworkElement.EndInit" /> 方法进行初始化）。</summary>
      <returns>如果已通过上述 XAML 处理或方法调用初始化此元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.IsLoaded">
      <summary>获取一个值，该值指示是否已加载此元素以供呈现。</summary>
      <returns>如果当前元素被附加到元素树，则为 true；如果该元素从未附加到所加载的元素树，则为 false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
      <summary>获取或设置适用于某个元素的本地化/全球化语言信息。</summary>
      <returns>此元素的语言信息。默认值是一个 <see cref="T:System.Windows.Markup.XmlLanguage" />，它的 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 值设置为字符串 "en-US"。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Language" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Language" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.LayoutTransform">
      <summary> 获取或设置在执行布局时应该应用于此元素的图形转换方式。</summary>
      <returns>此元素应该使用的转换。默认值为 <see cref="P:System.Windows.Media.Transform.Identity" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LayoutTransformProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> 依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
      <summary>在元素已布局、已呈现且可用于交互时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.Loaded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.Loaded" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.LogicalChildren">
      <summary> 获取此元素的逻辑子元素的一个枚举器。</summary>
      <returns>此元素的逻辑子元素的一个枚举数。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
      <summary>获取或设置元素的外边距。</summary>
      <returns>提供元素的边距值。默认值是所有属性都等于 0（零）的 <see cref="T:System.Windows.Thickness" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.Margin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Margin" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
      <summary>获取或设置元素的最大高度约束。</summary>
      <returns>元素的最大高度，单位是与设备无关的单位（每个单位 1/96 英寸）。默认值为 <see cref="F:System.Double.PositiveInfinity" />。此值可以是任何大于等于 0.0 的值。<see cref="F:System.Double.PositiveInfinity" /> 也有效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
      <summary>获取或设置元素的最大宽度约束。</summary>
      <returns>元素的最大宽度，单位是与设备无关的单位（每个单位 1/96 英寸）。默认值为 <see cref="F:System.Double.PositiveInfinity" />。此值可以是任何大于等于 0.0 的值。<see cref="F:System.Double.PositiveInfinity" /> 也有效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
      <summary>实现 <see cref="T:System.Windows.FrameworkElement" /> 的基本测量处理过程布局系统行为。</summary>
      <returns>此元素在布局中的所需大小。</returns>
      <param name="availableSize">父元素可以赋予子元素的可用大小。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <summary>当在派生类中重写时，请测量子元素在布局中所需的大小，然后确定 <see cref="T:System.Windows.FrameworkElement" /> 派生类的大小。</summary>
      <returns>此元素根据其子元素大小计算确定的在布局过程中所需的大小。</returns>
      <param name="availableSize">此元素可赋予子元素的可用大小。可以指定无穷大值，这表示元素的大小将调整为内容的可用大小。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
      <summary>获取或设置元素的最小高度约束。</summary>
      <returns>元素的最小高度，单位是与设备无关的单位（每个单位 1/96 英寸）。默认值为 0.0。此值可以是任何大于等于 0.0 的值。但是，<see cref="F:System.Double.PositiveInfinity" /> 无效，<see cref="F:System.Double.NaN" /> 也无效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
      <summary> 获取或设置元素的最小宽度约束。</summary>
      <returns>元素的最小宽度，单位是与设备无关的单位（每个单位 1/96 英寸）。默认值为 0.0。此值可以是任何大于等于 0.0 的值。但是，<see cref="F:System.Double.PositiveInfinity" /> 无效，<see cref="F:System.Double.NaN" /> 也无效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
      <summary>以提供的遍历方向将键盘焦点从此元素移到其他元素上。</summary>
      <returns>如果焦点移动成功，则返回 true；如果指定方向上不存在目标元素，或者未能将键盘焦点移到目标元素上，则返回 false。</returns>
      <param name="request">焦点要移动的方向，作为一个枚举值。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
      <summary>获取或设置元素的标识名称。该名称提供一个引用，以便当 XAML 处理器在处理过程中构造标记元素之后，代码隐藏（如事件处理程序代码）可以对该元素进行引用。</summary>
      <returns>元素的名称。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Name" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Name" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <summary>在派生类中重写后，每当应用程序代码或内部进程调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />，都将调用此方法。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>每当未处理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件在其路由中到达此类时调用。实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>每当未处理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件在其路由中到达此类时调用。实现此方法可为此事件添加类处理。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>每当未处理的 <see cref="E:System.Windows.UIElement.GotFocus" /> 事件在其路由中到达此元素时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。每当在内部将 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true 时，都将调用此方法。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当更新了此 <see cref="T:System.Windows.FrameworkElement" /> 上的任何依赖项属性的有效值时调用。将在实参形参中报告已更改的特定依赖项属性。重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">说明更改的属性、旧值和新值的事件数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>通过使用指定的信息作为最终事件数据的一部分来引发 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 事件。</summary>
      <param name="sizeInfo">更改中涉及的新旧大小的详细信息。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>当此元素上使用的样式更改时（将使布局失效）调用。</summary>
      <param name="oldStyle">旧样式。</param>
      <param name="newStyle">新样式。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
      <summary>每当未处理的 <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件在其路由中到达此类时调用。实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
      <summary>每当 <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件在其路由中到达此类时调用。实现此方法可为此事件添加类处理。</summary>
      <param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>当此元素的父级在可视化树中更改时调用。重写 <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />。</summary>
      <param name="oldParent">旧父元素。可以为 null，指示元素未曾有过可视化父级。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
      <summary>获取或设置一个值，该值指示此元素是否并入主题样式中的样式属性。</summary>
      <returns>如果此元素不使用主题样式属性，则为 true；所有源于样式的属性均来自本地应用程序样式，不会应用主题样式属性。如果首先应用了应用程序样式，然后将主题样式应用于未在应用程序样式中专门设置的属性，则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
      <summary>获取此元素的逻辑父级元素。</summary>
      <returns>此元素的逻辑父级。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
      <summary>在 <see cref="T:System.Windows.FrameworkElement" /> 的专用子类中支持增量布局实现。如果子元素包含在元数据中标记的无效属性，从而影响布局过程中父级的测量或排列处理过程，则调用 <see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />。</summary>
      <param name="child">报告更改的子元素。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
      <summary>根据提供的焦点移动方向，确定在此元素之后接收焦点的下一个元素，但不实际移动焦点。</summary>
      <returns>如果实际遍历了焦点，则为焦点将要移到的下一个元素。如果焦点不能按提供的方向相对于此元素移动，则可能返回 null。</returns>
      <param name="direction">应确定其预期焦点更改的方向。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">在 <see cref="T:System.Windows.Input.TraversalRequest" /> 中指定了以下方向之一：<see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.First" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />。对于 <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> 来说，这些方向是非法的（但对于 <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> 来说是合法的）。</exception>
    </member>
    <member name="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
      <summary>提供一个可简化对 <see cref="T:System.Windows.NameScope" /> 注册方法访问的访问器。</summary>
      <param name="name">要在指定的名称-对象映射中使用的名称。</param>
      <param name="scopedElement">映射的对象。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
      <summary>从此元素的逻辑树中移除所提供的对象。<see cref="T:System.Windows.FrameworkElement" /> 将更新受影响的逻辑树父级指针，以便与此删除操作保持同步。</summary>
      <param name="child">要移除的元素。</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.RequestBringIntoView">
      <summary>当在此元素上调用 <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> 时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的标识符。路由事件标识符是在注册路由事件时创建的。这些标识符包含用于添加事件所有者的标识名称、所有者类型、处理程序类型、路由策略以及实用工具方法。使用这些标识符可以添加类处理程序。有关注册路由事件的更多信息，请参见 <see cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />。有关使用路由事件标识符添加类处理程序的更多信息，请参见 <see cref="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)" />。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
      <summary> 获取或设置本地定义的资源字典。</summary>
      <returns>资源当前的本地定义字典，可在其中按键访问每个资源。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
      <summary>将提供的源属性名作为数据源的路径限定，从而将绑定附加到此元素上。</summary>
      <returns>记录绑定的情况。此返回值可用于错误检查。</returns>
      <param name="dp">标识应该建立绑定的目标属性。</param>
      <param name="path">源属性名称或用于绑定的属性的路径。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>根据提供的绑定对象，将绑定附加到此元素上。</summary>
      <returns>记录绑定的情况。此返回值可用于错误检查。</returns>
      <param name="dp">标识应在其中建立绑定的属性。</param>
      <param name="binding">表示数据绑定的细节。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
      <summary>设置所提供元素的 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 附加属性的值。</summary>
      <param name="element">用来指定流方向的元素。</param>
      <param name="value">一个枚举值，用来指定方向。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>搜索具有指定名称的资源，并且为指定的属性设置一个指向该资源的资源引用。</summary>
      <param name="dp">资源绑定到的属性。</param>
      <param name="name">资源的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeResources">
      <summary>返回一个值，该值指示序列化过程是否应该序列化 <see cref="P:System.Windows.FrameworkElement.Resources" /> 属性的内容。</summary>
      <returns>如果应该将 <see cref="P:System.Windows.FrameworkElement.Resources" /> 属性值序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
      <summary>返回一个值，该值指示序列化过程是否应该序列化 <see cref="P:System.Windows.FrameworkElement.Style" /> 属性的内容。</summary>
      <returns>如果应该将 <see cref="P:System.Windows.FrameworkElement.Style" /> 属性值序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
      <summary>返回一个值，该值指示序列化过程是否应该序列化 <see cref="P:System.Windows.FrameworkElement.Triggers" /> 属性的内容。</summary>
      <returns>如果应该将 <see cref="P:System.Windows.FrameworkElement.Triggers" /> 属性值序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
      <summary>当此元素上的 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 或 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 属性的值发生更改时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.SizeChangedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.SourceUpdated">
      <summary>当此元素上的任何现有属性绑定的源值发生更改时发生。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
      <summary>获取或设置此元素在呈现时使用的样式。</summary>
      <returns>对元素应用的非默认样式（如果存在）。否则为 null。默认情况下构造的 <see cref="T:System.Windows.FrameworkElement" /> 的默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Style" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Style" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> 方法。</summary>
      <returns>如果 <paramref name="propertyName" /> 可用，则为 true；否则为 false。</returns>
      <param name="propertyName">请求的环境属性的名称。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
      <summary>获取或设置任意对象值，该值可用于存储关于此元素的自定义信息。</summary>
      <returns>预期值。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.Tag" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Tag" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.TargetUpdated">
      <summary>当此元素上的任何属性绑定的目标值发生更改时发生。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.TemplatedParent">
      <summary>获取一个对此元素的模板父级的引用。如果此元素不是通过模板创建而成，则此属性并不相关。</summary>
      <returns>其 <see cref="T:System.Windows.FrameworkTemplate" /> <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 导致创建此元素的元素。此值通常为 null；请参见“备注”。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ToolTip">
      <summary> 获取或设置在用户界面 (UI) 中为此元素显示的工具提示对象。</summary>
      <returns>工具提示对象。有关此参数为何不是强类型的详细信息，请参见下面的“备注”。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipClosing">
      <summary>在元素上的任何工具提示关闭之前发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.ToolTipOpening">
      <summary>在元素上的任何工具提示打开时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
      <summary>标识 <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.ToolTip" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ToolTip" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
      <summary>获取直接在此元素上建立或在子元素中建立的触发器的集合。</summary>
      <returns>一个强类型的 <see cref="T:System.Windows.Trigger" /> 对象集合。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
      <summary>搜索具有指定键的资源，如果找到，则返回该资源。</summary>
      <returns>找到的资源；如果未找到具有所提供 <paramref name="key" /> 的资源，则为 null。</returns>
      <param name="resourceKey">要查找的资源的键标识符。</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
      <summary>当从加载的元素的元素树中移除元素时发生。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.UnloadedEvent">
      <summary> 标识 <see cref="E:System.Windows.FrameworkElement.Unloaded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.Unloaded" /> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
      <summary>简化对 <see cref="T:System.Windows.NameScope" /> 注销方法的访问。</summary>
      <param name="name">要从当前范围中移除的名称-对象对的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElement.UpdateDefaultStyle">
      <summary>将默认样式重新应用至当前 <see cref="T:System.Windows.FrameworkElement" />。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.UseLayoutRounding">
      <summary>获取或设置一个值，该值指示在布局过程中是否应该对此元素的大小和位置应用布局舍入。</summary>
      <returns>如果应用布局舍入，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty">
      <summary>标识 <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
      <summary>获取或设置在父元素(如 Panel 或项控件)中组合此元素时所应用的水平对齐特征。</summary>
      <returns>一个垂直对齐设置。默认值为 <see cref="F:System.Windows.VerticalAlignment.Stretch" />。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.VisualChildrenCount">
      <summary>获取此元素内的可视化子元素的数目。</summary>
      <returns>此元素内的可视化子元素的数目。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
      <summary> 获取或设置元素的宽度。</summary>
      <returns>元素的宽度，单位是与设备无关的单位（每个单位 1/96 英寸）。默认值为 <see cref="F:System.Double.NaN" />。此值必须大于等于 0.0。有关上限信息，请参见“备注”。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
      <summary> 标识 <see cref="P:System.Windows.FrameworkElement.Width" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.FrameworkElementFactory">
      <summary>支持模板的创建。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 类的新实例与指定的文本于生成。</summary>
      <param name="text">生成的文本字符串。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 类的新实例使用指定的 <see cref="T:System.Type" />的。</summary>
      <param name="type">创建的实例的类型。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkElementFactory" /> 类的新实例与指定的 <see cref="T:System.Type" /> 和名称的。</summary>
      <param name="type">创建的实例的类型。</param>
      <param name="name">样式标识符。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>添加给定的路由事件的事件处理程序添加到此工厂创建的实例。</summary>
      <param name="routedEvent">已处理的路由事件的标识符对象。</param>
      <param name="handler">对处理程序实现的引用。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>即使在已标记处理的路由中的另一个元素的用例添加给定的路由事件的事件处理程序添加到此工厂创建的实例，使用选项具有提供的处理程序调用路由事件。</summary>
      <param name="routedEvent">已处理的路由事件的标识符对象。</param>
      <param name="handler">对处理程序实现的引用。</param>
      <param name="handledEventsToo">是否调用处理程序，该路由事件在其参数对象的情况下已标记为已处理。 调用处理程序的true ，即使该路由事件标记为已处理;否则， false。默认值为 false。询问处理已处理的路由事件不是通用的。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)">
      <summary>添加子工厂到此工厂。</summary>
      <param name="child">添加的 <see cref="T:System.Windows.FrameworkElementFactory" /> 对象作为子级。</param>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.FirstChild">
      <summary>获取第一个子工厂。</summary>
      <returns>
        <see cref="T:System.Windows.FrameworkElementFactory" /> 第一个子工厂。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.IsSealed">
      <summary>获取一个值此对象是否在一个不可变的状态。</summary>
      <returns>true ，如果该对象在一个不可变的状态;否则， false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Name">
      <summary>获取或设置模板项目的名称。</summary>
      <returns>为模板标识符的字符串。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.NextSibling">
      <summary>获取下一个同级工厂。</summary>
      <returns>是下一个同级工厂的 <see cref="T:System.Windows.FrameworkElementFactory" /> 。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Parent">
      <summary>获取父 <see cref="T:System.Windows.FrameworkElementFactory" />。</summary>
      <returns>是父工厂的 <see cref="T:System.Windows.FrameworkElementFactory" /> 。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>从给定路由事件移除事件处理程序。这适用于此工厂创建的实例。</summary>
      <param name="routedEvent">路由事件的标识符对象。</param>
      <param name="handler">要移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>设置将属性。</summary>
      <param name="dp">标识应建立绑定的属性。</param>
      <param name="binding">绑定的说明。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
      <summary>设置动态资源引用在子属性。</summary>
      <param name="dp">该资源绑定的属性。</param>
      <param name="name">资源的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>设置依赖项属性的值。</summary>
      <param name="dp">属性设置的依赖项属性标识符。</param>
      <param name="value">新值。</param>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Text">
      <summary>获取或设置文本字符串生成。</summary>
      <returns>生成的文本字符串。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElementFactory.Type">
      <summary>获取或设置此工厂生成对象的类型。</summary>
      <returns>此工厂生成对象的类型。</returns>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadata">
      <summary>报表或应用 依赖项属性的元数据，特别是添加框架特定属性系统的功能。</summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用指定默认值的。 </summary>
      <param name="defaultValue">为特定类型的值，通常提供的依赖项属性的默认值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用提供的默认和框架级别的元数据选项的。 </summary>
      <param name="defaultValue">为特定类型的值，通常提供的依赖项属性的默认值。</param>
      <param name="flags">元数据选项标志 ( <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值的组合)。这些选项指定与系统交互 (如布局或数据绑定依赖项属性的特征。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用提供的默认和结构元数据可选的，并且指定了 <see cref="T:System.Windows.PropertyChangedCallback" /> 回调。 </summary>
      <param name="defaultValue">为特定类型的值，通常提供的依赖项属性的默认值。</param>
      <param name="flags">元数据选项标志 ( <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值的组合)。这些选项指定与系统交互 (如布局或数据绑定依赖项属性的特征。</param>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用提供的默认和结构的元数据选项的，并指定一个回调。 </summary>
      <param name="defaultValue">为特定的类型，通常提供的依赖项属性的默认值。</param>
      <param name="flags">元数据选项标志 ( <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值的组合)。这些选项指定与系统交互 (如布局或数据绑定依赖项属性的特征。</param>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <param name="coerceValueCallback">对要调用的处理程序实现的引用，每当属性系统调用 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 此属性。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用提供的默认和结构元数据选项，指定的回调和可用于阻止属性的动画的布尔。</summary>
      <param name="defaultValue">为特定的类型，通常提供的依赖项属性的默认值。</param>
      <param name="flags">元数据选项标志 ( <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值的组合)。这些选项指定与系统交互 (如布局或数据绑定依赖项属性的特征。</param>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <param name="coerceValueCallback">对要调用的处理程序实现的引用，每当属性系统调用此依赖项属性的 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 。</param>
      <param name="isAnimationProhibited"> 防止属性系统的true 对属性进行动画处理此元数据应用。，如果动画将尝试，此属性将引发源自属性系统的运行时异常。 允许的false 对属性进行动画处理。默认值为 false。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例。提供的默认和结构元数据选项、指定的回调，一个布尔值可用于阻止属性的动画和一个数据绑定更新触发器默认值。</summary>
      <param name="defaultValue">为特定的类型，通常提供的依赖项属性的默认值。</param>
      <param name="flags">元数据选项标志 ( <see cref="T:System.Windows.FrameworkPropertyMetadataOptions" /> 值的组合)。这些选项指定与系统交互 (如布局或数据绑定依赖项属性的特征。</param>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <param name="coerceValueCallback">对要调用的处理程序实现的引用，每当属性系统调用 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 此属性。</param>
      <param name="isAnimationProhibited"> 防止属性系统的true 对属性进行动画处理此元数据应用。，如果动画将尝试，此属性将引发源自属性系统的运行时异常。默认值为 false。</param>
      <param name="defaultUpdateSourceTrigger">使用此属性的绑定时要使用的 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 应用了将其 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 设置为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例与提供的默认值并指定了 <see cref="T:System.Windows.PropertyChangedCallback" /> 回调。 </summary>
      <param name="defaultValue">为特定类型的值，通常提供的依赖项属性的默认值。</param>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例与提供的默认值并指定一个回调。</summary>
      <param name="defaultValue">为特定的类型，通常提供的依赖项属性的默认值。</param>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <param name="coerceValueCallback">对要调用的处理程序实现的引用，每当属性系统调用此依赖项属性的 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="defaultValue" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />;请参见 " 备注 "。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用指定的 <see cref="T:System.Windows.PropertyChangedCallback" /> 回调的。</summary>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary>初始化 <see cref="T:System.Windows.FrameworkPropertyMetadata" /> 类的新实例使用指定的回调的。 </summary>
      <param name="propertyChangedCallback">为属性系统将调用的处理程序实现的引用，只要该属性的有效值更改。</param>
      <param name="coerceValueCallback">对处理程序实现的引用将调用，每当属性系统调用此依赖项属性的 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 。</param>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
      <summary> 获取或设置在布局引擎操作过程中，一个值 依赖项属性 是否可能会影响排列处理过程。 </summary>
      <returns>true ，则此元数据可能存在的依赖项属性影响处理过程;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
      <summary> 获取或设置在布局引擎操作过程中，一个值 依赖项属性 是否可能会影响测量处理过程。 </summary>
      <returns>true ，则此元数据可能存在的依赖项属性影响测量处理过程;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
      <summary> 获取或设置在布局引擎操作过程中，一个值 依赖项属性 是否可能会影响其父元素的布局排列处理过程。 </summary>
      <returns>true ，则此元数据可能存在的依赖项属性专门影响封送通过其父元素;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
      <summary> 获取或设置在布局引擎操作过程中，一个值 依赖项属性 是否可能会影响其父元素的布局测量处理过程。 </summary>
      <returns>true ，则此元数据可能存在的依赖项属性专门影响测量通过其父元素;否则， false。默认值为 false。 </returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
      <summary>获取或设置一个值 依赖项属性 是否在某些方面可能会影响不专门影响排列或测量的常规布局，但是，要求重绘功能。 </summary>
      <returns>true ，则此元数据存在影响呈现的依赖项属性;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
      <summary> 获取或设置默认情况下一个值属性是否双向绑定。 </summary>
      <returns>true ，则此元数据存在的双向绑定的 依赖项属性 默认情况下，否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
      <summary>获取或设置 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 的默认可以使用属性的绑定与此元数据时所应用的，则其 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 设置为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />。</summary>
      <returns>枚举的值，以及 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />之外。</returns>
      <exception cref="T:System.ArgumentException">此特性设置为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />;您设置的值应将成为默认值，当需要从绑定。</exception>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Inherits">
      <summary> 获取或设置一个值 依赖项属性 的值是否是可继承的。 </summary>
      <returns>true ，如果属性值是可继承的;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
      <summary> 获取一个值数据绑定是否为 依赖项属性支持。 </summary>
      <returns>true ，如果数据绑定此元数据应用的依赖项属性支持;否则， false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
      <summary> 获取或设置一个值 依赖项属性 是否支持数据绑定。 </summary>
      <returns>true ，如果属性不支持数据绑定;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.Journal">
      <summary> 获取或设置一个值此属性是否包含连接作为一次连接的实现的一部分，应用程序或应存储的信息。 </summary>
      <returns>true ，如果连接应在 依赖项属性 执行此元数据应用;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary>启用源元数据的组合了基本元数据的。 </summary>
      <param name="baseMetadata">合并的基本元数据。</param>
      <param name="dp">此依赖项属性元数据中应用。</param>
    </member>
    <member name="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary>调用时，此元数据应用于属性，指示元数据是密封的。 </summary>
      <param name="dp">将元数据应用的依赖项属性。</param>
      <param name="targetType">，如果这是特定于类型的元数据，类型与此元数据。如果这是默认元数据，该值可以是 null。</param>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
      <summary>获取或设置一个值属性值继承求值是否应在元素 逻辑树 的某些内容边界范围。 </summary>
      <returns>true ，如果属性值继承应在某些内容边界范围;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
      <summary>获取或设置一个值 依赖项属性 的子属性是否不影响呈现包含的对象。 </summary>
      <returns>true ，如果为子属性值的更改不会影响呈现，如果更改;否则， false。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">元数据已应用于依赖项属性操作，因此，元数据密封，并且元数据的特性不能设置。</exception>
    </member>
    <member name="T:System.Windows.FrameworkPropertyMetadataOptions">
      <summary>指定与在 Windows Presentation Foundation (WPF) 属性系统的特定依赖项属性框架级别的属性行为的类型。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange">
      <summary>格式组合中的受此 依赖项属性的值发生更改的影响。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure">
      <summary>格式组合测量处理过程受此 依赖项属性的值发生更改的影响。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentArrange">
      <summary>具有通过父元素受此 依赖项属性的值发生更改的影响。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
      <summary>执行度量通过父元素受此 依赖项属性的值发生更改的影响。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender">
      <summary>呈现或窗体配置的某些方面 (除了测量或之外使) 受此 依赖项属性的值发生更改的影响。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
      <summary>数据绑定的 <see cref="T:System.Windows.Data.BindingMode" /> 本 依赖项属性 默认为 <see cref="F:System.Windows.Data.BindingMode.TwoWay" />。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits">
      <summary>此 依赖项属性 的值由子元素继承。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.Journal">
      <summary>应将此 依赖项属性 的值或还原通过连接进程，或者，在导航由 统一资源标识符 (URI)时。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.None">
      <summary>选项未指定; 依赖项属性 使用 Windows Presentation Foundation (WPF) 属性系统的默认行为。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable">
      <summary>绑定到该 依赖项属性 的数据不允许的。</summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.OverridesInheritanceBehavior">
      <summary>此 依赖项属性 范围的值对属性值继承的目的分隔树。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender">
      <summary>本 依赖项属性 的值的子属性不影响呈现的任何方面。</summary>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
      <summary>启用 <see cref="T:System.Windows.FrameworkElement" /> 和 <see cref="T:System.Windows.FrameworkContentElement" /> 对象树中实例化。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.FrameworkTemplate" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)">
      <summary>查找元素与此模板中定义的指定名称。</summary>
      <returns>组件与指定的名称。</returns>
      <param name="name">字符串名称。</param>
      <param name="templatedParent">此模板将应用于 <see cref="T:System.Windows.FrameworkElement" /> 的上下文。</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.HasContent">
      <summary>获取一个值此模板是否优化的内容。</summary>
      <returns>true ，如果此模板优化的目录;否则， false。</returns>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.IsSealed">
      <summary>获取一个值此对象是否以固定的状态，因此无法更改它。</summary>
      <returns>true ，如果该对象在一个不可变的状态;否则， false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.LoadContent">
      <summary>加载模板内容作为对象的实例并返回该目录的根元素。</summary>
      <returns>内容的根元素。调用此多次返回实例。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)">
      <summary>注册新的名称/对象对到当前名称范围。</summary>
      <param name="name">注册的名称。</param>
      <param name="scopedElement">要映射的对象来提供的名称。</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Resources">
      <summary>获取或设置此模板的范围中，可以使用资源的集合。</summary>
      <returns>此模板的范围内，可使用的资源。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.Seal">
      <summary>不能即 Lock 模板，因此它。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值序列化过程是否应序列化 <see cref="P:System.Windows.FrameworkTemplate.Resources" /> 属性的值在此类实例的。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.FrameworkTemplate.Resources" /> 属性值;否则， false。</returns>
      <param name="manager">
        <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree">
      <summary>返回一个值序列化过程是否应序列化 <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 属性的值在此类实例的。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> 属性值;否则， false。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>返回具有提供的标识符名称的对象。 </summary>
      <returns>对象，因此，如果找到。; 如果未找到，则返回 null 该名称的对象。</returns>
      <param name="name">请求对象的名称标识符。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>查询一个指定的单个属性是否可用在当前范围内。</summary>
      <returns>true ，如果请求的单个属性可用;否则， false。</returns>
      <param name="propertyName">请求的单个属性的名称。</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.Template">
      <summary>获取或设置引用记录或播放模板的 XAML 节点的对象，同时定义或是编写器将模板。</summary>
      <returns>对对象的引用记录或角色模板的 XAML 节点。</returns>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)">
      <summary>从 XAML 名称范围移除映射的名称/的对象。</summary>
      <param name="name">移除的映射的名称。</param>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>当重写在派生类中，元素的提供规则此模板将应用。</summary>
      <param name="templatedParent">元素此模板是应用。</param>
    </member>
    <member name="P:System.Windows.FrameworkTemplate.VisualTree">
      <summary>获取或设置模板的根节点。</summary>
      <returns>模板的根节点。</returns>
    </member>
    <member name="T:System.Windows.GridLength">
      <summary>表示显式支持 <see cref="F:System.Windows.GridUnitType.Star" /> 单元类型元素的长度。 </summary>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
      <summary>使用，以像素为指定的绝对值初始化 <see cref="T:System.Windows.GridLength" /> 结构的新实例。 </summary>
      <param name="pixels">与设备无关的像素 (96 像素每英寸) 的数目。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Pixels" /> 与 <see cref="F:System.Double.NegativeInfinity" />、 <see cref="F:System.Double.PositiveInfinity" />或 <see cref="F:System.Double.NaN" />相等。</exception>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <summary>初始化 <see cref="T:System.Windows.GridLength" /> 结构的新实例并指定哪些类型的值来表示。 </summary>
      <param name="value">
        <see cref="T:System.Windows.GridLength" />此实例的初始值。</param>
      <param name="type">
        <see cref="T:System.Windows.GridUnitType" /> 由 <see cref="T:System.Windows.GridLength" />此实例保存了。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 与 <see cref="F:System.Double.NegativeInfinity" />、 <see cref="F:System.Double.PositiveInfinity" />或 <see cref="F:System.Double.NaN" />相等。</exception>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
      <summary>获取表示一个值范围取决于内容对象的大小属性 <see cref="T:System.Windows.GridLength" /> 的实例。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性设置为 <see cref="F:System.Windows.GridUnitType.Auto" /><see cref="T:System.Windows.GridLength" /> 的实例。 </returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
      <summary>确定指定的对象是否与当前 <see cref="T:System.Windows.GridLength" /> 实例是否相等。 </summary>
      <returns>true ，如果指定的对象具有相同的值和 <see cref="T:System.Windows.GridUnitType" /> 与当前实例;否则， false。</returns>
      <param name="oCompare">与当前实例进行比较的对象</param>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <summary>确定指定的 <see cref="T:System.Windows.GridLength" /> 是否与当前 <see cref="T:System.Windows.GridLength" />相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.GridLength" /> 具有相同的值和 <see cref="P:System.Windows.GridLength.GridUnitType" /> 与当前实例;否则， false。</returns>
      <param name="gridLength">
        <see cref="T:System.Windows.GridLength" /> 结构与当前实例进行比较。</param>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
      <summary>获取 <see cref="T:System.Windows.GridLength" />的 哈希代码 。 </summary>
      <returns>当前 <see cref="T:System.Windows.GridLength" /> 结构的 哈希代码 。</returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
      <summary>获取 <see cref="T:System.Windows.GridLength" />关联的 <see cref="T:System.Windows.GridUnitType" /> 。 </summary>
      <returns>一个 <see cref="T:System.Windows.GridUnitType" /> 值。默认值为 <see cref="F:System.Windows.GridUnitType.Auto" />。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
      <summary>获取一个值 <see cref="T:System.Windows.GridLength" /> 是否表示为像素表示的值。 </summary>
      <returns>true ，如果 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性是 <see cref="F:System.Windows.GridUnitType.Pixel" />;否则， false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
      <summary>获取一个值 <see cref="T:System.Windows.GridLength" /> 是否表示大小取决于内容对象的大小属性的值。 </summary>
      <returns>true ，如果 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性是 <see cref="F:System.Windows.GridUnitType.Auto" />;否则， false。 </returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
      <summary>获取一个值 <see cref="T:System.Windows.GridLength" /> 是否表示表示为可用空间的加权比例的值。 </summary>
      <returns>true ，如果 <see cref="P:System.Windows.GridLength.GridUnitType" /> 属性是 <see cref="F:System.Windows.GridUnitType.Star" />;否则， false。 </returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>比较相等的两 <see cref="T:System.Windows.GridLength" /> 结构。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.GridLength" /> 两个实例具有相同的值和 <see cref="T:System.Windows.GridUnitType" />;否则， false。</returns>
      <param name="gl1">比较的 <see cref="T:System.Windows.GridLength" /> 第一个实例。</param>
      <param name="gl2">比较的 <see cref="T:System.Windows.GridLength" /> 第二个实例。</param>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>比较两 <see cref="T:System.Windows.GridLength" /> framework 确定它们是否不相等。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.GridLength" /> 两个实例没有相同的值和 <see cref="T:System.Windows.GridUnitType" />;否则， false。</returns>
      <param name="gl1">比较的 <see cref="T:System.Windows.GridLength" /> 第一个实例。</param>
      <param name="gl2">比较的 <see cref="T:System.Windows.GridLength" /> 第二个实例。</param>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
      <summary>返回 <see cref="T:System.Windows.GridLength" />的 <see cref="T:System.String" /> 表示。</summary>
      <returns>当前 <see cref="T:System.Windows.GridLength" /> 结构的 <see cref="T:System.String" /> 表示。</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
      <summary>获取表示 <see cref="T:System.Windows.GridLength" />的值 <see cref="T:System.Double" /> 。</summary>
      <returns>表示当前实例的值 <see cref="T:System.Double" /> 。 </returns>
    </member>
    <member name="T:System.Windows.GridLengthConverter">
      <summary>来回 <see cref="T:System.Windows.GridLength" /> 实例转换为其他类型的实例。 </summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.GridLengthConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定类是否可以从特定类型转换为 <see cref="T:System.Windows.GridLength" />实例。</summary>
      <returns>true ，如果转换器可以从指定的类型转换为 <see cref="T:System.Windows.GridLength" />实例;否则， false。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="sourceType">提供用于将计算源的类型。</param>
    </member>
    <member name="M:System.Windows.GridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定 <see cref="T:System.Windows.GridLength" /> 实例是否可以转换为不同的类型。 </summary>
      <returns>true ，如果转换器可以转换 <see cref="T:System.Windows.GridLength" /> 此实例转换为指定的类型;否则， false。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="destinationType">所需类型 <see cref="T:System.Windows.GridLength" /> 此实例提供用于将计算。</param>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试转换为 <see cref="T:System.Windows.GridLength" />实例中指定的对象。 </summary>
      <returns>从转换的 <paramref name="source" />创建 <see cref="T:System.Windows.GridLength" /> 的实例。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">应保留在转换过程中，区域性特定的信息。</param>
      <param name="source">已转换的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 对象是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 对象不是 null 并不是可转换为 <see cref="T:System.Windows.GridLength" />的有效类型。</exception>
    </member>
    <member name="M:System.Windows.GridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将 <see cref="T:System.Windows.GridLength" /> 实例转换为指定的类型。 </summary>
      <returns>从 <see cref="T:System.Windows.GridLength" />转换的实例创建的对象。</returns>
      <param name="typeDescriptorContext">描述类型的上下文信息。</param>
      <param name="cultureInfo">应保留在转换过程中，区域性特定的信息。</param>
      <param name="value">转换的 <see cref="T:System.Windows.GridLength" /> 实例。</param>
      <param name="destinationType">类型 <see cref="T:System.Windows.GridLength" /> 此实例强制转换。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 不是其中一个转换的有效类型。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 是 null。</exception>
    </member>
    <member name="T:System.Windows.GridUnitType">
      <summary>描述 <see cref="T:System.Windows.GridLength" /> 对象容纳的一个值。 </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
      <summary>该大小取决于内容对象的大小属性。 </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
      <summary>该值表示为像素。 </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
      <summary>该值表示为可用空间的加权比例。 </summary>
    </member>
    <member name="T:System.Windows.HierarchicalDataTemplate">
      <summary>表示支持 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />的 <see cref="T:System.Windows.DataTemplate" /> ，例如 <see cref="T:System.Windows.Controls.TreeViewItem" /> 或 <see cref="T:System.Windows.Controls.MenuItem" />。</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.HierarchicalDataTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.HierarchicalDataTemplate" /> 类的新实例使用模板用于指定类型的。</summary>
      <param name="dataType">此模板预期的类型。 </param>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.AlternationCount">
      <summary>获取或设置交替项容器的数目子项的。</summary>
      <returns>交替项容器的项数的下一个级别。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup">
      <summary>获取或设置复制到每个子项的 <see cref="T:System.Windows.Data.BindingGroup" /> 。</summary>
      <returns>复制到每个子项的 <see cref="T:System.Windows.Data.BindingGroup" /> 。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle">
      <summary>获取或设置应用于每个子项的项容器的 <see cref="T:System.Windows.Style" /> 。</summary>
      <returns>向每个子项的项容器的 <see cref="T:System.Windows.Style" /> 。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector">
      <summary>获取或设置可应用于每个项容器的样式的自定义样式选择逻辑。 </summary>
      <returns>选择样式用作 <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />的 <see cref="T:System.Windows.Controls.StyleSelector" /> 。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
      <summary>获取或设置此数据模板绑定，在何处查找指示集合表示数据层的下一个级别。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat">
      <summary>获取或设置在下级别指定如何设置项目在数据层的复合字符串; 如果它们显示为字符串。</summary>
      <returns>在数据层中的下一个级别指定如何设置项目的复合字符串; 如果它们显示为字符串。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
      <summary>获取或设置 <see cref="T:System.Windows.DataTemplate" /> 应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 在生成的 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 的属性 (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，指示演示如何从下一个级别的项目在数据层。</summary>
      <returns>应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 在生成的 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 的属性的 <see cref="T:System.Windows.DataTemplate" /> (例如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，指示演示如何从下一个级别的项目在数据层。</returns>
    </member>
    <member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 在生成的 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 的属性 (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，指示如何选择模板显示从下一个级别的项目在数据层。</summary>
      <returns>应用于 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 在生成的 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 的属性的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象 (如 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.TreeViewItem" />)，指示如何选择模板显示从下一个级别的项目在数据层。</returns>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
      <summary>指示位置在该级别的轴应显示子元素相对于父元素的已分配布局槽。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
      <summary>元素对齐布局槽的中心父元素的。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
      <summary>在父元素的布局槽的左端对齐的元素。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
      <summary>在父元素的布局槽右侧对齐的元素。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
      <summary>拉伸的元素填充父元素的整个布局槽。 </summary>
    </member>
    <member name="T:System.Windows.IFrameworkInputElement">
      <summary>声明结构元素的一个名称范围协定。</summary>
    </member>
    <member name="P:System.Windows.IFrameworkInputElement.Name">
      <summary>获取或设置元素的名称。 </summary>
      <returns>元素名称，是唯一的。名称范围，并可用作标识符为某些操作。</returns>
    </member>
    <member name="T:System.Windows.InheritanceBehavior">
      <summary>指示当前模式两的外观属性值继承，资源查找和 RelativeSource FindAncestor 外观。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.Default">
      <summary>属性值继承查找将查询当前元素并继续遍历元素树到页面根元素。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNext">
      <summary>属性值继承查找将查询当前元素，但不任何进一步的。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipAllNow">
      <summary>属性值继承查找不会查询当前元素也任何不会提升。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNext">
      <summary>属性值继承查找将查询当前元素，但不任何进一步的。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToAppNow">
      <summary>属性值继承查找不会查询当前元素也任何不会提升。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNext">
      <summary>属性值继承查找将查询当前元素，但不任何进一步的。</summary>
    </member>
    <member name="F:System.Windows.InheritanceBehavior.SkipToThemeNow">
      <summary>属性值继承查找不会查询当前元素也任何不会提升。</summary>
    </member>
    <member name="T:System.Windows.LengthConverter">
      <summary>向/从表示对象的长度 <see cref="T:System.Double" /> 的实例转换为其他类型的实例。</summary>
    </member>
    <member name="M:System.Windows.LengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.LengthConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定转换是从表示对象的长度的指定类型是可能的。 <see cref="T:System.Double" /> 。 </summary>
      <returns>true ，如果转换可行;否则， false。</returns>
      <param name="typeDescriptorContext">提供有关元素的上下文信息。</param>
      <param name="sourceType">标识数据类型为将计算。</param>
    </member>
    <member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否转换可能对表示对象的长度从 <see cref="T:System.Double" /> 的指定类型。 </summary>
      <returns>true ，如果对 <paramref name="destinationType" /> 的转换可行;否则， false。</returns>
      <param name="typeDescriptorContext">提供有关元素的上下文信息。</param>
      <param name="destinationType">标识数据类型为将计算。</param>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>转换为其他数据类型的实例转换为表示对象的长度 <see cref="T:System.Double" /> 的实例。 </summary>
      <returns>是要转换的值 <see cref="T:System.Double" /> 的实例。</returns>
      <param name="typeDescriptorContext">提供有关元素的上下文信息。</param>
      <param name="cultureInfo">表示在转换过程中，由维护的区域性特定的信息。</param>
      <param name="source">标识转换为 <see cref="T:System.Double" />的对象。</param>
      <exception cref="T:System.ArgumentNullException">，如果 <paramref name="source" /> 是 null，发生。</exception>
      <exception cref="T:System.ArgumentException">，如果 <paramref name="source" /> 不是 null 并且不是转换的，有效类型发生。</exception>
    </member>
    <member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换为其他类型转换为表示对象的长度 <see cref="T:System.Double" /> 的实例。 </summary>
      <returns>是要转换的值的新 <see cref="T:System.Object" /> 。</returns>
      <param name="typeDescriptorContext">描述一个元素的上下文信息，例如其容器和 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="cultureInfo">标识区域性特定的信息，包括书写系统和使用的日历。</param>
      <param name="value">标识转换的 <see cref="T:System.Object" /> 。</param>
      <param name="destinationType">数据类型 <see cref="T:System.Double" /> 此实例强制转换。</param>
      <exception cref="T:System.ArgumentNullException">，如果 <paramref name="value" /> 是 null，发生。</exception>
      <exception cref="T:System.ArgumentException">发生，如果 <paramref name="value" /> 不是 null 并且不是 <see cref="T:System.Windows.Media.Brush" />，或者 <paramref name="destinationType" /> 无效。</exception>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
      <summary> 描述线条框以每一行都是一个用于确定结构。  </summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BaselineToBaseline">
      <summary />
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <summary> 块元素行高度属性值取决于堆栈高度。 </summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
      <summary> ，当这些元素正确对齐时，堆栈高度是最小值该包含在该行中所有内联元素。 </summary>
    </member>
    <member name="T:System.Windows.Localization">
      <summary>
        <see cref="T:System.Windows.Localization" /> 类定义本地化特性的附加属性和注释。</summary>
    </member>
    <member name="P:System.Windows.Localization.Attributes">
      <summary>获取或设置资源，例如 <see cref="T:System.Windows.Media.FontFamily" />，将本地化。</summary>
      <returns>将本地化的资源。</returns>
    </member>
    <member name="F:System.Windows.Localization.AttributesProperty">
      <summary>标识 <see cref="P:System.Windows.Localization.Attributes" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Localization.Attributes" /> 附加属性 标识符。</returns>
    </member>
    <member name="P:System.Windows.Localization.Comments">
      <summary>获取或设置注释，是任意形式的文本标记作者包括。</summary>
      <returns>本地化注释。</returns>
    </member>
    <member name="F:System.Windows.Localization.CommentsProperty">
      <summary>标识 <see cref="P:System.Windows.Localization.Comments" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Localization.Comments" /> 附加属性 标识符。</returns>
    </member>
    <member name="M:System.Windows.Localization.GetAttributes(System.Object)">
      <summary>从指定的元素获取该 <see cref="F:System.Windows.Localization.AttributesProperty" /> 附加属性的值。</summary>
      <returns>表示本地化特性的 <see cref="T:System.String" /> 值。</returns>
      <param name="element">
        <see cref="T:System.Object" /> 表示元素附加属性的要检索。</param>
    </member>
    <member name="M:System.Windows.Localization.GetComments(System.Object)">
      <summary>从指定的元素获取该 <see cref="F:System.Windows.Localization.CommentsProperty" /> 附加属性的值。</summary>
      <returns>表示本地化注释的 <see cref="T:System.String" /> 值。</returns>
      <param name="element">
        <see cref="T:System.Object" /> 表示元素附加属性的要检索。</param>
    </member>
    <member name="M:System.Windows.Localization.SetAttributes(System.Object,System.String)">
      <summary>将指定元素的 <see cref="F:System.Windows.Localization.AttributesProperty" /> 附加属性。</summary>
      <param name="element">
        <see cref="T:System.Object" /> 表示元素附加属性的要设置。</param>
      <param name="attributes">指定本地化特性的 <see cref="T:System.String" /> 。</param>
    </member>
    <member name="M:System.Windows.Localization.SetComments(System.Object,System.String)">
      <summary>将 <see cref="F:System.Windows.Localization.CommentsProperty" /> 附加属性设置为指定的元素。</summary>
      <param name="element">
        <see cref="T:System.Object" /> 表示元素附加属性的要设置。</param>
      <param name="comments">
        <see cref="T:System.String" /> 指定的本地化注释。</param>
    </member>
    <member name="T:System.Windows.LogicalTreeHelper">
      <summary>为查询在逻辑树中的对象提供静态帮助器方法。</summary>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
      <summary>尝试将请求的 UI 元素访问视图和每当在目标的 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 事件以报告结果。</summary>
      <param name="current">将的 UI 元素访问视图。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
      <summary>尝试查找并返回具有指定名称的对象。搜索从指定的对象启动并继续到逻辑树的子节点。</summary>
      <returns>与匹配名称的对象，因此，如果找到一个对象;，如果没有匹配的名称在逻辑树，未找到返回 null 。</returns>
      <param name="logicalTreeNode">开始的对象文档的。此对象必须是 <see cref="T:System.Windows.FrameworkElement" /> 或 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
      <param name="elementName">找到的对象的名称。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
      <summary>通过处理逻辑树返回指定对象的直接子对象的集合，。</summary>
      <returns>直接子对象的可枚举集合从指定的对象的 逻辑树 的。</returns>
      <param name="current">的对象启动的处理逻辑树。这应该是 <see cref="T:System.Windows.FrameworkElement" /> 或 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
      <summary>通过处理逻辑树返回指定的 <see cref="T:System.Windows.FrameworkContentElement" /> 的直接子对象的集合。 </summary>
      <returns>直接子对象的可枚举集合从 <paramref name="current" /> 开始在逻辑树。</returns>
      <param name="current">的对象启动的处理逻辑树。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
      <summary>通过处理逻辑树返回指定的 <see cref="T:System.Windows.FrameworkElement" /> 的直接子对象的集合。 </summary>
      <returns>直接子对象的可枚举集合从 <paramref name="current" /> 开始的。 逻辑树。</returns>
      <param name="current">的对象启动的处理逻辑树。</param>
    </member>
    <member name="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>通过处理逻辑树返回指定对象的父对象。</summary>
      <returns>请求的父对象。</returns>
      <param name="current">查找父对象的对象。这应该是 <see cref="T:System.Windows.FrameworkElement" /> 或 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
    </member>
    <member name="T:System.Windows.LostFocusEventManager">
      <summary>提供了一个 <see cref="T:System.Windows.WeakEventManager" /> 实现，以便可以使用 “弱事件侦听器”架构附加 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件的侦听器。</summary>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>将指定的事件处理程序中，调用，同时指定的数据源引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件时。</summary>
      <param name="source">源对象引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。 </param>
      <param name="handler">委托处理 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>添加所提供的侦听器添加到侦听器列出了由提供的源的。</summary>
      <param name="source">使用事件的对象。</param>
      <param name="listener">添加的对象作为侦听器。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.NewListenerList">
      <summary>返回一个新的对象包含侦听器添加到 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</summary>
      <returns>包含侦听器的新对象。 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</returns>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})">
      <summary>从指定的源代码中移除指定的事件处理程序。</summary>
      <param name="source">源对象引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <param name="handler">委托处理 <see cref="E:System.Windows.UIElement.LostFocus" /> 或 <see cref="E:System.Windows.ContentElement.LostFocus" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
      <summary>从侦听器列出了由提供的源的中移除指定的侦听器。</summary>
      <param name="source">移除侦听器的对象。</param>
      <param name="listener">移除的侦听器。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StartListening(System.Object)">
      <summary>启动侦听在给定源的 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件，附加内部类处理程序绑定到该数据源。</summary>
      <param name="source">的对象启动的侦听相关 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件。</param>
    </member>
    <member name="M:System.Windows.LostFocusEventManager.StopListening(System.Object)">
      <summary>停止侦听在给定源的 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件。</summary>
      <param name="source">的源对象停止的侦听 <see cref="E:System.Windows.UIElement.LostFocus" />。</param>
    </member>
    <member name="T:System.Windows.MediaScriptCommandRoutedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> 和 <see cref="E:System.Windows.Media.MediaPlayer.ScriptCommand" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterType">
      <summary>获取的脚本命令的类型引发。</summary>
      <returns>的脚本命令的类型引发。</returns>
    </member>
    <member name="P:System.Windows.MediaScriptCommandRoutedEventArgs.ParameterValue">
      <summary>获取参数与脚本命令类型。</summary>
      <returns>参数与脚本命令类型。</returns>
    </member>
    <member name="T:System.Windows.MessageBox">
      <summary>显示消息框。 </summary>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
      <summary>显示一个消息，然后返回结果的消息框。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String)">
      <summary>显示一个消息和标题栏声明的消息框;并返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>显示一个消息、标题栏声明和按钮的消息框;并返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>显示具有消息、标题栏说明、按钮和图标的消息框;并返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
      <param name="icon">指定要显示的图标 <see cref="T:System.Windows.MessageBoxImage" /> 值。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>显示具有消息、标题栏说明、按钮和图标的消息框;这接受一个默认消息框的结果并返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
      <param name="icon">指定要显示的图标 <see cref="T:System.Windows.MessageBoxImage" /> 值。</param>
      <param name="defaultResult">指定消息框的默认结果的 <see cref="T:System.Windows.MessageBoxResult" /> 值。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>显示具有消息、标题栏说明、按钮和图标的消息框;这接受一个默认消息框的结果，符合指定的选项，然后返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
      <param name="icon">指定要显示的图标 <see cref="T:System.Windows.MessageBoxImage" /> 值。</param>
      <param name="defaultResult">指定消息框的默认结果的 <see cref="T:System.Windows.MessageBoxResult" /> 值。</param>
      <param name="options">指定选项的值 <see cref="T:System.Windows.MessageBoxOptions" /> 对象。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String)">
      <summary>显示在指定的窗口前面的消息框。消息框显示该消息并返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="owner">表示消息框的所有者窗口的 <see cref="T:System.Windows.Window" /> 。</param>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String)">
      <summary>显示在指定的窗口前面的消息框。消息框显示消息和标题栏声明;它返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="owner">表示消息框的所有者窗口的 <see cref="T:System.Windows.Window" /> 。</param>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>显示在指定的窗口前面的消息框。消息框显示消息、标题栏声明和按钮;它还返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="owner">表示消息框的所有者窗口的 <see cref="T:System.Windows.Window" /> 。</param>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
      <summary>显示在指定的窗口前面的消息框。消息框显示消息、标题栏声明、按钮和图标;它还返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="owner">表示消息框的所有者窗口的 <see cref="T:System.Windows.Window" /> 。</param>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
      <param name="icon">指定要显示的图标 <see cref="T:System.Windows.MessageBoxImage" /> 值。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
      <summary>显示在指定的窗口前面的消息框。消息框显示消息、标题栏声明、按钮和图标;并接受一个默认消息框的结果并返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="owner">表示消息框的所有者窗口的 <see cref="T:System.Windows.Window" /> 。</param>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
      <param name="icon">指定要显示的图标 <see cref="T:System.Windows.MessageBoxImage" /> 值。</param>
      <param name="defaultResult">指定消息框的默认结果的 <see cref="T:System.Windows.MessageBoxResult" /> 值。</param>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <summary>显示在指定的窗口前面的消息框。消息框显示消息、标题栏声明、按钮和图标;并接受一个默认消息框的结果，与指定的选项，然后返回结果。</summary>
      <returns>指定的 <see cref="T:System.Windows.MessageBoxResult" /> 值哪个消息框按钮由用户单击。</returns>
      <param name="owner">表示消息框的所有者窗口的 <see cref="T:System.Windows.Window" /> 。</param>
      <param name="messageBoxText">指定文本显示的 <see cref="T:System.String" /> 。</param>
      <param name="caption">指定标题栏声明中显示的 <see cref="T:System.String" /> 。</param>
      <param name="button">指定的 <see cref="T:System.Windows.MessageBoxButton" /> 值要显示的按钮或按钮。</param>
      <param name="icon">指定要显示的图标 <see cref="T:System.Windows.MessageBoxImage" /> 值。</param>
      <param name="defaultResult">指定消息框的默认结果的 <see cref="T:System.Windows.MessageBoxResult" /> 值。</param>
      <param name="options">指定选项的值 <see cref="T:System.Windows.MessageBoxOptions" /> 对象。</param>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
      <summary>指定在消息框中显示的按钮。用作 <see cref="Overload:System.Windows.MessageBox.Show" /> 方法的参数。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
      <summary>消息框显示 好 按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
      <summary>消息框显示 好 和 取消 按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNo">
      <summary>消息框显示 是 和 否 按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.YesNoCancel">
      <summary>消息框显示 是、 否和 取消 按钮。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxImage">
      <summary>指定由消息框中显示的图标。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Asterisk">
      <summary>消息框在圆形包含一个小写字母的某个符号 "。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Error">
      <summary>消息框中将具有红色背景的圆圈包含一个符号包括的空白 X。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Exclamation">
      <summary>消息框与黄色背景的一个三角形包含的某个符号感叹号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Hand">
      <summary>消息框中将具有红色背景的圆圈包含空白 X 的符号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Information">
      <summary>消息框在圆形包含一个小写字母的某个符号 "。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.None">
      <summary>图标不会显示。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Question">
      <summary>消息框在圆形包含问号的符号。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Stop">
      <summary>消息框中将具有红色背景的圆圈包含一个符号包括的空白 X。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxImage.Warning">
      <summary>消息框与黄色背景的一个三角形包含的某个符号感叹号。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxOptions">
      <summary>为消息框指定特殊演示选项。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.DefaultDesktopOnly">
      <summary>消息框在交互式窗口区域的默认桌面上显示。指定消息框从 Microsoft .NET Framework windows 服务应用程序显示以通知事件的用户。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.None">
      <summary>选项未设置。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RightAlign">
      <summary>消息框文本和标题栏声明为右对齐。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.RtlReading">
      <summary>所有文本、按钮、图标和标题栏中显示的从右向左。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxOptions.ServiceNotification">
      <summary>消息框在当前活动的桌面显示，即使没有用户登录到计算机。指定消息框从 Microsoft .NET Framework windows 服务应用程序显示以通知事件的用户。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
      <summary>指定用户单击哪个消息框按钮。<see cref="T:System.Windows.MessageBoxResult" /> 用 <see cref="Overload:System.Windows.MessageBox.Show" /> 方法返回。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
      <summary>消息框的结果是值 取消。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
      <summary>消息框的结果是值 否。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
      <summary>消息框不返回结果。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
      <summary>消息框的结果是值 好。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
      <summary>消息框的结果是值 是。</summary>
    </member>
    <member name="T:System.Windows.MultiDataTrigger">
      <summary>表示应用属性值或执行操作的触发器，当绑定的数据符合一组条件时。 </summary>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.MultiDataTrigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Conditions">
      <summary>获取 <see cref="T:System.Windows.Condition" /> 对象的集合。，在集合中的所有条件都满足时，对属性值的更改适用。</summary>
      <returns>
        <see cref="T:System.Windows.Condition" /> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.MultiDataTrigger.Setters">
      <summary>获取的 <see cref="T:System.Windows.Setter" /> 对象的集合描述属性值应用，当 <see cref="T:System.Windows.MultiDataTrigger" /> 的所有条件都满足时。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="T:System.Windows.MultiTrigger">
      <summary>表示应用属性值或执行操作的触发器，当设置满足条件时。</summary>
    </member>
    <member name="M:System.Windows.MultiTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.MultiTrigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.MultiTrigger.Conditions">
      <summary>获取 <see cref="T:System.Windows.Condition" /> 对象的集合。，在集合中的所有条件都满足时，对属性值的更改适用。</summary>
      <returns>默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.MultiTrigger.Setters">
      <summary>获取 <see cref="T:System.Windows.Setter" /> 对象的集合，描述属性值应用，当所有 <see cref="T:System.Windows.MultiTrigger" /> 的条件都满足时。</summary>
      <returns>默认值为空。</returns>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
      <summary>来回 <see cref="T:System.Nullable`1" /> 类型的转换 (使用泛型的 <see cref="T:System.Boolean" /> 类型约束)。 </summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.NullableBoolConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回标准值的集合数据类型使用此类型转换器设计。 </summary>
      <returns>存放一个标准的集合设置有效值。对于此实现，这些值将 true、 false和 null。</returns>
      <param name="context">提供有关程序元素的上下文信息，例如其容器和属性说明符。 </param>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回从 <see cref="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 返回的标准值的集合是否是排除列表。 </summary>
      <returns>此实现始终返回 true。</returns>
      <param name="context">提供有关程序元素的上下文信息，例如其容器和属性说明符。</param>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回此对象是否支持标准可以从列表中选择的计时值。 </summary>
      <returns>此实现始终返回 true。</returns>
      <param name="context">提供有关程序元素的上下文信息，例如其容器和属性说明符。</param>
    </member>
    <member name="T:System.Windows.PowerLineStatus">
      <summary>表示系统功能是否联机，或者系统电源未知。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Offline">
      <summary>系统电源不是打开。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Online">
      <summary>系统电源是打开。</summary>
    </member>
    <member name="F:System.Windows.PowerLineStatus.Unknown">
      <summary>系统功能的状态无法确定的。</summary>
    </member>
    <member name="T:System.Windows.PropertyPath">
      <summary>实现描述的特性一种数据结构作为路径在另一个属性下，或在一个所属类型下。属性路径用于绑定到对象的数据和在演示图板和时间处理。动画。</summary>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.PropertyPath" /> 类的新实例。</summary>
      <param name="parameter">用于描述了路径。 公共语言运行时 (CLR) 属性的属性路径或唯一依赖项属性。 </param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <summary>初始化 <see cref="T:System.Windows.PropertyPath" /> 类的新实例，使用提供的小径标记字符串和参数。</summary>
      <param name="path">指定 <see cref="P:System.Windows.PropertyPath.Path" />的字符串，以标记化格式。</param>
      <param name="pathParameters">设置 <see cref="P:System.Windows.PropertyPath.PathParameters" />对象的数组。  </param>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
      <summary>获取或设置来描述路径的字符串。 </summary>
      <returns>描述路径的字符串。</returns>
    </member>
    <member name="P:System.Windows.PropertyPath.PathParameters">
      <summary>获取参数列表中使用路径时引用索引参数。</summary>
      <returns>参数列表。</returns>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
      <summary>为 <see cref="T:System.Windows.PropertyPath" /> 对象的类型转换器。 </summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.PropertyPathConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以将一种类型对象转换为 <see cref="T:System.Windows.PropertyPath" /> 类型。</summary>
      <returns>true ，如果 <paramref name="sourceType" /> 是类型 <see cref="T:System.String" />;否则， false。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。 </param>
      <param name="sourceType">
        <see cref="T:System.Type" /> 表示的类型要强制转换为。 </param>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换为 <see cref="T:System.Windows.PropertyPath" /> 类型的对象。</summary>
      <returns>true ，如果 <paramref name="destinationType" /> 是类型 <see cref="T:System.String" />;否则， false。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> 表示的类型要转换。 </param>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定为 <see cref="T:System.Windows.PropertyPath" /> 类型。</summary>
      <returns>转换后的 <see cref="T:System.Windows.PropertyPath" />。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="cultureInfo">使用的 <see cref="T:System.Globalization.CultureInfo" /> 为当前区域性。 </param>
      <param name="source">转换的对象转换为 <see cref="T:System.Windows.PropertyPath" />。这应该是字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 提供为 null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 不是， null，但是不是所需的 <see cref="T:System.String" /> 类型。</exception>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换为 <see cref="T:System.Windows.PropertyPath" /> 类型的指定对象。</summary>
      <returns>转换后的目标 <see cref="T:System.String" />。</returns>
      <param name="typeDescriptorContext">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 。</param>
      <param name="cultureInfo">使用的 <see cref="T:System.Globalization.CultureInfo" /> 为当前区域性。</param>
      <param name="value">转换的 <see cref="T:System.Windows.PropertyPath" /> 。</param>
      <param name="destinationType">目标类型。这应该是 <see cref="T:System.String" /> 类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 提供为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是， null，但是不是所需的 <see cref="T:System.Windows.PropertyPath" /> 类型。- 或 -<paramref name="destinationType" /> 不是 <see cref="T:System.String" /> 类型。</exception>
    </member>
    <member name="T:System.Windows.ReasonSessionEnding">
      <summary>指定用户会话关闭的原因。使用由 <see cref="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Logoff">
      <summary>，因为用户注销，该会话终止。</summary>
    </member>
    <member name="F:System.Windows.ReasonSessionEnding.Shutdown">
      <summary>，因为用户关闭 Windows，该会话终止。</summary>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventArgs">
      <summary>为 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />路由事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>调用事件处理程序用一个类型特定方式，可能会增加操作系统效率。</summary>
      <param name="genericHandler">调用一般处理程序具有一个类型特定方式。</param>
      <param name="genericTarget">调用处理程序的目标。</param>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
      <summary>获取应该将显示以响应该事件的对象。</summary>
      <returns>调用 <see cref="M:System.Windows.FrameworkElement.BringIntoView" />的对象。</returns>
    </member>
    <member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
      <summary>获取在应使工作表可见的对象的坐标空间的矩形区域。</summary>
      <returns>请求的矩形空间。</returns>
    </member>
    <member name="T:System.Windows.RequestBringIntoViewEventHandler">
      <summary>表示要处理 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件的方法。 </summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.ResizeMode">
      <summary>指定窗口，如果是这样，则可以调整大小以及它如何调整大小。使用由 <see cref="P:System.Windows.Window.ResizeMode" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanMinimize">
      <summary>只能将和还原窗口。最小化 和 最大化 按钮都公开，但是，仅 最小化 按钮均处于启用状态。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResize">
      <summary>窗口的大小进行调整。最小化 和 最大化 按钮显示并启用。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.CanResizeWithGrip">
      <summary>窗口的大小进行调整。最小化 和 最大化 按钮显示并启用。大小调整手柄显示在窗口的底部正确的位置。</summary>
    </member>
    <member name="F:System.Windows.ResizeMode.NoResize">
      <summary>窗口不能调整大小。最小化 和 最大化 按钮只有在标题栏中显示。</summary>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
      <summary>提供包含元素和 WPF 应用程序的其他元素使用的 WPF 资源的一个哈希表/字典实现。 </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ResourceDictionary" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <summary>由键资源添加到此 <see cref="T:System.Windows.ResourceDictionary" />。 </summary>
      <param name="key">添加键的名称。</param>
      <param name="value">添加资源的值。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.ResourceDictionary" /> 锁定或只读。</exception>
      <exception cref="T:System.ArgumentException">与同一个键的元素已存在 <see cref="T:System.Collections.Hashtable" />。 </exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.BeginInit">
      <summary>开始此 <see cref="T:System.Windows.ResourceDictionary" />的初始化阶段。 </summary>
      <exception cref="T:System.InvalidOperationException">调用的 <see cref="M:System.Windows.ResourceDictionary.BeginInit" /> 在 <see cref="M:System.Windows.ResourceDictionary.EndInit" /> 之前多次调用。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
      <summary>清除所有键 (和值) 在基本 <see cref="T:System.Windows.ResourceDictionary" />。这不是清除所有合并字典项。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <summary>确定 <see cref="T:System.Windows.ResourceDictionary" /> 是否包含具有指定密钥的一个元素。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.ResourceDictionary" /> 包含一个键/值对具有指定键的;否则， false。</returns>
      <param name="key">位于的键 <see cref="T:System.Windows.ResourceDictionary" />。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>复制 <see cref="T:System.Windows.ResourceDictionary" /> 元素对一维 <see cref="T:System.Collections.DictionaryEntry" /> 位于指定索引处。 </summary>
      <param name="array">是 <see cref="T:System.Collections.DictionaryEntry" /> 对象的目标的一维数组从 <see cref="T:System.Windows.ResourceDictionary" /> 实例的副本。数组必须是从零开始的索引。</param>
      <param name="arrayIndex">首先复制 <paramref name="array" /> 的从零开始的索引。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
      <summary>获取项的数目在基本 <see cref="T:System.Windows.ResourceDictionary" />的。 </summary>
      <returns>项的当前基本在字典中。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.DeferrableContent">
      <summary>获取或设置此资源字典的 deferrable 内容。</summary>
      <returns>始终返回 null。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.EndInit">
      <summary>关闭初始化阶段，并且无效前面的树这样在初始化阶段对密钥任何更改可能占用。 </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.FindName(System.String)">
      <summary>不支持使用此字典实现。</summary>
      <returns>始终返回 null。</returns>
      <param name="name">请求对象的名称标识符。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
      <summary>返回可用于通过 <see cref="T:System.Windows.ResourceDictionary" />重复 <see cref="T:System.Collections.IDictionaryEnumerator" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.ResourceDictionary" />的专用的枚举数。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
      <summary>获取此 <see cref="T:System.Windows.ResourceDictionary" /> 是否固定大小的。 </summary>
      <returns>true ，如果哈希表具有固定大小的;否则， false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
      <summary>获取此 <see cref="T:System.Windows.ResourceDictionary" /> 是否为只读。 </summary>
      <returns>true ，如果哈希表是只读的;否则， false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <summary> 获取或设置值与特定键。 </summary>
      <returns>键的值。</returns>
      <param name="key">预期键获取或设置。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
      <summary>获取此 <see cref="T:System.Windows.ResourceDictionary" />包含的所有关键的集合。 </summary>
      <returns>所有键的集合。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <summary>获取构成在合并字典的各种资源字典 <see cref="T:System.Windows.ResourceDictionary" /> 字典的集合。</summary>
      <returns>合并字典的集合。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)">
      <summary>，当 <see cref="T:System.Windows.ResourceDictionary" /> 接收对资源，发生。</summary>
      <param name="key">获取资源的键。</param>
      <param name="value">请求的资源的值。</param>
      <param name="canCache">true ，如果以后可以保存和使用资源;否则， false。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
      <summary>不支持使用此字典实现。</summary>
      <param name="name">请参见 " 备注 "。</param>
      <param name="scopedElement">请参见 " 备注 "。</param>
      <exception cref="T:System.NotSupportedException">在所有情况下，当调用此方法。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <summary>移除项与指定键从一个基本字典。 </summary>
      <param name="key">移除的项的键。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.ResourceDictionary" /> 锁定或只读。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
      <summary>获取或设置 统一资源标识符 (URI) 加载资源从。</summary>
      <returns>一个外部资源字典的源位置。 </returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">接收 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" />中复制项的从零开始的 <see cref="T:System.Array" /> 。</param>
      <param name="arrayIndex">在接收复制的内容的指定 <see cref="T:System.Array" /> 的第一个位置。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>true ，如果对 <see cref="T:System.Windows.ResourceDictionary" /> 的访问同步 (线程安全);否则， false。 </returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.ResourceDictionary" />访问对象。 </returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基本 URI 。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
      <summary>不支持使用此字典实现。</summary>
      <param name="name">请参见 " 备注 "</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
      <summary> 获取所有值的集合与本 <see cref="T:System.Windows.ResourceDictionary" />包含的键。 </summary>
      <returns>所有值的集合。</returns>
    </member>
    <member name="T:System.Windows.ResourceDictionaryLocation">
      <summary>指定找到主题资源字典的位置。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.ExternalAssembly">
      <summary>主题字典存在于程序集外部到定义类型的命令行是主题。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.None">
      <summary>主题字典不存在。</summary>
    </member>
    <member name="F:System.Windows.ResourceDictionaryLocation.SourceAssembly">
      <summary>主题字典存在于定义为的类型主题的程序集。</summary>
    </member>
    <member name="T:System.Windows.ResourceKey">
      <summary>用于各种资源键提供抽象基类。 </summary>
    </member>
    <member name="M:System.Windows.ResourceKey.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.ResourceKey" />从派生的类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.ResourceKey.Assembly">
      <summary>获取指示的程序集对象查找哪个程序集的字典为值与此密钥。 </summary>
      <returns>检索的程序集，作为反射类。</returns>
    </member>
    <member name="M:System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)">
      <summary>返回此 <see cref="T:System.Windows.ResourceKey" />。此类实例通常用作键在字典。</summary>
      <returns>调用此方法始终返回实例。</returns>
      <param name="serviceProvider">提供所需的值的服务实现。</param>
    </member>
    <member name="T:System.Windows.ResourceReferenceKeyNotFoundException">
      <summary>引发的异常，则资源引用键时无法在分析或序列化标记扩展资源的过程中找到。</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 类的新实例使用指定的序列化信息和流式上下文。</summary>
      <param name="info">从序列化的特定处理器。</param>
      <param name="context">上下文，在引发异常后。</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> 类的新实例使用指定的错误消息和资源键的。</summary>
      <param name="message">一个可能的描述性消息。</param>
      <param name="resourceKey">未找到的键。</param>
    </member>
    <member name="M:System.Windows.ResourceReferenceKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>异常的特定向调试器或对话框报告。</summary>
      <param name="info">从序列化的特定处理器。</param>
      <param name="context">上下文，在引发异常后。</param>
    </member>
    <member name="P:System.Windows.ResourceReferenceKeyNotFoundException.Key">
      <summary>获取未找到并不会导致引发异常的键。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <summary>提供有关一个不同的数据在值中。 依赖项属性 信息与由特定 路由事件，包括更改属性的以前和当前值。 </summary>
      <typeparam name="T">更改依赖项属性的类型。</typeparam>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <summary>初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 类的新实例，使用提供的旧值和新值。</summary>
      <param name="oldValue">属性以前的值，在引发事件之前。</param>
      <param name="newValue">属性的当前值在事件中。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)">
      <summary>初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 类的新实例，使用提供的旧值和新值和事件标识符。</summary>
      <param name="oldValue">属性以前的值，在引发事件之前。</param>
      <param name="newValue">属性的当前值在事件中。</param>
      <param name="routedEvent">此参数类别路由事件的标识符传播信息。</param>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>调用事件处理程序用一个类型特定方式，可能会增加操作系统效率。</summary>
      <param name="genericHandler">调用一般处理程序具有一个类型特定方式。</param>
      <param name="genericTarget">调用处理程序的目标。</param>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <summary>获取属性的新值为报告 property-changed 事件。 </summary>
      <returns>泛型值。在 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />的一个实用的实现，此属性的泛型类型通过实现约束的类型替换。</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <summary>获取属性以前的值为报告 property-changed 事件。 </summary>
      <returns>泛型值。在 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />的一个实用的实现，此属性的泛型类型通过实现约束的类型替换。</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <summary>表示要处理各种 路由事件 跟踪属性值更改的方法。</summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。特定事件定义将约束 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 到一个类型，该约束的类型与该类型实现委托的参数约束的参数。</param>
      <typeparam name="T">在值中的更改报告属性值的类型。</typeparam>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventArgs">
      <summary>包含 <see cref="E:System.Windows.Application.SessionEnding" /> 事件的事件参数。</summary>
    </member>
    <member name="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding">
      <summary>获取一个值会议原因关闭。</summary>
      <returns>指示的 <see cref="T:System.Windows.ReasonSessionEnding" /> 值会议原因关闭。</returns>
    </member>
    <member name="T:System.Windows.SessionEndingCancelEventHandler">
      <summary>表示该方法处理 <see cref="E:System.Windows.Application.SessionEnding" /> 事件。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">使用事件参数的一 <see cref="T:System.Windows.SessionEndingCancelEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Windows.Setter">
      <summary>表示应用于一个属性的 setter。</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Setter.Property" /> 属性不能为空。</exception>
      <exception cref="T:System.ArgumentException">如果指定的 <see cref="P:System.Windows.Setter.Property" /> 为只读属性。</exception>
      <exception cref="T:System.ArgumentException">如果指定的 <see cref="P:System.Windows.Setter.Value" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Setter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Setter" /> 类的新实例具有指定的属性和的值。</summary>
      <param name="property">应用 <see cref="P:System.Windows.Setter.Value" /> 的 <see cref="T:System.Windows.DependencyProperty" /> 。</param>
      <param name="value">应用的值应用于属性。</param>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
      <summary>初始化 <see cref="T:System.Windows.Setter" /> 类的新实例使用指定的属性、值和目标名称的。</summary>
      <param name="property">应用 <see cref="P:System.Windows.Setter.Value" /> 的 <see cref="T:System.Windows.DependencyProperty" /> 。</param>
      <param name="value">应用的值应用于属性。</param>
      <param name="targetName">子节点的名称此 <see cref="T:System.Windows.Setter" /> 供使用。</param>
    </member>
    <member name="P:System.Windows.Setter.Property">
      <summary>获取或设置 <see cref="P:System.Windows.Setter.Value" /> 要应用于的属性。</summary>
      <returns>
        <see cref="P:System.Windows.Setter.Value" /> 进行应用 <see cref="T:System.Windows.DependencyProperty" /> 。默认值为空。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Setter.Property" /> 属性不能是 null。</exception>
      <exception cref="T:System.ArgumentException">指定的 <see cref="P:System.Windows.Setter.Property" /> 特性不能是只读的。</exception>
      <exception cref="T:System.InvalidOperationException">如果指定的 <see cref="P:System.Windows.Setter.Value" /> 指定的 <see cref="P:System.Windows.Setter.Property" />的类型无效。</exception>
    </member>
    <member name="M:System.Windows.Setter.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)">
      <summary>处理大小写标记扩展 <see cref="T:System.Windows.Setter" /> 对象的位置属性提供值。</summary>
      <param name="targetObject">对象标记扩展将值的位置。</param>
      <param name="eventArgs">与标记扩展处理关系数据。</param>
    </member>
    <member name="M:System.Windows.Setter.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>处理大小写的类型转换器。 <see cref="T:System.Windows.Setter" /> 对象的属性的位置提供值。</summary>
      <param name="targetObject">对象该类型转换器将值的位置。</param>
      <param name="eventArgs">与类型转换器处理关系数据。</param>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>表示初始化开始的对象。 </summary>
    </member>
    <member name="M:System.Windows.Setter.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>对象初始化的信号完成。 </summary>
    </member>
    <member name="P:System.Windows.Setter.TargetName">
      <summary>获取或设置此 <see cref="T:System.Windows.Setter" /> 供使用的对象的名称。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
      <summary>获取或设置值适用于由此 <see cref="T:System.Windows.Setter" />指定的属性。</summary>
      <returns>默认值为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</returns>
      <exception cref="T:System.ArgumentException">如果指定的 <see cref="P:System.Windows.Setter.Value" /> 设置为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="T:System.Windows.SetterBase">
      <summary>表示值 setter 的基类。 </summary>
    </member>
    <member name="M:System.Windows.SetterBase.CheckSealed">
      <summary>检查此对象是否是只读的，不能更改。</summary>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
      <summary>获取一个值此对象是否在一个不可变的状态。</summary>
      <returns>true ，如果该对象在一个不可变的状态;否则， false。</returns>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
      <summary>表示 <see cref="T:System.Windows.SetterBase" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.SetterBaseCollection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
      <summary>获取一个值此对象是否在只读状态。</summary>
      <returns>true ，如果该对象在只读状态，因此无法更改;否则， false。</returns>
    </member>
    <member name="T:System.Windows.ShutdownMode">
      <summary>指定应用程序如何将关闭。使用由 <see cref="P:System.Windows.Application.ShutdownMode" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnExplicitShutdown">
      <summary>，仅当 <see cref="M:System.Windows.Application.Shutdown" /> 调用时，应用程序关闭。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnLastWindowClose">
      <summary>应用程序关闭时，或最后一个窗口关闭时关闭，或者 <see cref="M:System.Windows.Application.Shutdown" /> 调用。</summary>
    </member>
    <member name="F:System.Windows.ShutdownMode.OnMainWindowClose">
      <summary>应用程序关闭时，或主窗口关闭时关闭，或者 <see cref="M:System.Windows.Application.Shutdown" /> 调用。</summary>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
      <summary>提供数据与 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 事件相关。 </summary>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.HeightChanged">
      <summary>获取一个值该范围的 <see cref="P:System.Windows.FrameworkElement.Height" /> 元素是否已更改。</summary>
      <returns>true ，如果范围 <see cref="P:System.Windows.FrameworkElement.Height" /> 元素更改为;否则， false。</returns>
    </member>
    <member name="M:System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>调用事件处理程序用一个类型特定方式，可能会增加操作系统效率。</summary>
      <param name="genericHandler">调用一般处理程序具有一个类型特定方式。</param>
      <param name="genericTarget">调用处理程序的目标。</param>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
      <summary>获取对象的新 <see cref="T:System.Windows.Size" /> 。</summary>
      <returns>对象的新 <see cref="T:System.Windows.Size" /> 。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <summary>获取对象的一 <see cref="T:System.Windows.Size" /> 。 </summary>
      <returns>对象的一 <see cref="T:System.Windows.Size" /> 。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.WidthChanged">
      <summary>获取一个值该范围的 <see cref="P:System.Windows.FrameworkElement.Width" /> 元素是否已更改。</summary>
      <returns>true ，如果范围 <see cref="P:System.Windows.FrameworkElement.Width" /> 元素更改为;否则， false。</returns>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
      <summary>表示要处理 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
      <summary>包含 <see cref="E:System.Windows.Application.Startup" /> 的事件的参数。</summary>
    </member>
    <member name="P:System.Windows.StartupEventArgs.Args">
      <summary>获取传递给从命令提示符处或桌面的应用程序的命令行参数。</summary>
      <returns>包含命令行参数传递给从命令提示符处或桌面的应用程序的字符串数组。如果命令行参数未通过，字符串数组作为零个项。</returns>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
      <summary>表示该方法处理 <see cref="E:System.Windows.Application.Startup" /> 事件。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.StaticResourceExtension">
      <summary>实现支持静态的标记扩展 (XAML 加载时) 资源引用由 XAML 进行。 </summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.StaticResourceExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.StaticResourceExtension" /> 类的新实例，使用提供的初始键。</summary>
      <param name="resourceKey">此标记扩展引用资源的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceKey" /> 参数是 null，通过标记扩展用法或显式构造。</exception>
    </member>
    <member name="M:System.Windows.StaticResourceExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回在属性应设置此扩展的应用对象。对于 <see cref="T:System.Windows.StaticResourceExtension" />，这是在资源字典中的对象，查找的对象由 <see cref="P:System.Windows.StaticResourceExtension.ResourceKey" />确定的。</summary>
      <returns>设置的对象值在标记扩展提供值的属性进行计算。</returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> 是 null或未能实现所需服务。</exception>
    </member>
    <member name="P:System.Windows.StaticResourceExtension.ResourceKey">
      <summary>获取或设置此静态资源传递的键值引用。这些键用于返回与资源字典的对象该项。</summary>
      <returns>资源的资源键。</returns>
      <exception cref="T:System.ArgumentNullException">作为 null的指定值，通过标记扩展用法或显式构造。</exception>
    </member>
    <member name="T:System.Windows.Style">
      <summary>启用共享属性、资源和事件处理程序在类型的实例之间。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Style" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Windows.Style" /> 类的新实例。在指定的 <see cref="T:System.Type" />的使用。 </summary>
      <param name="targetType">该样式将应用的类型。</param>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)">
      <summary>初始化 <see cref="T:System.Windows.Style" /> 类的新实例。在指定的 <see cref="T:System.Type" /> 的使用和基于指定的 <see cref="T:System.Windows.Style" />。 </summary>
      <param name="targetType">该样式将应用的类型。</param>
      <param name="basedOn">基于此样式的样式。</param>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
      <summary>获取或设置为当前样式的基类型中定义的样式。</summary>
      <returns>是当前样式的基类型中定义的样式。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Style.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Style" />的哈希代码。    </summary>
      <returns>此 <see cref="T:System.Windows.Style" />的哈希代码。   </returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
      <summary>获取一个值该样式是否是只读的，不能更改。</summary>
      <returns>true ，如果该样式密封;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Style.RegisterName(System.String,System.Object)">
      <summary>新的名称对象在当前名称匹配的注册。</summary>
      <param name="name">注册的名称。</param>
      <param name="scopedElement">要映射到的对象到指定的 <paramref name="name" />。</param>
    </member>
    <member name="P:System.Windows.Style.Resources">
      <summary>获取或设置此样式的范围中，可以使用资源的集合。</summary>
      <returns>此样式的范围内，可使用的资源。</returns>
    </member>
    <member name="M:System.Windows.Style.Seal">
      <summary>不能即执行此样式和所有工厂和触发器，因此它们。</summary>
    </member>
    <member name="P:System.Windows.Style.Setters">
      <summary>获取 <see cref="T:System.Windows.Setter" /> 和 <see cref="T:System.Windows.EventSetter" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> 和 <see cref="T:System.Windows.EventSetter" /> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#INameScope#FindName(System.String)">
      <summary>返回具有提供的标识符名称的对象。 </summary>
      <returns>对象，因此，如果找到。; 如果未找到，则返回 null 该名称的对象。</returns>
      <param name="name">请求对象的名称标识符。</param>
    </member>
    <member name="M:System.Windows.Style.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)">
      <summary>查询一个指定的单个属性是否可用在当前范围内。</summary>
      <returns>true ，如果请求的单个属性可用;否则， false。</returns>
      <param name="propertyName">请求的单个属性的名称。</param>
    </member>
    <member name="P:System.Windows.Style.TargetType">
      <summary>获取或设置此样式的预期类型。</summary>
      <returns>此样式的对象类型。</returns>
    </member>
    <member name="P:System.Windows.Style.Triggers">
      <summary>获取的 <see cref="T:System.Windows.TriggerBase" /> 对象的集合将根据指定的条件中的属性。</summary>
      <returns>
        <see cref="T:System.Windows.TriggerBase" /> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.Style.UnregisterName(System.String)">
      <summary>从名称范围移除映射的名称对象。</summary>
      <param name="name">移除的映射的名称。</param>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
      <summary>表示应用于类定义的属性并确定属性 <see cref="P:System.Windows.Style.TargetType" />是类型 <see cref="T:System.Windows.Style" />的。</summary>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.StyleTypedPropertyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <summary>获取或设置属于类型 <see cref="T:System.Windows.Style" />属性的名称。</summary>
      <returns>是类型 <see cref="T:System.Windows.Style" />属性的名称。</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>获取或设置此属性指定 <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> 的 <see cref="P:System.Windows.Style.TargetType" /> 。</summary>
      <returns>此属性指定 <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> 的 <see cref="P:System.Windows.Style.TargetType" /> 。</returns>
    </member>
    <member name="T:System.Windows.SystemColors">
      <summary>包含系统颜色、系统画笔和对应于系统显示元素的系统资源键。 </summary>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrush">
      <summary>获取是活动窗口的边框颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为活动窗口的边框的颜色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderBrushKey">
      <summary>获取用于的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 绘制活动窗口的边框。 </summary>
      <returns>用于的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键绘制活动窗口的边框。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
      <summary>获取是活动窗口的边框颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>活动窗口的边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColorKey">
      <summary>获取活动窗口的边框的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>活动窗口的边框的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrush">
      <summary>获取是活动窗口的标题栏的背景颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为活动窗口的标题栏的背景色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionBrushKey">
      <summary>获取用于的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 绘制活动窗口的标题栏的背景。</summary>
      <returns>用于的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键绘制活动窗口的标题栏的背景。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
      <summary>获取是活动窗口的标题栏的背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>活动窗口的标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColorKey">
      <summary>获取活动窗口标题栏的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>活动窗口的标题栏的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrush">
      <summary>获取表示文本的颜色在活动窗口标题栏的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为文本颜色的背景色在活动窗口的标题栏。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextBrushKey">
      <summary>获取在活动窗口的标题栏绘制文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>在活动窗口的标题栏绘制文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <summary>获取表示文本的颜色在活动窗口标题栏的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>活动窗口的标题栏的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColorKey">
      <summary>在活动窗口的标题栏获取文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键在活动窗口的标题栏。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrush">
      <summary>获取表示应用程序工作区的颜色 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为应用程序工作区的颜色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceBrushKey">
      <summary>获取绘制应用程序工作区的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>绘制应用程序工作区 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
      <summary>获取表示应用程序工作区的颜色 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>应用程序工作区的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColorKey">
      <summary>获取应用程序工作区的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>应用程序工作区的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrush">
      <summary>获取表示一个立体显示元素中的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为一个立体显示元素中的文本颜色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlBrushKey">
      <summary>获取绘制一个立体显示元素中的文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>绘制一个立体显示元素中的文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
      <summary>获取表示一个立体显示元素中的文本颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>一个立体显示元素中的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColorKey">
      <summary>获取一个立体显示元素中的文本的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>一个立体显示元素中的文本的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrush">
      <summary>获取表示一个立体显示元素的阴影的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为一个立体显示元素的阴影的颜色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkBrushKey">
      <summary>获取绘制一个立体显示元素阴影的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>绘制一个立体显示元素的阴影 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
      <summary>获取表示一个立体显示元素的阴影的颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>一个立体显示元素的阴影的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColorKey">
      <summary>获取一个立体显示元素阴影的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>一个立体显示元素阴影的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrush">
      <summary>获取表示一个立体显示元素的暗影颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为一个立体显示元素的暗影颜色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkBrushKey">
      <summary>获取绘制一个立体显示元素的暗影的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制一个立体显示元素的暗影 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <summary>获取表示一个立体显示元素的暗影颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>一个立体显示元素的暗影颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColorKey">
      <summary>获取一个立体显示元素的突出显示颜色的暗影的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>一个立体显示元素的暗影的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrush">
      <summary>获取表示一个立体显示元素的淡色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.SolidColorBrush" /> 及其 <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 设置为一个立体显示元素的淡色。返回的画笔 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightBrushKey">
      <summary>获取绘制一个立体显示元素的光线范围的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制一个立体显示元素的光线范围 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
      <summary>获取表示一个立体显示元素的淡色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>一个立体显示元素的淡色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColorKey">
      <summary>获取一个立体显示元素的突出显示的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>一个立体显示元素的突出显示的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrush">
      <summary>获取表示一个立体显示元素的突出显示颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>一个立体显示元素的突出显示颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightBrushKey">
      <summary>获取绘制一个立体显示元素的突出显示的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制一个立体显示元素的突出显示 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
      <summary>获取表示一个立体显示元素的突出显示颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>一个立体显示元素的突出显示颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColorKey">
      <summary>获取一个立体显示元素的突出显示的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>一个立体显示元素的突出显示的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrush">
      <summary>获取表示文本的颜色在一个立体显示元素的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>文本的颜色在一个立体显示元素。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextBrushKey">
      <summary>获取绘制在一个立体显示元素 text 的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制在一个立体显示元素 text 的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
      <summary>获取表示文本的颜色在一个立体显示元素的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>文本的颜色在一个立体显示元素。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColorKey">
      <summary>获取文本 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 在一个立体显示元素。</summary>
      <returns>文本 <see cref="T:System.Windows.Media.Color" /> 的资源键在一个立体显示元素。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrush">
      <summary>获取都是桌面的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>桌面的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopBrushKey">
      <summary>获取绘制桌面的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制桌面 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
      <summary>获取都是桌面的颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>桌面的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColorKey">
      <summary>获取桌面的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>桌面的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrush">
      <summary>获取位于活动窗口的标题栏的渐变的右侧颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>在渐变的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionBrushKey">
      <summary>获取是活动窗口的标题栏的渐变的右侧的颜色 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>是活动窗口的标题栏的渐变的右侧的颜色 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColor">
      <summary>获取位于活动窗口的标题栏的渐变的右侧颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>在渐变的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientActiveCaptionColorKey">
      <summary>获取右侧的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 在活动窗口的标题栏的渐变。 </summary>
      <returns>右侧的 <see cref="T:System.Windows.Media.Color" /> 资源键在活动窗口的标题栏的渐变。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrush">
      <summary>获取位于无效窗口标题栏的渐变的右侧颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>在渐变的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrushKey">
      <summary>获取是无效的窗口标题栏的渐变的右侧的颜色 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>用于的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键绘制无效窗口的标题栏的背景。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColor">
      <summary>获取位于无效窗口标题栏的渐变的右侧颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>在渐变的右侧颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GradientInactiveCaptionColorKey">
      <summary>获取右侧的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 在无效窗口标题栏的渐变。 </summary>
      <returns>右侧的 <see cref="T:System.Windows.Media.Color" /> 资源键在无效窗口标题栏的渐变。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrush">
      <summary>获取禁用文本的颜色 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>禁用文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextBrushKey">
      <summary>获取 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 用于绘制禁用的文本。 </summary>
      <returns>该 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键绘制禁用文本。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
      <summary>获取禁用文本的颜色 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>禁用文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColorKey">
      <summary>获取禁用文本 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>禁用文本 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrush">
      <summary>获取绘制选定项的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>选定项的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightBrushKey">
      <summary>获取绘制选定项的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制选定项的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
      <summary>获取表示选定项的背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>选定项的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColorKey">
      <summary>获取背景将选定的项 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>背景将选定的项 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrush">
      <summary>获取表示选定项的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>选定项的文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextBrushKey">
      <summary>获取绘制选定项的文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制选定项的文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
      <summary>获取表示选定项的文本颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>选定项的文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColorKey">
      <summary>获取一个选定项的文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>一个选定项的文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrush">
      <summary>获取是用于的颜色指定一个快捷跟踪项目的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>使用的颜色指定一个快捷跟踪的项目。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackBrushKey">
      <summary>获取绘制热跟踪项目的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制热跟踪项目的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColor">
      <summary>获取是用于的颜色指定一个快捷跟踪项目的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>使用的颜色指定一个快捷跟踪的项目。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HotTrackColorKey">
      <summary>获取指定一个快捷跟踪项目的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>指定一个快捷跟踪的项目 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrush">
      <summary>获取是无效的窗口的边框颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>无效窗口的边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderBrushKey">
      <summary>获取绘制一个无效窗口的边框的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制一个无效窗口的边框 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
      <summary>获取是无效的窗口的边框颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>无效窗口的边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColorKey">
      <summary>获取一个无效窗口的边框的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>无效窗口的边框的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrush">
      <summary>获取是无效的窗口标题栏的背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>无效的窗口的标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionBrushKey">
      <summary>获取绘制无效窗口标题栏的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制无效窗口的标题栏的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
      <summary>获取是无效的窗口标题栏的背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>无效的窗口的标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColorKey">
      <summary>获取无效窗口标题栏的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>无效的窗口标题栏的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrush">
      <summary>获取是无效的窗口的标题栏文本的颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>无效的窗口的标题栏文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextBrushKey">
      <summary>获取绘制无效窗口的标题栏文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制无效窗口标题栏的文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <summary>获取是无效的窗口的标题栏文本的颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>无效的窗口的标题栏文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColorKey">
      <summary>获取无效窗口的标题栏文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>无效的窗口的标题栏文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush">
      <summary>获取是用于的颜色显示选定的项处于非活动状态 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。</summary>
      <returns>使用的颜色显示非活动选定的项。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightBrushKey">
      <summary>获取绘制非活动选定项的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>绘制一个非活动选定项的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush">
      <summary>获取表示非活动选定项的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。</summary>
      <returns>非活动选定项的文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrushKey">
      <summary>获取绘制非活动选定项的文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>绘制一个非活动选定项的文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrush">
      <summary>获取表示 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoBrushKey">
      <summary>获取绘制 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>绘制 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
      <summary>获取表示 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColorKey">
      <summary>获取 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrush">
      <summary>获取表示 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextBrushKey">
      <summary>获取绘制在 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制在 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
      <summary>获取表示 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> 控件的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColorKey">
      <summary>获取文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 在 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的。 </summary>
      <returns>文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键在 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrush">
      <summary>获取表示菜单栏的背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>菜单栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarBrushKey">
      <summary>获取菜单栏绘制背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制菜单栏的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColor">
      <summary>获取表示菜单栏的背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>菜单栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBarColorKey">
      <summary>获取菜单栏背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>菜单栏背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrush">
      <summary>获取表示菜单的背景颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>菜单的背景颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuBrushKey">
      <summary>获取绘制菜单的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制菜单的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
      <summary>获取表示菜单的背景颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>菜单的背景颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColorKey">
      <summary>获取菜单的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>菜单的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrush">
      <summary>获取是用于的颜色显示菜单项的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>使用的颜色显示菜单项。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightBrushKey">
      <summary>获取绘制显示的菜单项的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制显示的菜单项 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColor">
      <summary>获取是用于的颜色显示菜单项的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>使用的颜色显示菜单项。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuHighlightColorKey">
      <summary>获取突出显示的菜单项的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>显示菜单项的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrush">
      <summary>获取表示菜单的文本颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>菜单的文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextBrushKey">
      <summary>获取绘制菜单的文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制菜单的文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
      <summary>获取表示菜单的文本颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>菜单的文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColorKey">
      <summary>获取菜单的文本的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>菜单的文本的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrush">
      <summary>获取表示滚动条的背景色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>滚动条的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarBrushKey">
      <summary>获取滚动条绘制背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制滚动条的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
      <summary>获取表示滚动条的背景色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>滚动条的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColorKey">
      <summary>获取滚动条的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>滚动条的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrush">
      <summary>获取是背景色在窗口工作区的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>背景色在窗口的工作区。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowBrushKey">
      <summary>获取绘制窗口工作区的背景的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制窗口工作区的背景 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
      <summary>获取是背景色在窗口工作区的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>背景色在窗口的工作区。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColorKey">
      <summary>获取窗口工作区的背景的 <see cref="T:System.Windows.Media.Color" /><see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>窗口工作区的背景的 <see cref="T:System.Windows.Media.Color" /> 资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrush">
      <summary>获取表示窗架颜色的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>窗架的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameBrushKey">
      <summary>获取绘制一个窗架的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>绘制一个窗架 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
      <summary>获取表示窗架颜色的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>窗架的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColorKey">
      <summary>获取窗架的 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>窗架的 <see cref="T:System.Windows.Media.Color" /> 的资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrush">
      <summary>获取表示文本的颜色在窗口工作区的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 。 </summary>
      <returns>文本的颜色在窗口的工作区。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextBrushKey">
      <summary>获取在窗口的工作区绘制文本的 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>在窗口的工作区绘制文本 <see cref="T:System.Windows.Media.SolidColorBrush" /> 的资源键。此画笔的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性是 true，因此，不能修改它。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
      <summary>获取表示文本的颜色在窗口工作区的 <see cref="T:System.Windows.Media.Color" /> 结构。 </summary>
      <returns>文本的颜色在窗口的工作区。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColorKey">
      <summary>在窗口的工作区获取文本 <see cref="T:System.Windows.Media.Color" /> 的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>文本 <see cref="T:System.Windows.Media.Color" /> 的资源键在窗口的工作区。</returns>
    </member>
    <member name="T:System.Windows.SystemCommands">
      <summary>定义路由到窗口管理通用的命令。</summary>
    </member>
    <member name="M:System.Windows.SystemCommands.CloseWindow(System.Windows.Window)">
      <summary>关闭指定的窗口。</summary>
      <param name="window">关闭的窗口。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.CloseWindowCommand">
      <summary>获取关闭一个窗口的命令。</summary>
      <returns>关闭一窗口的命令。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.MaximizeWindow(System.Windows.Window)">
      <summary>最大化指定的窗口。</summary>
      <param name="window">最大化的窗口。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.MaximizeWindowCommand">
      <summary>获取最大化窗口的命令。</summary>
      <returns>最大化窗口的命令。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.MinimizeWindow(System.Windows.Window)">
      <summary>将指定的窗口。</summary>
      <param name="window">最小化的窗口。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.MinimizeWindowCommand">
      <summary>获取最大化窗口的命令。</summary>
      <returns>最大化窗口的命令。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.RestoreWindow(System.Windows.Window)">
      <summary>还原所指定的寡妇。</summary>
      <param name="window">还原的窗口。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.RestoreWindowCommand">
      <summary>获取还原窗口的命令。</summary>
      <returns>还原窗口的命令。</returns>
    </member>
    <member name="M:System.Windows.SystemCommands.ShowSystemMenu(System.Windows.Window,System.Windows.Point)">
      <summary>显示指定的窗口的系统菜单。</summary>
      <param name="window">窗口将其系统显示菜单。</param>
      <param name="screenLocation">系统菜单的位置。</param>
    </member>
    <member name="P:System.Windows.SystemCommands.ShowSystemMenuCommand">
      <summary>获取显示系统菜单上的命令。</summary>
      <returns>显示系统菜单上的命令。</returns>
    </member>
    <member name="T:System.Windows.SystemFonts">
      <summary>包含演示系统资源字体相关的属性。 </summary>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamily">
      <summary>获取用于确定一 nonminimized 窗口的非工作区声明字体系列的指标。 </summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSize">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的声明字号的指标。 </summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyle">
      <summary>获取用于确定该声明字体样式为一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorations">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的标题文本修饰的指标。 </summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeight">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的声明字体权重的指标。 </summary>
      <returns>字体权重。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.CaptionFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.CaptionFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamily">
      <summary>从当前图标标题字体的逻辑字体信息获取字体系列。  </summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSize">
      <summary>从当前图标标题字体的逻辑字体信息获取字体大小。 </summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyle">
      <summary>从当前图标标题字体的逻辑字体信息获取字体样式。 </summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorations">
      <summary>从当前图标标题字体的逻辑字体信息获取文本修饰。 </summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeight">
      <summary>从当前图标标题字体的逻辑字体信息获取字体权重。 </summary>
      <returns>字体权重。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.IconFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.IconFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamily">
      <summary>获取放置 menu 文本的字体系列的指标。 </summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSize">
      <summary>获取放置 menu 中文本的字体大小的指标。 </summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyle">
      <summary>获取放置 menu 文本的字体样式的指标。 </summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorations">
      <summary>获取放置 menu 文本的文本修饰的指标。 </summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeight">
      <summary>获取放置 menu 文本的字体权重的指标。 </summary>
      <returns>字体权重。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MenuFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MenuFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamily">
      <summary>获取用于确定消息框文本的字体系列的指标。 </summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSize">
      <summary>获取用于确定消息框中文本的字体大小的指标。 </summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyle">
      <summary>获取用于确定消息框文本的字体样式的指标。 </summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorations">
      <summary>获取用于确定消息框文本的修饰指标。 </summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeight">
      <summary>获取用于确定消息框文本的字体权重的指标。 </summary>
      <returns>字体权重。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.MessageFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamily">
      <summary>获取用于确定对声明文本的字体系列的一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSize">
      <summary>获取用于确定对标题文本的字体大小一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyle">
      <summary>获取用于确定对标题文本字体样式一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations">
      <summary>获取用于确定对标题文本修饰一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeight">
      <summary>获取用于确定对声明文本的字体权重一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体权重。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.SmallCaptionFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.SmallCaptionFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamily">
      <summary>获取用于确定在状态栏和工具提示文本的字体系列用于一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体系列。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontFamilyKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontFamily" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSize">
      <summary>获取用于确定在状态栏和工具提示的文本的字体大小用于一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字号。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontSizeKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontSize" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyle">
      <summary>获取用于确定在状态栏和工具提示文本的字体样式用于一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体样式。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontStyle" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorations">
      <summary>获取用于确定在状态栏和工具提示的文本修饰用于一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>文本修饰的集合。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontTextDecorationsKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontTextDecorations" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeight">
      <summary>获取用于确定在状态栏和工具提示文本的字体权重用于一 nonminimized 窗口的非工作区的指标。 </summary>
      <returns>字体权重。</returns>
    </member>
    <member name="P:System.Windows.SystemFonts.StatusFontWeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemFonts.StatusFontWeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="T:System.Windows.SystemParameters">
      <summary>包含可用于查询系统设置的属性。 </summary>
    </member>
    <member name="P:System.Windows.SystemParameters.Border">
      <summary>获取用于确定窗口的大小调整边框的宽度的边框倍数因子。 </summary>
      <returns>一个倍数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.Border" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidth">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的边框宽度的指标。 </summary>
      <returns>边框宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.BorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.BorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeight">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的标题高度的指标。 </summary>
      <returns>标题高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CaptionHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidth">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的声明宽度的指标。 </summary>
      <returns>声明宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaptionWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CaptionWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidth">
      <summary>获取插入符号的宽度，以像素，用于编辑控件。 </summary>
      <returns>插入符号的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CaretWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CaretWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimation">
      <summary>获取一个工作区动画菜单淡出启用。</summary>
      <returns>布尔值; true ，如果工作区动画启用，否则 错误 。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ClientAreaAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ClientAreaAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimation">
      <summary>获取一个组合框滑动打开是否启用该值指示是否启用。 </summary>
      <returns>启用true ;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ComboBoxAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimation">
      <summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 属性系统值组合框中。 </summary>
      <returns>弹出动画值。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeight">
      <summary>获取高度，均以像素，光标。 </summary>
      <returns>光标高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CursorHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadow">
      <summary>获取指示光标是否的值有阴影在内容周围。 </summary>
      <returns>true ，如果隐藏启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorShadowKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CursorShadow" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidth">
      <summary>获取宽度，以像素，光标。 </summary>
      <returns>光标宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.CursorWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.CursorWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindows">
      <summary>获取指示拖动完整的窗口是否为值指示是否启用。 </summary>
      <returns>true ，如果将完整的 windows 启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DragFullWindowsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.DragFullWindows" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadow">
      <summary>获取一个投影效果是否该值指示是否启用。 </summary>
      <returns>true ，如果投影效果启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.DropShadowKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.DropShadow" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight">
      <summary>在窗口周围上帧的水平边框的高度。 </summary>
      <returns>边框高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth">
      <summary>在窗口周围上帧的竖框线的宽度。 </summary>
      <returns>边框宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenu">
      <summary>获取指示本机菜单淡出显示为平面菜单。  </summary>
      <returns>true ，如果平面菜单外观设置;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FlatMenuKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FlatMenu" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeight">
      <summary>获取高度，均以像素，焦点矩形的上限和下边缘。  </summary>
      <returns>边缘高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidth">
      <summary>获取宽度，以像素，焦点矩形的左右边缘。  </summary>
      <returns>边缘宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight">
      <summary>获取焦点矩形的上限和下边缘的高度。  </summary>
      <returns>边缘高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidth">
      <summary>获取焦点矩形的左右边缘的宽度。  </summary>
      <returns>边缘宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FocusVisualStyleKey">
      <summary>获取 FocusVisualStyle 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCount">
      <summary>，当拒绝前景开关请求时，获取次数设置的前台窗口闪烁任务栏按钮。</summary>
      <returns>闪烁次数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ForegroundFlashCountKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ForegroundFlashCount" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeight">
      <summary>获取高度，均以像素，则 " 全屏 " 窗口的工作区在主监视器。  </summary>
      <returns>工作区的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidth">
      <summary>获取宽度，以像素，则 " 全屏 " 窗口的工作区在主监视器。  </summary>
      <returns>工作区的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptions">
      <summary>获取一个窗口标题栏的渐变效果是否该值指示是否启用。 </summary>
      <returns>true ，如果渐变效果会启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.GradientCaptionsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.GradientCaptions" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
      <summary>获取有关高对比度辅助功能的信息。 </summary>
      <returns>true ，如果 HIGHCONTRASTON 选项;否则，false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrastKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HighContrast" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth">
      <summary>获取宽度，以像素为单位，在水平滚动条的箭头位图。 </summary>
      <returns>箭头位图的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeight">
      <summary>获取水平滚动条的高度，均以像素。 </summary>
      <returns>滚动条的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth">
      <summary>获取宽度，以像素为单位，在水平滚动条的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 。 </summary>
      <returns>滚动块的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTracking">
      <summary>获取指示快捷跟踪用户界面元素，如菜单栏上的菜单名，则该值指示是否启用。 </summary>
      <returns>true ，如果快捷启用跟踪功能;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.HotTrackingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.HotTracking" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeight">
      <summary>获取大图标将与网格的高度。 </summary>
      <returns>网格高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconGridHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidth">
      <summary>获取大图标将与网格的宽度。 </summary>
      <returns>网格宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconGridWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconGridWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeight">
      <summary>获取图标的默认高度。 </summary>
      <returns>图标高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacing">
      <summary>获取宽度，以像素，图标单元格。该系统使用此矩形在大图标视图中图标。</summary>
      <returns>图标单元格的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconHorizontalSpacingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconHorizontalSpacing" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrap">
      <summary>获取一个图标标题自动该值指示是否启用。 </summary>
      <returns>true ，如果图标标题启用;否则 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconTitleWrapKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconTitleWrap" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacing">
      <summary>获取高度，均以像素，图标单元格。该系统使用此矩形在大图标视图中图标。</summary>
      <returns>图标单元格的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconVerticalSpacingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconVerticalSpacing" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidth">
      <summary>获取图标的默认宽度。 </summary>
      <returns>图标宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IconWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IconWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsGlassEnabled">
      <summary>获取一个值是否使用玻璃窗帧。</summary>
      <returns>true ，如果使用玻璃窗帧;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabled">
      <summary>获取一个值该系统是否可立即在 Unicode 应用程序的基于 Unicode 的 输入法编辑器 (IME) 。  </summary>
      <returns>true ，如果和管理程序/输入法编辑器功能启用;否则， false。 </returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsImmEnabledKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsImmEnabled" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenter">
      <summary>获取一个值当前操作系统是否 Microsoft Windows XP Media Center edition。 </summary>
      <returns>true ，如果当前操作系统是 Windows XP Media Center edition;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMediaCenterKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMediaCenter" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAligned">
      <summary>获取一个值下拉菜单是否右对齐与相应的菜单项。 </summary>
      <returns>true ，如果下拉菜单右对齐;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMenuDropRightAlignedKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabled">
      <summary>获取一个值系统是否为希伯来语和阿拉伯语语言启用。 </summary>
      <returns>true ，如果系统为希伯来语和阿拉伯语语言启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMiddleEastEnabledKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMiddleEastEnabled" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresent">
      <summary>获取一个值是否安装中。 </summary>
      <returns>true ，如果安装中;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMousePresentKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMousePresent" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresent">
      <summary>获取一个值则安装的鼠标是否具有垂直滚轮。 </summary>
      <returns>true ，如果该安装的中具有垂直滚轮;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsMouseWheelPresentKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsMouseWheelPresent" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindows">
      <summary>获取一个值是否安装计算扩展的 pen Microsoft Windows 。 </summary>
      <returns>true ，如果安装计算扩展的笔;否则， false。 </returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsPenWindowsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsPenWindows" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlled">
      <summary>获取一个值当前会话是否是远程的。 </summary>
      <returns>true ，如果当前会话是远程的;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemotelyControlledKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsRemotelyControlled" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSession">
      <summary>获取一个值调用过程是否与终端服务客户端会话。 </summary>
      <returns>true ，如果调用处理与终端服务客户端会话; false ，如果调用处理与终端服务器控制台会话。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsRemoteSessionKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsRemoteSession" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachine">
      <summary>获取一个值计算机是否具有低端的 (较慢) 处理器。 </summary>
      <returns>true ，如果计算机有一个低端的 (较慢) 处理器;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsSlowMachineKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsSlowMachine" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPC">
      <summary>获取一个值当前操作系统是否 Microsoft Windows XP Tablet PC 编辑。 </summary>
      <returns>true ，如果当前操作系统是 Windows XP Tablet PC 编辑;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.IsTabletPCKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.IsTabletPC" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeight">
      <summary>获取一个高度，均以像素，汉字窗口底部的系统的屏幕使用双字节字符的值。  </summary>
      <returns>窗口高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KanjiWindowHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KanjiWindowHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCues">
      <summary>获取一个菜单访问键是否的值始终带有下划线。 </summary>
      <returns>true ，如果菜单访问键总是带有下划线; false ，如果它们加下划线，仅当键盘激活该菜单。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardCuesKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardCues" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelay">
      <summary>将收到键盘重复延迟，范围内的值从 0 (大约 250 毫秒延迟) 传递 3 (大约 1 秒延迟)。 </summary>
      <returns>键盘重复延迟设置。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardDelayKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreference">
      <summary>获取指示用户是否依赖于键盘而不是鼠标，因此，用户是否的值希望应用程序显示通常隐藏的键盘界面。 </summary>
      <returns>true ，如果用户依赖键盘;否则，false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardPreferenceKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardPreference" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeed">
      <summary>将收到键盘重复速度，范围内的值从 0 (大约 2.5 每秒) 传递 31 (大约 30 每秒)。 </summary>
      <returns>键盘重复速度设置。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.KeyboardSpeedKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrolling">
      <summary>获取指示平滑滚动是否启用的值列表框启用。 </summary>
      <returns>true ，如果平滑滚动效果启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ListBoxSmoothScrollingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight">
      <summary>获取一个高度，均以像素，在主监视器的最大化的顶级窗口的值。  </summary>
      <returns>窗口高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth">
      <summary>获取指示宽度，以像素为单位，在主监视器的最大化的顶级窗口的值。  </summary>
      <returns>窗口宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeight">
      <summary>获取指示最大高度，均以像素，窗口的标题和大小调整边框的值。  </summary>
      <returns>最大窗口高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidth">
      <summary>获取指示最大的宽度，以像素，窗口的标题和大小调整边框的值。  </summary>
      <returns>最大窗口宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimation">
      <summary>获取一个菜单动画菜单淡出启用。 </summary>
      <returns>true ，如果菜单动画启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeight">
      <summary>获取一个高度，均以像素，单行菜单栏的值。  </summary>
      <returns>菜单栏的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuBarHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuBarHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeight">
      <summary>获取一个高度，均以像素，菜单栏按钮的值。  </summary>
      <returns>菜单栏按钮高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidth">
      <summary>获取指示宽度，以像素，菜单栏按钮的值。  </summary>
      <returns>菜单栏按钮的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeight">
      <summary>获取一个高度，均以像素，默认菜单选中标记位图的值。  </summary>
      <returns>位图的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuCheckmarkHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidth">
      <summary>获取指示宽度，以像素，默认菜单选中标记位图的值。  </summary>
      <returns>位图的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuCheckmarkWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuCheckmarkWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignment">
      <summary>获取一个弹出菜单淡出是左对齐或右对齐，相对于对应的菜单项。 </summary>
      <returns>true ，如果左对齐;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuDropAlignmentKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFade">
      <summary>获取一个菜单淡出动画? 是否该值指示是否启用。 </summary>
      <returns>true ，当淡出动画启用;?否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuFadeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuFade" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeight">
      <summary>获取用于确定菜单的高度的指标。 </summary>
      <returns>菜单高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimation">
      <summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 属性系统值菜单上的。 </summary>
      <returns>弹出动画属性。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuPopupAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuPopupAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelay">
      <summary>在毫秒，获取时，系统会在显示快捷菜单之前等待，当鼠标光标位于子菜单项时。  </summary>
      <returns>延时。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuShowDelayKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuShowDelay" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidth">
      <summary>获取用于确定菜单的宽度的指标。 </summary>
      <returns>菜单的宽度，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MenuWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MenuWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimation">
      <summary>获取动画效果与用户操作。 </summary>
      <returns>true ，如果最小化窗口动画功能启用;否则，false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizeAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizeAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeight">
      <summary>获取一个高度，均以像素，最小化窗口的一个网格单元格的值。  </summary>
      <returns>一个网格单元格的高度最小化窗口的。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedGridHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidth">
      <summary>获取指示宽度，以像素，最小化窗口的一个网格单元格的值。  </summary>
      <returns>一个网格单元格的宽度最小化窗口的。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedGridWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedGridWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeight">
      <summary>获取一个高度，均以像素，最小化窗口的值。  </summary>
      <returns>最小化窗口的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedWindowHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidth">
      <summary>获取指示宽度，以像素，最小化窗口的值。  </summary>
      <returns>最小化窗口的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimizedWindowWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimizedWindowWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumHorizontalDragDistance">
      <summary>，在拖动操作开始前，获取拖动圆角矩形的宽度点允许鼠标指针的有限移动。  </summary>
      <returns>矩形的宽度，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumVerticalDragDistance">
      <summary>，在拖动操作开始前，获取拖动圆角矩形的高度点允许鼠标指针的有限移动。  </summary>
      <returns>矩形的高度，均以像素。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeight">
      <summary>获取一个最小高度，均以像素，窗口的值。  </summary>
      <returns>窗口的最小高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeight">
      <summary>获取一个窗口的最小跟踪的高度的值，以像素为单位。   </summary>
      <returns>窗口的 minimun 跟踪的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidth">
      <summary>获取一个窗口的最小履带宽度的值，以像素为单位。   </summary>
      <returns>窗口的最小履带宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidth">
      <summary>获取一个最小宽度，以像素为单位，窗口的值。  </summary>
      <returns>窗口的最小宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MinimumWindowWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MinimumWindowWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeight">
      <summary>获取高度，均以像素，鼠标指针必须在该矩形保持生成鼠标悬停事件。 </summary>
      <returns>使用鼠标悬停事件的矩形的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MouseHoverHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTime">
      <summary>在毫秒获取时，，鼠标指针悬停矩形必须对生成鼠标悬停事件。  </summary>
      <returns>时间，以毫秒为单位)，鼠标必须在生成悬停矩形鼠标悬停事件。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverTimeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidth">
      <summary>获取宽度，以像素为单位)，鼠标指针必须在该矩形保持生成鼠标悬停事件。  </summary>
      <returns>使用鼠标悬停事件的矩形的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.MouseHoverWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.MouseHoverWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.NavigationChromeStyleKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatus">
      <summary>获取表示系统功能是否联机，或者的值系统电源未知。</summary>
      <returns>枚举中的值。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PowerLineStatusKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.PowerLineStatus" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。</summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeight">
      <summary>获取一个屏幕高度，均以像素，主要监视器的值。   </summary>
      <returns>屏幕的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.PrimaryScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidth">
      <summary>获取一个屏幕宽度，以像素，主要监视器的值。   </summary>
      <returns>屏幕的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.PrimaryScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.PrimaryScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight">
      <summary>获取在窗口的外围指示高度值 (粗细，以像素为单位)，级别的大小调整边框的大小进行调整。   </summary>
      <returns>边框的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth">
      <summary>获取在窗口的外围指示的宽度值 (粗细，以像素为单位)，垂直大小调整边框的大小进行调整。   </summary>
      <returns>边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeight">
      <summary>获取用于确定一 nonminimized 窗口的非工作区滚动高度的指标。 </summary>
      <returns>滚动高度，均以像素。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ScrollHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidth">
      <summary>获取用于确定一 nonminimized 窗口的非工作区的滚动宽度的指标。 </summary>
      <returns>滚动宽度，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ScrollWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ScrollWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFade">
      <summary>获取指示选择淡出? 是否启用该值指示是否启用。 </summary>
      <returns>true ，如果淡出效果启用;?否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SelectionFadeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SelectionFade" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSounds">
      <summary>获取一个值用户是否需要信息以可视布局。 </summary>
      <returns>true ，如果用户需要一个应用程序视觉上存在该信息通常存在仅供参考。能够听到窗体的位置;否则 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ShowSoundsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ShowSounds" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeight">
      <summary>获取用于确定一 nonminimized 窗口的非工作区小的标题高度的指标。 </summary>
      <returns>标题高度，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallCaptionHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidth">
      <summary>获取用于确定一 nonminimized 窗口的非工作区小的标题宽度的指标。 </summary>
      <returns>声明宽度，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallCaptionWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallCaptionWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeight">
      <summary>获取一个建议的高度，均以像素，一个小图标的值。 </summary>
      <returns>图标高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallIconHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidth">
      <summary>获取一个建议的宽度，以像素，一个小图标的值。 </summary>
      <returns>图标的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallIconWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallIconWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight">
      <summary>获取一个高度，均以像素，小的标题按钮的值。  </summary>
      <returns>声明按钮高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth">
      <summary>获取指示宽度，以像素，小的标题按钮的值。  </summary>
      <returns>声明按钮的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButton">
      <summary>获取指示转至默认按钮是否该值指示是否启用。如果启用，鼠标光标自动移动到对话框的默认按钮，例如 好 或 适用。</summary>
      <returns>true ，如果启用功能;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SnapToDefaultButtonKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SnapToDefaultButton" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="E:System.Windows.SystemParameters.StaticPropertyChanged">
      <summary>，在一个属性更改，发生。</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTracking">
      <summary>获取指示快捷跟踪触笔是否该值指示是否启用。  </summary>
      <returns>true ，如果快捷跟踪触笔启用;否则 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.StylusHotTrackingKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.StylusHotTracking" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtons">
      <summary>获取一个值和鼠标按钮的功能是否交换。  </summary>
      <returns>true ，如果左右鼠标按钮的功能交换;否则 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.SwapButtonsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.SwapButtons" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight">
      <summary>获取一个高度，均以像素， 三维 边框的值。   </summary>
      <returns>边框的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidth">
      <summary>获取指示宽度，以像素， 三维 边框的值。   </summary>
      <returns>边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight">
      <summary>获取一个高度，均以像素，一个水平窗口边框的值。 </summary>
      <returns>边框的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidth">
      <summary>获取指示宽度，以像素，一个垂直窗口边框的值。 </summary>
      <returns>边框的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimation">
      <summary>获取一 <see cref="T:System.Windows.Controls.ToolTip" /> 动画是否该值指示是否启用。  </summary>
      <returns>true ，如果 tooltip 动画启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ToolTipAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFade">
      <summary>获取指示 tooltip 动画淡出使用一个淡入? 效果或一个幻灯片效果。  </summary>
      <returns>true ，如果使用淡出效果;? false ，如果使用幻灯片效果。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipFadeKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ToolTipFade" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimation">
      <summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 属性系统值的工具提示。 </summary>
      <returns>弹出动画属性的系统值。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.ToolTipPopupAnimationKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.ToolTipPopupAnimation" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffects">
      <summary>获取一个值所有 用户界面 (UI) 影响是否启用。   </summary>
      <returns>true ，如果所有 UI 效果启用; false ，如果已禁用。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UIEffectsKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.UIEffects" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeColor">
      <summary>获取颜色主题名称。</summary>
      <returns>颜色主题名称。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.UxThemeName">
      <summary>获取主题名称。</summary>
      <returns>主题名称。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight">
      <summary>获取一个高度，均以像素，在垂直滚动条的箭头位图的值。  </summary>
      <returns>位图的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight">
      <summary>获取一个高度，均以像素，在垂直滚动条上的滚动块的值。  </summary>
      <returns>滚动块的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidth">
      <summary>获取指示宽度，以像素，垂直滚动条的值。  </summary>
      <returns>滚动条的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VerticalScrollBarWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VerticalScrollBarWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeight">
      <summary>获取一个高度，均以像素，虚拟屏的值。   </summary>
      <returns>虚拟屏上的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeft">
      <summary>获取一个虚拟屏上的左侧的坐标的值。   </summary>
      <returns>一个屏幕坐标，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenLeftKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenLeft" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTop">
      <summary>获取一个虚拟屏的上限坐标的值。 </summary>
      <returns>一个屏幕坐标，以像素为单位。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenTopKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenTop" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidth">
      <summary>获取指示宽度，以像素，虚拟屏的值。   </summary>
      <returns>虚拟屏上的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.VirtualScreenWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.VirtualScreenWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLines">
      <summary>获取指示的行数移动的值鼠标轮时旋转。 </summary>
      <returns>行数。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLinesKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WheelScrollLines" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeight">
      <summary>获取在窗口的标题栏指示高度，均以像素，一个按钮的值。  </summary>
      <returns>声明按钮高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidth">
      <summary>获取在窗口的标题栏指示宽度，以像素，一个按钮的值。  </summary>
      <returns>声明按钮的宽度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidthKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeight">
      <summary>获取一个高度，均以像素，声明区域的值。  </summary>
      <returns>声明区域的高度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCaptionHeightKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WindowCaptionHeight" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowCornerRadius">
      <summary>获取角的半径窗口中。</summary>
      <returns>窗口的角舍入的程度。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassBrush">
      <summary>获取绘制玻璃窗帧的画笔。</summary>
      <returns>绘制玻璃窗帧的画笔。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowGlassColor">
      <summary>获取用于绘制玻璃窗帧的颜色。</summary>
      <returns>用于绘制玻璃窗帧的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowNonClientFrameThickness">
      <summary>获取窗口的非工作区的大小。</summary>
      <returns>窗口的非工作区的大小，在与设备无关的单元 (1/96th 一英寸)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WindowResizeBorderThickness">
      <summary>在窗口周围获取该调整大小的边框的大小。</summary>
      <returns>调整边框的大小在窗口周围的，在与设备无关的单元 (1/96th 一英寸)。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkArea">
      <summary>获取工作区域的大小在主监视器的。 </summary>
      <returns>接收工作区域坐标的 RECT 结构，是以虚拟屏协调。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WorkAreaKey">
      <summary>获取 <see cref="P:System.Windows.SystemParameters.WorkArea" /> 属性的 <see cref="T:System.Windows.ResourceKey" /> 。 </summary>
      <returns>资源键。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
      <summary>描述 <see cref="T:System.Windows.TemplateBindingExtension" />的运行时实例。</summary>
    </member>
    <member name="P:System.Windows.TemplateBindingExpression.TemplateBindingExtension">
      <summary>获取此表达式实例 <see cref="T:System.Windows.TemplateBindingExtension" /> 对象。</summary>
      <returns>此表达式实例模板绑定扩展。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpressionConverter">
      <summary>在序列化时使用从 <see cref="T:System.Windows.TemplateBindingExpression" /> 实例的标记扩展的类型转换器。 </summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateBindingExpressionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换为指定类型的对象，则使用指定的上下文，。 </summary>
      <returns>true ，如果该转换器可以执行请求的转换;否则， false。<see cref="T:System.Windows.Markup.MarkupExtension" /> 仅 <paramref name="destinationType" /> 返回 true。</returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。 </param>
      <param name="destinationType">转换输出的所需类型。</param>
    </member>
    <member name="M:System.Windows.TemplateBindingExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换为 <see cref="T:System.Windows.Markup.MarkupExtension" /> 类型的特定值对象。</summary>
      <returns>转换后的值。 </returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。 </param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 对象。如果 null 引用传递，当前区域性假定。</param>
      <param name="value">转换后的值。</param>
      <param name="destinationType">转换的所需类型。</param>
    </member>
    <member name="T:System.Windows.TemplateBindingExtension">
      <summary>实现支持在属性的值在模板和其他一些显示的属性中的值之间的绑定可以在模板化控件的标记扩展。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateBindingExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.#ctor(System.Windows.DependencyProperty)">
      <summary>初始化作为绑定源 <see cref="T:System.Windows.TemplateBindingExtension" /> 类的新实例使用指定的 依赖项属性 的。</summary>
      <param name="property">绑定的属性的标识符。</param>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Converter">
      <summary>获取或设置说明绑定之间的源和目标的转换器。</summary>
      <returns>转换器实现。此值默认为 null 且通常提供作为绑定的可选参数。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.ConverterParameter">
      <summary>获取或设置参数传递给转换器。</summary>
      <returns>为引用了的参数由转换器实现。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.TemplateBindingExtension.Property">
      <summary>获取或设置绑定的属性。 </summary>
      <returns>绑定的依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.TemplateBindingExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回应设置为在目标对象的属性的值此标记扩展的对象。对于 <see cref="T:System.Windows.TemplateBindingExtension" />，这是一个支持绑定的表达式 (<see cref="T:System.Windows.TemplateBindingExpression" />)。</summary>
      <returns>支持绑定的表达式。</returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。将是此实现的 null 。</param>
    </member>
    <member name="T:System.Windows.TemplateBindingExtensionConverter">
      <summary>在序列化时使用从实例的 <see cref="T:System.Windows.TemplateBindingExtension" /> 的类型转换器。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以转换为指定类型的对象，则使用指定的上下文，。 </summary>
      <returns>true ，如果该转换器可以执行请求的转换;否则， false。<see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> 仅 <paramref name="destinationType" /> 将返回 true。</returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。 </param>
      <param name="destinationType">转换输出的所需类型。</param>
    </member>
    <member name="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换为指定类型的特定值对象。 </summary>
      <returns>转换后的值。 </returns>
      <param name="context">提供一个布局上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。 </param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 对象。如果 null 引用传递，当前区域性假定。</param>
      <param name="value">转换后的值。</param>
      <param name="destinationType">转换的所需类型。</param>
    </member>
    <member name="T:System.Windows.TemplateContent">
      <summary>实现录制和播放逻辑，模板在与 XAML 读取器和编写器交互时将使用该逻辑推迟内容。</summary>
    </member>
    <member name="T:System.Windows.TemplateContentLoader">
      <summary>实现 <see cref="T:System.Xaml.XamlDeferringLoader" /> 以延迟了在 WPF XAML 的模板中定义 XAML 内容以填充。</summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateContentLoader" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>加载 XAML 内容在一个延迟模式下，基于一次 <see cref="T:System.Xaml.XamlReader" /> 和一些需的服务从服务提供程序。</summary>
      <returns>输入 <see cref="T:System.Xaml.XamlReader" />的节点流的根对象。具体而言，这是 <see cref="T:System.Windows.TemplateContent" /> 实例。</returns>
      <param name="xamlReader">然后返回的启动的读取器调用 <see cref="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)" />。</param>
      <param name="serviceProvider">所需服务的服务提供程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlReader" /> 或 <paramref name="serviceProvider" /> 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="serviceProvider" /> 不提供所需服务。</exception>
    </member>
    <member name="M:System.Windows.TemplateContentLoader.Save(System.Object,System.IServiceProvider)">
      <summary>不要使用;始终引发异常。请参见 " 备注 "。</summary>
      <returns>始终引发异常。请参见 " 备注 "。</returns>
      <param name="value">所做的输入值为延迟加载。</param>
      <param name="serviceProvider">所需服务的服务提供程序。</param>
      <exception cref="T:System.NotSupportedException">在所有情况下引发。</exception>
    </member>
    <member name="T:System.Windows.TemplateKey">
      <summary>在用作资源键用于数据模板，允许数据模板参与查找过程。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType)">
      <summary>初始化 <see cref="T:System.Windows.TemplateKey" /> 类的新实例使用指定的模板类型的。此构造函数保护。</summary>
      <param name="templateType">指定此模板类型的 <see cref="T:System.Windows.TemplateKey.TemplateType" /> 值。</param>
    </member>
    <member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.TemplateKey" /> 类的新实例使用指定的参数。此构造函数保护。</summary>
      <param name="templateType">指定此模板类型的 <see cref="T:System.Windows.TemplateKey.TemplateType" /> 值。</param>
      <param name="dataType">此模板模型的类型。</param>
    </member>
    <member name="P:System.Windows.TemplateKey.Assembly">
      <summary>获取或设置包含模板定义的程序集。</summary>
      <returns>模板中定义的程序集。</returns>
    </member>
    <member name="P:System.Windows.TemplateKey.DataType">
      <summary>获取或设置模板模型的类型。 </summary>
      <returns>
        <see cref="T:System.Type" /> 指定对象的类型的模板来显示或用于 XML 数据指定 XML 标记名称模板用于显示的字符串。</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.Equals(System.Object)">
      <summary>返回一个值特定实例是否与 <see cref="T:System.Windows.TemplateKey" />此实例相同。</summary>
      <returns>true ，如果两个实例相同的;否则， false。</returns>
      <param name="o">比较的对象用于相等。</param>
    </member>
    <member name="M:System.Windows.TemplateKey.GetHashCode">
      <summary>返回 <see cref="T:System.Windows.TemplateKey" />此实例的 哈希代码 。</summary>
      <returns>
        <see cref="T:System.Windows.TemplateKey" />此实例的 哈希代码 。</returns>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.TemplateKey.ToString">
      <summary>返回此 <see cref="T:System.Windows.TemplateKey" />的字符串表示形式。</summary>
      <returns>此 <see cref="T:System.Windows.TemplateKey" />的字符串表示形式。</returns>
    </member>
    <member name="T:System.Windows.TemplateKey.TemplateType">
      <summary>描述使用 <see cref="T:System.Windows.TemplateKey" />模板具有不同的类型。</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.DataTemplate">
      <summary>是 <see cref="T:System.Windows.DataTemplate" />的类型。</summary>
    </member>
    <member name="F:System.Windows.TemplateKey.TemplateType.TableTemplate">
      <summary>是 TableTemplate的类型。这是过时。</summary>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
      <summary>表示应用于类定义标识命名部件的类型为模板使用的属性。</summary>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplatePartAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
      <summary>获取或设置该部件的预定义的名称。</summary>
      <returns>部件的预定义的名称。</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
      <summary>获取或设置此特性标识命名部件的类型。</summary>
      <returns>此特性标识命名部件的类型。</returns>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
      <summary>指定控件可能处于特定状态，并 <see cref="T:System.Windows.VisualState" /> 在控件的 <see cref="T:System.Windows.Controls.ControlTemplate" />项目。</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TemplateVisualStateAttribute" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <summary>获取或设置组的名称为状态属于。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> 的名称并将状态所属。</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
      <summary>获取或设置一条名称，控件可以。</summary>
      <returns>指出的名称，控件可以。</returns>
    </member>
    <member name="T:System.Windows.ThemeDictionaryExtension">
      <summary>实现使应用程序作者自定义基于当前系统主题的控件样式的标记扩展。</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ThemeDictionaryExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.#ctor(System.String)">
      <summary>使用指定程序集名称， <see cref="T:System.Windows.ThemeDictionaryExtension" /> 初始化类的新实例，。</summary>
      <param name="assemblyName">程序集名称的字符串。</param>
    </member>
    <member name="P:System.Windows.ThemeDictionaryExtension.AssemblyName">
      <summary>获取或设置字典应用程序特定主题的特定命名约定的字符串标识。 </summary>
      <returns>程序集名称的字符串。</returns>
    </member>
    <member name="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)">
      <summary>返回在属性应设置此扩展的应用对象。对于 <see cref="T:System.Windows.ThemeDictionaryExtension" />，这是一种特定主题字典扩展的 URI 值。</summary>
      <returns>设置的对象值在扩展应用于的属性。 </returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。此服务应为 <see cref="T:System.Windows.Markup.IXamlTypeResolver" />提供结果。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.ThemeDictionaryExtension.AssemblyName" /> 属性是 null。您必须将此值在构造时或在使用 <see cref="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)" /> 方法。- 或 -<paramref name="serviceProvide" />r 是 null 或为 <see cref="T:System.Windows.Markup.IXamlTypeResolver" />不提供服务。- 或 -<paramref name="serviceProvider" /> 指定不匹配 <see cref="P:System.Windows.ResourceDictionary.Source" />的对象类型。</exception>
    </member>
    <member name="T:System.Windows.ThemeInfoAttribute">
      <summary>指定主题字典为程序集存储区的位置。 </summary>
    </member>
    <member name="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
      <summary>初始化 <see cref="T:System.Windows.ThemeInfoAttribute" /> 类的新实例并创建定义主题字典位置程序集中的属性。</summary>
      <param name="themeDictionaryLocation">特定于主题的资源的位置。</param>
      <param name="genericDictionaryLocation">不特定于主题的位置，泛型，资源。</param>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
      <summary>位置泛型，而不是特定于主题的资源，。 </summary>
      <returns>泛型 <see cref="T:System.Windows.ResourceDictionary" />的 <see cref="T:System.Windows.ResourceDictionaryLocation" /> 。</returns>
    </member>
    <member name="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
      <summary>特定于主题的资源的位置。 </summary>
      <returns>特定于主题的 <see cref="T:System.Windows.ResourceDictionary" />的 <see cref="T:System.Windows.ResourceDictionaryLocation" /> 。</returns>
    </member>
    <member name="T:System.Windows.Thickness">
      <summary>在矩形周围描述帧的粗细。四个 <see cref="T:System.Double" /> 值描述 <see cref="P:System.Windows.Thickness.Left" />、 <see cref="P:System.Windows.Thickness.Top" />、 <see cref="P:System.Windows.Thickness.Right" />和矩形的 <see cref="P:System.Windows.Thickness.Bottom" /> 端，分别。</summary>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
      <summary>初始化具有在每一端的指定统一长度 <see cref="T:System.Windows.Thickness" /> 结构的新实例。 </summary>
      <param name="uniformLength">统一长度时应用于边框的所有四个边。</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>初始化具有特定长度 <see cref="T:System.Windows.Thickness" /> 结构的新实例 (已提供作为 <see cref="T:System.Double" />) 将应用于该矩形的每一端。 </summary>
      <param name="left">矩形左边的粗细。</param>
      <param name="top">矩形的左上角的粗细。</param>
      <param name="right">矩形的右侧的粗细</param>
      <param name="bottom">矩形的下半部分端的粗细。</param>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
      <summary>获取或设置宽度，以像素，边框的下半部分端。</summary>
      <returns>表示宽度，以像素，边框的下半部分端 <see cref="T:System.Windows.Thickness" />此实例的 <see cref="T:System.Double" /> 。像素等于为 1/96 一英寸。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
      <summary>与相等的另一 <see cref="T:System.Object" /> 比较此 <see cref="T:System.Windows.Thickness" /> 结构。</summary>
      <returns>true ，如果两个对象相等;否则， false。</returns>
      <param name="obj">比较的对象。</param>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <summary>与相等的另一 <see cref="T:System.Windows.Thickness" /> 结构比较此 <see cref="T:System.Windows.Thickness" /> 结构。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Thickness" /> 两个实例是否相等;否则， false。</returns>
      <param name="thickness">比较的 <see cref="T:System.Windows.Thickness" /> 实例用于相等。</param>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
      <summary>返回结构的 哈希代码 。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" />此实例的 哈希代码 。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
      <summary>获取或设置宽度，以像素，边框的左侧。 </summary>
      <returns>表示宽度，以像素，边框的左侧 <see cref="T:System.Windows.Thickness" />此实例的 <see cref="T:System.Double" /> 。像素等于为 1/96 在一英寸。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>比较两 <see cref="T:System.Windows.Thickness" /> 结构的值相等的。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Thickness" /> 两个实例是否相等;否则， false。</returns>
      <param name="t1">比较的第一个结构。</param>
      <param name="t2">比较的另一结构。</param>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>比较不相等的两 <see cref="T:System.Windows.Thickness" /> 结构。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Thickness" /> 两个实例不相等;否则， false。</returns>
      <param name="t1">比较的第一个结构。</param>
      <param name="t2">比较的另一结构。</param>
    </member>
    <member name="P:System.Windows.Thickness.Right">
      <summary>获取或设置宽度，以像素，边框的右侧。 </summary>
      <returns>表示宽度，以像素，边框的右侧 <see cref="T:System.Windows.Thickness" />此实例的 <see cref="T:System.Double" /> 。像素等于为 1/96 一英寸。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
      <summary>获取或设置宽度，以像素，该边框的左上角。</summary>
      <returns>表示宽度，以像素，边框的左上角 <see cref="T:System.Windows.Thickness" />此实例的 <see cref="T:System.Double" /> 。像素等于为 1/96 一英寸。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
      <summary>返回 <see cref="T:System.Windows.Thickness" /> 结构的字符串表示形式。</summary>
      <returns>表示 <see cref="T:System.Windows.Thickness" /> 值的 <see cref="T:System.String" /> 。</returns>
    </member>
    <member name="T:System.Windows.ThicknessConverter">
      <summary>来回 <see cref="T:System.Windows.Thickness" />实例转换为其他类型的实例。</summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.ThicknessConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定类型转换器是否能创建 <see cref="T:System.Windows.Thickness" /> 实例从指定类型的。</summary>
      <returns>true ，如果类型转换器可以创建 <see cref="T:System.Windows.Thickness" /> 实例从指定类型的;否则， false。</returns>
      <param name="typeDescriptorContext">类型的上下文信息。</param>
      <param name="sourceType">该类型转换器为将计算的源类型。</param>
    </member>
    <member name="M:System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定类型转换器是否可以转换 <see cref="T:System.Windows.Thickness" /> 实例转换为不同的类型。 </summary>
      <returns>true ，如果类型转换器可以转换 <see cref="T:System.Windows.Thickness" /> 此实例转换为 <paramref name="destinationType" />;否则， false。</returns>
      <param name="typeDescriptorContext">类型的上下文信息。</param>
      <param name="destinationType">该类型转换器计算 <see cref="T:System.Windows.Thickness" /> 此实例转换的类型。</param>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试创建 <see cref="T:System.Windows.Thickness" /> 实例从指定的对象的。 </summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> 实例从转换的 <paramref name="source" />创建的。</returns>
      <param name="typeDescriptorContext">类型的上下文信息。</param>
      <param name="cultureInfo">转换的类型的 <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="source">
        <paramref name="source" />转换的<see cref="T:System.Object" /> 。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 对象是空引用 (在 Visual Basic 中Nothing )。</exception>
      <exception cref="T:System.ArgumentException">示例对象不是空引用并不是可转换为 <see cref="T:System.Windows.Thickness" />的有效类型。</exception>
    </member>
    <member name="M:System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将 <see cref="T:System.Windows.Thickness" /> 实例转换为指定的类型。 </summary>
      <returns>创建的类型，该类型转换器转换 <see cref="T:System.Windows.Thickness" />实例。</returns>
      <param name="typeDescriptorContext">类型的上下文信息。</param>
      <param name="cultureInfo">转换的类型的 <see cref="T:System.Globalization.CultureInfo" /> 。</param>
      <param name="value">转换的 <see cref="T:System.Windows.Thickness" /> 实例。</param>
      <param name="destinationType">类型 <see cref="T:System.Windows.Thickness" /> 此实例强制转换。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 对象不是空引用 (Nothing) 并不是画笔，或者 <paramref name="destinationType" /> 不是其中一个转换的有效类型。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 对象是空引用。</exception>
    </member>
    <member name="T:System.Windows.Trigger">
      <summary>表示应用属性值或有条件地执行操作的触发器。</summary>
    </member>
    <member name="M:System.Windows.Trigger.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Trigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Trigger.Property">
      <summary>获取或设置返回值与触发器的 <see cref="P:System.Windows.Trigger.Value" /> 属性比较的属性。此比较是引用相等性检查。</summary>
      <returns>返回元素的属性值 <see cref="T:System.Windows.DependencyProperty" /> 。默认值为 null。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Style" /> 不能包含引用 <see cref="T:System.Windows.Style" /> 属性的 <see cref="T:System.Windows.Trigger" /> 。</exception>
      <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Windows.Trigger" /> 正在使用后，就不能修改它。</exception>
    </member>
    <member name="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)">
      <summary>处理大小写的类型转换器。 <see cref="T:System.Windows.Trigger" /> 对象的属性的位置提供值。</summary>
      <param name="targetObject">对象该类型转换器将值的位置。</param>
      <param name="eventArgs">与类型转换器处理关系数据。</param>
    </member>
    <member name="P:System.Windows.Trigger.Setters">
      <summary>获取 <see cref="T:System.Windows.Setter" /> 对象的集合，描述属性值应用，当指定的满足条件时。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Trigger.SourceName">
      <summary>获取或设置对象的名称与将关联的 setter 应用的属性。</summary>
      <returns>默认属性是 null。如果此属性为 null，则 <see cref="P:System.Windows.Trigger.Property" /> 属性计算有关组件此样式或将模板 (带样式的父级或模板化的父元素)。</returns>
      <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Windows.Trigger" /> 正在使用后，就不能修改它。</exception>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>表示初始化开始的对象。</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>对象初始化的信号完成。</summary>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="P:System.Windows.Trigger.Value">
      <summary>获取或设置值与组件比较的属性值。此比较是引用相等性检查。</summary>
      <returns>默认值为 null。异常参见部分。</returns>
      <exception cref="T:System.ArgumentException">仅加载时 <see cref="T:System.Windows.Markup.MarkupExtension" />的支持。</exception>
      <exception cref="T:System.ArgumentException">表达式 (如绑定不受支持。</exception>
      <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Windows.Trigger" /> 正在使用后，就不能修改它。</exception>
    </member>
    <member name="T:System.Windows.TriggerAction">
      <summary>描述了为触发器执行。</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
      <summary>表示 <see cref="T:System.Windows.TriggerAction" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.TriggerActionCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor(System.Int32)">
      <summary>初始化具有指定的初始大小 <see cref="T:System.Windows.TriggerActionCollection" /> 类的实例。</summary>
      <param name="initialSize">集合的大小。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)">
      <summary>添加到集合。</summary>
      <param name="value">添加的 <see cref="T:System.Windows.TriggerAction" /> 对象。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Clear">
      <summary>从集合中移除所有项。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)">
      <summary>返回一个值集合是否包含指定的 <see cref="T:System.Windows.TriggerAction" /> 对象。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.TriggerAction" /> 对象在集合中找到;否则， false。</returns>
      <param name="value">位于的 <see cref="T:System.Windows.TriggerAction" /> 对象集合。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)">
      <summary>在从指定的索引并复制集合项到指定的数组。</summary>
      <param name="array">是项目目标从集合中复制的一维数组。数组必须使用从零开始的索引。</param>
      <param name="index">在首先复制的 <paramref name="array" /> 的从零开始的索引。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Count">
      <summary>获取集合中的项数</summary>
      <returns>集合包含项的数目。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.GetEnumerator">
      <summary>返回循环访问集合的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)">
      <summary>返回指定项的索引集合中的。</summary>
      <returns>
        <paramref name="value" /> 索引，如果 <see cref="T:System.Windows.TriggerAction" /> 对象在集合中找到;否则， -1。</returns>
      <param name="value">位于的 <see cref="T:System.Windows.TriggerAction" /> 对象集合。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)">
      <summary>插入指定的项添加到指定的索引的集合中。</summary>
      <param name="index">从零开始的索引必须插入的位置 <paramref name="value" /> 。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.TriggerAction" /> 对象添加到集合中。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.IsReadOnly">
      <summary>获取一个值集合是否为只读。</summary>
      <returns>true ，如果集合是只读的;否则， false。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引处的项。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Windows.TriggerAction" /> 对象。</returns>
      <param name="index">设置项目获取的从零开始的索引或。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)">
      <summary>从集合中移除指定的对象的第一个匹配项。</summary>
      <returns>true ，如果成功移除项;否则， false。，如果项目在 <see cref="T:System.Windows.TriggerActionCollection" />，未找到此方法也会返回错误。</returns>
      <param name="value">移除的 <see cref="T:System.Windows.TriggerAction" /> 对象从集合。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除位于指定索引处的项。</summary>
      <param name="index">移除项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="array">是项目目标从集合中复制的一维数组。数组必须使用从零开始的索引。</param>
      <param name="index">在首先复制的 <paramref name="array" /> 的从零开始的索引。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果对 <see cref="T:System.Collections.ICollection" /> 的访问同步 (线程安全);否则， false。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" />访问对象。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>新元素插入的位置。</returns>
      <param name="value">添加的 <see cref="T:System.Object" /> 到 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>，如果 <see cref="T:System.Object" /> 在 <see cref="T:System.Collections.IList" />，会出现则为 true;否则，错误。</returns>
      <param name="value">位于的 <see cref="T:System.Object" /><see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>
        <paramref name="value" /> 索引，如果找到在列表中;否则， -1。</returns>
      <param name="value">位于的 <see cref="T:System.Object" /><see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="index">
        <paramref name="value" /> 应插入的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Object" /> 到 <see cref="T:System.Collections.IList" />中。</param>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果 <see cref="T:System.Collections.IList" /> 具有固定大小;否则， false。</returns>
    </member>
    <member name="P:System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>位于指定索引处的对象。</returns>
      <param name="index">设置项目获取的从零开始的索引或。</param>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value">移除的 <see cref="T:System.Object" /> 从 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="T:System.Windows.TriggerBase">
      <summary>表示指定的一个条件值基类在 <see cref="T:System.Windows.Style" /> 对象中。 </summary>
    </member>
    <member name="P:System.Windows.TriggerBase.EnterActions">
      <summary>，在触发对象变为活动状态时，获取 <see cref="T:System.Windows.TriggerAction" /> 对象的集合适用。此属性不应用于 <see cref="T:System.Windows.EventTrigger" /> 类。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.TriggerBase.ExitActions">
      <summary>，在触发对象变为非活动状态时，获取 <see cref="T:System.Windows.TriggerAction" /> 对象的集合适用。此属性不应用于 <see cref="T:System.Windows.EventTrigger" /> 类。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.TriggerCollection">
      <summary>表示 <see cref="T:System.Windows.TriggerBase" /> 对象的集合。</summary>
    </member>
    <member name="P:System.Windows.TriggerCollection.IsSealed">
      <summary>获取一个值此集合是否为只读，并且不能更改。</summary>
      <returns>true ，如果此集合是只读的;否则， false。</returns>
    </member>
    <member name="T:System.Windows.ValueSource">
      <summary>报告从 <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />返回的信息。</summary>
    </member>
    <member name="P:System.Windows.ValueSource.BaseValueSource">
      <summary>获取 <see cref="T:System.Windows.BaseValueSource" /> 枚举的值，报告源提供依赖项属性系统与值。</summary>
      <returns>枚举的值。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.Equals(System.Object)">
      <summary>返回指示此是否 <see cref="T:System.Windows.ValueSource" /> 的值与指定的对象相等。</summary>
      <returns>true ，如果提供的对象与当前 <see cref="T:System.Windows.ValueSource" />等效，否则， false。</returns>
      <param name="o">对象和此 <see cref="T:System.Windows.ValueSource" /><see cref="T:System.Windows.ValueSource" /><see cref="T:System.Windows.ValueSource" />。</param>
    </member>
    <member name="M:System.Windows.ValueSource.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.ValueSource" />的 哈希代码 。</summary>
      <returns>32 位无符号整数哈希代码。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsAnimated">
      <summary>获取在其中声明的值属性是否进行动画处理。</summary>
      <returns>true ，如果属性进行动画处理;否则， false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCoerced">
      <summary>获取在其中声明的值此值是否由 <see cref="T:System.Windows.CoerceValueCallback" /> 实现适用于 依赖项属性。</summary>
      <returns>true ，如果该值由 <see cref="T:System.Windows.CoerceValueCallback" /> 实现适用于依赖项属性;否则， false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsCurrent">
      <summary>获取一个值是否将 <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> 方法设置。</summary>
      <returns>true ，如果该值为 <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> 方法设置;否则， false。</returns>
    </member>
    <member name="P:System.Windows.ValueSource.IsExpression">
      <summary>获取在其中声明的值此值是否由一个计算的表达式。这可能是 <see cref="T:System.Windows.Data.BindingExpression" /> 支持绑定的或内部表达式 (如支持 DynamicResource 标记扩展的功能。</summary>
      <returns>true ，如果该值来自已计算表达式;否则， false。</returns>
    </member>
    <member name="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>确定两 <see cref="T:System.Windows.ValueSource" /> 实例是否具有相同的值。</summary>
      <returns>true ，如果两 <see cref="T:System.Windows.ValueSource" /> 实例等效，否则， false。</returns>
      <param name="vs1">比较的第一 <see cref="T:System.Windows.ValueSource" /> 。</param>
      <param name="vs2">比较的第二 <see cref="T:System.Windows.ValueSource" /> 。</param>
    </member>
    <member name="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
      <summary>确定两 <see cref="T:System.Windows.ValueSource" /> 实例是否没有相同的值。</summary>
      <returns>true ，如果两 <see cref="T:System.Windows.ValueSource" /> 实例不等效，否则， false。</returns>
      <param name="vs1">比较的第一 <see cref="T:System.Windows.ValueSource" /> 。</param>
      <param name="vs2">比较的第二 <see cref="T:System.Windows.ValueSource" /> 。</param>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
      <summary>描述子元素如何在父的布局槽内垂直定位或拉伸。 </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
      <summary>子元素对齐父的布局槽的底部。 </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
      <summary>子元素对齐父的布局槽的中心。 </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
      <summary>填充父的布局槽的子元素拉伸。 </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
      <summary>子元素与父的布局槽的顶端对齐。 </summary>
    </member>
    <member name="T:System.Windows.VisualState">
      <summary>，在处于特定状态时，表示控件的可视化外观。</summary>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualState" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualState.Name">
      <summary>获取或设置 <see cref="T:System.Windows.VisualState" />的名称。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" />的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
      <summary>获取或设置用于定义控件的外观的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> ，当在 <see cref="T:System.Windows.VisualState" />表示状态时。 </summary>
      <returns>定义控件的外观的演示图板，当在 <see cref="T:System.Windows.VisualState" />表示的状态。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 和 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
      <summary>获取转换状态的组件。</summary>
      <returns>转换状态的组件，如果 <see cref="T:System.Windows.VisualStateGroup" /> 在 <see cref="T:System.Windows.Controls.ControlTemplate" />;否则， null。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <summary>获取元素转换为或转换状态。</summary>
      <returns>元素转换为或转换状态。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <summary>获取元素转换为或转换状态。</summary>
      <returns>元素转换为或转换状态。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.StateGroupsRoot">
      <summary>获取包含 <see cref="T:System.Windows.VisualStateManager" />的根元素。</summary>
      <returns>包含 <see cref="T:System.Windows.VisualStateManager" />的根元素。</returns>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
      <summary>包含用于从一种状态转为另一个的互斥的 <see cref="T:System.Windows.VisualState" /> 对象和 <see cref="T:System.Windows.VisualTransition" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualStateGroup" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
      <summary>获取当前应用于控件的 <see cref="T:System.Windows.VisualState" /> 。</summary>
      <returns>当前应用于控件的 <see cref="T:System.Windows.VisualState" /> 。</returns>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <summary>在与不同状态的控件转换之后发生。</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <summary>，当控件开始转换为另一种状态，发生。</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
      <summary>获取或设置 <see cref="T:System.Windows.VisualStateGroup" />的名称。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" />的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
      <summary>获取互斥的 <see cref="T:System.Windows.VisualState" /> 对象的集合。</summary>
      <returns>互斥的 <see cref="T:System.Windows.VisualState" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
      <summary>获取 <see cref="T:System.Windows.VisualTransition" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Windows.VisualTransition" /> 对象的集合。</returns>
    </member>
    <member name="T:System.Windows.VisualStateManager">
      <summary>管理状态和逻辑的转换在状态之间控件的。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualStateManager" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <summary>获取或设置 <see cref="T:System.Windows.VisualStateManager" /> 对象在控件的状态之间转换。 </summary>
      <returns>该可视状态的经理在控件的状态之间转换。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>标识 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <summary>获取一个 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</summary>
      <returns>该可视状态的经理在控件的状态之间转换。 </returns>
      <param name="obj">元素来获取 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性从更改为。</param>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <summary>获取一个 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加属性。</summary>
      <returns>与指定的对象 <see cref="T:System.Windows.VisualStateGroup" /> 对象的集合。</returns>
      <param name="obj">元素来获取 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加属性从更改为。</param>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>转换在两个状态之间的元素。使用此方法将由应用程序定义的转换到状态，而不是定义的由控件。</summary>
      <returns>true ，如果控件已成功过渡到新状态;否则， false。</returns>
      <param name="stateGroupsRoot">包含 <see cref="T:System.Windows.VisualStateManager" />的根元素。</param>
      <param name="stateName">转换到的状态。</param>
      <param name="useTransitions"> 用于转换的某 <see cref="T:System.Windows.VisualTransition" /> 对象的true 在状态之间;否则， false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> 是 null。- 或 -<paramref name="stateName" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)">
      <summary>转换在两个状态之间的控件。使用此方法以在具有 <see cref="T:System.Windows.Controls.ControlTemplate" />控件的转换到状态。</summary>
      <returns>true ，如果控件已成功过渡到新状态;否则， false。</returns>
      <param name="control">为转换的控制状态之间。 </param>
      <param name="stateName">转换到的状态。</param>
      <param name="useTransitions"> 用于转换的某 <see cref="T:System.Windows.VisualTransition" /> 对象的true 在状态之间;否则， false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 是 null。- 或 -<paramref name="stateName" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <summary>转换到状态之间的控件。</summary>
      <returns>true ，如果控件已成功过渡到新状态;否则， false。</returns>
      <param name="control">为转换的控制状态之间。 </param>
      <param name="stateGroupsRoot">包含 <see cref="T:System.Windows.VisualStateManager" />的根元素。</param>
      <param name="stateName">状态的名称为转换的。</param>
      <param name="group">
        <see cref="T:System.Windows.VisualStateGroup" /> 该状态所属。</param>
      <param name="state">状态的表示对转换的。</param>
      <param name="useTransitions"> 用于转换的某 <see cref="T:System.Windows.VisualTransition" /> 对象的true 在状态之间;否则， false。</param>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>引发可在指定的 <see cref="T:System.Windows.VisualStateGroup" /> 对象的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件。</summary>
      <param name="stateGroup">
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件发生的对象。</param>
      <param name="oldState">控件转换状态。</param>
      <param name="newState">控件转换状态。</param>
      <param name="control">转换状态的控件。</param>
      <param name="stateGroupsRoot">包含 <see cref="T:System.Windows.VisualStateManager" />的根元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> 是 null。- 或 -<paramref name="newState" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
      <summary>引发可在指定的 <see cref="T:System.Windows.VisualStateGroup" /> 对象的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件。</summary>
      <param name="stateGroup">
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件发生的对象。</param>
      <param name="oldState">控件转换状态。</param>
      <param name="newState">控件转换状态。</param>
      <param name="control">转换状态的控件。</param>
      <param name="stateGroupsRoot">包含 <see cref="T:System.Windows.VisualStateManager" />的根元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroupsRoot" /> 是 null。- 或 -<paramref name="newState" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <summary>将 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加属性。</summary>
      <param name="obj">设置属性的对象。</param>
      <param name="value">该可视状态的经理在控件的状态之间转换。</param>
    </member>
    <member name="P:System.Windows.VisualStateManager.VisualStateGroups">
      <summary>获取或设置 <see cref="T:System.Windows.VisualStateGroup" /> 对象的集合。 </summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> 对象的集合。 </returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.VisualStateGroupsProperty">
      <summary>标识 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.VisualTransition">
      <summary>表示从一种状态发生，当控件从状态转换到另一页时的可视行为。</summary>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.VisualTransition" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
      <summary>获取或设置 <see cref="T:System.Windows.VisualState" /> 的名称从转换。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" /> 的名称为转换的自。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
      <summary>获取或设置它采用从一种状态转为另一个时间。</summary>
      <returns>它采用从一种状态转为另一个时间。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <summary>获取或设置用于在状态之间转换的自定义数学公式。</summary>
      <returns>在状态之间转换的自定义数学公式。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
      <summary>获取或设置生成的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> ，则转换发生时。</summary>
      <returns>发生的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> ，则转换发生。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
      <summary>获取或设置 <see cref="T:System.Windows.VisualState" /> 的名称转换。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" /> 的名称为转换的。</returns>
    </member>
    <member name="T:System.Windows.Window">
      <summary>可以创建，配置，显示和管理生存期窗口和对话框。</summary>
    </member>
    <member name="M:System.Windows.Window.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Window" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Window.Activate">
      <summary>尝试以显示窗口和激活它。</summary>
      <returns>true ，如果成功激活的 <see cref="T:System.Windows.Window" /> ;否则， false。</returns>
    </member>
    <member name="E:System.Windows.Window.Activated">
      <summary>，当窗口成为前台窗口，发生。</summary>
    </member>
    <member name="P:System.Windows.Window.AllowsTransparency">
      <summary>获取或设置一个值窗口的工作区是否支持透明度。 </summary>
      <returns>true ，如果窗口支持透明度;否则， false。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.AllowsTransparency" /> ，在窗口中显示之后，更改。</exception>
      <exception cref="T:System.InvalidOperationException">除了 <see cref="F:System.Windows.WindowStyle.None" />外，还有任何操作的一个 <see cref="P:System.Windows.Window.WindowStyle" /> 值的窗口。</exception>
    </member>
    <member name="F:System.Windows.Window.AllowsTransparencyProperty">
      <summary>标识 <see cref="P:System.Windows.Window.AllowsTransparency" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.AllowsTransparency" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
      <summary>重写此方法具有和调整窗口及其子元素。 </summary>
      <returns>反映实际大小使用的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeBounds">
        <see cref="T:System.Windows.Size" /> 反映最终大小的窗口应使用排列自身及其子控件。</param>
    </member>
    <member name="M:System.Windows.Window.Close">
      <summary>手动关闭 <see cref="T:System.Windows.Window" />。</summary>
    </member>
    <member name="E:System.Windows.Window.Closed">
      <summary>，当窗口将关闭，发生。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> 设置，也 <see cref="M:System.Windows.Window.Show" />、 <see cref="M:System.Windows.Window.ShowDialog" />或 <see cref="M:System.Windows.Window.Hide" /> 调用，当窗口处于结束时。</exception>
    </member>
    <member name="E:System.Windows.Window.Closing">
      <summary>直接发生，在 <see cref="M:System.Windows.Window.Close" /> 调用之后，且可以取消关闭窗口。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.UIElement.Visibility" /> 设置，也 <see cref="M:System.Windows.Window.Show" />、 <see cref="M:System.Windows.Window.ShowDialog" />或 <see cref="M:System.Windows.Window.Close" /> 调用，当窗口处于结束时。</exception>
    </member>
    <member name="E:System.Windows.Window.ContentRendered">
      <summary>，在窗口中呈现的内容后，发生。</summary>
    </member>
    <member name="E:System.Windows.Window.Deactivated">
      <summary>，当窗口成为后台窗口，发生。</summary>
    </member>
    <member name="P:System.Windows.Window.DialogResult">
      <summary>获取或设置对话框结果值，该值从 <see cref="M:System.Windows.Window.ShowDialog" /> 方法返回。</summary>
      <returns>类型 <see cref="T:System.Boolean" />的 <see cref="T:System.Nullable`1" /> 值。默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.DialogResult" /> 设置，在调用之前 <see cref="M:System.Windows.Window.ShowDialog" />打开窗口。 - 或 -<see cref="P:System.Windows.Window.DialogResult" /> 在调用 <see cref="M:System.Windows.Window.Show" />打开的窗口设置。</exception>
    </member>
    <member name="M:System.Windows.Window.DragMove">
      <summary>允许窗口通过其左键中的鼠标向下拖动在窗口的工作区中显示的区域。</summary>
      <exception cref="T:System.InvalidOperationException">鼠标左键不滚动。</exception>
    </member>
    <member name="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
      <summary>返回对 <see cref="T:System.Windows.Window" /> 对象宿主中依赖项对象驻留的内容树中。</summary>
      <returns>
        <see cref="T:System.Windows.Window" /> 对宿主窗口。</returns>
      <param name="dependencyObject">依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为空。</exception>
    </member>
    <member name="M:System.Windows.Window.Hide">
      <summary>使一个窗口不可见。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.Hide" /> 对要关闭的窗口 (<see cref="E:System.Windows.Window.Closing" />) 或已关闭 (<see cref="E:System.Windows.Window.Closed" />)。</exception>
    </member>
    <member name="P:System.Windows.Window.Icon">
      <summary>获取或设置窗口的图标。  </summary>
      <returns>表示图标的 <see cref="T:System.Windows.Media.ImageSource" /> 对象。</returns>
    </member>
    <member name="F:System.Windows.Window.IconProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Icon" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.Icon" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.IsActive">
      <summary>获取一个值窗口是否处于活动状态。 </summary>
      <returns>true ，如果窗口处于活动状态;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Window.IsActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Window.IsActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.IsActive" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.Left">
      <summary>有关桌面获取或设置窗口的左边缘的位置，。 </summary>
      <returns>窗口的左边缘的位置，在逻辑单位 (1/96th 一英寸)。</returns>
    </member>
    <member name="F:System.Windows.Window.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Left" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.Left" />的依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.Window.LocationChanged">
      <summary>，当窗口的位置更改，发生。</summary>
    </member>
    <member name="P:System.Windows.Window.LogicalChildren">
      <summary>获取窗口的逻辑种属性元素的枚举数。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 窗口的逻辑种属性元素。</returns>
    </member>
    <member name="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
      <summary>重写此方法来测量窗口的大小。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> 此窗口定位反映该范围的在布局过程中，需要，具体取决于其子范围的计算。</returns>
      <param name="availableSize">反映可用大小此窗口会产生的子 <see cref="T:System.Windows.Size" /> 。infinity 可以当作值指示窗口将调整到任何内容可用。</param>
    </member>
    <member name="M:System.Windows.Window.OnActivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Activated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnClosed(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Closed" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Closing" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。</summary>
      <param name="oldContent">对旧内容树的根的引用。</param>
      <param name="newContent">到新内容树的根的引用。</param>
    </member>
    <member name="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.ContentRendered" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Window" />的一 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Window" />的一 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Deactivated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.LocationChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> 事件发生。</summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.SourceInitialized" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.StateChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>调用，更改窗口的父级。 </summary>
      <param name="oldParent">前面的父级。设置为 NULL，如果 <see cref="T:System.Windows.DependencyObject" /> 以前没有使用父级。</param>
    </member>
    <member name="P:System.Windows.Window.OwnedWindows">
      <summary>获取此窗口是所有者窗口的集合。</summary>
      <returns>包含的 <see cref="T:System.Windows.WindowCollection" /> 对此窗口是所有者的窗口。</returns>
    </member>
    <member name="P:System.Windows.Window.Owner">
      <summary>获取或设置拥有此 <see cref="T:System.Windows.Window" />的 <see cref="T:System.Windows.Window" /> 。</summary>
      <returns>表示此 <see cref="T:System.Windows.Window" />所有者的 <see cref="T:System.Windows.Window" /> 对象。</returns>
      <exception cref="T:System.ArgumentException">窗口尝试拥有自己- 或 -两个窗口尝试互相拥有。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Window.Owner" /> 属性在使用 <see cref="M:System.Windows.Window.ShowDialog" />显示的可视窗口设置- 或 -<see cref="P:System.Windows.Window.Owner" /> 属性设置为以前未显示的窗口。</exception>
    </member>
    <member name="P:System.Windows.Window.ResizeMode">
      <summary>获取或设置大小调整模式。 </summary>
      <returns>指定调整大小模式的 <see cref="T:System.Windows.ResizeMode" /> 值。</returns>
    </member>
    <member name="F:System.Windows.Window.ResizeModeProperty">
      <summary>标识 <see cref="P:System.Windows.Window.ResizeMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.ResizeMode" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.RestoreBounds">
      <summary>在最小化之前获取窗口的大小和位置或最大化。</summary>
      <returns>在最小化之前指定窗口大小和位置或最大化的 <see cref="T:System.Windows.Rect" /> 。</returns>
    </member>
    <member name="M:System.Windows.Window.Show">
      <summary>打开窗口并返回，而不等待新打开的窗口关闭。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.Show" /> 对要关闭的窗口 (<see cref="E:System.Windows.Window.Closing" />) 或已关闭 (<see cref="E:System.Windows.Window.Closed" />)。</exception>
    </member>
    <member name="P:System.Windows.Window.ShowActivated">
      <summary>获取或设置一个值是否活动窗口中，在第一次显示。 </summary>
      <returns>true ，如果活动窗口中，在第一次显示;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Window.ShowActivatedProperty">
      <summary>标识 <see cref="P:System.Windows.Window.ShowActivated" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.ShowActivated" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Window.ShowDialog">
      <summary>，只有在新打开的窗口关闭时，打开窗口并返回。</summary>
      <returns>指定类型 <see cref="T:System.Boolean" /> 的 <see cref="T:System.Nullable`1" /> 值事件是否接受了 (true) 或已取消 (false)。，在窗口关闭之前，则返回值是 <see cref="P:System.Windows.Window.DialogResult" /> 属性的值。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.ShowDialog" /> 对可见 <see cref="T:System.Windows.Window" />- 或 -<see cref="M:System.Windows.Window.ShowDialog" /> 在调用 <see cref="M:System.Windows.Window.ShowDialog" />打开的可见 <see cref="T:System.Windows.Window" /> 。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Windows.Window.ShowDialog" /> 对要关闭的窗口 (<see cref="E:System.Windows.Window.Closing" />) 或已关闭 (<see cref="E:System.Windows.Window.Closed" />)。</exception>
    </member>
    <member name="P:System.Windows.Window.ShowInTaskbar">
      <summary>获取或设置一个值窗口是否具有一个任务栏按钮。 </summary>
      <returns>true ，如果窗口的任务栏按钮;否则， false。，当窗口在浏览器中承载时，不适用。</returns>
    </member>
    <member name="F:System.Windows.Window.ShowInTaskbarProperty">
      <summary>标识 <see cref="P:System.Windows.Window.ShowInTaskbar" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.ShowInTaskbar" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.SizeToContent">
      <summary>获取或设置一个值窗口是否将自动调整大小以适应其内容的大小。 </summary>
      <returns>
        <see cref="T:System.Windows.SizeToContent" /> 值。默认值为 <see cref="F:System.Windows.SizeToContent.Manual" />。</returns>
    </member>
    <member name="F:System.Windows.Window.SizeToContentProperty">
      <summary>标识 <see cref="P:System.Windows.Window.SizeToContent" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.SizeToContent" />的依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.Window.SourceInitialized">
      <summary>将引发此事件支持与 Win32进行互操作。<see cref="T:System.Windows.Interop.HwndSource" />参见。</summary>
    </member>
    <member name="E:System.Windows.Window.StateChanged">
      <summary>，在窗口的 <see cref="P:System.Windows.Window.WindowState" /> 属性更改，发生。</summary>
    </member>
    <member name="P:System.Windows.Window.TaskbarItemInfo">
      <summary>获取或设置 <see cref="T:System.Windows.Window" />的 Windows 7 任务栏缩略图。</summary>
      <returns>
        <see cref="T:System.Windows.Window" />的 Windows 7 任务栏缩略图。</returns>
    </member>
    <member name="F:System.Windows.Window.TaskbarItemInfoProperty">
      <summary>标识 <see cref="P:System.Windows.Window.TaskbarItemInfo" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.TaskbarItemInfo" /> 依赖项属性。</returns>
    </member>
    <member name="P:System.Windows.Window.Title">
      <summary>获取或设置窗口的标题。 </summary>
      <returns>包含窗口的标题的 <see cref="T:System.String" /> 。</returns>
    </member>
    <member name="F:System.Windows.Window.TitleProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Title" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.Title" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.Top">
      <summary>有关桌面获取或设置窗口上边缘的位置，。 </summary>
      <returns>窗口顶部的位置，在逻辑单位 (1/96”)。</returns>
    </member>
    <member name="P:System.Windows.Window.Topmost">
      <summary>获取或设置一个值窗口是否显示在最顶层 z 顺序。 </summary>
      <returns>true ，如果窗口是最顶层的;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Window.TopmostProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Topmost" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.Topmost" />的依赖项属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Window.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Window.Top" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.Top" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowStartupLocation">
      <summary>获取或设置窗口的位置，在第一次显示。</summary>
      <returns>指定窗口顶部/左位置，在第一次显示的 <see cref="T:System.Windows.WindowStartupLocation" /> 值。默认值为 <see cref="F:System.Windows.WindowStartupLocation.Manual" />。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowState">
      <summary>获取或设置一个值是否还原窗口中，最小化、最大化。 </summary>
      <returns>
        <see cref="T:System.Windows.WindowState" /> 确定是否还原的窗口，最小化、最大化。默认值为 <see cref="F:System.Windows.WindowState.Normal" /> (还原)。</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStateProperty">
      <summary>标识 <see cref="P:System.Windows.Window.WindowState" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.WindowState" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Window.WindowStyle">
      <summary>获取或设置窗口的边框样式。 </summary>
      <returns>指定窗口的边框样式的 <see cref="T:System.Windows.WindowStyle" /> 。默认值为 <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />。</returns>
    </member>
    <member name="F:System.Windows.Window.WindowStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Window.WindowStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Window.WindowStyle" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.WindowCollection">
      <summary>表示 <see cref="T:System.Windows.Window" /> 对象的集合。此类不能继承。</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.WindowCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)">
      <summary>从指定的索引开始复制集合中的每 <see cref="T:System.Windows.Window" /> 对象数组，。</summary>
      <param name="array">数组类型 <see cref="T:System.Windows.Window" /> 集合中的 <see cref="T:System.Windows.Window" /> 复制对象。</param>
      <param name="index">在启动的集合的位置复制。</param>
    </member>
    <member name="P:System.Windows.WindowCollection.Count">
      <summary>获取 <see cref="T:System.Windows.Window" /> 对象数。 <see cref="T:System.Windows.WindowCollection" />包含的。</summary>
      <returns>
        <see cref="T:System.Windows.Window" /> 对象数。 <see cref="T:System.Windows.WindowCollection" />包含的。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.GetEnumerator">
      <summary>返回可以使用枚举集合中的 <see cref="T:System.Windows.Window" /> 对象的 <see cref="T:System.Collections.IEnumerator" /> 。</summary>
      <returns>可以使用枚举集合中的 <see cref="T:System.Windows.Window" /> 对象的 <see cref="T:System.Collections.IEnumerator" /> 。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.IsSynchronized">
      <summary>获取一 <see cref="T:System.Windows.WindowCollection" /> 对象是否的值是线程安全的。 </summary>
      <returns>true ，如果对象是线程安全的;否则， 错误。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.Item(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 对象位于指定索引处。</summary>
      <returns>
        <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 对象。</returns>
      <param name="index">指定的 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" />的索引。</param>
    </member>
    <member name="P:System.Windows.WindowCollection.SyncRoot">
      <summary>获取可用于同步对集合的访问对象。</summary>
      <returns>可用于同步对集合的访问对象。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">接收 <see cref="T:System.Windows.WindowCollection" />中复制项的从零开始的 <see cref="T:System.Array" /> 。</param>
      <param name="index">在接收复制的内容的指定 <see cref="T:System.Array" /> 的第一个位置。</param>
    </member>
    <member name="T:System.Windows.WindowStartupLocation">
      <summary>指定该位置 <see cref="T:System.Windows.Window" /> 将显示在中，在首次打开时它。使用由 <see cref="P:System.Windows.Window.WindowStartupLocation" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterOwner">
      <summary>
        <see cref="T:System.Windows.Window" /> 的起始位置是拥有它 <see cref="T:System.Windows.Window" /> 的中心，如指定由 <see cref="P:System.Windows.Window.Owner" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterScreen">
      <summary>
        <see cref="T:System.Windows.Window" /> 的起始位置是包含鼠标光标屏幕的中心。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.Manual">
      <summary>
        <see cref="T:System.Windows.Window" /> 的起始位置从代码设置或推迟到默认 Windows 位置。</summary>
    </member>
    <member name="T:System.Windows.WindowState">
      <summary>指定窗口是否最小化，最大化、还原。使用由 <see cref="P:System.Windows.Window.WindowState" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Maximized">
      <summary>窗口最大化。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Minimized">
      <summary>窗口最小化。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Normal">
      <summary>还原窗口。</summary>
    </member>
    <member name="T:System.Windows.WindowStyle">
      <summary>指定 <see cref="T:System.Windows.Window" /> 调整的类型。使用由 <see cref="P:System.Windows.Window.WindowStyle" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.None">
      <summary>仅工作区可见 - 该标题栏和边框不会显示。<see cref="T:System.Windows.Navigation.NavigationWindow" /> 和 <see cref="F:System.Windows.WindowStyle.None" /><see cref="P:System.Windows.Window.WindowStyle" /> 将显示导航 用户界面 (UI)。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.SingleBorderWindow">
      <summary>有一个边框的窗口。这是默认值。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ThreeDBorderWindow">
      <summary>具有 三维 边框的窗口。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.ToolWindow">
      <summary>内置的工具窗口。</summary>
    </member>
    <member name="T:System.Windows.WrapDirection">
      <summary>指定内容可以在对象环绕允许的方向。 </summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Both">
      <summary>围绕对象的双方流的内容。 </summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Left">
      <summary>围绕对象的左边只流的内容。 </summary>
    </member>
    <member name="F:System.Windows.WrapDirection.None">
      <summary>不围绕对象流的内容。 </summary>
    </member>
    <member name="F:System.Windows.WrapDirection.Right">
      <summary>围绕对象的右侧只流的内容。 </summary>
    </member>
    <member name="T:System.Windows.Annotations.Annotation">
      <summary>表示在 Microsoft Annotations Framework的用户批注。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName)">
      <summary>初始化具有指定的类型名称和命名空间 <see cref="T:System.Windows.Annotations.Annotation" /> 类的新实例。</summary>
      <param name="annotationType">批注的类型名称。</param>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName,System.Guid,System.DateTime,System.DateTime)">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="annotationType">批注的类型名称。</param>
      <param name="id">批注的 全局唯一标识符 (GUID) 。</param>
      <param name="creationTime">批注首先创建日期和时间。</param>
      <param name="lastModificationTime">日期和时间批注将是最后更新。</param>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AnchorChanged">
      <summary>，在定位点在注释 <see cref="P:System.Windows.Annotations.Annotation.Anchors" />，列表中，添加、移除或修改发生。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Anchors">
      <summary>获取定义了说明的数据选择零个或多 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 定位点元素的集合。 </summary>
      <returns>零个或多 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 定位点元素的集合。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.AnnotationType">
      <summary>获取批注类型的 <see cref="T:System.Xml.XmlQualifiedName" /> 。</summary>
      <returns>XML 限定名这种批注。</returns>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.AuthorChanged">
      <summary>，当作者在注释 <see cref="P:System.Windows.Annotations.Annotation.Authors" />，列表中，添加、移除或修改发生。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Authors">
      <summary>获取用于标识零个或多个作者字符串的集合谁创建了 <see cref="T:System.Windows.Annotations.Annotation" />。</summary>
      <returns>零个或多个作者字符串的集合。</returns>
    </member>
    <member name="E:System.Windows.Annotations.Annotation.CargoChanged">
      <summary>，在物品在注释 <see cref="P:System.Windows.Annotations.Annotation.Cargos" />，列表添加，取消或修改发生。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Cargos">
      <summary>获取包含数据为批注零个或多 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 的元素的集合。 </summary>
      <returns>零个或多 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 的元素的集合。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.CreationTime">
      <summary>获取该日期和时间批注时创建的。 </summary>
      <returns>日期和批注创建的时间。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.GetSchema">
      <summary>始终返回 null。请参见 批注架构 有关架构详细信息。</summary>
      <returns>始终 null。请参见 批注架构 有关架构详细信息。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.Id">
      <summary>获取 <see cref="T:System.Windows.Annotations.Annotation" />的 全局唯一标识符 (GUID) 。 </summary>
      <returns>批注的 GUID 。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Annotation.LastModificationTime">
      <summary>获取该日期和时间批注将是最后更新。 </summary>
      <returns>该日期和时间批注将是最后更新。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.ReadXml(System.Xml.XmlReader)">
      <summary>反序列化 从指定的 <see cref="T:System.Xml.XmlReader" />的 <see cref="T:System.Windows.Annotations.Annotation" /> 。 </summary>
      <param name="reader">使用的 XML 读取器反序列化批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 是 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.Annotation" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Annotation.WriteXml(System.Xml.XmlWriter)">
      <summary>序列化 到指定的 <see cref="T:System.Xml.XmlWriter" />的批注。 </summary>
      <param name="writer">使用的 XML 编写器序列化批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> 无效。</exception>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAction">
      <summary>指定在与 <see cref="T:System.Windows.Annotations.Annotation" /> author、定位和的资源的事件。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Added">
      <summary>元素添加到了批注。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Modified">
      <summary>元素在该批注中修改过。</summary>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationAction.Removed">
      <summary>该组件从批注将被移除。</summary>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs">
      <summary> 为 <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Object)">
      <summary> 初始化 <see cref="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs" /> 类的新实例。 </summary>
      <param name="annotation">引发事件的批注。</param>
      <param name="action">执行的作者操作: <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />、 <see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />或 <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />。</param>
      <param name="author">事件已更改的作者对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> 或 <paramref name="action" /> 是空引用 (在 Visual Basic 中nothing )。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> 无效 <see cref="T:System.Windows.Annotations.AnnotationAction" />。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Action">
      <summary> 获取事件的作者更改操作。 </summary>
      <returns>作者更改操作: <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />、 <see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />或 <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Annotation">
      <summary> 获取引发事件的批注。 </summary>
      <returns>引发事件的批注。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Author">
      <summary> 获取是事件的目标的作者对象。 </summary>
      <returns>是事件的目标的作者对象。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventHandler">
      <summary>表示处理 <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged" /> 事件。 <see cref="T:System.Windows.Annotations.Annotation" /> 类引发的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationDocumentPaginator">
      <summary>使用打印文档提供 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 与其相关联的批注。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)">
      <summary>初始化根据指定的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 和批注存储的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类的新实例 <see cref="T:System.IO.Stream" />。</summary>
      <param name="originalPaginator">添加打印的批注的文档。</param>
      <param name="annotationStore">检索批注的批注存储流自。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)">
      <summary>初始化按照指定的 <see cref="T:System.Windows.Documents.DocumentPaginator" />、批注存储 <see cref="T:System.IO.Stream" />和文本的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类的新实例 <see cref="T:System.Windows.FlowDirection" />。</summary>
      <param name="originalPaginator">添加打印的批注的文档。</param>
      <param name="annotationStore">检索批注的批注存储流自。</param>
      <param name="flowDirection">文本流方向、 <see cref="F:System.Windows.FlowDirection.LeftToRight" /> 或 <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>初始化根据指定的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 和 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类的新实例。</summary>
      <param name="originalPaginator">添加打印的批注的文档。</param>
      <param name="annotationStore">检索批注的存储自。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)">
      <summary>初始化根据指定的 <see cref="T:System.Windows.Documents.DocumentPaginator" />、 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />和文本的 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 类的新实例 <see cref="T:System.Windows.FlowDirection" />。</summary>
      <param name="originalPaginator">添加打印的批注的文档。</param>
      <param name="annotationStore">检索批注的存储自。</param>
      <param name="flowDirection">文本流方向、 <see cref="F:System.Windows.FlowDirection.LeftToRight" /> 或 <see cref="F:System.Windows.FlowDirection.RightToLeft" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)">
      <summary>取消启动的所有 异步 操作的特定 <paramref name="userState" /> 对象。</summary>
      <param name="userState">在调用传递的单个应用程序定义的标识符开始异步操作。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount">
      <summary>强制为内容的分页，新总计的更新 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> ，并将 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 到 true。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)">
      <summary>，已完成，启动该目录的 异步 分页，新总计的更新 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> ，并将 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 到 true 。</summary>
      <param name="userState">标识的异步操作应用程序定义的对象。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)">
      <summary>具有指定的分页关联的用户批注返回 <see cref="T:System.Windows.Documents.DocumentPage" /> 。</summary>
      <returns>指定的 <paramref name="pageNumber" />的 <see cref="T:System.Windows.Documents.DocumentPage" /> ;或 <see cref="F:System.Windows.Documents.DocumentPage.Missing" />，因此，如果指定的 <paramref name="pageNumber" /> 不存在。</returns>
      <param name="pageNumber">返回的 <see cref="T:System.Windows.Documents.DocumentPage" /> 的从零开始的分页。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)">
      <summary>异步 具有指定的分页关联的用户批注返回 <see cref="T:System.Windows.Documents.DocumentPage" /> 。</summary>
      <param name="pageNumber">检索的 <see cref="T:System.Windows.Documents.DocumentPage" /> 的从零开始的分页。</param>
      <param name="userState">用于标识该异步操作的应用程序定义的对象。</param>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid">
      <summary>获取一个值 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 是否是页的总数。</summary>
      <returns>true ，如果分页完成和 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 表示页的总数;否则， false ，如果分页是处理和 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" /> 表示当前格式的页的数量。 </returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount">
      <summary>获取一个指示当前格式的页的值。</summary>
      <returns>如果 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 是 true，批注页的总数;否则，如果 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" /> 是 false，当前格式的页的数量 (分页过程)。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize">
      <summary>获取或设置建议的宽度和高度每页。</summary>
      <returns>建议的宽度和高度设置的页面。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source">
      <summary>获取分页的源文档。</summary>
      <returns>分页的源文档。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationHelper">
      <summary>提供实用工具方法和命令创建和删除突出显示，墨迹便笺，并且 text 便笺批注。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.ClearHighlightsForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>清除从 webbrowser 控件中当前选定的所有突出显示批注与特定 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <param name="service">的批注 services 中移除突出显示批注的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateHighlightForSelection(System.Windows.Annotations.AnnotationService,System.String,System.Windows.Media.Brush)">
      <summary>创建在浏览器控件中当前选择的突出显示批注与指定的 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <returns>突出显示批注;或者， null，如果未显示的选定内容。</returns>
      <param name="service">使用的批注服务创建突出显示批注。</param>
      <param name="author">批注的作者。</param>
      <param name="highlightBrush">使用的画笔绘制在选定内容的突出显示。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。 - 或 -在 不是 <see cref="T:System.Windows.Media.SolidColorBrush" />的<paramref name="highlightBrush" /> 。</exception>
      <exception cref="T:System.InvalidOperationException">webbrowser 控件不包含内容选择。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateInkStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>创建在浏览器控件中当前选择墨迹便笺批注与指定的 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <returns>墨迹便笺批注;或 null，因此，如果未进行批注的选定内容。</returns>
      <param name="service">使用的批注服务创建墨迹便笺批注。</param>
      <param name="author">批注的作者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
      <exception cref="T:System.InvalidOperationException">webbrowser 控件不包含内容选择。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.CreateTextStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
      <summary>创建在浏览器控件中当前选择的文本便笺批注与指定的 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <returns>文本便笺批注;或 null，因此，如果未进行批注的选定内容。</returns>
      <param name="service">使用的批注服务创建文本便笺批注。</param>
      <param name="author">批注的作者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
      <exception cref="T:System.InvalidOperationException">webbrowser 控件不包含内容选择。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteInkStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>删除在 web 浏览器控件中当前选定内容中都包含与特定 <see cref="T:System.Windows.Annotations.AnnotationService" />墨迹便笺批注。</summary>
      <param name="service">的批注服务删除墨迹便笺批注的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.DeleteTextStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
      <summary>删除在 web 浏览器控件中当前选定内容中都包含与特定 <see cref="T:System.Windows.Annotations.AnnotationService" />的文本便笺批注。</summary>
      <param name="service">的批注服务删除文本便笺批注的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="service" /> 未启用。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationHelper.GetAnchorInfo(System.Windows.Annotations.AnnotationService,System.Windows.Annotations.Annotation)">
      <summary>返回提供锚定信息，如定位点位置，有关所指定的批注的 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 对象。</summary>
      <returns>提供了有关所指定的批注的信息的 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 对象或 null ，则将无法解析。</returns>
      <param name="service">使用的批注服务此操作。</param>
      <param name="annotation">锚定信息的批注访问。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResource">
      <summary>表示 <see cref="T:System.Windows.Annotations.Annotation" />的一种内容的定位点或的资源。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.Guid)">
      <summary>此构造函数支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="id">标识该资源的 全局唯一标识符 (GUID) 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> 与 Guid.Empty 相等。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 类的新实例与指定的名称。</summary>
      <param name="name">标识从其他 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 和 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 的此资源的名称定义在同一个批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.ContentLocators">
      <summary>获取 <see cref="T:System.Windows.Annotations.ContentLocatorBase" /> 元素的集合此资源包含的。</summary>
      <returns>此资源包含的内容定位器的集合。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Contents">
      <summary>获取定义此 resources 目录 <see cref="T:System.Xml.XmlElement" /> 对象的集合。</summary>
      <returns>定义此 resources 目录 <see cref="T:System.Xml.XmlElement" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.GetSchema">
      <summary>始终返回 null。请参见 批注架构 有关架构详细信息。</summary>
      <returns>始终 null。请参见 批注架构 有关架构详细信息。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Id">
      <summary>获取资源 GUID 。</summary>
      <returns>标识该资源的 全局唯一标识符 (GUID) 。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResource.Name">
      <summary>获取或设置一个名称。此 <see cref="T:System.Windows.Annotations.AnnotationResource" />。</summary>
      <returns>名称指派给此 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 与其他 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 区分批注中为或 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.ReadXml(System.Xml.XmlReader)">
      <summary>可从指定的 <see cref="T:System.Xml.XmlReader" />的 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 。</summary>
      <param name="reader">反序列化 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 的 XML 读取器从。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 是 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.AnnotationResource" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="E:System.Windows.Annotations.AnnotationResource.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResource.WriteXml(System.Xml.XmlWriter)">
      <summary>序列化 <see cref="T:System.Windows.Annotations.AnnotationResource" /> 到指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
      <param name="writer">序列化 <see cref="T:System.Windows.Annotations.AnnotationResource" />的 XML 编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Annotations.Annotation.AnnotationType" /> 无效。</exception>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> 和 <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)">
      <summary>初始化 <see cref="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)" /> 类的新实例。</summary>
      <param name="annotation">引发事件的批注。</param>
      <param name="action">事件。</param>
      <param name="resource">事件的 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 或 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 资源。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> 或 <paramref name="action" /> 是 null。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Windows.Annotations.AnnotationAction" /> 值。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Action">
      <summary>获取批注将 <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" />的事件。</summary>
      <returns>批注 <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource" />的事件。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Annotation">
      <summary>获取引发事件的 <see cref="T:System.Windows.Annotations.Annotation" /> 。</summary>
      <returns>引发事件的 <see cref="T:System.Windows.Annotations.Annotation" /> 。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource">
      <summary>获取 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 或 <see cref="P:System.Windows.Annotations.Annotation.Cargos" /> 资源与该事件关联。</summary>
      <returns>是 <see cref="F:System.Windows.Annotations.AnnotationAction.Added" />、 <see cref="F:System.Windows.Annotations.AnnotationAction.Removed" />或 <see cref="F:System.Windows.Annotations.AnnotationAction.Modified" />的批注定位点或的资源。</returns>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationResourceChangedEventHandler">
      <summary>表示处理 <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged" /> 或 <see cref="E:System.Windows.Annotations.Annotation.CargoChanged" /> 事件。 <see cref="T:System.Windows.Annotations.Annotation" /> 类引发的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Annotations.AnnotationService">
      <summary>提供 Microsoft Annotations Framework的核心服务管理和显示用户批注。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>初始化 <see cref="T:System.Windows.Annotations.AnnotationService" /> 类的新实例为具有指定的 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 控件的使用。</summary>
      <param name="viewer">文档读取控件与 <see cref="T:System.Windows.Annotations.AnnotationService" />。</param>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>初始化 <see cref="T:System.Windows.Annotations.AnnotationService" /> 类的新实例为具有指定的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 控件的使用。</summary>
      <param name="viewer">文档查看控件与 <see cref="T:System.Windows.Annotations.AnnotationService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>初始化 <see cref="T:System.Windows.Annotations.AnnotationService" /> 类的新实例为具有指定的 <see cref="T:System.Windows.Controls.DocumentViewer" /> 或 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 控件的使用。</summary>
      <param name="viewer">文档查看控件与 <see cref="T:System.Windows.Annotations.AnnotationService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 是 null。</exception>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.ClearHighlightsCommand">
      <summary>表示命令清除当前选择的突出显示批注。</summary>
      <returns>该路由命令清除所有显示从当前选择的批注。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateHighlightCommand">
      <summary>表示命令创建在当前选择的突出显示批注。</summary>
      <returns>路由命令创建在当前选择的突出显示批注。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand">
      <summary>表示命令创建在当前选择墨迹批注批注。</summary>
      <returns>路由命令创建在当前选择墨迹批注批注。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand">
      <summary>表示命令创建在当前选择的文本说明批注。</summary>
      <returns>路由命令创建在当前选定的文本说明批注。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteAnnotationsCommand">
      <summary>表示命令删除所有墨迹批注、文本说明和突出显示批注在当前选择。</summary>
      <returns>路由命令删除所有墨迹批注、文本说明和突出显示批注在当前选择。</returns>
    </member>
    <member name="F:System.Windows.Annotations.AnnotationService.DeleteStickyNotesCommand">
      <summary>表示命令删除所有墨迹批注和文本批注批注在当前选择。</summary>
      <returns>路由命令删除所有墨迹批注和文本批注批注在当前选择。</returns>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Disable">
      <summary>禁用处理的批注和隐藏所有可见的批注。</summary>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.Enable(System.Windows.Annotations.Storage.AnnotationStore)">
      <summary>启用 <see cref="T:System.Windows.Annotations.AnnotationService" /> 用于特定 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 的使用并显示所有可见的批注。</summary>
      <param name="annotationStore">使用的批注存储用于读取，编写并显示批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotationStore" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentReader)">
      <summary>返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 与指定的 <see cref="T:System.Windows.Controls.FlowDocumentReader" />。</summary>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> 与给定的文件实现器控件;或 null ，如果指定的文件实现管理器中没有 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
      <param name="reader">返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例的文件实现器控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 与指定的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />。</summary>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> 与给定文档浏览器控件;或 null ，如果指定浏览器控件没有 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
      <param name="viewer">返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例的文档浏览器控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例与指定的文档查看控件。</summary>
      <returns>
        <see cref="T:System.Windows.Annotations.AnnotationService" /> 与给定文档查看控件;或 null ，如果指定文档查看控件没有 <see cref="T:System.Windows.Annotations.AnnotationService" />。</returns>
      <param name="viewer">返回 <see cref="T:System.Windows.Annotations.AnnotationService" /> 实例的文档查看控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewer" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.IsEnabled">
      <summary>获取一个值 <see cref="T:System.Windows.Annotations.AnnotationService" /> 是否启用。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Annotations.AnnotationService" /> 启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Annotations.AnnotationService.Store">
      <summary>获取 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 使用此 <see cref="T:System.Windows.Annotations.AnnotationService" />。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.AnnotationService" />使用的 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 。</returns>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocator">
      <summary>表示有序的设置标识内容项目的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Annotations.ContentLocator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocator" />可修改的 多层次复制 克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocator" />可修改的 多层次复制 克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.GetSchema">
      <summary>始终返回 null。请参见 批注架构 有关架构详细信息。</summary>
      <returns>始终 null。请参见 批注架构 有关架构详细信息</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocator.Parts">
      <summary>获取的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素的集合组成此 <see cref="T:System.Windows.Annotations.ContentLocator" />。</summary>
      <returns>的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素的集合组成此 <see cref="T:System.Windows.Annotations.ContentLocator" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.ReadXml(System.Xml.XmlReader)">
      <summary>反序列化 从指定的 <see cref="T:System.Xml.XmlReader" />的 <see cref="T:System.Windows.Annotations.ContentLocator" /> 。</summary>
      <param name="reader">使用的 XML 读取器反序列化 <see cref="T:System.Windows.Annotations.ContentLocator" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 是 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.ContentLocator" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)">
      <summary>返回一个值 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素启动程序在指定的 <see cref="T:System.Windows.Annotations.ContentLocator" /> 是否与相同的此 <see cref="T:System.Windows.Annotations.ContentLocator" />。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素启动程序在此 <see cref="T:System.Windows.Annotations.ContentLocator" /> 的匹配在指定的 <paramref name="locator" />;否则， false。</returns>
      <param name="locator">与 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 元素的列表 <see cref="T:System.Windows.Annotations.ContentLocator" /> 和此 <see cref="T:System.Windows.Annotations.ContentLocator" /><see cref="T:System.Windows.Annotations.ContentLocator" /><see cref="T:System.Windows.Annotations.ContentLocator" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="locator" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocator.WriteXml(System.Xml.XmlWriter)">
      <summary>序列化 到指定的 <see cref="T:System.Xml.XmlWriter" />的 <see cref="T:System.Windows.Annotations.ContentLocator" /> 。</summary>
      <param name="writer">使用的 XML 编写器序列化 <see cref="T:System.Windows.Annotations.ContentLocator" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 是 null。</exception>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorBase">
      <summary>表示标识内容项的对象。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorBase.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocatorBase" />可修改的 多层次复制 克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocatorBase" />可修改的 多层次复制 克隆。</returns>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>有关此成员的说明，请参见 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />。</summary>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorGroup">
      <summary>表示有序的设置标识内容项目的 <see cref="T:System.Windows.Annotations.ContentLocator" /> 元素。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />可修改的 多层次复制 克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />可修改的 多层次复制 克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.GetSchema">
      <summary>始终返回 null。请参见 批注架构 有关架构详细信息。</summary>
      <returns>始终 null。请参见 批注架构 有关架构详细信息。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorGroup.Locators">
      <summary>获取构造该 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /><see cref="T:System.Windows.Annotations.ContentLocator" /> 元素的集合。</summary>
      <returns>的 <see cref="T:System.Windows.Annotations.ContentLocator" /> 元素的集合组成此 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.ReadXml(System.Xml.XmlReader)">
      <summary>反序列化 从指定的 <see cref="T:System.Xml.XmlReader" />的 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 。</summary>
      <param name="reader">使用的 XML 读取器反序列化 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 是 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 的序列化 XML 无效。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorGroup.WriteXml(System.Xml.XmlWriter)">
      <summary>序列化 到指定的 <see cref="T:System.Xml.XmlWriter" />的 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" /> 。</summary>
      <param name="writer">使用的 XML 编写器序列化 <see cref="T:System.Windows.Annotations.ContentLocatorGroup" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 是 null。</exception>
    </member>
    <member name="T:System.Windows.Annotations.ContentLocatorPart">
      <summary>表示一组名称/值对标识内容项目。</summary>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.#ctor(System.Xml.XmlQualifiedName)">
      <summary>初始化 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 类的新实例与指定类型名称和命名空间的。</summary>
      <param name="partType">
        <see cref="T:System.Windows.Annotations.ContentLocatorPart" />的类型名称和命名空间。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partType" /> 参数是 null。</exception>
      <exception cref="T:System.ArgumentException">字符串 <paramref name="partType" />。<see cref="P:System.Xml.XmlQualifiedName.Name" /> 或 <paramref name="partType" />。<see cref="P:System.Xml.XmlQualifiedName.Namespace" /> (或两者) 是 null 或为空。</exception>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Clone">
      <summary>创建此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />可修改的 多层次复制 克隆。</summary>
      <returns>此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />可修改的 多层次复制 克隆。</returns>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.Equals(System.Object)">
      <summary>返回一个值特定 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 是否与此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />相同。</summary>
      <returns>true ，如果在两个部件中的 <see cref="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs" /> 相同;否则， false。</returns>
      <param name="obj">比较的部件用于相等。</param>
    </member>
    <member name="M:System.Windows.Annotations.ContentLocatorPart.GetHashCode">
      <summary>返回此部分的 哈希代码 。</summary>
      <returns>此部分的 哈希代码 。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs">
      <summary>获取名称/值对的集合定义的部件。</summary>
      <returns>名称/值对的集合定义此 <see cref="T:System.Windows.Annotations.ContentLocatorPart" />。</returns>
    </member>
    <member name="P:System.Windows.Annotations.ContentLocatorPart.PartType">
      <summary>获取该部件的类型名称和命名空间。</summary>
      <returns>部件的类型名称和命名空间。</returns>
    </member>
    <member name="E:System.Windows.Annotations.ContentLocatorPart.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>此事件支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。 </summary>
    </member>
    <member name="T:System.Windows.Annotations.IAnchorInfo">
      <summary>用于对批注的功能与对应的批注对象。</summary>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Anchor">
      <summary>获取一个批注的定位点。</summary>
      <returns>解决的定位点。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.Annotation">
      <summary>获取批注对象。</summary>
      <returns>批注对象。</returns>
    </member>
    <member name="P:System.Windows.Annotations.IAnchorInfo.ResolvedAnchor">
      <summary>获取表示树的位置 <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> 解析的对象。 </summary>
      <returns>表示树的位置 <see cref="P:System.Windows.Annotations.IAnchorInfo.Anchor" /> 解析的对象。此类型。批注的对象类型指定。便笺修复说明和的突出显示在流或总是文档解析为 <see cref="T:System.Windows.Annotations.TextAnchor" /> 对象。</returns>
    </member>
    <member name="T:System.Windows.Annotations.TextAnchor">
      <summary>表示批注锚定内容的选择。</summary>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingEnd">
      <summary>获取文本定位点的结束位置。</summary>
      <returns>文本定位点的结束位置。</returns>
    </member>
    <member name="P:System.Windows.Annotations.TextAnchor.BoundingStart">
      <summary>获取文本定位点的开始位置。</summary>
      <returns>文本定位点的开始位置。</returns>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.Equals(System.Object)">
      <summary>返回一个值文本定位点是否与指定的对象相等。 </summary>
      <returns>true ，如果两个实例是否相等;否则， false。</returns>
      <param name="obj">比较的对象。</param>
    </member>
    <member name="M:System.Windows.Annotations.TextAnchor.GetHashCode">
      <summary>返回文本定位点实例的哈希代码。</summary>
      <returns>文本定位点实例的哈希代码。</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.AnnotationStore">
      <summary>当重写在派生类，表示读取和写入的用户批注的数据存储区。    </summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 类的新实例。  </summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>添加新 <see cref="T:System.Windows.Annotations.Annotation" /> 到存储。</summary>
      <param name="newAnnotation">添加的批注到存储。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">具有相同 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性值的 <see cref="T:System.Windows.Annotations.Annotation" /> 于存储已存在。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged">
      <summary>，如果所有 <see cref="T:System.Windows.Annotations.Annotation" /> 的定位点在存储更改，发生。</summary>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged">
      <summary>，当所有 <see cref="T:System.Windows.Annotations.Annotation" /> 的一个作者在存储更改，发生。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush">
      <summary>获取或设置一个值在注释缓冲区的数据是否是对物理数据存储区立即编写。 </summary>
      <returns>true ，如果在注释缓冲区的数据是对物理数据存储区立即编写为每个操作;否则， false ，如果在注释缓冲区的数据将编写，当应用程序显式调用 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />。</returns>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged">
      <summary>，如果所有 <see cref="T:System.Windows.Annotations.Annotation" /> 的货物在存储更改，发生。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)">
      <summary>从存储区中删除具有指定的 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。</summary>
      <returns>已删除的批注;否则， null ，如果使用指定的 <paramref name="annotationId" /> 的批注未在存储区中找到。</returns>
      <param name="annotationId">要删除的批注的 全局唯一标识符 (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose">
      <summary>释放内存中存储的所有托管和非托管资源。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)">
      <summary>释放存储使用的非托管资源和选择性地释放托管资源。</summary>
      <param name="disposing"> 发布的true 托管和非托管资源;仅释放非托管资源的 false 。 </param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize">
      <summary>确保 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" /> 为此存储最终将调用。 </summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.Flush">
      <summary>强制在内部缓冲区保留所有批注数据将写入基础存储设备。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)">
      <summary>返回与指定的 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注从存储。</summary>
      <returns>与特定 <paramref name="annotationId" />的批注;或 null，因此，如果使用指定的 <paramref name="annotationId" /> 的批注未在存储区中找到。</returns>
      <param name="annotationId">要返回的批注的 全局唯一标识符 (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations">
      <summary>在存储返回所有批注列表。</summary>
      <returns>在存储当前包含的所有批注列表。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>返回具有定位器的 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 从匹配的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 顺序启动批注的列表。</summary>
      <returns>具有定位器的 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 开始和与给定 <paramref name="anchorLocator" />批注的列表;否则， null ，如果未找到匹配的批注。</returns>
      <param name="anchorLocator">返回匹配的批注的起始 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列。</param>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed">
      <summary>获取一个值 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 是否调用。</summary>
      <returns>true ，如果 <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用;否则， false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged">
      <summary>，当 <see cref="T:System.Windows.Annotations.Annotation" /> 中添加或从存储，删除发生。</summary>
    </member>
    <member name="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot">
      <summary>获取要使用的对象作为 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 临界区的同步锁。</summary>
      <returns>对于使用的对象作为 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 临界区的同步锁。</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentAction">
      <summary>在 <see cref="T:System.Windows.Annotations.Annotation" /> 指定在 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />执行的操作。</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Added">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> 添加到存储。</summary>
    </member>
    <member name="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted">
      <summary>
        <see cref="T:System.Windows.Annotations.Annotation" /> 从存储已删除。</summary>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)">
      <summary>初始化 <see cref="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)" /> 类的新实例。</summary>
      <param name="action">事件。</param>
      <param name="annotation">添加或移除的批注。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="annotation" /> 或 <paramref name="action" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Action">
      <summary>获取执行该操作。</summary>
      <returns>标识操作的事件 <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Added" /> 或 <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted" /> 值执行。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Annotation">
      <summary>获取在存储更改的 <see cref="T:System.Windows.Annotations.Annotation" /> 。</summary>
      <returns>在存储更改的 <see cref="T:System.Windows.Annotations.Annotation" /> 。</returns>
    </member>
    <member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventHandler">
      <summary>表示处理 <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 事件。 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 类引发的方法。</summary>
      <param name="sender">事件的源 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Annotations.Storage.XmlStreamStore">
      <summary>表示读取和写入的用户批注的 XML 数据存储区。</summary>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)">
      <summary>初始化 <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 类的新实例使用指定的 I/O <see cref="T:System.IO.Stream" />的。</summary>
      <param name="stream">读取和写入的用户批注 I/O 流。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})">
      <summary>初始化 <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> 类的新实例使用指定的 I/O 已知的兼容命名空间 <see cref="T:System.IO.Stream" /> 和字典的。</summary>
      <param name="stream">读取和写入的用户批注 I/O 流。</param>
      <param name="knownNamespaces">带有已知的兼容命名空间列表的字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 是 null。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="stream" /> 包含无效的 XML。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="knownNamespaces" /> 字典包含重复的命名空间。- 或 -<paramref name="knownNamespaces" /> 字典包含一 null 键的元素。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)">
      <summary>添加新 <see cref="T:System.Windows.Annotations.Annotation" /> 到存储。</summary>
      <param name="newAnnotation">添加的批注到存储。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newAnnotation" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Annotations.Annotation" /> 和相同 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 已在存储。</exception>
      <exception cref="T:System.InvalidOperationException">I/O <see cref="T:System.IO.Stream" /> 没有为存储设置。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush">
      <summary>获取或设置一个值在注释缓冲区的数据是否是对物理数据存储区立即编写。</summary>
      <returns>true ，如果在注释缓冲区的数据是对物理数据存储区立即编写为每个操作;否则， false ，如果在注释缓冲区的数据将编写，当应用程序显式调用 <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />。</returns>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)">
      <summary>从存储区中删除具有指定的 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注。 </summary>
      <returns>已删除的批注;否则， null ，如果使用指定的 <paramref name="annotationId" /> 的批注未在存储区中找到。</returns>
      <param name="annotationId">要删除的批注的 全局唯一标识符 (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
      <exception cref="T:System.InvalidOperationException">I/O <see cref="T:System.IO.Stream" /> 没有为存储设置。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush">
      <summary>强制在内部缓冲区保留所有批注数据将写入基础存储设备。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
      <exception cref="T:System.InvalidOperationException">I/O <see cref="T:System.IO.Stream" /> 没有为存储设置。</exception>
      <exception cref="T:System.UnauthorizedAccessException">存储 I/O <see cref="T:System.IO.Stream" /> 只读，并且不能用于输出进行访问。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)">
      <summary>返回与指定的 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 的批注从存储。</summary>
      <returns>与特定 <paramref name="annotationId" />的批注;否则， null ，如果使用指定的 <paramref name="annotationId" /> 的批注未在存储区中找到。</returns>
      <param name="annotationId">要返回的批注的 全局唯一标识符 (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> 属性。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations">
      <summary>在存储返回所有批注列表。</summary>
      <returns>当前在存储所有批注的列表。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> 调用了存储。</exception>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
      <summary>返回具有定位器的 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 从匹配的 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 顺序启动批注的列表。</summary>
      <returns>具有定位器的 <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> 开始和与给定 <paramref name="anchorLocator" />批注的列表;否则， null ，如果未找到匹配的批注。</returns>
      <param name="anchorLocator">返回匹配的批注的起始 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 序列。</param>
    </member>
    <member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)">
      <summary>返回兼容的输入命名空间命名空间的列表。</summary>
      <returns>匹配 <paramref name="name" />兼容命名空间的列表;否则， null ，如果未找到兼容的命名空间。</returns>
      <param name="name">返回命名空间列表的开头的 URI 序列。</param>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces">
      <summary>获取已忽略命名空间的列表，在 XML 流加载的。</summary>
      <returns>忽略命名空间的列表，在 XML 流加载的。</returns>
    </member>
    <member name="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces">
      <summary>获取由 Annotations Framework预定义的所有命名空间的列表。</summary>
      <returns>由 Microsoft Annotations Framework预定义的命名空间的列表。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Button" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与 UI 自动化 同级元素的 控件类型 。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 UI 自动化 对等类控件的名称。</summary>
      <returns>包含 “按钮”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取支持元素指定的 控件模式 与此自动化对等类的对象。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，此方法返回 this 指针，否则此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>表示显示的 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 从派生的元素基类在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
      <summary>为基类提供的值初始化，在调用由派生类的构造函数。</summary>
      <param name="owner">与此对等类的 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAcceleratorKeyCore">
      <summary>获取元素的 快捷键 与此 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />。</summary>
      <returns>包含快捷键的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAutomationIdCore">
      <summary>获取元素的 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> 与此 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />。</summary>
      <returns>包含 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" />的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
      <summary>获取元素的类的名称与此 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" />。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>包含类名称的字符串，递减快捷键。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Calendar" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.#ctor(System.Windows.Controls.Calendar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取支持组件指定的控件模式与此自动化对等类的对象。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />、 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />、 <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">指定控件模式的枚举值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取总列数在网格中。</summary>
      <returns>总列数在网格中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>检索指定单元格的 UI 自动化提供程序。</summary>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
      <param name="row">行的序号相关。</param>
      <param name="column">列的序号相关。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取总行数在网格中。</summary>
      <returns>总行数在网格中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>按指定的属性值检索元素。</summary>
      <returns>与搜索条件匹配的第一项;否则， null ，如果项目不匹配。</returns>
      <param name="startAfterProvider">在容器中的项，在后开始搜索。</param>
      <param name="propertyId">包含值检索的属性。</param>
      <param name="value">检索的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>获取当前控件特定视图。</summary>
      <returns>UI 自动化元素的当前视图的值。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>检索控件特定视图标识符的集合。</summary>
      <returns>标识视图可用于 UI 自动化元素值的集合。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>检索一个控件特定视图的名称。</summary>
      <returns>一个本地化的名称视图。</returns>
      <param name="viewId">视图标识符。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>设置当前控件特定视图。 </summary>
      <param name="viewId">视图标识符。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="viewId" /> 不支持的视图集合的成员。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取指定的值 UI 自动化提供程序是否支持多个子元素同时选择。</summary>
      <returns>true ，如果多个选择允许;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索选择的每个子元素的一个 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取指定的值 UI 自动化提供程序是否至少需要一个子元素处于选中状态。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>获取在表示表中所有列标题 UI 自动化提供程序 的集合。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>检索在表中表示任何行标题 UI 自动化提供程序 的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.CalendarAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>检索遍历的主要定向表的。</summary>
      <returns>遍历的主要说明。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CalendarButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.CalendarButtonAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.CheckBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.CheckBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取元素的 <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> 与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
      <summary>获取元素的名称与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “复选框”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ComboBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.ComboBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</returns>
      <param name="item">与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.ComboBoxItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetChildrenCore">
      <summary>获取子元素集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
      <summary>获取定义类型与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ComboBox”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />的 控件模式 。</summary>
      <returns>如果 <paramref name="pattern" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />，此方法返回对 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />的当前实例;否则，此方法调用 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />的基实现。 </returns>
      <param name="pattern">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.SetFocusCore">
      <summary>将与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.ComboBox" /> 控件的键盘输入焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />调用。</summary>
      <exception cref="T:System.InvalidOperationException">与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.ComboBox" /> 控件收不到焦点。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>当前元素的 <see cref="T:System.Windows.Automation.ExpandCollapseState" /> 。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果该值是只读的; false ，如果能修改它。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="val"> 控件的字符串值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件的字符串值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContentTextAutomationPeer">
      <summary>表示显示的 <see cref="T:System.Windows.Automation.TextPattern" /> 类型的基类在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContentTextAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>为基类提供的值初始化，在调用由派生类的构造函数。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ContentTextAutomationPeer" />的 <see cref="T:System.Windows.Automation.TextPattern" /> 。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ContextMenu" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.#ctor(System.Windows.Controls.ContextMenu)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />的 <see cref="T:System.Windows.Controls.ContextMenu" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />的 <see cref="T:System.Windows.Controls.ContextMenu" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /><see cref="T:System.Windows.Controls.ContextMenu" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ContextMenu”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DataGrid" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.#ctor(System.Windows.Controls.DataGrid)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持组件指定的控件模式与此自动化对等类的对象。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />、 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取总列数在网格中。</summary>
      <returns>总列数在网格中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>检索指定单元格的 UI 自动化提供程序 。</summary>
      <returns>指定单元格的 UI 自动化提供程序 。</returns>
      <param name="row">行的序号相关。</param>
      <param name="column">列的序号相关。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取总行数在网格中。</summary>
      <returns>总行数在网格中。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取指定的值 UI 自动化提供程序 是否允许多个子元素同时选择。</summary>
      <returns>true ，如果多个选择允许;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索选择的每个子元素的 UI 自动化提供程序 。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取指定的值 UI 自动化提供程序 是否至少需要一个子元素处于选中状态。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>获取在表示表中所有列标题 UI 自动化提供程序 的集合。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>检索在表中表示任何行标题 UI 自动化提供程序 的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>检索遍历的主要定向表的。</summary>
      <returns>遍历的主要说明。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DataGridCell" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellAutomationPeer.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridCellAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">指定控件模式的枚举值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DataGridCell" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 类的新实例。 </summary>
      <param name="item">与此自动化对等类的元素。</param>
      <param name="dataGridColumn">
        <see cref="T:System.Windows.Controls.DataGrid" /> 列 <paramref name="item" /> 。 </param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持组件指定的控件模式与此自动化对等类的对象。</summary>
      <returns>当前 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 对象，则为; <paramref name="patternInterface" /> 是一个支持的值;否则， null。有关更多信息，请参见备注。</returns>
      <param name="patternInterface">指定控件模式的枚举。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项目列的号。</summary>
      <returns>确定包含该单元格或项的列的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取单元格或项目范围的列数。</summary>
      <returns>将范围的列数。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> 表示该单元格或项的容器的 UI 自动化提供程序 。</summary>
      <returns>实现 <see cref="T:System.Windows.Automation.GridPattern" /> 表示单元格或项容器的 UI 自动化提供程序 。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项行的号。</summary>
      <returns>确定包含该单元格或项目的行的一个从零开始的号。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取单元格或项目范围的行数。</summary>
      <returns>将范围的行数。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送一个请求激活控件和激活其唯一，明确的事件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>移动容器对象的内容区域来显示在可视区域 (视区) 内的控件的容器。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>添加当前元素到选定项的集合。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值项目是否已选中。 </summary>
      <returns>true ，如果元素已选中;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>从选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>取消选择所有选定的项并选择当前元素。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> 并作为调用的对象的容器的 UI 自动化提供程序 。</summary>
      <returns>支持 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />的提供程序。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>检索表示所有列标题的 UI 自动化提供程序 的集合与 table item 或单元格。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>检索表示所有行标题的 UI 自动化提供程序 的集合与 table item 或单元格。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>获取指定的值的控件的值是否为只读。 </summary>
      <returns>true ，如果该值是只读的; false ，如果能修改它。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>设置控件的值。</summary>
      <param name="value">设置的值。该提供程序将该值来为适当的数据类型。</param>
      <exception cref="T:System.InvalidOperationException">与此 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 对象的 <see cref="T:System.Windows.Controls.DataGridCell" /> 对象是只读的。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>获取控件的值。</summary>
      <returns>控件的值作为字符串。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟项目完全可访问为 UI 自动化元素。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer">
      <summary>显示在 <see cref="T:System.Windows.Controls.DataGrid" /> 到 UI 自动化<see cref="T:System.Windows.Controls.DataGridColumn" /> 的 <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 类的新实例。 </summary>
      <param name="item">在与此 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.DataGridColumn" /> 的 <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 。</param>
      <param name="column">与 <see cref="P:System.Windows.Controls.DataGridColumn.Header" />的列。</param>
      <param name="peer">与 <see cref="T:System.Windows.Controls.DataGrid" /><see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 的自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />标题的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetClassNameCore">
      <summary>获取区分标题由此 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />表示的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 属性的类型与此 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持组件指定的控件模式与此自动化对等类的对象。</summary>
      <returns>当前 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 对象，则为; <paramref name="patternInterface" /> 是一个支持的值;否则， null。有关更多信息，请参见备注。</returns>
      <param name="patternInterface">指定控件模式的枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送一个请求激活控件和激活其唯一，明确的事件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>移动与 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 到视图的标头和列。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>获取指定的值列是否可以移动。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>获取指定的值列是否可调整大小。</summary>
      <returns>true ，如果元素可以调整大小;否则 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>获取指定的值控件是否能旋转。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>在所有情况下引发异常。</summary>
      <param name="x">不使用此参数。</param>
      <param name="y">不使用此参数。</param>
      <exception cref="T:System.InvalidOperationException">方式。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>调整与 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" />列的宽度。 </summary>
      <param name="width">列的新的宽度，以像素为单位。</param>
      <param name="height">不使用此参数。</param>
      <exception cref="T:System.InvalidOperationException">与此 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer" /> 的列不能调整大小。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>在所有情况下引发异常。</summary>
      <param name="degrees">不使用此参数。</param>
      <exception cref="T:System.InvalidOperationException">方式。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟列完全可访问为 UI 自动化元素。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>检索与指定的属性值的元素。</summary>
      <returns>与搜索条件匹配的第一项;否则， null ，如果项目不匹配。</returns>
      <param name="startAfter">在容器中的项，在后开始搜索。</param>
      <param name="propertyId">包含值检索的属性。</param>
      <param name="value">检索的值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridDetailsPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DataGridRow" /> 类型在 UI 自动化。<see cref="T:System.Windows.Controls.DataGridRow" /> 可能存在也可能实际上不存在于内存。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.DataGridAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" /> 类的新实例。 </summary>
      <param name="item">在与此 <see cref="T:System.Windows.Automation.Peers.DataGridItemAutomationPeer" />的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的数据项。</param>
      <param name="dataGridPeer">与 <see cref="T:System.Windows.Controls.DataGrid" /> 保存 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的 <see cref="T:System.Windows.Automation.Peers.DataGridAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持组件指定的控件模式与此自动化对等类的对象。</summary>
      <returns>当前 <see cref="T:System.Windows.Automation.Peers.DataGridCellItemAutomationPeer" /> 对象，则为; <paramref name="patternInterface" /> 是一个支持的值;否则， null。有关更多信息，请参见备注。</returns>
      <param name="patternInterface">指定控件模式的枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送一个请求激活控件和激活其唯一，明确的事件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>按指定的属性值检索元素。</summary>
      <returns>与搜索条件匹配的第一项;否则， null ，如果项目不匹配。</returns>
      <param name="startAfter">在容器中的项，在后开始搜索。</param>
      <param name="propertyId">包含值检索的属性。</param>
      <param name="value">检索的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>移动容器对象的内容区域显示在可视区域 (视区) 内的控件的容器。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>添加当前元素到选定项的集合。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值项目是否已选中。 </summary>
      <returns>true ，如果元素已选中;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>从选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>清除所有选定的项并选择当前元素。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> 并作为调用的对象的容器的 UI 自动化提供程序 。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" /> 控件的提供程序。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取一个值 UI 自动化提供程序 是否允许多个子元素同时选择。</summary>
      <returns>true ，如果多个选择允许;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索选择的每个子元素的 UI 自动化提供程序 。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DataGridItemAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取指定的值 UI 自动化提供程序 是否至少需要一个子元素处于选中状态。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DataGridRow" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowAutomationPeer.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer.#ctor(System.Windows.Controls.Primitives.DataGridRowHeader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DatePickerAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DatePicker" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.#ctor(System.Windows.Controls.DatePicker)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 类的新实例。 </summary>
      <param name="owner">元素与此自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持组件指定的控件模式与此自动化对等类的对象。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">指定控件模式的枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>隐藏是控件的子代的所有节点、控件或目录。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>显示控件的所有子节点、控件或目录。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>获取状态 (展开或折叠) 控件。</summary>
      <returns>状态 (展开或折叠) 控件。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>获取指定的值的控件的值是否为只读。 </summary>
      <returns>true ，如果该值是只读的; false ，如果能修改它。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>设置控件的值。</summary>
      <param name="value">设置的值。该提供程序将该值来为适当的数据类型。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DatePickerAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>获取控件的值。</summary>
      <returns>表示控件的值的字符串。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DateTimeAutomationPeer">
      <summary>公开 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 和设置 UI 自动化的 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 类型。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.DateTimeAutomationPeer" />的控件模式实现。</summary>
      <returns>对象实现模式接口或 null ，如果指定的模式接口不受此等类实现。</returns>
      <param name="patternInterface">组件实现模式的类型检索。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项目列的号。</summary>
      <returns>确定包含该单元格或项的列的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取单元格或项目范围的列数。</summary>
      <returns>将范围的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> 表示该单元格或项的容器的 UI 自动化提供程序。</summary>
      <returns>表示单元格或项容器的 UI 自动化提供程序。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项行的号。</summary>
      <returns>确定包含该单元格或项目的行的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取单元格或项目范围的行数。</summary>
      <returns>将范围的行数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>发送一个请求激活控件和激活其唯一，明确的事件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>添加当前元素到选定项的集合。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值项目是否已选中。</summary>
      <returns>true ，如果元素已选中;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>从选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>清除所有选定的项并选择当前元素。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> 并作为调用的对象的容器的 UI 自动化提供程序。</summary>
      <returns>作为调用的对象的容器的提供程序。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>检索表示所有列标头与 table item 或单元格 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>检索表示所有行标头与 table item 或单元格 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DateTimeAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟项目完全可访问为 UI 自动化元素。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentAutomationPeer">
      <summary>显示 <see cref="F:System.Windows.Automation.ControlType.Document" /> 控件类型 在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />的 <see cref="T:System.Windows.FrameworkContentElement" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />控件的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetBoundingRectangleCore">
      <summary>获取表示元素屏幕坐标与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />的 <see cref="T:System.Windows.Rect" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />调用。</summary>
      <returns>边框。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />子元素的集合 <see cref="T:System.Windows.FrameworkContentElement" /> 的。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>由于 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 通过 <see cref="T:System.Windows.Automation.TextPattern" />允许访问其内容的访问，此方法始终返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /><see cref="T:System.Windows.FrameworkContentElement" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “形式的字符串文档”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClickablePointCore">
      <summary>获取表示的空间。 <see cref="T:System.Windows.FrameworkContentElement" /> 与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />的 <see cref="T:System.Windows.Point" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />调用。</summary>
      <returns>表示可单击空间在元素的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />的 <see cref="T:System.Windows.FrameworkContentElement" /> 的 控件模式 。 </summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />，此方法返回 <see cref="T:System.Windows.Automation.Provider.ITextProvider" />。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 由最终用户了解作为交互式进程 <see cref="T:System.Windows.FrameworkContentElement" /> 或用户可能了解 <see cref="T:System.Windows.FrameworkContentElement" /> 如导致控件的逻辑结构。 GUI的。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />调用。</summary>
      <returns>true 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> 屏幕的 <see cref="T:System.Windows.FrameworkContentElement" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentPageView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetAutomationIdCore">
      <summary>获取唯一标识 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 与此 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />的字符串。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />调用。</summary>
      <returns>包含自动标识符的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 的子元素的集合。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.DocumentViewer" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.#ctor(System.Windows.Controls.DocumentViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.DocumentViewer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /><see cref="T:System.Windows.Controls.DocumentViewer" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “DocumentViewer”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.DocumentViewer" /> 的 控件模式 。 </summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />，此方法返回此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />的 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 。此方法还设置 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" /> 作为 <see cref="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource" />。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “DocumentViewer”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 的 控件模式 。 </summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />，此方法返回 <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 引用。 </returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Expander" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />的 <see cref="T:System.Windows.Controls.Expander" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />的 <see cref="T:System.Windows.Controls.Expander" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /><see cref="T:System.Windows.Controls.Expander" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “expander”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />的 <see cref="T:System.Windows.Controls.Expander" /> 的 控件模式 。 </summary>
      <returns>如果 <paramref name="pattern" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />，此方法返回对 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" />的当前实例，否则此方法调用返回 null在 <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> 的基实现。</returns>
      <param name="pattern">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ExpanderAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>状态 (展开或折叠) 控件。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FixedPageAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Documents.FixedPage" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.#ctor(System.Windows.Documents.FixedPage)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />的 <see cref="T:System.Windows.Documents.FixedPage" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" />的 <see cref="T:System.Windows.Documents.FixedPage" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer" /><see cref="T:System.Windows.Documents.FixedPage" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “FixedPage”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentPageViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “FlowDocumentPageViewer”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentReader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />的 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentReader" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentReader" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentReader" /> 的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer" />的 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 的 控件模式 。 </summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView" />，此方法返回 this 指针。否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#CurrentView">
      <summary>获取当前控件特定视图。</summary>
      <returns>UI 自动化元素的当前视图的值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetSupportedViews">
      <summary>返回特定于控件的视图标识符的集合。</summary>
      <returns>标识视图可用于 UI 自动化元素值的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#GetViewName(System.Int32)">
      <summary>返回一个控件特定视图的名称。</summary>
      <returns>一个控件特定视图的名称。</returns>
      <param name="viewId">视图的 ID。 </param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System#Windows#Automation#Provider#IMultipleViewProvider#SetCurrentView(System.Int32)">
      <summary>设置当前控件特定视图。 </summary>
      <param name="viewId">视图的 ID。 </param>
    </member>
    <member name="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" /><see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “FlowDocumentScrollViewer”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 的 控件模式 。 </summary>
      <returns>支持控件模式的对象，如果 <paramref name="patternInterface" /> 是一个支持的值;否则， null。 </returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Frame" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />的 <see cref="T:System.Windows.Controls.Frame" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" />的 <see cref="T:System.Windows.Controls.Frame" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer" /><see cref="T:System.Windows.Controls.Frame" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “帧”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer">
      <summary>向 UI 自动化公开 <see cref="T:System.Windows.FrameworkContentElement" /> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.FrameworkContentElement" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetAutomationIdCore">
      <summary>获取一个字符串，该字符串唯一标识与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.FrameworkContentElement" />。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> 调用。</summary>
      <returns>唯一标识 <see cref="T:System.Windows.FrameworkContentElement" /> 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetHelpTextCore">
      <summary>获取描述与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.FrameworkContentElement" /> 的功能的字符串。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> 调用。</summary>
      <returns>描述元素的功能的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetLabeledByCore">
      <summary>获取目标为与此<see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.FrameworkContentElement" /> 的 <see cref="T:System.Windows.Controls.Label" /> 的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> 调用。</summary>
      <returns>作为 <see cref="T:System.Windows.Controls.Label" /> 目标的元素的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.FrameworkElement" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.FrameworkElement" /> 与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
      <summary>获取唯一标识 <see cref="T:System.Windows.FrameworkElement" /> 与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />的字符串。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />。</summary>
      <returns>; 如果没有自动标识符，元素的自动化标识符与 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />或 <see cref="F:System.String.Empty" /> 。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
      <summary>获取描述 <see cref="T:System.Windows.ContentElement" /> 功能与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />的字符串。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />。</summary>
      <returns>帮助文本，通常从 <see cref="T:System.Windows.Controls.ToolTip" />或 <see cref="F:System.String.Empty" /> ，如果没有帮助文本。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.ContentElement" /> 的文本标签。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>与此自动化对等类元素的文本标签。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.GridSplitter" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />的 <see cref="T:System.Windows.Controls.GridSplitter" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" /><see cref="T:System.Windows.Controls.GridSplitter" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “GridSplitter”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />的 控件模式 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" />，此方法返回 this 指针;否则此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果元素可以移动;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果元素可以调整大小;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果该元素可以旋转;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="x"> 控件的左侧的绝对屏幕坐标。</param>
      <param name="y"> 控件顶部的绝对屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="width"> 窗口的新宽度，以像素为单位。</param>
      <param name="height"> 窗口的新高度，均以像素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="degrees">旋转控件的范围数。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.GridView" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.#ctor(System.Windows.Controls.GridView,System.Windows.Controls.ListView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.GridView" /> 与此 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />。</param>
      <param name="listview">
        <see cref="T:System.Windows.Controls.ListView" />
        <see cref="T:System.Windows.Controls.GridView" /> 用作视图模式。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <returns>创建的项目。</returns>
      <param name="item">创建的项目。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetAutomationControlType">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />的元素的控件类型。</summary>
      <returns>枚举中的值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>获取指定的 UI 自动化 对等类的直接子元素的集合。</summary>
      <returns>子对象集合。</returns>
      <param name="children">子对象集合要获取。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与指定的 <paramref name="patternInterface" />的控件模式。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Table" />，此方法返回对象实现控件模式，否则此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用，该项目的集合更改。</summary>
      <param name="e">与事件关联的数据。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Peers#IViewAutomationPeer#ViewDetached">
      <summary>调用，也可以在自定义视图不再适用于控件。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取总列数在网格中。</summary>
      <returns>总列数在网格中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>返回指定单元格的 UI 自动化提供程序。</summary>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
      <param name="row">行的序号相关。</param>
      <param name="column">列的序号相关。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取总行数在网格中。</summary>
      <returns>总行数在网格中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetColumnHeaders">
      <summary>返回在表示表中所有列标题 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#GetRowHeaders">
      <summary>返回此数组中表示表中的所有行标题 UI 自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewAutomationPeer.System#Windows#Automation#Provider#ITableProvider#RowOrColumnMajor">
      <summary>获取遍历的主要定向表的。</summary>
      <returns>遍历的主要说明。  </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer">
      <summary>显示在 <see cref="T:System.Windows.Controls.GridView" /> 的单元格中 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />元素的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>如果此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 与 <see cref="T:System.Windows.Controls.TextBlock" /> 元素时，此方法返回 <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" />;否则，此方法返回 <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />元素的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>元素的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />元素的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.TableItem" />，此方法返回当前 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" />。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 由最终用户了解作为交互的组件或用户可能了解元素为使控件的逻辑结构。 GUI的。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />调用。</summary>
      <returns>如果此 <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer" /> 与 <see cref="T:System.Windows.Controls.TextBlock" /> 元素时，此方法返回 true;否则，此方法返回子元素的列表。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项目列的号。</summary>
      <returns>确定包含该单元格或项的列的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取单元格或项目范围的列数。</summary>
      <returns>将范围的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取实现 <see cref="T:System.Windows.Automation.GridPattern" /> 表示该单元格或项的容器的 UI 自动化提供程序。</summary>
      <returns>实现 <see cref="T:System.Windows.Automation.GridPattern" /> 表示单元格或项容器的 UI 自动化提供程序。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项行的号。</summary>
      <returns>确定包含该单元格或项目的行的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取单元格或项目范围的行数。</summary>
      <returns>将范围的行数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetColumnHeaderItems">
      <summary>检索 UI 表示形式所有列标头与 table item 或单元格的自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.System#Windows#Automation#Provider#ITableItemProvider#GetRowHeaderItems">
      <summary>检索 UI 表示形式所有行标头与 table item 或单元格的自动化提供程序的集合。</summary>
      <returns>UI 自动化提供程序的集合。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.GridViewColumnHeader)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />的 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />的 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /><see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “GridViewColumnHeader”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" />的 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的 控件模式 。 </summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform" /> 或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，此方法返回 this 指针;否则此方法返回 null。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanMove">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>true ，如果元素可以移动;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanResize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>true ，如果元素可以调整大小;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#CanRotate">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>true ，如果该元素可以旋转;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Move(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="x"> 控件的左侧的绝对屏幕坐标。</param>
      <param name="y"> 控件顶部的绝对屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Resize(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="width"> 窗口的新宽度，以像素为单位。</param>
      <param name="height"> 窗口的新高度，均以像素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System#Windows#Automation#Provider#ITransformProvider#Rotate(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="degrees"> 旋转控件的范围数。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.#ctor(System.Windows.Controls.GridViewHeaderRowPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />的 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" />的 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Header" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /><see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /><see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “GridViewHeaderRowPresenter”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer">
      <summary>显示在 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 的集合的数据项都 <see cref="T:System.Windows.Controls.GridView" /> 类型的。 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ListViewAutomationPeer)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />的数据项。</param>
      <param name="listviewAP">是此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />父的 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.DataItem" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetChildrenCore">
      <summary>获取 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的子元素的集合与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" />。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer" /><see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “ListViewItem”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.GroupBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.#ctor(System.Windows.Controls.GroupBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.GroupBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.GroupBox" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /><see cref="T:System.Windows.Controls.GroupBox" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “GroupBox”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.ContentElement" /> 的文本标签。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.GroupItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.GroupItem" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.#ctor(System.Windows.Controls.GroupItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.GroupItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.GroupItem" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /><see cref="T:System.Windows.Controls.GroupItem" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /><see cref="T:System.Windows.Controls.GroupItem" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “GroupItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /><see cref="T:System.Windows.Controls.GroupItem" /> 的控件模式。</summary>
      <returns>如果 <paramref name="pattern" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" /> ，并与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> 的 <see cref="T:System.Windows.Controls.GroupItem" />包含 <see cref="T:System.Windows.Controls.Expander" />，此方法返回对 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" />的当前实例。否则，此方法调用返回 null在 <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer" /> 的基实现。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Documents.Hyperlink" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.#ctor(System.Windows.Documents.Hyperlink)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />的 <see cref="T:System.Windows.Documents.Hyperlink" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /><see cref="T:System.Windows.Documents.Hyperlink" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “超链接”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /><see cref="T:System.Windows.Documents.Hyperlink" /> 的文本标签。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />调用。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" />的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer" /> 由最终用户理解的 <see cref="T:System.Windows.Documents.Hyperlink" /> ，在交互式可能了解 <see cref="T:System.Windows.Documents.Hyperlink" /> 如导致控件的逻辑结构。 GUI的用户。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />调用。</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Image" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />的 <see cref="T:System.Windows.Controls.Image" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" />的 <see cref="T:System.Windows.Controls.Image" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Image" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /><see cref="T:System.Windows.Controls.Image" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “image”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.InkCanvas" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.#ctor(System.Windows.Controls.InkCanvas)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />的 <see cref="T:System.Windows.Controls.InkCanvas" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" />的 <see cref="T:System.Windows.Controls.InkCanvas" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /><see cref="T:System.Windows.Controls.InkCanvas" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “InkCanvas”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.InkPresenter" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.#ctor(System.Windows.Controls.InkPresenter)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />的 <see cref="T:System.Windows.Controls.InkPresenter" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" />的 <see cref="T:System.Windows.Controls.InkPresenter" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /><see cref="T:System.Windows.Controls.InkPresenter" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “InkPresenter”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
      <summary>向 UI 自动化公开 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的数据项。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>在由派生类的构造函数调用时，提供基类值的初始化。</summary>
      <param name="item">与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的数据项。</param>
      <param name="itemsControlAutomationPeer">与容纳 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的 <see cref="T:System.Windows.Controls.ItemsControl" /> 关联的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>获取与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中的数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的快捷键。</summary>
      <returns>快捷键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
      <summary>获取与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中的数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的快捷键。</summary>
      <returns>快捷键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
      <summary>获取一个字符串，该字符串唯一标识对应于 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联的数据项的 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>一个包含 UI 自动化标识符的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
      <summary>获取表示指定的 <see cref="T:System.Windows.UIElement" /> 的边框的 <see cref="T:System.Windows.Rect" />。</summary>
      <returns>边框。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
      <summary>获取与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中的数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的子元素的集合。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
      <summary>获取表示指定的 <see cref="T:System.Windows.UIElement" /> 上可点击空间的 <see cref="T:System.Windows.Point" />。</summary>
      <returns>表示指定的 <see cref="T:System.Windows.UIElement" /> 上可点击空间的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
      <summary>获取描述与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的功能的字符串。</summary>
      <returns>帮助文本。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
      <summary>获取传送指定的 <see cref="T:System.Windows.UIElement" /> 的可视状态的字符串。</summary>
      <returns>状态。例如，“Busy”或“Online”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
      <summary>获取包含指定的 <see cref="T:System.Windows.UIElement" /> 表示的项类型的可读字符串。</summary>
      <returns>项类型。例如，“Mail Message”或“Contact”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
      <summary>获取目标为指定的 <see cref="T:System.Windows.UIElement" /> 的 <see cref="T:System.Windows.Controls.Label" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>作为 <see cref="T:System.Windows.Controls.Label" /> 目标的元素的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
      <summary>获取与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中的数据项相对应的 <see cref="T:System.Windows.UIElement" /> 的文本标签。</summary>
      <returns>文本标签。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 是否以特定方向布局。</summary>
      <returns>指定的 <see cref="T:System.Windows.UIElement" /> 的方向。此外，如果 <see cref="T:System.Windows.UIElement" /> 不以特定方向布局，则此方法返回 <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>返回支持与此自动化对等方关联的元素的指定控件模式的对象。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
      <param name="patternInterface">指定控件模式的枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 当前是否具有键盘输入焦点。</summary>
      <returns>如果指定的 <see cref="T:System.Windows.UIElement" /> 具有键盘输入焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 是否包含向用户显示的数据。</summary>
      <returns>如果元素为内容元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
      <summary>获取一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.UIElement" /> 是否被最终用户理解为交互式元素。</summary>
      <returns>如果元素为控件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 是否可以接收和发送事件。</summary>
      <returns>如果 UI 自动化同级可以接收和发送事件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 是否可以接受键盘焦点。</summary>
      <returns>如果此元素可以接受键盘焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 是否不在屏幕上。</summary>
      <returns>如果指定的 <see cref="T:System.Windows.UIElement" /> 不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
      <summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.UIElement" /> 是否包含受保护的内容。</summary>
      <returns>如果指定的 <see cref="T:System.Windows.UIElement" /> 包含受保护的内容，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
      <summary>获取一个值，该值指示是否需要在表单上填写指定的 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>如果需要填写指定的 <see cref="T:System.Windows.UIElement" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的数据项。</summary>
      <returns>数据项。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>获取与包含 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的 <see cref="T:System.Windows.Controls.ItemsControl" /> 关联的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。</summary>
      <returns>与此 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象关联的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
      <summary>对指定的 <see cref="T:System.Windows.UIElement" /> 设置键盘输入焦点。<see cref="T:System.Windows.UIElement" /> 与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合（与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 关联）中的数据项相对应。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.System#Windows#Automation#Provider#IVirtualizedItemProvider#Realize">
      <summary>使虚拟项像 UI 自动化元素一样可完全访问。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ItemsControl" /> 类型在 UI 自动化。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>为基类提供的值初始化，在调用由派生类的构造函数。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />的 <see cref="T:System.Windows.Controls.ItemsControl" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>当重写在派生类中，此 <see cref="T:System.Windows.Controls.ItemsControl" />的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 的新实例数据项的。</summary>
      <returns>新 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 创建的。</returns>
      <param name="item">与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" />的数据项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>返回指定对象的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 。</summary>
      <returns>指定对象的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 。</returns>
      <param name="item">项可以访问 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /><see cref="T:System.Windows.Controls.ItemsControl" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />的 <see cref="T:System.Windows.Controls.ItemsControl" /> 的 控件模式 。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />的 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemsControlAutomationPeer.IsVirtualized">
      <summary>获取一个值 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 是否应返回未启用的子项的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 应返回未启用的子项的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象; false ，如果 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 应返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象所有子项。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.System#Windows#Automation#Provider#IItemContainerProvider#FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)">
      <summary>按指定的属性值检索元素。</summary>
      <returns>与搜索条件匹配的第一项;否则， null ，如果项目不匹配。</returns>
      <param name="startAfter">在容器中的项，在后开始搜索。</param>
      <param name="propertyId">包含值检索的属性。</param>
      <param name="value">检索的值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.IViewAutomationPeer">
      <summary>允许从 <see cref="T:System.Windows.Controls.ViewBase" /> 派生来实现自动化对等类功能是特定于该个自定义视图 <see cref="T:System.Windows.Controls.ListView" /> 的自定义视图。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <returns>新 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 实例。</returns>
      <param name="item">与 <see cref="T:System.Windows.Controls.ListView" /> 此 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />使用的 <see cref="T:System.Windows.Controls.ListViewItem" /> 。 </param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetAutomationControlType">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" />元素的 控件类型 。</summary>
      <returns>在 <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> 枚举的值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
      <summary>获取指定的 UI 自动化 对等类的直接子元素的集合。</summary>
      <returns>所有项目的自动化对等类在控件。除了列表项外，如果视图包含交互或信息性组件，这些组件的自动化对等类必须添加到列表。</returns>
      <param name="children">列表项的自动化对等类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与指定的 <paramref name="patternInterface" />的 控件模式 。</summary>
      <returns>返回对象实现控件模式。如果此方法返回 null，请从 <see cref="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> 的返回值。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用 <see cref="T:System.Windows.Controls.ListView" /> ，该项目的集合更改。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached">
      <summary>调用，也可以在自定义视图不再适用于 <see cref="T:System.Windows.Controls.ListView" />。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.LabelAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Label" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.#ctor(System.Windows.Controls.Label)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />的 <see cref="T:System.Windows.Controls.Label" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />的 <see cref="T:System.Windows.Controls.Label" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /><see cref="T:System.Windows.Controls.Label" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “标签”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /><see cref="T:System.Windows.Controls.Label" /> 的文本标签。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />调用。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ListBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</returns>
      <param name="item">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /><see cref="T:System.Windows.Controls.ListBox" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ListBox”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>显示在 <see cref="T:System.Windows.Controls.ListBox" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的项在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 。</param>
      <param name="selectorAutomationPeer">是此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />父的 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /><see cref="T:System.Windows.Controls.ListBoxItem" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ListBoxItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />，此方法返回此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />当前实例。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer">
      <summary>显示数据项的 <see cref="T:System.Windows.UIElement" /> 子树在 <see cref="T:System.Windows.Controls.ListBox" /> 在 UI 自动化。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /><see cref="T:System.Windows.Controls.ListBoxItem" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “ListBoxItem”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListViewAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ListView" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.#ctor(System.Windows.Controls.ListView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListView" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 类的新实例。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 实例。</returns>
      <param name="item">与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListViewItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListView" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /><see cref="T:System.Windows.Controls.ListView" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /><see cref="T:System.Windows.Controls.ListView" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ListView”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的 <see cref="T:System.Windows.Controls.ListView" /> 的 控件模式 。</summary>
      <returns>视图的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 此 <see cref="T:System.Windows.Controls.ListView" /> 使用。默认 <see cref="T:System.Windows.Controls.ListView" /> 实现使用 <see cref="T:System.Windows.Controls.GridView" />，因此，此方法返回 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" />。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ListViewAutomationPeer.ViewAutomationPeer">
      <summary>获取此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> 。 </summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />的接口实例。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.MediaElement" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />的 <see cref="T:System.Windows.Controls.MediaElement" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" />的 <see cref="T:System.Windows.Controls.MediaElement" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /><see cref="T:System.Windows.Controls.MediaElement" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “MediaElement”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Menu" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.#ctor(System.Windows.Controls.Menu)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />的 <see cref="T:System.Windows.Controls.Menu" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" />的 <see cref="T:System.Windows.Controls.Menu" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /><see cref="T:System.Windows.Controls.Menu" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “菜单”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MenuItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.MenuItem" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.#ctor(System.Windows.Controls.MenuItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.MenuItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAccessKeyCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.MenuItem" /> 的 访问键 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItem" />的 访问键 。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.MenuItem" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /><see cref="T:System.Windows.Controls.MenuItem" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /><see cref="T:System.Windows.Controls.MenuItem" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “MenuItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /><see cref="T:System.Windows.Controls.MenuItem" /> 的文本标签。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>包含标签的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.MenuItem" /> 的 控件模式 。</summary>
      <returns>支持控件模式的对象，如果 <paramref name="patternInterface" /> 是一个支持的值;否则， null。 </returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>状态 (展开或折叠) 控件。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.MenuItemAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件的切换状态。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.#ctor(System.Windows.Navigation.NavigationWindow)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Navigation.NavigationWindow" /> 与此 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.ContentElement" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “NavigationWindow”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.PasswordBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.PasswordBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.PasswordBox" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /><see cref="T:System.Windows.Controls.PasswordBox" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “PasswordBox”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.PasswordBox" /> 的 控件模式 。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value" /> 枚举值。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.IsPasswordCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> 包含受保护的内容的 <see cref="T:System.Windows.Controls.PasswordBox" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />调用。</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果该值是只读的; false ，如果能修改它。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value"> 控件的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件的字符串值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ProgressBar" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.ProgressBar" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.ProgressBar" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /><see cref="T:System.Windows.Controls.ProgressBar" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ProgressBar”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.ProgressBar" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" /> ，并 <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 是 true，此方法返回 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />的当前实例;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果该值是只读的;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>用更改值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="val"> 设置的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>对更改值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.RadioButton" /> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RadioButton" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RadioButton" /> 的控件类型。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RadioButton" /> 对象的控件类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /> 关联的 <see cref="T:System.Windows.ContentElement" /> 的名称。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“RadioButton”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.RadioButton" /> 的控件模式。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是支持的值，则为支持控件模式的对象；否则为 null。</returns>
      <param name="patternInterface">枚举中的一个值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>如果元素已选定，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>选择容器。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果范围值是只读的;否则 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>用更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件支持的最大大小值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件支持的最小射程值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="val"> 设置的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>对更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件的值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.ContentElement" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “RepeatButton”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />的 <see cref="T:System.Windows.ContentElement" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke" />，此方法返回对 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />的当前实例;否则， null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.RichTextBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.RichTextBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.RichTextBox" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />子元素的集合 <see cref="T:System.Windows.Controls.RichTextBox" /> 的。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /><see cref="T:System.Windows.Controls.RichTextBox" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “RichTextBox”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.RichTextBox" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text" />，此方法返回 <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 引用。如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" />，此方法返回新的 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含单词 “滚动条”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
      <summary>调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />。</summary>
      <returns>具有 <see cref="F:System.Double.NaN" />， <see cref="F:System.Double.NaN" />的值 <see cref="T:System.Windows.Point" /> ;仅可在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 点是子元素。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> 在某个特定方向的布局 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal" /> 或 <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical" />，根据 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />的方向。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /><see cref="T:System.Windows.Controls.ScrollViewer" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /><see cref="T:System.Windows.Controls.ScrollViewer" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “ScrollViewer”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" />的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> 由最终用户理解为交互式或如导致控件的逻辑结构。 GUI的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />调用。</summary>
      <returns>如果 <see cref="P:System.Windows.FrameworkElement.TemplatedParent" /> 是 null，此方法返回 true;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>值指示控件是否可以移到该水平方向。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>水平滚动位置为控件中的百分比总内容区域。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>返回 S_OK ，如果成功或 false 否则为。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="horizontalAmount"> 对控件的水平增量特定。</param>
      <param name="verticalAmount"> 对控件的垂直增量特定。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="horizontalPercent"> 水平滚动的百分比。</param>
      <param name="verticalPercent"> 垂直滚动的百分比。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果该控件可以垂直滚动;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>垂直滚动位置为控件中的百分比总内容区域。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>返回 S_OK ，如果成功或 false 否则为。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List" /> 枚举值。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />，此方法返回指向当前实例;否则 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果多个选择允许;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>UI 自动化提供程序的集合。，如果多个选择允许，则为 true;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>返回 S_OK ，如果成功或 false 否则为。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
      <summary>显示在 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的项在 UI 自动化。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>，但由派生类的构造函数时，调用为基类提供的值初始化。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />的项的对象。</param>
      <param name="selectorAutomationPeer">与 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 保存 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与指定的 <see cref="T:System.Windows.Automation.Peers.PatternInterface" />的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection" />，此方法返回此 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" />当前实例。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果元素已选中;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>选择容器。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SeparatorAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Separator" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.#ctor(System.Windows.Controls.Separator)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" />的 <see cref="T:System.Windows.Controls.Separator" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" />的 <see cref="T:System.Windows.Controls.Separator" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Separator" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /><see cref="T:System.Windows.Controls.Separator" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “separator”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Slider" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />的 <see cref="T:System.Windows.Controls.Slider" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />的 <see cref="T:System.Windows.Controls.Slider" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /><see cref="T:System.Windows.Controls.Slider" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “slider”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
      <summary>调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />。</summary>
      <returns>包含 <see cref="F:System.Double.NaN" />， <see cref="F:System.Double.NaN" />的 <see cref="T:System.Windows.Point" /> ;仅可在 <see cref="T:System.Windows.Controls.TabControl" /> 点是子 <see cref="T:System.Windows.Controls.TabItem" /> 元素。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “状态栏”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBarItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “StatusBarItem”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
      <summary>向 UI 自动化 公开 <see cref="T:System.Windows.Controls.TabControl" /> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabControl" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>创建一个新的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />。</summary>
      <returns>创建的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 对象。</returns>
      <param name="item">与新的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与新的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
      <summary>获取与新的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 关联的 <see cref="T:System.Windows.Controls.TabItem" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</summary>
      <returns>包含“TabControl”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
      <summary>此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</summary>
      <returns>一个包含 <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> 的 <see cref="T:System.Windows.Point" />；在 <see cref="T:System.Windows.Controls.TabControl" /> 中只有 <see cref="T:System.Windows.Controls.TabItem" /> 子元素是可点击的点。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TabControlAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>如果成功，则返回 S_OK，否则返回错误值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.TabItem" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.TabControlAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.TabItem" /> 。</param>
      <param name="tabControlAutomationPeer">是此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />父的 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.TabItem" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /><see cref="T:System.Windows.Controls.TabItem" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /><see cref="T:System.Windows.Controls.TabItem" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “TabItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /><see cref="T:System.Windows.Controls.TabItem" /> 的文本标签。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>包含标签的字符串。如果设置为，此方法返回 <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 属性的值;否则此方法将返回 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性的值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer">
      <summary>显示数据项的 <see cref="T:System.Windows.UIElement" /> 子树在 <see cref="T:System.Windows.Controls.TabControl" /> 在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer.#ctor(System.Windows.Controls.TabItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" />的 <see cref="T:System.Windows.Controls.TabItem" /> 。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Documents.Table" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.#ctor(System.Windows.Documents.Table)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />的 <see cref="T:System.Windows.Documents.Table" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />的 <see cref="T:System.Windows.Documents.Table" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Table" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /><see cref="T:System.Windows.Documents.Table" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “表”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" />的 <see cref="T:System.Windows.Documents.Table" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" />，此方法返回 this 指针;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 由最终用户理解为交互式或如导致控件的逻辑结构。 GUI的 <see cref="T:System.Windows.Documents.Table" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />调用。</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#ColumnCount">
      <summary>获取总列数在网格中。</summary>
      <returns>总列数在网格中。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#GetItem(System.Int32,System.Int32)">
      <summary>检索指定单元格的 UI 自动化提供程序。</summary>
      <returns>指定单元格的 UI 自动化提供程序。</returns>
      <param name="row"> 行的序号相关。</param>
      <param name="column"> 列的序号相关。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableAutomationPeer.System#Windows#Automation#Provider#IGridProvider#RowCount">
      <summary>获取总行数在网格中。</summary>
      <returns>总行数在网格中。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TableCellAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Documents.TableCell" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.#ctor(System.Windows.Documents.TableCell)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />的 <see cref="T:System.Windows.Documents.TableCell" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />的 <see cref="T:System.Windows.Documents.TableCell" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /><see cref="T:System.Windows.Documents.TableCell" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “TableCell”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetLocalizedControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />控件类型 的本地化版本 <see cref="T:System.Windows.Documents.TableCell" /> 的。</summary>
      <returns>包含 “单元格”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />的 <see cref="T:System.Windows.Documents.TableCell" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem" />，此方法返回 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" />的当前实例;否则，此方法返回 null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 由最终用户理解为交互式或如导致控件的逻辑结构。 GUI的 <see cref="T:System.Windows.Documents.TableCell" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />调用。</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Column">
      <summary>获取包含该单元格或项目列的号。</summary>
      <returns>确定包含该单元格或项的列的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ColumnSpan">
      <summary>获取单元格或项目范围的列数。</summary>
      <returns>将范围的列数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#ContainingGrid">
      <summary>获取实现 <see cref="T:System.Windows.Automation.GridPattern" /> 表示该单元格或项的容器的 UI 自动化提供程序。</summary>
      <returns>实现 <see cref="T:System.Windows.Automation.GridPattern" /> 表示单元格或项容器的 UI 自动化提供程序。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#Row">
      <summary>获取包含该单元格或项行的号。</summary>
      <returns>确定包含该单元格或项目的行的一个从零开始的号。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TableCellAutomationPeer.System#Windows#Automation#Provider#IGridItemProvider#RowSpan">
      <summary>获取单元格或项目范围的行数。</summary>
      <returns>将范围的行数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Automation.TextPattern" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />的 <see cref="T:System.Windows.Automation.TextPattern" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer" />元素的文本标签。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 或 <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> 的值，如果其中的一组;否则此方法返回空字符串。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.TextBlock" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />的 <see cref="T:System.Windows.Controls.TextBlock" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />的 <see cref="T:System.Windows.Controls.TextBlock" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /><see cref="T:System.Windows.Controls.TextBlock" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>子元素集合或 null ，如果 <see cref="T:System.Windows.Controls.TextBlock" /> 为空。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /><see cref="T:System.Windows.Controls.TextBlock" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含单词 “TextBlock”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
      <summary>获取或设置一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> 这一最终用户了解作为交互式进程或如导致控件的逻辑结构。 GUI的 <see cref="T:System.Windows.Controls.TextBlock" /> 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />。</summary>
      <returns>false ，如果该元素是模板的一部分;否则 true。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.TextBox" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.TextBox" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.TextBox" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /><see cref="T:System.Windows.Controls.TextBox" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “文本框”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />的 <see cref="T:System.Windows.Controls.TextBox" /> 的 控件模式 。</summary>
      <returns>支持控件模式的对象，如果 <paramref name="patternInterface" /> 是一个支持的值;否则， null。</returns>
      <param name="patternInterface">枚举中的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果该值是只读的; false ，如果能修改它。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value"> 控件的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件的字符串值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextElementAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Documents.TextElement" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.#ctor(System.Windows.Documents.TextElement)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />的 <see cref="T:System.Windows.Documents.TextElement" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetBoundingRectangleCore">
      <summary>获取表示与此 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /><see cref="T:System.Windows.Documents.TextElement" /> 的边框的 <see cref="T:System.Windows.Rect" /> 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> 包含元素的坐标或 <see cref="P:System.Windows.Rect.Empty" /> ，如果该元素不是 <see cref="T:System.Windows.Interop.HwndSource" /> 和 <see cref="T:System.Windows.PresentationSource" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /><see cref="T:System.Windows.Documents.TextElement" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetClickablePointCore">
      <summary>获取表示的空间。 <see cref="T:System.Windows.Documents.TextElement" /> 与此 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" />的 <see cref="T:System.Windows.Point" /> 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />。</summary>
      <returns>在允许单击元素的 <see cref="T:System.Windows.Point" /> 。point 值为 (<see cref="F:System.Double.NaN" />， <see cref="F:System.Double.NaN" />)，如果该元素不是 <see cref="T:System.Windows.Interop.HwndSource" /> 和 <see cref="T:System.Windows.PresentationSource" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer" /> 关闭屏幕的 <see cref="T:System.Windows.Documents.TextElement" /> 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “Thumb”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此自动化对等类包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>false 在所有情况下。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的 控件类型 。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /><see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “按钮”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle" />，此方法返回 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />，否则 null的当前实例。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>控件的切换状态。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolBarAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ToolBar" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.#ctor(System.Windows.Controls.ToolBar)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.ToolBar" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" />的 <see cref="T:System.Windows.Controls.ToolBar" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /><see cref="T:System.Windows.Controls.ToolBar" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含单词 “工具栏”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToolTipAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.ToolTip" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.#ctor(System.Windows.Controls.ToolTip)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />的 <see cref="T:System.Windows.Controls.ToolTip" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />的 <see cref="T:System.Windows.Controls.ToolTip" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" /><see cref="T:System.Windows.Controls.ToolTip" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “工具提示”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.TreeView" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" />的 <see cref="T:System.Windows.Controls.TreeView" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>本 <see cref="T:System.Windows.Controls.TreeView" />的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合创建 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例数据项的。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例 <paramref name="item" />的。</returns>
      <param name="item">与 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />的数据项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />的 <see cref="T:System.Windows.ContentElement" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree" />.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.ContentElement" /> 的子元素的集合。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />。</summary>
      <returns>与此 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /><see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 元素的集合或 null ，如果 <see cref="T:System.Windows.Controls.TreeView" /> 为空。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.ContentElement" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “TreeView”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />的 <see cref="T:System.Windows.ContentElement" /> 的 控件模式 。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />的当前实例或 null。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>获取指定的值 UI 自动化提供程序是否支持多个子元素同时选择。</summary>
      <returns>true ，如果多个选择允许;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>检索选择的每个子元素的一个 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序的集合。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>获取指定的值 UI 自动化提供程序是否至少需要一个子元素处于选中状态。</summary>
      <returns>true ，如果需要选择;否则 false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer">
      <summary>显示包含数据项的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer,System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 类的新实例。 </summary>
      <param name="item">在与此 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的数据项。</param>
      <param name="itemsControlAutomationPeer">与 <see cref="T:System.Windows.Controls.ItemsControl" /> 保存 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> 。</param>
      <param name="parentDataItemAutomationPeer">是父到此 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />的 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /><see cref="T:System.Windows.Controls.TreeViewItem" /> 的控件类型。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> 在所有情况下。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /><see cref="T:System.Windows.Controls.TreeViewItem" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含值 TreeViewItem的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />元素的控件模式。</summary>
      <returns>对象实现模式接口或 null ，如果指定的模式接口不受此等类实现。</returns>
      <param name="patternInterface">组件实现模式的类型检索。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.ParentDataItemAutomationPeer">
      <summary>获取是父将此自动化对等类的 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 。</summary>
      <returns>父自动化对等类。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>隐藏是控件的子代的所有节点、控件或目录。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>显示控件的所有子节点、控件或目录。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>获取为状态，展开或折叠，该控件。</summary>
      <returns>状态，展开或折叠，控件。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>移动容器对象的内容区域来显示在可视区域 (视区) 内的控件的容器。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>添加当前元素到选定项的集合。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI 自动化元素不再可用。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>获取一个值项目是否已选中。</summary>
      <returns>true ，如果项目被选中;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>从选定项的集合中移除当前元素。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI 自动化元素不再可用。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>清除所有选择然后选择当前元素。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotAvailableException">UI 自动化元素不再可用。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>获取实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> 并作为调用的对象的容器的 UI 自动化提供程序。</summary>
      <returns>UI 自动化提供程序。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.TreeViewItem" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>本 <see cref="T:System.Windows.Controls.TreeView" />的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合创建 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例数据项的。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" /> 的新实例 <paramref name="item" />的。</returns>
      <param name="item">与 <see cref="T:System.Windows.Automation.Peers.TreeViewDataItemAutomationPeer" />的数据项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.FindOrCreateItemAutomationPeer(System.Object)">
      <summary>返回指定对象的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 。</summary>
      <returns>指定对象的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 。</returns>
      <param name="item">项可以访问 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetChildrenCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /><see cref="T:System.Windows.Controls.TreeViewItem" /> 的子元素的集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />调用。</summary>
      <returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /><see cref="T:System.Windows.Controls.TreeViewItem" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含 “TreeViewItem”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 控件模式 。</summary>
      <returns>如果 <paramref name="patternInterface" /> 是 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem" />、 <see cref="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem" />或 <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse" />，此方法返回 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" />的当前实例;否则，它将返回 null。</returns>
      <param name="patternInterface">一个枚举值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>状态 (展开或折叠) 控件。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>true ，如果元素已选中;否则 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>选择容器。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.UserControlAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.UserControl" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.#ctor(System.Windows.Controls.UserControl)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />的 <see cref="T:System.Windows.Controls.UserControl" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />的 <see cref="T:System.Windows.Controls.UserControl" /> 的 控件类型 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />调用。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /><see cref="T:System.Windows.Controls.UserControl" /> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />调用。</summary>
      <returns>包含该控件的名称的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Controls.Viewport3D" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.#ctor(System.Windows.Controls.Viewport3D)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" />的 <see cref="T:System.Windows.Controls.Viewport3D" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" />的 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom" />
      </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /><see cref="T:System.Windows.Controls.Viewport3D" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含 “Viewport3D”的字符串。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.WindowAutomationPeer">
      <summary>显示 <see cref="T:System.Windows.Window" /> 类型在 UI 自动化。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.#ctor(System.Windows.Window)">
      <summary>初始化 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> 类的新实例。</summary>
      <param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />的 <see cref="T:System.Windows.Window" /> 。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetAutomationControlTypeCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />的 <see cref="T:System.Windows.Window" /> 的 控件类型 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Window" /> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetBoundingRectangleCore">
      <summary>获取表示与此 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /><see cref="T:System.Windows.Window" /> 的边框的 <see cref="T:System.Windows.Rect" /> 。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />。</summary>
      <returns>表示 <see cref="T:System.Windows.Window" />的屏幕坐标的 <see cref="T:System.Windows.Rect" /> 。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetClassNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /><see cref="T:System.Windows.Window" /> 的名称。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />。</summary>
      <returns>包含单词 “窗口”的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetNameCore">
      <summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" /><see cref="T:System.Windows.Window" /> 的文本标签。调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />。</summary>
      <returns>包含 <see cref="T:System.Windows.Window" />的 <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 或 <see cref="P:System.Windows.FrameworkElement.Name" /> 的字符串或 <see cref="F:System.String.Empty" /> ，如果名称是 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer" /> 对象屏幕的 <see cref="T:System.Windows.Controls.GroupItem" /> 控件。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer" /> 对象屏幕的 <see cref="T:System.Windows.Controls.ListBoxItem" /> 控件。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 对象屏幕的 <see cref="T:System.Windows.Controls.MenuItem" /> 控件。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" /> 对象屏幕的 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 控件。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer" /> 对象屏幕的 <see cref="T:System.Windows.Controls.TabItem" /> 控件。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsContentElementCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer" /> 是元素包含数据呈现给用户的 <see cref="T:System.Windows.Documents.Table" /> 。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsContentElementCore">
      <summary>获取一个值此 <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer" /> 的 <see cref="T:System.Windows.Documents.TableCell" /> 是否包含数据呈现给用户的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />调用。</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.IsOffscreenCore">
      <summary>获取一个值是否与此 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 对象屏幕的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />调用。</summary>
      <returns>true ，如果元素不在屏幕上;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLabeledByCore">
      <summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Label" /> that is targeted to the <see cref="T:System.Windows.ContentElement" /> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer" />. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />.</summary>
      <returns>The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label" />.</returns>
    </member>
    <member name="T:System.Windows.Baml2006.Baml2006Reader">
      <summary>处理优化 BAML 形式的 XAML，并生成 XAML 节点流。</summary>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream)">
      <summary>基于输入流初始化 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 类的新实例。</summary>
      <param name="stream">源 BAML 的输入流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.IO.Stream,System.Xaml.XamlReaderSettings)">
      <summary>基于输入流和读取器设置初始化 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 类的新实例。</summary>
      <param name="stream">源 BAML 的输入流。</param>
      <param name="xamlReaderSettings">读取器设置。请参见“备注”。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="xamlReaderSettings" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.#ctor(System.String)">
      <summary>基于要读取的本地文件的文件名初始化 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 类的新实例。</summary>
      <param name="fileName">声明文件路径的字符串，该文件包含要读取的 BAML。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Baml2006.Baml2006Reader" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源；否则为 false。</param>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.IsEof">
      <summary>获取一个值，该值报告读取器位置是否位于文件结尾。</summary>
      <returns>如果读取器位置位于文件结尾，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Member">
      <summary>如果读取器位置在 <see cref="F:System.Xaml.XamlNodeType.StartMember" /> 上，则获取位于读取器位置处的当前成员。</summary>
      <returns>当前成员，或者，如果位置不在成员上，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Namespace">
      <summary>从当前节点中获取 XAML 命名空间。</summary>
      <returns>如果可用，则为 XAML 命名空间，否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.NodeType">
      <summary>获取当前节点的类型。</summary>
      <returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Baml2006.Baml2006Reader.Read">
      <summary>提供源 BAML 中的下一个 XAML 节点（如果节点可用）。</summary>
      <returns>如果某节点可用，则为 true；否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">遍历期间会释放读取器。</exception>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.SchemaContext">
      <summary>获取一个对象，该对象提供信息集的架构上下文信息。</summary>
      <returns>一个对象，该对象提供信息集的架构上下文信息。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#HasLineInfo">
      <summary>请参见 <see cref="P:System.Xaml.IXamlLineInfo.HasLineInfo" />。</summary>
      <returns>如果行信息可用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LineNumber">
      <summary>请参见 <see cref="P:System.Xaml.IXamlLineInfo.LineNumber" />。</summary>
      <returns>要报告的行号。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.System#Xaml#IXamlLineInfo#LinePosition">
      <summary>请参见 <see cref="P:System.Xaml.IXamlLineInfo.LinePosition" />。</summary>
      <returns>要报告的行位置。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Type">
      <summary>获取当前节点的 <see cref="T:System.Xaml.XamlType" />。</summary>
      <returns>当前节点的 <see cref="T:System.Xaml.XamlType" />；如果位置不在对象上，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Baml2006.Baml2006Reader.Value">
      <summary>获取当前节点的值。</summary>
      <returns>当前节点的值；如果位置不在 <see cref="F:System.Xaml.XamlNodeType.Value" /> 节点类型上，则为 null。</returns>
    </member>
    <member name="T:System.Windows.Controls.AccessText">
      <summary>指定一个下划线用作访问键的字符。</summary>
    </member>
    <member name="M:System.Windows.Controls.AccessText.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AccessText" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.AccessText.AccessKey">
      <summary>提供对遵循第一个下划线字符的字符的只读访问。</summary>
      <returns>返回的字符。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)">
      <summary>位置和大小 <see cref="T:System.Windows.Controls.AccessText" /> 对象的内容。 </summary>
      <returns>内容的大小。</returns>
      <param name="arrangeSize">用于将该目录的计算的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Background">
      <summary>获取或设置加载内容区域的 <see cref="T:System.Windows.Media.Brush" /> 。  </summary>
      <returns>加载内容区域的 <see cref="T:System.Windows.Media.Brush" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.Background" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.BaselineOffset">
      <summary>获取或设置调整文本基线偏移位置。 <see cref="T:System.Windows.Controls.AccessText" /> 元素的值。  </summary>
      <returns>调整基线偏移位置的数量。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.BaselineOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.BaselineOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.BaselineOffset" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontFamily">
      <summary>获取或设置字体系列使用 <see cref="T:System.Windows.Controls.AccessText" /> 元素。  </summary>
      <returns>使用的字体系列。默认值为指标的 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 所依赖的字体。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontFamily" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontFamily" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontSize">
      <summary>获取或设置字号使用 <see cref="T:System.Windows.Controls.AccessText" /> 元素。  </summary>
      <returns>使用的字体大小。默认值为指标的 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 所依赖的字体大小。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontSize" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontSize" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStretch">
      <summary>获取或设置选择的规则 <see cref="T:System.Windows.FontStretch" /> 属性，封装或从 <see cref="T:System.Windows.Media.FontFamily" />的扩展的字体。 </summary>
      <returns>程度相对字体拉伸。默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontStretch" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontStretch" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontStyle">
      <summary>获取或设置字体样式使用 <see cref="T:System.Windows.Controls.AccessText" /> 元素。 </summary>
      <returns>使用的字体样式;例如，规则，斜体或倾斜。指标的 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 依赖于默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontStyle" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.FontWeight">
      <summary>获取或设置字体权重使用 <see cref="T:System.Windows.Controls.AccessText" /> 元素。 </summary>
      <returns>使用的字体权重。指标的 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 依赖于默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.FontWeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.FontWeight" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Foreground">
      <summary>获取或设置绘制元素的文本内容的 <see cref="T:System.Windows.Media.Brush" /> 。 </summary>
      <returns>绘制文本的 <see cref="T:System.Windows.Media.Brush" /> 。默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.Foreground" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.Foreground" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.GetVisualChild(System.Int32)">
      <summary>获取一个可视子元素的索引。</summary>
      <returns>返回表示一个可视子元素的索引的整数。</returns>
      <param name="index">返回的可视子元素的索引。</param>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineHeight">
      <summary>获取或设置高度每个行框。 </summary>
      <returns>指定高度每个行框中的二进制文件。此值必须等于或大于 0.0034 和等于或小于然后 160000。<see cref="F:System.Double.NaN" /> 的值 (等效于 Auto的属性值) 导致行高度从当前字体特征自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.LineHeight" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LineStackingStrategy">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 属性如何强制实施。 </summary>
      <returns>确定 <see cref="P:System.Windows.Controls.AccessText.LineHeight" /> 属性的行为的 <see cref="T:System.Windows.LineStackingStrategy" /> 值。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.LogicalChildren">
      <summary>获取重复 <see cref="T:System.Windows.Controls.AccessText" /> 元素的逻辑种属性元素的枚举器。 </summary>
      <returns>重复此元素的逻辑种属性元素的枚举器。</returns>
    </member>
    <member name="M:System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)">
      <summary>重新度量控件。 </summary>
      <returns>控件的大小。不能超过控件的最大大小限制。</returns>
      <param name="constraint">控件的最大大小限制。返回值不能超过此大小。</param>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="value">将对象添加到 <see cref="T:System.Windows.Controls.AccessText" />。</param>
    </member>
    <member name="M:System.Windows.Controls.AccessText.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.AccessText.Text">
      <summary>获取或设置由 <see cref="T:System.Windows.Controls.AccessText" /> 元素显示的文本。 </summary>
      <returns>不带第一个下划线字符的文本。默认值为空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextAlignment">
      <summary>获取或设置为内容的水平对齐。  </summary>
      <returns>文本的水平对齐。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextAlignment" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextAlignment" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextDecorations">
      <summary>获取或设置添加到 <see cref="T:System.Windows.Controls.AccessText" /> 元素的文本的修饰。 </summary>
      <returns>
        <see cref="T:System.Windows.TextDecorations" /> 适用于 <see cref="T:System.Windows.Controls.AccessText" />的文本。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextDecorations" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextDecorations" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextEffects">
      <summary>获取或设置添加到 <see cref="T:System.Windows.Controls.AccessText" /> 元素的文本效果。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffectCollection" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextEffects" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextEffects" />的依赖项属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.Text" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.Text" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextTrimming">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.AccessText" /> 元素的文本内容如何剪裁，则溢出行框。 </summary>
      <returns>使用的剪裁行为。默认值为 <see cref="F:System.Windows.TextTrimming.None" /></returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextTrimmingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextTrimming" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextTrimming" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.TextWrapping">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.AccessText" /> 元素的文本内容是换，则溢出行框。 </summary>
      <returns>使用的包装的行为。默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.AccessText.TextWrappingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.AccessText.TextWrapping" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.AccessText.TextWrapping" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.AccessText.VisualChildrenCount">
      <summary>获取的子元素的数目进行可视化。</summary>
      <returns>返回表示子元素的数目可见的整数。</returns>
    </member>
    <member name="T:System.Windows.Controls.AddingNewItemEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.AddingNewItemEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AddingNewItemEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.AddingNewItemEventArgs.NewItem">
      <summary>获取或设置要添加的项。</summary>
      <returns>要添加的项。</returns>
    </member>
    <member name="T:System.Windows.Controls.AdornedElementPlaceholder">
      <summary>表示用于 <see cref="T:System.Windows.Controls.ControlTemplate" /> 的元素指定了装饰的控件位置放置相对于其他元素在 <see cref="T:System.Windows.Controls.ControlTemplate" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.AdornedElement">
      <summary>获取 <see cref="T:System.Windows.UIElement" /> 此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象保留空间。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象保留空间。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.ArrangeOverride(System.Windows.Size)">
      <summary>确定第一个可视化子对象并返回此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象所需要的布局的大小。</summary>
      <returns>组件所需的实际大小。</returns>
      <param name="arrangeBounds">此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象应使用排列子元素的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.Child">
      <summary>获取或设置此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 唯一对象的子对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 唯一对象的子对象。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.GetVisualChild(System.Int32)">
      <summary>检索 <see cref="T:System.Windows.Media.Visual" /> 子对象位于指定索引处。</summary>
      <returns>位于指定索引处的可视化子对象。</returns>
      <param name="index">指定子对象中检索的索引。</param>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.LogicalChildren">
      <summary>获取此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象的逻辑种属性元素的枚举数。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象的逻辑种属性元素的枚举数。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.MeasureOverride(System.Windows.Size)">
      <summary>确定 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象的大小。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象的所需大小。</returns>
      <param name="constraint">返回值不应超过的一个上限值。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象不是模板的一部分。</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 事件。，当 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 在内部时，将设置为 true 调用此方法。</summary>
      <param name="e">事件的参数。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.AdornedElementPlaceholder" /> 对象不是模板的一部分。</exception>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value"> 添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.AdornedElementPlaceholder.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text"> 添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.AdornedElementPlaceholder.VisualChildrenCount">
      <summary>获取可视化子对象的数目。</summary>
      <returns>0 或 1。默认值为 0。</returns>
    </member>
    <member name="T:System.Windows.Controls.AlternationConverter">
      <summary>来回对象将整数通过将整数作为索引于对象的列表。</summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.AlternationConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将整数转换为 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 的对象列表。</summary>
      <returns>在 <paramref name="o" /> 取模位置的项数。 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />的对象。</returns>
      <param name="o">使用的整数查找在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 属性的对象。 </param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">使用的类型参数。</param>
      <param name="culture">使用的区域性在转换器。</param>
    </member>
    <member name="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 的对象列表转换为整数。</summary>
      <returns>
        <paramref name="o" /> 索引，如果它在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />或 – 1，则 o 不存在 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />。</returns>
      <param name="o">查找的对象。 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 属性。 </param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">使用的类型参数。</param>
      <param name="culture">使用的区域性在转换器。</param>
    </member>
    <member name="P:System.Windows.Controls.AlternationConverter.Values">
      <summary>获取 <see cref="T:System.Windows.Controls.AlternationConverter" /> 返回对象的列表，该整数传递给 <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> 方法时。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.AlternationConverter" /> 返回对象的列表，该整数传递给 <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> 方法。</returns>
    </member>
    <member name="T:System.Windows.Controls.BooleanToVisibilityConverter">
      <summary>表示来回 <see cref="T:System.Windows.Visibility" /> 枚举值转换为的布尔值转换器。 </summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.BooleanToVisibilityConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将布尔值为 <see cref="T:System.Windows.Visibility" /> 枚举值。</summary>
      <returns>
        <see cref="F:System.Windows.Visibility.Visible" /> ，如果 <paramref name="value" /> 是 true;否则， <see cref="F:System.Windows.Visibility.Collapsed" />。</returns>
      <param name="value">转换的布尔值。该值可以是标准布尔值或可以为 null 的布尔值。</param>
      <param name="targetType">不使用此参数。</param>
      <param name="parameter">不使用此参数。</param>
      <param name="culture">不使用此参数。</param>
    </member>
    <member name="M:System.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>转换 <see cref="T:System.Windows.Visibility" /> 枚举值转换为 boolean 值。</summary>
      <returns>true ，如果 <paramref name="value" /> 是 <see cref="F:System.Windows.Visibility.Visible" />;否则， false。</returns>
      <param name="value">
        <see cref="T:System.Windows.Visibility" /> 枚举值。 </param>
      <param name="targetType">不使用此参数。</param>
      <param name="parameter">不使用此参数。</param>
      <param name="culture">不使用此参数。</param>
    </member>
    <member name="T:System.Windows.Controls.Border">
      <summary>在另一个元素周围绘制边框，背景或两个。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Border" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.Border" /> 元素的内容。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.Border" /> 元素及其子元素的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="finalSize">
        <see cref="T:System.Windows.Size" /> 此元素使用排列子元素。</param>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
      <summary>获取或设置加载在 <see cref="T:System.Windows.Controls.Border" />的区域的区域的 <see cref="T:System.Windows.Media.Brush" /> 。  </summary>
      <returns>绘制背景的 <see cref="T:System.Windows.Media.Brush" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.Background" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
      <summary>获取或设置绘制外部边框颜色的 <see cref="T:System.Windows.Media.Brush" /> 。  </summary>
      <returns>绘制外部边框颜色的 <see cref="T:System.Windows.Media.Brush" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.BorderBrush" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.BorderBrush" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Border" />的相对 <see cref="T:System.Windows.Thickness" /> 。  </summary>
      <returns>描述 <see cref="T:System.Windows.Controls.Border" />的边界的宽度 <see cref="T:System.Windows.Thickness" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.BorderThickness" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.BorderThickness" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
      <summary>获取或设置表示程度 <see cref="T:System.Windows.Controls.Border" /> 的角舍入的值。  </summary>
      <returns>描述程度的舍入的 <see cref="T:System.Windows.CornerRadius" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.CornerRadius" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.CornerRadius" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Border.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)" /> 处理过程之前，)，如果已经定义，绑定将其封送到度量 <see cref="T:System.Windows.Controls.Border" /> 的子元素。</summary>
      <returns>表示元素的上面的大小限制的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不能超过的一个上面的 <see cref="T:System.Windows.Size" /> 限制。</param>
    </member>
    <member name="M:System.Windows.Controls.Border.OnRender(System.Windows.Media.DrawingContext)">
      <summary>在 <see cref="T:System.Windows.Controls.Border" />的呈现处理过程期间，绘制 <see cref="T:System.Windows.Media.DrawingContext" /> 对象的内容。 </summary>
      <param name="dc">定义对象要绘制的 <see cref="T:System.Windows.Media.DrawingContext" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
      <summary>获取或设置描述的空间量。 <see cref="T:System.Windows.Controls.Border" /> 及其子元素之间的 <see cref="T:System.Windows.Thickness" /> 值。  </summary>
      <returns>描述空间量。 <see cref="T:System.Windows.Controls.Border" /> 及其单一子元素之间的 <see cref="T:System.Windows.Thickness" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Border.Padding" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.Padding" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.BorderGapMaskConverter">
      <summary>表示平移 <see cref="T:System.Windows.Controls.GroupBox" /> 控件尺寸为 <see cref="T:System.Windows.Media.VisualBrush" />的类型转换器。</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.BorderGapMaskConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>创建分区 <see cref="T:System.Windows.Controls.GroupBox" /> 控件的边框的 <see cref="T:System.Windows.Media.VisualBrush" /> 。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.GroupBox" /> 控件周围绘制边框包括 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 内容的空白的 <see cref="T:System.Windows.Media.VisualBrush" /> 。</returns>
      <param name="values">表示 <see cref="T:System.Windows.Controls.GroupBox" /> 控件参数的三个数字。请参见 " 备注 " 有关更多信息。</param>
      <param name="targetType">不使用此参数。</param>
      <param name="parameter">可见的行的宽度 (以 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 左侧的中 <see cref="T:System.Windows.Controls.GroupBox" />。</param>
      <param name="culture">不使用此参数。</param>
    </member>
    <member name="M:System.Windows.Controls.BorderGapMaskConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>未实现。</summary>
      <returns>
        <see cref="F:System.Windows.Data.Binding.DoNothing" /> 在所有情况下。</returns>
      <param name="value">不使用此参数。</param>
      <param name="targetTypes">不使用此参数。</param>
      <param name="parameter">不使用此参数。</param>
      <param name="culture">不使用此参数。</param>
    </member>
    <member name="T:System.Windows.Controls.Button">
      <summary>表示一个响应 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件的 Windows 按钮控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Button" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Button.IsCancel">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Button" /> 是否是一个“取消”按钮。用户可以通过按 ESC 键激活“取消”按钮。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Button" /> 是“取消”按钮，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsCancelProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefault">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Button" /> 是否是一个默认按钮。用户可以通过按 ENTER 键调用默认按钮。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Button" /> 是默认按钮，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Button.IsDefaulted">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Button" /> 是否是在用户按下 ENTER 键时所激活的按钮。   </summary>
      <returns>如果在用户按下 ENTER 键时激活该按钮，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Button.IsDefaultProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
      <summary>单击 <see cref="T:System.Windows.Controls.Button" /> 时调用。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
      <summary>为此控件创建一个适当的 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />，作为 WPF 基础结构的一部分。</summary>
      <returns>该控件的 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Calendar">
      <summary>表示使用可视日历显示，使用户能够选择日期的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Calendar" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.BlackoutDates">
      <summary>获取被标记为不可选日期的集合。</summary>
      <returns>不能选择日期的集合。默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarButtonStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 与控件的内部 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 对象的当前样式。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 与控件的内部 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 对象的当前样式。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.CalendarItemStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Style" /> 与控件的内部 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 对象的当前样式。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDate">
      <summary>获取或设置该日期显示。</summary>
      <returns>显示的日期。默认值为 <see cref="P:System.DateTime.Today" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayDateChanged">
      <summary>，更改，发生 <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateEnd">
      <summary>获取或设置在可在日历的日期范围的最后一个日期。</summary>
      <returns>可在日历的最后一个日期。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayDateStart">
      <summary>获取或设置可在日历的第一个日期。</summary>
      <returns>可在日历的第一个日期。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayDateStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.DisplayMode">
      <summary>获取或设置一个值日历是否显示月份、年或十年。</summary>
      <returns>一个值什么+时间长度 <see cref="T:System.Windows.Controls.Calendar" /> 应显示。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.DisplayModeChanged">
      <summary>，更改，发生 <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 属性。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.DisplayModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.FirstDayOfWeek">
      <summary>获取或设置被视为如早期的日。</summary>
      <returns>表示如早期的 <see cref="T:System.DayOfWeek" /> 。当前区域性所依赖的默认值为 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.IsTodayHighlighted">
      <summary>获取或设置一个值当前日期是否显示。</summary>
      <returns>true ，如果当前日期显示;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnApplyTemplate">
      <summary>，在新模板是应用后，生成 <see cref="T:System.Windows.Controls.Calendar" /> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer">
      <summary>返回 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 供 Silverlight 自动化基础结构使用。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Calendar" /> 对象的 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> 事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> 事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件提供类处理，当用户按键时，该控件具有焦点时。</summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.UIElement.KeyUp" /> 路由事件提供类处理，当用户松开键，则此控件具有焦点时。</summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> 路由事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> 事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDate">
      <summary>获取或设置当前选定的日期。</summary>
      <returns>当前选定的日期。默认值为 null。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">一个指定日期在 <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 和 <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />指定的范围。- 或 -一个指定日期。 <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> 集合。</exception>
      <exception cref="T:System.InvalidOperationException">如果设置的任何值 null 除了外，在 <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 设置为 <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />。</exception>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectedDates">
      <summary>获取所选日期的集合。</summary>
      <returns>包含当前所选日期的 <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> 对象。默认值为空集合。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectedDatesChanged">
      <summary>，更改，发生 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 属性返回的集合中。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent">
      <summary>标识该 <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> 路由事件。</summary>
    </member>
    <member name="P:System.Windows.Controls.Calendar.SelectionMode">
      <summary>获取或设置一个值执行哪种选择允许。</summary>
      <returns>指示当前选择模式的值。默认值为 <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.Calendar.SelectionModeChanged">
      <summary>，当 <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 更改，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Calendar.SelectionModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Calendar.ToString">
      <summary>提供为所选日期的文本表示形式。</summary>
      <returns>所选日期的文本表示形式或空字符串，则 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 是 null。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarBlackoutDatesCollection">
      <summary>表示非可选日期的集合。 <see cref="T:System.Windows.Controls.Calendar" />的。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarBlackoutDatesCollection" /> 类的新实例。 </summary>
      <param name="owner">日期此对象表示的 <see cref="T:System.Windows.Controls.Calendar" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast">
      <summary>在 <see cref="P:System.DateTime.Today" /> 之前添加任何日期到集合中。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime)">
      <summary>返回表示的值此集合是否包含指定日期。</summary>
      <returns>true ，如果集合包含指定日期;否则， false。</returns>
      <param name="date">搜索的日期。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.Contains(System.DateTime,System.DateTime)">
      <summary>返回表示的值此集合是否包含日期的指定的范围。</summary>
      <returns>true ，如果范围中的任何日期包含在集合中;否则， false。</returns>
      <param name="start">日期范围的开头。</param>
      <param name="end">日期范围的末尾。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarBlackoutDatesCollection.ContainsAny(System.Windows.Controls.CalendarDateRange)">
      <summary>返回表示的值此集合是否在日期的指定范围包含任何日期。</summary>
      <returns>true ，如果范围中的任何日期包含在集合中;否则， false。</returns>
      <param name="range">搜索日期的范围。</param>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.AddedDate">
      <summary>获取或设置新显示的日期。</summary>
      <returns>新显示的日期。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateChangedEventArgs.RemovedDate">
      <summary>获取或设置以前显示的日期。</summary>
      <returns>以前显示的日期。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarDateRange">
      <summary>表示日期范围在 <see cref="T:System.Windows.Controls.Calendar" />的。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarDateRange" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarDateRange" /> 类的新实例与一个日期的。</summary>
      <param name="day">添加的日期。</param>
    </member>
    <member name="M:System.Windows.Controls.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarDateRange" /> 类的新实例与日期的大小。</summary>
      <param name="start">将表示范围的开头。</param>
      <param name="end">将表示范围的末尾。</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.End">
      <summary>获取在该表示范围的最后一个日期。</summary>
      <returns>在表示范围的最后一个日期。</returns>
    </member>
    <member name="E:System.Windows.Controls.CalendarDateRange.PropertyChanged">
      <summary>，当属性值发生更改时，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.CalendarDateRange.Start">
      <summary>获取在该表示范围的第一个日期。</summary>
      <returns>在表示范围的第一个日期。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarMode">
      <summary>指定 <see cref="T:System.Windows.Controls.Calendar" /> 是否显示月份、年或十年。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Decade">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 一次显示十年。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Month">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 一次显示一个月。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarMode.Year">
      <summary>
        <see cref="T:System.Windows.Controls.Calendar" /> 一次显示一年。</summary>
    </member>
    <member name="T:System.Windows.Controls.CalendarModeChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.CalendarModeChangedEventArgs.#ctor(System.Windows.Controls.CalendarMode,System.Windows.Controls.CalendarMode)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CalendarModeChangedEventArgs" /> 类的新实例。 </summary>
      <param name="oldMode">先前的模式。</param>
      <param name="newMode">新的模式。</param>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.NewMode">
      <summary>获取 <see cref="T:System.Windows.Controls.Calendar" /> 的新模式。</summary>
      <returns>表示新模式的 <see cref="T:System.Windows.Controls.CalendarMode" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CalendarModeChangedEventArgs.OldMode">
      <summary>获取 <see cref="T:System.Windows.Controls.Calendar" /> 的以前模式。</summary>
      <returns>表示旧模式的 <see cref="T:System.Windows.Controls.CalendarMode" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.CalendarSelectionMode">
      <summary>指定可在 <see cref="T:System.Windows.Controls.Calendar" /> 中选择单个日期还是多个日期。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.MultipleRange">
      <summary>可以选择多个非连续范围的日期。使用 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 属性可检索所选日期。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.None">
      <summary>不允许选定内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleDate">
      <summary>可以选择单个日期。使用 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 属性可检索所选日期。</summary>
    </member>
    <member name="F:System.Windows.Controls.CalendarSelectionMode.SingleRange">
      <summary>只能选择一个日期范围。使用 <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 属性可检索所选日期。</summary>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
      <summary>定义中可以显式定位子元素使用坐标是相对 <see cref="T:System.Windows.Controls.Canvas" /> 区域的区域。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Canvas" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.Canvas" /> 元素的内容。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.Canvas" /> 元素及其子代的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">此 <see cref="T:System.Windows.Controls.Canvas" /> 元素应使用排列子元素的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Bottom">
      <summary>获取或设置表示元素底部及其父级之间 <see cref="T:System.Windows.Controls.Canvas" />底部的距离的值。</summary>
      <returns>表示从父 <see cref="T:System.Windows.Controls.Canvas" />底部的偏移位置的 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.BottomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Bottom" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetBottom(System.Windows.UIElement)">
      <summary>返回 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性 的值特定依赖项对象的。 </summary>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 坐标。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLayoutClip(System.Windows.Size)">
      <summary>返回一个区域所剪切的剪辑几何图形，如果 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 属性设置为 true。 </summary>
      <returns>表示区域剪辑 <see cref="T:System.Windows.Media.Geometry" /> ，如果 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 是 true。</returns>
      <param name="layoutSlotSize">元素的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
      <summary>获取 <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性 的值特定依赖项对象的。 </summary>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Left" /> 坐标。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetRight(System.Windows.UIElement)">
      <summary>获取 <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性 的值特定依赖项对象的。 </summary>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Right" /> 坐标。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
      <summary>获取 <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性 的值特定依赖项对象的。 </summary>
      <returns>指定元素的 <see cref="P:System.Windows.Controls.Canvas.Top" /> 坐标。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
      <summary>获取或设置表示元素的左侧及其父级之间 <see cref="T:System.Windows.Controls.Canvas" />的左侧的距离的值。 </summary>
      <returns>表示从父 <see cref="T:System.Windows.Controls.Canvas" />的左侧的偏移位置的 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Left" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)" /> 处理过程中，这些 <see cref="T:System.Windows.Controls.Canvas" /> 的子元素所需将它们。</summary>
      <returns>表示范围需要封送处理子内容的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不应超过的一个上限 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Right">
      <summary>获取或设置表示元素的右侧及其父级之间 <see cref="T:System.Windows.Controls.Canvas" />的右侧的距离的值。 </summary>
      <returns>表示从父 <see cref="T:System.Windows.Controls.Canvas" />的右侧的偏移位置的 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.RightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Right" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 附加属性 的值特定依赖项对象的。 </summary>
      <param name="element">属性值写入的元素。</param>
      <param name="length">将指定元素的 <see cref="P:System.Windows.Controls.Canvas.Bottom" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.Canvas.Left" /> 附加属性 的值特定依赖项对象的。 </summary>
      <param name="element">属性值写入的元素。</param>
      <param name="length">将指定元素的 <see cref="P:System.Windows.Controls.Canvas.Left" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.Canvas.Right" /> 附加属性 的值特定依赖项对象的。 </summary>
      <param name="element">属性值写入的元素。</param>
      <param name="length">将指定元素的 <see cref="P:System.Windows.Controls.Canvas.Right" /> 坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性 的值特定依赖项对象的。 </summary>
      <param name="element">属性值写入的元素。</param>
      <param name="length">将指定元素的 <see cref="P:System.Windows.Controls.Canvas.Top" /> 坐标。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
      <summary>获取或设置表示顶级元素及其父级之间 <see cref="T:System.Windows.Controls.Canvas" />顶部的距离的值。 </summary>
      <returns>从父 <see cref="T:System.Windows.Controls.Canvas" />的顶部表示偏移位置的 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Canvas.Top" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Top" />的附加属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.CharacterCasing">
      <summary>指定大小写字符中手动键入到 <see cref="T:System.Windows.Controls.TextBox" /> 控件。 </summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Lower">
      <summary>字符被类型化为 <see cref="T:System.Windows.Controls.TextBox" /> 转换为小写。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Normal">
      <summary>被类型化为 <see cref="T:System.Windows.Controls.TextBox" /> 不将字符。</summary>
    </member>
    <member name="F:System.Windows.Controls.CharacterCasing.Upper">
      <summary>字符被类型化为 <see cref="T:System.Windows.Controls.TextBox" /> 被转换为大写。</summary>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
      <summary>表示用户可以选择并清除的控件。   </summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.CheckBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>调用时， <see cref="T:System.Windows.Controls.CheckBox" /> 的访问键调用。 </summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Controls.CheckBox" />的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.CheckBox" />的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary> 响应 <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> 事件。 </summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" /> 。 </param>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.#ctor(System.Object,System.Windows.UIElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>获取或设置一个值是否不应重新启用此项目。</summary>
      <returns>true ，如果要防止此项目的 revirtualization;否则 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>获取表示数据值可视组件的实例。</summary>
      <returns>表示数据值的 <see cref="T:System.Windows.UIElement" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>获取表示原始数据值的 <see cref="T:System.Object" /> 。</summary>
      <returns>表示原始数据值的 <see cref="T:System.Object" /> 。</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>表示该方法处理 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
      <summary>指定应何时引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。 </summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
      <summary>指定当鼠标悬停在控件上时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
      <summary>指定当按下按钮时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
      <summary>指定当按下和释放按钮时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
      <summary>定义应用于 <see cref="T:System.Windows.Controls.Grid" /> 元素的列特设置属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
      <summary>获取表示 <see cref="T:System.Windows.Controls.ColumnDefinition" />的实际计算宽度的值。 </summary>
      <returns>表示在 与设备无关的像素的实际计算宽度的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
      <summary>获取或设置表示 <see cref="T:System.Windows.Controls.ColumnDefinition" />的最大的宽度值。   </summary>
      <returns>表示最大的宽度 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.PositiveInfinity" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
      <summary>获取或设置表示 <see cref="T:System.Windows.Controls.ColumnDefinition" />的最小宽度的值。   </summary>
      <returns>表示最小宽度的 <see cref="T:System.Double" /> 。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Offset">
      <summary>获取表示此 <see cref="T:System.Windows.Controls.ColumnDefinition" />的 偏移量 值。 </summary>
      <returns>表示列的 偏移量 的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
      <summary>获取 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 元素的计算的宽度或设置由 <see cref="T:System.Windows.Controls.ColumnDefinition" />定义的列的 <see cref="T:System.Windows.GridLength" /> 值。   </summary>
      <returns>表示列的宽度 <see cref="T:System.Windows.GridLength" /> 。默认值为 1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ColumnDefinition.Width" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
      <summary>提供对 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象的有序强类型集合的访问。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Add(System.Windows.Controls.ColumnDefinition)">
      <summary>向 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中添加一个 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 元素。</summary>
      <param name="value">标识要添加到集合中的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Clear">
      <summary>清除 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Contains(System.Windows.Controls.ColumnDefinition)">
      <summary>确定 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中是否存在给定的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</summary>
      <returns>如果集合中存在 <see cref="T:System.Windows.Controls.ColumnDefinition" />，则为 true；否则为 false。</returns>
      <param name="value">标识要测试的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.CopyTo(System.Windows.Controls.ColumnDefinition[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象数组复制到 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中的给定索引位置。</summary>
      <param name="array">
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象的数组。</param>
      <param name="index">标识 <paramref name="array" /> 中要将 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象复制到的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 - 源 <see cref="T:System.Collections.ICollection" /> 中的元素数大于从 <paramref name="index" /> 到目标数组末尾的可用空间。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 </exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Count">
      <summary>获取此 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 实例中的项总数。</summary>
      <returns>集合中的项总数。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.IndexOf(System.Windows.Controls.ColumnDefinition)">
      <summary>返回给定 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 在 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中的索引位置。</summary>
      <returns>如果在集合中找到该对象，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">需要其索引位置的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Insert(System.Int32,System.Windows.Controls.ColumnDefinition)">
      <summary>将 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 插入 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中的指定索引位置。</summary>
      <param name="index">集合中用来插入项的位置。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。 </exception>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 是否为只读。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsSynchronized">
      <summary>获取一个值，该值指示是否同步对此 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的访问（即访问是否是线程安全的）。</summary>
      <returns>如果同步对此集合的访问，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.Item(System.Int32)">
      <summary>获取一个值，它指示 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中的当前项。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">集合中的当前项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是集合中的有效索引位置。</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.Remove(System.Windows.Controls.ColumnDefinition)">
      <summary>从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中移除一个 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</summary>
      <returns>如果在集合中找到 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 并将其移除，则为 true；否则为 false。</returns>
      <param name="value">要从该集合中移除的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveAt(System.Int32)">
      <summary>从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中移除指定索引位置处的 <see cref="T:System.Windows.Controls.ColumnDefinition" />。</summary>
      <param name="index">从集合中移除 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中移除一定范围的 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象。</summary>
      <param name="index">从集合中移除第一个 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 的位置。</param>
      <param name="count">要从集合中移除的 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 对象的总数。</param>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">从零开始的 <see cref="T:System.Array" />，它接收从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 复制来的项。</param>
      <param name="index">指定的 <see cref="T:System.Array" /> 中接收复制内容的第一个位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果在 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</param>
      <param name="value">要插入 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 中的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是列表中的有效索引位置。</exception>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
      <summary>表示带有下拉列表的选择控件，通过单击控件上的箭头可显示或隐藏下拉列表。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ComboBox" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
      <summary>当关闭组合框的下拉列表时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
      <summary>当打开组合框的下拉列表时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定项的元素。</summary>
      <returns>用于显示指定项的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HandlesScrolling">
      <summary>获取一个值，该值指示组合框是否支持滚动。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 支持滚动，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ComboBox" /> 是否具有焦点。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 具有焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
      <summary>获取或设置一个值，该值指示组合框的下拉部分当前是否打开。</summary>
      <returns>如果下拉项已打开，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
      <summary>获取或设置一个值，该值指示启用或禁用 <see cref="T:System.Windows.Controls.ComboBox" /> 的文本框中的文本编辑。</summary>
      <returns>如果可以编辑 <see cref="T:System.Windows.Controls.ComboBox" />，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsEditableProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或可作为）其自己的 ItemContainer。</summary>
      <returns>如果该项是其自己的 ItemContainer，则为 true；否则为 false。</returns>
      <param name="item">指定项。</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsReadOnly">
      <summary>获取或设置启用仅限选择模式的值，在此模式中，可选择但不可编辑组合框中的内容。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 为只读，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>确定是否突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />。</summary>
      <returns>如果突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
      <summary>获取或设置组合框下拉部分的最大高度。</summary>
      <returns>一个 double 值，该值表示检索到的高度或要设置的高度。为属性系统定义的默认值是根据系统最大屏幕高度参数的三分之一计算得到的，但是此默认值可能会由各种控件模板重写。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
      <summary>调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时进行调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
      <summary>提供此控件的适当 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 实现，作为 WPF 基础结构的一部分。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>当组合框的弹出窗口关闭时报告。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>当组合框的弹出窗口打开时报告。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>报告 <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> 属性已更改。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性更改时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>发生 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>调用此方法以报告已释放鼠标左键。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>发生 <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 附加路由事件时进行调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>通过引发 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件来对 <see cref="T:System.Windows.Controls.ComboBox" /> 选择更改进行响应。</summary>
      <param name="e">为 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备指定元素以显示指定项。</summary>
      <param name="element">用于显示指定项的元素。</param>
      <param name="item">指定项。</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
      <summary>获取在选择框中显示的项。</summary>
      <returns>选定项。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat">
      <summary>获取一个撰写字符串，该字符串指定如果选择框中的选定项显示为字符串，应如何设置该选定项的格式。</summary>
      <returns>一个撰写字符串，指定如果选择框中的选定项显示为字符串，应如何设置该选定项的格式。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>获取选择框内容的项模板。</summary>
      <returns>项模板。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix">
      <summary>获取或设置指示 <see cref="T:System.Windows.Controls.ComboBox" /> 是保留用户的输入还是将输入替换为匹配的项的值。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ComboBox" /> 保留用户的输入，则为 true；如果 <see cref="T:System.Windows.Controls.ComboBox" /> 替换具有匹配项的输入。则为 false。注册的默认值是 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit">
      <summary>获取或设置已打开并显示下拉控件的 <see cref="T:System.Windows.Controls.ComboBox" /> 在用户单击 <see cref="T:System.Windows.Controls.TextBox" /> 时是否将保持打开状态。</summary>
      <returns>若要在用户单击文本区域以开始编辑时保持下拉控件处于打开状态，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.Text">
      <summary>获取或设置当前选定项的文本。</summary>
      <returns>当前选定项的字符串。默认值为空字符串 ("")。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
      <summary>实现 <see cref="T:System.Windows.Controls.ComboBox" /> 内的可选项。  </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ComboBoxItem" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ComboBoxItem.IsHighlighted">
      <summary>获取一个指示是否突出显示该项的值。   </summary>
      <returns>如果突出显示 <see cref="T:System.Windows.Controls.ComboBoxItem" />，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)">
      <summary>当 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改时调用。 </summary>
      <param name="oldContent">旧内容。</param>
      <param name="newContent">新内容。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>宣布键盘焦点位于此元素上。 </summary>
      <param name="e">键盘输入事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.MouseEnter" /> 事件。 </summary>
      <param name="e">为 <see cref="T:System.Windows.Input.MouseEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。 </summary>
      <param name="e">为 <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件。 </summary>
      <param name="e">为 <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> 提供数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
      <summary>没有任何类型的内容表示单个控件。  </summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ContentControl" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
      <summary>添加指定的对象作为 <see cref="T:System.Windows.Controls.ContentControl" />的子级。 </summary>
      <param name="value">添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.AddText(System.String)">
      <summary>将指定的文本字符串。 <see cref="T:System.Windows.Controls.ContentControl" />。 </summary>
      <param name="text">添加的字符串。</param>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
      <summary> 获取或设置 <see cref="T:System.Windows.Controls.ContentControl" />的内容。 </summary>
      <returns>包含控件内容的对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.Content" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentStringFormat">
      <summary>获取或设置指定如何设置 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的复合字符串，则显示为字符串。</summary>
      <returns>指定如何设置 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的复合字符串，则显示为字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
      <summary> 获取或设置用于的数据模板显示 <see cref="T:System.Windows.Controls.ContentControl" />的内容。 </summary>
      <returns>数据模板。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
      <summary> 获取或设置使应用程序编写器提供自定义模板选择逻辑的模板选择器。 </summary>
      <returns>数据模板选择器。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.HasContent">
      <summary> 获取一个值 <see cref="T:System.Windows.Controls.ContentControl" /> 是否包含内容。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.ContentControl" /> 包含内容;否则 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.HasContentProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.HasContent" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.LogicalChildren">
      <summary> 具有枚举数内容控件的逻辑种属性元素。 </summary>
      <returns>枚举数。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary> 调用时， <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。 </summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的旧值。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)">
      <summary>，当 <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 属性更改，发生。</summary>
      <param name="oldContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />的旧值。</param>
      <param name="newContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary> 调用时， <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 属性更改。 </summary>
      <param name="oldContentTemplate">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 属性的旧值。</param>
      <param name="newContentTemplate">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary> 调用时， <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性更改。 </summary>
      <param name="oldContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性的旧值。</param>
      <param name="newContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
      <summary>指示是否应保留 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性。</summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性应保留;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value">  添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text">  添加的字符串到对象。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
      <summary>显示 <see cref="T:System.Windows.Controls.ContentControl" />的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ContentPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>确定单一子元素并确定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象的内容。 </summary>
      <returns>组件所需的实际大小。</returns>
      <param name="arrangeSize">此 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象应使用排列子元素的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ChooseTemplate">
      <summary>返回模板中使用。这可能取决于内容或其他属性。</summary>
      <returns>使用的 <see cref="T:System.Windows.DataTemplate" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
      <summary>获取或设置用于的数据生成 <see cref="T:System.Windows.Controls.ContentPresenter" />的子元素。  </summary>
      <returns>用于的数据生成子元素。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.Content" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentSource">
      <summary>在自动失真期间，则获取或设置为基本名称。  </summary>
      <returns>使用的基名称在自动锯齿化过程。默认值为 “内容”。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentStringFormat">
      <summary>获取或设置指定如何设置 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 属性的复合字符串，则显示为字符串。</summary>
      <returns>指定如何设置 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 属性的复合字符串，则显示为字符串。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
      <summary>获取或设置用于的模板显示控件的内容。   </summary>
      <returns>定义内容的可视化的 <see cref="T:System.Windows.DataTemplate" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.DataTemplateSelector" />，允许应用程序编写器用于选择模板提供自定义逻辑来显示控件的内容。  </summary>
      <returns>提供逻辑返回 <see cref="T:System.Windows.DataTemplate" /> 应用的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)">
      <summary>确定基于子内容的大小调整属性、 margins 和请求范围的 <see cref="T:System.Windows.Controls.ContentPresenter" /> 对象的大小。</summary>
      <returns>需要封送处理子内容的大小。</returns>
      <param name="constraint">返回值不应超过的一个上限值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性更改。</summary>
      <param name="oldContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性的旧值。</param>
      <param name="newContentStringFormat">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 更改。 </summary>
      <param name="oldContentTemplate">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 属性的旧值。</param>
      <param name="newContentTemplate">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性更改。 </summary>
      <param name="oldContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的旧值。</param>
      <param name="newContentTemplateSelector">
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 更改 </summary>
      <param name="oldTemplate">旧 <see cref="T:System.Windows.DataTemplate" /> 对象的值。</param>
      <param name="newTemplate">新 <see cref="T:System.Windows.DataTemplate" /> 对象的值。</param>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ContentPresenter" /> 是否处于其样式应当使用 <see cref="T:System.Windows.Controls.AccessText" /> 。   </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.ContentPresenter" /> 应在其样式使用 <see cref="T:System.Windows.Controls.AccessText" /> ;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector">
      <summary>返回一个值序列化过程是否应序列化 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性的有效值此类实例的。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 属性值;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenu">
      <summary>表示使控件显示功能是特定于控件的上下文的弹出菜单。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ContextMenu" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Closed">
      <summary>，当 <see cref="T:System.Windows.Controls.ContextMenu" /> 的特定实例关闭，发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.ClosedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenu.Closed" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
      <summary> 获取或设置一个回调的位置在屏幕上应将 <see cref="T:System.Windows.Controls.ContextMenu" /> 。  </summary>
      <returns>指定 <see cref="T:System.Windows.Controls.ContextMenu" />位置的回调。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HandlesScrolling">
      <summary>获取一个值控件是否支持 scroll。</summary>
      <returns>始终 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HasDropShadow">
      <summary>获取或设置一个值上下文菜单是否带有删除的阴影效果。  </summary>
      <returns>true ，如果上下文菜单带有删除的阴影;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
      <summary>获取或设置目标原点和 popup 对齐点之间的平边距。 </summary>
      <returns>目标原点和 popup 对齐点之间的平边距。有关目标原点和 popup 对齐点的信息，请参见 Popup 放置行为。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.IsOpen">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否可见。  </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 可见;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 事件发生。 </summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.ContextMenu" />的一 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.ContextMenu" />的一 <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性更改的报表。</summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.ContentElement.KeyDown" /> 事件由 <see cref="T:System.Windows.Controls.ContextMenu" />中的对象引发。 </summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.ContentElement.KeyUp" /> 事件。</summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.UIElement.KeyUp" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 事件发生。 </summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>调用，在上下文菜单的可视父更改。 </summary>
      <param name="oldParent">对象上下文菜单以前为附加。</param>
    </member>
    <member name="E:System.Windows.Controls.ContextMenu.Opened">
      <summary>，在上下文菜单的特定实例打开，发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.OpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenu.Opened" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.Placement">
      <summary> 获取或设置 <see cref="T:System.Windows.Controls.ContextMenu" />的 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 属性。  </summary>
      <returns>一 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举。默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.Placement" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
      <summary>获取或设置上下文菜单将相对于区域，则打开时。  </summary>
      <returns>定义矩形来确定上下文菜单的区域。默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.PlacementTarget">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ContextMenu" /> 将相对于的 <see cref="T:System.Windows.UIElement" /> ，则打开时。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContextMenu" /> 将相对于元素，将其打开。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary> 准备就绪以指定的元素显示了指定的项目。 </summary>
      <param name="element">用于的元素显示指定的项目。</param>
      <param name="item">指定项目。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.StaysOpen">
      <summary> 获取或设置一个值 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否应自动关闭。  </summary>
      <returns>true ，如果菜单应保持打开状态，直到 <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 属性更改 false;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.StaysOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenu.VerticalOffset">
      <summary>获取或设置目标原点和 popup 对齐之间的垂直距离点。 </summary>
      <returns>目标原点和 popup 对齐之间的垂直距离点。有关目标原点和 popup 对齐点的信息，请参见 Popup 放置行为。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventArgs">
      <summary>有关上下文菜单事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorLeft">
      <summary> 获取鼠标的水平位置。  </summary>
      <returns>中的水平位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuEventArgs.CursorTop">
      <summary>获取鼠标的垂直位置。  </summary>
      <returns>中的垂直位置。 </returns>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuEventHandler">
      <summary>表示要处理 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 和 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件的方法，以及等效的 <see cref="T:System.Windows.ContentElement" /> 事件。</summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ContextMenuService">
      <summary>用于显示 <see cref="T:System.Windows.Controls.ContextMenu" />提供系统实现。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>将该 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序中添加。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.AddContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>将该 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序中添加。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ContextMenu">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ContextMenu" />的内容。 </summary>
      <returns>返回 <see cref="T:System.Windows.Controls.ContextMenu" /> 内容;如果没有内容属性返回 null。默认值为 null。</returns>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing">
      <summary>，当 <see cref="T:System.Windows.Controls.ContextMenu" /> 关闭，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuClosingEvent">
      <summary> 标识 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" />的路由事件标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening">
      <summary>，当 <see cref="T:System.Windows.Controls.ContextMenu" /> 打开，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuOpeningEvent">
      <summary>标识该 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 附加事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 的标识符附加事件。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ContextMenuProperty">
      <summary> 标识该 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" />的标识符附加属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetContextMenu(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否有了投影。 </summary>
      <returns>布尔值， TRUE ，如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 具有投影);否则 FALSE 。</returns>
      <param name="element">对查询的对象有关它是否具有了投影。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Con" />trols.ContextMenuService.HorizontalOffset 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacement(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTa" />rget 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary> 获取指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 属性的值。</returns>
      <param name="element">对查询的对象有关 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 属性。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HasDropShadow">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否启用的投影效果。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 启用的投影效果;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.HorizontalOffset">
      <summary>获取或设置位置沿放置 <see cref="T:System.Windows.Controls.ContextMenu" /> 的 x 方向指示有关父控件的值。</summary>
      <returns>指定 <see cref="T:System.Windows.Controls.ContextMenu" />的水平位置的<see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.HorizontalOffsetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.IsEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否可显示。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 显示;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.IsEnabledProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.Placement">
      <summary>获取或设置指定 <see cref="T:System.Windows.Controls.ContextMenu" /> 位置相对于 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 或 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" />的值。</summary>
      <returns>返回应有关其父的位置放置 <see cref="T:System.Windows.Controls.ContextMenu" /> 。属性设置 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.Placement" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementRectangle">
      <summary>获取或设置上下文菜单将相对于区域，则打开时。  </summary>
      <returns>定义矩形来确定上下文菜单控件的 <see cref="T:System.Windows.Rect" /> 结构。默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementRectangleProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.PlacementTarget">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ContextMenu" />的父控件。</summary>
      <returns>是 <see cref="T:System.Windows.Controls.ContextMenu" />的父级的 <see cref="T:System.Windows.UIElement" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.PlacementTargetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>移除该 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuClosing" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序将移除。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.RemoveContextMenuOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ContextMenuEventHandler)">
      <summary>移除该 <see cref="E:System.Windows.Controls.ContextMenuService.ContextMenuOpening" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序将移除。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetContextMenu(System.Windows.DependencyObject,System.Windows.Controls.ContextMenu)">
      <summary>设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu" /> 属性的值。</summary>
      <param name="element">设置属性的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置一个值 <see cref="T:System.Windows.Controls.ContextMenu" /> 是否有了投影。</summary>
      <param name="element">设置属性的对象。</param>
      <param name="value">布尔值设置， true ，如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 具有投影);否则 false 。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset" /> 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled" /> 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.Placement" /> 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.P" />lacementRectangle 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget" /> 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ContextMenuService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary> 设置指定对象的 <see cref="P:System.Windows.Controls.ContextMenuService.Vertica" />lOffset 属性的值。 </summary>
      <param name="element">设置值的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled">
      <summary>获取或设置一个值是否应显示 <see cref="T:System.Windows.Controls.ContextMenu" /> ，其父的灰色时。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.ContextMenu" /> 应显示，其父的灰色;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.ShowOnDisabledProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContextMenuService.VerticalOffset">
      <summary>获取或设置位置沿放置 <see cref="T:System.Windows.Controls.ContextMenu" /> 的 y 方向指示有关父控件的值。</summary>
      <returns>指定 <see cref="T:System.Windows.Controls.ContextMenu" />的垂直位置的<see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContextMenuService.VerticalOffsetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset" />的附加属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Control">
      <summary>表示使用 <see cref="T:System.Windows.Controls.ControlTemplate" /> 定义其外观的 用户界面 (UI) 元素的基类。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Control" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
      <summary>调用位置和大小调整 <see cref="T:System.Windows.Controls.Control" /> 对象的内容。 </summary>
      <returns>控件的大小。</returns>
      <param name="arrangeBounds">用于将该目录的计算的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
      <summary>获取或设置描述控件的背景的画笔。 </summary>
      <returns>用于填充控件的背景的画笔。默认值为 <see cref="P:System.Windows.Media.Brushes.Transparent" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Background" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
      <summary>获取或设置描述控件的边框的背景画笔。 </summary>
      <returns>用于填充控件的边框的画笔;默认值为 <see cref="P:System.Windows.Media.Brushes.Transparent" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.BorderBrush" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
      <summary>获取或设置控件的边框粗细。  </summary>
      <returns>粗细值;默认值为粗细 0 在所有四个边。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.BorderThickness" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
      <summary>获取或设置控件的字体系列。   </summary>
      <returns>字体系列。默认值为系统对话框字体。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontFamily" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontFamily" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
      <summary>获取或设置字号。   </summary>
      <returns>文本范围。 <see cref="T:System.Windows.Controls.Control" />的。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。字号必须是正数。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontSize" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontSize" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
      <summary>获取或设置字体在屏幕上以及或展开的程度。   </summary>
      <returns>
        <see cref="T:System.Windows.FontStretch" /> 值。默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontStretch" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontStretch" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
      <summary>获取或设置字体样式。   </summary>
      <returns>
        <see cref="T:System.Windows.FontStyle" /> 值。默认值为 <see cref="P:System.Windows.FontStyles.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontStyle" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
      <summary>获取或设置指定的字体的权重或粗细。   </summary>
      <returns>
        <see cref="T:System.Windows.FontWeight" /> 值。默认值为 <see cref="P:System.Windows.FontWeights.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.FontWeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontWeight" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
      <summary>获取或设置描述前景色的画笔。    </summary>
      <returns>绘制控件的前景的画笔。默认值为系统对话框字体颜色。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Foreground" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Foreground" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.HandlesScrolling">
      <summary>获取一个值控件是否支持滚动。</summary>
      <returns>true ，如果控件具有 <see cref="T:System.Windows.Controls.ScrollViewer" /> 在其样式并具有自定义键盘滚动行为;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
      <summary>获取或设置控件内容的水平对齐。    </summary>
      <returns>一个 <see cref="T:System.Windows.HorizontalAlignment" /> 值。默认值为 <see cref="F:System.Windows.HorizontalAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
      <summary>获取或设置一个值控制是否在选项卡上导航包含。   </summary>
      <returns>true ，如果控件在导航选项包括;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.IsTabStop" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
      <summary>调用重新度量控件。 </summary>
      <returns>控件的大小，直到 <paramref name="constraint" />指定的最大次数。</returns>
      <param name="constraint">该方法可以返回的最大大小。</param>
    </member>
    <member name="E:System.Windows.Controls.Control.MouseDoubleClick">
      <summary>，当鼠标按钮单击两个或多个次，发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Control.MouseDoubleClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" />的路由事件标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> 路由事件。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> 路由事件。 </summary>
      <param name="e">事件数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>调用，每当控件的模板更改。 </summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
      <summary>获取或设置控件中的空白。   </summary>
      <returns>空间量。 <see cref="T:System.Windows.Controls.Control" /> 的内容之间及其 <see cref="P:System.Windows.FrameworkElement.Margin" /> 或 <see cref="T:System.Windows.Controls.Border" />。默认值为粗细 0 在所有四个边。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Padding" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Padding" />的依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
      <summary>，当用户单击鼠标按钮两个或多个次，发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
      <summary>获取或设置使用 tab 键时，确定顺序接收焦点的元素的值，当用户将控件定位。   </summary>
      <returns>确定逻辑导航命令设备的值。默认值为 <see cref="F:System.Int32.MaxValue" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.TabIndex" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.TabIndex" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
      <summary>获取或设置控件模板。   </summary>
      <returns>定义 <see cref="T:System.Windows.Controls.Control" />外观的模板。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.Template" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Template" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.ToString">
      <summary>返回 <see cref="T:System.Windows.Controls.Control" /> 对象的字符串表示形式。 </summary>
      <returns>表示控件的字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
      <summary>获取或设置控件内容的垂直对齐方式。    </summary>
      <returns>一个 <see cref="T:System.Windows.VerticalAlignment" /> 值。默认值为 <see cref="F:System.Windows.VerticalAlignment.Top" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
      <summary>指定可以在控件的多个实例之间共享 <see cref="T:System.Windows.Controls.Control" /> 的可视结构和性能方面的方面。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ControlTemplate" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ControlTemplate" /> 类的新实例使用指定的对象类型的。</summary>
      <param name="targetType">该类型此模板供使用。</param>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
      <summary>获取或设置此 <see cref="T:System.Windows.Controls.ControlTemplate" /> 预期的类型。</summary>
      <returns>默认值为 null。</returns>
      <exception cref="T:System.ArgumentNullException">模板，则的定义中有 <see cref="T:System.Windows.Controls.ContentPresenter" />， <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> 属性不能为 null 。</exception>
      <exception cref="T:System.ArgumentException">指定的类型无效。<see cref="T:System.Windows.Controls.ControlTemplate" /> 的 <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> 必须是或从 <see cref="T:System.Windows.Controls.Control" />、 <see cref="T:System.Windows.Controls.Page" />或 <see cref="T:System.Windows.Navigation.PageFunctionBase" />继承。</exception>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.Triggers">
      <summary>获取的 <see cref="T:System.Windows.TriggerBase" /> 对象的集合应用属性更改或根据指定的条件的事件。</summary>
      <returns>
        <see cref="T:System.Windows.TriggerBase" /> 对象的集合。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>基于校验模板化父规则集。</summary>
      <param name="templatedParent">元素此模板是应用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> 不能为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Controls.ControlTemplate" /> 的 <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> 必须与 <see cref="T:System.Windows.Controls.Control" /> 的类型应用。</exception>
      <exception cref="T:System.ArgumentException">您必须与 <see cref="T:System.Windows.Controls.ControlTemplate" /> 与 <see cref="T:System.Windows.Controls.Control" /> 通过设置 <see cref="P:System.Windows.Controls.Control.Template" /> 属性在使用在 <see cref="T:System.Windows.Controls.Control" />的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 之前。</exception>
    </member>
    <member name="T:System.Windows.Controls.DataErrorValidationRule">
      <summary>检查表示错误。源对象的 <see cref="T:System.ComponentModel.IDataErrorInfo" /> 实现引发的规则。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataErrorValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>对值的验证检查。</summary>
      <returns>验证结果。</returns>
      <param name="value">要检查的值。</param>
      <param name="cultureInfo">使用的区域性此规则。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGrid">
      <summary>表示显示在自定义网格的数据的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGrid" /> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AddingNewItem">
      <summary>，在新项目添加到 <see cref="T:System.Windows.Controls.DataGrid" />之前，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AlternatingRowBackground">
      <summary>获取或设置背景画笔为交替行的使用。</summary>
      <returns>绘制每第 n 行的背景 n 是由 <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 属性定义的 <see cref="T:System.Windows.Media.Brush" /> 。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AlternatingRowBackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.AlternatingRowBackground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen">
      <summary>获取或设置一个值行详细信息是否可以水平滚动。</summary>
      <returns>true ，如果行详细信息无法移动;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AreRowDetailsFrozenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.AreRowDetailsFrozen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.AutoGenerateColumns">
      <summary>获取或设置一个值列是否自动创建。 </summary>
      <returns>true ，如果列自动创建;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.AutoGenerateColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.AutoGenerateColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns">
      <summary>，当所有列的自动生成完成，发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn">
      <summary>，在单个列自动生成，发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit">
      <summary>调用 <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> 命令，将会将当前单元格或行编辑模式。</summary>
      <returns>true ，如果当前单元格或行进入编辑模式;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.BeginEdit(System.Windows.RoutedEventArgs)">
      <summary>调用 <see cref="M:System.Windows.Controls.DataGrid.BeginEdit" /> 命令，将会将当前单元格或行编辑模式。</summary>
      <returns>true ，如果当前单元格或行进入编辑模式;否则， false。</returns>
      <param name="editingEventArgs">如果调用从事件处理程序，事件参数。可能为 null。</param>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.BeginEditCommand">
      <summary>表示指示视图开始编辑 <see cref="T:System.Windows.Controls.DataGrid" />的当前单元格或行的命令。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.BeginningEdit">
      <summary>，在行或单元格进入编辑模式之前，发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit">
      <summary>调用单元格的 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令或行在当前编辑模式。</summary>
      <returns>true ，如果当前单元格或行退出编辑模式，或者，如果单元格或行未处于编辑模式;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CancelEdit(System.Windows.Controls.DataGridEditingUnit)">
      <summary>调用指定单元格的 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令或行编辑模式。 </summary>
      <returns>true ，如果当前单元格或行退出编辑模式;否则， false。</returns>
      <param name="editingUnit">指定是否取消行或单元格编辑的某个枚举值。</param>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CancelEditCommand">
      <summary>表示指示视图移除对当前单元格的所有挂起的更改或行并还原到状态的命令，在 <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> 命令执行之前。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserAddRows">
      <summary>获取或设置一个值用户是否可以将新行添加到 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>true ，如果用户可以添加新行;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserAddRowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserAddRows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserDeleteRows">
      <summary>获取或设置一个值用户是否可以从 <see cref="T:System.Windows.Controls.DataGrid" />删除行。</summary>
      <returns>true ，如果用户可以删除行;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserDeleteRowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserDeleteRows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserReorderColumns">
      <summary>获取或设置一个值用户是否可以通过用鼠标拖动列标题更改列的显示顺序。</summary>
      <returns>true ，如果用户可以对列重新排序;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserReorderColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserReorderColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeColumns">
      <summary>获取或设置使用鼠标，一个值用户是否可以调整列的宽度。</summary>
      <returns>true ，如果用户能够调整列宽;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserResizeRows">
      <summary>获取或设置使用鼠标，一个值用户是否可以调整高度行。</summary>
      <returns>true ，如果用户可以更改行的高度;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserResizeRowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserResizeRows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CanUserSortColumns">
      <summary>获取或设置一个值用户是否可以通过单击列标头进行排序列。</summary>
      <returns>true ，如果用户可以对列进行排序;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CanUserSortColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CanUserSortColumns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CellEditEnding">
      <summary>，在单元格编辑器执行或取消之前，发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridCellsPanel" />的水平扭曲。</summary>
      <returns>单元格面板的水平扭曲。该注册的默认值为 0.0。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CellsPanelHorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CellStyle">
      <summary>获取或设置样式应用于 <see cref="T:System.Windows.Controls.DataGrid" />的所有单元格。</summary>
      <returns>样式将应用于 <see cref="T:System.Windows.Controls.DataGrid" />的单元格。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CellStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CellStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>卸载该指定项目的行。</summary>
      <param name="element">清除的 <see cref="T:System.Windows.Controls.DataGridRow" /> 。</param>
      <param name="item">行包含的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ClearDetailsVisibilityForItem(System.Object)">
      <summary>清除表示指定的数据项 <see cref="T:System.Windows.Controls.DataGridRow" /> 的 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 属性。</summary>
      <param name="item">在 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 清除行的数据项。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ClipboardCopyMode">
      <summary>获取或设置一个值内容如何复制到剪贴板。</summary>
      <returns>指示的某个枚举值内容如何复制到剪贴板。该注册的默认值为 <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ClipboardCopyModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged">
      <summary>，在之一的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 属性列更改，发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ColumnFromDisplayIndex(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridColumn" /> 位于指定索引处。</summary>
      <returns>在指定的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" />的 <see cref="T:System.Windows.Controls.DataGridColumn" /> 。</returns>
      <param name="displayIndex">检索数据的列的从零开始的索引。 </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="displayIndex" /> 小于 0 或大于或等于列数。</exception>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted">
      <summary>因使用鼠标，那么，当用户在拖动后释放列标题。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta">
      <summary>发生，在光标位置更改后，当用户拖动列标题时。 </summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted">
      <summary>使用鼠标，，那么，当用户开始拖动列标题时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight">
      <summary>获取或设置列标题行的高度。</summary>
      <returns>列标题的高度 (以 与设备无关的单位（每个单位 1/96 英寸）行，。 该注册的默认值为 <see cref="F:System.Double.NaN" />。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle">
      <summary>获取或设置样式应用于 <see cref="T:System.Windows.Controls.DataGrid" />的所有列标题。</summary>
      <returns>该样式会应用于 <see cref="T:System.Windows.Controls.DataGrid" />的所有列标题。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnHeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordered">
      <summary>，将列移动到新位置按显示顺序，发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.ColumnReordering">
      <summary>，在列移动到新位置按显示顺序之前，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.Columns">
      <summary>获取在 <see cref="T:System.Windows.Controls.DataGrid" />包含所有列的集合。</summary>
      <returns>列的集合。 <see cref="T:System.Windows.Controls.DataGrid" />的。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.ColumnWidth">
      <summary>获取或设置列和标题标准宽度和大小调整模式。 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>列和标题的宽度和大小模式，在 与设备无关的单位（每个单位 1/96 英寸）。该注册的默认值为 <see cref="P:System.Windows.Controls.DataGridLength.SizeToHeader" />。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.ColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.ColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit">
      <summary>调用单元格的 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令或行在当前编辑模式。 </summary>
      <returns>true ，如果当前单元格或行退出编辑模式，或者，如果单元格或行未处于编辑模式;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.CommitEdit(System.Windows.Controls.DataGridEditingUnit,System.Boolean)">
      <summary>调用指定单元格的 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令或行在当前编辑模式。 </summary>
      <returns>true ，如果当前单元格或行退出编辑模式;否则， false。</returns>
      <param name="editingUnit">指定是否对行或单元格编辑的某个枚举值。</param>
      <param name="exitEditingMode"> 退出的true 编辑模式;否则， false。</param>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CommitEditCommand">
      <summary>表示指定的命令的目的进行等待对当前单元格的更改或行和退出编辑模式。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent">
      <summary>，在默认行内容准备后，发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentCell">
      <summary>获取或设置具有焦点的单元格。</summary>
      <returns>有关具有焦点的单元格的信息。 </returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.CurrentCellChanged">
      <summary>，当 <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 属性的值已更改，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentCellProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentCell" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentColumn">
      <summary>获取或设置包含当前单元格的列。</summary>
      <returns>包含当前单元格的列。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentColumn" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.CurrentItem">
      <summary>获取数据项绑定到包含当前单元格的行。</summary>
      <returns>数据项限制对包含当前单元格的行。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.CurrentItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.CurrentItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DeleteCommand">
      <summary>表示指示视图中删除当前行的命令。</summary>
      <returns>指示视图中删除当前行的 <see cref="P:System.Windows.Input.ApplicationCommands.Delete" /> 命令。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DragIndicatorStyle">
      <summary>获取或设置时，使用呈现拖动指示符时，将突出显示拖动列标题时的样式。</summary>
      <returns>，在拖动时，此样式将应用于列标题。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DragIndicatorStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.DragIndicatorStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle">
      <summary>获取或设置将指示放置位置，在拖动列标题时的样式。</summary>
      <returns>样式应用于列标题。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.DropLocationIndicatorStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.DropLocationIndicatorStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization">
      <summary>获取或设置一个值列虚拟化是否启用。</summary>
      <returns>true ，如果列虚拟化启用;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableColumnVirtualizationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.EnableColumnVirtualization" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.EnableRowVirtualization">
      <summary>获取或设置一个值行虚拟化是否启用。</summary>
      <returns>true ，如果行虚拟化启用;否则， false。该注册的默认值为 true。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.EnableRowVirtualizationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.EnableRowVirtualization" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FocusBorderBrushKey">
      <summary>获取引用一个集中单元格的默认边框画笔的键。</summary>
      <returns>引用一个集中单元格的默认画笔的键。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.FrozenColumnCount">
      <summary>获取或设置非滚动列的数目。</summary>
      <returns>非滚动列的数目。该注册的默认值为 0。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.FrozenColumnCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.FrozenColumnCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GenerateColumns(System.ComponentModel.IItemProperties)">
      <summary>生成对象的指定属性的列。</summary>
      <returns>列的集合对象的属性。</returns>
      <param name="itemProperties">对象的属性在列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemProperties" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetContainerForItemOverride">
      <summary>实例化新的 <see cref="T:System.Windows.Controls.DataGridRow" />。</summary>
      <returns>是容器的行。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.GetDetailsVisibilityForItem(System.Object)">
      <summary>获取表示指定的数据项 <see cref="T:System.Windows.Controls.DataGridRow" /> 的 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 属性。</summary>
      <returns>包含 <paramref name="item" />行的可见性。</returns>
      <param name="item">在 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 返回行的数据项。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.GridLinesVisibility">
      <summary>获取或设置一个值的网格行显示。</summary>
      <returns>指定的某个枚举值的网格行在 <see cref="T:System.Windows.Controls.DataGrid" />显示。该注册的默认值为 <see cref="F:System.Windows.Controls.DataGridGridLinesVisibility.All" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.GridLinesVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.GridLinesVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HandlesScrolling">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DataGrid" /> 是否支持自定义键盘滚动。</summary>
      <returns>true 在所有情况下。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibility">
      <summary>获取或设置指定行和列标头的可见性的值。</summary>
      <returns>指示行和列标头的可见性的某个枚举值。该注册的默认值为 <see cref="F:System.Windows.Controls.DataGridHeadersVisibility.All" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HeadersVisibilityConverter">
      <summary>获取转换 <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> 为 <see cref="T:System.Windows.Visibility" />的类型转换器。</summary>
      <returns>转换 <see cref="T:System.Windows.Controls.DataGridHeadersVisibility" /> 为 <see cref="T:System.Windows.Visibility" />的类型转换器。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HeadersVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.HeadersVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush">
      <summary>获取或设置用于绘制水平网格线的画笔。</summary>
      <returns>用于绘制在 <see cref="T:System.Windows.Controls.DataGrid" />的水平网格线的画笔。该注册的默认值为黑色 <see cref="T:System.Windows.Media.SolidColorBrush" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalGridLinesBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.HorizontalGridLinesBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值水平滚动条如何在 <see cref="T:System.Windows.Controls.DataGrid" />显示。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.DataGrid" />指定水平滚动条可见性的某个枚举值。该注册的默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.InitializingNewItem">
      <summary>，在新项目中创建，发生。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定项是 <see cref="T:System.Windows.Controls.DataGridRow" />。</summary>
      <returns>true ，如果项目是 <see cref="T:System.Windows.Controls.DataGridRow" />;否则， false。</returns>
      <param name="item">测试的测试项目。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.IsReadOnly">
      <summary>获取或设置一个值用户是否可以编辑该 <see cref="T:System.Windows.Controls.DataGrid" />的值。</summary>
      <returns>true ，如果行和单元格是只读的;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRow">
      <summary>发生，在 <see cref="T:System.Windows.Controls.DataGridRow" /> 实例化后，因此，您可以自定义它，请在使用之前它。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.LoadingRowDetails">
      <summary>，当一个新行详细信息模板将应用于行，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MaxColumnWidth">
      <summary>获取或设置列和标题的最大宽度约束。 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>列和标题的最大宽度。 <see cref="T:System.Windows.Controls.DataGrid" />，在 与设备无关的单位（每个单位 1/96 英寸）。 该注册的默认值为 <see cref="F:System.Double.PositiveInfinity" />。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MaxColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.MaxColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.MeasureOverride(System.Windows.Size)">
      <summary>确定 <see cref="T:System.Windows.Controls.DataGrid" />的所需大小。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGrid" />的所需大小。</returns>
      <param name="availableSize">
        <see cref="T:System.Windows.Controls.DataGrid" /> 可以占用的最大大小。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinColumnWidth">
      <summary>获取或设置列和标题的最小宽度的约束。 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>列和标题的最小宽度，以 与设备无关的单位（每个单位 1/96 英寸）。 该注册的默认值为 20。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.MinColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.MinRowHeight">
      <summary>获取或设置行属性和标头的最小高度约束。 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>行最小高度约束，在 与设备无关的单位（每个单位 1/96 英寸）。 该注册的默认值为 0.0。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.MinRowHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.MinRowHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NewItemMargin">
      <summary>获取或设置新项行的边距。</summary>
      <returns>新项行的边距。该注册的默认值为 0。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NewItemMarginProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.NewItemMargin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset">
      <summary>在视获取滚动列的水平扭曲。</summary>
      <returns>滚动列的水平扭曲。该注册的默认值为 0.0。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.NonFrozenColumnsViewportHorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAddingNewItem(System.Windows.Controls.AddingNewItemEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.AddingNewItem" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnApplyTemplate"></member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratedColumns(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratedColumns" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnAutoGeneratingColumn(System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnBeginningEdit(System.Windows.Controls.DataGridBeginningEditEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteBeginEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 事件与 <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCancelEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 事件与 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCommitEdit(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 事件与 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteCopy(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 事件与 <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> 命令。</summary>
      <param name="args">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCanExecuteDelete(System.Windows.Input.CanExecuteRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.CanExecute" /> 事件与 <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCellEditEnding(System.Windows.Controls.DataGridCellEditEndingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> 事件。 </summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnDisplayIndexChanged(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragCompleted" /> 事件。 </summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragDelta" /> 事件。 </summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnHeaderDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnHeaderDragStarted" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordered(System.Windows.Controls.DataGridColumnEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> 事件。 </summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnColumnReordering(System.Windows.Controls.DataGridColumnReorderingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>，如果打开，选择一个单元格其上下文菜单。</summary>
      <param name="e">打开上下文菜单中的项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCopyingRowClipboardContent(System.Windows.Controls.DataGridRowClipboardEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> 事件。 </summary>
      <param name="args">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCreateAutomationPeer">
      <summary>返回此 <see cref="T:System.Windows.Controls.DataGrid" />的自动化对等类。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.DataGrid" />的自动化对等类。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnCurrentCellChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.CurrentCellChanged" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedBeginEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件与 <see cref="F:System.Windows.Controls.DataGrid.BeginEditCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCancelEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件与 <see cref="F:System.Windows.Controls.DataGrid.CancelEditCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCommitEdit(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件与 <see cref="F:System.Windows.Controls.DataGrid.CommitEditCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedCopy(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件与 <see cref="P:System.Windows.Input.ApplicationCommands.Copy" /> 命令。</summary>
      <param name="args">数据的事件。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.DataGrid.ClipboardCopyMode" /> 设置为 <see cref="F:System.Windows.Controls.DataGridClipboardCopyMode.None" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnExecutedDelete(System.Windows.Input.ExecutedRoutedEventArgs)">
      <summary>处理提供对 <see cref="E:System.Windows.Input.CommandBinding.Executed" /> 事件与 <see cref="P:System.Windows.Controls.DataGrid.DeleteCommand" /> 命令。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnInitializingNewItem(System.Windows.Controls.InitializingNewItemEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>调用时， <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性此元素更改。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>，该项目更改时，执行列自动生成和更新验证标志。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性更改。 </summary>
      <param name="oldValue">旧数据源。</param>
      <param name="newValue">新的源。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <param name="e">指定的键盘数据。按下了键。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnLoadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>更新选定的是由于拖到 <see cref="T:System.Windows.Controls.DataGrid" />的用户鼠标项目的集合。</summary>
      <param name="e">鼠标数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnPreparingCellForEdit(System.Windows.Controls.DataGridPreparingCellForEditEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowDetailsVisibilityChanged(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnRowEditEnding(System.Windows.Controls.DataGridRowEditEndingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> 事件。 </summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectedCellsChanged(System.Windows.Controls.SelectedCellsChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>调用，当所选内容更改。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnSorting(System.Windows.Controls.DataGridSortingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> 事件。</summary>
      <param name="eventArgs">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>调用，只要 <see cref="T:System.Windows.Controls.DataGrid" /> 的模板更改。</summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.TextInput" /> 路由事件提供类处理。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRow(System.Windows.Controls.DataGridRowEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.OnUnloadingRowDetails(System.Windows.Controls.DataGridRowDetailsEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" /> 事件。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>新行为指定项做好准备。</summary>
      <param name="element">新 <see cref="T:System.Windows.Controls.DataGridRow" />。</param>
      <param name="item">行包含的数据项。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.PreparingCellForEdit">
      <summary>，当单元格进入编辑模式，发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowBackground">
      <summary>获取或设置行的背景的默认画笔。</summary>
      <returns>绘制行的背景的画笔。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowBackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowBackground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsScrollingConverter">
      <summary>获取转换布尔值为 <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />的类型转换器。</summary>
      <returns>将布尔值为 <see cref="T:System.Windows.Controls.SelectiveScrollingOrientation" />的类型转换器。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplate">
      <summary>获取或设置用于显示行详细信息的模板。</summary>
      <returns>用于显示行的模板详细信息。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector">
      <summary>获取或设置使用有关行详细信息的模板选择器。</summary>
      <returns>对于行使用的模板选择器详细信息。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged">
      <summary>，当行的可见性详细信息元素更改，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode">
      <summary>获取或设置一个值的行详细信息部分何时显示。</summary>
      <returns>指定直线的可见性的某个枚举值详细信息。该注册的默认值为 <see cref="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowDetailsVisibilityModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowDetailsVisibilityMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.RowEditEnding">
      <summary>，在行编辑组成或取消之前，发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth">
      <summary>获取行标题列的呈现宽度。</summary>
      <returns>行标头中呈现的宽度，以 与设备无关的单位（每个单位 1/96 英寸）。 该注册的默认值为 0.0。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderActualWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderActualWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderStyle">
      <summary>获取或设置样式应用于所有行标头。</summary>
      <returns>样式将应用于 <see cref="T:System.Windows.Controls.DataGrid" />的所有行标头。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplate">
      <summary>获取或设置行标题的模板。</summary>
      <returns>行标题的模板。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector">
      <summary>获取或设置行标题的模板选择器。</summary>
      <returns>行标题的模板选择器。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeaderWidth">
      <summary>获取或设置行标题列的宽度。</summary>
      <returns>行标题列的宽度，在 与设备无关的单位（每个单位 1/96 英寸）。 该注册的默认值为 <see cref="F:System.Double.NaN" />。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeaderWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeaderWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowHeight">
      <summary>获取或设置所有行的建议的高度。</summary>
      <returns>行的高度，在 与设备无关的单位（每个单位 1/96 英寸）。 该注册的默认值为 <see cref="F:System.Double.NaN" />。 有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyle">
      <summary>获取或设置样式适用于所有行。</summary>
      <returns>该样式会应用于 <see cref="T:System.Windows.Controls.DataGrid" />的所有行。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowStyleSelector">
      <summary>获取或设置行的样式选择器。</summary>
      <returns>行的样式选择器。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowStyleSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowStyleSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate">
      <summary>获取或设置用于直观地指示在行验证的错误的模板。</summary>
      <returns>用于直观地指示在行验证的错误的模板。该注册的默认值为 null。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.RowValidationErrorTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.RowValidationRules">
      <summary>获取用于验证在每行的数据的规则。</summary>
      <returns>用于验证在每行的数据的规则。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object)">
      <summary>垂直滚动 <see cref="T:System.Windows.Controls.DataGrid" /> 显示指定的数据项的行。</summary>
      <param name="item">将的数据项输入视图。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.ScrollIntoView(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>垂直滚动 <see cref="T:System.Windows.Controls.DataGrid" /> 和水平显示指定的数据项和列的单元格。 </summary>
      <param name="item">将的数据项输入视图。</param>
      <param name="column">将的列输入视图。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SelectAllCells">
      <summary>选择在 <see cref="T:System.Windows.Controls.DataGrid" />的所有单元格。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectAllCommand">
      <summary>表示指示视图中选择 <see cref="T:System.Windows.Controls.DataGrid" />的所有单元格的命令。</summary>
      <returns>指示视图中选择 <see cref="T:System.Windows.Controls.DataGrid" />的所有单元格的 <see cref="P:System.Windows.Input.ApplicationCommands.SelectAll" /> 命令。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectedCells">
      <summary>获取当前选定单元格的列表。</summary>
      <returns>当前选定单元格的列表。 </returns>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.SelectedCellsChanged">
      <summary>，当 <see cref="P:System.Windows.Controls.DataGrid.SelectedCells" /> 集合更改，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionMode">
      <summary>获取或设置一个值行和单元格如何在 <see cref="T:System.Windows.Controls.DataGrid" />中选择。</summary>
      <returns>指定的某个枚举值行和单元格如何在 <see cref="T:System.Windows.Controls.DataGrid" />中选择。该注册的默认值为 <see cref="F:System.Windows.Controls.DataGridSelectionMode.Extended" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.SelectionMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.SelectionUnit">
      <summary>获取或设置一个值行，单元格或两个是否在 <see cref="T:System.Windows.Controls.DataGrid" />中选择。</summary>
      <returns>指定的某个枚举值行，单元格或两个是否在 <see cref="T:System.Windows.Controls.DataGrid" />中选择。该注册的默认值为 <see cref="F:System.Windows.Controls.DataGridSelectionUnit.FullRow" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.SelectionUnitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.SelectionUnit" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.SetDetailsVisibilityForItem(System.Object,System.Windows.Visibility)">
      <summary>设置包含指定的对象 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 属性的值 <see cref="T:System.Windows.Controls.DataGridRow" /> 的。</summary>
      <param name="item">在 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 设置的行的对象。</param>
      <param name="detailsVisibility">设置的 <see cref="T:System.Windows.Visibility" /> 为包含项目的行。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.Sorting">
      <summary>，在对列进行排序，发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRow">
      <summary>，当 <see cref="T:System.Windows.Controls.DataGridRow" /> 对象变为可供重复使用，发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DataGrid.UnloadingRowDetails">
      <summary>，当行详细信息元素变为可供重复使用，发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGrid.UnselectAllCells">
      <summary>Unselects 在 <see cref="T:System.Windows.Controls.DataGrid" />的所有单元格。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush">
      <summary>获取或设置用于绘制垂直网格行的画笔。</summary>
      <returns>用于绘制在 <see cref="T:System.Windows.Controls.DataGrid" />的垂直网格行的画笔。该注册的默认值为黑色 <see cref="T:System.Windows.Media.SolidColorBrush" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalGridLinesBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.VerticalGridLinesBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility">
      <summary>获取或设置一个值垂直滚动条如何在 <see cref="T:System.Windows.Controls.DataGrid" />显示。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.DataGrid" />指定垂直滚动条可见性的某个枚举值。该注册的默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" />。有关的更多信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGrid.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGrid.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.AutoGeneratingColumn" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs" /> 类的新实例。 </summary>
      <param name="propertyName">属性区域的名称对生成的列。</param>
      <param name="propertyType">属性区域的类型到生成的列。</param>
      <param name="column">生成的列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Cancel">
      <summary>获取或设置一个值是否应取消操作。</summary>
      <returns>true ，如果事件应取消;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.Column">
      <summary>获取或设置生成的列。</summary>
      <returns>生成的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyDescriptor">
      <summary>具有特性区域的类型描述符生成的列。</summary>
      <returns>包含属性的元数据的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyName">
      <summary>具有特性区域的名称生成的列。</summary>
      <returns>属性区域的名称对生成的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs.PropertyType">
      <summary>具有特性区域的类型生成的列。</summary>
      <returns>属性区域的类型到生成的列。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBeginningEditEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.BeginningEdit" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBeginningEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridBeginningEditEventArgs" /> 类的新实例。 </summary>
      <param name="column">包含要编辑的单元格的列。 </param>
      <param name="row">包含要编辑的单元格的行。 </param>
      <param name="editingEventArgs">有关导致单元格进入的用户操作的信息编辑模式。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Cancel">
      <summary>获取或设置一个值是否应取消操作。 </summary>
      <returns>true ，如果事件应取消;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Column">
      <summary>获取包含要编辑的单元格的列。 </summary>
      <returns>包含要编辑的单元格的列。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.EditingEventArgs">
      <summary>获取有关导致单元格进入编辑模式的用户操作的信息。</summary>
      <returns>有关导致单元格进入的用户操作的信息编辑模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBeginningEditEventArgs.Row">
      <summary>获取包含要编辑的单元格的行。 </summary>
      <returns>包含要编辑的单元格的行。 </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridBoundColumn">
      <summary>用作的基类用作可以绑定到 <see cref="T:System.Windows.Controls.DataGrid" />的数据源的属性的列。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridBoundColumn" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.Binding">
      <summary>获取或设置关联列将与数据源的属性绑定。</summary>
      <returns>表示将用于列的数据的对象。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ClipboardContentBinding">
      <summary>，在获取或设置单元格内容获取或设置约束对象为剪贴板时，使用。</summary>
      <returns>表示绑定的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle">
      <summary>获取或设置时，使用呈现元素时列用于在编辑模式下的单元格显示的样式。</summary>
      <returns>使用，在呈现一个编辑器的组件的样式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.EditingElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle">
      <summary>获取或设置时，使用呈现元素时列的单元格显示不是在编辑模式下的样式。</summary>
      <returns>使用，在呈现一个显示组件的样式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridBoundColumn.ElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>，当 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性的值发生更改时，请注意 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <param name="oldBinding">前面的绑定。</param>
      <param name="newBinding">绑定列已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>确定根据属性规则的 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 属性的值从包含该列的数据网格。</summary>
      <returns>true ，如果列中的单元格无法编辑基于从数据网格的规则;否则， false。</returns>
      <param name="baseValue">传递给委托的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridBoundColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>重新生成一个单元格的内容列中的响应约束更改。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改列属性的名称。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCell">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 控件的单元格。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCell" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.ArrangeOverride(System.Windows.Size)">
      <summary>确定单元内容的最终大小和位置。 </summary>
      <returns>控件的最终大小。</returns>
      <param name="arrangeSize">单元格可占用的最大大小。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.Column">
      <summary>获取或设置单元格所在的列。</summary>
      <returns>单元格所在的列。 </returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.ColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsEditing">
      <summary>获取或设置一个值，该值指示单元格是否处于编辑模式。</summary>
      <returns>如果该单元格行处于编辑模式，则为 true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsEditingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsReadOnly">
      <summary>获取一个值，该值指示单元格是否可置于编辑模式。</summary>
      <returns>如果单元格无法置于编辑模式，则为 true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCell.IsSelected">
      <summary>获取或设置一个值，该值指示单元格是否处于选定状态。</summary>
      <returns>如果单元格处于选定状态，则为 true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCell.IsSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCell.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.MeasureOverride(System.Windows.Size)">
      <summary>确定 <see cref="T:System.Windows.Controls.DataGridCell" /> 的所需大小。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridCell" /> 的所需大小。</returns>
      <param name="constraint">单元格可占用的最大大小。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnColumnChanged(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridColumn)">
      <summary>在单元格的 <see cref="P:System.Windows.Controls.DataGridCell.Column" /> 属性更改时调用。 </summary>
      <param name="oldColumn">旧的列定义。</param>
      <param name="newColumn">新的列定义。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnCreateAutomationPeer">
      <summary>返回此 <see cref="T:System.Windows.Controls.DataGridCell" /> 的自动化对等方。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.DataGridCell" /> 的自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnIsEditingChanged(System.Boolean)">
      <summary>当 <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 属性更改时调用。</summary>
      <param name="isEditing">
        <see cref="P:System.Windows.Controls.DataGridCell.IsEditing" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>报告按下了键。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>报告按下了键。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnRender(System.Windows.Media.DrawingContext)">
      <summary>绘制单元格和右侧网格线。</summary>
      <param name="drawingContext">单元格的绘制说明。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>报告文本撰写。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCell.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> 事件。</summary>
      <param name="e">事件的数据。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Selected">
      <summary>在单元格处于选定状态时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.DataGridCell.Selected" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGridCell.Unselected">
      <summary>在清除单元格选择时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridCell.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.DataGridCell.Unselected" /> 路由事件的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellClipboardEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> 和 <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellClipboardEventArgs.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellClipboardEventArgs" /> 类的新实例。 </summary>
      <param name="item">包含单元格发生此事件的行的数据项。</param>
      <param name="column">包含单元格发生此事件的列。 </param>
      <param name="content">事件发生单元格的文本值。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Column">
      <summary>获取包含单元格发生此事件的列。 </summary>
      <returns>包含单元格发生此事件的列。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Content">
      <summary>获取或设置操作发生单元格的文本值。</summary>
      <returns>事件发生单元格的文本值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellClipboardEventArgs.Item">
      <summary>获取包含单元格发生此事件的行的数据项。</summary>
      <returns>包含单元格发生此事件的行的数据项。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellEditEndingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.CellEditEnding" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement,System.Windows.Controls.DataGridEditAction)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellEditEndingEventArgs" /> 类的新实例。 </summary>
      <param name="column">包含单元格发生此事件的列。 </param>
      <param name="row">包含单元格发生此事件的行。 </param>
      <param name="editingElement">单元格在编辑器中显示模式的组件。</param>
      <param name="editAction">一个值编辑器是否已取消或做。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Cancel">
      <summary>获取或设置一个值是否应取消操作。 </summary>
      <returns>true ，如果事件应取消;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Column">
      <summary>获取包含单元格发生此事件的列。 </summary>
      <returns>包含单元格发生此事件的列。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditAction">
      <summary>获取一个值编辑器是否已取消或做。 </summary>
      <returns>一个值编辑器是否已取消或做。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.EditingElement">
      <summary>获取单元格在编辑器中显示模式的组件。</summary>
      <returns>单元格在编辑器中显示模式的组件。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellEditEndingEventArgs.Row">
      <summary>获取包含单元格发生此事件的行。 </summary>
      <returns>包含单元格发生此事件的行。 </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellInfo">
      <summary>表示有关特定单元格的信息。 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)">
      <summary>使用指定的数据项和列，初始化 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 结构的新实例。</summary>
      <param name="item">包含单元格的行的数据项。</param>
      <param name="column">包含单元格的列。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> framework 的新实例指定的单元格中。</summary>
      <param name="cell">信息将生成的单元格。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Column">
      <summary>获取包含单元格的列。</summary>
      <returns>包含单元格的列。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.Equals(System.Object)">
      <summary>指示指定对象是否与当前实例是否相等。</summary>
      <returns>true ，如果比较对象表示同一单元格;否则， false。 </returns>
      <param name="obj">比较的对象与当前实例。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.GetHashCode">
      <summary>返回当前 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 结构的哈希代码。</summary>
      <returns>结构的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.IsValid">
      <summary>获取一个值结构是否包含有效的信息。</summary>
      <returns>true ，如果结构具有有效的信息;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCellInfo.Item">
      <summary>获取包含单元格的行的数据项。</summary>
      <returns>包含单元格的行的数据项。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>指示两 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 实例是否相等。</summary>
      <returns>true ，如果两个结构表示同一单元格;否则， false。</returns>
      <param name="cell1">比较的第一个结构。</param>
      <param name="cell2">比较的第二结构。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)">
      <summary>指示两 <see cref="T:System.Windows.Controls.DataGridCellInfo" /> 实例是否不相等。</summary>
      <returns>true ，如果两个结构不表示同一单元格;否则， false。</returns>
      <param name="cell1">比较的第一个结构。</param>
      <param name="cell2">比较的第二结构。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCellsPanel">
      <summary>表示计划单元格和列标题在数据网格中的面板。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCellsPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.ArrangeOverride(System.Windows.Size)">
      <summary>定位面板的最终大小和位置。</summary>
      <returns>面板的最终大小和位置。</returns>
      <param name="arrangeSize">面板可以占用的最大大小。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.BringIndexIntoView(System.Int32)">
      <summary>滚动视区为指定索引处的项。</summary>
      <param name="index">应将变得可见项的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出范围。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.MeasureOverride(System.Windows.Size)">
      <summary>定位面板的所需大小。</summary>
      <returns>面板的所需大小。</returns>
      <param name="constraint">面板可以占用的最大大小。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnClearChildren">
      <summary>调用，清除子级的集合 <see cref="T:System.Windows.Controls.DataGrid" /> 的。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>指示 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性值已更改。</summary>
      <param name="oldIsItemsHost">
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性的旧值。</param>
      <param name="newIsItemsHost">
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCellsPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>，在 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的项更改后，更新可见单元格。</summary>
      <param name="sender">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 引发事件的对象。</param>
      <param name="args">数据的事件。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridCheckBoxColumn">
      <summary>表示该 <see cref="T:System.Windows.Controls.DataGrid" /> 的列宿主在其单元格的 <see cref="T:System.Windows.Controls.CheckBox" /> 控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridCheckBoxColumn" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultEditingElementStyle">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 属性的默认值。</summary>
      <returns>表示该样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.DefaultElementStyle">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 属性的默认值。 </summary>
      <returns>表示该样式的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的 <see cref="T:System.Windows.Controls.CheckBox" /> 控件。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的新 checkbox 控件。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的只读 <see cref="T:System.Windows.Controls.CheckBox" /> 控件。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的新，只读 checkbox 控件。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState">
      <summary>获取或设置一个值承载的 <see cref="T:System.Windows.Controls.CheckBox" /> 控件是否启用三个状态或两。</summary>
      <returns>true ，如果承载的控件支持三种状态; false ，只要支持两种状态。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeStateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridCheckBoxColumn.IsThreeState" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>调用时，列中的单元格进入编辑模式。</summary>
      <returns>未编辑的值。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="editingEventArgs">有关导致一个单元格进入编辑模式的用户操作的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridCheckBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新一个单元格的内容在列中以响应该列的属性值更改。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改列属性的名称。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCellContent">
      <summary>，当目录复制到剪贴板时，封装一 <see cref="T:System.Windows.Controls.DataGrid" /> 单元格的值和位置使用。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 结构的新实例。 </summary>
      <param name="item">包含复制的单元格的行的数据项。 </param>
      <param name="column">包含复制的单元格的列。 </param>
      <param name="content">复制的单元格的文本值。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Column">
      <summary>获取包含复制的单元格的列。 </summary>
      <returns>包含复制的单元格的列。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Content">
      <summary>获取复制的单元格的文本值。</summary>
      <returns>复制的单元格的文本值。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)">
      <summary>指示当前与指定的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 个实例是否相等。</summary>
      <returns>true ，如果当前与指定的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例具有相同 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />、 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />和 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> 属性值;否则， false。 </returns>
      <param name="data">
        <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例和当前 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例进行比较</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridClipboardCellContent.Item">
      <summary>获取包含复制的单元格的行的数据项。 </summary>
      <returns>包含复制的单元格的行的数据项。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>指示指定的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 个实例是否相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例具有相同 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />、 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />和 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> 属性值;否则， false。 </returns>
      <param name="clipboardCellContent1">要比较的第一 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</param>
      <param name="clipboardCellContent2">要比较的第二 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)">
      <summary>指示指定的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例不是等效的。</summary>
      <returns>true ，如果当前与指定的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例没有相同的 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Item" />、 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Column" />和 <see cref="P:System.Windows.Controls.DataGridClipboardCellContent.Content" /> 属性值;否则， false。 </returns>
      <param name="clipboardCellContent1">要比较的第一 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</param>
      <param name="clipboardCellContent2">要比较的第二 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 实例。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridClipboardCopyMode">
      <summary>定义指定的常数用户是否可以将 <see cref="T:System.Windows.Controls.DataGrid" /> 控件中的数据绑定到剪贴板，并且列标头值是否包含的。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.ExcludeHeader">
      <summary>用户可以复制选定单元格的文本值到剪贴板，并且，列标头值不包括在内。 </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.IncludeHeader">
      <summary>用户可以复制选定单元格的文本值到剪贴板，并且，列标头值包括在内。 </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridClipboardCopyMode.None">
      <summary>剪贴板支持被禁用。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumn">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 列。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridColumn" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ActualWidth">
      <summary>获取列的当前宽度，以 与设备无关的单位（每个单位 1/96 英寸）。</summary>
      <returns>列的宽度。 与设备无关的单位（每个单位 1/96 英寸）的。该注册的默认值为 0。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.ActualWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.ActualWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.ActualWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>导致编辑的单元格恢复为原始，未编辑的值。</summary>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="uneditedValue">在编辑器中单元格的基元，未编辑的值。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserReorder">
      <summary>获取或设置一个值用户是否可以通过拖动列标题更改列显示位置。</summary>
      <returns>true ，如果用户可以拖动列标题移到新位置;否则， false。该注册的默认值为 true。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserReorderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CanUserReorder" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserReorder" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserResize">
      <summary>获取或设置使用鼠标，一个值用户是否可以调整列宽。</summary>
      <returns>true ，如果用户可以调整列;否则， false。该注册的默认值为 true。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserResizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CanUserResize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserResize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CanUserSort">
      <summary>获取或设置一个值用户是否可以通过单击列标头进行排序列。</summary>
      <returns>true ，如果用户可以对列进行排序;否则， false。该注册的默认值为 true。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CanUserSortProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CanUserSort" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CanUserSort" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.CellStyle">
      <summary>获取或设置用于呈现列中的单元格的样式。</summary>
      <returns>用于呈现列中的单元格的样式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.CellStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.CellStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.CellStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.ClipboardContentBinding">
      <summary>，在获取或设置单元格内容获取或设置约束对象为剪贴板时，使用。</summary>
      <returns>表示绑定的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>在退出编辑模式的单元格之前执行任何必要的验证。</summary>
      <returns>true ，如果未找到任何验证错误;否则， false。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent">
      <summary>，在单元格剪贴板内容准备后，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DataGridOwner">
      <summary>获取包含该列的 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</summary>
      <returns>包含该列的 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DisplayIndex">
      <summary>获取或设置列的显示位置相对于其他列在 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>列的从零开始的位置，因此，它在关联的 <see cref="T:System.Windows.Controls.DataGrid" />显示。该注册的默认值为 -1。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DisplayIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle">
      <summary>获取或设置样式对象应用于列标题在拖动操作过程。</summary>
      <returns>应用的样式对象在列标头中拖动操作过程。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.DragIndicatorStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>当重写在派生类中，获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的一个版本的元素。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的新编辑的元素。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">由行表示包含预期的单元格的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>当重写在派生类中，获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的只读元素。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的新只读元素。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">由行表示包含预期的单元格的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)">
      <summary>表示指定的数据项此列和行的交集获取单元格的 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性值。</summary>
      <returns>单元格内容;或 null，因此，如果未找到单元格。</returns>
      <param name="dataItem">由行表示包含预期的单元格的数据项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataItem" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)">
      <summary>此列和指定的行的交集检索单元格的 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性值。</summary>
      <returns>单元格内容;或 null，因此，如果未找到单元格。</returns>
      <param name="dataGridRow">包含预期的单元格的行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataGridRow" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Header">
      <summary>获取或设置列标题的内容。</summary>
      <returns>列标头内容。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Header" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat">
      <summary>获取或设置格式模式适用于列标题的内容。</summary>
      <returns>表示格式设置模式的字符串值。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderStyle">
      <summary>获取或设置时，使用呈现列标题时的样式。</summary>
      <returns>用于呈现列标头的样式;或 null，使用 <see cref="P:System.Windows.Controls.DataGrid.ColumnHeaderStyle" /> 设置。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplate">
      <summary>获取或设置定义列标头的可视化表示形式的模板。</summary>
      <returns>定义列标头的可视化表示形式的对象。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector">
      <summary>获取或设置选择使用的模板为列标题的对象。</summary>
      <returns>选择模板的对象。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.HeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated">
      <summary>获取一个值列是否自动生成。</summary>
      <returns>true ，如果列自动生成;否则， false。该注册的默认值为 false。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsAutoGeneratedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsAutoGenerated" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsFrozen">
      <summary>获取一个值列正在阻止水平滚动。</summary>
      <returns>true ，如果列不能水平滚动;否则， false。该注册的默认值为 false。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsFrozenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.IsFrozen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsFrozen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.IsReadOnly">
      <summary>获取或设置一个值列中的单元格是否可编辑。</summary>
      <returns>true ，如果列中的单元格无法编辑;否则， false。该注册的默认值为 false。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MaxWidth">
      <summary>获取或设置列的最大宽度约束。</summary>
      <returns>最大栏宽，在 与设备无关的单位（每个单位 1/96 英寸）。该注册的默认值为 <see cref="F:System.Double.PositiveInfinity" />。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MaxWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.MaxWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.MinWidth">
      <summary>获取或设置列的最小宽度的约束。</summary>
      <returns>最小的列宽，在 与设备无关的单位（每个单位 1/96 英寸）。该注册的默认值为 20。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.MinWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.MinWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)">
      <summary>通知包含此列列属性已更改的 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <param name="propertyName">更改列属性的名称。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>确定包含此列根据 <see cref="T:System.Windows.Controls.DataGrid" /> 属性规则的 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 属性的值。</summary>
      <returns>true ，如果列中的单元格无法编辑基于 <see cref="T:System.Windows.Controls.DataGrid" />的规则;否则， false。</returns>
      <param name="baseValue">传递给委托的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnCopyingCellClipboardContent(System.Object)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridColumn.CopyingCellClipboardContent" /> 事件。</summary>
      <returns>表示单元格的内容的对象。</returns>
      <param name="item">所选元素的数据上下文。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.OnPastingCellClipboardContent(System.Object,System.Object)">
      <summary>引发 <see cref="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent" /> 事件。</summary>
      <param name="item">所选元素的数据上下文。</param>
      <param name="cellContent">对的内容粘贴到单元格中。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridColumn.PastingCellClipboardContent">
      <summary>，在剪贴板内容移到单元格之前，发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当重写在派生类中，设置单元格内容根据需要进行编辑。</summary>
      <returns>当返回由派生类，未编辑的单元格值。此实现在所有情况下返回 null 。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="editingEventArgs">有关导致一个单元格进入编辑模式的用户操作的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>当重写在派生类中，更新一个单元格的内容列中的响应更改的列属性值。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">更改列属性的名称。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortDirection">
      <summary>获取或设置排序方向 (按升序还是降序) 列。</summary>
      <returns>表示排序方向的值。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.SortDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.SortDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.SortMemberPath">
      <summary>获取或设置属性名或属性名一个句点分隔的层次结构，指示成员排序。</summary>
      <returns>排序的数据项成员的路径。该注册的默认值为空字符串 ("")。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.SortMemberPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.SortMemberPath" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.SortMemberPath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Visibility">
      <summary>获取或设置列的可见性。</summary>
      <returns>指定列可见性的枚举值。该注册的默认值为 <see cref="F:System.Windows.Visibility.Visible" />。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.VisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Visibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumn.Width">
      <summary>获取或设置列宽或自动调整大小模式。</summary>
      <returns>表示列宽或自动调整大小模式的结构。该注册的默认值为 <see cref="P:System.Windows.Controls.DataGridLength.Auto" />。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridColumn.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridColumn.Width" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridColumn.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged" /> 和 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordered" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridColumnEventArgs" /> 类的新实例。</summary>
      <param name="column">列与事件相关。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnEventArgs.Column">
      <summary>获取列与事件相关。</summary>
      <returns>表示列的对象与事件相关。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridColumnReorderingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.ColumnReordering" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridColumnReorderingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridColumnReorderingEventArgs" /> 类的新实例。</summary>
      <param name="dataGridColumn">移动后的列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.Cancel">
      <summary>获取或设置一个值重新排序的操作是否在完成之前停止。</summary>
      <returns>true ，如果重新排序的操作完成之前停止;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DragIndicator">
      <summary>获取或设置用于显示标题可视化指示符列中拖动控件。</summary>
      <returns>用于显示已拖动列标题的控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridColumnReorderingEventArgs.DropLocationIndicator">
      <summary>获取或设置用于在列拖动操作时显示当前放置位置可视化指示符的控件。</summary>
      <returns>在列拖动操作时显示放置位置指示符的控件。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridComboBoxColumn">
      <summary>表示该 <see cref="T:System.Windows.Controls.DataGrid" /> 的列宿主在其单元格的 <see cref="T:System.Windows.Controls.ComboBox" /> 控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridComboBoxColumn" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>导致编辑的列单元格恢复为指定值。</summary>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="uneditedValue">在编辑器中单元格的前面，未编辑的值。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ClipboardContentBinding">
      <summary>，在获取或设置单元格内容获取或设置约束对象为剪贴板时，使用。</summary>
      <returns>表示绑定的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>在退出该编辑模式之前执行任何必要的验证。</summary>
      <returns>false ，如果验证失败;否则， true。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultEditingElementStyle">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 属性的默认值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" />的默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DefaultElementStyle">
      <summary>获取 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" />的默认值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" />的默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath">
      <summary>获取或设置路径在源对象的值提供对象的可视化表示形式。</summary>
      <returns>一个值的路径在源对象。该注册的默认值为空字符串 ("")。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.DisplayMemberPath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle">
      <summary>获取或设置时，使用呈现元素时列用于在编辑模式下的单元格显示的样式。</summary>
      <returns>使用，在呈现一个编辑器的组件的样式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.EditingElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle">
      <summary>获取或设置时，使用呈现元素时列的单元格显示不是在编辑模式下的样式。</summary>
      <returns>使用，在呈现一个显示组件的样式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ElementStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ElementStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值的组合框控件。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值的新组合框控件。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值的只读组合框控件。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" />、 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" />和 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> 值的新，只读组合框控件。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource">
      <summary>获取或设置用于生成组合框控件内容的集合。</summary>
      <returns>用于生成组合框控件内容的集合。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.ItemsSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.ItemsSource" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnCoerceIsReadOnly(System.Boolean)">
      <summary>确定包含此列根据属性规则的 <see cref="P:System.Windows.Controls.DataGridColumn.IsReadOnly" /> 属性的值从 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <returns>true ，如果在列的组合框不能编辑;否则， false。</returns>
      <param name="baseValue">传递给委托的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedItemBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding" /> ，当属性更改时，请注意 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <param name="oldBinding">前面的绑定。</param>
      <param name="newBinding">绑定列已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnSelectedValueBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding" /> ，当属性更改时，请注意 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <param name="oldBinding">前面的绑定。</param>
      <param name="newBinding">绑定列已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.OnTextBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding" /> ，当属性更改时，请注意 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <param name="oldBinding">前面的绑定。</param>
      <param name="newBinding">绑定列已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>调用时，列中的单元格进入编辑模式。</summary>
      <returns>未编辑的值。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="editingEventArgs">有关导致一个单元格进入编辑模式的用户操作的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridComboBoxColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新一个单元格的内容列中的响应约束更改。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改列属性的名称。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedItemBinding">
      <summary>获取或设置当前选定项的绑定。</summary>
      <returns>选定项的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValueBinding">
      <summary>获取或设置选定项的值，后者使用 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" />。</summary>
      <returns>选定的值的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath">
      <summary>获取或设置用于获取从 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" />的 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 的路径。</summary>
      <returns>路径获取选定的值。该注册的默认值为空字符串 ("")。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridComboBoxColumn.SelectedValuePath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBinding">
      <summary>获取或设置文本的绑定。 <see cref="T:System.Windows.Controls.ComboBox" /> 控件的文本框部分。</summary>
      <returns>当前选定项的文本的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridComboBoxColumn.TextBlockComboBoxStyleKey">
      <summary>获取该样式的资源键可应用于只读组合框。</summary>
      <returns>样式的键。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditAction">
      <summary>定义一些常量，这些常量指定要取消还是提交编辑。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Cancel">
      <summary>要取消的编辑。 </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditAction.Commit">
      <summary>要提交的编辑。 </summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridEditingUnit">
      <summary>定义一些常量，这些常量指定对单元格级别还是对行级别启用编辑。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Cell">
      <summary>启用单元格编辑。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridEditingUnit.Row">
      <summary>启用行编辑。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridGridLinesVisibility">
      <summary>定义在 <see cref="T:System.Windows.Controls.DataGrid" />指定网格行可见性的常数。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.All">
      <summary>水平和垂直网格线是可见的。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Horizontal">
      <summary>仅水平网格线可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.None">
      <summary>网格行不可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridGridLinesVisibility.Vertical">
      <summary>仅垂直网格行可见。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHeadersVisibility">
      <summary>定义在 <see cref="T:System.Windows.Controls.DataGrid" />指定行和列标头可见性的常数。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.All">
      <summary>行和列标头可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Column">
      <summary>仅列标头可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.None">
      <summary>标头不可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridHeadersVisibility.Row">
      <summary>仅行标题可见。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridHyperlinkColumn">
      <summary>表示该 <see cref="T:System.Windows.Controls.DataGrid" /> 的列宿主在其单元格的 <see cref="T:System.Uri" /> 元素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridHyperlinkColumn" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>导致编辑的列单元格恢复为指定值。</summary>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="uneditedValue">在编辑器中单元格的前面，未编辑的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>在退出之前执行任何必要的验证编辑模式。</summary>
      <returns>false ，如果验证失败;否则， true。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding">
      <summary>获取或设置绑定超链接的文本。</summary>
      <returns>为超链接的文本的绑定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 属性的默认值。</summary>
      <returns>表示该样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 属性的默认值。</summary>
      <returns>表示该样式的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值的可编辑 <see cref="T:System.Windows.Controls.TextBox" /> 元素。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值的新文本框控件。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值的只读 <see cref="T:System.Windows.Documents.Hyperlink" /> 元素。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> 属性值的新，只读超链接元素。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.OnContentBindingChanged(System.Windows.Data.BindingBase,System.Windows.Data.BindingBase)">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.ContentBinding" /> ，当属性更改时，请注意 <see cref="T:System.Windows.Controls.DataGrid" /> 。</summary>
      <param name="oldBinding">前面的绑定。</param>
      <param name="newBinding">绑定列已更改。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>调用时，列中的单元格进入编辑模式。</summary>
      <returns>单元格的未编辑的值。</returns>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
      <param name="editingEventArgs">有关导致一个单元格进入编辑模式的用户操作的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridHyperlinkColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新一个单元格的内容在列中以响应该列的属性值更改。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改列属性的名称。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName">
      <summary>获取或设置一个目标窗口或框架的名称超链接的。</summary>
      <returns>目标窗口或框架的名称。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridHyperlinkColumn.TargetNameProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridHyperlinkColumn.TargetName" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridLength">
      <summary>表示元素的长度。 <see cref="T:System.Windows.Controls.DataGrid" /> 控件中。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的新实例与一个绝对值的以像素为单位。</summary>
      <param name="pixels">初始化长度的绝对像素值 (96 像素每英寸)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pixels" /> 是 <see cref="F:System.Double.NaN" />、 <see cref="F:System.Double.NegativeInfinity" />或 <see cref="F:System.Double.PositiveInfinity" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的新实例与指定的值和单元测试的。</summary>
      <param name="value">元素的请求范围。</param>
      <param name="type">用于确定的类型元素的大小如何计算。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 是 <see cref="F:System.Double.NaN" />、 <see cref="F:System.Double.NegativeInfinity" />或 <see cref="F:System.Double.PositiveInfinity" />。- 或 -<paramref name="type" /> 不是 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />、 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />、 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />、 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />或 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的新实例与此指定值、单元测试、所需的值和显示的值。</summary>
      <param name="value">元素的请求范围。</param>
      <param name="type">用于确定的类型元素的大小如何计算。</param>
      <param name="desiredValue">为组件所需的计算的大小。</param>
      <param name="displayValue">元素的已分配大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 是 <see cref="F:System.Double.NaN" />、 <see cref="F:System.Double.NegativeInfinity" />或 <see cref="F:System.Double.PositiveInfinity" />。- 或 -<paramref name="type" /> 不是 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />、 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />、 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />、 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />或 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />。- 或 -<paramref name="desiredValue" /> 是 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />。- 或 -<paramref name="displayValue" /> 是 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Auto">
      <summary>获取表示标准自动调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</summary>
      <returns>表示标准自动调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DesiredValue">
      <summary>获取计算的像素值所需的元素。</summary>
      <returns>的像素数目为元素的大小计算。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.DisplayValue">
      <summary>像素值分配为元素的大小。</summary>
      <returns>为元素分配的象素数。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Object)">
      <summary>确定指定的对象是否与当前 <see cref="T:System.Windows.Controls.DataGridLength" />相等。</summary>
      <returns>true ，如果指定的对象与值或调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 和当前 <see cref="T:System.Windows.Controls.DataGridLength" />相同;否则， false。</returns>
      <param name="obj">比较的对象与当前实例。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)">
      <summary>确定指定的 <see cref="T:System.Windows.Controls.DataGridLength" /> 是否与当前 <see cref="T:System.Windows.Controls.DataGridLength" />相等。</summary>
      <returns>true ，如果指定的对象与值或调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 和当前 <see cref="T:System.Windows.Controls.DataGridLength" />相同;否则， false。</returns>
      <param name="other">比较的 <see cref="T:System.Windows.Controls.DataGridLength" /> 与当前实例。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.GetHashCode">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridLength" />的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Windows.Controls.DataGridLength" />的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAbsolute">
      <summary>获取一个值此实例是否根据固定像素值的元素。</summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Pixel" />;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsAuto">
      <summary>获取一个值此实例是否自动根据单元格内容和列标题大小的元素。</summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToCells">
      <summary>获取一个值此实例是否自动根据单元格的内容的元素。</summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells" />;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsSizeToHeader">
      <summary>获取一个值此实例是否自动根据该标题大小的元素。</summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader" />;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.IsStar">
      <summary>获取一个值此实例是否自动根据可用空间的加权比例的元素。</summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Star" />;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>比较相等的两 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</summary>
      <returns>true ，如果两 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例具有相同的值或调整大小模式;否则， false。</returns>
      <param name="gl1">比较的第一 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例。</param>
      <param name="gl2">比较的第二 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Implicit(System.Double)~System.Windows.Controls.DataGridLength">
      <summary>转换 <see cref="T:System.Double" /> 为 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的实例。</summary>
      <returns>指示指定长度的对象。</returns>
      <param name="value">初始化长度的绝对像素值 (96 像素每英寸)。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)">
      <summary>比较两 <see cref="T:System.Windows.Controls.DataGridLength" /> framework 确定它们是否不相等。</summary>
      <returns>true ，如果两 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例没有相同的值或调整大小模式;否则， false。</returns>
      <param name="gl1">比较的第一 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例。</param>
      <param name="gl2">比较的第二 <see cref="T:System.Windows.Controls.DataGridLength" /> 实例。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToCells">
      <summary>获取表示基本单元格的自动调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</summary>
      <returns>表示基本单元格的自动调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.SizeToHeader">
      <summary>获取表示基于标题的自动调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</summary>
      <returns>表示基于标题的自动调整大小模式的 <see cref="T:System.Windows.Controls.DataGridLength" /> 结构。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridLength.ToString">
      <summary>返回表示当前对象的字符串。</summary>
      <returns>表示当前对象的字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.UnitType">
      <summary>获取用于确定的类型元素的大小如何计算。</summary>
      <returns>表示的类型之间如何确定。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridLength.Value">
      <summary>获取 <see cref="T:System.Windows.Controls.DataGridLength" /> 的绝对值 (以像素为单位)。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataGridLength" /> 的绝对值 (以像素为单位) 或 1.0，则 <see cref="P:System.Windows.Controls.DataGridLength.UnitType" /> 属性设置为 <see cref="F:System.Windows.Controls.DataGridLengthUnitType.Auto" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthConverter">
      <summary>来回 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的实例将各种类型的实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridLengthConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定指定的类型的实例是否可以转换为 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的实例。</summary>
      <returns>true ，如果该转换器可以执行转换;否则， false。</returns>
      <param name="context">提供一个布局上下文的对象。</param>
      <param name="sourceType">转换的类型不同。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的实例是否可以转换为指定类型的实例。</summary>
      <returns>true ，如果该转换器可以执行转换;否则， false。</returns>
      <param name="context">提供一个布局上下文的对象。</param>
      <param name="destinationType">转换的类型。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>转换为 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的实例指定的对象。</summary>
      <returns>转换后的值。</returns>
      <param name="context">提供一个布局上下文的对象。</param>
      <param name="culture">对于使用的对象作为当前区域性。</param>
      <param name="value">转换后的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可强制转换为类型 <see cref="T:System.Windows.Controls.DataGridLength" />的有效类型。</exception>
    </member>
    <member name="M:System.Windows.Controls.DataGridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>转换 <see cref="T:System.Windows.Controls.DataGridLength" /> 类的实例转换为指定类型的实例。</summary>
      <returns>转换后的值。</returns>
      <param name="context">提供一个布局上下文的对象。</param>
      <param name="culture">对于使用的对象作为当前区域性。</param>
      <param name="value">转换的 <see cref="T:System.Windows.Controls.DataGridLength" /> 。</param>
      <param name="destinationType">转换类型的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Windows.Controls.DataGridLength" /> 或 <paramref name="destinationType" /> 不是有效的转换类型。</exception>
    </member>
    <member name="T:System.Windows.Controls.DataGridLengthUnitType">
      <summary>定义指定的常数。 <see cref="T:System.Windows.Controls.DataGrid" /> 的元素进行大小调整。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Auto">
      <summary>该范围根据单元格和列标题的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Pixel">
      <summary>数组大小是使用像素表示的固定值。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToCells">
      <summary>该范围根据单元格的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.SizeToHeader">
      <summary>该范围根据列标题的内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridLengthUnitType.Star">
      <summary>数组大小是可用空间的加权比例。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.PreparingCellForEdit" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.#ctor(System.Windows.Controls.DataGridColumn,System.Windows.Controls.DataGridRow,System.Windows.RoutedEventArgs,System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridPreparingCellForEditEventArgs" /> 类的新实例。 </summary>
      <param name="column">包含要编辑的单元格的列。 </param>
      <param name="row">包含要编辑的单元格的行。 </param>
      <param name="editingEventArgs">有关导致单元格进入的用户操作的信息编辑模式。</param>
      <param name="editingElement">列用于在编辑模式下的单元格显示的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Column">
      <summary>获取包含要编辑的单元格的列。 </summary>
      <returns>包含要编辑的单元格的列。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingElement">
      <summary>获取列用于在编辑模式下的单元格显示的元素。</summary>
      <returns>列用于在编辑模式下的单元格显示的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.EditingEventArgs">
      <summary>获取有关导致单元格进入编辑模式的用户操作的信息。</summary>
      <returns>有关导致单元格进入的用户操作的信息编辑模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridPreparingCellForEditEventArgs.Row">
      <summary>获取包含要编辑的单元格的行。 </summary>
      <returns>包含要编辑的单元格的行。 </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRow">
      <summary>表示 <see cref="T:System.Windows.Controls.DataGrid" /> 行。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRow" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.AlternationIndex">
      <summary>获取行的索引中的设置交替行。</summary>
      <returns>行的索引中的设置交替行。该注册的默认值为 0。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.AlternationIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.AlternationIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.AlternationIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.ArrangeOverride(System.Windows.Size)">
      <summary>排列各个行的内容。</summary>
      <returns>行使用的实际区域。</returns>
      <param name="arrangeBounds">对于行可用区域。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplate">
      <summary>获取或设置用于显示行的详细信息部分的模板。 </summary>
      <returns>用于显示行的模板详细信息部分或 null 使用 <see cref="P:System.Windows.Controls.DataGrid.RowDetailsTemplate" /> 设置。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector">
      <summary>获取或设置用于选择行详细信息模板提供自定义逻辑的模板选择器。 </summary>
      <returns>选择的行一个模板选择器详细模板。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.DetailsVisibility">
      <summary>获取或设置一个值的行详细信息部分何时显示。 </summary>
      <returns>指定直线的可见性的值进行了详细介绍。该注册的默认值为 <see cref="F:System.Windows.Visibility.Collapsed" />。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.DetailsVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.DetailsVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetIndex">
      <summary>返回行的数据项的索引。 <see cref="T:System.Windows.Controls.DataGrid" />中的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。 </summary>
      <returns>行的数据项的索引或 -1; 如果未找到该项目。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.GetRowContainingElement(System.Windows.FrameworkElement)">
      <summary>返回包含指定元素的 <see cref="T:System.Windows.Controls.DataGridRow" /> 。 </summary>
      <returns>包含指定元素的 <see cref="T:System.Windows.Controls.DataGridRow" /> 。 </returns>
      <param name="element">顺序包含的元素中。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Header">
      <summary>获取或设置表示行标头内容的对象。 </summary>
      <returns>行标头内容。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderStyle">
      <summary>获取或设置时，使用呈现行标题时的样式。 </summary>
      <returns>使用，在呈现行标题时的样式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplate">
      <summary>获取或设置用于显示行标题的模板。 </summary>
      <returns>用于显示行标题或 null 使用 <see cref="P:System.Windows.Controls.DataGrid.RowHeaderTemplate" /> 设置的模板。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector">
      <summary>获取或设置用于选择行标题模板提供自定义逻辑的模板选择器。 </summary>
      <returns>选择的行标头模板的模板选择器。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.HeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsEditing">
      <summary>获取一个值行是否处于编辑模式。</summary>
      <returns>true ，如果行中编辑模式;否则， false。该注册的默认值为 false。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsEditingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.IsEditing" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.IsEditing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsNewItem">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.DataGridRow" /> 是否为占位符新项目的或尚未提交的项目。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.DataGridRow" /> 只是占位符新项目的或尚未提交项的;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsNewItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.IsNewItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.IsNewItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.IsSelected">
      <summary>获取或设置一个值行是否已选中。 </summary>
      <returns>true ，如果行已选择;否则， false。该注册的默认值为 false。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.Item">
      <summary>获取或设置行表示的数据项。 </summary>
      <returns>行表示的数据项。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ItemsPanel">
      <summary>获取或设置定义 panel 控件单元格格式行中的模板。 </summary>
      <returns>定义面板中单元格格式使用该行的模板。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ItemsPanelProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.ItemsPanel" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.ItemsPanel" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用更新显示的单元格，当 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合已更改。 </summary>
      <param name="columns">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合。</param>
      <param name="e">从 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合的 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnCreateAutomationPeer">
      <summary>返回此行的新 <see cref="T:System.Windows.Automation.Peers.DataGridRowAutomationPeer" /> 。</summary>
      <returns>此行的新自动化对等类。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnHeaderChanged(System.Object,System.Object)">
      <summary>调用时， <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 属性的值已更改。</summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 属性以前的值。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.DataGridRow.Header" /> 属性的新值。 </param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnItemChanged(System.Object,System.Object)">
      <summary>，当 <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 属性值更改时，更新显示的单元格。 </summary>
      <param name="oldItem">
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 属性以前的值。</param>
      <param name="newItem">
        <see cref="P:System.Windows.Controls.DataGridRow.Item" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>调用，每当更新了所有依赖项属性的有效值本 <see cref="T:System.Windows.Controls.DataGridRow" /> 的。 </summary>
      <param name="e">描述属性更改事件数据，和旧值和新值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>，当 <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 属性值因 true时，将引发 <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> 事件。 </summary>
      <param name="e">事件数据，为空，则此方法由 <see cref="T:System.Windows.Controls.DataGridRow" />调用。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridRow.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>，当 <see cref="P:System.Windows.Controls.DataGridRow.IsSelected" /> 属性值因 false时，将引发 <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> 事件。 </summary>
      <param name="e">事件数据，为空，则此方法由 <see cref="T:System.Windows.Controls.DataGridRow" />调用。</param>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Selected">
      <summary>，在选择行时，发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.SelectedEvent">
      <summary>标识该 <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.DataGridRow.Selected" /> 的标识符路由事件。</returns>
    </member>
    <member name="E:System.Windows.Controls.DataGridRow.Unselected">
      <summary>，如果清除此选项，则发生行选择。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.UnselectedEvent">
      <summary>标识该 <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.DataGridRow.Unselected" /> 的标识符路由事件。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate">
      <summary>获取或设置用于直观地指示在行验证的错误的模板。 </summary>
      <returns>用于直观地指示在行验证的错误的使用 <see cref="P:System.Windows.Controls.DataGrid.RowValidationErrorTemplate" /> 设置的模板或 null 。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridRow.ValidationErrorTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridRow.ValidationErrorTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowClipboardEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.CopyingRowClipboardContent" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.#ctor(System.Object,System.Int32,System.Int32,System.Boolean)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowClipboardEventArgs" /> 类的新实例。 </summary>
      <param name="item">发生此事件的行的数据项。</param>
      <param name="startColumnDisplayIndex">在行包含第一个单元格列的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 值。</param>
      <param name="endColumnDisplayIndex">在行包含最后一个单元格列的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 值。 </param>
      <param name="isColumnHeadersRow">值指示的事件发生的行是否表示列标题。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent">
      <summary>获取的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 值列表表示复制的单元格的文本值。 </summary>
      <returns>的 <see cref="T:System.Windows.Controls.DataGridClipboardCellContent" /> 值列表表示复制的单元格的文本值。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.EndColumnDisplayIndex">
      <summary>获取行中包含最后一个单元格列的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 值。 </summary>
      <returns>在行包含最后一个单元格列的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 值。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowClipboardEventArgs.FormatClipboardCellValues(System.String)">
      <summary>返回 <see cref="P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent" /> 值，一个字符串所指定的格式。 </summary>
      <returns>格式化的字符串。</returns>
      <param name="format">序列化单元格重要数据格式。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow">
      <summary>获取一个值是否发生此事件表示列标题的行。 </summary>
      <returns>true ，如果行表示列标头;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.Item">
      <summary>获取事件所在行的数据项。</summary>
      <returns>发生此事件的行的数据项。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowClipboardEventArgs.StartColumnDisplayIndex">
      <summary>获取行中包含第一个单元格列的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 值。</summary>
      <returns>在行包含第一个单元格列的 <see cref="P:System.Windows.Controls.DataGridColumn.DisplayIndex" /> 值。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.LoadingRowDetails" />、 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRowDetails" />和 <see cref="E:System.Windows.Controls.DataGrid.RowDetailsVisibilityChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowDetailsEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowDetailsEventArgs" /> 类的新实例。 </summary>
      <param name="row">发生此事件的行。</param>
      <param name="detailsElement">行详细信息部分 framework 组件。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.DetailsElement">
      <summary>获取行详细信息部分作为 framework 组件。 </summary>
      <returns>行详细信息部分 framework 组件。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowDetailsEventArgs.Row">
      <summary>获取发生此事件的行。</summary>
      <returns>发生此事件的行。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowDetailsVisibilityMode">
      <summary>定义指定的常数 <see cref="T:System.Windows.Controls.DataGrid" /> 行详细信息时显示。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Collapsed">
      <summary>行详细信息部分没有为任何行显示。 </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.Visible">
      <summary>行详细信息部分的所有行显示。 </summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected">
      <summary>行详细信息部分为选定的行仅显示。 </summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEditEndingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.RowEditEnding" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEditEndingEventArgs.#ctor(System.Windows.Controls.DataGridRow,System.Windows.Controls.DataGridEditAction)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowEditEndingEventArgs" /> 类的新实例。 </summary>
      <param name="row">发生此事件的行。 </param>
      <param name="editAction">一个值编辑器是否已取消或做。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Cancel">
      <summary>获取或设置一个值是否应取消操作。 </summary>
      <returns>true ，如果事件应取消;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.EditAction">
      <summary>获取一个值编辑器是否已取消或做。 </summary>
      <returns>一个值编辑器是否已取消或做。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEditEndingEventArgs.Row">
      <summary>获取发生此事件的行。 </summary>
      <returns>发生此事件的行。 </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridRowEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.LoadingRow" /> 和 <see cref="E:System.Windows.Controls.DataGrid.UnloadingRow" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridRowEventArgs.#ctor(System.Windows.Controls.DataGridRow)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridRowEventArgs" /> 类的新实例。 </summary>
      <param name="row">发生此事件的行。 </param>
    </member>
    <member name="P:System.Windows.Controls.DataGridRowEventArgs.Row">
      <summary>获取发生此事件的行。 </summary>
      <returns>发生此事件的行。 </returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionMode">
      <summary>定义指定的常数单个或多项选择是否由 <see cref="T:System.Windows.Controls.DataGrid" /> 控件支持。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Extended">
      <summary>在 <see cref="T:System.Windows.Controls.DataGrid" /> 的多个项目可以同时选择。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionMode.Single">
      <summary>仅在 <see cref="T:System.Windows.Controls.DataGrid" /> 的一个项。一次只能选择。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSelectionUnit">
      <summary>定义指定的常数单元格，行或两者，是否用于选择在 <see cref="T:System.Windows.Controls.DataGrid" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.Cell">
      <summary>仅单元格是可选的。单击单元格选中单元格。单击任何行或列标题不执行。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.CellOrRowHeader">
      <summary>单元格和行是可选的。单击单元格仅选择单元格。单击行标题可以选择整行。</summary>
    </member>
    <member name="F:System.Windows.Controls.DataGridSelectionUnit.FullRow">
      <summary>仅整行是可选的。单击单元格或行标题可以选择整行。</summary>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridSortingEventArgs.#ctor(System.Windows.Controls.DataGridColumn)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridSortingEventArgs" /> 类的新实例。</summary>
      <param name="column">排序的列。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridSortingEventArgs.Handled">
      <summary>获取或设置指定的值该路由事件是否已处理。</summary>
      <returns>true ，如果事件已处理的;否则， false。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.Controls.DataGridSortingEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.DataGrid" />的 <see cref="E:System.Windows.Controls.DataGrid.Sorting" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">数据的事件。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTemplateColumn">
      <summary>表示宿主在其单元格模板指定目录的 <see cref="T:System.Windows.Controls.DataGrid" /> 列。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridTemplateColumn" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate">
      <summary>获取或设置模板中使用显示了在编辑模式下单元格的内容。</summary>
      <returns>用于显示单元格内容是在模板编辑模式。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector">
      <summary>获取或设置确定的对象使用的模板显示了在编辑模式下单元格的内容。</summary>
      <returns>确定的对象使用的模板显示了在编辑模式下单元格的内容。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate">
      <summary>获取或设置模板用于显示不是在编辑模式下单元格的内容。</summary>
      <returns>使用的模板显示不是在编辑模式下单元格的内容。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelector">
      <summary>获取或设置确定的对象使用的模板显示不是在编辑模式下单元格的内容。 </summary>
      <returns>确定的对象使用的模板。该注册的默认值为 null。有关的信息会影响值，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTemplateColumn.CellTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的元素定义的由 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate" /> 。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的新编辑的元素。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的元素定义的由 <see cref="P:System.Windows.Controls.DataGridTemplateColumn.CellTemplate" /> 。</summary>
      <returns>列绑定到的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值的新，只读元素。</returns>
      <param name="cell">将包含所生成的元素的单元格。</param>
      <param name="dataItem">包含预期的单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTemplateColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新一个单元格的内容列中的响应模板属性值更改。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改列属性的名称。</param>
    </member>
    <member name="T:System.Windows.Controls.DataGridTextColumn">
      <summary>表示一个 <see cref="T:System.Windows.Controls.DataGrid" /> 列，该列在其单元格中承载文本内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataGridTextColumn" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
      <summary>导致正在编辑的列单元格恢复到指定的值。</summary>
      <param name="editingElement">列为处于编辑模式的单元格显示的元素。</param>
      <param name="uneditedValue">正在编辑的单元格中先前未编辑的值。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.CommitCellEdit(System.Windows.FrameworkElement)">
      <summary>在退出编辑模式之前执行任何必需的验证。</summary>
      <returns>如果验证失败，则为 false；否则为 true。</returns>
      <param name="editingElement">列为处于编辑模式的单元格显示的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultEditingElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.EditingElementStyle" /> 属性的默认值。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.DefaultElementStyle">
      <summary>
        <see cref="P:System.Windows.Controls.DataGridBoundColumn.ElementStyle" /> 属性的默认值。</summary>
      <returns>一个表示样式的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontFamily">
      <summary>获取或设置列中单元格内容的字体系列。</summary>
      <returns>列中单元格内容的字体系列。注册的默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。有关可能影响该值的因素的信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontSize">
      <summary>获取或设置列中单元格内容的字号。</summary>
      <returns>列中单元格内容的字体大小。注册的默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。有关可能影响该值的因素的信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontSize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontStyle">
      <summary>获取或设置列中单元格内容的字体样式。</summary>
      <returns>列中单元格内容的字体样式。注册的默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" />。有关可能影响该值的因素的信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.FontWeight">
      <summary>获取或设置列中单元格内容的字体粗细。</summary>
      <returns>列中单元格内容的字体粗细。注册的默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" />。有关可能影响该值的因素的信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.FontWeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DataGridTextColumn.Foreground">
      <summary>获取或设置用于绘制列中单元格的文本内容的 <see cref="T:System.Windows.Media.Brush" />。</summary>
      <returns>用于绘制列中单元格内容的画笔。注册的默认值为 <see cref="P:System.Windows.SystemColors.ControlTextBrush" />。有关可能影响该值的因素的信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DataGridTextColumn.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DataGridTextColumn.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取一个 <see cref="T:System.Windows.Controls.TextBox" /> 控件，该控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <returns>一个新的文本框控件，该控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
      <param name="cell">将包含所生成元素的单元格。</param>
      <param name="dataItem">由包含预期单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
      <summary>获取一个只读 <see cref="T:System.Windows.Controls.TextBlock" /> 控件，该控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</summary>
      <returns>一个新的只读文本框控件，该控件绑定到列的 <see cref="P:System.Windows.Controls.DataGridBoundColumn.Binding" /> 属性值。</returns>
      <param name="cell">将包含所生成元素的单元格。</param>
      <param name="dataItem">由包含预期单元格的行表示的数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
      <summary>当列中的单元格进入编辑模式时调用。</summary>
      <returns>单元格的未编辑值。</returns>
      <param name="editingElement">列为处于编辑模式的单元格显示的元素。</param>
      <param name="editingEventArgs">有关导致单元格进入编辑模式的用户笔势的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.DataGridTextColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)">
      <summary>刷新列中单元格的内容，以响应列属性值更改。</summary>
      <param name="element">要更新的单元格。</param>
      <param name="propertyName">已更改的列属性的名称。</param>
    </member>
    <member name="T:System.Windows.Controls.DataTemplateSelector">
      <summary>提供一种选择根据数据对象并将数据组件的 <see cref="T:System.Windows.DataTemplate" /> 。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <summary>当重写在派生类中，返回根据自定义逻辑的 <see cref="T:System.Windows.DataTemplate" /> 。</summary>
      <returns>返回 <see cref="T:System.Windows.DataTemplate" /> 或 null。默认值为 null。</returns>
      <param name="item">数据对象可以选择模板。</param>
      <param name="container">数据对象。</param>
    </member>
    <member name="T:System.Windows.Controls.DatePicker">
      <summary>表示允许用户选择日期的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DatePicker" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.BlackoutDates">
      <summary>获取或设置被标记为不可选日期的集合。</summary>
      <returns>不能选择日期的集合。默认值为空集合。</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarClosed">
      <summary>，在下拉 <see cref="T:System.Windows.Controls.Calendar" /> 关闭的，发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.CalendarOpened">
      <summary>，打开时，发生下拉 <see cref="T:System.Windows.Controls.Calendar" /> 。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.CalendarStyle">
      <summary>获取或设置时，使用呈现日历时的样式。</summary>
      <returns>使用，在呈现日历时的样式。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.CalendarStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.DateValidationError">
      <summary>出现问题，则 <see cref="P:System.Windows.Controls.DatePicker.Text" /> 设置为不能被解释为日期的值，或者为日期不能选择。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDate">
      <summary>获取或设置该日期显示。</summary>
      <returns>显示的日期。默认值为 <see cref="P:System.DateTime.Today" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">一个指定日期不在 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />定义的范围。并 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateEnd">
      <summary>获取或设置要显示的最后一个日期。</summary>
      <returns>显示的最后日期。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.DisplayDateStart">
      <summary>获取或设置要显示的第一个日期。</summary>
      <returns>显示的第一个日期。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.FirstDayOfWeek">
      <summary>获取或设置被视为如早期的日。</summary>
      <returns>表示如早期的 <see cref="T:System.DayOfWeek" /> 。当前区域性所依赖的默认值为 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DatePicker" /> 是否具有焦点。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.DatePicker" /> 具有焦点;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsDropDownOpen">
      <summary>获取或设置一个值下拉 <see cref="T:System.Windows.Controls.Calendar" /> 是否打开或关闭。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.Calendar" /> 处于打开状态;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.IsTodayHighlighted">
      <summary>获取或设置一个值当前日期是否将显示。</summary>
      <returns>true ，如果当前日期显示;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnApplyTemplate">
      <summary>，在新模板是应用后，生成 <see cref="T:System.Windows.Controls.DatePicker" /> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" /> 路由事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" /> 路由事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer">
      <summary>返回 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 供自动化基础结构使用。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DatePicker" /> 对象的 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> 路由事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDate">
      <summary>获取或设置当前选定的日期。</summary>
      <returns>当前选定的日期。默认值为 null。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">一个指定日期不在 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 和 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />定义的范围，或者该指定日期。 <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> 集合。 </exception>
    </member>
    <member name="E:System.Windows.Controls.DatePicker.SelectedDateChanged">
      <summary>，更改，发生 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent">
      <summary>标识该 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> 路由事件。</summary>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.SelectedDateFormat">
      <summary>获取或设置用于显示选定日期的格式。</summary>
      <returns>用于显示选定日期的格式。默认值为 <see cref="F:System.Windows.Controls.DatePickerFormat.Long" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">所指定的格式无效。</exception>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.SelectedDateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePicker.Text">
      <summary>获取 <see cref="T:System.Windows.Controls.DatePicker" />显示的文本，或者将选定的日期。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.DatePicker" />显示的文本。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.DatePicker.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DatePicker.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DatePicker.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DatePicker.ToString">
      <summary>提供为所选日期的文本表示形式。</summary>
      <returns>所选日期的文本表示形式或空字符串，则 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 是 null。</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)">
      <summary>初始化 <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> 类的新实例。 </summary>
      <param name="exception">从 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件的初始异常。</param>
      <param name="text">导致 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件的文本。</param>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception">
      <summary>获取初始异常与 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</summary>
      <returns>异常与验证失败。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text">
      <summary>获取或设置导致 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件的文本。</summary>
      <returns>导致验证错误的文本。</returns>
    </member>
    <member name="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException">
      <summary>获取或设置一个值是否应引发 <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> 。</summary>
      <returns>true ，如果异常应引发;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Controls.DatePickerFormat">
      <summary>指定 <see cref="T:System.Windows.Controls.DatePicker" /> 的日期格式。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Long">
      <summary>指定是否应使用未缩写的星期几和月份名称显示日期。此值显示与 <see cref="M:System.DateTime.ToLongDateString" /> 方法返回的字符串相等的字符串。</summary>
    </member>
    <member name="F:System.Windows.Controls.DatePickerFormat.Short">
      <summary>指定是否应使用缩写的星期几和月份名称显示日期。此值显示与 <see cref="M:System.DateTime.ToShortDateString" /> 方法返回的字符串相等的字符串。</summary>
    </member>
    <member name="T:System.Windows.Controls.Decorator">
      <summary>为在中应用效果或在一个子元素附近，例如 <see cref="T:System.Windows.Controls.Border" /> 或 <see cref="T:System.Windows.Controls.Viewbox" />的元素提供基类。</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Decorator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.Decorator" /> 元素的内容。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.Decorator" /> 元素及其子元素的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 此元素使用将其子内容。</param>
    </member>
    <member name="P:System.Windows.Controls.Decorator.Child">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Decorator" />的单一子元素。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Decorator" />的单一子元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.GetVisualChild(System.Int32)">
      <summary>获取子 <see cref="T:System.Windows.Media.Visual" /> 元素在指定的 <paramref name="index" /> 位置。</summary>
      <returns>子元素与指定的 <paramref name="index" /> 位置。</returns>
      <param name="index">子元素的索引位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 比可视子元素的数目大。</exception>
    </member>
    <member name="P:System.Windows.Controls.Decorator.LogicalChildren">
      <summary>获取可用于重复 <see cref="T:System.Windows.Controls.Decorator" />的逻辑种属性元素的枚举器。</summary>
      <returns>可以使用重复 <see cref="T:System.Windows.Controls.Decorator" />的逻辑种属性元素的枚举器。</returns>
    </member>
    <member name="M:System.Windows.Controls.Decorator.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> 处理过程中，这些 <see cref="T:System.Windows.Controls.Decorator" /> 的子元素为使其做好准备。</summary>
      <returns>元素的目标 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不应超过的一个上限 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value"> 添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.Decorator.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text"> 添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Decorator.VisualChildrenCount">
      <summary>获取与 <see cref="T:System.Windows.Controls.Decorator" />此实例的可视子元素的数目相等的值。</summary>
      <returns>可视子元素的数目。</returns>
    </member>
    <member name="T:System.Windows.Controls.DefinitionBase">
      <summary>定义要求的功能支持 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 和 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 类使用的共享大小调整组。这是一个抽象类。</summary>
    </member>
    <member name="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup">
      <summary>获取或设置标识 <see cref="T:System.Windows.Controls.ColumnDefinition" /> 或 <see cref="T:System.Windows.Controls.RowDefinition" /> 为中定义的组的成员共享大小调整属性的值。   </summary>
      <returns>标识共享大小调整组的 <see cref="T:System.String" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.DefinitionBase.SharedSizeGroupProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Dock">
      <summary>指定 <see cref="T:System.Windows.Controls.DockPanel" /> 内子元素的 <see cref="T:System.Windows.Controls.Dock" /> 位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Bottom">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 底部的子元素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Left">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 左侧的子元素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Right">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 右侧的子元素。</summary>
    </member>
    <member name="F:System.Windows.Controls.Dock.Top">
      <summary>位于 <see cref="T:System.Windows.Controls.DockPanel" /> 顶部的子元素。 </summary>
    </member>
    <member name="T:System.Windows.Controls.DockPanel">
      <summary>定义您可水平或垂直排列子元素的区域，互相。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DockPanel" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
      <summary>将内容 (子元素) <see cref="T:System.Windows.Controls.DockPanel" /> 元素。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.DockPanel" /> 元素的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 此元素使用排列子元素。</param>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.Dock">
      <summary>获取或设置一个子元素位置在父 <see cref="T:System.Windows.Controls.DockPanel" />中的值。</summary>
      <returns>是在 <see cref="T:System.Windows.Controls.DockPanel" />内子元素的位置。默认值为 <see cref="F:System.Windows.Controls.Dock.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.DockProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DockPanel.Dock" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
      <summary>获取 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性 的值指定的 <see cref="T:System.Windows.UIElement" />的。</summary>
      <returns>元素的 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 属性值。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.DockPanel.LastChildFill">
      <summary>获取或设置一个中的最后一个子元素填充剩余的可用空间的 <see cref="T:System.Windows.Controls.DockPanel" /> 拉伸的值。   </summary>
      <returns>true ，如果加载剩余空间的最后一个子元素拉伸;否则 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DockPanel.LastChildFill" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" /> 处理过程中，在封送处理之前测量 <see cref="T:System.Windows.Controls.DockPanel" /> 的子元素。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> 表示的元素范围要。</returns>
      <param name="constraint">超出了最大 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
      <summary>设置 <see cref="P:System.Windows.Controls.DockPanel.Dock" /> 附加属性 的值设置为一个指定的元素。 </summary>
      <param name="element">该附加属性写入元素。</param>
      <param name="dock">所需的 <see cref="T:System.Windows.Controls.Dock" /> 值。</param>
    </member>
    <member name="T:System.Windows.Controls.DocumentViewer">
      <summary>表示可承载分页的 <see cref="T:System.Windows.Documents.FixedDocument" /> 内容 (如 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />的文档查看控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.DocumentViewer" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DocumentViewer" /> 是否可以更缩放。 </summary>
      <returns>true ，如果该控件可以更缩放;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DocumentViewer" /> 是否可以更放大。 </summary>
      <returns>true ，如果该控件可以更放大;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanIncreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom" />的依赖项属性标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveDown">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DocumentViewer" /> 是否可以更下移文档。 </summary>
      <returns>true ，如果该控件可以更下移文档;否则， false ，如果文档位于底部。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveDownProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveLeft">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DocumentViewer" /> 是否可以更移动到文档的左侧。 </summary>
      <returns>true ，如果控件可以将更左文档;否则， false ，如果文档在最左边缘。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveLeftProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveRight">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DocumentViewer" /> 是否可以更移动文档中的右侧。 </summary>
      <returns>true ，如果该控件可以更移动文档中的右侧;否则， false ，如果文档在最右边缘。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveRightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.CanMoveUp">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.DocumentViewer" /> 是否可以更引发文档。 </summary>
      <returns>true ，如果该控件可以更引发文档;否则， false ，如果文档在最顶层的边缘。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.CanMoveUpProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.DecreaseZoom">
      <summary>在文档内容之外的缩放由一个缩放步骤。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentHeight">
      <summary>获取总体的垂直高度分页文档。 </summary>
      <returns>在 与设备无关的像素指定的分页的内容的总体的垂直高度。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ExtentWidth">
      <summary>获取分页的总体水平宽度的文档。 </summary>
      <returns>在 与设备无关的像素指定的内容布局区域的当前级别的宽度。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ExtentWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.Find">
      <summary>会将焦点移动到搜索工具栏搜索文档内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToHeight">
      <summary>有关单页到当前视区的高度。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToHeightCommand">
      <summary>获取执行 <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 操作的 <see cref="T:System.Windows.Input.RoutedUICommand" /> 。</summary>
      <returns>执行 <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 操作的路由命令。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross">
      <summary>有关文档为当前 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 属性设置为。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)">
      <summary>有关文档到页宽的指定最大数目。</summary>
      <param name="pagesAcross">适用于页的最大数量当前 <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth" />。 </param>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcrossCommand">
      <summary>获取执行 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 操作的 <see cref="T:System.Windows.Input.RoutedUICommand" /> 。</summary>
      <returns>执行 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 操作的路由命令。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.FitToWidth">
      <summary>有关单页到当前视区的宽度。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.FitToWidthCommand">
      <summary>获取执行 <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 操作的 <see cref="T:System.Windows.Input.RoutedUICommand" /> 。</summary>
      <returns>执行 <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 操作的路由命令。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)">
      <summary>返回的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 元素的集合当前显示。</summary>
      <returns>的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 元素的集合。 <see cref="T:System.Windows.Controls.DocumentViewer" /> 控件当前显示。</returns>
      <param name="changed">当此方法返回时，包含 true ，如果 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 元素的集合在以后更改了最后一个调用 <see cref="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)" />;否则， false。</param>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalOffset">
      <summary>获取或设置水平滚动位置。 </summary>
      <returns>在 与设备无关的像素指定的当前水平滚动位置。初始默认值为 0.0。</returns>
      <exception cref="T:System.ArgumentException">指定的值设置为负数。</exception>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset" />依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing">
      <summary>获取或设置在页之间的水平空间。 </summary>
      <returns>在 与设备无关的像素指定的显示页之间的水平空间。默认值为 10.0。</returns>
      <exception cref="T:System.ArgumentException">指定的值设置为负数。</exception>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.HorizontalPageSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.IncreaseZoom">
      <summary>在文档内容是由一个缩放步骤。 </summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross">
      <summary>获取或设置定义页列中最大数值显示。 </summary>
      <returns>页列的最大数量要显示的。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.MaxPagesAcrossProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveDown">
      <summary>移动到 16 与设备无关的像素下的文档内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveLeft">
      <summary>移动文档内容保留 16 与设备无关的像素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveRight">
      <summary>移动文档内容权限 16 与设备无关的像素。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.MoveUp">
      <summary>移动 16 与设备无关的像素的文档内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnApplyTemplate">
      <summary>响应调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>响应来自 <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase" /> 实现的 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)" /> 方法。</summary>
      <param name="element">使工作表可见的对象。</param>
      <param name="rect">使工作表可见的 <paramref name="element" /> 的矩形区域。</param>
      <param name="pageNumber">将查看页的数字。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.DocumentViewer" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</summary>
      <returns>新 <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDecreaseZoomCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.DecreaseZoom" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnDocumentChanged">
      <summary>响应时调用更改显示的文档。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFindCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.Find" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFirstPageCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToHeightCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand(System.Int32)">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)" /> 方法。</summary>
      <param name="pagesAcross">适用于页的数量在内容区域中。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnFitToWidthCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnGoToPageCommand(System.Int32)">
      <summary>响应调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)" /> 方法。</summary>
      <param name="pageNumber">为位置的分页。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnIncreaseZoomCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.IncreaseZoom" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnLastPageCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveDownCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.MoveDown" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveLeftCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.MoveLeft" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveRightCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.MoveRight" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnMoveUpCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.MoveUp" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnNextPageCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnPreviousPageCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageDownCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageDown" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageLeftCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageRightCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageRight" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnScrollPageUpCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.ScrollPageUp" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.OnViewThumbnailsCommand">
      <summary>响应调用 <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageDown">
      <summary>将一个表示向下滚动视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageLeft">
      <summary>滚动出一个视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageRight">
      <summary>滚动纠正一个视区。</summary>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ScrollPageUp">
      <summary>滚动引发一个视区。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ShowPageBorders">
      <summary>获取或设置一个值放置阴影边框页是否显示。 </summary>
      <returns>true ，如果放置阴影边框显示;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ShowPageBordersProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalOffset">
      <summary>获取或设置垂直滚动位置。  </summary>
      <returns>在 与设备无关的像素的当前垂直滚动位置偏移量。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing">
      <summary>获取或设置在显示页之间的垂直间距。 </summary>
      <returns>在显示页之间的垂直空间。 与设备无关的像素。默认值为 10.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.VerticalPageSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportHeight">
      <summary>获取滚动的内容区域的垂直大小。 </summary>
      <returns>滚动的内容区域的垂直大小在 与设备无关的像素的。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewportWidth">
      <summary>获取滚动的内容区域的水平大小。 </summary>
      <returns>滚动的内容区域的水平大小。 与设备无关的像素的。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ViewportWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.DocumentViewer.ViewThumbnails">
      <summary>显示页的缩略图表示。</summary>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.ViewThumbnailsCommand">
      <summary>获取执行 <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 操作的 <see cref="T:System.Windows.Input.RoutedUICommand" /> 。</summary>
      <returns>执行 <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails" /> 操作的路由命令。</returns>
    </member>
    <member name="P:System.Windows.Controls.DocumentViewer.Zoom">
      <summary>获取或设置文档缩放百分比。 </summary>
      <returns>是以值缩放百分比， 5.0 到 5000.0。默认值为 100.0，它对应于为 100.0%。</returns>
    </member>
    <member name="F:System.Windows.Controls.DocumentViewer.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ExceptionValidationRule">
      <summary>表示一个规则，该规则检查在绑定源属性更新过程中引发的异常。</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>对值执行验证检查。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
      <param name="value">要检查的值（来自绑定目标）。</param>
      <param name="cultureInfo">要在此规则中使用的区域性。</param>
    </member>
    <member name="T:System.Windows.Controls.ExpandDirection">
      <summary>指定 <see cref="T:System.Windows.Controls.Expander" /> 控件打开的方向。 </summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Down">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件向下展开。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Left">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件打开左侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Right">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件打开。 </summary>
    </member>
    <member name="F:System.Windows.Controls.ExpandDirection.Up">
      <summary>
        <see cref="T:System.Windows.Controls.Expander" /> 控件打开。</summary>
    </member>
    <member name="T:System.Windows.Controls.Expander">
      <summary>表示显示标题都具有可折叠窗口显示内容的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Expander" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Controls.Expander.Collapsed">
      <summary>出现问题，则 <see cref="T:System.Windows.Controls.Expander" /> 控件的内容窗口关闭，并且只 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 可见。</summary>
    </member>
    <member name="F:System.Windows.Controls.Expander.CollapsedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Expander.Collapsed" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Expander.ExpandDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Expander" /> 窗口的内容打开的方向。  </summary>
      <returns>定义定向内容窗口打开的某个 <see cref="T:System.Windows.Controls.ExpandDirection" /> 值。默认值为 <see cref="F:System.Windows.Controls.ExpandDirection.Down" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Expander.ExpandDirection" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Expander.ExpandDirection" />的依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Expander.Expanded">
      <summary>，当 <see cref="T:System.Windows.Controls.Expander" /> 控件的内容窗口打开显示其标题和内容，发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Expander.ExpandedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Expander.Expanded" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Expander.Expanded" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Expander.IsExpanded">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Expander" /> 窗口的内容是否可见。  </summary>
      <returns>true ，如果内容窗口中展开;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Expander.IsExpanded" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCollapsed">
      <summary>，当 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 属性从 true 更改 false时，将引发 <see cref="E:System.Windows.Controls.Expander.Collapsed" /> 事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的实现 <see cref="T:System.Windows.Controls.Expander" /> 控件的。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Expander" /> 控件的新 <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.Expander.OnExpanded">
      <summary>，当 <see cref="P:System.Windows.Controls.Expander.IsExpanded" /> 属性从 false 更改 true时，将引发 <see cref="E:System.Windows.Controls.Expander.Expanded" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentPageViewer">
      <summary>表示查看的流内容的控件在一次显示内容的一页的内置的查看模式。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom">
      <summary>获取一个值 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别是否可降低。 </summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别可能会降低;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom">
      <summary>获取一个值是否可提高 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别。 </summary>
      <returns>true ，则可以递增 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.DecreaseZoom">
      <summary>执行该 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.Find">
      <summary>切换 查找 对话框。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.IncreaseZoom">
      <summary>执行该 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 是否显示选定的文本，当控件不具有焦点时。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 显示选定的文本，当 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 没有焦点;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 是否具有焦点和选定的文本。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" /> 显示选定的文本，当文本框没有焦点;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的最大数量 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的最大数量缩放级别，被解释为百分比。默认值为 200.0 (一最大缩放 200%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MaxZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的最小允许的 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 级别。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的最小允许的缩放级别，被解释为百分比。默认值为 80.0 (最小的缩放 80%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.MinZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnApplyTemplate">
      <summary>生成 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现，。</summary>
      <returns>此控件的相应 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDecreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDocumentChanged">
      <summary>调用，更改 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFindCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFirstPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnGoToPageCommand(System.Int32)">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> 路由命令。</summary>
      <param name="pageNumber">转到的分页。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnIncreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.KeyDown" />  路由事件。</summary>
      <param name="e">包含参数与 <see cref="E:System.Windows.UIElement.KeyDown" /> 的 <see cref="T:System.Windows.Input.KeyEventArgs" /> 对象路由事件。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnLastPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件。</summary>
      <param name="e">包含参数的 <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> 对象与 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnNextPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPageViewsChanged">
      <summary>处理 <see cref="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged" />  路由事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPreviousPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCompleted">
      <summary>调用，当打印作业完成。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Selection">
      <summary>获取 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的选定内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的选定内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush">
      <summary>获取或设置显示选定文本的画笔。</summary>
      <returns>显示选定文本的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" />的不透明度。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionBrush" />的不透明度。默认值为 0.4。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.SelectionOpacity" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentPageViewer" />的当前缩放级别。 </summary>
      <returns>当前缩放级别，被解释为百分比。默认值为 100.0 (100% 的缩放级别)。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement">
      <summary>获取或设置缩放递增。 </summary>
      <returns>当前缩放的增加，被解释为百分比。默认值为 10.0 (缩放递增 10%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReader">
      <summary>要查看的流内容提供控件，以内置为多种查看模式支持。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CancelPrint">
      <summary>移除所有当前打印作业。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom">
      <summary>获取一个值 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别是否可降低。 </summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别可能会降低;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 是否可以执行该 <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> 路由命令跳转到目录下的页。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 可以跳转到目录下的页;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToNextPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.CanGoToPage(System.Int32)">
      <summary>返回一个值或 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 是否能够跳转到指定的分页。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 能够跳转到指定的分页;否则， false。</returns>
      <param name="pageNumber">检查的分页为有效的跳转目标。</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 是否可以执行该 <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> 路由命令跳转到内容上一页。 </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 可以跳转到内容上一页;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom">
      <summary>获取一个值是否可提高 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别。 </summary>
      <returns>true ，则可以递增 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.DecreaseZoom">
      <summary>执行该 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Document">
      <summary>获取或设置承载 <see cref="T:System.Windows.Controls.FlowDocumentReader" />将显示的内容的 <see cref="T:System.Windows.Documents.FlowDocument" /> 。 </summary>
      <returns>承载 <see cref="T:System.Windows.Controls.FlowDocumentReader" />将显示的内容的 <see cref="T:System.Windows.Documents.FlowDocument" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.DocumentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Find">
      <summary>切换查找对话框。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.IncreaseZoom">
      <summary>执行该 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled">
      <summary>获取或设置一个值该 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令是否启用。 </summary>
      <returns> 启用 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令的true ;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsFindEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 是否显示选定的文本，当控件不具有焦点时。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 显示选定的文本，当 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 没有焦点;否则， false。 该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled">
      <summary>获取或设置一个值 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" /> 是否可用作查看模式。 </summary>
      <returns>指示 的true 单页的查看模式可用;否则， false。默认值为 true。</returns>
      <exception cref="T:System.ArgumentException">设置为 false 的此属性，尽管 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 和 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 是 false。</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled">
      <summary>获取或设置一个值该 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令是否启用。 </summary>
      <returns> 启用 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令的true ;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsPrintEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled">
      <summary>获取或设置一个值 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> 是否可用作查看模式。 </summary>
      <returns>指示 的true<see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll" /> 可用作查看模式;否则， false。默认值为 false。</returns>
      <exception cref="T:System.ArgumentException">设置为 false 的此属性，尽管 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 和 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 是 false。</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 是否具有焦点和选定的文本。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 显示选定的文本，当文本框没有焦点;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled">
      <summary>获取或设置一个值 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> 是否可用作查看模式。 </summary>
      <returns>指示 的true<see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage" /> 可用作查看模式;否则， false。默认值为 true。</returns>
      <exception cref="T:System.ArgumentException">设置为 false 的此属性，尽管 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled" /> 和 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled" /> 是 false。</exception>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.LogicalChildren">
      <summary>获取可以重复 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的逻辑种属性的枚举器。</summary>
      <returns>逻辑种属性的枚举数。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MaxZoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的最大数量 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" />的最大数量 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别，被解释为百分比。默认值为 200.0 (最大缩放 200%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MaxZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.MinZoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的最小允许的 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" />的最小允许的 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 级别，被解释为百分比。默认值为 80.0 (最小缩放 80%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.MinZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnApplyTemplate">
      <summary>生成 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnDecreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnFindCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIncreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnInitialized(System.EventArgs)">
      <summary>处理 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 路由事件。</summary>
      <param name="e">包含参数的 <see cref="T:System.EventArgs" /> 对象与 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 路由事件。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 路由事件。</summary>
      <param name="e">包含参数的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 对象与 <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 路由事件。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCompleted">
      <summary>调用，当打印作业完成。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.OnSwitchViewingModeCommand(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>处理 <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> 路由命令。</summary>
      <param name="viewingMode">指定查看模式切换到的一个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值。</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageCount">
      <summary>获取显示页的当前 <see cref="T:System.Windows.Controls.FlowDocumentReader" />承载的内容的。 </summary>
      <returns>显示页的当前 <see cref="T:System.Windows.Controls.FlowDocumentReader" />承载的内容的。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.PageNumber">
      <summary>获取当前显示页的分页。 </summary>
      <returns>显示当前页的分页。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.PageNumberProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.Print">
      <summary>调用可用于打印 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 内容和配置打印首选标准的打印对话框。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Selection">
      <summary>获取 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的选定内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentReader" />的选定内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush">
      <summary>获取或设置显示选定文本的画笔。</summary>
      <returns>显示选定文本的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" />的不透明度。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionBrush" />的不透明度。默认值为 0.4。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.SelectionOpacity" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>执行 <see cref="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand" /> 命令。</summary>
      <param name="viewingMode">指定所需的查看模式的某个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值。</param>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand">
      <summary>获取表示 切换到视图模式 命令的值。</summary>
      <returns>命令。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCore(System.Windows.Controls.FlowDocumentReaderViewingMode)">
      <summary>处理 <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)" /> 命令。</summary>
      <param name="viewingMode">指定所需的查看模式的某个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。使用 <see cref="P:System.Windows.Controls.FlowDocumentReader.Document" /> 属性添加 <see cref="T:System.Windows.Documents.FlowDocument" /> 作为 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的内容的子级。</summary>
      <param name="value">添加的对象作为子级。 </param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentReader.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="text">添加的字符串到对象。 </param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ViewingMode">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentReader" />的查看模式。 </summary>
      <returns>指定查看模式的某个 <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode" /> 值。默认值为 <see cref="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ViewingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.Zoom">
      <summary>获取或设置当前缩放级别。 </summary>
      <returns>当前缩放级别，被解释为百分比。默认 100.0 (缩放级别 100%)。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement">
      <summary>获取或设置缩放递增。 </summary>
      <returns>当前缩放的增加，被解释为百分比。默认值为 10.0 (缩放递增 10%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReader.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentReaderViewingMode">
      <summary>查看 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 控件的名称模式。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page">
      <summary>指示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 应一次显示内容的一页。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll">
      <summary>指示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 在连续滚动模式应显示内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage">
      <summary>指示 <see cref="T:System.Windows.Controls.FlowDocumentReader" /> 应一次显示内容的两页，类似于一本书打开。</summary>
    </member>
    <member name="T:System.Windows.Controls.FlowDocumentScrollViewer">
      <summary>要查看的流内容在一个连续滚动模式提供一个控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.CancelPrint">
      <summary>移除所有当前打印作业。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom">
      <summary>获取一个值 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别是否可降低。  </summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别可能会降低;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom">
      <summary>获取一个值是否可提高 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别。  </summary>
      <returns>true ，则可以递增 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoomProperty">
      <summary>标识 <see cref="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.DecreaseZoom">
      <summary>执行该 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Document">
      <summary>获取或设置承载 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />将显示的内容的 <see cref="T:System.Windows.Documents.FlowDocument" /> 。  </summary>
      <returns>承载 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />将显示的内容的 <see cref="T:System.Windows.Documents.FlowDocument" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.DocumentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Find">
      <summary>切换 查找 对话框。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值水平滚动条是否显示。  </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.IncreaseZoom">
      <summary>执行该 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 是否显示选定的文本，当控件不具有焦点时。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 显示选定的文本，当 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 没有焦点;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 是否具有焦点和选定的文本。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 显示选定的文本，当文本框没有焦点;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled">
      <summary>获取或设置一个值内容的选择在 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />  是否启用。  </summary>
      <returns>指示 的true 选择启用;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 工具栏是否可见。  </summary>
      <returns>指示 的true 工具栏可见;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisibleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.LogicalChildren">
      <summary>获取可以重复 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的逻辑种属性的枚举器。</summary>
      <returns>逻辑种属性的枚举数。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的最大数量 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的最大数量 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别，被解释为百分比。默认值为 200.0 (一最大缩放 200%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的最小允许的 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的最小允许的 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 级别，被解释为百分比。默认值为 80.0 (最小的缩放 80%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MinZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnApplyTemplate">
      <summary>生成 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnDecreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnFindCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Find" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnIncreaseZoomCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.KeyDown" />  路由事件。</summary>
      <param name="e">包含参数的 <see cref="T:System.Windows.Input.KeyEventArgs" /> 对象与 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.MouseWheel" />  路由事件。</summary>
      <param name="e">包含参数的 <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> 对象与 <see cref="E:System.Windows.UIElement.MouseWheel" /> 路由事件。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCompleted">
      <summary>调用，当打印作业完成。</summary>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Print">
      <summary>调用可用于打印 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" /> 内容和配置打印首选项的标准 打印 对话框。</summary>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Selection">
      <summary>获取 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的选定内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的选定内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush">
      <summary>获取或设置显示选定文本的画笔。</summary>
      <returns>显示选定文本的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" />的不透明度。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionBrush" />的不透明度。默认值为 0.4。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.SelectionOpacity" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#IServiceProvider#GetService(System.Type)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>类型 <paramref name="serviceType" />服务对象或 null ，如果没有类型 <paramref name="serviceType" />服务对象。</returns>
      <param name="serviceType">指定类型对象获取的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。使用 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document" /> 属性添加 <see cref="T:System.Windows.Documents.FlowDocument" /> 作为 <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />的内容的子级。</summary>
      <param name="value">添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="text">添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility">
      <summary>获取或设置一个值垂直滚动条是否显示。  </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom">
      <summary>获取或设置当前缩放级别。  </summary>
      <returns>当前缩放级别，被解释为百分比。默认值为 100.0 (100% 的缩放级别)。</returns>
    </member>
    <member name="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement">
      <summary>获取或设置缩放递增。  </summary>
      <returns>当前缩放的增加，被解释为百分比。默认值为 10.0 (缩放递增 10%)。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Frame">
      <summary>框架是支持导航的内容控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Frame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>将项添加到包含一 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象的向后导航历史记录。</summary>
      <param name="state">表示应用程序定义的状态与内容特定部分的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> 是 null，并且， <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象不会从 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />返回。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="value">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Frame.BackStack">
      <summary>返回使用枚举后退导航历史记录中没有项 <see cref="T:System.Windows.Controls.Frame" />的 <see cref="T:System.Collections.IEnumerable" /> 。 </summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> ，如果至少有一个项添加到向后导航历史记录。如果没有项，或 <see cref="T:System.Windows.Controls.Frame" /> 不属于自己的导航历史记录， <see cref="P:System.Windows.Controls.Frame.BackStack" /> 是 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.BackStackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.BackStack" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.BaseUri">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" />的基本 统一资源标识符 (URI) 。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Frame" /> 控件的基 统一资源标识符 (URI) 。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoBack">
      <summary>获取一个值是否在向后导航历史记录中至少有一项。 </summary>
      <returns>true ，如果在向后导航历史记录中至少有一项; false ，如果在向后导航历史记录或 <see cref="T:System.Windows.Controls.Frame" /> 的项不属于自己的导航历史记录。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CanGoForward">
      <summary>获取一个值是否在向前导航历史记录中的至少一项。 </summary>
      <returns>true ，如果在向前导航历史记录中至少有一项; false ，如果在向前导航历史记录或 <see cref="T:System.Windows.Controls.Frame" /> 的项不属于自己的导航历史记录。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> 依赖项属性。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.ContentRendered">
      <summary>，在 <see cref="T:System.Windows.Controls.Frame" /> 呈现的内容后，发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.CurrentSource">
      <summary>获取最后一个导航内容的 统一资源标识符 (URI) 。</summary>
      <returns>最后是内容的 <see cref="T:System.Uri" /> 导航到，因此，如果导航到使用 URI;否则， null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.ForwardStack">
      <summary>获取使用枚举在向前导航历史记录中没有项 <see cref="T:System.Windows.Controls.Frame" />的 <see cref="T:System.Collections.IEnumerable" /> 。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 对象至少一项是否已添加到向前导航历史记录或 null ，如果没有项或 <see cref="T:System.Windows.Controls.Frame" /> 不属于自己的导航历史记录。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.ForwardStackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.ForwardStack" /> 依赖项属性。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.FragmentNavigation">
      <summary>出现问题，则到内容片段的开始导航，会立即发生，因此，如果所需片段在当前目录，或者，在源 XAML 目录加载后，因此，如果所需片段在其他内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoBack">
      <summary>，如果 <see cref="T:System.Windows.Controls.Frame" /> 管理自己的导航历史记录中，定位到向后导航历史记录中最近访问项。</summary>
      <exception cref="T:System.InvalidOperationException">，而没有在向后导航历史记录时，的项<see cref="M:System.Windows.Controls.Frame.GoBack" /> 调用。</exception>
    </member>
    <member name="M:System.Windows.Controls.Frame.GoForward">
      <summary>，如果 <see cref="T:System.Windows.Controls.Frame" /> 管理自己的导航历史记录中，导航到在向前导航历史记录中最近访问项。</summary>
      <exception cref="T:System.InvalidOperationException">，而没有在向后导航历史记录时，的项<see cref="M:System.Windows.Controls.Frame.GoForward" /> 调用。</exception>
    </member>
    <member name="P:System.Windows.Controls.Frame.JournalOwnership">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" /> 是否为管理自己的导航历史记录负责，或者为导航历史记录管理对父浏览器 (<see cref="T:System.Windows.Navigation.NavigationWindow" />， <see cref="T:System.Windows.Controls.Frame" />)。</summary>
      <returns>指定的 <see cref="T:System.Windows.Navigation.JournalOwnership" /> 值 <see cref="T:System.Windows.Controls.Frame" /> 是否管理自己的日记。默认值为 <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 依赖项属性。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.LoadCompleted">
      <summary>发生，在导航时的目录加载的，分析并已呈现。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object)">
      <summary>导航异步到由对象包含的内容。</summary>
      <returns>true ，如果导航未取消;否则， false。</returns>
      <param name="content">包含内容导航的 <see cref="T:System.Object" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)">
      <summary>导航异步到由对象包含的内容，并将包含用于处理要使用的数据在导航时的对象。</summary>
      <returns>true ，如果导航未取消;否则， false。</returns>
      <param name="content">包含内容导航的 <see cref="T:System.Object" /> 。</param>
      <param name="extraData">包含用于处理要使用的数据在导航时的 <see cref="T:System.Object" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
      <summary>定位到由异步 统一资源标识符 (URI)指定的内容。</summary>
      <returns>true ，如果导航未取消;否则， false。</returns>
      <param name="source">
        <see cref="T:System.Uri" /> 对象初始化和所需内容的 URI 。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)">
      <summary>导航异步对源目录位于 统一资源标识符 (URI)，并将包含用于处理要使用的数据在导航时的对象。</summary>
      <returns>true ，如果导航未取消;否则， false。</returns>
      <param name="source">
        <see cref="T:System.Uri" /> 对象初始化和所需内容的 URI 。</param>
      <param name="extraData">包含用于处理要使用的数据在导航时的 <see cref="T:System.Object" /> 。</param>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigated">
      <summary>发生，在导航时已找到的内容，然后从 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性可用，不过，它可能无法完成加载。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.Navigating">
      <summary>，在一个新的导航请求，发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationFailed">
      <summary>出现问题，则错误引发，在导航到所请求的内容时。</summary>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationProgress">
      <summary>在下载过程中定期发生提供导航进度信息。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationService">
      <summary>获取此 <see cref="T:System.Windows.Controls.Frame" /> 用于提供导航服务的 <see cref="T:System.Windows.Navigation.NavigationService" /> 。</summary>
      <returns>表示 <see cref="T:System.Windows.Navigation.NavigationService" /> 的 <see cref="T:System.Windows.Controls.Frame" /> 对象由此 <see cref="T:System.Windows.Controls.Frame" />使用，则为; 如果一个可用。否则， null 返回。</returns>
    </member>
    <member name="E:System.Windows.Controls.Frame.NavigationStopped">
      <summary>出现问题，则 <see cref="M:System.Windows.Controls.Frame.StopLoading" /> 方法调用，或者，如果新的导航请求，在当前导航正在进行的。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.NavigationUIVisibility">
      <summary>，当 <see cref="T:System.Windows.Controls.Frame" /> 可以显示其导航 UI时，获取或设置。 </summary>
      <returns>指定的 <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> 值 <see cref="T:System.Windows.Controls.Frame" /> 可以显示其导航 UI。默认值为 <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
      <summary>调用时，可视化树的模板生成创建。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Frame.ContentRendered" /> 事件。</summary>
      <param name="args">包含事件数据的 <see cref="T:System.EventArgs" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.Frame" />的一 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Frame" />的一 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.Refresh">
      <summary>重新加载当前目录。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.RemoveBackEntry">
      <summary>从回历史记录移除最近日记条目。</summary>
      <returns>在向后导航历史记录的最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> ，因此，如果有一个。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.SandboxExternalContent">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Frame" /> 是否隔离在部分信任的安全沙盒中的外部 可扩展应用程序标记语言 (XAML) 目录 (在默认 Internet权限集)。 </summary>
      <returns>true ，如果内容在部分信任的安全沙盒中隔离;否则， false。默认值为 false。</returns>
      <exception cref="T:System.Security.SecurityException">，在部分信任时，执行<see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 设置。</exception>
    </member>
    <member name="F:System.Windows.Controls.Frame.SandboxExternalContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Frame.ShouldSerializeContent">
      <summary>确定 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的序列化行为的允许派生类。</summary>
      <returns>true ，如果序列化该目录;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Frame.Source">
      <summary>获取或设置当前目录的 统一资源标识符 (URI) 或当前导航新内容的 URI 。 </summary>
      <returns>
        <see cref="T:System.Uri" /> 包含的当前内容的 URI 或当前导航的内容。</returns>
    </member>
    <member name="F:System.Windows.Controls.Frame.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Frame.Source" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Frame.Source" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Frame.StopLoading">
      <summary>停止提升下载当前导航请求的内容。</summary>
    </member>
    <member name="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基本 URI 。</returns>
    </member>
    <member name="T:System.Windows.Controls.Grid">
      <summary>定义由行和列组成的灵活网格区域。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Grid" />的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.Grid" /> 元素的内容。</summary>
      <returns>表示 此网格元素及其子元素的封送的范围的<see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">指定此 <see cref="T:System.Windows.Controls.Grid" /> 元素应使用排列子元素的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
      <summary>获取或设置一个值在 <see cref="T:System.Windows.Controls.Grid" /> 中的哪个列子目录应显示在中。 </summary>
      <returns>表示 列子内容应显示的<see cref="T:System.Int32" /> 。默认值为零。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
      <summary>在 <see cref="T:System.Windows.Controls.Grid" />此实例获取 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 定义。 </summary>
      <returns>在 <see cref="T:System.Windows.Controls.Grid" />此实例定义的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /></returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
      <summary>获取或设置一个总列数在 <see cref="T:System.Windows.Controls.Grid" />中的子内容区域设置的值。</summary>
      <returns>表示 列数子目录应范围的<see cref="T:System.Int32" /> 。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.UIElement)">
      <summary>从给定 <see cref="T:System.Windows.UIElement" />获取 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性 的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" />附加属性的值。</returns>
      <param name="element">的元素读取属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.UIElement)">
      <summary>从给定 <see cref="T:System.Windows.UIElement" />获取 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性 的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" />附加属性的值。</returns>
      <param name="element">的元素读取属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetIsSharedSizeScope(System.Windows.UIElement)">
      <summary>从给定 <see cref="T:System.Windows.UIElement" />获取 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性 的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" />附加属性的值。</returns>
      <param name="element">的元素读取属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.UIElement)">
      <summary>从给定 <see cref="T:System.Windows.UIElement" />获取 <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性 的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" />附加属性的值。</returns>
      <param name="element">的元素读取属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.UIElement)">
      <summary>从给定 <see cref="T:System.Windows.UIElement" />获取 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性 的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" />附加属性的值。</returns>
      <param name="element">的元素读取属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetVisualChild(System.Int32)">
      <summary>获取子键 <see cref="T:System.Windows.Media.Visual" /> 在指定的 <paramref name="index" /> 位置。</summary>
      <returns>子 <see cref="T:System.Windows.Media.Visual" /> 在指定的 <paramref name="index" /> 位置。</returns>
      <param name="index">预期 <see cref="T:System.Windows.Media.Visual" />的从零开始的索引位置。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.IsSharedSizeScope">
      <summary>获取或设置一个值的多个 <see cref="T:System.Windows.Controls.Grid" /> 元素共享范围信息。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.Grid" /> 此实例与另一 <see cref="T:System.Windows.Controls.Grid" />共享范围的属性;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.IsSharedSizeScopeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.LogicalChildren">
      <summary>获取可以重复此 <see cref="T:System.Windows.Controls.Grid" />的逻辑种属性的枚举器。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。此属性不具有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)" /> 处理过程中，这些 <see cref="T:System.Windows.Controls.Grid" /> 的子级预期使它们。</summary>
      <returns>表示 所需的大小来排列子元素内容的<see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">指示不应超过了一个上限范围。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>调用时， <see cref="T:System.Windows.Controls.Grid" /> 元素的可视化子级更改。</summary>
      <param name="visualAdded">标识要添加的可视化子级。</param>
      <param name="visualRemoved">标识要移除的可视化子级。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
      <summary>获取或设置一个值在 <see cref="T:System.Windows.Controls.Grid" /> 中的哪一行子目录应显示在中。</summary>
      <returns>表示 行子内容应显示的<see cref="T:System.Int32" /> 。默认值为零。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
      <summary>在 <see cref="T:System.Windows.Controls.Grid" />此实例获取 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 定义。 </summary>
      <returns>在 <see cref="T:System.Windows.Controls.Grid" />此实例定义的 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
      <summary>获取或设置一个总行数 <see cref="T:System.Windows.Controls.Grid" />中的子内容区域设置的值。</summary>
      <returns>表示 行数子目录应范围的<see cref="T:System.Int32" /> 。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.UIElement,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加属性 的值设置为特定 <see cref="T:System.Windows.UIElement" />。 </summary>
      <param name="element">设置 <see cref="P:System.Windows.Controls.Grid.Column" /> 附加特性的元素。</param>
      <param name="value">设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.UIElement,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加属性 的值设置为特定 <see cref="T:System.Windows.UIElement" />。 </summary>
      <param name="element">设置 <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 附加特性的元素。</param>
      <param name="value">设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetIsSharedSizeScope(System.Windows.UIElement,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加属性 的值设置为特定 <see cref="T:System.Windows.UIElement" />。 </summary>
      <param name="element">设置 <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope" /> 附加特性的元素。</param>
      <param name="value">设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.UIElement,System.Int32)">
      <summary> 设置 <see cref="P:System.Windows.Controls.Grid.Row" /> 附加属性 的值设置为特定 <see cref="T:System.Windows.UIElement" />。 </summary>
      <param name="element">的元素设置附加属性的。</param>
      <param name="value">设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.UIElement,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加属性 的值设置为特定 <see cref="T:System.Windows.UIElement" />。 </summary>
      <param name="element">设置 <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 附加特性的元素。</param>
      <param name="value">设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeColumnDefinitions">
      <summary>，如果 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 与 <see cref="T:System.Windows.Controls.Grid" /> 此实例不为空，则返回 true。</summary>
      <returns>，如果 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> 与 <see cref="T:System.Windows.Controls.Grid" /> 此实例不为空，则为 true;否则，错误。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.ShouldSerializeRowDefinitions">
      <summary>，如果 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 与 <see cref="T:System.Windows.Controls.Grid" /> 此实例不为空，则返回 true。</summary>
      <returns>，如果 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 与 <see cref="T:System.Windows.Controls.Grid" /> 此实例不为空，则为 true;否则，错误。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
      <summary>获取或设置一个值网格行是否位于 <see cref="T:System.Windows.Controls.Grid" />中可见。 </summary>
      <returns>true ，如果网格行可见;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ShowGridLines" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value">添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text">添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.VisualChildrenCount">
      <summary>获取表示 <see cref="T:System.Windows.Media.Visual" /> 子级的总数。 <see cref="T:System.Windows.Controls.Grid" />内此实例的值。</summary>
      <returns>表示子 <see cref="T:System.Windows.Media.Visual" /> 对象总数的<see cref="T:System.Int32" /> 。默认值为零。</returns>
    </member>
    <member name="T:System.Windows.Controls.GridResizeBehavior">
      <summary>指定由 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件调整大小的行或列。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment">
      <summary>空间重新发布基于 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 和 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 属性的值。 </summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.CurrentAndNext">
      <summary>对于级别的 <see cref="T:System.Windows.Controls.GridSplitter" />，空格重新分配中为 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一行指定其下方的行中。对于垂直 <see cref="T:System.Windows.Controls.GridSplitter" />，空格重新分配中为 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一列指定是在右列之间。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndCurrent">
      <summary>对于级别的 <see cref="T:System.Windows.Controls.GridSplitter" />，空格重新分配中为 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一行指定在它上面的行之间。对于垂直 <see cref="T:System.Windows.Controls.GridSplitter" />，空格重新分配中为 <see cref="T:System.Windows.Controls.GridSplitter" /> 和下一列指定在左侧的列之间。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndNext">
      <summary>对于级别的 <see cref="T:System.Windows.Controls.GridSplitter" />，空格重新分配中位于行 up/down <see cref="T:System.Windows.Controls.GridSplitter" />指定的行中。对于垂直 <see cref="T:System.Windows.Controls.GridSplitter" />，空格重新分配中对列和用于 <see cref="T:System.Windows.Controls.GridSplitter" />指定的列之间。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridResizeDirection">
      <summary>指定 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件是否重新分配空间中的行之间或在列之间。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Auto">
      <summary>空间重新发布基于 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" />、 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" />、 <see cref="P:System.Windows.FrameworkElement.ActualWidth" />和 <see cref="T:System.Windows.Controls.GridSplitter" />的 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 属性的值。 </summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Columns">
      <summary>空间重新分配在列之间。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridResizeDirection.Rows">
      <summary>重新分配空间中的行之间。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridSplitter">
      <summary>表示在 <see cref="T:System.Windows.Controls.Grid" /> 控件的列或行之间重新分配空间的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridSplitter" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.DragIncrement">
      <summary>获取或设置用户使用 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件调整行或列的大小时必须将鼠标拖动的最小距离。 </summary>
      <returns>一个值，表示用户在调整行或列的大小时必须使用鼠标拖动 <see cref="T:System.Windows.Controls.GridSplitter" /> 的最小距离。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.DragIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.KeyboardIncrement">
      <summary>获取或设置每按下一次箭头键时移动 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件的距离。 </summary>
      <returns>每按下一次箭头键时 <see cref="T:System.Windows.Controls.GridSplitter" /> 移动的距离。默认值为 10。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.KeyboardIncrementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的新 <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>当按下键时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" />。 </param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>当 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件失去键盘焦点时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />。 </param>
    </member>
    <member name="M:System.Windows.Controls.GridSplitter.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>对在 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件的尺寸方面进行的更改做出响应。</summary>
      <param name="sizeInfo">有关 <see cref="T:System.Windows.Controls.GridSplitter" /> 的大小更改的信息。</param>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
      <summary>获取或设置一个样式，该样式自定义当 <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 属性设置为 true 时将显示的 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件预览指示器的外观、效果或其他样式特征。 </summary>
      <returns>返回预览指示器的 <see cref="T:System.Windows.Style" />，该指示器在您移动 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件时显示可能在 <see cref="T:System.Windows.Controls.Grid" /> 尺寸方面发生的更改。默认值为当前主题提供的样式。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeBehavior">
      <summary>获取或设置要相对于定义了 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件的列或行调整哪些列或行的大小。 </summary>
      <returns>相应的枚举值之一，这些枚举值指示此 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件调整哪些列或行的大小。默认值为 <see cref="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeBehaviorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.ResizeBehavior" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ResizeDirection">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件是否调整行或列的大小。  </summary>
      <returns>用于指定是否调整行或列的大小的枚举值之一。默认值为 <see cref="F:System.Windows.Controls.GridResizeDirection.Auto" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ResizeDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
      <summary>获取或设置一个值，该值指示当用户拖动 <see cref="T:System.Windows.Controls.GridSplitter" /> 控件时该控件是否更新列或行的大小。 </summary>
      <returns>如果显示 <see cref="T:System.Windows.Controls.GridSplitter" /> 预览，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.GridView">
      <summary>表示在的列中显示数据项 <see cref="T:System.Windows.Controls.ListView" /> 控件的视图模式。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddChild(System.Object)">
      <summary>向 <see cref="T:System.Windows.Controls.GridView" />的一 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象。</summary>
      <param name="column">添加的列 </param>
    </member>
    <member name="M:System.Windows.Controls.GridView.AddText(System.String)">
      <summary>不支持。</summary>
      <param name="text">文本字符串</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.AllowsColumnReorder">
      <summary>获取或设置在 <see cref="T:System.Windows.Controls.GridView" /> 的列是否可由拖放操作重新排序。 </summary>
      <returns>true ，如果将列重新排序;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.AllowsColumnReorderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.AllowsColumnReorder" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridView.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>从 <see cref="T:System.Windows.Controls.ListViewItem" />移除所有设置，绑定和样式。</summary>
      <param name="item">清除的 <see cref="T:System.Windows.Controls.ListViewItem" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnCollection">
      <summary>获取或设置一 <see cref="T:System.Windows.Controls.GridViewColumnCollection" />的 附加属性 。</summary>
      <returns>用于显示对象的内容此特性附加 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnCollectionProperty">
      <summary>标识 <see cref="F:System.Windows.Controls.GridView.ColumnCollectionProperty" /> attachedproperty。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle">
      <summary>获取或设置样式应用于列标题。 </summary>
      <returns>用于定义列标头的显示特性的 <see cref="T:System.Windows.Style" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.GridView" />的 <see cref="T:System.Windows.Controls.ContextMenu" /> 。 </summary>
      <returns>列标题的 <see cref="T:System.Windows.Controls.ContextMenu" /> 在 <see cref="T:System.Windows.Controls.GridView" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderContextMenuProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat">
      <summary>获取或设置指定如何设置 <see cref="T:System.Windows.Controls.GridView" /> 的列标头的复合字符串; 如果它们显示为字符串。</summary>
      <returns>指定如何设置 <see cref="T:System.Windows.Controls.GridView" /> 的列标头的复合字符串; 如果它们显示为字符串。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.ColumnHeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplate">
      <summary>获取或设置模板用于显示列标题。 </summary>
      <returns>作为 <see cref="T:System.Windows.Controls.GridView" />一部分，使用的 <see cref="T:System.Windows.DataTemplate" /> 显示列标题。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector">
      <summary>获取或设置用于选择模板为每个列标头使用提供逻辑的选择器对象。 </summary>
      <returns>确定数据模板为每个列标题的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.ColumnHeaderToolTip">
      <summary>获取或设置将显示工具提示的内容当鼠标指针暂停某个列标题。 </summary>
      <returns>表示内容显示为工具提示的对象，当鼠标指针暂停某个列标题。默认未定义。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridView.ColumnHeaderToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridView.ColumnHeaderToolTip" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridView.Columns">
      <summary>获取此 <see cref="T:System.Windows.Controls.GridView" />定义 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象的集合。</summary>
      <returns>列的集合。 <see cref="T:System.Windows.Controls.GridView" />的。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.DefaultStyleKey">
      <summary>获取默认样式的引用 <see cref="T:System.Windows.Controls.GridView" />的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" />。默认值是当前主题的 <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>获取此 <see cref="T:System.Windows.Controls.GridView" /> 对象的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.GridView" />的 <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer" /> 。</returns>
      <param name="parent">实现此 <see cref="T:System.Windows.Controls.GridView" /> 视图的 <see cref="T:System.Windows.Controls.ListView" /> 控件。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.GetColumnCollection(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 附加属性的内容。</summary>
      <returns>指定的 <see cref="T:System.Windows.DependencyObject" />的 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 。</returns>
      <param name="element">与集合的 <see cref="T:System.Windows.DependencyObject" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey">
      <summary>获取引用样式为 <see cref="T:System.Windows.Controls.GridView" />的每 <see cref="T:System.Windows.Controls.ListViewItem" /> 定义的键。</summary>
      <returns>引用每 <see cref="T:System.Windows.Controls.ListViewItem" />样式的 <see cref="T:System.Windows.ResourceKey" /> 。默认引用一个 <see cref="T:System.Windows.Controls.ListViewItem" /> 控件的默认样式在当前主题。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewScrollViewerStyleKey">
      <summary>获取引用样式。 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件定义包括的内容由 <see cref="T:System.Windows.Controls.GridView" />显示的键。</summary>
      <returns>引用 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.GridView" />的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件的 <see cref="T:System.Windows.ResourceKey" /> 。默认值为 <see cref="T:System.Windows.Controls.ListView" /> 的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 对象的样式在当前主题。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.GridViewStyleKey">
      <summary>获取引用样式。 <see cref="T:System.Windows.Controls.GridView" />定义的键。</summary>
      <returns>引用 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.GridView" />的 <see cref="T:System.Windows.ResourceKey" /> 。默认值为 <see cref="T:System.Windows.Controls.ListView" /> 的样式在当前主题。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridView.ItemContainerDefaultStyleKey">
      <summary>对数据项的容器的默认样式。 <see cref="T:System.Windows.Controls.GridView" />的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" />。默认值是当前主题的 <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridView.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>
        <see cref="T:System.Windows.Controls.ListViewItem" /> 准备要显示基于此 <see cref="T:System.Windows.Controls.GridView" /> 对象的定义。</summary>
      <param name="item">显示的 <see cref="T:System.Windows.Controls.ListViewItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.SetColumnCollection(System.Windows.DependencyObject,System.Windows.Controls.GridViewColumnCollection)">
      <summary>设置 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 附加属性的内容。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.GridView" /> 对象。</param>
      <param name="collection">分配的 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ShouldSerializeColumnCollection(System.Windows.DependencyObject)">
      <summary>确定是否序列化 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 附加属性。</summary>
      <returns>true ，如果必须序列化 <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> ;否则， false。</returns>
      <param name="obj">
        <see cref="P:System.Windows.Controls.GridView.ColumnCollection" /> 设置的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加一个子对象。 </summary>
      <param name="column">添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的文本到对象。</param>
    </member>
    <member name="M:System.Windows.Controls.GridView.ToString">
      <summary>返回 <see cref="T:System.Windows.Controls.GridView" /> 对象的字符串表示形式。</summary>
      <returns>指示列数在 <see cref="T:System.Windows.Controls.GridView" />的字符串。</returns>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumn">
      <summary>表示显示数据的列。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewColumn" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.ActualWidth">
      <summary>获取 <see cref="T:System.Windows.Controls.GridViewColumn" />的实际宽度。</summary>
      <returns>列的当前宽度。默认值为零 (0.0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplate">
      <summary>获取或设置模板用于显示列单元格的内容。 </summary>
      <returns>格式化列单元格的 <see cref="T:System.Windows.DataTemplate" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector">
      <summary>获取或设置确定模板用于显示列中的单元格的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 。 </summary>
      <returns>为列单元格提供 <see cref="T:System.Windows.DataTemplate" /> 选择的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding">
      <summary>获取或设置数据项绑定到为此列。</summary>
      <returns>在列中显示的指定的数据项类型。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Header">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.GridViewColumn" />的头文件的内容。 </summary>
      <returns>使用的对象为列标题。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle">
      <summary>获取或设置样式。 <see cref="T:System.Windows.Controls.GridViewColumn" />的标头使用。 </summary>
      <returns>定义列标头中显示特性的 <see cref="T:System.Windows.Style" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" /> 依赖项属性。 </summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat">
      <summary>获取或设置指定如何设置 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 属性的复合字符串，则显示为字符串。</summary>
      <returns>指定如何设置 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 属性的复合字符串，则显示为字符串。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplate">
      <summary>获取或设置模板用于显示列标题的内容。 </summary>
      <returns>使用的 <see cref="T:System.Windows.DataTemplate" /> 显示列标题。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector">
      <summary>获取或设置提供逻辑选择模板用于显示列标题的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 。 </summary>
      <returns>为每 <see cref="T:System.Windows.Controls.GridViewColumn" />提供数据模板选择的 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>，当 <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 属性更改，发生。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 属性的旧值。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>，当所有 <see cref="T:System.Windows.Controls.GridViewColumn" /> 属性的值更改，发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumn.ToString">
      <summary>创建 <see cref="T:System.Windows.Controls.GridViewColumn" />的字符串表示形式。</summary>
      <returns>标识对象作为 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象并显示 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 属性值的字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumn.Width">
      <summary>获取或设置列宽。 </summary>
      <returns>列宽。默认值为 <see cref="F:System.Double.NaN" />，自动调整大小以适合最大的列项目不是列标题。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumn.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumn.Width" /> 依赖项属性。 </summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnCollection">
      <summary>表示 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.ClearItems">
      <summary>从 <see cref="T:System.Windows.Controls.GridViewColumnCollection" />移除所有 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.InsertItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>添加 <see cref="T:System.Windows.Controls.GridViewColumn" /> 到集合中指定索引处。</summary>
      <param name="index">将新的 <see cref="T:System.Windows.Controls.GridViewColumn" />的位置。</param>
      <param name="column">要插入的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.MoveItem(System.Int32,System.Int32)">
      <summary>更改 <see cref="T:System.Windows.Controls.GridViewColumn" /> 的位置集合中。</summary>
      <param name="oldIndex">
        <see cref="T:System.Windows.Controls.GridViewColumn" />的原始位置。</param>
      <param name="newIndex">
        <see cref="T:System.Windows.Controls.GridViewColumn" />的新位置。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>，当 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 更改时，将引发 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.RemoveItem(System.Int32)">
      <summary>从 <see cref="T:System.Windows.Controls.GridViewColumnCollection" /> 移除 <see cref="T:System.Windows.Controls.GridViewColumn" /> 位于指定索引处。</summary>
      <param name="index">移除的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnCollection.SetItem(System.Int32,System.Windows.Controls.GridViewColumn)">
      <summary>替换在与另一 <see cref="T:System.Windows.Controls.GridViewColumn" />的指定索引的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 。</summary>
      <param name="index">新 <see cref="T:System.Windows.Controls.GridViewColumn" /> 替换 <see cref="T:System.Windows.Controls.GridViewColumn" />的位置。</param>
      <param name="column">中的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 在指定的位置。</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeader">
      <summary>表示 <see cref="T:System.Windows.Controls.GridViewColumn" />的列标题。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Column">
      <summary>获取与 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 。 </summary>
      <returns>与此 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.ColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumnHeader.Column" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>，当 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 按下，响应。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnApplyTemplate">
      <summary>响应 可视化树 的创建 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnClick">
      <summary>为 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件提供类处理。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnCreateAutomationPeer">
      <summary>为 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />提供了一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的 <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>为 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的 <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>，当用户悬停在 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />时，的鼠标指针的 <see cref="E:System.Windows.UIElement.MouseEnter" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>，当鼠标移动 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />时，将 <see cref="E:System.Windows.UIElement.MouseLeave" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件提供类处理，当用户按下鼠标左键时，悬停在 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />时将鼠标指针。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件提供类处理，当用户松开鼠标左键时，悬停在 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />时将鼠标指针。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.UIElement.MouseMove" /> 事件提供类处理，当用户将在 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />内的鼠标。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>响应 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 维度更改。</summary>
      <param name="sizeInfo">有关更改的信息。 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />上的大小。 </param>
    </member>
    <member name="P:System.Windows.Controls.GridViewColumnHeader.Role">
      <summary>获取 <see cref="T:System.Windows.Controls.GridViewColumnHeader" />的角色。 </summary>
      <returns>指定列的当前角色的 <see cref="T:System.Windows.Controls.GridViewColumnHeaderRole" /> 枚举值。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeader.RoleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewColumnHeader.Role" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewColumnHeader.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary>确定是否序列化 <see cref="T:System.Windows.DependencyProperty" />。</summary>
      <returns>true ，如果必须序列化 <see cref="T:System.Windows.DependencyProperty" /> ;否则， false。默认值为 false。</returns>
      <param name="dp">依赖项属性。</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewColumnHeaderRole">
      <summary>定义 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 控件的状态或角色。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Floating">
      <summary>列标题是移动列的拖放操作的对象。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Normal">
      <summary>在其关联的列中的列标头中显示。</summary>
    </member>
    <member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Padding">
      <summary>列标头是在列标题行中最后一个标题以及为填充使用。</summary>
    </member>
    <member name="T:System.Windows.Controls.GridViewHeaderRowPresenter">
      <summary>表示一个用于定义一行列标题布局的对象。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder">
      <summary>获取或设置一个值，该值指示列是否可更改位置。 </summary>
      <returns>如果可通过拖放列标题的操作来移动列，则为 true，否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>排列标题行元素的内容，并计算标题行的实际大小。</summary>
      <returns>列标题行的实际 <see cref="T:System.Windows.Size" />。</returns>
      <param name="arrangeSize">可用于列标题行的区域。</param>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle">
      <summary>获取或设置用于列标题的 <see cref="T:System.Windows.Style" />。 </summary>
      <returns>用于列标题容器的 <see cref="T:System.Windows.Style" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu">
      <summary>获取或设置列标题的 <see cref="T:System.Windows.Controls.ContextMenu" />。   </summary>
      <returns>列标题行的 <see cref="T:System.Windows.Controls.ContextMenu" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenuProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat">
      <summary>获取或设置一个撰写字符串，该字符串指定如果列标题显示为字符串，应如何设置这些列标题的格式。</summary>
      <returns>一个撰写字符串，指定如果列标题显示为字符串，应如何设置这些列标题的格式。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate">
      <summary>获取或设置用于显示列标题的模板。 </summary>
      <returns>用于显示列标题内容的 <see cref="T:System.Windows.DataTemplate" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector">
      <summary>获取或设置提供逻辑来选择用于显示列标题的数据模板的 <see cref="T:System.Windows.Controls.DataTemplateSelector" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.DataTemplateSelector" />，选择用于显示每个列标题的 <see cref="T:System.Windows.DataTemplate" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip">
      <summary>获取或设置列标题行的工具提示内容。 </summary>
      <returns>一个表示列标题的工具提示内容的对象。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>确定显示列标题行所需的区域。</summary>
      <returns>列标题行所需的 <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">可用于显示列标题行的区域大小。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnCreateAutomationPeer">
      <summary>创建列标题行的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此列标题行的 <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer" /> 对象。 </returns>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>提供用于 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 的 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供用于当用户在 <see cref="T:System.Windows.Controls.GridViewColumnHeader" /> 内按下鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件的类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供用于当用户释放鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件的类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>提供用于当用户移动鼠标时发生的 <see cref="E:System.Windows.UIElement.MouseMove" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.GridViewRowPresenter">
      <summary>表示指定数据行布局的对象。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GridViewRowPresenter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ArrangeOverride(System.Windows.Size)">
      <summary>根据相应 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象的大小放置行的内容。</summary>
      <returns>用于显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的实际 <see cref="T:System.Windows.Size" />。</returns>
      <param name="arrangeSize">用于显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的区域。</param>
    </member>
    <member name="P:System.Windows.Controls.GridViewRowPresenter.Content">
      <summary>获取或设置要在行中显示的数据内容。 </summary>
      <returns>表示行内容的对象。</returns>
    </member>
    <member name="F:System.Windows.Controls.GridViewRowPresenter.ContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.MeasureOverride(System.Windows.Size)">
      <summary>确定显示行所需的区域。 </summary>
      <returns>显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的实际区域 <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">用于显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的最大区域。 </param>
    </member>
    <member name="M:System.Windows.Controls.GridViewRowPresenter.ToString">
      <summary>返回 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的字符串表示形式。</summary>
      <returns>显示 <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content" /> 的字符串。</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupBox">
      <summary>表示创建容器有一个边框和一个头 用户界面 (UI) 内容的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GroupBox" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>，当 <see cref="T:System.Windows.Controls.GroupBox" /> 的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 按下，响应。</summary>
      <param name="e">事件信息。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupBox.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的实现 <see cref="T:System.Windows.Controls.GroupBox" /> 控件的。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GroupBox" />的 <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer" /> 。</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupItem">
      <summary>显示为组生成的可视化子树的根。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GroupItem" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.GroupItem" />的内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.GroupItem" />调整大小使用物理。</returns>
      <param name="arrangeSize">在 <see cref="T:System.Windows.Controls.GroupItem" /> 应使用排列自身的父元素及其子元素中的最终区域。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnApplyTemplate">
      <summary>，在新模板是应用后，生成 <see cref="T:System.Windows.Controls.GroupItem" /> 的可视化树。 </summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.GroupItem" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.GroupItem" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>清除所有关联的属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>移除关联在指定的项目和属性之间。</summary>
      <param name="item">关联项。</param>
      <param name="dp">关联的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>从所有属性中移除指定的属性列表。</summary>
      <param name="dp">要移除的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>返回与所指定的项目中指定的属性的值。</summary>
      <returns>与所指定的项目中指定的属性的值。</returns>
      <param name="item">具有指定的属性的项与它。</param>
      <param name="dp">返回的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>存储所指定的属性和值并使它们与指定的项目。</summary>
      <param name="item">关联值和属性的项目配置。</param>
      <param name="dp">与该指定项的属性。</param>
      <param name="value">关联的属性的值。</param>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>获取或设置表示控件的视区和缓存的范围的对象。</summary>
      <returns>表示控件的视区和缓存的范围的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>获取表示控件的标头的所需大小的对象。</summary>
      <returns>表示控件的标头的所需大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>获取一个值控件的布局通过是出现在较低优先级。</summary>
      <returns>true ，如果控件的布局处理发生在较低优先级;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>获取或设置表示控件中的项的所需大小的对象。</summary>
      <returns>表示控件中的项的所需大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>获取演示控件的项目的 <see cref="T:System.Windows.Controls.Panel" /> 。</summary>
      <returns>演示控件的项目的 <see cref="T:System.Windows.Controls.Panel" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>获取或设置一个值所属 <see cref="T:System.Windows.Controls.ItemsControl" /> 是否应有效项。</summary>
      <returns>true ，如果拥有的 <see cref="T:System.Windows.Controls.ItemsControl" /> 应有效项;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Controls.GroupStyle">
      <summary>定义您希望组查看每个级别的方式。</summary>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.GroupStyle" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.AlternationCount">
      <summary>获取或设置交替 <see cref="T:System.Windows.Controls.GroupItem" /> 对象的数量。</summary>
      <returns>交替 <see cref="T:System.Windows.Controls.GroupItem" /> 对象的数量。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyle">
      <summary>获取或设置应用于为每个项生成的 <see cref="T:System.Windows.Controls.GroupItem" /> 的样式。</summary>
      <returns>应用于为每个项生成的 <see cref="T:System.Windows.Controls.GroupItem" /> 的样式。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector">
      <summary>使应用程序编写器能够为要应用到每个生成的 <see cref="T:System.Windows.Controls.GroupItem" /> 的样式提供自定义选择逻辑。</summary>
      <returns>从 <see cref="T:System.Windows.Controls.StyleSelector" /> 派生的对象。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Default">
      <summary>获取组的默认样式。</summary>
      <returns>组的默认样式。</returns>
    </member>
    <member name="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel">
      <summary>标识默认 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />（创建用于控制项布局的面板）。</summary>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderStringFormat">
      <summary>获取或设置一个撰写字符串，该字符串指定如果标题显示为字符串，应如何设置该标题的格式。</summary>
      <returns>一个撰写字符串，指定如果标题显示为字符串，应如何设置该标题的格式。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplate">
      <summary>获取或设置用于显示组标题的模板。</summary>
      <returns>一个用于显示组标题的 <see cref="T:System.Windows.DataTemplate" /> 对象。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector">
      <summary>使应用程序编写器能够为用于显示组标题的模板提供自定义选择逻辑。</summary>
      <returns>从 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 派生的对象。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.HidesIfEmpty">
      <summary>获取或设置一个值，该值指示是否应该显示与空组相对应的项。</summary>
      <returns>如果不显示空组，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>使用提供的参数引发 <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> 事件。</summary>
      <param name="e">要引发的事件的参数。</param>
    </member>
    <member name="P:System.Windows.Controls.GroupStyle.Panel">
      <summary>获取或设置可创建用于控制项布局的面板的模板。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 对象，该对象创建用于控制项布局的面板。</returns>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.GroupStyle.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="T:System.Windows.Controls.GroupStyleSelector">
      <summary>作为父组及其级别功能，委托用于选择组样式。</summary>
      <returns>的适当组样式。</returns>
      <param name="group">样式要选择的组。</param>
      <param name="level">组级别。</param>
    </member>
    <member name="T:System.Windows.Controls.HeaderedContentControl">
      <summary>为包含单项内容并具有标头的所有控件提供基实现。</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.HeaderedContentControl" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HasHeader">
      <summary>获取一个指示标头是否为 null 的值。  </summary>
      <returns>如果 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性不是 null，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.Header">
      <summary>获取或设置用于每个控件的标头的数据。  </summary>
      <returns>标头对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat">
      <summary>获取或设置一个撰写字符串，该字符串指定如果 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性显示为字符串，应如何设置该属性的格式。</summary>
      <returns>一个撰写字符串，指定如果 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性显示为字符串，应如何设置该属性的格式。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
      <summary>获取或设置用于显示控件标头的内容的模板。  </summary>
      <returns>数据模板。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
      <summary>获取或设置一个数据模板选择器，以提供自定义逻辑来选择用于显示标头的模板。  </summary>
      <returns>数据模板选择器对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedContentControl.LogicalChildren">
      <summary>获取 <see cref="T:System.Windows.Controls.ControlTemplate" /> 的逻辑子元素的枚举器。 </summary>
      <returns>枚举数。 </returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>在 <see cref="T:System.Windows.Controls.HeaderedContentControl" /> 的 <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性更改时调用。 </summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性的旧值。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>当 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 属性更改时调用。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 属性的旧值。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>当 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 属性更改时调用。 </summary>
      <param name="oldHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 属性的旧值。</param>
      <param name="newHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>当 <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 属性更改时调用。 </summary>
      <param name="oldHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 属性的旧值。</param>
      <param name="newHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedContentControl.ToString">
      <summary>提供 <see cref="T:System.Windows.Controls.HeaderedContentControl" /> 的字符串表示形式。 </summary>
      <returns>对象的字符串表示形式。</returns>
    </member>
    <member name="T:System.Windows.Controls.HeaderedItemsControl">
      <summary>表示包含多个项目并具有标头的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HasHeader">
      <summary>获取一个值此 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 是否具有标头。  </summary>
      <returns>true ，如果该控件具有一个标头;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
      <summary>获取或设置标记控件的项目。  </summary>
      <returns>标记 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />的对象。默认值为 null。标题可以是字符串或 <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat">
      <summary>获取或设置指定如何设置 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性的复合字符串，则显示为字符串。</summary>
      <returns>指定如何设置 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性的复合字符串，则显示为字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
      <summary>获取或设置用于的模板显示控件的头文件的内容。  </summary>
      <returns>用于的数据模板显示控件的标头。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
      <summary>获取或设置为用于的模板提供自定义逻辑选择显示每个项标头的对象。  </summary>
      <returns>数据模板选择器。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren">
      <summary>具有枚举数 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />的逻辑种属性元素。 </summary>
      <returns>枚举数。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
      <summary>调用时， <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 的 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性更改。 </summary>
      <param name="oldHeader">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性的旧值。</param>
      <param name="newHeader">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)">
      <summary>，当 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 属性更改，发生。</summary>
      <param name="oldHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 属性的旧值。</param>
      <param name="newHeaderStringFormat">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>调用时， <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 属性更改。 </summary>
      <param name="oldHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 属性的旧值。</param>
      <param name="newHeaderTemplate">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>调用时， <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 属性更改。 </summary>
      <param name="oldHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 属性的旧值。</param>
      <param name="newHeaderTemplateSelector">
        <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.HeaderedItemsControl.ToString">
      <summary>返回 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 对象的字符串表示形式。 </summary>
      <returns>表示此对象的字符串。</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationConstraints">
      <summary>指定控件的视区和缓存的范围。<see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> 接口使用该机制。</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.#ctor(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLengthUnit,System.Windows.Rect)">
      <summary>初始化 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 类的新实例。</summary>
      <param name="cacheLength">缓存的范围在视区之前和之后的。</param>
      <param name="cacheLengthUnit">
        <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> 属性使用的单位类型。</param>
      <param name="viewport">缓存的范围在视区之前和之后的。</param>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength">
      <summary>在视区之前，获取缓存的大小。</summary>
      <returns>缓存的范围在视区之前和之后的。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLengthUnit">
      <summary>获取 <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> 属性使用的单位类型。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.CacheLength" /> 属性使用的单位类型。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Object)">
      <summary>返回一个值指定对象是否与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />相等。</summary>
      <returns>true ，如果指定的对象与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />相等;否则， false。</returns>
      <param name="oCompare">比较的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.Equals(System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 是否与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />相等;否则， false。</returns>
      <param name="comparisonConstraints">比较的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.GetHashCode">
      <summary>获取此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" />的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Equality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象是否相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象相同;否则， false。</returns>
      <param name="constraints1">比较的第一 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 。</param>
      <param name="constraints2">比较的第二 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationConstraints.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationConstraints,System.Windows.Controls.HierarchicalVirtualizationConstraints)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象是否不相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 对象不相等;否则， false。</returns>
      <param name="constraints1">比较的第一 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 。</param>
      <param name="constraints2">比较的第二 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationConstraints" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationConstraints.Viewport">
      <summary>获取演示控件的项的区域。 </summary>
      <returns>演示控件的项的区域。</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes">
      <summary>表示控件的标头的所需大小，以像素为单位和在逻辑单元。<see cref="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo" /> 接口使用该机制。</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size)">
      <summary>初始化 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 类的新实例。</summary>
      <param name="logicalSize">标题的大小，在逻辑单元。</param>
      <param name="pixelSize">标题的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Object)">
      <summary>返回一个值指定对象是否与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象相等。</summary>
      <returns>true ，如果指定的对象与此对象相等;否则， false。</returns>
      <param name="oCompare">比较的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象是否与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象相等。</summary>
      <returns>true ，如果指定的对象与此对象相等;否则， false。</returns>
      <param name="comparisonHeaderSizes">比较的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.GetHashCode">
      <summary>获取 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />的哈希代码。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" />的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.LogicalSize">
      <summary>获取头的大小，在逻辑单元。</summary>
      <returns>标题的大小，在逻辑单元。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象是否相等。</summary>
      <returns>true ，如果指定的对象相等;否则， false。</returns>
      <param name="headerDesiredSizes1">比较的第一个对象。</param>
      <param name="headerDesiredSizes2">比较的第二个对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes" /> 对象是否不相等。</summary>
      <returns>true ，如果指定的对象不相等;否则， false。</returns>
      <param name="headerDesiredSizes1">比较的第一个对象。</param>
      <param name="headerDesiredSizes2">比较的第二个对象。</param>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationHeaderDesiredSizes.PixelSize">
      <summary>获取头的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</summary>
      <returns>标题的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</returns>
    </member>
    <member name="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes">
      <summary>表示控件中的项的所需大小，在 与设备无关的单位（每个单位 1/96 英寸） 和在逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.#ctor(System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size,System.Windows.Size)">
      <summary>初始化 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 类的新实例。</summary>
      <param name="logicalSize">控件的子项的大小，在逻辑单元。</param>
      <param name="logicalSizeInViewport">在视区控件的子项的大小，在逻辑单元。</param>
      <param name="logicalSizeBeforeViewport">在缓存在视区之前控件的子项的大小，在逻辑单元。</param>
      <param name="logicalSizeAfterViewport">在缓存在视区之后控件的子项的大小，在逻辑单元。</param>
      <param name="pixelSize">控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</param>
      <param name="pixelSizeInViewport">在视区控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</param>
      <param name="pixelSizeBeforeViewport">在缓存在视区之前控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</param>
      <param name="pixelSizeAfterViewport">在缓存在视区之后控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Object)">
      <summary>返回一个值指定对象是否与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象相等。</summary>
      <returns>true ，如果指定的对象与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象相同;否则， false。</returns>
      <param name="oCompare">比较的对象与此对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.Equals(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>返回一个值指定的 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象是否与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象相等。</summary>
      <returns>true ，如果指定的对象与此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象相同;否则， false。</returns>
      <param name="comparisonItemSizes">比较的对象与此对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.GetHashCode">
      <summary>获取此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 对象的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSize">
      <summary>获取控件的子项的大小，在逻辑单元。</summary>
      <returns>控件的子项的大小，在逻辑单元。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeAfterViewport">
      <summary>获取缓存中视区之后控件的子项的大小，在逻辑单元。</summary>
      <returns>在缓存在视区后的控件的子项，在逻辑单元。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeBeforeViewport">
      <summary>获取缓存中视区上的控件的子项，在逻辑单元。</summary>
      <returns>在缓存在视区上的控件的子项，在逻辑单元。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.LogicalSizeInViewport">
      <summary>获取在视区控件的子项，在逻辑单元。</summary>
      <returns>在视区控件的子项，在逻辑单元。</returns>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Equality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>返回一个值指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 是否相等。</summary>
      <returns>true ，如果指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 相等;否则， false。</returns>
      <param name="itemDesiredSizes1">比较的第一个对象。</param>
      <param name="itemDesiredSizes2">比较的第二个对象。</param>
    </member>
    <member name="M:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.op_Inequality(System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes,System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes)">
      <summary>返回一个值指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 是否不相等。</summary>
      <returns>true ，如果指定的对象 <see cref="T:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes" /> 不相等;否则， false。</returns>
      <param name="itemDesiredSizes1">比较的第一个对象。</param>
      <param name="itemDesiredSizes2">比较的第二个对象。</param>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSize">
      <summary>获取控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</summary>
      <returns>控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeAfterViewport">
      <summary>获取缓存中视区之后控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</summary>
      <returns>在缓存在视区之后控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeBeforeViewport">
      <summary>获取缓存中视区之前控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</summary>
      <returns>在缓存在视区之前控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</returns>
    </member>
    <member name="P:System.Windows.Controls.HierarchicalVirtualizationItemDesiredSizes.PixelSizeInViewport">
      <summary>获取在视区控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</summary>
      <returns>在视区控件的子项的大小，在 与设备无关的单位（每个单位 1/96 英寸）。</returns>
    </member>
    <member name="T:System.Windows.Controls.Image">
      <summary>表示显示图像的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Image" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Image.ArrangeOverride(System.Windows.Size)">
      <summary>送处理并调整图像控件。</summary>
      <returns>控件的大小。</returns>
      <param name="arrangeSize">用于的大小排列控件。</param>
    </member>
    <member name="P:System.Windows.Controls.Image.BaseUri">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Image" />的基本 统一资源标识符 (URI)。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Image" />的基本 URI 。</returns>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
      <summary>，当在图像，将会失败。</summary>
    </member>
    <member name="F:System.Windows.Controls.Image.ImageFailedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Image.ImageFailed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Image.ImageFailed" />的路由事件标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.MeasureOverride(System.Windows.Size)">
      <summary>更新图像的 <see cref="P:System.Windows.UIElement.DesiredSize" /> 。此方法由父 <see cref="T:System.Windows.UIElement" /> 调用和非布局第一次。</summary>
      <returns>图像的所需大小。</returns>
      <param name="constraint">图像不应超过的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Image.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.Image" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Image" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Image.OnRender(System.Windows.Media.DrawingContext)">
      <summary>呈现 <see cref="T:System.Windows.Controls.Image" />的内容。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Media.DrawingContext" /> 实例使用呈现控件。</param>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
      <summary>获取或设置图像的 <see cref="T:System.Windows.Media.ImageSource" /> 。  </summary>
      <returns>绘制的图像的源。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Image.Source" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Image.Source" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
      <summary>获取或设置描述的值应如何拉伸 <see cref="T:System.Windows.Controls.Image" /> 加载目标矩形。  </summary>
      <returns>一个 <see cref="T:System.Windows.Media.Stretch" /> 值。默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.StretchDirection">
      <summary>获取或设置一个值图像如何缩放。  </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.StretchDirection" /> 值。默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchDirectionProperty">
      <summary>标识 <see cref="T:System.Windows.Controls.StretchDirection" /> 依赖项属性。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.StretchDirection" />的依赖项属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Image.Stretch" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Image.Stretch" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.System#Windows#Markup#IUriContext#BaseUri">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.InitializingNewItemEventArgs.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.InitializingNewItemEventArgs" /> 类的新实例。 </summary>
      <param name="newItem">新项目添加到 <see cref="T:System.Windows.Controls.DataGrid" />。</param>
    </member>
    <member name="P:System.Windows.Controls.InitializingNewItemEventArgs.NewItem">
      <summary>获取新项目添加到 <see cref="T:System.Windows.Controls.DataGrid" />。</summary>
      <returns>新项添加到网格中。</returns>
    </member>
    <member name="T:System.Windows.Controls.InitializingNewItemEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.DataGrid" />的 <see cref="E:System.Windows.Controls.DataGrid.InitializingNewItem" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">数据的事件。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvas">
      <summary>定义接收和显示墨迹笔划的区域。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.#ctor">
      <summary>初始化 InkCanvas 类的一个新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
      <summary>获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
      <summary>在当前编辑模式改变时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)">
      <summary>ArrangeOverride</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Background">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.Brush" />。画笔用于填充 <see cref="T:System.Windows.Controls.InkCanvas" /> 周围的边框区域。</summary>
      <returns>一个用于填充 <see cref="T:System.Windows.Controls.InkCanvas" /> 周围的边框区域的 <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Bottom">
      <summary>获取或设置某元素的下边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的下边缘之间的距离。</summary>
      <returns>某元素的下边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的下边缘之间的距离，以 与设备无关的单位（每个单位 1/96 英寸） 为单位。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.BottomProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CanPaste">
      <summary>指示剪贴板的内容是否可以粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
      <returns>如果可以粘贴剪贴板的内容，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Children">
      <summary>检索 <see cref="T:System.Windows.Controls.InkCanvas" /> 的子元素。</summary>
      <returns>位于 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的一个子元素集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CopySelection">
      <summary>将选定笔画和/或元素复制到剪贴板。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.CutSelection">
      <summary>删除选定笔画和元素，并将它们复制到剪贴板。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
      <summary>获取或设置应用于在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上绘制的新墨迹笔画的绘制特性。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 的默认绘制特性。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
      <summary>在替换 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 属性时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
      <summary>获取或设置在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingMode">
      <summary>获取或设置活动指针设备使用的用户编辑模式。</summary>
      <returns>当指针设备（如触笔或鼠标）处于活动状态时使用的编辑模式。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
      <summary>在 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象的 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 属性更改后发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
      <summary>如果触笔在与 <see cref="T:System.Windows.Controls.InkCanvas" /> 交互时发生反转，则获取或设置用户编辑模式。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 的反转编辑模式。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
      <summary>在 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象的 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 属性更改后发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.EditingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.EraserShape">
      <summary>获取或设置用来按点擦除 <see cref="T:System.Windows.Controls.InkCanvas" /> 中墨迹的 <see cref="T:System.Windows.Ink.StylusShape" />。</summary>
      <returns>与 <see cref="T:System.Windows.Controls.InkCanvas" /> 关联的橡皮擦形状。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.Gesture">
      <summary>在 <see cref="T:System.Windows.Controls.InkCanvas" /> 检测到笔势时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.GestureEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
      <summary>获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</summary>
      <returns>依赖项对象的下边缘坐标。</returns>
      <param name="element">要获取其下边缘属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
      <summary>返回一个由 <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的应用程序笔势集合。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的笔势集合。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 false。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
      <summary>获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</summary>
      <returns>依赖项对象的左边缘坐标。</returns>
      <param name="element">要获取其左边缘属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
      <summary>获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</summary>
      <returns>依赖项对象的右边缘坐标。</returns>
      <param name="element">要获取其右边缘属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
      <summary>检索在 <see cref="T:System.Windows.Controls.InkCanvas" /> 中选定的 <see cref="T:System.Windows.FrameworkElement" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.FrameworkElement" /> 对象数组。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
      <summary>检索一个 <see cref="T:System.Windows.Ink.StrokeCollection" />，它表示 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</summary>
      <returns>选定笔画的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
      <summary>获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定笔画和元素的边界。</summary>
      <returns>包围所有选定笔画和元素的最小矩形。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
      <summary>获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</summary>
      <returns>依赖项对象的上边缘坐标。</returns>
      <param name="element">要获取其上边缘属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)"></member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>确定给定点是否落在 <see cref="T:System.Windows.Controls.InkCanvas" /> 的呈现边界之内。</summary>
      <returns>一个由命中测试中返回的 <see cref="T:System.Windows.Media.Visual" /> 表示的对象。</returns>
      <param name="hitTestParams">一个对象，指定 <see cref="T:System.Windows.Point" /> 以命中测试。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
      <summary>返回一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</summary>
      <returns>一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</returns>
      <param name="point">要进行命中测试的点。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.InkPresenter">
      <summary>获取在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
      <summary>获取（确定）笔势识别组件在用户系统上是否可用。</summary>
      <returns>如果识别组件可用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Left">
      <summary>获取或设置某元素的左边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左边缘之间的距离。</summary>
      <returns>某元素的左边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左边缘之间的距离，以 与设备无关的单位（每个单位 1/96 英寸） 为单位。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.LogicalChildren">
      <summary>返回用于逻辑子级的枚举器。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)"></member>
    <member name="P:System.Windows.Controls.InkCanvas.MoveEnabled">
      <summary>获取或设置一个布尔值，该值指示是否允许用户移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素。</summary>
      <returns>如果用户可以移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的笔画和/或元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer">
      <summary>为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 实现，作为 WPF 基础结构的一部分。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"></member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
      <summary>一个事件，通告用户选择并移动了所选笔画和/或元素。</summary>
      <param name="e">未使用。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste">
      <summary>将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左上角。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
      <summary>将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的给定点。</summary>
      <param name="point">笔画粘贴位置所在的点。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
      <summary>获取或设置可粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中的格式。</summary>
      <returns>一个枚举值集合。默认值为 <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
      <summary>获取或设置一个布尔值，该值指示用户是否可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素的大小。</summary>
      <returns>如果用户可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的笔画和/或元素的大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Right">
      <summary>获取或设置某元素的右边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的右边缘之间的距离。</summary>
      <returns>某元素的右边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的右边缘之间的距离，以 与设备无关的单位（每个单位 1/96 英寸） 为单位。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.RightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>选择一组 <see cref="T:System.Windows.UIElement" /> 对象。</summary>
      <param name="selectedElements">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
      <summary>选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</summary>
      <param name="selectedStrokes">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>选择一个由 <see cref="T:System.Windows.Ink.Stroke" /> 对象与 <see cref="T:System.Windows.UIElement" /> 对象构成的组合。</summary>
      <param name="selectedStrokes">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</param>
      <param name="selectedElements">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</exception>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanged">
      <summary>在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的选择更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionChanging">
      <summary>在选择了一组新墨迹笔画和/或元素时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoved">
      <summary>在用户移动了所选笔画和/或元素之后发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionMoving">
      <summary>在移动选定笔画和元素之前发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResized">
      <summary>在用户调整了所选笔画和/或元素大小时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.SelectionResizing">
      <summary>在调整选定笔画和元素的大小之前发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</summary>
      <param name="element">要设置其下边缘属性的元素。</param>
      <param name="length">
        <paramref name="element" /> 的下边缘坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
      <summary>设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势。</summary>
      <param name="applicationGestures">
        <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势的集合。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 false。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</summary>
      <param name="element">要设置其左边缘属性的元素。</param>
      <param name="length">
        <paramref name="element" /> 的左边缘坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
      <summary>设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</summary>
      <param name="element">要设置其右边缘属性的元素。</param>
      <param name="length">
        <paramref name="element" /> 的右边缘坐标。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</summary>
      <param name="element">要设置其上边缘属性的元素。</param>
      <param name="length">
        <paramref name="element" /> 的上边缘坐标。</param>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeCollected">
      <summary>在将用户绘制的笔画添加到 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErased">
      <summary>在用户擦除笔画时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokeErasing">
      <summary>恰好在用户擦除笔画之前发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Strokes">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 收集的墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</summary>
      <returns>包含在 <see cref="T:System.Windows.Controls.InkCanvas" /> 中的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.StrokesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
      <summary>在替换 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>将指定对象添加到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加位于标记内的文本。始终引发一个 <see cref="T:System.ArgumentException" />。</summary>
      <param name="textData">未使用。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.Top">
      <summary>获取或设置某元素的上边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的上边缘之间的距离。</summary>
      <returns>某元素的上边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的上边缘之间的距离，以 与设备无关的单位（每个单位 1/96 英寸） 为单位。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkCanvas.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
      <summary>获取或设置一个布尔值，该值指示是否重写标准的 <see cref="T:System.Windows.Controls.InkCanvas" /> 光标功能以支持自定义光标。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.InkCanvas" /> 正在使用自定义光标，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvas.VisualChildrenCount"></member>
    <member name="T:System.Windows.Controls.InkCanvasClipboardFormat">
      <summary>指定 <see cref="T:System.Windows.Controls.InkCanvas" /> 从剪贴板将接受的格式。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 接受墨迹序列化格式 (ISF) (isf)。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Text">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 接受文本。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Xaml">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 接受 “可扩展应用程序标记语言 (xaml)”格式。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasEditingMode">
      <summary>为 <see cref="T:System.Windows.Controls.InkCanvas" />指定该编辑模式</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint">
      <summary>指示笔清除一部分的笔画，当钢笔相交笔画。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke">
      <summary>指示笔清除整个笔画，当钢笔相交笔画。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.GestureOnly">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 响应笔势和不接收墨迹。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Ink">
      <summary>指示墨迹显示在 <see cref="T:System.Windows.Controls.InkCanvas" /> ，当钢笔数据发送到它。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.InkAndGesture">
      <summary>指示 <see cref="T:System.Windows.Controls.InkCanvas" /> 响应操作，并接收墨迹。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.None">
      <summary>指示执行任何操作，当钢笔数据发送到 <see cref="T:System.Windows.Controls.InkCanvas" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasEditingMode.Select">
      <summary>指示钢笔选择笔画和组件都 <see cref="T:System.Windows.Controls.InkCanvas" />。 </summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})">
      <summary>初始化 <see cref="T:System.Windows.Controls.InkCanvasGestureEventArgs" /> 类的新实例。 </summary>
      <param name="gestureRecognitionResults">从笔势识别器的结果。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Cancel">
      <summary>获取或设置一个 boolean 值是否应考虑笔画操作。</summary>
      <returns>true ，如果; 墨迹笔画。 false ，如果笔画。操作。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults">
      <summary>返回从笔势识别器的结果。</summary>
      <returns>可能的应用程序操作的集合 <see cref="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes" /> 可以为。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)"></member>
    <member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes">
      <summary>获取表示可能存在的笔势的笔画。</summary>
      <returns>表示可能存在的笔势的笔画。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasGestureEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.InkCanvas" />的 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件的方法。 </summary>
      <param name="sender">事件源。 </param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements">
      <summary>返回选定元素。</summary>
      <returns>所选元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes">
      <summary>返回选中的笔画。</summary>
      <returns>选中的笔画。</returns>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
      <summary>将所选元素。</summary>
      <param name="selectedElements">选择的元素。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedElements" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)">
      <summary>设置选中的笔画。</summary>
      <param name="selectedStrokes">选中的笔画。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectedStrokes" /> 是 null。</exception>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.InkCanvas" />的 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 事件的方法。 </summary>
      <param name="sender">事件源。 </param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 和 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle">
      <summary>，从而在移动或调整后，获取或设置选定的区域。</summary>
      <returns>选择的区域，从而在移动或调整其大小之后。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle">
      <summary>，在用户移动或调整的大小之前，获取选定内容的区域。</summary>
      <returns>选择的区域，在用户移动或调整的大小之前。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventHandler">
      <summary>表示处理事件的引发两个事件的方法时，将 <see cref="T:System.Windows.Controls.InkCanvas" />时发生: <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件或 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。 </summary>
      <param name="sender">事件源。 </param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasSelectionHitResult">
      <summary>标识选择装饰器的各个部分。 <see cref="T:System.Windows.Controls.InkCanvas" />的。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Bottom">
      <summary>选择装饰器中下处理。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomLeft">
      <summary>选择装饰器的左下角的句柄。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomRight">
      <summary>选择装饰器的下半部分正确的句柄。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Left">
      <summary>在选择装饰器的左边缘的元处理。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.None">
      <summary>未选择装饰器的一部分。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Right">
      <summary>在选择装饰器的右边缘的元处理。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Selection">
      <summary>在选择装饰器的边界内区域。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Top">
      <summary>选择装饰器上面的元处理。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopLeft">
      <summary>选择装饰器的左上角处理。</summary>
    </member>
    <member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopRight">
      <summary>选择装饰器的右上角处理。</summary>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.#ctor(System.Windows.Ink.Stroke)">
      <summary>初始化 <see cref="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" /> 类的新实例。</summary>
      <param name="stroke">集合的 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>提供了一种调用事件处理程序用一个类型特定方式。</summary>
      <param name="genericHandler">事件处理程序。</param>
      <param name="genericTarget">事件目标。</param>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.Stroke">
      <summary>获取已添加到 <see cref="T:System.Windows.Controls.InkCanvas" />的笔画。</summary>
      <returns>添加到 <see cref="T:System.Windows.Controls.InkCanvas" />的笔画。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.InkCanvas" />的 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件的方法。 </summary>
      <param name="sender">事件源。 </param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokeErasingEventArgs.Stroke">
      <summary>获取要清除的笔画。</summary>
      <returns>将清除的笔画。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventHandler">
      <summary>表示处理 <see cref="T:System.Windows.Controls.InkCanvas" /> 的 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件的方法。 </summary>
      <param name="sender">事件源。 </param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.NewStrokes">
      <summary>获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 的新笔画。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 的新笔画。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.PreviousStrokes">
      <summary>获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 以前的笔画。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkCanvas" /> 以前的笔画。</returns>
    </member>
    <member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.InkCanvas" />的 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件的方法。 </summary>
      <param name="sender">事件源。 </param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
      <summary>在图面上呈现墨迹。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.InkPresenter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.ArrangeOverride(System.Windows.Size)"></member>
    <member name="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)">
      <summary>附加 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 的可视到 <see cref="T:System.Windows.Controls.InkPresenter" />。 </summary>
      <param name="visual">
        <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />的可视化对象。</param>
      <param name="drawingAttributes">指定动态呈现墨迹的外观的 <see cref="T:System.Windows.Ink.DrawingAttributes" /> 。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> 已经附加到可视化树。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)">
      <summary>分离 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 的可视从 <see cref="T:System.Windows.Controls.InkPresenter" />的。</summary>
      <param name="visual">分离的 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 的可视化对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="visual" /> 未附加到 <see cref="T:System.Windows.Controls.InkPresenter" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>返回一个区域所剪切的剪辑几何图形，如果 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 属性设置为 true。 </summary>
      <returns>表示区域剪辑 <see cref="T:System.Windows.Media.Geometry" /> ，当 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 是 true。 </returns>
      <param name="layoutSlotSize">元素的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.GetVisualChild(System.Int32)"></member>
    <member name="M:System.Windows.Controls.InkPresenter.MeasureOverride(System.Windows.Size)"></member>
    <member name="M:System.Windows.Controls.InkPresenter.OnCreateAutomationPeer">
      <summary>作为 WPF 基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> 实现，。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
      <summary>获取和设置 <see cref="T:System.Windows.Controls.InkPresenter" /> 显示的笔画。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkPresenter" /> 显示的笔画。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkPresenter.Strokes" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.VisualChildrenCount"></member>
    <member name="T:System.Windows.Controls.ItemCollection">
      <summary>保存组合 <see cref="T:System.Windows.Controls.ItemsControl" />的内容的项列表。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Add(System.Object)">
      <summary>向 <see cref="T:System.Windows.Controls.ItemCollection" />。</summary>
      <returns>对象添加的从零开始的索引或 -1，如果该项目不能添加。</returns>
      <param name="newItem">要添加到集合。</param>
      <exception cref="T:System.InvalidOperationException">已添加的项具有不同的逻辑父级。 </exception>
      <exception cref="T:System.InvalidOperationException">集合在 ItemsSource 模式。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveFiltering">
      <summary>获取一个值集合视图是否支持启用筛选在实时打开或关闭的数据。</summary>
      <returns>true ，如果集合视图支持启用实时筛选打开或关闭;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveGrouping">
      <summary>获取一个值集合视图是否支持启用分组在实时打开或关闭的数据。</summary>
      <returns>true ，如果集合视图支持启用实时分组打开或关闭;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanChangeLiveSorting">
      <summary>获取一个值集合视图是否支持允许对实时打开或关闭的数据。</summary>
      <returns>true ，如果集合视图支持启用实时排序打开或关闭;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanFilter">
      <summary>获取一个值此集合视图是否支持筛选。</summary>
      <returns>true ，则此视图支持筛选;否则， false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanGroup">
      <summary>获取一个值此集合视图是否支持分组。</summary>
      <returns>true ，如果集合支持分组;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CanSort">
      <summary>获取一个值此集合视图是否支持排序。</summary>
      <returns>true ，则此视图支持排序;否则， false。默认值为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Clear">
      <summary>在所有项目清除集合并释放当前引用集合中。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> 在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。(在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性设置为， <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合将使只读和固定大小。)</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Contains(System.Object)">
      <summary>返回一个值所指定的项目是否位于视图。</summary>
      <returns>指示 的true 该项所属此集合并传递有效的筛选器，否则， false。</returns>
      <param name="containItem">对于已检查的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.CopyTo(System.Array,System.Int32)">
      <summary>复制集合的元素为数组，开始在特定数组索引。 </summary>
      <param name="array">要复制的目标数组。</param>
      <param name="index">在目标数组的从零开始的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 参数是 null。</exception>
      <exception cref="T:System.ArgumentException">为目标 <paramref name="array" /> 是多维的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 参数小于 0。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Count">
      <summary>获取记录的集合中的。 </summary>
      <returns>的项数。集合或 0 的，如果集合未初始化，或者不收集在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentItem">
      <summary>获取此视图的当前项。</summary>
      <returns>在视图或 null 的当前对象，如果集合未初始化，或者不收集在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。默认情况下，集合中的第一项以当前项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.CurrentPosition">
      <summary>获取当前项目的序号位置在视图中。</summary>
      <returns>当前项目的序号位置在视图或 -1 中，如果集合未初始化，或者不收集在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.DeferRefresh">
      <summary>输入可以使用组合给视图的更改和推迟自动刷新的延迟循环。</summary>
      <returns>您可以使用过程调用对象的 <see cref="T:System.IDisposable" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Filter">
      <summary>获取或设置用于的回调确定项是适用于视图的中。</summary>
      <returns>使用的方法来确定项目适用于视图的中。</returns>
      <exception cref="T:System.NotSupportedException">筛选不受支持。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.GetItemAt(System.Int32)">
      <summary>返回项目在此视图中指定的从零开始的索引。</summary>
      <returns>在指定的从零开始的索引的项目此视图。</returns>
      <param name="index">该项目所在的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出范围。</exception>
      <exception cref="T:System.InvalidOperationException">集合未初始化或在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 的绑定提供了一个 null 值。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.GroupDescriptions">
      <summary>获取如何定义对项分组 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 。组级别对集合进行索引。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Groups">
      <summary>获取基于 <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />构造的顶部组。</summary>
      <returns>根据 <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions" />构造的顶部组。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.IndexOf(System.Object)">
      <summary>返回中查找所指定的项目中的此集合的索引。 </summary>
      <returns>项的索引集合中的或 -1，如果该项不存在于集合。</returns>
      <param name="item">查找的对象集合。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Insert(System.Int32,System.Object)">
      <summary> 将元素插入到位于指定索引处的集合中。 </summary>
      <param name="insertIndex">的从零开始的索引插入项。</param>
      <param name="insertItem">要插入的项。</param>
      <exception cref="T:System.InvalidOperationException">要插入的项目中已经有不同的逻辑父级。 </exception>
      <exception cref="T:System.InvalidOperationException">集合在 ItemsSource 模式。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出范围。 </exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentAfterLast">
      <summary>获取一个值视图的当前项是否位于集合以外的末尾。</summary>
      <returns>true ，如果该视图的当前项是在集合以外的结尾;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst">
      <summary>获取一个值视图的当前项是否位于集合的开头之外。</summary>
      <returns>true ，如果该视图的当前项是在回收开始外;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsEmpty">
      <summary>获取一个值将发生 (筛选) 的视图是否为空。</summary>
      <returns>true ，如果将发生的视图为空;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveFiltering">
      <summary>获取或设置一个值筛选数据时间是否启用。</summary>
      <returns>true ，如果筛选数据在实时启用; false ，如果活动筛选未启用; null ，则无法确定的集合视图实现是否启用筛选。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveGrouping">
      <summary>获取或设置一个值对数据进行实时是否启用。</summary>
      <returns>true ，如果对数据进行实时启用; false ，如果活动分组未启用; null ，则无法确定的集合视图实现是否存在分组。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.IsLiveSorting">
      <summary>获取或设置一个值排序时间是否启用。</summary>
      <returns>true ，如果对数据进行实时启用; false ，如果活动排序未启用; null ，则无法确定的集合视图实现是否存在排序。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.Item(System.Int32)">
      <summary>获取或设置项目在特定从零开始的索引。</summary>
      <returns>对象检索或设置指定索引的对象。</returns>
      <param name="index">项目的从零开始的索引。</param>
      <exception cref="T:System.InvalidOperationException">集合未初始化，或者已设置的项目具有不同的逻辑父级，或者集合。 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出范围。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveFilteringProperties">
      <summary>获取指定属性在实时参与筛选数据字符串的集合。</summary>
      <returns>指定属性在实时参与筛选数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveGroupingProperties">
      <summary>获取指定属性在实时参与分组的数据字符串的集合。</summary>
      <returns>指定属性在实时参与分组的数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.LiveSortingProperties">
      <summary>获取指定属性在实时参与排序数据字符串的集合。</summary>
      <returns>指定属性在实时参与排序数据字符串的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentTo(System.Object)">
      <summary>设置集合中的指定项作为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>指示 的true 发生的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 成为视图中的项;否则， false。</returns>
      <param name="item">设置项目作为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToFirst">
      <summary>设置在视图中第一项作为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>指示 的true 发生的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 成为视图中的项;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToLast">
      <summary>设置在视图中最后一项作为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>指示 的true 发生的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 成为视图中的项;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToNext">
      <summary>在视图中 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 后将项目设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>指示 的true 发生的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 成为视图中的项;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPosition(System.Int32)">
      <summary>设置项目中指定的索引是在视图中 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 。</summary>
      <returns>指示 的true 发生的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 成为视图中的项;否则， false。</returns>
      <param name="position">设置项目的从零开始的索引用作 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPrevious">
      <summary>在视图中 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 之前将项目设置为 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" />。</summary>
      <returns>指示  的true 发生的 <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem" /> 成为视图中的项;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.NeedsRefresh">
      <summary>获取一个值是否需要刷新集合。</summary>
      <returns>true ，如果需要刷新集合;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.PassesFilter(System.Object)">
      <summary>返回一个值所指定的项目是否属于此视图。</summary>
      <returns>指示 的true 所指定的项所属此视图或存在此集合视图的筛选器，没有否则， false。</returns>
      <param name="item">要测试的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.Remove(System.Object)">
      <summary>中移除指定的项目将数据从集合或视图引用。</summary>
      <param name="removeItem">移除的对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> 是只读的，因为它在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式，或者 DeferRefresh 有效。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.RemoveAt(System.Int32)">
      <summary>移除项目中显示集合或视图的指定索引。</summary>
      <param name="removeIndex">移除项的从零开始的索引。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Controls.ItemCollection" /> 是只读的，因为它在 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 模式，或者 DeferRefresh 有效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">索引超出范围。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SortDescriptions">
      <summary>获取的 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合描述集合中的项在视图排序。</summary>
      <returns>的 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合描述集合中的项在视图排序。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.SourceCollection">
      <summary>获取基础此集合视图的非类别和未经筛选的集合。 </summary>
      <returns>是基础集合或的 <see cref="T:System.Collections.IEnumerable" /> 对象用户提供的 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果对 <see cref="T:System.Collections.ICollection" /> 的访问同步 (线程安全);否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" />访问对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsFixedSize">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果 <see cref="T:System.Collections.IList" /> 具有固定大小;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#Collections#IList#IsReadOnly">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>true ，如果 <see cref="T:System.Collections.IList" /> 只读;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#AddNew">
      <summary>将新的项添加到集合。</summary>
      <returns>添加到集合的新项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanAddNew">
      <summary>获取一个值新项目是否可添加到集合。</summary>
      <returns>true ，如果新项目可添加到集合;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanCancelEdit">
      <summary>获取一个值集合视图是否可放弃挂起的更改和还原一编辑对象的初始值。</summary>
      <returns>true ，如果集合视图可以放弃挂起的更改和还原用于编辑对象中的原始值;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelEdit">
      <summary>关闭编辑事务，因此，如果可能，还原原始值传递给项目。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CancelNew">
      <summary>关闭添加事务并丢弃该挂起的新项。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CanRemove">
      <summary>获取一个值项目是否可从集合中移除。</summary>
      <returns>true ，如果项目可从集合中移除;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitEdit">
      <summary>关闭编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CommitNew">
      <summary>关闭添加事务并保存该挂起的新项。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentAddItem">
      <summary>获取已添加到当前过程中添加事务的项目。</summary>
      <returns>添加的项 <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> 是否 true;否则， null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#CurrentEditItem">
      <summary>获取在编辑器的集合中的项。</summary>
      <returns>在编辑器的集合中的项，如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> 是 true;否则， null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#EditItem(System.Object)">
      <summary>启动该指定项目的编辑事务。</summary>
      <param name="item">编辑的项。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsAddingNew">
      <summary>获取一个值添加交易是否正在进行。</summary>
      <returns>true ，如果添加事务正在进行;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#IsEditingItem">
      <summary>获取一个值编辑事务是否正在进行。</summary>
      <returns>true ，如果编辑事务正在进行;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#NewItemPlaceholderPosition">
      <summary>获取或设置新项目占位符的位置该集合视图。</summary>
      <returns>该集合视图指定新项目占位符位置的某个枚举值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#Remove(System.Object)">
      <summary>从集合中移除指定的项目。</summary>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionView#RemoveAt(System.Int32)">
      <summary>移除项目在指定的位置从集合。</summary>
      <param name="index">移除项的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#AddNewItem(System.Object)">
      <summary>向集合中指定的对象。</summary>
      <returns>添加到集合的对象。</returns>
      <param name="newItem">将对象添加到集合中。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IEditableCollectionViewAddNewItem#CanAddNewItem">
      <summary>获取一个值指定对象中是否可添加到集合。</summary>
      <returns>true ，如果指定的对象可以添加到集合;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemCollection.System#ComponentModel#IItemProperties#ItemProperties">
      <summary>获取包含有关属性的信息可在项目集合中的集合。</summary>
      <returns>包含有关属性的信息可在项目集合中的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>接收焦点事件管理器的事件。</summary>
      <returns>true ，如果该侦听器处理事件;否则， false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。</param>
      <param name="sender">给予事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
      <summary>委托其宿主生成 用户界面 (UI) ，例如<see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>返回元素与项目对应于在 <see cref="T:System.Windows.Controls.ItemCollection" />中的特定索引。</summary>
      <returns>，如果项目不会注意到，返回元素与项目对应于在 <see cref="T:System.Windows.Controls.ItemCollection" /> 中的特定索引或返回 null 。</returns>
      <param name="index">所需项的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>返回 <see cref="T:System.Windows.UIElement" /> 与给定的项目相对应。</summary>
      <returns>对应于特定项目的 <see cref="T:System.Windows.UIElement" /> 。返回 null ，如果项目不属于项目集合，或者，如果 <see cref="T:System.Windows.UIElement" /> 未为其生成。</returns>
      <param name="item">查找 <see cref="T:System.Windows.UIElement" /> 的 <see cref="T:System.Object" /> 项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GenerateBatches">
      <summary>返回管理 <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> 属性的对象。</summary>
      <returns>管理 <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> 属性的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
      <summary>返回索引到对应于指定的项目中，生成的 <see cref="T:System.Windows.UIElement" />。 </summary>
      <returns>一 <see cref="T:System.Int32" /> 索引到对应于指定的，生成的 <see cref="T:System.Windows.UIElement" /> 的项目或 -1; 如果未找到 <paramref name="container" /> 。 </returns>
      <param name="container">项对应于要返回的索引 <see cref="T:System.Windows.DependencyObject" /> 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject,System.Boolean)">
      <summary>返回索引到对应于指定的项目中，生成的 <see cref="T:System.Windows.UIElement" />，也可以是递归搜索分层项目。</summary>
      <returns>一 <see cref="T:System.Int32" /> 索引到对应于指定的，生成的 <see cref="T:System.Windows.UIElement" /> 的项目或 -1; 如果未找到 <paramref name="container" /> 。</returns>
      <param name="container">项对应于要返回的索引 <see cref="T:System.Windows.DependencyObject" /> 。</param>
      <param name="returnLocalIndex"> 搜索分层项目的当前级别的true ;递归搜索分层项目的 false 。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
      <summary>返回对应于指定的项目中，生成的 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>是项对应于指定的 <see cref="T:System.Windows.DependencyObject" /> ，生成的 <see cref="T:System.Windows.UIElement" />。如果 <see cref="T:System.Windows.UIElement" /> 未生成， <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 返回。</returns>
      <param name="container">对应于要返回的项的 <see cref="T:System.Windows.DependencyObject" /> 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="container" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Items">
      <summary>获取属于该 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />项目的集合。</summary>
      <returns>属于该 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />项目的集合。</returns>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件。 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 引发通知格式项目集合已更改。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerGenerator.Status">
      <summary>
        <see cref="T:System.Windows.Controls.ItemContainerGenerator" />的生成状态。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />的生成状态的 <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus" /> 值。</returns>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged" /> 事件。 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 引发通知控制其状态发生了变化。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext">
      <summary>返回用于的容器元素显示下一项。</summary>
      <returns>是容器元素用于显示下一项的 DependencyObject。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
      <summary>返回用于的容器元素显示下一项，并且，容器元素是否新生成的 (意识到)。</summary>
      <returns>是容器元素用于显示下一项的 DependencyObject。</returns>
      <param name="isNewlyRealized">为 true，则返回的 DependencyObject 新生成 (意识到);否则，错误。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GeneratorPositionFromIndex(System.Int32)">
      <summary>返回 GeneratorPosition 对象映射为指定索引处的项。</summary>
      <returns>一 GeneratorPosition 对象映射到位于指定索引处的项。</returns>
      <param name="itemIndex">所需的项的索引。 </param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>返回 ItemContainerGenerator 适当供所指定的面板中使用。</summary>
      <returns>ItemContainerGenerator 适当供指定的面板中使用。</returns>
      <param name="panel">面板中返回相应的 ItemContainerGenerator。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>返回索引映射到该指定的 GeneratorPosition。</summary>
      <returns>是索引映射到指定的 GeneratorPosition Int32。</returns>
      <param name="position">所需的项的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>所指定的元素作为容器使用相应的项做好准备。</summary>
      <param name="container">准备的容器。通常，容器是结果以前的调用 GenerateNext。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="position">移除一个或多个生成的 (意识到的) 项目。</param>
      <param name="count">要移除的元素的 Int32 数量，从开始 <paramref name="position" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
      <summary>移除所有生成的 (意识到的) 项目。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>准备生成器生成项目，开始在指定的 GeneratorPosition 并在指定的 GeneratorDirection。</summary>
      <returns>IDisposable 对象生存期生成过程的跟踪。</returns>
      <param name="position">指定项目位置开始生成项目的 GeneratorPosition。</param>
      <param name="direction">指定方向生成项目的 GeneratorDirection。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>是否已准备好生成器生成项目，开始在指定的 GeneratorPosition 并在指定的 GeneratorDirection 和控件开始使用生成的 (意识到的) 项目。</summary>
      <returns>IDisposable 对象生存期生成过程的跟踪。</returns>
      <param name="position">指定项目位置开始生成项目的 GeneratorPosition。</param>
      <param name="direction">指定方向生成项目的 GeneratorDirection。</param>
      <param name="allowStartAtRealizedItem">指定是否开始使用生成的布尔值 (意识到的) 项目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="position">重用的第一个元素的索引。<paramref name="position" /> 必须引用以前生成的 (意识到的) 项目。</param>
      <param name="count">重用元素的数量，从开始 <paramref name="position" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>true ，如果该侦听器处理事件。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。</param>
      <param name="sender">给予事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplate">
      <summary>对于生产 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的容器提供模板。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ItemContainerTemplate.ItemContainerTemplateKey">
      <summary>获取 <see cref="T:System.Windows.Controls.ItemContainerTemplate" />的默认键。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemContainerTemplate" />的默认键。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateKey">
      <summary>为 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 对象提供一个资源键。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateKey.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplateKey" /> 类的新实例使用指定的数据类型的。</summary>
      <param name="dataType">此模板模型的类型。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerTemplateSelector">
      <summary>使您可以为 <see cref="T:System.Windows.Controls.ItemsControl" />中的每个项目选择 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemContainerTemplateSelector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerTemplateSelector.SelectTemplate(System.Object,System.Windows.Controls.ItemsControl)">
      <summary>当重写在派生类中，返回根据自定义逻辑的 <see cref="T:System.Windows.Controls.ItemContainerTemplate" /> 。</summary>
      <returns>模板。默认实现返回 null。</returns>
      <param name="item">对象可以选择模板。</param>
      <param name="parentItemsControl">项目的容器。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
      <summary>表示可用于提供项目的集合的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemsControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)">
      <summary>将指定的对象作为 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的子对象。 </summary>
      <param name="value">添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.AddText(System.String)">
      <summary>将指定的文本字符串。 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象。</summary>
      <param name="text">添加的字符串。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationCount">
      <summary>获取或设置交替项容器数。 <see cref="T:System.Windows.Controls.ItemsControl" />的，使交替容器具有独特外观。 </summary>
      <returns>交替项容器数。 <see cref="T:System.Windows.Controls.ItemsControl" />的。 </returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.AlternationIndex">
      <summary>，当使用时，获取项容器所赋的值交替项容器。</summary>
      <returns>项容器所赋的值，当使用交替项容器。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.AlternationIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.BeginInit">
      <summary>指示 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的初始化将启动。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>当重写在派生类中，取消 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> 方法的效果。</summary>
      <param name="element">容器元素。</param>
      <param name="item">项目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
      <summary>返回属于指定的 <see cref="T:System.Windows.Controls.ItemsControl" /> 拥有特定容器元素的容器。</summary>
      <returns>属于指定的 <see cref="T:System.Windows.Controls.ItemsControl" /> 拥有给定元素的容器，则为; <paramref name="itemsControl" /> 不是 null。如果 <paramref name="itemsControl" /> 是 null，返回属于所有 <see cref="T:System.Windows.Controls.ItemsControl" />的最接近的容器。</returns>
      <param name="itemsControl">返回容器的 <see cref="T:System.Windows.Controls.ItemsControl" /> 。</param>
      <param name="element">返回容器的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)">
      <summary>返回属于当前 <see cref="T:System.Windows.Controls.ItemsControl" /> 拥有给定元素的容器。</summary>
      <returns>属于当前 <see cref="T:System.Windows.Controls.ItemsControl" /> 拥有给定元素或 null 的容器; 如果该容器不存在。</returns>
      <param name="element">返回容器的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
      <summary>获取或设置路径在源对象的值作为对象的可视化表示形式。  </summary>
      <returns>一个值的路径在源对象。这可以是任何路径或 XPath 如 “@Name”。默认值为空字符串 ("")。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.EndInit">
      <summary>指示 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的初始化完成的。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)">
      <summary>获取指定对象的 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />的值。</returns>
      <param name="element">的对象获取 <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>创建或标识用于显示该特定项目的元素。</summary>
      <returns>用于显示该特定项目的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
      <summary>返回 <see cref="T:System.Windows.Controls.ItemsControl" /> 所指定的元素承载项。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 所指定的元素承载项目为或 null。</returns>
      <param name="element">宿主元素。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyle">
      <summary>获取的 <see cref="T:System.Windows.Controls.GroupStyle" /> 对象的集合定义组的每个级别外观。</summary>
      <returns>的 <see cref="T:System.Windows.Controls.GroupStyle" /> 对象的集合定义组的每个级别外观。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.GroupStyleSelector">
      <summary>获取或设置允许您为 <see cref="T:System.Windows.Controls.GroupStyle" /> 提供自定义逻辑选择适用于集合的每个组的方法。  </summary>
      <returns>允许您为 <see cref="T:System.Windows.Controls.GroupStyle" /> 提供自定义逻辑选择适用于集合的每个组的方法。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.HasItems">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.ItemsControl" /> 是否包含项目。  </summary>
      <returns>true ，如果项计数大于 0;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.HasItemsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.HasItems" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsGrouping">
      <summary>获取一个值控件是否使用分组。  </summary>
      <returns>true ，如果控件使用分组;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)">
      <summary>确定指定的项目是 (或完全限定为) 自己的容器。</summary>
      <returns>true ，如果项目为 (或完全限定为) 自己的容器;否则， false。</returns>
      <param name="item">检查项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项目是 (或完全限定为) 自己的容器。</summary>
      <returns>true ，如果项目为 (或完全限定为) 自己的容器;否则， false。</returns>
      <param name="item">检查项。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive">
      <summary>获取或设置一个值用例是否情况，当搜索项。</summary>
      <returns>true ，如果文本搜索区分大小写;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.TextSearch" /> 是否在 <see cref="T:System.Windows.Controls.ItemsControl" /> 实例启用。  </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.TextSearch" /> 启用;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemBindingGroup">
      <summary>获取或设置将复制到 <see cref="T:System.Windows.Controls.ItemsControl" />的每个项目的 <see cref="T:System.Windows.Data.BindingGroup" /> 。</summary>
      <returns>将复制到 <see cref="T:System.Windows.Controls.ItemsControl" />的每个项目的 <see cref="T:System.Windows.Data.BindingGroup" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemBindingGroupProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
      <summary>获取与控件的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 。 </summary>
      <returns>与控件关联的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyle">
      <summary>获取或设置应用于每个项目生成的容器元素中 <see cref="T:System.Windows.Style" /> 。  </summary>
      <returns>
        <see cref="T:System.Windows.Style" /> 应用于的容器元素为每个项目生成的。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
      <summary>获取或设置可应用于每个生成的容器元素的样式的自定义样式选择逻辑。  </summary>
      <returns>包含逻辑选择该样式用作 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />的 <see cref="T:System.Windows.Controls.StyleSelector" /> 对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
      <summary>获取集合用于生成 <see cref="T:System.Windows.Controls.ItemsControl" />的内容。</summary>
      <returns>用于生成 <see cref="T:System.Windows.Controls.ItemsControl" />的内容的集合。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
      <summary>返回拥有指定的容器元素中 <see cref="T:System.Windows.Controls.ItemsControl" /> 。</summary>
      <returns>拥有指定的容器元素中 <see cref="T:System.Windows.Controls.ItemsControl" /> 。</returns>
      <param name="container">返回 <see cref="T:System.Windows.Controls.ItemsControl" /> 的容器元素。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
      <summary>获取或设置定义 panel 控件项目格式的模板。  </summary>
      <returns>定义面板中的项的布局使用的 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 。指定 <see cref="T:System.Windows.Controls.StackPanel" /><see cref="T:System.Windows.Controls.ItemsControl" /> 的默认值为 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
      <summary>获取或设置用于集合生成 <see cref="T:System.Windows.Controls.ItemsControl" />的内容。  </summary>
      <returns>用于生成 <see cref="T:System.Windows.Controls.ItemsControl" />的内容的集合。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemStringFormat">
      <summary>获取或设置指定如何设置在 <see cref="T:System.Windows.Controls.ItemsControl" /> 项目的复合字符串; 如果它们显示为字符串。</summary>
      <returns>指定如何设置在 <see cref="T:System.Windows.Controls.ItemsControl" /> 项目的复合字符串; 如果它们显示为字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
      <summary>获取或设置用于的 <see cref="T:System.Windows.DataTemplate" /> 显示每个项。  </summary>
      <returns>指定数据对象的可视化的 <see cref="T:System.Windows.DataTemplate" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector">
      <summary>获取或设置选择的用于的模板自定义逻辑显示每个项。  </summary>
      <returns>提供逻辑并返回 <see cref="T:System.Windows.DataTemplate" />的自定义 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.LogicalChildren">
      <summary>获取 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的逻辑子对象的枚举数。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的逻辑子对象的枚举数。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 属性更改。</summary>
      <param name="oldAlternationCount">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />的旧值。</param>
      <param name="newAlternationCount">
        <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" />的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 属性更改。</summary>
      <param name="oldDisplayMemberPath">
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 属性的旧值。</param>
      <param name="newDisplayMemberPath">
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 属性更改。</summary>
      <param name="oldGroupStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 属性的旧值。</param>
      <param name="newGroupStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 属性更改。</summary>
      <param name="oldItemBindingGroup">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />的旧值。</param>
      <param name="newItemBindingGroup">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 属性更改。</summary>
      <param name="oldItemContainerStyle">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 属性的旧值。</param>
      <param name="newItemContainerStyle">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性更改。</summary>
      <param name="oldItemContainerStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性的旧值。</param>
      <param name="newItemContainerStyleSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性更改。</summary>
      <param name="e">有关更改的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 属性更改。</summary>
      <param name="oldItemsPanel">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 属性的旧值。</param>
      <param name="newItemsPanel">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性更改。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性的旧值。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 属性更改。</summary>
      <param name="oldItemStringFormat">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 属性的旧值。</param>
      <param name="newItemStringFormat">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性更改。</summary>
      <param name="oldItemTemplate">旧 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性值。</param>
      <param name="newItemTemplate">新 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性更改。</summary>
      <param name="oldItemTemplateSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性的旧值。</param>
      <param name="newItemTemplateSelector">
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.UIElement.KeyDown" /> 收到事件。</summary>
      <param name="e">有关事件的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.UIElement.TextInput" /> 收到事件。</summary>
      <param name="e">有关事件的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备就绪以指定的元素显示了指定的项目。 </summary>
      <param name="element">用于的元素显示指定的项目。</param>
      <param name="item">指定项目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>返回指示是否从 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 或 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 属性应用样式到指定的项目的容器元素的值。</summary>
      <returns>总是基实现的 true 。</returns>
      <param name="container">容器元素。</param>
      <param name="item">项目利益。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle">
      <summary>返回一个值序列化过程是否应序列化 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> 属性值;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems">
      <summary>返回一个值序列化过程是否应序列化 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性值;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear">
      <summary>清除所有关联的属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>移除关联在指定的项目和属性之间。</summary>
      <param name="item">关联项。</param>
      <param name="dp">关联的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)">
      <summary>从所有属性中移除指定的属性列表。</summary>
      <param name="dp">要移除的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>返回与所指定的项目中指定的属性的值。</summary>
      <returns>与所指定的项目中指定的属性的值。</returns>
      <param name="item">具有指定的属性的项与它。</param>
      <param name="dp">返回的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>存储所指定的属性和值并使它们与指定的项目。</summary>
      <param name="item">关联值和属性的项目配置。</param>
      <param name="dp">与该指定项的属性。</param>
      <param name="value">关联的属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="value">添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="text">添加的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ToString">
      <summary>提供 <see cref="T:System.Windows.Controls.ItemsControl" /> 对象的字符串表示形式。</summary>
      <returns>对象的字符串表示形式。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
      <summary>指定 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 为 <see cref="T:System.Windows.Controls.ItemsControl" /> 的项的布局创建的面板。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor(System.Windows.FrameworkElementFactory)">
      <summary>用指定的模板初始化 <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 类的实例。</summary>
      <param name="root">表示模板的 <see cref="T:System.Windows.FrameworkElementFactory" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
      <summary>检查模板化父级是否为非 null <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象。</summary>
      <param name="templatedParent">要应用此模板的元素。它必须是 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templatedParent" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="templatedParent" /> 不是 <see cref="T:System.Windows.Controls.ItemsPresenter" />。</exception>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
      <summary>用于在项目控件模板中指定在 <see cref="T:System.Windows.Controls.ItemsControl" /> 定义的 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 要添加的控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.ArrangeOverride(System.Windows.Size)">
      <summary> 调用位置和大小调整 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象的内容。 </summary>
      <returns>内容的大小。</returns>
      <param name="arrangeSize">用于计算的大小排列内容。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.MeasureOverride(System.Windows.Size)">
      <summary>重写 <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> 的基类实现度量 <see cref="T:System.Windows.Controls.ItemsPresenter" /> 对象的大小并返回适当大小与布局引擎。</summary>
      <returns>所需大小。</returns>
      <param name="constraint">约束范围是 “上限”。 返回值不应超过此大小。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnApplyTemplate">
      <summary>调用，在内部处理时或应用程序调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />，用于生成当前模板的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.OnTemplateChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>调用，当控件模板更改。</summary>
      <param name="oldTemplate">旧模板的值。</param>
      <param name="newTemplate">新模板的值。</param>
    </member>
    <member name="T:System.Windows.Controls.Label">
      <summary>表示控件的文本标签，并提供对访问键的支持。</summary>
    </member>
    <member name="M:System.Windows.Controls.Label.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.Label" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Label.OnCreateAutomationPeer">
      <summary>为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 实现，作为 WPF 基础结构的一部分。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="P:System.Windows.Controls.Label.Target">
      <summary>获取或设置当用户按下标签的访问键时获得焦点的元素。 </summary>
      <returns>当用户按下访问键时获得焦点的 <see cref="T:System.Windows.UIElement" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Label.TargetProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.Label.Target" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Label.Target" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
      <summary>包含可选项列表。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListBox" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBox.AnchorItem">
      <summary>获取或设置当 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 为 <see cref="F:System.Windows.Controls.SelectionMode.Extended" /> 时，最初选择的项目。</summary>
      <returns>当 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 是 <see cref="F:System.Windows.Controls.SelectionMode.Extended" /> 时，最初选择的项。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定项的元素。</summary>
      <returns>用于显示指定项的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.HandlesScrolling">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.ListBox" /> 是否支持滚动。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ListBox" /> 支持滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或可作为）其自己的 ItemContainer。</summary>
      <returns>如果该项是其自己的 ItemContainer，则为 true；否则为 false。</returns>
      <param name="item">指定项。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
      <summary>为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> 实现，作为 WPF 自动化基础结构的一部分。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 属性更改时调用。</summary>
      <param name="e">为 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">为 <see cref="T:System.Windows.Input.KeyEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>在 <see cref="T:System.Windows.Controls.ListBox" /> 报告鼠标移动时调用。</summary>
      <param name="e">为 <see cref="T:System.Windows.Input.MouseEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>通过引发 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件来对列表框选择更改作出响应。</summary>
      <param name="e">为 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备指定元素以显示指定项。</summary>
      <param name="element">用于显示指定项的元素。</param>
      <param name="item">指定项。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>使对象滚动到视图中。</summary>
      <param name="item">要滚动的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
      <summary>选择 <see cref="T:System.Windows.Controls.ListBox" /> 中的所有项。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 属性设置为 <see cref="F:System.Windows.Controls.SelectionMode.Single" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
      <summary>获取当前选定的项。</summary>
      <returns>返回当前选定项的集合。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 属性设置为 <see cref="F:System.Windows.Controls.SelectionMode.Single" />。</exception>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectedItemsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ListBox" /> 的选择行为。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.SelectionMode" /> 值之一。默认值为 <see cref="F:System.Windows.Controls.SelectionMode.Single" /> 选择。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)">
      <summary>设置选定项的集合。</summary>
      <returns>如果选择了所有项，则为 true；否则为 false。</returns>
      <param name="selectedItems">要选择的项集合。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.UnselectAll">
      <summary>清除 <see cref="T:System.Windows.Controls.ListBox" /> 中的所有选择。</summary>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
      <summary>表示在 <see cref="T:System.Windows.Controls.ListBox" />的一个可选项。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListBoxItem" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ListBoxItem" /> 是否已选中。  </summary>
      <returns>true ，如果项目被选中;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>调用，当鼠标输入 <see cref="T:System.Windows.Controls.ListBoxItem" />。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>调用，当鼠标离开 <see cref="T:System.Windows.Controls.ListBoxItem" />。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>调用，当用户在某个 <see cref="T:System.Windows.Controls.ListBoxItem" />的鼠标右键。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>调用，当用户在某个 <see cref="T:System.Windows.Controls.ListBoxItem" />的鼠标右键。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>调用时， <see cref="T:System.Windows.Controls.ListBoxItem" /> 在 <see cref="T:System.Windows.Controls.ListBox" />中选择。  </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>调用时， <see cref="T:System.Windows.Controls.ListBoxItem" /> 是未选定在 <see cref="T:System.Windows.Controls.ListBox" />。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>调用时，列表框项的可视父更改。 </summary>
      <param name="oldParent">
        <see cref="T:System.Windows.Controls.ListBoxItem" />以前的 <see cref="P:System.Windows.FrameworkElement.Parent" /> 属性。</param>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Selected">
      <summary>，当 <see cref="T:System.Windows.Controls.ListBoxItem" /> ，则会发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ListBoxItem.Selected" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ListBoxItem.Selected" />的路由事件标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.ListBoxItem.Unselected">
      <summary>，当 <see cref="T:System.Windows.Controls.ListBoxItem" /> 是未选定，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ListBoxItem.Unselected" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ListBoxItem.Unselected" />的路由事件标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ListView">
      <summary>表示显示数据项列表的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>移除所有模板、样式和绑定显示为 <see cref="T:System.Windows.Controls.ListViewItem" />的对象的。</summary>
      <param name="element">清除的 <see cref="T:System.Windows.Controls.ListViewItem" /> 容器。</param>
      <param name="item">
        <see cref="T:System.Windows.Controls.ListViewItem" /> 包含的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.GetContainerForItemOverride">
      <summary>创建并返回一个新的 <see cref="T:System.Windows.Controls.ListViewItem" /> 容器。</summary>
      <returns>新的 <see cref="T:System.Windows.Controls.ListViewItem" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定对象是否为 <see cref="T:System.Windows.Controls.ListViewItem" />。</summary>
      <returns>true ，如果 <paramref name="item" /> 是 <see cref="T:System.Windows.Controls.ListViewItem" />;否则， false。</returns>
      <param name="item">计算的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnCreateAutomationPeer">
      <summary>定义 <see cref="T:System.Windows.Controls.ListView" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</summary>
      <returns>返回 <see cref="T:System.Windows.Controls.ListView" /> 控件的一 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>响应 <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />。 </summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>设置样式、模板和绑定 <see cref="T:System.Windows.Controls.ListViewItem" />的。</summary>
      <param name="element">是 <see cref="T:System.Windows.Controls.ListViewItem" /> 或可以转换为的对象。</param>
      <param name="item">对于使用的对象创建 <see cref="T:System.Windows.Controls.ListViewItem" />。</param>
    </member>
    <member name="P:System.Windows.Controls.ListView.View">
      <summary>获取或设置的对象定义了个数据如何在 <see cref="T:System.Windows.Controls.ListView" /> 控件样式和进行组织。  </summary>
      <returns>指定如何显示在 <see cref="T:System.Windows.Controls.ListView" />的信息的 <see cref="T:System.Windows.Controls.ViewBase" /> 对象。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListView.ViewProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ListView.View" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListView.View" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ListViewItem">
      <summary>表示在 <see cref="T:System.Windows.Controls.ListView" /> 控件的项目。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListViewItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ListViewItem" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
      <summary>表示包含音频和/或视频的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
      <summary>实例化 <see cref="T:System.Windows.Controls.MediaElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)">
      <summary>位置和大小一个 <see cref="T:System.Windows.Controls.MediaElement" /> 控件。</summary>
      <returns>控件的大小。</returns>
      <param name="finalSize">用于的大小排列控件。</param>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
      <summary>获取或设置数量比例在用户中。  </summary>
      <returns>数目比例在用户间在 -1 和 1. 之间的范围。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingEnded">
      <summary>，当媒体缓冲区关闭，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingEndedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
      <summary>获取指示所做的缓冲区进度的百分比的值。</summary>
      <returns>缓冲区的百分比。流内容完成。该值介于 0 到 1。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingStarted">
      <summary>，当媒体缓冲区启动时，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingStartedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
      <summary>获取指示媒体是的值可以暂停。</summary>
      <returns>true ，如果媒体可以暂停;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Clock">
      <summary>获取或设置时钟与 <see cref="T:System.Windows.Media.MediaTimeline" /> 该控制媒体播放。</summary>
      <returns>时钟与 <see cref="T:System.Windows.Media.MediaTimeline" /> 该控制媒体播放。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Close">
      <summary>关闭媒体。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
      <summary>获取表示百分比的值为下载完成位于远程服务器的内容。</summary>
      <returns>指示数量的百分比值下载完成位于远程服务器的内容。该值介于 0 到 1。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasAudio">
      <summary>获取指示媒体是的值具有音频。</summary>
      <returns>true ，如果媒体具有音频;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.HasVideo">
      <summary>获取指示媒体是的值具有视频。</summary>
      <returns>true ，如果媒体具有视频;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsBuffering">
      <summary>获取一个媒体淡出缓冲区。</summary>
      <returns>true ，如果媒体缓冲区;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
      <summary>获取或设置一个音频是否的值是无言的。  </summary>
      <returns>true ，如果音频是无言的;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LoadedBehavior">
      <summary>获取或设置媒体的加载行为 <see cref="T:System.Windows.Controls.MediaState" /> 。 </summary>
      <returns>加载行为进行媒体设置的 <see cref="T:System.Windows.Controls.MediaState" /> 。默认值为 <see cref="F:System.Windows.Controls.MediaState.Play" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.LoadedBehaviorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)">
      <summary>更新 <see cref="T:System.Windows.Controls.MediaElement" />的 <see cref="P:System.Windows.UIElement.DesiredSize" /> 。此方法由父 <see cref="T:System.Windows.UIElement" />调用。这是格式第一次。</summary>
      <returns>所需大小。</returns>
      <param name="availableSize">元素不应超过的上限。</param>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
      <summary>，媒体时关闭，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaEndedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.MediaEnded" />的路由事件标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
      <summary>，当遇到错误，则会发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaFailedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
      <summary>，在加载媒体完成，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.MediaOpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
      <summary>获取媒体的自然持续时间。</summary>
      <returns>媒体的自然持续时间。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
      <summary>获取高度视频与媒体。</summary>
      <returns>高度视频与媒体。音频文件将返回零。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
      <summary>获取宽度的视频与媒体。</summary>
      <returns>宽度的视频与媒体。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.MediaElement" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.MediaElement" />的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)">
      <summary>在 <see cref="T:System.Windows.Controls.MediaElement" /> 控件的呈现处理过程期间，绘制 <see cref="T:System.Windows.Media.DrawingContext" /> 对象的内容。 </summary>
      <param name="drawingContext">绘制 <see cref="T:System.Windows.Media.DrawingContext" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
      <summary>暂停媒体在当前位置。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
      <summary>播放从当前位置的媒体。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
      <summary>通过媒体播放时获取或设置进度的当前位置。</summary>
      <returns>媒体时自以来的。默认值为 00:00: 00.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不是 null。</exception>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.ScriptCommand">
      <summary>，当脚本命令在媒体，会发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScriptCommandEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" />的路由事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.ScrubbingEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.MediaElement" /> 是否将更新查找操作的框架，当暂停时。 </summary>
      <returns>true ，如果帧更新，则暂停时;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
      <summary>获取或设置在 <see cref="T:System.Windows.Controls.MediaElement" />的一个媒体源。  </summary>
      <returns>指定元素的源的 URI。默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不是 null。</exception>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.SpeedRatio">
      <summary>获取或设置媒体的速度比。</summary>
      <returns>媒体的速度比。有效范围介于 0 (0) 和 INFINITY 之间。小于 1 的值做出让步慢于正常播放和值大于于 1 生成速度比正常播放。负值视为 0。默认值为 1。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
      <summary>从开始将使用的停止并重置媒体。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.MediaElement.Clock" /> 属性不是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
      <summary>获取或设置描述的 <see cref="T:System.Windows.Media.Stretch" /> 值 <see cref="T:System.Windows.Controls.MediaElement" /> 如何加载目标矩形。  </summary>
      <returns>呈现媒体的拉伸值。默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.StretchDirection">
      <summary>获取或设置确定对缩放的限制也适用于图像的值。  </summary>
      <returns>指定方向元素的值拉伸。默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.StretchDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.System#Windows#Markup#IUriContext#BaseUri">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.UnloadedBehavior">
      <summary>获取或设置媒体的卸载行为 <see cref="T:System.Windows.Controls.MediaState" /> 。 </summary>
      <returns>媒体的卸载行为 <see cref="T:System.Windows.Controls.MediaState" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
      <summary>获取或设置媒体的数目。 </summary>
      <returns>在 0 和 1. 之间的线性层表示媒体的数量。默认值为 0.5。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.MediaState">
      <summary>指定可应用于 <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior" /> 和 <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior" /> 属性的 <see cref="T:System.Windows.Controls.MediaElement" /> 的状态。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Close">
      <summary>用于的状态关闭媒体。释放所有媒体资源 (包括视频内存)。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Manual">
      <summary>用于的状态手动控件 <see cref="T:System.Windows.Controls.MediaElement" /> 。可以使用类似于 <see cref="M:System.Windows.Controls.MediaElement.Play" /> 的交互式方法和 <see cref="M:System.Windows.Controls.MediaElement.Pause" /> 。，当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配有效的媒体源时，媒体将不是 预先缓冲大小 ，但效果。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Pause">
      <summary>用于的状态暂停媒体。媒体将 预先缓冲大小 ，但保持暂停时， <see cref="T:System.Windows.Controls.MediaElement" /> 分配有效的媒体源时。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Play">
      <summary>用于的状态播放媒体。.，当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配有效的媒体源时，媒体将自动为的 预先缓冲大小 播放。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaState.Stop">
      <summary>用于的状态停止媒体。，当 <see cref="T:System.Windows.Controls.MediaElement" /> 分配有效的媒体源时，媒体将不是 预先缓冲大小 ，但效果。不释放媒体资源。</summary>
    </member>
    <member name="T:System.Windows.Controls.Menu">
      <summary> 表示可以按层次结构组织组件与命令和事件处理程序的 Windows 菜单控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.Menu" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 调用，当所有鼠标按钮或释放。 </summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> 。 </param>
    </member>
    <member name="P:System.Windows.Controls.Menu.IsMainMenu">
      <summary> 获取或设置一个值此 <see cref="T:System.Windows.Controls.Menu" /> 是否接收的主菜单启动通知。  </summary>
      <returns>true ，如果菜单接收的主菜单启动通知;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Menu.IsMainMenuProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Menu.IsMainMenu" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
      <summary> 调用时， <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性设置为 true。 </summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 。 </param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.ContentElement.KeyDown" /> 事件。 </summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" /> 。 </param>
    </member>
    <member name="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>处理 <see cref="E:System.Windows.UIElement.TextInput" /> 路由事件发生的事件，当菜单接收来自任何计算机上输入文本。</summary>
      <param name="e">事件数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary> 准备就绪以指定的元素显示了指定的项目。 </summary>
      <param name="element">用于的元素显示指定的项目。</param>
      <param name="item">显示的项。</param>
    </member>
    <member name="T:System.Windows.Controls.MenuItem">
      <summary>表示 <see cref="T:System.Windows.Controls.Menu" /> 内某个可选择的项。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.MenuItem" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Checked">
      <summary>在选中菜单项时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Click">
      <summary>在单击 <see cref="T:System.Windows.Controls.MenuItem" /> 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.Click" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.Click" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Command">
      <summary>获取或设置与菜单项关联的命令。</summary>
      <returns>与 <see cref="T:System.Windows.Controls.MenuItem" /> 关联的命令。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandParameter">
      <summary>获取或设置要传递给 <see cref="T:System.Windows.Controls.MenuItem" /> 的 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 属性的参数。</summary>
      <returns>要传递给 <see cref="T:System.Windows.Controls.MenuItem" /> 的 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 属性的参数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.Command" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.Command" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.CommandTarget">
      <summary>获取或设置在其上引发指定命令的目标元素。</summary>
      <returns>在其上引发指定命令的元素。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定项的元素。</summary>
      <returns>用于显示指定项的元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.HandlesScrolling">
      <summary>获取控件是否支持滚动。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Icon">
      <summary>获取或设置显示在 <see cref="T:System.Windows.Controls.MenuItem" /> 中的图标。</summary>
      <returns>显示在 <see cref="T:System.Windows.Controls.MenuItem" /> 中的图标。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IconProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.Icon" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.Icon" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.InputGestureText">
      <summary> 设置文本，以描述将调用与指定项关联的命令的输入笔势。</summary>
      <returns>描述输入笔势的文本，例如 Ctrl+C 代表“复制”命令。默认值为空字符串 ("")。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.InputGestureTextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsCheckable">
      <summary>获取一个指示是否可选中 <see cref="T:System.Windows.Controls.MenuItem" /> 的值。</summary>
      <returns>如果可选中菜单项，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckableProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsChecked">
      <summary>获取或设置一个指示是否选中 <see cref="T:System.Windows.Controls.MenuItem" /> 的值。</summary>
      <returns>如果选中 <see cref="T:System.Windows.Controls.MenuItem" />，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsCheckedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsEnabledCore">
      <summary>获取一个值，该值指示当前菜单项的 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性是否为 true。</summary>
      <returns>如果可以选中 <see cref="T:System.Windows.Controls.MenuItem" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsHighlighted">
      <summary>获取一个指示是否突出显示 <see cref="T:System.Windows.Controls.MenuItem" /> 的值。</summary>
      <returns>如果突出显示 <see cref="T:System.Windows.Controls.MenuItem" />，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary> 确定指定项是否是（或可作为）其自己的 ItemContainer。</summary>
      <returns>如果该项是其自己的 ItemContainer，则为 true；否则为 false。</returns>
      <param name="item">指定项。</param>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsPressed">
      <summary>获取一个指示是否按下 <see cref="T:System.Windows.Controls.MenuItem" /> 的值。</summary>
      <returns>如果按下 <see cref="T:System.Windows.Controls.MenuItem" />，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsPressedProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSubmenuOpen">
      <summary>获取或设置一个值，该值指示是否打开 <see cref="T:System.Windows.Controls.MenuItem" /> 的子菜单。</summary>
      <returns>如果打开 <see cref="T:System.Windows.Controls.MenuItem" /> 的子菜单，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation">
      <summary>获取菜单是否对其 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件挂起动画。</summary>
      <returns>如果菜单应对其弹出菜单挂起动画，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector">
      <summary>获取或设置选择用于显示每个项的模板的自定义逻辑。</summary>
      <returns>一个自定义对象，它提供逻辑并返回一个项容器。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>在调用此控件的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 时响应。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnApplyTemplate">
      <summary>在生成模板树时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>在 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 属性变为 true 时调用。此方法引发 <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 路由事件。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.Checked" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnClick">
      <summary>在单击 <see cref="T:System.Windows.Controls.MenuItem" /> 并引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer">
      <summary>为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> 实现，作为 WPF 自动化基础结构的一部分。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.MenuItem" /> 的 <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>宣布键盘焦点位于此元素上。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.GotFocus" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)">
      <summary>在 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性设置为 true 并引发 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当焦点不再在 <see cref="T:System.Windows.Controls.MenuItem" /> 之上或之内时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性更改时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>每当鼠标进入 <see cref="T:System.Windows.Controls.MenuItem" /> 时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>每当鼠标离开 <see cref="T:System.Windows.Controls.MenuItem" /> 时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>在按下鼠标左键时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>在释放鼠标左键时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>在鼠标移到菜单项上时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>在按下鼠标右键时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>在释放鼠标右键时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)">
      <summary>在关闭 <see cref="T:System.Windows.Controls.MenuItem" /> 的子菜单时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)">
      <summary>在打开 <see cref="T:System.Windows.Controls.MenuItem" /> 的子菜单时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>在 <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> 属性变为 false 时调用。此方法引发 <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 路由事件。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>在可视 <see cref="T:System.Windows.Controls.MenuItem" /> 的父级更改时调用。</summary>
      <param name="oldParent">可视菜单项父级的旧值；如果可视菜单项没有父级，则为 null。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary> 准备指定元素以显示指定项。</summary>
      <param name="element">用于显示指定项的元素。</param>
      <param name="item">指定项。</param>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.Role">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.MenuItem" /> 的角色。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItemRole" /> 值之一。默认值为 <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.RoleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.Role" /> 依赖项属性。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MenuItemRole" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SeparatorStyleKey">
      <summary>获取当 <see cref="T:System.Windows.Controls.MenuItem" /> 为 <see cref="T:System.Windows.Controls.Separator" /> 时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</summary>
      <returns>当 <see cref="T:System.Windows.Controls.MenuItem" /> 为 <see cref="T:System.Windows.Controls.Separator" /> 时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</returns>
    </member>
    <member name="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>用于确定是否对项容器应用样式。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.MenuItem" /> 不是 <see cref="T:System.Windows.Controls.Separator" />，则为 true；否则为 false。</returns>
      <param name="container">将应用样式的容器。</param>
      <param name="item">容器所属的项。</param>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.StaysOpenOnClick">
      <summary>获取或设置一个值，该值指示在单击此 <see cref="T:System.Windows.Controls.MenuItem" /> 时，该项所在的子菜单不应关闭。</summary>
      <returns>如果在单击此 <see cref="T:System.Windows.Controls.MenuItem" /> 时，该项所在的子菜单不应关闭，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuClosed">
      <summary>在 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 属性的状态更改为 false 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey">
      <summary>获取当 <see cref="T:System.Windows.Controls.MenuItem" /> 为子菜单标头时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</summary>
      <returns>当 <see cref="T:System.Windows.Controls.MenuItem" /> 为子菜单标头时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey">
      <summary>获取当 <see cref="T:System.Windows.Controls.MenuItem" /> 为子菜单时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</summary>
      <returns>当 <see cref="T:System.Windows.Controls.MenuItem" /> 为子菜单时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.SubmenuOpened">
      <summary>在 <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> 属性的状态更改为 true 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey">
      <summary>获取当 <see cref="T:System.Windows.Controls.MenuItem" /> 为顶级菜单标头时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</summary>
      <returns>当 <see cref="T:System.Windows.Controls.MenuItem" /> 为顶级菜单标头时应用于 <see cref="T:System.Windows.Controls.MenuItem" /> 的样式的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey">
      <summary>获取当 <see cref="T:System.Windows.Controls.MenuItem" /> 为可调用命令的顶级 <see cref="T:System.Windows.Controls.MenuItem" /> 时应用于它的样式的资源键。</summary>
      <returns>当 <see cref="T:System.Windows.Controls.MenuItem" /> 为可调用命令的顶级 <see cref="T:System.Windows.Controls.MenuItem" /> 时应用于它的样式的资源键。</returns>
    </member>
    <member name="E:System.Windows.Controls.MenuItem.Unchecked">
      <summary>在未选中 <see cref="T:System.Windows.Controls.MenuItem" /> 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UncheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate">
      <summary>获取或设置指示菜单是根据基础集合中项的类型还是一些其他的启发方法来选择不同的项容器的值。</summary>
      <returns>下拉菜单中选择不同的项容器，为true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.MenuItemRole">
      <summary> 定义 <see cref="T:System.Windows.Controls.MenuItem" /> 可具有的不同角色。 </summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuHeader">
      <summary> 子菜单标头。 </summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.SubmenuItem">
      <summary> 可调用命令的子菜单中的菜单项。 </summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelHeader">
      <summary> 顶级菜单标头。 </summary>
    </member>
    <member name="F:System.Windows.Controls.MenuItemRole.TopLevelItem">
      <summary> 可调用命令的顶级菜单项。 </summary>
    </member>
    <member name="T:System.Windows.Controls.MenuScrollingVisibilityConverter">
      <summary>表示用于处理滚动菜单中重复按钮的可见性的数据绑定转换器。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.MenuScrollingVisibilityConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>在将值从源移到目标时调用。</summary>
      <returns>已转换的值。</returns>
      <param name="values">源绑定生成的值。</param>
      <param name="targetType">目标类型。源将转换成的类型。</param>
      <param name="parameter">转换器参数。</param>
      <param name="culture">区域信息。</param>
    </member>
    <member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>不支持。</summary>
      <returns>
        <see cref="F:System.Windows.Data.Binding.DoNothing" />
      </returns>
      <param name="value">未使用此参数。</param>
      <param name="targetTypes">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
    </member>
    <member name="T:System.Windows.Controls.NotifyDataErrorValidationRule">
      <summary>检查表示错误。该数据源引发实现 <see cref="T:System.ComponentModel.INotifyDataErrorInfo" />的规则。</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.#ctor">
      <summary>创建 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.NotifyDataErrorValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>对值的验证检查。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
      <param name="value">(从绑定目标) 检查的值。</param>
      <param name="cultureInfo">使用的区域性此规则。</param>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
      <summary> 定义控件或格式可能具有不同的方向。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
      <summary> 应水平放置控件或窗体。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
      <summary> 应垂直放置控件或窗体。 </summary>
    </member>
    <member name="T:System.Windows.Controls.OverflowMode">
      <summary> 指定 <see cref="T:System.Windows.Controls.ToolBar" /> 项目如何将在主工具栏面板和在溢出面板。 </summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Always">
      <summary> 项目在溢出面板永久放置。 </summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.AsNeeded">
      <summary> 项将在主面板和溢出面板之间，根据可用空间。 </summary>
    </member>
    <member name="F:System.Windows.Controls.OverflowMode.Never">
      <summary> 项目不允许访问溢出。 </summary>
    </member>
    <member name="T:System.Windows.Controls.Page">
      <summary>封装一页可由 Windows Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" /> 和 <see cref="T:System.Windows.Controls.Frame" /> 导航到和承载的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Page" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.Page" /> 的内容（子元素）。 </summary>
      <returns>一个 <see cref="T:System.Windows.Size" />，表示页的已排列大小。</returns>
      <param name="arrangeBounds">用来排列子元素的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Page.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的背景。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> 用来绘制其背景的 <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Background" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Page.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Content">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的内容。  </summary>
      <returns>一个对象，其中包含 <see cref="T:System.Windows.Controls.Page" /> 的内容。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Content" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Page.Content" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.FontFamily">
      <summary>获取或设置指定字体系列的名称。  </summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" />，它是用于 <see cref="T:System.Windows.Controls.Page" /> 的内容的字体系列。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.FontFamily" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.FontSize">
      <summary>获取或设置字号。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> 的内容的字号。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.FontSize" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.Foreground">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的前景。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> 用来绘制其前景的 <see cref="T:System.Windows.Media.Brush" />。默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Foreground" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.KeepAlive">
      <summary>获取或设置一个值，该值指示是否在导航历史记录中保留 <see cref="T:System.Windows.Controls.Page" /> 实例。  </summary>
      <returns>如果在导航历史记录中保留 <see cref="T:System.Windows.Controls.Page" /> 实例，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.KeepAliveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.KeepAlive" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.LogicalChildren">
      <summary>返回 <see cref="T:System.Windows.Controls.Page" /> 的逻辑子元素的枚举器。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> 的逻辑子元素的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)">
      <summary>测量 <see cref="T:System.Windows.Controls.Page" /> 的子元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Size" />，表示窗口的实际大小。该方法可能会返回一个较大的值，在这种情况下，父项可能需要添加滚动条。</returns>
      <param name="constraint">窗口可为其子项提供的可用区域。</param>
    </member>
    <member name="P:System.Windows.Controls.Page.NavigationService">
      <summary>获取页的宿主用来管理导航的导航服务。</summary>
      <returns>页的宿主用来管理导航的 <see cref="T:System.Windows.Navigation.NavigationService" /> 对象；或者，如果宿主不支持导航，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>当 <see cref="T:System.Windows.Controls.Page" /> 的模板更改时调用。</summary>
      <param name="oldTemplate">旧模板。</param>
      <param name="newTemplate">新模板。 </param>
    </member>
    <member name="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>当 <see cref="T:System.Windows.Controls.Page" /> 的父项更改时调用。</summary>
      <param name="oldParent">先前的父项。如果 <see cref="T:System.Windows.DependencyObject" /> 没有先前的父项，则设置为 null。</param>
      <exception cref="T:System.InvalidOperationException">新父项既不是 <see cref="T:System.Windows.Window" />，也不是 <see cref="T:System.Windows.Controls.Frame" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI">
      <summary>允许派生类确定 <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> 属性的序列化行为。</summary>
      <returns>如果内容应序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeTitle">
      <summary>允许派生类确定 <see cref="P:System.Windows.Controls.Page.Title" /> 属性的序列化行为。</summary>
      <returns>如果内容应序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight">
      <summary>允许派生类确定 <see cref="P:System.Windows.Controls.Page.WindowHeight" /> 属性的序列化行为。</summary>
      <returns>如果内容应序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle">
      <summary>允许派生类确定 <see cref="P:System.Windows.Controls.Page.WindowTitle" /> 属性的序列化行为。</summary>
      <returns>如果内容应序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth">
      <summary>允许派生类确定 <see cref="P:System.Windows.Controls.Page.WindowWidth" /> 属性的序列化行为。</summary>
      <returns>如果内容应序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.ShowsNavigationUI">
      <summary>获取或设置一个值，该值指示 Microsoft Internet Explorer 6 上的 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的导航 UI 是否可见。</summary>
      <returns>如果宿主 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的导航 UI 可见，则为 true；否则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">在并非由 <see cref="T:System.Windows.Window" />、<see cref="T:System.Windows.Navigation.NavigationWindow" /> 或浏览器承载的 <see cref="T:System.Windows.Controls.Page" /> 实例上，将检查 <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> 属性。</exception>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="obj">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="str">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Controls.Page.Template">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的控件模板。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> 的 <see cref="T:System.Windows.Controls.ControlTemplate" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Template" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Page.Template" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.Title">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的标题。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Page" /> 的标题。</returns>
    </member>
    <member name="F:System.Windows.Controls.Page.TitleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Page.Title" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的宿主 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的高度。</summary>
      <returns>直接承载 <see cref="T:System.Windows.Controls.Page" /> 的窗口的高度。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowTitle">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的宿主 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的标题。</summary>
      <returns>直接承载 <see cref="T:System.Windows.Controls.Page" /> 的窗口的标题。</returns>
    </member>
    <member name="P:System.Windows.Controls.Page.WindowWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Page" /> 的宿主 <see cref="T:System.Windows.Window" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的宽度。</summary>
      <returns>直接承载 <see cref="T:System.Windows.Controls.Page" /> 的窗口的宽度。</returns>
    </member>
    <member name="T:System.Windows.Controls.PageRange">
      <summary>指定页范围。</summary>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32)">
      <summary>初始化只包括单个指定页的 <see cref="T:System.Windows.Controls.PageRange" /> 类的新实例。</summary>
      <param name="page">打印或处理的页。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)">
      <summary>用指定的第一页和最后一页初始化 <see cref="T:System.Windows.Controls.PageRange" /> 类的新实例。</summary>
      <param name="pageFrom">范围的第一页。</param>
      <param name="pageTo">范围的最后一页。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Object)">
      <summary>测试未知类型的对象是否与此 <see cref="T:System.Windows.Controls.PageRange" /> 相等。 </summary>
      <returns>如果对象的类型为 <see cref="T:System.Windows.Controls.PageRange" />，并且与此 <see cref="T:System.Windows.Controls.PageRange" /> 相等，则为 true；否则为 false。</returns>
      <param name="obj">已测试的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)">
      <summary>测试 <see cref="T:System.Windows.Controls.PageRange" /> 是否与此 <see cref="T:System.Windows.Controls.PageRange" /> 相等。 </summary>
      <returns>如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等，则为 true；否则为 false。</returns>
      <param name="pageRange">已测试的 <see cref="T:System.Windows.Controls.PageRange" />。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.GetHashCode">
      <summary>获取 <see cref="T:System.Windows.Controls.PageRange" /> 的哈希代码值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PageRange" /> 的哈希代码值。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>定义“==”运算符以测试两个指定的 <see cref="T:System.Windows.Controls.PageRange" /> 对象是否相等。</summary>
      <returns>如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象相等，则为 true；否则为 false。</returns>
      <param name="pr1">第一个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <param name="pr2">第二个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
    </member>
    <member name="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
      <summary>定义“!=”运算符以测试两个指定的 <see cref="T:System.Windows.Controls.PageRange" /> 对象是否不 相等。</summary>
      <returns>如果两个 <see cref="T:System.Windows.Controls.PageRange" /> 对象不 相等，则为 true；否则为 false。</returns>
      <param name="pr1">第一个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
      <param name="pr2">第二个 <see cref="T:System.Windows.Controls.PageRange" />。</param>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageFrom">
      <summary>获取或设置范围内第一页的页码。</summary>
      <returns>范围内第一页的从 1 开始的页码。</returns>
    </member>
    <member name="P:System.Windows.Controls.PageRange.PageTo">
      <summary>获取或设置范围内最后一页的页码。</summary>
      <returns>范围内最后一页的从 1 开始的页码。</returns>
    </member>
    <member name="M:System.Windows.Controls.PageRange.ToString">
      <summary>获取范围的字符串表示形式。</summary>
      <returns>格式为“<see cref="P:System.Windows.Controls.PageRange.PageFrom" />-<see cref="P:System.Windows.Controls.PageRange.PageTo" />”的表示页范围的字符串。</returns>
    </member>
    <member name="T:System.Windows.Controls.PageRangeSelection">
      <summary>指定操作（通常是打印）是处理所有页，还是只处理有限范围。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.AllPages">
      <summary>所有页。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.CurrentPage">
      <summary>当前页。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.SelectedPages">
      <summary>选定的页。</summary>
    </member>
    <member name="F:System.Windows.Controls.PageRangeSelection.UserPages">
      <summary>用户指定的页范围。</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
      <summary>为所有 <see cref="T:System.Windows.Controls.Panel" /> 元素提供基类。使用 <see cref="T:System.Windows.Controls.Panel" /> 元素定位和排列在 Windows Presentation Foundation (WPF) 应用程序的子对象。</summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Panel" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
      <summary>获取或设置用于加载在 <see cref="T:System.Windows.Controls.Panel" />的边框的区域的 <see cref="T:System.Windows.Media.Brush" /> 。  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" />。此默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Panel.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.Background" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
      <summary>获取此 <see cref="T:System.Windows.Controls.Panel" />的子元素 <see cref="T:System.Windows.Controls.UIElementCollection" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.UIElementCollection" />。默认值为空 <see cref="T:System.Windows.Controls.UIElementCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>创建新的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <returns>具有指定的逻辑父级元素的有序集合。</returns>
      <param name="logicalParent">要创建的集合的逻辑父级元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)">
      <summary>获取此 <see cref="T:System.Windows.Controls.Panel" /> 的 <see cref="T:System.Windows.Media.Visual" /> 子级在指定的索引位置。</summary>
      <returns>父 <see cref="T:System.Windows.Controls.Panel" /> 元素的 <see cref="T:System.Windows.Media.Visual" /> 子级。</returns>
      <param name="index">
        <see cref="T:System.Windows.Media.Visual" /> 子级的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)">
      <summary>获取 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 属性的值特定元素。</summary>
      <returns>元素的 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 位置。</returns>
      <param name="element">可以检索 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 请值的元素。</param>
      <exception cref="T:System.ArgumentNullException">元素是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientation">
      <summary>获取一个值此 <see cref="T:System.Windows.Controls.Panel" /> 是否具有其在单个维的子代。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.Panel" /> 的方向在一个维;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.HasLogicalOrientationPublic">
      <summary>获取一个值此 <see cref="T:System.Windows.Controls.Panel" /> 是否具有其在单个维的子代。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.Panel" /> 的方向在一个维;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.InternalChildren">
      <summary>获取子元素 <see cref="T:System.Windows.Controls.UIElementCollection" /> 。 </summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 对象的有序集合。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
      <summary>获取或设置一个值此 <see cref="T:System.Windows.Controls.Panel" /> 是由 <see cref="T:System.Windows.Controls.ItemsControl" />生成的 用户界面 (UI) 项目的容器。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.Panel" /> 此实例为项目主;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalChildren">
      <summary>获取可以重复此 <see cref="T:System.Windows.Controls.Panel" /> 元素的逻辑种属性元素的枚举器。 </summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientation">
      <summary>面板的 <see cref="T:System.Windows.Controls.Orientation" /> ，因此，如果面板支持仅在单个维的格式。</summary>
      <returns>面板的 <see cref="T:System.Windows.Controls.Orientation" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.LogicalOrientationPublic">
      <summary>面板的 <see cref="T:System.Windows.Controls.Orientation" /> ，因此，如果面板支持仅在单个维的格式。</summary>
      <returns>面板的 <see cref="T:System.Windows.Controls.Orientation" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <summary>指示 <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 属性值已更改。</summary>
      <param name="oldIsItemsHost">旧属性值。</param>
      <param name="newIsItemsHost">新的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)">
      <summary>在 <see cref="T:System.Windows.Controls.Panel" /> 元素的呈现处理过程期间，绘制 <see cref="T:System.Windows.Media.DrawingContext" /> 对象的内容。 </summary>
      <param name="dc">对绘制的 <see cref="T:System.Windows.Media.DrawingContext" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>调用，当修改可视化对象的 <see cref="T:System.Windows.Media.VisualCollection" /> 。</summary>
      <param name="visualAdded">添加到集合中 <see cref="T:System.Windows.Media.Visual" /> 。</param>
      <param name="visualRemoved">从集合中移除的 <see cref="T:System.Windows.Media.Visual" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 附加属性 的值的特定元素。</summary>
      <param name="element">的元素将属性值。</param>
      <param name="value">此元素显示的 z 平面上的顺序。</param>
      <exception cref="T:System.ArgumentNullException">元素是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Panel.ShouldSerializeChildren">
      <summary>定位面板的 <see cref="P:System.Windows.Controls.Panel.Children" /> 集合是否应 序列化。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.Panel.Children" /> 集合;否则， false。<see cref="P:System.Windows.Controls.Panel.Children" /> 集合，如果没有而不是 null null，只序列化。</returns>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="value"> 添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <param name="text"> 添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Panel.VisualChildrenCount">
      <summary>此实例中获取子 <see cref="T:System.Windows.Media.Visual" /> 对象数 <see cref="T:System.Windows.Controls.Panel" />。</summary>
      <returns>子 <see cref="T:System.Windows.Media.Visual" /> 对象的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.ZIndex">
      <summary>获取或设置表示在 z 平面上的顺序显示一个组件的值。</summary>
      <returns>此元素显示的 z 平面上的顺序。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.ZIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.ZIndex" />的附加属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.PanningMode">
      <summary>指定 <see cref="T:System.Windows.Controls.ScrollViewer" /> 如何响应触控处理。  </summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.Both">
      <summary>垂直滚动 <see cref="T:System.Windows.Controls.ScrollViewer" /> 级别和。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalFirst">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 滚动，当用户首先水平移动手指。如果用户垂直移动第一个，该移动处理鼠标事件。在 <see cref="T:System.Windows.Controls.ScrollViewer" /> 开始移动后，它将水平和垂直滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.HorizontalOnly">
      <summary>仅 <see cref="T:System.Windows.Controls.ScrollViewer" /> 水平滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.None">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 不响应触控输入。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalFirst">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 滚动，当用户垂直首先移动手指。如果用户水平移动第一个，该移动处理鼠标事件。在 <see cref="T:System.Windows.Controls.ScrollViewer" /> 开始移动后，它将水平和垂直滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.PanningMode.VerticalOnly">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 垂直滚动只。</summary>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
      <summary>表示用于输入和处理密码设计的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.PasswordBox" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
      <summary>获取或设置指定密码框的插入符号的颜色的画笔。</summary>
      <returns>描述密码框的插入符号的颜色的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Clear">
      <summary>清除该值 <see cref="P:System.Windows.Controls.PasswordBox.Password" /> 属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.PasswordBox" /> 是否显示选定的文本，当 <see cref="T:System.Windows.Controls.PasswordBox" /> 没有焦点时。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.PasswordBox" /> 显示选定的文本，当 <see cref="T:System.Windows.Controls.PasswordBox" /> 没有焦点;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.IsSelectionActive">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.PasswordBox" /> 是否具有焦点和选定的文本。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.PasswordBox" /> 具有焦点和选定的文本;否则， false。该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
      <summary>获取或设置此 <see cref="T:System.Windows.Controls.PasswordBox" />可以将处理密码的最大长度。  </summary>
      <returns>指定最大长度的整数，在字符，使该 <see cref="T:System.Windows.Controls.PasswordBox" />可以将处理的密码。零 (0)0) 的值并不意味着限制。默认值为 0 (无长度限制)。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.OnApplyTemplate">
      <summary>调用，在内部处理时或应用程序调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />，用于生成当前模板的可视化树。 </summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
      <summary>获取或设置密码当前持有由 <see cref="T:System.Windows.Controls.PasswordBox" />。</summary>
      <returns>表示密码的字符串当前持有 <see cref="T:System.Windows.Controls.PasswordBox" />。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
      <summary>，当 <see cref="P:System.Windows.Controls.PasswordBox.Password" /> 属性的值更改，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged" /> 的标识符路由事件。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.PasswordBox" />的掩码字符。  </summary>
      <returns>回显的一个掩码字符，当用户输入文本 <see cref="T:System.Windows.Controls.PasswordBox" />。默认目录为项目符号字符 (●)。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.Paste">
      <summary>使用剪贴板的内容替换在 <see cref="T:System.Windows.Controls.PasswordBox" /> 的当前选择。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SecurePassword">
      <summary>获取密码当前持有由 <see cref="T:System.Windows.Controls.PasswordBox" /> 作为 <see cref="T:System.Security.SecureString" />。</summary>
      <returns>表示密码的安全字符串当前持有 <see cref="T:System.Windows.Controls.PasswordBox" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
      <summary>选择 <see cref="T:System.Windows.Controls.PasswordBox" />的整个内容。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBrush">
      <summary>获取或设置显示选定文本的画笔。</summary>
      <returns>显示的画笔选定的文本。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionOpacity">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />的不透明度。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionBrush" />的不透明度。默认值为 0.4。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty">
      <summary>标识 <see cref="F:System.Windows.Controls.PasswordBox.SelectionOpacityProperty" /> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.PrintDialog">
      <summary>调用基于用户输入配置 <see cref="T:System.Printing.PrintTicket" /> 和 <see cref="T:System.Printing.PrintQueue" /> 然后打印文档的标准 Microsoft Windows " 打印 " 对话框。 </summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.PrintDialog" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled">
      <summary>获取或设置一个值打印到控制台的选项当前页是否启用。</summary>
      <returns>true ，如果打印当前页的选项卡中启用;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MaxPage">
      <summary>获取或设置在区域设置允许的最高的分页。</summary>
      <returns>表示最高的分页可用于在 打印 对话框的区域设置的 <see cref="T:System.UInt32" /> 。 </returns>
      <exception cref="T:System.ArgumentException">属性设置为小于 1。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.MinPage">
      <summary>获取或设置在区域设置允许的最低的分页。</summary>
      <returns>表示最低的分页可用于在 打印 对话框的区域设置的 <see cref="T:System.UInt32" /> 。 </returns>
      <exception cref="T:System.ArgumentException">属性设置为小于 1。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRange">
      <summary>，当 <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> 设置为 <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />时，获取或设置页的大小打印。</summary>
      <returns>表示页的大小打印的 <see cref="T:System.Windows.Controls.PageRange" /> 。 </returns>
      <exception cref="T:System.ArgumentException">用于设置属性的 <see cref="T:System.Windows.Controls.PageRange" /> 对象具有该范围的开头还是该范围的结束设置为小于 1. 的值。</exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PageRangeSelection">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.PrintDialog" />此实例的 <see cref="T:System.Windows.Controls.PageRangeSelection" /> 。</summary>
      <returns>表示区域设置的类型打印的 <see cref="T:System.Windows.Controls.PageRangeSelection" /> 值。 </returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight">
      <summary>获取页的可打印的区的高度。</summary>
      <returns>表示可打印的页区域的高度 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth">
      <summary>获取页的可打印的区域的宽度。</summary>
      <returns>表示可打印的页区域的宽度的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)">
      <summary>打印当前选定到 <see cref="T:System.Printing.PrintQueue" /> 的一 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 对象。</summary>
      <param name="documentPaginator">打印的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 对象。</param>
      <param name="description">要打印作业的说明。此文本在打印机的 用户界面 (UI) 。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="documentPaginator" /> 是 null。 </exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintQueue">
      <summary>获取或设置表示打印机中选择的 <see cref="T:System.Printing.PrintQueue" /> 。</summary>
      <returns>用户选择的 <see cref="T:System.Printing.PrintQueue" /> 。 </returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.PrintTicket">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.PrintDialog" /> 使用的 <see cref="T:System.Printing.PrintTicket" /> ，当用户单击当前打印作业时 打印 。</summary>
      <returns>
        <see cref="T:System.Printing.PrintTicket" /> 在的对话框下次使用 打印 单击按钮。将此 <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> 属性不验证或修改特定 <see cref="T:System.Printing.PrintQueue" />的指定 <see cref="T:System.Printing.PrintTicket" /> 。如果需要，请使用为特定的打印机有效的 <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> 方法创建 <see cref="T:System.Printing.PrintQueue" />特定于 <see cref="T:System.Printing.PrintTicket" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)">
      <summary>打印可视化 (非文本) 对象， <see cref="T:System.Windows.Media.Visual" /> 从类派生，对当前选定的 <see cref="T:System.Printing.PrintQueue" /> 。</summary>
      <param name="visual">打印的 <see cref="T:System.Windows.Media.Visual" /> 。</param>
      <param name="description">要打印作业的说明。此文本在打印机的 用户界面 (UI) 。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> 是 null。 </exception>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled">
      <summary>获取或设置一个值打印到控制台的选项选定的页是否启用。</summary>
      <returns>true ，如果打印选定的页的选项卡中启用;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.PrintDialog.ShowDialog">
      <summary>调用 <see cref="T:System.Windows.Controls.PrintDialog" /> 作为 模式对话框。 </summary>
      <returns>true ，如果用户单击 打印; false ，如果用户单击 取消;或 null ，如果用户关闭对话框，而无需单击 打印 或 取消。</returns>
    </member>
    <member name="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled">
      <summary>获取或设置一个值 打印 对话框的用户是否具有指定将在的选项卡页的大小打印。</summary>
      <returns>true 选项，则可用;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Controls.PrintDialogException">
      <summary>引发在开始时，的异常，则错误状态，当访问或使用 PrintDialog。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化提供特定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /><see cref="T:System.Windows.Controls.PrintDialogException" /> 类的新实例。此构造函数保护。</summary>
      <param name="info">需要序列化或反序列化对象的数据。</param>
      <param name="context">上下文，包括源和目标，序列化流。</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String)">
      <summary>初始化提供在 <see cref="T:System.String" /> 的特定错误状态 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类的新实例。</summary>
      <param name="message">描述错误条件的 <see cref="T:System.String" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String,System.Exception)">
      <summary>初始化提供特定错误状态 <see cref="T:System.Windows.Controls.PrintDialogException" /> 类的新实例，包括其根本原因。</summary>
      <param name="message">描述错误条件的 <see cref="T:System.String" /> 。</param>
      <param name="innerException">导致 <see cref="T:System.Windows.Controls.PrintDialogException" />的基础错误状态。</param>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
      <summary>指示操作的进度。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ProgressBar" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ProgressBar" /> 是否显示实际值或泛型，继续进度反馈。   </summary>
      <returns>false ，如果 <see cref="T:System.Windows.Controls.ProgressBar" /> 显示实际值; true ，如果 <see cref="T:System.Windows.Controls.ProgressBar" /> 显示型进度。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
      <summary>调用时，模板将应用于 <see cref="T:System.Windows.Controls.ProgressBar" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMaximumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> ，当属性更改时，更新 <see cref="T:System.Windows.Controls.ProgressBar" /> 的当前位置。 </summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的旧值。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMinimumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> ，当属性更改时，更新 <see cref="T:System.Windows.Controls.ProgressBar" /> 的当前位置。 </summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的旧值。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> ，当属性更改时，更新 <see cref="T:System.Windows.Controls.ProgressBar" /> 的当前位置。 </summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性的旧值。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性的新值。</param>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.Orientation">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ProgressBar" />的方向:水平或垂直。   </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Orientation" /> 值。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ProgressBar.Orientation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ProgressBar.Orientation" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
      <summary>表示可以选择的按钮，但是，未清除，按用户。<see cref="T:System.Windows.Controls.RadioButton" /> 的 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 属性可以通过单击它，设置，但只能清除以编程方式。</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.RadioButton" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
      <summary>获取或设置指定名称的 <see cref="T:System.Windows.Controls.RadioButton" /> 控件互相排斥。  </summary>
      <returns>指定名称的 <see cref="T:System.Windows.Controls.RadioButton" /> 控件互相排斥。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.RadioButton.GroupName" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary> 调用，虽然单选按钮的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 调用。 </summary>
      <param name="e">为 <see cref="T:System.Windows.Input.AccessKeyEventArgs" />提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>调用时， <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 属性将成为 true。 </summary>
      <param name="e">为 <see cref="T:System.Windows.RoutedEventArgs" />提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
      <summary>调用以 <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> 方法实现 <see cref="T:System.Windows.Controls.RadioButton" /> 控件的切换行为。 </summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
      <summary>表示对 <see cref="T:System.Windows.Documents.FlowDocument" /> 对象的丰富的编辑控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
      <summary>初始化新的， <see cref="T:System.Windows.Controls.RichTextBox" /> 类的默认实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)">
      <summary>初始化 <see cref="T:System.Windows.Controls.RichTextBox" /> 类的新实例，添加指定的 <see cref="T:System.Windows.Documents.FlowDocument" /> 作为初始目录。</summary>
      <param name="document">作为新 <see cref="T:System.Windows.Controls.RichTextBox" />的初始内容添加的 <see cref="T:System.Windows.Documents.FlowDocument" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretPosition">
      <summary>获取或设置输入插入符号的位置。</summary>
      <returns>指定输入插入符号位置的 <see cref="T:System.Windows.Documents.TextPointer" /> 对象。默认情况下，插入符号位于第一个插入位置。 <see cref="T:System.Windows.Controls.RichTextBox" />承载的内容的开头。请参见 <see cref="T:System.Windows.Documents.TextPointer" /> 有关文本 (如 “插入位置的”位置术语的更多信息。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将此属性设置为 null。</exception>
      <exception cref="T:System.ArgumentException">尝试将引用外部的一个位置当前文件中的此特性添加到 <see cref="T:System.Windows.Documents.TextPointer" /> 。</exception>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Document">
      <summary>获取或设置表示 <see cref="T:System.Windows.Controls.RichTextBox" />的内容的 <see cref="T:System.Windows.Documents.FlowDocument" /> 。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.RichTextBox" />的内容的 <see cref="T:System.Windows.Documents.FlowDocument" /> 对象。默认情况下，此特性设置为空 <see cref="T:System.Windows.Documents.FlowDocument" />。具体而言，空 <see cref="T:System.Windows.Documents.FlowDocument" /> 包含唯一 <see cref="T:System.Windows.Documents.Paragraph" />，包含唯一 <see cref="T:System.Windows.Documents.Run" /> 不包含文本。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将此属性设置为 null。</exception>
      <exception cref="T:System.ArgumentException">尝试设置表示另一 <see cref="T:System.Windows.Controls.RichTextBox" />内容的此特性添加到 <see cref="T:System.Windows.Documents.FlowDocument" /> 。</exception>
      <exception cref="T:System.InvalidOperationException">更改，则块中激活的时，此属性设置为。</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)">
      <summary>返回指向在 <see cref="T:System.Windows.Controls.RichTextBox" />的目录下拼写错误的 <see cref="T:System.Windows.Documents.TextPointer" /> 。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointer" /> 指向在 <see cref="T:System.Windows.Controls.RichTextBox" />的目录下拼写错误或 null ，如果下拼写错误不存在。</returns>
      <param name="position">指示的 <see cref="T:System.Windows.Documents.TextPointer" /> 一个位置搜索下拼写错误。</param>
      <param name="direction">的 <see cref="T:System.Windows.Documents.LogicalDirection" /> 搜索的下拼写错误，开始在指定的 <paramref name="posision" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>返回指向插入点最接近到指定的位置 <see cref="T:System.Windows.Documents.TextPointer" /> 。</summary>
      <returns>指定最近的插入位置的 <see cref="T:System.Windows.Documents.TextPointer" /> 为补给点，或者 null ，如果 <paramref name="snapToText" /> 是 false 和所提供的 <see cref="T:System.Windows.Point" /> 不在任何字符的边界框中。请注意返回的 <see cref="T:System.Windows.Documents.TextPointer" /> 通常是在两个字符之间的位置。使用返回的 <see cref="T:System.Windows.Documents.TextPointer" /> 的 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性确定两个字符 <see cref="T:System.Windows.Documents.TextPointer" /> 对应。</returns>
      <param name="point">指定位置的 <see cref="T:System.Windows.Point" /> 对象检索 <see cref="T:System.Windows.Documents.TextPointer" /> 。</param>
      <param name="snapToText">如果 true，此方法始终返回指定最接近的插入位置的 <see cref="T:System.Windows.Documents.TextPointer" /> 为 <see cref="T:System.Windows.Point" /> 指定，不管或所提供的 <see cref="T:System.Windows.Point" /> 是否在字符的边界框中。如果 false，此方法返回 null ，如果指定的 <see cref="T:System.Windows.Point" /> 不属于任何字符边界框。</param>
      <exception cref="T:System.InvalidOperationException">引发，如果 <see cref="T:System.Windows.Controls.RichTextBox" /> 的布局信息不存在。</exception>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)">
      <summary>返回 <see cref="T:System.Windows.Controls.SpellingError" /> 对象与所有拼写错误在 <see cref="T:System.Windows.Controls.RichTextBox" />的目录中的指定位置。</summary>
      <returns>，如果拼写错误不存在指定的字符，包含拼写错误的详细信息 <see cref="T:System.Windows.Controls.SpellingError" /> 对象中发现了 <paramref name="position" />表示的字符或 null 。 </returns>
      <param name="position">指定位置和逻辑定向解析为字符为拼写错误检查的 <see cref="T:System.Windows.Documents.TextPointer" /> 。使用此 <see cref="T:System.Windows.Documents.TextPointer" /><see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性指定字符的方向检查。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)">
      <summary>返回由所有拼错的单词的 <see cref="T:System.Windows.Documents.TextRange" /> 对象在 <see cref="T:System.Windows.Controls.RichTextBox" />的目录中的指定位置。</summary>
      <returns>包括字符的所有拼错的单词的 <see cref="T:System.Windows.Documents.TextRange" /> 对象由 <paramref name="position" />或 null 指定了，如果拼写错误不存在指定的字符。</returns>
      <param name="position">指定位置和逻辑定向解析为字符为拼写错误检查的 <see cref="T:System.Windows.Documents.TextPointer" /> 。使用此 <see cref="T:System.Windows.Documents.TextPointer" /><see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性指定字符的方向检查。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled">
      <summary>获取或设置一个值用户是否可以与 <see cref="T:System.Windows.UIElement" /> 和 <see cref="T:System.Windows.ContentElement" /> 对象交互在 <see cref="T:System.Windows.Controls.RichTextBox" />中。</summary>
      <returns>true ，如果用户可与 <see cref="T:System.Windows.UIElement" /> 和 <see cref="T:System.Windows.ContentElement" /> 对象交互在 <see cref="T:System.Windows.Controls.RichTextBox" />中;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LogicalChildren">
      <summary>获取可以重复 RichTextBox的逻辑种属性的枚举器。</summary>
      <returns>逻辑种属性的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)">
      <summary>调用重新度量 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <returns>指示 <see cref="T:System.Windows.Controls.RichTextBox" />的新范围 <see cref="T:System.Windows.Size" /> 结构。</returns>
      <param name="constraint">指定绑定的 <see cref="T:System.Windows.Size" /> 结构。 <see cref="T:System.Windows.Controls.RichTextBox" />的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.RichTextBox" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.RichTextBox" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
      <summary>获取包含当前选择的 <see cref="T:System.Windows.Documents.TextSelection" /> 对象在 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <returns>包含当前选择的 <see cref="T:System.Windows.Documents.TextSelection" /> 对象在 <see cref="T:System.Windows.Controls.RichTextBox" />。默认返回的 <see cref="T:System.Windows.Documents.TextSelection" /> 具有 True的一个 <see cref="P:System.Windows.Documents.TextRange.IsEmpty" /> 属性值。空 <see cref="T:System.Windows.Documents.TextSelection" /> 在文本呈现为插入符号不选择。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument">
      <summary>返回一个值是否应在 <see cref="T:System.Windows.Controls.RichTextBox" /> 对象的序列化时序列化 <see cref="P:System.Windows.Controls.RichTextBox.Document" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.RichTextBox.Document" /> 属性;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value"> 添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text"> 添加的字符串到对象。</param>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
      <summary>定义应用于 <see cref="T:System.Windows.Controls.Grid" /> 元素的行特定特性。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.RowDefinition" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
      <summary>获取表示 <see cref="T:System.Windows.Controls.RowDefinition" />计算的高度的值。</summary>
      <returns>表示在 与设备无关的像素的计算的高度 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
      <summary>获取 <see cref="T:System.Windows.Controls.RowDefinition" /> 元素的计算的高度或设置由 <see cref="T:System.Windows.Controls.RowDefinition" />定义的行的 <see cref="T:System.Windows.GridLength" /> 值。   </summary>
      <returns>表示行的高度 <see cref="T:System.Windows.GridLength" /> 。默认值为 1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.Height" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.Height" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
      <summary>获取或设置表示 <see cref="T:System.Windows.Controls.RowDefinition" />的最大高度的值。  </summary>
      <returns>表示最大的高度 <see cref="T:System.Double" /> 。 </returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
      <summary>获取或设置表示 <see cref="T:System.Windows.Controls.RowDefinition" />的最小允许的高度的值。  </summary>
      <returns>表示最小允许的高度 <see cref="T:System.Double" /> 。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Offset">
      <summary>获取表示此 <see cref="T:System.Windows.Controls.RowDefinition" />的 偏移量 值。</summary>
      <returns>该行的 偏移量 的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
      <summary>提供对 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象的有序，强类型集合。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)">
      <summary>添加一个 <see cref="T:System.Windows.Controls.RowDefinition" /> 元素。 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <param name="value">标识 <see cref="T:System.Windows.Controls.RowDefinition" /> 添加到集合中。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Clear">
      <summary>清除该目录 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)">
      <summary>确定给定 <see cref="T:System.Windows.Controls.RowDefinition" /> 是否在 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />内存。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.RowDefinition" /> 在集合中存在;否则 false。</returns>
      <param name="value">标识测试的 <see cref="T:System.Windows.Controls.RowDefinition" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)">
      <summary>复制数组到特定索引位置的 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象在 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />中。</summary>
      <param name="array">数组 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象。</param>
      <param name="index">标识在 <see cref="T:System.Windows.Controls.RowDefinition" /> 复制对象的 <paramref name="array" /> 中的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 - 元素数在源 <see cref="T:System.Collections.ICollection" /> 于从索引的可用空间大到目标数组的末尾。 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 </exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Count">
      <summary>获取项目的总数。 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />内此实例的。</summary>
      <returns>项总数集合中的。此属性不具有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)">
      <summary>返回给定 <see cref="T:System.Windows.Controls.RowDefinition" /> 的索引位置。 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /><see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</summary>
      <returns>
        <paramref name="value" /> 索引，如果找到集合;否则， -1。</returns>
      <param name="value">索引位置需的 <see cref="T:System.Windows.Controls.RowDefinition" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)">
      <summary>插入 <see cref="T:System.Windows.Controls.RowDefinition" /> 在 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />中的指定索引位置。 </summary>
      <param name="index">在插入该项的集合中的位置。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Controls.RowDefinition" /> 。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是在 <see cref="T:System.Collections.IList" />的有效索引。 </exception>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsReadOnly">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 是否为只读。 </summary>
      <returns>true ，如果集合是只读的;否则 false。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.IsSynchronized">
      <summary>获取一个值到此 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 的访问是否同步 (线程安全)。</summary>
      <returns>true ，如果对该集合的访问同步;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)">
      <summary>获取指示在 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />中的当前项的值。 </summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">集合中的当前项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不在集合的有效的索引位置。</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)">
      <summary>从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />移除 <see cref="T:System.Windows.Controls.RowDefinition" /> 。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.RowDefinition" /> 在集合中找到并移除的;否则， false。</returns>
      <param name="value">移除的 <see cref="T:System.Windows.Controls.RowDefinition" /> 从集合。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)">
      <summary>从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 移除 <see cref="T:System.Windows.Controls.RowDefinition" /> 在指定的索引位置。</summary>
      <param name="index">在 <see cref="T:System.Windows.Controls.RowDefinition" /> 移除的集合中的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />取消 <see cref="T:System.Windows.Controls.RowDefinition" /> 对象的大小。 </summary>
      <param name="index">在第一 <see cref="T:System.Windows.Controls.RowDefinition" /> 移除的集合中的位置。</param>
      <param name="count">
        <see cref="T:System.Windows.Controls.RowDefinition" /> 对象的总数移除的集合。</param>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />访问对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />访问对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>返回循环访问集合的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>复制集合的元素。 <see cref="T:System.Array" />开始，在特定 <see cref="T:System.Array" /> 索引。</summary>
      <param name="array">接收 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />中复制项的从零开始的 <see cref="T:System.Array" /> 。</param>
      <param name="index">在接收复制的内容的指定 <see cref="T:System.Array" /> 的第一个位置。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问集合的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)">
      <summary>添加到集合。</summary>
      <returns>新元素插入的位置。</returns>
      <param name="value">添加的 <see cref="T:System.Object" /> 到 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>确定集合是否包含特定值。</summary>
      <returns>true ，如果 <see cref="T:System.Object" /> 在 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />找到;否则， false。</returns>
      <param name="value">位于的 <see cref="T:System.Object" /><see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定特定项的索引集合中的。</summary>
      <returns>
        <paramref name="value" /> 索引，如果找到在列表中;否则， -1。</returns>
      <param name="value">位于的 <see cref="T:System.Object" /><see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>插入到集合中的指定索引处的项。</summary>
      <param name="index">的从零开始的索引插入 <see cref="T:System.Object" />。</param>
      <param name="value">要插入的 <see cref="T:System.Object" /> 到 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />中。</param>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize">
      <summary>获取指示集合是否的值具有固定大小。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> 具有固定大小;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>获取或设置元素位于指定索引处。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">将元素获取的从零开始的索引或。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是一个有效的索引位置。</exception>
    </member>
    <member name="M:System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从集合中移除特定对象的第一个匹配项。</summary>
      <param name="value">移除的 <see cref="T:System.Object" /> 从 <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
      <summary>为可滚动的内容指定 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的可见性。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 出现，并 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的维度将应用于内容，则视区无法显示所有内容时。对于级别的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，内容的宽度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，为内容的高度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
      <summary>，即使该视区无法显示所有内容， <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 不会出现。该目录的维度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" /> 父级的对应维度。对于级别的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，内容的宽度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，为内容的高度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
      <summary>，即使该视区无法显示所有内容， <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 不会出现。<see cref="T:System.Windows.Controls.ScrollViewer" /> 的维度不会应用于该目录。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 始终显示。<see cref="T:System.Windows.Controls.ScrollViewer" /> 的维度将应用于内容。对于级别的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，内容的宽度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，为内容的高度设置为 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventArgs">
      <summary>描述在滚动状态更改并包含 <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> 活动所需的参数。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeight">
      <summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer" />区域的更新高度。</summary>
      <returns>表示更新 区域 高度的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeightChange">
      <summary>获取指示在 <see cref="T:System.Windows.Controls.ScrollViewer" />上区域的高度更改的值。</summary>
      <returns>表示在 区域 高度的更改的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidth">
      <summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer" />区域的更新宽度。</summary>
      <returns>表示更新 区域 的宽度 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidthChange">
      <summary>获取指示在 <see cref="T:System.Windows.Controls.ScrollViewer" />上区域的宽度更改的值。</summary>
      <returns>表示在 区域 宽度的更改的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalChange">
      <summary>获取指示在级别的 偏移量 中的更改 <see cref="T:System.Windows.Controls.ScrollViewer" />的值。</summary>
      <returns>表示在级别的 偏移量 中的更改 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalOffset">
      <summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer" />的更新级别的 偏移量 值。</summary>
      <returns>表示级别的 偏移量 的更新值 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>在调用类型安全的 <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> 委托之前执行适当的类型强制 </summary>
      <param name="genericHandler">事件处理程序调用的，在这种情况下 <see cref="T:System.Windows.Controls.ScrollChangedEventHandler" /> 委托。</param>
      <param name="genericTarget">
        <paramref name="genericHandler" /> 调用的目标。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalChange">
      <summary>获取指示在 <see cref="T:System.Windows.Controls.ScrollViewer" />的垂直 偏移量 的更改的值。</summary>
      <returns>表示在 <see cref="T:System.Windows.Controls.ScrollViewer" />的垂直 偏移量 的更改的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalOffset">
      <summary>获取垂直 偏移量 的更新值 <see cref="T:System.Windows.Controls.ScrollViewer" />的。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ScrollViewer" />的更新垂直 偏移量 的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeight">
      <summary>获取 视区 高度的更新值 <see cref="T:System.Windows.Controls.ScrollViewer" />的。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ScrollViewer" />的更新 视区 高度的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeightChange">
      <summary>获取指示在 视区 高度上的值更改 <see cref="T:System.Windows.Controls.ScrollViewer" />的值。</summary>
      <returns>表示在垂直 视区 高度的更改 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidth">
      <summary>获取 视区 宽度的更新值 <see cref="T:System.Windows.Controls.ScrollViewer" />的。</summary>
      <returns>表示 视区 宽度的更新值 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidthChange">
      <summary>获取指示在 <see cref="T:System.Windows.Controls.ScrollViewer" />上的 视区 宽度更改的值。</summary>
      <returns>表示在 视区 宽度的更改 <see cref="T:System.Windows.Controls.ScrollViewer" />的 <see cref="T:System.Double" /> 。</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollChangedEventHandler">
      <summary>表示要处理 <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> 路由事件的方法。 </summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
      <summary>显示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.AdornerLayer">
      <summary>获取要在其上呈现装饰器的 <see cref="T:System.Windows.Documents.AdornerLayer" />。</summary>
      <returns>要在其上呈现装饰器的 <see cref="T:System.Windows.Documents.AdornerLayer" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll">
      <summary>指示如果内容支持 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" />，则是否应当允许内容控制滚动。</summary>
      <returns>如果允许内容滚动，则为 true；否则为 false。false 值指示将 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 作为滚动工作区。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollContentPresenter.CanContentScrollProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>获取或设置一个值，该值指示能否在水平轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>获取或设置一个值，该值指示能否在垂直轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>获取范围的垂直大小。</summary>
      <returns>范围的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>获取范围的水平大小。</summary>
      <returns>范围的水平大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>获取滚动内容的水平偏移。</summary>
      <returns>水平偏移。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向下滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向左滚动预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向右滚动预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> 内容向上滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>强制内容滚动，直至 <see cref="T:System.Windows.Media.Visual" /> 对象的坐标空间可见。</summary>
      <returns>表示可见区域的 <see cref="T:System.Windows.Rect" />。</returns>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">标识坐标空间使之可见的边框。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>用户单击鼠标上的滚轮按钮后向下滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>用户单击鼠标上的滚轮按钮后向左滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>用户单击鼠标上的滚轮按钮后向右滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>用户单击鼠标上的滚轮按钮后向上滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
      <summary>当内部进程或应用程序调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时调用，用于生成当前模板的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
      <summary>将内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
      <summary>将内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
      <summary>将内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
      <summary>将内容向上滚动一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>获取或设置一个控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。</summary>
      <returns>控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>设置水平偏移量。</summary>
      <param name="offset">内容在水平方向上距包含视区的偏移程度。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>设置垂直偏移量。</summary>
      <param name="offset">内容在垂直方向上距包含视区的偏移程度。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>获取滚动内容的垂直偏移。</summary>
      <returns>滚动内容的垂直偏移。有效值介于 0 与 <see cref="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight" /> 减 <see cref="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight" /> 之间。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>获取此内容的视区的垂直大小。</summary>
      <returns>此内容的视区的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>获取此内容的视区的水平大小。</summary>
      <returns>此内容的视区的水平大小。此属性无默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollUnit">
      <summary>指定该 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性使用的单位类型。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Item">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 测量基于面板中显示的项。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollUnit.Pixel">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 测量基于 与设备无关的单位（每个单位 1/96 英寸）。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
      <summary>表示可包含其他可视元素的可滚动区域。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ScrollViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的内容。</summary>
      <param name="arrangeSize">父级中此元素应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
      <summary>获取或设置一个值，该值指示是否允许滚动支持 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> 接口的元素。</summary>
      <returns>true（如果 <see cref="T:System.Windows.Controls.ScrollViewer" /> 按逻辑单位滚动）；false（如果 <see cref="T:System.Windows.Controls.ScrollViewer" /> 按物理单位滚动），默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.CanContentScrollProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>获取一个值，该值指示水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是否可见。</summary>
      <returns>一个 <see cref="T:System.Windows.Visibility" />，该值指示水平工具栏是否可见。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>获取一个值，该值表示垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是否可见。</summary>
      <returns>一个 <see cref="T:System.Windows.Visibility" />，该值指示垂直工具栏是否可见。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset">
      <summary>获取可见内容的水平偏移量。</summary>
      <returns>可见内容的水平偏移量。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentHorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ContentHorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset">
      <summary>获取可见内容的垂直偏移量。</summary>
      <returns>可见内容的垂直偏移量。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ContentVerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ContentVerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
      <summary>获取一个值，该值包含范围的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示范围的垂直大小。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
      <summary>获取一个值，该值包含范围的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示范围的水平大小。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
      <summary>从给定元素获取 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖项属性的值。</summary>
      <returns>如果此元素可以滚动，则为 true；否则，为 false。</returns>
      <param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>从给定元素获取 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性的值。</returns>
      <param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetIsDeferredScrollingEnabled(System.Windows.DependencyObject)">
      <summary>为指定对象返回 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 属性的值。</summary>
      <returns>如果用户拖动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时内容为静止状态，则为 true；否则为 false。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningDeceleration(System.Windows.DependencyObject)">
      <summary>为指定对象返回 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 属性的值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢的速率（与设备无关的单位（每个单位 1/96 英寸）/平方毫秒）。</returns>
      <param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningMode(System.Windows.DependencyObject)">
      <summary>为指定对象返回 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 属性的值。</summary>
      <returns>指定 <see cref="T:System.Windows.Controls.ScrollViewer" /> 如何响应触摸操作的值。</returns>
      <param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetPanningRatio(System.Windows.DependencyObject)">
      <summary>为指定对象返回 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 属性的值。</summary>
      <returns>滚动偏移与转换操作偏移的比例。</returns>
      <param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>从给定元素获取 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 的值  依赖项属性。</returns>
      <param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
      <summary>获取一个值，该值指示控件的样式中定义有 <see cref="T:System.Windows.Controls.ScrollViewer" />，而该样式则定义了自定义键盘滚动行为。</summary>
      <returns>如果控件定义了自定义键盘滚动行为，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>执行命中测试确定指定点是否在此 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的边界内。</summary>
      <returns>命中测试的结果。</returns>
      <param name="hitTestParameters">可视对象内的命中测试参数。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
      <summary>获取一个值，该值包含滚动内容的水平偏移量。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示滚动内容的水平偏移量。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否应显示水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值，该值指示是否应显示水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>当任意滚动属性大小的值发生变化时，附加到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> 接口调用。滚动属性包括：偏移量、范围或视区。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled">
      <summary>获取或设置一个值，该值指示当用户拖动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时，内容是否为静止状态。</summary>
      <returns>如果用户拖动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时内容为静止状态，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineDown">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向下滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineLeft">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向左滚动预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineRight">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向右滚动预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.LineUp">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向上滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
      <summary>测量 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素的内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素的经过计算的所需限制 <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">不能超过的上限 <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
      <summary>在内部进程或应用程序调用用于构建当前模板的可视化树的 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
      <summary>为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现，作为 Windows Presentation Foundation (WPF) 自动化基础结构的一部分。</summary>
      <returns>针对此控件的适当的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应特定键盘输入，并引发相关滚动行为。</summary>
      <param name="e">此事件的必需参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>在 <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> 事件发生时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>在 <see cref="E:System.Windows.UIElement.ManipulationDelta" /> 事件发生时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)">
      <summary>在 <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> 事件发生时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)">
      <summary>在 <see cref="E:System.Windows.UIElement.ManipulationStarting" /> 事件发生时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应鼠标按钮的左键单击操作。</summary>
      <param name="e">描述此事件的必需参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>响应鼠标滚轮的单击操作。</summary>
      <param name="e">描述此事件的必需参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>当检测到滚动状态发生变化（例如，滚动位置、范围或视区大小发生变化）时调用。</summary>
      <param name="e">
        <see cref="T:System.Windows.Controls.ScrollChangedEventArgs" />，它包含有关滚动状态变化的相关信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageDown">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageLeft">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageRight">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.PageUp">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容向上滚动一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningDeceleration">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ScrollViewer" /> 在惯性运动时减慢的速率（与设备无关的单位（每个单位 1/96 英寸）/平方毫秒）。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢的速率（与设备无关的单位（每个单位 1/96 英寸）/平方毫秒）。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningDecelerationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningMode">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ScrollViewer" /> 响应触摸操作的方式。</summary>
      <returns>指定 <see cref="T:System.Windows.Controls.ScrollViewer" /> 如何响应触摸操作的值。默认值为 <see cref="F:System.Windows.Controls.PanningMode.None" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.PanningRatio">
      <summary>获取或设置滚动偏移与转换操作偏移的比例。</summary>
      <returns>滚动偏移与转换操作偏移的比例。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.PanningRatioProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
      <summary>获取一个值，该值表示可滚动的内容元素的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" /> 值，该值表示可滚动的内容元素的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
      <summary>获取一个值，该值表示可滚动的内容元素的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" /> 值，该值表示可滚动的内容元素的水平大小。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
      <summary>当检测到对滚动位置、范围或视区大小进行了更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /> 路由事件。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
      <summary>获取或设置实现 <see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /> 接口并提供此 <see cref="T:System.Windows.Controls.ScrollViewer" /> 的滚动属性值的元素。</summary>
      <returns>控制滚动属性的元素，例如：范围、偏移量或视区大小。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToBottom">
      <summary>垂直滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容的末尾位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToEnd">
      <summary>垂直滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容的末尾位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHome">
      <summary>垂直滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容的开始位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内的内容滚动到指定的水平偏移量位置。</summary>
      <param name="offset">内容滚动到的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToLeftEnd">
      <summary>水平滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容的开始位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToRightEnd">
      <summary>水平滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容的末尾位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToTop">
      <summary>垂直滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内容的开始位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 内的内容滚动到指定的垂直偏移量位置。</summary>
      <param name="offset">内容滚动到的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
      <summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll" /> 依赖项属性的值设置为给定元素。</summary>
      <param name="element">对其设置属性值的元素。</param>
      <param name="canContentScroll">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依赖项属性的值设置为给定元素。</summary>
      <param name="element">对其设置属性值的元素。</param>
      <param name="horizontalScrollBarVisibility">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetIsDeferredScrollingEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定对象设置 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 属性。</summary>
      <param name="element">要对其设置 <see cref="P:System.Windows.Controls.ScrollViewer.IsDeferredScrollingEnabled" /> 属性的对象。</param>
      <param name="value">如果为 true，则使内容在用户拖动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时保持静止状态；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningDeceleration(System.Windows.DependencyObject,System.Double)">
      <summary>为指定对象设置 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 属性。</summary>
      <param name="element">要对其设置 <see cref="P:System.Windows.Controls.ScrollViewer.PanningDeceleration" /> 属性的对象。</param>
      <param name="value">
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 减慢的速率（与设备无关的单位（每个单位 1/96 英寸）/平方毫秒）。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningMode(System.Windows.DependencyObject,System.Windows.Controls.PanningMode)">
      <summary>为指定对象设置 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 属性。</summary>
      <param name="element">要对其设置 <see cref="P:System.Windows.Controls.ScrollViewer.PanningMode" /> 属性的对象。</param>
      <param name="panningMode">指定 <see cref="T:System.Windows.Controls.ScrollViewer" /> 如何响应触摸操作的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetPanningRatio(System.Windows.DependencyObject,System.Double)">
      <summary>为指定对象设置 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 属性。</summary>
      <param name="element">要对其设置 <see cref="P:System.Windows.Controls.ScrollViewer.PanningRatio" /> 属性的对象。</param>
      <param name="value">滚动偏移与转换操作偏移的比例。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性的值设置为给定元素。</summary>
      <param name="element">对其设置属性值的元素。</param>
      <param name="verticalScrollBarVisibility">要设置的属性值。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
      <summary>获取一个值，该值包含滚动内容的垂直偏移量。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示滚动内容的垂直偏移量。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>获取或设置一个值，该值指示是否应显示垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 值，该值指示是否应显示垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
      <summary>获取一个值，该值包含内容视区的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示内容视区的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
      <summary>获取一个值，该值包含内容视区的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示内容视区的水平大小。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo},System.Collections.Generic.List{System.Windows.Controls.DataGridCellInfo})">
      <summary>使用添加到选择范围或从选择范围中移除的指定单元格初始化 <see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> 类的新实例。 </summary>
      <param name="addedCells">添加到选择范围的单元格。</param>
      <param name="removedCells">从选择范围中移除的单元格。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> 或 <paramref name="removedCells" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.SelectedCellsChangedEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo},System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.DataGridCellInfo})">
      <summary>使用添加到选择范围或从选择范围中移除的指定单元格初始化 <see cref="T:System.Windows.Controls.SelectedCellsChangedEventArgs" /> 类的新实例。</summary>
      <param name="addedCells">添加到选择范围的单元格。</param>
      <param name="removedCells">从选择范围中移除的单元格。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedCells" /> 或 <paramref name="removedCells" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.AddedCells">
      <summary>获取已添加到选择范围的单元格。</summary>
      <returns>添加的单元格。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectedCellsChangedEventArgs.RemovedCells">
      <summary>获取从选择范围中移除的单元格的列表。</summary>
      <returns>移除的单元格的列表。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectedCellsChangedEventHandler">
      <summary>表示要处理 <see cref="T:System.Windows.Controls.DataGrid" />的 <see cref="E:System.Windows.Controls.DataGrid.SelectedCellsChanged" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">数据的事件。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectedDatesCollection">
      <summary>表示一组在 <see cref="T:System.Windows.Controls.Calendar" />的选定日期。</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.#ctor(System.Windows.Controls.Calendar)">
      <summary>初始化 <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> 类的新实例。 </summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Calendar" /> 与此集合中。</param>
    </member>
    <member name="M:System.Windows.Controls.SelectedDatesCollection.AddRange(System.DateTime,System.DateTime)">
      <summary>添加在指定范围内的任何日期，包括第一个和最后一个日期，到集合中。</summary>
      <param name="start">添加的第一个日期到集合中。</param>
      <param name="end">添加的最后一个日期到集合中。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
      <summary>初始化 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 类的新实例。 </summary>
      <param name="id">事件 标识符 (ID)。</param>
      <param name="removedItems">在此事件过程中未选择的项目。</param>
      <param name="addedItems">在此事件过程中，中选定的项。</param>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>获取包含项选择的列表。 </summary>
      <returns>自上次被选中 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件的项目发生。</returns>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行适当的类型强制转换通知 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件的类型安全的 <see cref="T:System.Windows.Controls.SelectionChangedEventHandler" /> 委托。 </summary>
      <param name="genericHandler">调用的处理程序。</param>
      <param name="genericTarget">事件路由的当前对象。</param>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>获取包含项目是未选择的列表。 </summary>
      <returns>自上次是未选择的 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件的项目发生。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
      <summary>表示要处理 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
      <summary>定义 <see cref="T:System.Windows.Controls.ListBox" />的选择行为。 </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
      <summary>用户可以选择多个连续的项目，按住 shift 键的同时。 </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
      <summary>用户可以选择多个项，而无需继续修改键。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
      <summary>用户一次只能选择一项。 </summary>
    </member>
    <member name="T:System.Windows.Controls.SelectiveScrollingOrientation">
      <summary>指定 <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> 面板可滚动的方向。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Both">
      <summary>在水平和垂直方向的面板滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Horizontal">
      <summary>仅在水平方向的面板滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.None">
      <summary>面板不会移动。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectiveScrollingOrientation.Vertical">
      <summary>仅在垂直方向的面板滚动。</summary>
    </member>
    <member name="T:System.Windows.Controls.Separator">
      <summary> 控件用于分隔在项目控件的项目。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.Separator" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Separator.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="T:System.Windows.Controls.Slider">
      <summary>表示允许用户从值范围中进行选择通过沿 <see cref="T:System.Windows.Controls.Primitives.Track" />的一个 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 控件的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Slider" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.Slider" /> 的内容并确定其 <see cref="T:System.Windows.Size" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" />的计算 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="finalSize">用于将控件的计算 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPlacement">
      <summary>获取或设置一 <see cref="T:System.Windows.Controls.Slider" /> 的当前值的工具提示是否显示 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 何时按下。如果工具提示中显示，此属性指定工具提示的位置。</summary>
      <returns>用于确定显示工具提示有关 <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> ，或者指定不显示工具提示的某个 <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement" /> 值。默认值为 <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None" />，指定工具提示将不会显示。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.AutoToolTipPrecision">
      <summary>获取或设置显示给右侧的 <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 在工具提示的浮点数字个数。 </summary>
      <returns>在工具提示中显示 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的精度，指定为在右侧显示数字的数量。默认值为零 (0)。</returns>
      <exception cref="T:System.ArgumentException">除了负整数外，<see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 值设置为。</exception>
    </member>
    <member name="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseLarge">
      <summary>获取数目减少 <see cref="T:System.Windows.Controls.Slider" /> 的值与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性的命令。</summary>
      <returns>由数目减少 <see cref="T:System.Windows.Controls.Slider" /> 的值与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。默认的 <see cref="T:System.Windows.Input.InputGesture" /> 为 <see cref="F:System.Windows.Input.Key.PageDown" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.DecreaseSmall">
      <summary>获取数目减少 <see cref="T:System.Windows.Controls.Slider" /> 的值与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性的命令。</summary>
      <returns>由数目减少 <see cref="T:System.Windows.Controls.Slider" /> 的值与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。默认 <see cref="T:System.Windows.Input.InputGesture" /> 对象是 <see cref="F:System.Windows.Input.Key.Down" /> 和 <see cref="F:System.Windows.Input.Key.Left" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Delay">
      <summary>在 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 等待的毫秒获取或设置时，，而则会按，在中，在命令移动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 执行之前，例如 <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> 命令。 </summary>
      <returns>一时间 (以毫秒为单位)。默认值为系统键按延迟。有关更多信息，请参见 <see cref="P:System.Windows.SystemParameters.KeyboardDelay" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.DelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Delay" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseLarge">
      <summary>获取由相同数量的增加滑块的值在 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性的命令。</summary>
      <returns>由相同数量的增加 <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty" /> 的值在 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。此命令的默认 <see cref="T:System.Windows.Input.InputGesture" /> 是 <see cref="F:System.Windows.Input.Key.PageUp" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.IncreaseSmall">
      <summary>获取由相同数量的增加滑块的值在 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性的命令。</summary>
      <returns>返回由相同数量的增加滑块的值在 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。此命令的默认 <see cref="T:System.Windows.Input.InputGesture" /> 对象是 <see cref="F:System.Windows.Input.Key.Up" /> 和 <see cref="F:System.Windows.Input.Key.Right" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.Interval">
      <summary>，当用户单击 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时，在增加或减少命令之间的毫秒获取或设置时。 </summary>
      <returns>个时间段在更改 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的指令之间的毫秒。默认值为系统键重复速率。有关更多信息，请参见 SystemParametersInfo (SPI_GETKEYBOARDSPEED)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IntervalProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Interval" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
      <summary>获取或设置增加价值的方向。 </summary>
      <returns>如果增加值的方向向左（对于水平滑块）或向下（对于垂直滑块），则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsMoveToPointEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 是否立即将发生鼠标单击的位置，当鼠标指针在 <see cref="T:System.Windows.Controls.Slider" /> 跟踪时暂停。  </summary>
      <returns>true ，如果 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 立即将鼠标单击的位置;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.Slider" /> 是否沿显示 <see cref="T:System.Windows.Controls.Slider" />的一个选择范围。  </summary>
      <returns>true ，如果选择范围显示;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsSnapToTickEnabled">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.Slider" /> 是否自动移动 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移到最近的刻度线。  </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.Slider" /> 需要 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的位置是刻度线;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.MaximizeValue">
      <summary>获取设置 <see cref="T:System.Windows.Controls.Slider" /> <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。</summary>
      <returns>使用的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。默认值为 <see cref="F:System.Windows.Input.Key.End" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Slider.MinimizeValue">
      <summary>获取设置 <see cref="T:System.Windows.Controls.Slider" /> <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值的命令。</summary>
      <returns>使用的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。默认值为 <see cref="F:System.Windows.Input.Key.Home" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
      <summary>生成 <see cref="T:System.Windows.Controls.Slider" /> 控件的 可视化树 。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseLarge">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnDecreaseSmall">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.DecreaseSmall" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseLarge">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnIncreaseSmall">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.IncreaseSmall" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximizeValue">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.MaximizeValue" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
      <summary>响应 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性值的更改而。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的旧值。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimizeValue">
      <summary>响应 <see cref="P:System.Windows.Controls.Slider.MinimizeValue" /> 命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
      <summary>响应 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性值的更改而。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的旧值。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> 路由事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 事件提供类处理，当用户停止拖动 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件提供类处理，当用户拖动 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 事件提供类处理，当用户启动拖动 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性更改时，更新 <see cref="T:System.Windows.Controls.Slider" /> 的当前位置。</summary>
      <param name="oldValue">
        <see cref="T:System.Windows.Controls.Slider" /> 的旧 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
      <param name="newValue">
        <see cref="T:System.Windows.Controls.Slider" /> 的新 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的方向。  </summary>
      <returns>一个 <see cref="P:System.Windows.Controls.Slider.Orientation" /> 值。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionEnd">
      <summary>获取或设置一个指定的最大值 <see cref="T:System.Windows.Controls.Slider" />的。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" />的值的一个选定范围的最大值。默认值为零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.SelectionEnd" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.SelectionStart">
      <summary>获取或设置一个指定的最小值 <see cref="T:System.Windows.Controls.Slider" />的。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Slider" />的值的一个选定范围的最大值。默认值为零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.SelectionStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.SelectionStart" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickFrequency">
      <summary>获取或设置在刻度线之间的间隔。  </summary>
      <returns>刻度线之间的距离。默认值为 (1.0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickFrequencyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.TickFrequency" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.TickPlacement">
      <summary>获取或设置刻度线的位置。 <see cref="T:System.Windows.Controls.Slider" />的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 。  </summary>
      <returns>定义如何确定刻度的 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 值。 <see cref="T:System.Windows.Controls.Slider" /> 指示有关滑块条。默认值为 <see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TickPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.Ticks">
      <summary>获取或设置刻度线的位置。 <see cref="T:System.Windows.Controls.Slider" />显示。 </summary>
      <returns>设置刻度线为 <see cref="T:System.Windows.Controls.Slider" />显示。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.TicksProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.Ticks" /> 依赖项属性。 </summary>
    </member>
    <member name="T:System.Windows.Controls.SoundPlayerAction">
      <summary>表示轻量级播音使用的 <see cref="T:System.Windows.TriggerAction" /> 播放 .wav 文件。</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.SoundPlayerAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.SoundPlayerAction.Dispose">
      <summary>释放 <see cref="T:System.Windows.Controls.SoundPlayerAction" /> 类使用的资源。</summary>
    </member>
    <member name="P:System.Windows.Controls.SoundPlayerAction.Source">
      <summary>获取或设置音频源位置。 </summary>
      <returns>音频源位置。</returns>
    </member>
    <member name="F:System.Windows.Controls.SoundPlayerAction.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SoundPlayerAction.Source" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.SoundPlayerAction.Source" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.SpellCheck">
      <summary>提供实时拼写检查功能。文本编辑控件，如 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.CustomDictionaries">
      <summary>获取字典为自定义拼写检查使用的文件位置的集合。</summary>
      <returns>字典文件位置的集合。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>获取字典可以在已指定的文本编辑控件的自定义拼写检查程序使用的文件位置的集合。 </summary>
      <returns>字典文件位置的集合。</returns>
      <param name="textBoxBase">字典文件集合检索的文本编辑控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBoxBase" />是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)">
      <summary>返回一个值拼写检查器是否在指定的文本编辑控件启用视图状态。</summary>
      <returns>true ，如果拼写检查器在文本编辑控件启用;否则， false。</returns>
      <param name="textBoxBase">检查的文本编辑控件。示例控件包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textBoxBase" />是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.IsEnabled">
      <summary>获取或设置确定的值拼写检查器是否位于文本编辑控件启用视图状态，例如 <see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />。 </summary>
      <returns>true ，如果拼写检查器在控件中启用;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.IsEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
      <summary>启用或禁用指定的文本编辑控件的拼写检查器，例如 <see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />。</summary>
      <param name="textBoxBase">的文本编辑控件启用或禁用拼写检查器的。示例控件包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <param name="value">指定的布尔值拼写检查器是在文本编辑控件启用视图状态。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)">
      <summary>确定拼写检查器使用的拼写更改规则。 </summary>
      <param name="textBoxBase">拼写检查器是应用于文本编辑控件。示例控件包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />。</param>
      <param name="value">确定拼写更改规则的 <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 值。</param>
    </member>
    <member name="P:System.Windows.Controls.SpellCheck.SpellingReform">
      <summary>获取或设置拼写检查器使用的拼写更改规则。 </summary>
      <returns>拼写检查器使用的拼写更改规则。默认值为 "、 <see cref="F:System.Windows.Controls.SpellingReform.Postreform" /> 的 <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" /> 德语的。</returns>
    </member>
    <member name="F:System.Windows.Controls.SpellCheck.SpellingReformProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.SpellingError">
      <summary>表示在编辑控件的一个拼错的单词 (即。<see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />)。</summary>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.Correct(System.String)">
      <summary>以指定的更正替换拼写错误文本。</summary>
      <param name="correctedText">用于的文本替换为拼写错误的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.SpellingError.IgnoreAll">
      <summary>指示控件忽略此错误，并且任何为该控件的生命的其余部分副本。</summary>
    </member>
    <member name="P:System.Windows.Controls.SpellingError.Suggestions">
      <summary>获取列表建议拼写这个拼错的单词的替换。</summary>
      <returns>拼写建议的集合拼错的单词的。</returns>
    </member>
    <member name="T:System.Windows.Controls.SpellingReform">
      <summary>指定编辑控件的文本的拼写检查程序使用的拼写更改规则 (即。<see cref="T:System.Windows.Controls.TextBox" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />)。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Postreform">
      <summary>使用拼写规则的，在拼写更改后。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.PreAndPostreform">
      <summary>使用从两个的拼写规则，在拼写更改前后。</summary>
    </member>
    <member name="F:System.Windows.Controls.SpellingReform.Prereform">
      <summary>使用拼写规则的，在拼写更改之前。</summary>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
      <summary>将子元素排列到可沿水平或垂直放置的行。 </summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.StackPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.StackPanel" /> 元素的内容。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.StackPanel" /> 元素及其子元素的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">此元素应使用排列子元素的 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.StackPanel" /> 是否在水平维度可以移动。 </summary>
      <returns>true ，如果内容位于级别的维度可以移动;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.CanVerticallyScroll">
      <summary>获取或设置一个值目录是否在垂直维度可以移动。 </summary>
      <returns>true ，如果内容位于垂直维度可以移动;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentHeight">
      <summary>获取包含 区域的垂直大小的值。</summary>
      <returns>表示 区域的垂直大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ExtentWidth">
      <summary>获取包含 区域的水平大小的值。</summary>
      <returns>表示 区域的水平大小的<see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HasLogicalOrientation">
      <summary>获取一个值此 <see cref="T:System.Windows.Controls.StackPanel" /> 是否具有垂直或水平方向。</summary>
      <returns>此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.HorizontalOffset">
      <summary>获取包含插入符号的内容的水平 偏移量 的值。</summary>
      <returns>一个表示移动的内容的水平 偏移量 的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineDown">
      <summary>向下滚动内容由一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineLeft">
      <summary>滚动由一个逻辑单元内容向左。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineRight">
      <summary>滚动由一个逻辑单元内容右侧。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.LineUp">
      <summary>滚动由一个逻辑单元向上内容。</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.LogicalOrientation">
      <summary>获取表示 <see cref="T:System.Windows.Controls.StackPanel" />的 <see cref="T:System.Windows.Controls.Orientation" /> 的值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>为指定坐标的滚动并使该部分 <see cref="T:System.Windows.Media.Visual" /> 可见。 </summary>
      <returns>在变得可见的坐标空间的 <see cref="T:System.Windows.Rect" /> 。</returns>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" /> 。</param>
      <param name="rectangle">表示在可视化中的坐标空间的 <see cref="T:System.Windows.Rect" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> 处理过程中，这些 <see cref="T:System.Windows.Controls.StackPanel" /> 的子元素所需将它们。</summary>
      <returns>表示组件的所需大小的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不应超过的一个上限 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelDown">
      <summary>滚动内容逻辑上向下以响应鼠标滚轮按钮的单击。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelLeft">
      <summary>逻辑滚动内容。以响应鼠标滚轮按钮单击的左侧。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelRight">
      <summary>逻辑滚动内容以响应鼠标滚轮按钮的单击右侧。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MouseWheelUp">
      <summary>滚动内容逻辑上向上以响应鼠标滚轮按钮的单击。</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
      <summary>获取或设置一个维度子元素堆栈的值。  </summary>
      <returns>子内容 <see cref="T:System.Windows.Controls.Orientation" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StackPanel.Orientation" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageDown">
      <summary>滚动内容逻辑上向下由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageLeft">
      <summary>滚动逻辑上内容向左由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageRight">
      <summary>滚动逻辑上内容向右由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.PageUp">
      <summary>滚动内容逻辑上向上由一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ScrollOwner">
      <summary>获取或设置标识一个容器移动此 <see cref="T:System.Windows.Controls.StackPanel" />控件的行为的值。</summary>
      <returns>拥有此 <see cref="T:System.Windows.Controls.StackPanel" />滚动的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 。此属性不具有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> 属性的值。</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.VerticalOffset">
      <summary>获取包含插入符号的内容的垂直 偏移量 的值。</summary>
      <returns>一个表示移动的内容的垂直 偏移量 的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportHeight">
      <summary>获取包含内容的 视区的垂直大小的值。</summary>
      <returns>表示内容的 视区的垂直大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.ViewportWidth">
      <summary>获取包含内容的 视区的水平大小的值。</summary>
      <returns>表示内容的 视区的垂直大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteControl">
      <summary>表示允许用户附加类型化文本或手写批注到文档的控件。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.AnchorInfo">
      <summary>获取提供有关说明的对象的信息的对象。</summary>
      <returns>提供有关说明的对象的信息的 <see cref="T:System.Windows.Annotations.IAnchorInfo" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.Author">
      <summary>获取创建便笺作者的名称。  </summary>
      <returns>创建便笺作者的名称。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.AuthorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.Author" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily">
      <summary>获取或设置标题的字体系列 <see cref="T:System.Windows.Controls.StickyNoteControl" />的。  </summary>
      <returns>控件声明的 <see cref="T:System.Drawing.FontFamily" /> 。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize">
      <summary>获取或设置用于 <see cref="T:System.Windows.Controls.StickyNoteControl" />声明的字体的大小。  </summary>
      <returns>表示字号的 <see cref="T:System.Double" /> 。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontSize" />的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch">
      <summary>获取或设置用于 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 标题的字体拉伸的程度。  </summary>
      <returns>表示程度拉伸的 <see cref="T:System.Windows.FontStretch" /> 结构与字体的普通长宽比比较。默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle">
      <summary>获取或设置用于 <see cref="T:System.Windows.Controls.StickyNoteControl" />声明的字体等样式。  </summary>
      <returns>表示声明样式的 <see cref="T:System.Windows.FontStyle" /> 结构如规则，斜体或倾斜。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" />的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight">
      <summary>获取或设置用于 <see cref="T:System.Windows.Controls.StickyNoteControl" />声明的字体权重。  </summary>
      <returns>表示权重字体，例如，加粗， ultrabold 或 extralight 的 <see cref="T:System.Windows.FontWeight" /> 结构。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" />的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand">
      <summary>表示 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 方法删除 <see cref="T:System.Windows.Controls.StickyNoteControl" />的命令。 </summary>
      <returns>可以移除 <see cref="T:System.Windows.Controls.StickyNoteControl" />的 <see cref="T:System.Windows.Input.RoutedCommand" /> 。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkCommand">
      <summary>表示 <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)" /> 方法将切换到墨迹便笺的光标位置到若干种可能的模式之一，包括绘制和清除的命令。 </summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.InkSchemaName">
      <summary>获取墨迹便笺批注的 XML 类型。 </summary>
      <returns>墨迹 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 实例化 XML 类型的 <see cref="T:System.Xml.XmlQualifiedName" /> 。 </returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsActive">
      <summary>获取一 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 淡出处于活动状态。  </summary>
      <returns>true ，如果控件处于活动状态;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsExpanded">
      <summary>获取或设置一 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 淡出或展开。  </summary>
      <returns>true ，如果控件将展开;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor">
      <summary>获取指示鼠标光标是否的值。 <see cref="T:System.Windows.Controls.StickyNoteControl" />的定位点。  </summary>
      <returns>true ，如果鼠标光标位于定位点;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate">
      <summary>注册模板的所有子级的事件处理程序。</summary>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.PenWidth">
      <summary>获取或设置钢笔的宽度墨迹的 <see cref="T:System.Windows.Controls.StickyNoteControl" />。  </summary>
      <returns>表示钢笔的宽度 <see cref="T:System.Double" /> 。默认值为 <see cref="P:System.Windows.Ink.DrawingAttributes.Width" />的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.StickyNoteControl.StickyNoteType">
      <summary>获取一个值便笺是否为文本或墨迹。  </summary>
      <returns>指示批注的类型 <see cref="T:System.Windows.Controls.StickyNoteType" /> 值。默认值为 <see cref="F:System.Windows.Controls.StickyNoteType.Text" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType" /> 依赖项属性。 </summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteControl.TextSchemaName">
      <summary>获取文本便笺批注的 XML 类型。 </summary>
      <returns>文本 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 实例化类型的 <see cref="T:System.Xml.XmlQualifiedName" /> 。 </returns>
    </member>
    <member name="T:System.Windows.Controls.StickyNoteType">
      <summary>指定 <see cref="T:System.Windows.Controls.StickyNoteControl" /> 是否接受文本或墨迹。 </summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Ink">
      <summary>墨迹便笺。</summary>
    </member>
    <member name="F:System.Windows.Controls.StickyNoteType.Text">
      <summary>文本便笺。</summary>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
      <summary>描述调用如何将内容对名为轴类型限制缩放。 </summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
      <summary>与父的内容拉伸基于 <see cref="T:System.Windows.Media.Stretch" /> 模式。 </summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
      <summary>向下内容缩放，仅当大于父级。如果内容较小，向上调用不执行。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
      <summary>向上内容缩放，仅当小于父级。如果内容较大，向下调用不执行。</summary>
    </member>
    <member name="T:System.Windows.Controls.StyleSelector">
      <summary>提供一种将根据自定义逻辑的样式。</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.StyleSelector" />的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
      <summary>当重写在派生类中，返回根据自定义逻辑的 <see cref="T:System.Windows.Style" /> 。</summary>
      <returns>返回一个特定的样式适用;否则， null。</returns>
      <param name="item">内容。</param>
      <param name="container">该样式将应用于的元素。</param>
    </member>
    <member name="T:System.Windows.Controls.TabControl">
      <summary>表示包含多个项的控件，这些项共享屏幕上的同一空间。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TabControl" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentStringFormat">
      <summary>获取一个撰写字符串，该字符串指定如果 <see cref="T:System.Windows.Controls.TabItem" /> 对象的内容显示为字符串，应如何设置这些内容的格式。</summary>
      <returns>一个撰写字符串，指定如果 <see cref="T:System.Windows.Controls.TabItem" /> 对象的内容显示为字符串，应如何设置这些内容的格式。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.ContentStringFormat" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplate">
      <summary>获取或设置 <see cref="T:System.Windows.DataTemplate" /> 以应用于所有未定义 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 或 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性的 <see cref="T:System.Windows.Controls.TabItem" />。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> 应用于所有未定义 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 或 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 属性的 <see cref="T:System.Windows.Controls.TabItem" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.ContentTemplateSelector">
      <summary>获取或设置为选择用于显示控件内容的模板提供自定义逻辑的 <see cref="T:System.Windows.Controls.DataTemplateSelector" />。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.ContentTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定项的元素。</summary>
      <returns>用于显示指定项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是（或可作为）其自己的 ItemContainer。</summary>
      <returns>如果该项是其自己的 ItemContainer，则返回 true；否则返回 false。</returns>
      <param name="item">指定项。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
      <summary>调用 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 时进行调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnCreateAutomationPeer">
      <summary>为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer" /> 实现，作为 WPF 自动化基础结构的一部分。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnInitialized(System.EventArgs)">
      <summary>当 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true 时调用。</summary>
      <param name="e">为 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>调用以在项更改时更新当前选择。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>为用户按键时引发的 <see cref="E:System.Windows.ContentElement.KeyDown" /> 路由事件提供类处理。</summary>
      <param name="e">为 <see cref="T:System.Windows.Input.KeyEventArgs" /> 提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件。</summary>
      <param name="e">为 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 提供数据。</param>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContent">
      <summary>获取当前选择的 <see cref="T:System.Windows.Controls.TabItem" /> 的内容。</summary>
      <returns>当前选择的 <see cref="T:System.Windows.Controls.TabItem" /> 的内容。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContent" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentStringFormat">
      <summary>获取一个撰写字符串，该字符串指定如果当前选定的 <see cref="T:System.Windows.Controls.TabItem" /> 的内容显示为字符串，应如何设置该内容的格式。</summary>
      <returns>一个撰写字符串，指定如果当前选定的 <see cref="T:System.Windows.Controls.TabItem" /> 的内容显示为字符串，应如何设置该内容的格式。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentStringFormatProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContentStringFormat" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentStringFormat" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplate">
      <summary>获取当前所选项的 <see cref="T:System.Windows.DataTemplate" />。</summary>
      <returns>选定项的 <see cref="T:System.Windows.DataTemplate" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector">
      <summary>获取当前所选项的 <see cref="T:System.Windows.Controls.DataTemplateSelector" />。</summary>
      <returns>当前选定项的 <see cref="T:System.Windows.Controls.DataTemplateSelector" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
      <summary>获取或设置选项卡标题如何相对于选项卡内容进行对齐。</summary>
      <returns>选项卡标题相对于选项卡内容的对齐方式。默认值为 <see cref="F:System.Windows.Controls.Dock.Top" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.TabItem">
      <summary>表示在 <see cref="T:System.Windows.Controls.TabControl" />内的某个可选项。 </summary>
    </member>
    <member name="M:System.Windows.Controls.TabItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TabItem" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.TabItem.IsSelected">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.TabItem" /> 是否已选中。  </summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.TabItem" /> 选中;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabItem.IsSelected" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary> ，当 <see cref="T:System.Windows.Controls.TabControl" /> 的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 调用，响应。 </summary>
      <param name="e">为 <see cref="T:System.Windows.Input.AccessKeyEventArgs" />提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
      <summary>调用时， <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改。 </summary>
      <param name="oldContent">内容属性的旧值。</param>
      <param name="newContent">内容属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary> 调用时， <see cref="P:System.Windows.Controls.TabControl.ContentTemplate" /> 属性更改。 </summary>
      <param name="oldContentTemplate">内容模板属性的旧值。</param>
      <param name="newContentTemplate">内容模板属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>调用时， <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector" /> 属性更改。 </summary>
      <param name="oldContentTemplateSelector">内容模板选择器的旧值。</param>
      <param name="newContentTemplateSelector">内容模板选择器的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnCreateAutomationPeer">
      <summary>作为 WPF 自动化基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary> 响应 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 事件。 </summary>
      <param name="e">为 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary> 将键盘侧重于此元素。 </summary>
      <param name="e">键入事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>调用来指示 <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 属性更改为 true。 </summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 事件。</param>
    </member>
    <member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary> 调用来指示 <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> 属性更改为 false。 </summary>
      <param name="e">事件数据。 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 事件。</param>
    </member>
    <member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
      <summary>获取选项条位置。  </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Dock" /> 值。默认值为 <see cref="F:System.Windows.Controls.Dock.Top" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TabItem.TabStripPlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
      <summary>用于显示少量提供一个轻量控制流内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Controls.TextBlock" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Controls.TextBlock" /> 类的新实例，添加一个指定的 <see cref="T:System.Windows.Documents.Inline" /> 元素，初始显示内容。</summary>
      <param name="inline">派生自抽象 <see cref="T:System.Windows.Documents.Inline" /> 类的对象，添加为初始目录。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inline" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素并确定 <see cref="T:System.Windows.Controls.TextBlock" />的范围。</summary>
      <returns>用于的实际 <see cref="T:System.Windows.Size" /> 排列元素。</returns>
      <param name="arrangeSize">在 <see cref="T:System.Windows.Controls.TextBlock" /> 应使用排列自身的承载的父元素及其子元素中的 <see cref="T:System.Windows.Size" /> 。大小调整约束会影响此请求的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Background">
      <summary>获取或设置用于的 <see cref="T:System.Windows.Media.Brush" /> 加载内容区域背景。  </summary>
      <returns>画笔用于加载内容区域的背景或 null 不使用背景画笔。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Background" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
      <summary>获取或设置每一行文本是从基线的偏移量的数量。  </summary>
      <returns>每一行文本是从基线的偏移量的数量，在 与设备无关的像素。<see cref="F:System.Double.NaN" /> 指示一个好的基线偏移量当前字体特征自动计算。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.BaselineOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakAfter">
      <summary>获取指示的 <see cref="T:System.Windows.LineBreakCondition" /> 内容应如何在当前元素后中断。</summary>
      <returns>将内容断开的条件在当前元素之后。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BreakBefore">
      <summary>获取指示的 <see cref="T:System.Windows.LineBreakCondition" /> 内容应如何在当前元素之前中断。 </summary>
      <returns>将内容断开的条件在当前元素之后。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentEnd">
      <summary>具有 <see cref="T:System.Windows.Documents.TextPointer" /> 内容的以 <see cref="T:System.Windows.Controls.TextBlock" />的。</summary>
      <returns>内容的 <see cref="T:System.Windows.Documents.TextPointer" /> 在 <see cref="T:System.Windows.Controls.TextBlock" />的。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.ContentStart">
      <summary>具有 <see cref="T:System.Windows.Documents.TextPointer" /> 内容开头在 <see cref="T:System.Windows.Controls.TextBlock" />的。</summary>
      <returns>对目录的开始 <see cref="T:System.Windows.Documents.TextPointer" /> 在 <see cref="T:System.Windows.Controls.TextBlock" />的。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" />的首选顶级字体系列。  </summary>
      <returns>
        <see cref="T:System.Windows.Media.FontFamily" /> 对象指定一个字体系列的或具有一个或多个回退字体系列的一个主要首选字体系列。默认值为 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 值取决于的字体。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" />的顶部字号。   </summary>
      <returns>使用所需的字号在 与设备无关的像素)。<see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 值取决于默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" />的顶部字体拉伸的特性。  </summary>
      <returns>指定所需的字体拉伸特性的 <see cref="T:System.Windows.FontStretch" /> 类的成员对于使用。默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" />的顶部字体样式。  </summary>
      <returns>指定所需的字体样式的 <see cref="T:System.Windows.FontStyles" /> 类的成员。<see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 值取决于默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" />的顶部字体权重。  </summary>
      <returns>指定所需的字体权重 <see cref="T:System.Windows.FontWeights" /> 类的成员。<see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 值取决于默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Brush" /> 适用于 <see cref="T:System.Windows.Controls.TextBlock" />的文本内容。  </summary>
      <returns>使用的画笔应用于文本内容。默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)">
      <summary>返回 <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
      <summary>还原 <see cref="T:System.Windows.Documents.TextPointer" /> 到该位置最近指定的 <see cref="T:System.Windows.Point" />。</summary>
      <returns>到指定的 <see cref="T:System.Windows.Documents.TextPointer" /> 点，或者 null ，如果 <paramref name="snapToText" /> 是指定的 false 和在 <see cref="T:System.Windows.Controls.TextBlock" /> 内容区域景点不属于一个字符边界框。</returns>
      <param name="point">在 <see cref="T:System.Windows.Controls.TextBlock" /> 坐标空间的 <see cref="T:System.Windows.Point" /> 可以返回 <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <param name="snapToText"> 返回 <see cref="T:System.Windows.Documents.TextPointer" /> 的true 到插入点最接近 <paramref name="point" />， <paramref name="point" /> 是否在字符的边界框内;返回 null 的 false ，如果 <paramref name="point" /> 不是在字符的边界框中。</param>
      <exception cref="T:System.InvalidOperationException">控件的当前，有效的布局信息不可用。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)">
      <summary>返回边框的只读集合指定的 <see cref="T:System.Windows.ContentElement" />的。</summary>
      <returns>边框的只读集合指定的 <see cref="T:System.Windows.ContentElement" />的。</returns>
      <param name="child">可以生成并返回边框的集合 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>返回 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 附加属性 的值指定的依赖项对象的。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 的当前值将指定的依赖项对象的属性。</returns>
      <param name="element">检索 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 的值附加属性的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Media.Visual" /> 子级在指定的索引。</summary>
      <returns>指定索引处。 <see cref="T:System.Windows.Media.Visual" /> 子级。</returns>
      <param name="index">指定 <see cref="T:System.Windows.Media.Visual" /> 子级的从零开始的索引返回。此值必须在 0 和 1 之间 (减号) 的<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /></param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不在 0 和 1 之间 (减号) 的<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount" /></exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>返回指定的 <see cref="T:System.Windows.Media.PointHitTestParameters" />的 <see cref="T:System.Windows.Media.PointHitTestResult" /> 。</summary>
      <returns>指定的命中的 <see cref="T:System.Windows.Media.PointHitTestResult" /> 测试参数。</returns>
      <param name="hitTestParameters">指定参数的 <see cref="T:System.Windows.Media.PointHitTestParameters" /> 对象执行命中测试。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hitTestParameters" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.HostedElementsCore">
      <summary>获取可用于重复此 <see cref="T:System.Windows.Controls.TextBlock" />承载的元素的枚举器。</summary>
      <returns>可以重复元素的枚举数由此 <see cref="T:System.Windows.Controls.TextBlock" />承载的。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
      <summary>获取包含的内容 <see cref="T:System.Windows.Controls.TextBlock" />的顶部 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" /> 。</summary>
      <returns>包含的内容 <see cref="T:System.Windows.Controls.TextBlock" />的 <see cref="T:System.Windows.Documents.Inline" /> 元素的 <see cref="T:System.Windows.Documents.InlineCollection" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)">
      <summary>返回 <see cref="T:System.Windows.IInputElement" /> 在 <see cref="T:System.Windows.Controls.TextBlock" /><see cref="T:System.Windows.Controls.TextBlock" />指定的 <see cref="T:System.Windows.Point" /> 。</summary>
      <returns>; 如果未能找到， <see cref="T:System.Windows.IInputElement" /> 位于指定的点或 null 这样 <see cref="T:System.Windows.IInputElement" /> 。</returns>
      <param name="point">
        <see cref="T:System.Windows.Point" />，在 <see cref="T:System.Windows.Controls.TextBlock" />的坐标空间，可以返回相应的 <see cref="T:System.Windows.IInputElement" />。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled">
      <summary>获取或设置一个值运行的自动断字是否启用或禁用。  </summary>
      <returns>指示 的true 运行的自动中断和断字启用;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
      <summary>获取或设置高度内容每一行。  </summary>
      <returns>高度行，在 与设备无关的像素，在 0.0034 到 160000 范围内。<see cref="F:System.Double.NaN" /> 的值 (等效于 “Auto的属性值 ") 指示行高从当前字体特征自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为非确定的值。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
      <summary>获取或设置行框以每一行文本是定位在 <see cref="T:System.Windows.Controls.TextBlock" />中的结构。  </summary>
      <returns>行框以每一行文本是定位在 <see cref="T:System.Windows.Controls.TextBlock" />中的结构。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LogicalChildren">
      <summary>获取可以重复 <see cref="T:System.Windows.Controls.TextBlock" />的逻辑种属性的枚举器。</summary>
      <returns>逻辑种属性的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)">
      <summary>调用重新度量 <see cref="T:System.Windows.Controls.TextBlock" />。</summary>
      <returns>指示 <see cref="T:System.Windows.Controls.TextBlock" />的新范围 <see cref="T:System.Windows.Size" /> 结构。</returns>
      <param name="constraint">指定任何约束的 <see cref="T:System.Windows.Size" /> 结构。 <see cref="T:System.Windows.Controls.TextBlock" />的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)">
      <summary>调用，当从派生 <see cref="T:System.Windows.UIElement" /> 的子元素将其 <see cref="P:System.Windows.UIElement.DesiredSize" />。</summary>
      <param name="child">
        <see cref="P:System.Windows.UIElement.DesiredSize" /> 更改的子 <see cref="T:System.Windows.UIElement" /> 元素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.TextBlock" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.TextBlock" />的一 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>调用，当该值一个或多个承载的 依赖项属性 更改。</summary>
      <param name="e">关联的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)">
      <summary>呈现 <see cref="T:System.Windows.Controls.TextBlock" />的内容。</summary>
      <param name="ctx">呈现控件的 <see cref="T:System.Windows.Media.DrawingContext" /> 。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ctx" /> 是 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
      <summary>获取或设置一个空白空间粗细在内容区域的边界之间的值和 <see cref="T:System.Windows.Controls.TextBlock" />显示的内容。  </summary>
      <returns>指定数量填充的 <see cref="T:System.Windows.Thickness" /> 结构适用，在 与设备无关的像素。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" />设置为非确定的值。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>设置 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 附加属性 的值在指定的依赖项对象的。</summary>
      <param name="element">的依赖项对象设置 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 属性的值。</param>
      <param name="value">设置属性的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset">
      <summary>返回一个值是否应在 <see cref="T:System.Windows.Controls.TextBlock" /> 对象的序列化时序列化 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset" /> 属性;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值是否应在 <see cref="T:System.Windows.Controls.TextBlock" /> 对象的序列化时序列化 <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.TextBlock.Inlines" /> 属性;否则， false。</returns>
      <param name="manager">此对象的序列化服务 (iis) 管理器对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.ShouldSerializeText">
      <summary>返回一个值是否应在 <see cref="T:System.Windows.Controls.TextBlock" /> 对象的序列化时序列化 <see cref="P:System.Windows.Controls.TextBlock.Text" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.TextBlock.Text" /> 属性;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#IServiceProvider#GetService(System.Type)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <returns>类型 <paramref name="serviceType" />服务对象或 null ，如果没有类型 <paramref name="serviceType" />服务对象。 </returns>
      <param name="serviceType">指定类型对象获取的对象。 </param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#GetRectangles(System.Windows.ContentElement)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。使用类型安全的 <see cref="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)" /> 方法。</summary>
      <returns> 边框的只读集合指定的 <see cref="T:System.Windows.ContentElement" />的。</returns>
      <param name="child"> 可以生成并返回边框的集合 <see cref="T:System.Windows.ContentElement" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.System#Windows#IContentHost#HostedElements">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。使用类型安全的 <see cref="P:System.Windows.Controls.TextBlock.HostedElementsCore" /> 属性。</summary>
      <returns>内容宿主承载的元素。 </returns>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#InputHitTest(System.Windows.Point)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。使用类型安全的 <see cref="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)" /> 方法。</summary>
      <returns>命中的元素。 </returns>
      <param name="point">相对于内容宿主鼠标坐标。 </param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#IContentHost#OnChildDesiredSizeChanged(System.Windows.UIElement)">
      <summary>此方法支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。使用类型安全的 <see cref="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)" /> 方法。</summary>
      <param name="child">
        <see cref="P:System.Windows.UIElement.DesiredSize" /> 更改的子 <see cref="T:System.Windows.UIElement" /> 元素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value">添加的对象作为子级。 </param>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text">添加的字符串到对象。 </param>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" />的文本内容。  </summary>
      <returns>此 <see cref="T:System.Windows.Controls.TextBlock" />文本内容。请注意去除所有非文本内容，从而 <see cref="T:System.Windows.Controls.TextBlock" /> 内容的一个纯文本表示。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
      <summary>获取或设置一个文本内容的水平对齐的值。  </summary>
      <returns>指定预期对齐的某个 <see cref="T:System.Windows.TextAlignment" /> 值。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
      <summary>获取或设置包含效果应用于 <see cref="T:System.Windows.Controls.TextBlock" />文本的 <see cref="T:System.Windows.TextDecorationCollection" /> 。  </summary>
      <returns>包含文本修饰应用于此元素的 <see cref="T:System.Windows.TextDecorationCollection" /> 集合。默认值为 null (没有应用的文本修饰)。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextEffects">
      <summary>获取或设置效果应用于此元素的文本内容。  </summary>
      <returns>包含定义效果应用于 <see cref="T:System.Windows.Controls.TextBlock" />文本的一个或多 <see cref="T:System.Windows.Media.TextEffect" /> 对象的 <see cref="T:System.Windows.Media.TextEffectCollection" /> 。默认值为 null (未应用的)。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextEffects" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
      <summary>获取或设置文本修整行为时，使用内容溢出内容区域。  </summary>
      <returns>指定文本修整行为将使用的一个 <see cref="T:System.Windows.TextTrimming" /> 值。默认值为 <see cref="F:System.Windows.TextTrimming.None" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock" /> 应如何换行文本。  </summary>
      <returns>一个 <see cref="T:System.Windows.TextWrapping" /> 值。默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Typography">
      <summary>获取此元素内容的当前活动版式变体。</summary>
      <returns>指定当前活动版式变体的 <see cref="T:System.Windows.Documents.Typography" /> 对象。有关默认版式值列表，请参见 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.VisualChildrenCount">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 子级的数目 <see cref="T:System.Windows.Controls.TextBlock" />承载的。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" />承载的可视化子级的数目。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
      <summary>表示可用于显示或编辑非格式化文本的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TextBox" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretIndex">
      <summary>获取或设置插入符号的插入位置索引。</summary>
      <returns>插入符号的从零开始的插入位置索引。 </returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CharacterCasing">
      <summary>获取或设置字符如何在负载，在控件中手动输入文本框时。</summary>
      <returns>指定的某个 <see cref="T:System.Windows.Controls.CharacterCasing" /> 值的中手动输入的字符的括号。默认值为 <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CharacterCasingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Clear">
      <summary>清除文本框中的任何内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)">
      <summary>返回第一个字符的从零开始的字符的索引在指定的行。</summary>
      <returns>第一个字符的从零开始的索引。指定的行。</returns>
      <param name="lineIndex">检索初始字符的索引的行的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)">
      <summary>返回最接近指定的点字符的从零开始的索引。</summary>
      <returns>是最接近指定字符的索引点或 – 1，则不能找到了有效的索引。</returns>
      <param name="point">在 <see cref="T:System.Windows.Controls.TextBox" /> 坐标空间中的一个点可以返回索引。</param>
      <param name="snapToText"> 返回新索引的true ，如果在指定的字符点;返回的 false – 1; 如果在指定的字符点。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex">
      <summary>返回当前可见在文本框中的第一行的行索引。</summary>
      <returns>第一个可见行的从零开始的索引在文本框中。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex">
      <summary>返回当前可见在文本框中的最后一行的行索引。</summary>
      <returns>最后一个可见行的从零开始的索引在文本框中。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)">
      <summary>返回包含指定的字符索引的行的从零开始的行索引。</summary>
      <returns>包含指定的字符索引的行的从零开始的索引。</returns>
      <param name="charIndex">从零开始的字符索引来检索关联的行索引。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)">
      <summary>返回字符数指定的行。</summary>
      <returns>字符数指定的行。</returns>
      <param name="lineIndex">从零开始的行索引可以返回字符数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)">
      <summary>返回指定的行当前显示的文本。</summary>
      <returns>当前包含文本副本字符串显示在指定的行。</returns>
      <param name="lineIndex">从零开始的行索引来检索当前显示的文本。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>返回下拼写错误的开头字符的索引在文本框的内容。</summary>
      <returns>下拼写错误的开始处字符的索引在文本框的内容的或 – 1，则下拼写错误不存在。</returns>
      <param name="charIndex">指示的从零开始的字符的索引一个位置搜索下拼写错误。</param>
      <param name="direction">指定搜索方向下拼写错误，开始在指定的 <paramref name="charIndex" />的某个 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>返回字符的边缘的矩形位于指定索引处。</summary>
      <returns>字符的边缘的一个矩形在指定的字符索引的或 <see cref="P:System.Windows.Rect.Empty" /> ，如果一个边框无法确定的。</returns>
      <param name="charIndex">字符从零开始的字符索引来检索矩形。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>返回字符的前导或边缘的矩形位于指定索引处。</summary>
      <returns>字符的边缘的一个矩形在指定的字符索引的或 <see cref="P:System.Windows.Rect.Empty" /> ，如果一个边框无法确定的。</returns>
      <param name="charIndex">字符从零开始的字符索引来检索矩形。</param>
      <param name="trailingEdge">true 获取字符的边缘; false 获取字符的边缘。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" /> 与该目录的长度为负或大。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Controls.SpellingError" /> 对象与所有拼写错误在指定的字符的索引。</summary>
      <returns>，如果拼写错误不存在指定的字符，包含拼写错误的详细信息 <see cref="T:System.Windows.Controls.SpellingError" /> 对象中发现了 <paramref name="charIndex" />表示的字符或 null 。</returns>
      <param name="charIndex">一个位置的从零开始的字符的索引在检查的内容的拼写错误。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)">
      <summary>返回由指定的字符的所有拼写错误的长度。</summary>
      <returns>包含字符所有拼写错误的长度由 charIndex 或 0 指定了，如果指定的字符不是拼写错误的一部分。</returns>
      <param name="charIndex">一个位置的从零开始的字符的索引在检查的内容的拼写错误。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)">
      <summary>返回由指定字符的所有拼写错误的开头字符的索引。</summary>
      <returns>包含字符的所有拼写错误的开头字符的索引。 <paramref name="charIndex" />指定了、 – 1; 如果指定的字符不是拼写错误的一部分。</returns>
      <param name="charIndex">一个位置的从零开始的字符的索引在检查的内容的拼写错误。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineCount">
      <summary>获取行的总数在文本框中。</summary>
      <returns>行的总数在文本框中或 – 1，如果格式信息不可用。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LogicalChildren">
      <summary>获取 <see cref="T:System.Windows.Controls.TextBox" />的逻辑种属性元素的枚举数。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBox" />的逻辑种属性元素的枚举数。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
      <summary>获取或设置可中手动输入文本框的最大字符数。</summary>
      <returns>可以手动输入文本框的最大字符数。默认值为 0，指示没有限制。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLines">
      <summary>获取或设置可见的行的最大数目。</summary>
      <returns>可见的行的最大数目。默认值为 <see cref="F:System.Int32.MaxValue" />。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 比 <see cref="P:System.Windows.Controls.TextBox.MinLines" />小于。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)">
      <summary>调整文本框适合其内容。</summary>
      <returns>指示文本框的新范围 <see cref="T:System.Windows.Size" /> 结构。</returns>
      <param name="constraint">在文本框大小指定绑定的 <see cref="T:System.Windows.Size" /> 结构。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MinLines">
      <summary>获取或设置可见的行的最小值。</summary>
      <returns>可见的行的最小值。默认值为 1。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 比 <see cref="P:System.Windows.Controls.TextBox.MaxLines" />大。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MinLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
      <summary>创建并返回文本框中 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>文本框中 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>调用，当元素存在的一个或多 依赖项属性 有自己的已更改的有效值。</summary>
      <param name="e">关联的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)">
      <summary>移动行中指定的行索引到视图。</summary>
      <param name="lineIndex">行的从零开始的索引行滚动到视图中。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>选择文本的范围在文本框中。</summary>
      <param name="start">第一个字符的从零开始的字符的索引在选定内容。</param>
      <param name="length">选择的长度，在字符。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> 或 <paramref name="length" /> 为负数。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>获取或设置当前的选定内容在文本框中。</summary>
      <returns>在文本框中的当前选定的文本。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>获取或设置一个字符数在当前选定的值在文本框中。</summary>
      <returns>字符数在当前选定的在文本框中。默认值为 0。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> 设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>获取或设置当前选择的开头的字符索引。</summary>
      <returns>当前选择的开头字符的索引。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> 设置为负值。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值是否应在 <see cref="T:System.Windows.Controls.TextBox" /> 对象的序列化时序列化 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的有效值。</summary>
      <returns>true ，如果序列化 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性;否则， false。</returns>
      <param name="manager">此对象的序列化服务 (iis) 管理器对象。</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>在所有情况下引发异常。</summary>
      <param name="value">添加的对象作为子级。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 是 null。</exception>
      <exception cref="T:System.InvalidOperationException">其他情况下。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>添加节点的文本内容添加到对象。 </summary>
      <param name="text">添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>获取或设置文本框的文本内容。</summary>
      <returns>包含文本框的文本内容的字符串。默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>获取或设置文本框的内容的水平对齐。 </summary>
      <returns>指定文本框的内容的水平对齐的某个 <see cref="T:System.Windows.TextAlignment" /> 值。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextDecorations">
      <summary>获取文本修饰应用于文本框。</summary>
      <returns>包含文本修饰应用于文本框中 <see cref="T:System.Windows.TextDecorationCollection" /> 集合。默认值为 null (没有应用的文本修饰)。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>获取或设置文本框应如何换行文本。</summary>
      <returns>指示的某个 <see cref="T:System.Windows.TextWrapping" /> 值 " 文本框应如何换行文本。默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Typography">
      <summary>获取文本框的文本内容的当前活动版式变体。</summary>
      <returns>指定当前活动版式变体的 <see cref="T:System.Windows.Documents.Typography" /> 对象。有关默认版式值列表，请参见 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChange">
      <summary>包含有关在 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件发生更改的信息。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextChange.AddedLength">
      <summary>获取或设置添加到了控件的符号的数目。</summary>
      <returns>已添加到控件符号的数目。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.Offset">
      <summary>获取或设置发生更改的位置。</summary>
      <returns>发生更改的位置。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextChange.RemovedLength">
      <summary>获取或设置从控件中移除了符号的数目。</summary>
      <returns>从控件中移除了符号的数目。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)">
      <summary>初始化 <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> 类的新实例，则使用指定的事件 ID 和移除事件。     </summary>
      <param name="id">事件 标识符 (ID)。</param>
      <param name="action">文本更改导致的 <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})">
      <summary>使用指定的事件 ID， <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> 初始化类的新实例中，在中，取消事件和文本更改。 </summary>
      <param name="id">事件 标识符 (ID)。</param>
      <param name="action">文本更改导致的 <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> 。</param>
      <param name="changes">在此事件过程中，发生的更改。有关更多信息，请参见 <see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />。</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.Changes">
      <summary>获取包含有关更改的信息。对象的集合。</summary>
      <returns>包含有关更改的信息。对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行适当的类型强制转换通知 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 事件的类型安全的 <see cref="T:System.Windows.Controls.TextChangedEventHandler" /> 委托。</summary>
      <param name="genericHandler">调用的处理程序。</param>
      <param name="genericTarget">事件路由的当前对象。</param>
    </member>
    <member name="P:System.Windows.Controls.TextChangedEventArgs.UndoAction">
      <summary>获取撤消堆栈是如何由该文本更改导致的或影响的 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.UndoAction" /> 适合于此文本更改。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>表示要处理 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />的方法  路由事件。</summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.TextSearch">
      <summary>使用户可以在字符串类型的标题设置的快速访问项。 </summary>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
      <summary>返回字符串为标识所指定的项目。</summary>
      <returns>一个指定项的字符串。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
      <summary>返回标识在指定元素的集合的项目属性的名称。 </summary>
      <returns>标识该项目向用户属性的名称。</returns>
      <param name="element">读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
      <summary> 写入指定元素的 <see cref="P:System.Windows.Controls.TextSearch.Text" /> 附加属性 值。 </summary>
      <param name="element">属性值写入的元素。</param>
      <param name="text">标识该项的字符串。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
      <summary> 写入指定元素的 <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 附加属性 。 </summary>
      <param name="element">属性值写入的元素。</param>
      <param name="path">标识一个项目属性的名称。</param>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.Text">
      <summary>获取或设置标识控件的集合中的项的字符串。</summary>
      <returns>标识该项目给用户的文本。默认值为空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.TextPath">
      <summary>获取或设置标识到控件的集合中每个项目项的属性的名称。</summary>
      <returns>包含文本识别该项目向用户属性的名称。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextSearch.TextPath" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextSearch.TextPath" />的附加属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TextSearch.Text" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextSearch.Text" />的附加属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolBar">
      <summary>为命令或一组控件提供容器。  </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ToolBar" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Band">
      <summary>获取或设置一个值工具栏应位于 <see cref="T:System.Windows.Controls.ToolBarTray" />。  </summary>
      <returns>工具栏确定 <see cref="T:System.Windows.Controls.ToolBarTray" /> 的条带。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.BandIndex">
      <summary>获取或设置一个工具栏位置在带区的条带索引号。  </summary>
      <returns>工具栏的位置。 <see cref="T:System.Windows.Controls.ToolBarTray" />的条带。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.BandIndex" />的依赖项属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.BandProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.Band" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.Band" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ButtonStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于工具栏中的按钮。</summary>
      <returns>表示按钮的默认样式工具栏上的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.ToolBar" />的复选框。</summary>
      <returns>表示复选框的默认样式。 <see cref="T:System.Windows.Controls.ToolBar" />的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.ToolBar" />的组合框。</summary>
      <returns>表示组合框的默认样式工具栏上的资源键。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)">
      <summary> 读取 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 属性的值从指定的元素。 </summary>
      <returns>属性的值。</returns>
      <param name="element">的元素读取属性的。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)">
      <summary>读取 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 属性的值从指定的元素。 </summary>
      <returns>属性的值。</returns>
      <param name="element">的元素读取属性的。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.HasOverflowItems">
      <summary>获取一个值是否具有工具栏不可见项。  </summary>
      <returns>true ，如果具有未显示在工具栏的项目;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowItem">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.ToolBar" /> 项目是否溢出项。</summary>
      <returns>true ，如果项目是溢出项;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.IsOverflowOpen">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ToolBar" /> 溢出区域当前是否可见。  </summary>
      <returns>true ，如果溢出区域可见;否则， false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)">
      <summary> 重新度量 <see cref="T:System.Windows.Controls.ToolBar" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" />的大小。</returns>
      <param name="constraint">测量约束。<see cref="T:System.Windows.Controls.ToolBar" /> 大于约束不能返回的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.MenuStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.ToolBar" />的菜单。</summary>
      <returns>表示菜单的默认样式工具栏上的资源键。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnCreateAutomationPeer">
      <summary>作为 WPF 基础结构的一部分，对此控件提供了一个适当的 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> 实现，。</summary>
      <returns>类型特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary> 调用时， <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性更改。 </summary>
      <param name="e">
        <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件提供类处理的键，以在 <see cref="T:System.Windows.Controls.ToolBar" />项目时按下。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> 的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 路由事件提供类处理，当 <see cref="T:System.Windows.Controls.ToolBar" /> 失去鼠标捕获。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 的事件的参数。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.Orientation">
      <summary> 获取 <see cref="T:System.Windows.Controls.ToolBar" />的方向。  </summary>
      <returns>工具栏方向。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OrientationProperty">
      <summary>标识 <see cref="T:System.Windows.Controls.Orientation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.OverflowMode">
      <summary> 获取或设置一个值时在溢出面板应将项目而不是在主面板。</summary>
      <returns>溢出模式;默认值为 <see cref="F:System.Windows.Controls.OverflowMode.AsNeeded" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBar.OverflowModeProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备就绪以指定的元素显示了指定的项目。 </summary>
      <param name="element">将显示项目的元素。</param>
      <param name="item">显示的项。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于工具栏上的单选按钮。</summary>
      <returns>表示单选按钮的默认样式工具栏上的资源键。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.SeparatorStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.ToolBar" />的分隔符。</summary>
      <returns>表示分隔符的默认样式工具栏上的资源键。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)">
      <summary>编写 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 属性的值设置为指定的元素。 </summary>
      <param name="element">写入的元素的属性。</param>
      <param name="mode">设置的属性值。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.TextBoxStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.ToolBar" />的文本框。</summary>
      <returns>表示文本框的默认样式工具栏上的资源键</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey">
      <summary>获取 <see cref="T:System.Windows.Style" /> 适用于 <see cref="T:System.Windows.Controls.ToolBar" />的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 控件。</summary>
      <returns>表示切换按钮的默认样式工具栏上的资源键。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolBarTray">
      <summary>表示该容器的处理 <see cref="T:System.Windows.Controls.ToolBar" />的格式。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ToolBarTray" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.ArrangeOverride(System.Windows.Size)">
      <summary> 调用位置和大小调整其 <see cref="T:System.Windows.Controls.ToolBar" /> 子级。 </summary>
      <returns>控件的大小。</returns>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.ToolBarTray" /> 假定确定其子级大小。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Background">
      <summary>获取或设置画笔为 <see cref="T:System.Windows.Controls.ToolBarTray" />的背景色使用。   </summary>
      <returns>使用的画笔为 <see cref="T:System.Windows.Controls.ToolBarTray" />的背景色。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBarTray.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBarTray.Background" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetIsLocked(System.Windows.DependencyObject)">
      <summary>读取 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 属性的值从指定的元素。 </summary>
      <returns>true ，如果工具栏无法移动工具栏上的磁盘中;否则， false。默认值为 false。</returns>
      <param name="element">的元素读取属性的。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.GetVisualChild(System.Int32)">
      <summary>获取可见子级的索引号。</summary>
      <returns>显示子项的索引号。</returns>
      <param name="index">可视化子级的索引。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.IsLocked">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.ToolBar" /> 是否能将 <see cref="T:System.Windows.Controls.ToolBarTray" />中。   </summary>
      <returns>true ，如果工具栏无法移动工具栏上的磁盘中;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.IsLockedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.LogicalChildren">
      <summary>具有枚举数 <see cref="T:System.Windows.Controls.ToolBarTray" />的逻辑种属性元素。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBarTray" /> 元素的子级的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.MeasureOverride(System.Windows.Size)">
      <summary>调用重新度量 <see cref="T:System.Windows.Controls.ToolBarTray" />。 </summary>
      <returns>控件的大小。</returns>
      <param name="constraint">测量约束; <see cref="T:System.Windows.Controls.ToolBarTray" /> 大于约束不能返回的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.OnRender(System.Windows.Media.DrawingContext)">
      <summary>调用时， <see cref="T:System.Windows.Controls.ToolBarTray" /> 是显示的保证使用的绘图上下文 (DC)呈现 <see cref="T:System.Windows.Controls.ToolBarTray" />。</summary>
      <param name="dc">使用绘图上下文呈现 <see cref="T:System.Windows.Controls.ToolBarTray" />。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.Orientation">
      <summary>指定 <see cref="T:System.Windows.Controls.ToolBarTray" />的方向。   </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Orientation" /> 值。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolBarTray.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolBarTray.Orientation" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.SetIsLocked(System.Windows.DependencyObject,System.Boolean)">
      <summary>编写 <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked" /> 属性的值设置为指定的元素。 </summary>
      <param name="element">写入的元素的属性。</param>
      <param name="value">设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="value">  添加的对象作为子级。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolBarTray.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。</summary>
      <param name="text">  添加的字符串到对象。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.ToolBars">
      <summary>获取 <see cref="T:System.Windows.Controls.ToolBar" /> 元素的集合。 <see cref="T:System.Windows.Controls.ToolBarTray" />的。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolBar" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolBarTray.VisualChildrenCount">
      <summary>获取当前可见的子级的数目。</summary>
      <returns>可见 <see cref="T:System.Windows.Controls.ToolBar" /> 对象数。 <see cref="T:System.Windows.Controls.ToolBarTray" />的。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>表示创建弹出项的控件，该弹出项可显示界面中元素的相关信息。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ToolTip" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>在 <see cref="T:System.Windows.Controls.ToolTip" /> 关闭并不再可见时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.ClosedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ToolTip.Closed" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ToolTip.Closed" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback">
      <summary>获取或设置用于定位 <see cref="T:System.Windows.Controls.ToolTip" /> 的委托处理程序方法。</summary>
      <returns>为 <see cref="T:System.Windows.Controls.ToolTip" /> 提供位置信息的 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 委托方法。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.CustomPopupPlacementCallbackProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HasDropShadow">
      <summary>获取或设置一个指示控件是否有投影的值。</summary>
      <returns>如果控件有投影，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>获取或设置目标原点与弹出项对齐点之间的水平距离。</summary>
      <returns>目标原点与弹出项对齐点之间的水平距离。有关目标原点和弹出项对齐点的信息，请参见 Popup 放置行为。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>获取或设置一个表示 <see cref="T:System.Windows.Controls.ToolTip" /> 是否可见的值。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ToolTip" /> 可见，为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnClosed(System.Windows.RoutedEventArgs)">
      <summary>响应 <see cref="E:System.Windows.Controls.ToolTip.Closed" /> 事件。</summary>
      <param name="e">事件信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnContentChanged(System.Object,System.Object)">
      <summary>当 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性更改时调用。</summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的旧值。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的新 <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnOpened(System.Windows.RoutedEventArgs)">
      <summary>响应 <see cref="E:System.Windows.Controls.ToolTip.Opened" /> 事件。</summary>
      <param name="e">事件信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>响应 <see cref="T:System.Windows.Controls.ToolTip" /> 的可视父级的更改。</summary>
      <param name="oldParent">以前的可视父级。</param>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>在 <see cref="T:System.Windows.Controls.ToolTip" /> 变得可见时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.OpenedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.ToolTip.Opened" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.ToolTip.Opened" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ToolTip" /> 控件打开时的方向，并指定 <see cref="T:System.Windows.Controls.ToolTip" /> 控件在与屏幕边界重叠时的行为。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举值，用于确定 <see cref="T:System.Windows.Controls.ToolTip" /> 控件打开时的方向，并指定此控件如何与屏幕边界交互。默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementRectangle">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ToolTip" /> 控件打开时所在位置与之相关的矩形区域。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> 结构，该结构定义用于定位 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的矩形。默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" />，当它打开时相对于它确定 <see cref="T:System.Windows.Controls.ToolTip" /> 的位置。</summary>
      <returns>作为 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的逻辑父级的 <see cref="T:System.Windows.UIElement" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.StaysOpen">
      <summary>获取或设置一个值，该值指示打开的 <see cref="T:System.Windows.Controls.ToolTip" /> 是否一直保持打开状态，直到用户在鼠标不在 <see cref="T:System.Windows.Controls.ToolTip" /> 上时单击鼠标。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.ToolTip" /> 一直保持打开状态，直到用户在 <see cref="T:System.Windows.Controls.ToolTip" /> 之外单击鼠标按钮关闭它，则为 true；否则为 false。默认值为 true。</returns>
      <exception cref="T:System.NotSupportedException">当没有打开工具提示且 <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 设置为 false 时发生。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.StaysOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.StaysOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>获取或设置目标原点与弹出项对齐点之间的垂直距离。</summary>
      <returns>目标原点与弹出项对齐点之间的垂直距离。有关目标原点和弹出项对齐点的信息，请参见 Popup 放置行为。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventArgs">
      <summary>为发生的事件提供事件信息，这些工具提示打开或关闭。</summary>
    </member>
    <member name="T:System.Windows.Controls.ToolTipEventHandler">
      <summary>表示要处理 路由事件 执行的方法，如果工具提示打开和关闭时。</summary>
      <param name="sender">事件处理程序附加的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>委托提供属性和事件来控制工具提示显示和行为的服务。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>将该 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序中添加。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.AddToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>将该 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序中添加。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.BetweenShowDelay">
      <summary>获取或设置第二出现工具提示，而不会出现延迟两种类型的工具提示之间显示的最长时间。</summary>
      <returns>以毫秒表示延时的整数值。默认值为 100 毫秒。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 属性的值大于零 (0) 0) 小于。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.BetweenShowDelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetBetweenShowDelay(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHasDropShadow(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 附加属性 的值对象的。 </summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetHorizontalOffset(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetInitialShowDelay(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsEnabled(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetIsOpen(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementRectangle(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 附加属性 的值对象的。 </summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowDuration(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 附加属性 的值对象的。 </summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetShowOnDisabled(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 附加属性 的值对象的。 </summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetVerticalOffset(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 附加属性 的值对象的。</summary>
      <returns>对象的 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 属性值。</returns>
      <param name="element">读取属性值的对象。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HasDropShadow">
      <summary>获取或设置工具提示是否显示投影效果。</summary>
      <returns>true ，如果投影效果显示与 tooltip;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.HorizontalOffset">
      <summary>获取或设置从的工具提示指定由 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 和 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 属性区域左边的偏移量。</summary>
      <returns>指定图边距的值。默认值为零 (0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.InitialShowDelay">
      <summary>，在工具提示中打开之前，获取或设置时间长度。 </summary>
      <returns>以毫秒表示显示延时的整数值。默认值为 <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> 毫秒。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 属性的值大于零 (0) 0) 小于。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.InitialShowDelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsEnabled">
      <summary>获取或设置工具提示是否显示。</summary>
      <returns>true ，如果工具提示显示当用户悬停在定义工具提示的对象的鼠标指针;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性。 </summary>
      <returns>标识 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" /> 附加属性。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.IsOpen">
      <summary>获取工具提示当前是否可见。 </summary>
      <returns>true ，如果工具提示是可见的，否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.IsOpen" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>获取或设置工具提示的方向，当打开时，并指定工具提示的行为，则重叠屏幕边界。</summary>
      <returns>定位工具提示的方向的 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举值，则打开，并且，指定工具提示与屏幕边界进行交互。默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.Placement" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.Placement" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementRectangle">
      <summary>获取或设置工具提示将相对于的矩形区域。</summary>
      <returns>定义矩形来确定 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的 <see cref="T:System.Windows.Rect" /> 结构。默认值为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>获取或设置工具提示将相对于的对象。</summary>
      <returns>是 <see cref="T:System.Windows.Controls.ToolTip" /> 控件的逻辑父级的 <see cref="T:System.Windows.UIElement" /> 。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipClosingHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>移除该 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序将移除。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.RemoveToolTipOpeningHandler(System.Windows.DependencyObject,System.Windows.Controls.ToolTipEventHandler)">
      <summary>移除该 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 附加事件的处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 。</param>
      <param name="handler">事件处理程序将移除。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetBetweenShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow" />附加属性 的值对象的。</summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset" />附加属性 的值对象的。</summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" />附加属性 的值对象的。</summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.Placement" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" />附加属性 的值对象的。 </summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" />附加属性 的值对象的。</summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" />附加属性 的值对象的。</summary>
      <param name="element">该附加属性编写的对象。</param>
      <param name="value">所需的值。</param>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowDuration">
      <summary>获取或设置工具提示保持可见的时间。</summary>
      <returns>以毫秒表示显示时间的整数值。默认值为 5000 毫秒。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay" /> 属性的值大于零 (0) 0) 小于。</exception>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowDurationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ShowOnDisabled">
      <summary>获取或设置工具提示是否为未启用的对象显示。</summary>
      <returns>true ，如果出现工具提示对象未启用;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ShowOnDisabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>获取或设置工具提示的内容。</summary>
      <returns>定义工具提示的内容的 <see cref="T:System.Windows.DependencyObject" /> 元素。默认值为 null。</returns>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipClosing">
      <summary>，当 <see cref="T:System.Windows.Controls.ToolTip" /> 关闭，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent">
      <summary>标识由对象公开使用 <see cref="T:System.Windows.Controls.ToolTipService" /> 服务显示工具提示的 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipClosing" /> 事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.ToolTipService.ToolTipOpening">
      <summary>，当 <see cref="T:System.Windows.Controls.ToolTip" /> 打开，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent">
      <summary>标识由对象公开使用 <see cref="T:System.Windows.Controls.ToolTipService" /> 服务显示工具提示的 <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.ToolTipService.ToolTipOpening" /> 事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.VerticalOffset">
      <summary>从的工具提示指定由 <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle" /> 和 <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget" /> 属性区域的顶部获取或设置该距离。</summary>
      <returns>指定一个垂直距离的值。默认值为零 (0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset" />的附加属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.TreeView">
      <summary>表示显示在树结构中分层数据具有项目可展开和折叠的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TreeView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)">
      <summary>展开指定的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件及其所有子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 元素。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 及其所有子元素已经展开;否则， false。</returns>
      <param name="container">扩展 <see cref="T:System.Windows.Controls.TreeViewItem" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
      <summary>创建 <see cref="T:System.Windows.Controls.TreeViewItem" /> 使用显示内容。</summary>
      <returns>使用的新 <see cref="T:System.Windows.Controls.TreeViewItem" /> 作为容器的内容。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.HandlesScrolling">
      <summary>获取 <see cref="T:System.Windows.Controls.TreeView" /> 是否可以移动。</summary>
      <returns>，因为该控件具有 <see cref="T:System.Windows.Controls.ScrollViewer" /> 在其样式，始终返回 true 。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定的项目是自己的容器也可以是自己的容器。</summary>
      <returns>true ，如果 <paramref name="item" /> 是 <see cref="T:System.Windows.Controls.TreeViewItem" />;否则， false。</returns>
      <param name="item">计算的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
      <summary>定义 <see cref="T:System.Windows.Controls.TreeView" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeView" /> 控件的 <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>引发该 <see cref="E:System.Windows.UIElement.GotFocus" /> 路由事件。 </summary>
      <param name="e">数据的事件。 </param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>，当键盘焦点。 <see cref="T:System.Windows.Controls.TreeView" />时，更改为 <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>为生成的 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供类处理，当在 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合中的更改。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>为 <see cref="T:System.Windows.Controls.TreeView" />的 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>，当 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 属性值更改时，将引发 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 事件。</summary>
      <param name="e">提供以前选择的项以及 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 事件当前选定的项目。</param>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedItem">
      <summary>获取在 <see cref="T:System.Windows.Controls.TreeView" />中的选定项。  </summary>
      <returns>在 <see cref="T:System.Windows.Controls.TreeView" />的选定的对象或 null ，如果项未被选定。默认值为 null。</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
      <summary>，当 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 更改，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" />的路由事件标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValue">
      <summary>获取表示 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 指定为 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />属性的值。   </summary>
      <returns>由 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 指定 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />属性的值或 null ，如果项未被选定。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
      <summary>获取或设置用于获取 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /><see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 在 <see cref="T:System.Windows.Controls.TreeView" />的路径。  </summary>
      <returns>包含路径用于获取 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />的字符串。默认值为 String.Empty。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />的依赖项属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 依赖项属性。 </summary>
      <returns>
        <see cref="F:System.Windows.Controls.TreeView.SelectedValuePathProperty" />的依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.TreeViewItem">
      <summary>实现 <see cref="T:System.Windows.Controls.TreeView" /> 控件中的可选择项。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.TreeViewItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的内容。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> 使用的实际大小。</returns>
      <param name="arrangeSize">父级中 <see cref="T:System.Windows.Controls.TreeViewItem" /> 应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
      <summary>当 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从 true 更改为 false 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.CollapsedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> 路由事件。</summary>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Expanded">
      <summary>当 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从 false 更改为 true 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.ExpandedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> 路由事件。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.ExpandSubtree">
      <summary>展开 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件及其所有子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 元素。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
      <summary>创建新的 <see cref="T:System.Windows.Controls.TreeViewItem" /> 以用于显示对象。</summary>
      <returns>新的 <see cref="T:System.Windows.Controls.TreeViewItem" />，以用于显示对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TreeViewItem" /> 中的嵌套项是处于展开状态还是折叠状态。</summary>
      <returns>如果可以看到 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的嵌套项，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定对象是否为 <see cref="T:System.Windows.Controls.TreeViewItem" />。</summary>
      <returns>如果 <paramref name="item" /> 为 <see cref="T:System.Windows.Controls.TreeViewItem" />，则为 true；否则为 false。</returns>
      <param name="item">要计算的对象。</param>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.TreeViewItem" /> 控件是否处于选定状态。</summary>
      <returns>如果已选定 <see cref="T:System.Windows.Controls.TreeViewItem" />，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.TreeViewItem" /> 是否具有键盘焦点。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.TreeViewItem" /> 具有键盘焦点，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive" /> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从 true 更改为 false 时，引发 <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed" /> 事件。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
      <summary>定义用于 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>用于 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded" /> 属性从 false 更改为 true 时，引发 <see cref="E:System.Windows.Controls.TreeViewItem.Expanded" /> 事件。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.GotFocus" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>提供在 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合更改时发生的 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>提供用于 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>提供用于 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件的类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性从 false 更改为 true 时，引发 <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> 路由事件。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性从 true 更改为 false 时，引发 <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> 路由事件。</summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>响应 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的可视父级的更改。</summary>
      <param name="oldParent">以前的可视父级。</param>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Selected">
      <summary>当 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性从 false 更改为 true 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.SelectedEvent">
      <summary>由 <see cref="E:System.Windows.Controls.TreeViewItem.Selected" /> 路由事件标识。</summary>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#Constraints">
      <summary>获取或设置表示 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的视区和缓存大小的对象。</summary>
      <returns>表示 <see cref="T:System.Windows.Controls.TreeViewItem" /> 视区和缓存大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#HeaderDesiredSizes">
      <summary>获取像素中和逻辑单元中表示 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 所需大小的对象。</summary>
      <returns>表示以像素和以逻辑单元表示 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 所需大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#InBackgroundLayout">
      <summary>获取指示控件的布局传递是否出现在较低优先级中的值。</summary>
      <returns>如果控件的布局通行出现在较低优先级，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemDesiredSizes">
      <summary>获取或设置表示控件项的所需大小（像素和逻辑单位）的对象。</summary>
      <returns>表示以像素和以逻辑单元表示控件项所需大小的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#ItemsHost">
      <summary>获取 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 显示的 <see cref="T:System.Windows.Controls.Panel" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 的 <see cref="T:System.Windows.Controls.Panel" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.TreeViewItem.System#Windows#Controls#Primitives#IHierarchicalVirtualizationAndScrollInfo#MustDisableVirtualization">
      <summary>获取或设置一个值，该值指示所属 <see cref="T:System.Windows.Controls.ItemsControl" /> 是否应虚拟化。</summary>
      <returns>如果拥有的 <see cref="T:System.Windows.Controls.ItemsControl" /> 应虚拟化其项，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Windows.Controls.TreeViewItem.Unselected">
      <summary>当 <see cref="T:System.Windows.Controls.TreeViewItem" /> 的 <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected" /> 属性从 true 更改为 false 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.TreeViewItem.UnselectedEvent">
      <summary>由 <see cref="E:System.Windows.Controls.TreeViewItem.Unselected" /> 路由事件标识。</summary>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>表示 <see cref="T:System.Windows.UIElement" /> 子元素的有序集合。 </summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)">
      <summary>初始化 <see cref="T:System.Windows.Controls.UIElementCollection" /> 类的新实例。 </summary>
      <param name="visualParent">集合的 <see cref="T:System.Windows.UIElement" /> 父级。</param>
      <param name="logicalParent">元素的逻辑父级集合中的。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)">
      <summary>添加一个指定的元素。 <see cref="T:System.Windows.Controls.UIElementCollection" />。 </summary>
      <returns>添加了元素的索引位置。</returns>
      <param name="element">添加的 <see cref="T:System.Windows.UIElement" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Capacity">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.UIElementCollection" /> 可以包含元素的数目。 </summary>
      <returns>集合可以包含元素的总数。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Clear">
      <summary>从 <see cref="T:System.Windows.Controls.UIElementCollection" />移除所有元素。 </summary>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)">
      <summary>，当元素出 <see cref="T:System.Windows.Controls.UIElementCollection" />时，清除逻辑父级元素。 </summary>
      <param name="element">清除逻辑父级的 <see cref="T:System.Windows.UIElement" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)">
      <summary>确定指定的一个组件。 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.UIElement" /> 在集合中找到;否则， false。</returns>
      <param name="element">查找的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>将 <see cref="T:System.Windows.Controls.UIElementCollection" /> 的 <see cref="T:System.Windows.UIElement" /> 到数组，开始使用指定的索引位置。 </summary>
      <param name="array">集合中复制的数组。</param>
      <param name="index">首先复制元素的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Controls.UIElementCollection" /> 的 <see cref="T:System.Windows.UIElement" /> 到数组，开始使用指定的索引位置。 </summary>
      <param name="array">数组 <see cref="T:System.Windows.UIElement" /> 对象。</param>
      <param name="index">首先复制元素的索引位置。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Count">
      <summary>获取元素的实际数目集合中的。 </summary>
      <returns>元素的实际数目集合中的。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.GetEnumerator">
      <summary>返回可重复 <see cref="T:System.Windows.Controls.UIElementCollection" />的枚举器。 </summary>
      <returns>可以列出此集合的成员的 <see cref="T:System.Collections.IEnumerator" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)">
      <summary>返回指定元素的索引位置。 <see cref="T:System.Windows.Controls.UIElementCollection" />。 </summary>
      <returns>元素的索引位置。-1，如果元素不在集合。</returns>
      <param name="element">需要索引位置的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)">
      <summary>将元素插入到 <see cref="T:System.Windows.Controls.UIElementCollection" /> 中指定的索引位置。 </summary>
      <param name="index">索引位置要插入元素的位置。</param>
      <param name="element">要插入的元素。 <see cref="T:System.Windows.Controls.UIElementCollection" />中。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.IsSynchronized">
      <summary>获取一个值为 <see cref="T:System.Collections.ICollection" /> 接口的访问是否同步 (线程安全)。</summary>
      <returns>true ，如果对集合的访问同步;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Windows.UIElement" /> 存储在 <see cref="T:System.Windows.Controls.UIElementCollection" />的从零开始的索引位置。 </summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> 在指定的 <paramref name="index" /> 位置。</returns>
      <param name="index">
        <see cref="T:System.Windows.UIElement" />的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)">
      <summary>从 <see cref="T:System.Windows.Controls.UIElementCollection" />中移除指定的元素。 </summary>
      <param name="element">要移除的元素从集合。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)">
      <summary>移除 <see cref="T:System.Windows.UIElement" /> 位于指定索引处。 </summary>
      <param name="index">要移除 <see cref="T:System.Windows.UIElement" /> 的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从 <see cref="T:System.Windows.Controls.UIElementCollection" />移除元素的范围。 </summary>
      <param name="index">删除开始元素的索引位置。</param>
      <param name="count">要移除的元素的数目。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)">
      <summary>设置一个元素的逻辑父级在 <see cref="T:System.Windows.Controls.UIElementCollection" />的。 </summary>
      <param name="element">逻辑父级设置的 <see cref="T:System.Windows.UIElement" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 接口的对象。 </summary>
      <returns>可以使用来同步对 <see cref="T:System.Collections.ICollection" /> 接口访问的<see cref="T:System.Object" /> 。</returns>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Add(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>新元素插入的位置。</returns>
      <param name="value">添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Contains(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>true ，如果对象在列表中找到;否则， false。</returns>
      <param name="value">位于的对象的列表。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>
        <paramref name="value" /> 索引，如果找到在列表中;否则， -1。 </returns>
      <param name="value">位于的对象的列表。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">
        <paramref name="value" /> 应插入的从零开始的索引。 </param>
      <param name="value">要插入的对象到列表。</param>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsFixedSize">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>true ，如果列表具有固定大小;否则， false。 </returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>true ，如果列表是只读的;否则， false。 </returns>
    </member>
    <member name="P:System.Windows.Controls.UIElementCollection.System#Collections#IList#Item(System.Int32)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">将元素获取的从零开始的索引或。</param>
    </member>
    <member name="M:System.Windows.Controls.UIElementCollection.System#Collections#IList#Remove(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应直接从代码使用。有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">移除的对象从列表。</param>
    </member>
    <member name="T:System.Windows.Controls.UndoAction">
      <summary> 生成的撤消堆栈以及如何受文本更改的影响。 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Clear">
      <summary> 此更改将清除撤消堆栈 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Create">
      <summary> 此更改将创建一个新抵消单位 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Merge">
      <summary> 此更改将合并到以前的抵消单位 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.None">
      <summary> 此更改不会影响撤消堆栈 </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Redo">
      <summary> 此更改是调用的结果传递到 Redo() </summary>
    </member>
    <member name="F:System.Windows.Controls.UndoAction.Undo">
      <summary> 此更改是调用的结果传递到 Undo() </summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>提供了一种简单的方法创建控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.UserControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.UserControl" />的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.UserControl" />的新 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> 。</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>提供了支持数据验证的方法和 附加属性 。</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>添加 <see cref="E:System.Windows.Controls.Validation.Error" />的附加事件 一个事件处理程序添加到指定的对象。</summary>
      <param name="element">添加 <paramref name="handler" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <param name="handler">添加的处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)">
      <summary>从指定的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象中移除所有 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</summary>
      <param name="bindingExpression">启用有效的对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="bindingExpression" /> 是 null。</exception>
    </member>
    <member name="E:System.Windows.Controls.Validation.Error">
      <summary>用于 <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> 值的绑定只，则在绑定元素遇到验证错误，但是，设置为 true。</summary>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Validation.Error" />的附加事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>获取所有活动 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合将在绑定元素的。</summary>
      <returns>所有活动 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的只读集合绑定元素的。默认值为空集合。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.Errors" />的附加属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ErrorTemplate">
      <summary>在装饰器层获取或设置用于的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 生成验证错误反馈。</summary>
      <returns>默认模板位于装饰元素周围定义一个红色边框。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 附加属性 的值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationError" /> 对象的 <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> 。</returns>
      <param name="element">读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 从对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性 的值。</summary>
      <returns>用于的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 生成验证错误反馈在装饰器层。</returns>
      <param name="element">读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 从对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性 的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.HasError" /> 的值附加到一个指定元素的属性。</returns>
      <param name="element">读取值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 从对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性的值所指定的元素。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />的值。</returns>
      <param name="element">的元素来获取 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性的值所指定的元素。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />的值。</returns>
      <param name="element">的元素来获取 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>获取一个值在 绑定目标 元素的任何绑定是否有 <see cref="T:System.Windows.Controls.ValidationError" />。</summary>
      <returns>设置为 true ，如果对绑定元素的任何绑定具有非空 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.HasError" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.HasError" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)">
      <summary>标记指定的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象为无效使用指定的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</summary>
      <param name="bindingExpression">标记的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象为无效。</param>
      <param name="validationError">对于使用的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="bindingExpression" /> 是 null。</exception>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="validationError" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
      <summary>从指定的对象添加 <see cref="E:System.Windows.Controls.Validation.Error" />的附加事件 一个事件处理程序。</summary>
      <param name="element">移除 <paramref name="handler" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 从对象。</param>
      <param name="handler">要移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
      <summary>设置 <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> 附加属性 的值设置为指定的元素。</summary>
      <param name="element">设置 <paramref name="value" /> 的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 对象。</param>
      <param name="value">使用的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 生成验证错误反馈在装饰器层。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>将 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性设置为在指定的元素中指定的值。</summary>
      <param name="element">设置为的元素 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />的。</param>
      <param name="value">指定元素的 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>将 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性设置为在指定的元素中指定的值。</summary>
      <param name="element">设置为的元素 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />的。</param>
      <param name="value">指定元素的 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSite">
      <summary>获取或设置来指示的元素验证错误此属性设置为的绑定元素生成的。</summary>
      <returns>显示指示的元素验证错误了绑定元素生成的。</returns>
    </member>
    <member name="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor">
      <summary>获取或设置此元素来指示的元素错误。</summary>
      <returns>此元素是表示的元素错误。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />的附加属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />的附加属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>表示所创建可由绑定引擎的验证错误，则 <see cref="T:System.Windows.Controls.ValidationRule" /> 报告验证错误时，或通过显式 <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 类的新实例使用指定的参数。</summary>
      <param name="ruleInError">检测验证错误的规则。</param>
      <param name="bindingInError">与验证错误的 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 类的新实例使用指定的参数。</summary>
      <param name="ruleInError">检测验证错误的规则。</param>
      <param name="bindingInError">与验证错误的 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象。</param>
      <param name="errorContent">有关错误的信息。</param>
      <param name="exception">导致验证失败的异常。此参数是可选的，可以设置为 null。</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.BindingInError">
      <summary>获取此 <see cref="T:System.Windows.Controls.ValidationError" /><see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象。对象显式标记为无效的或具有失败的验证规则。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.ValidationError" /><see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>获取或设置为此 <see cref="T:System.Windows.Controls.ValidationError" />提供额外的上下文对象，例如描述错误的字符串。</summary>
      <returns>为此 <see cref="T:System.Windows.Controls.ValidationError" />提供额外的上下文的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>获取或设置为此 <see cref="T:System.Windows.Controls.ValidationError" />原因的 <see cref="T:System.Exception" /> 对象，因此，如果该错误是异常的结果。</summary>
      <returns>
        <see cref="T:System.Exception" /> 对象，因此，如果该错误是异常的结果。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.RuleInError">
      <summary>获取或设置为此 <see cref="T:System.Windows.Controls.ValidationError" />原因的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，因此，如果错误的原因在于验证规则的结果。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationRule" /> 对象，因此，如果错误的原因在于验证规则的结果。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>描述 <see cref="T:System.Windows.Controls.ValidationError" /> 对象是否添加或已清除。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>检测到新 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>清除了现有 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.Validation.Error" />附加事件提供信息。</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>获取一个值该错误是否是新错误或现在清除的现有错误。</summary>
      <returns>指示的 <see cref="T:System.Windows.Controls.ValidationErrorEventAction" /> 值该错误是否是新错误或现在清除的现有错误。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>具有导致此 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件的错误。</summary>
      <returns>导致此 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>调用指定的处理程序将指定的对象的类型特定方式。</summary>
      <param name="genericHandler">调用一般处理程序具有一个类型特定方式。</param>
      <param name="genericTarget">调用处理程序的对象。</param>
    </member>
    <member name="T:System.Windows.Controls.ValidationResult">
      <summary>表示 <see cref="T:System.Windows.Controls.ValidationRule" />返回的结果。指示的<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> 方法所检查的值是否已通过 <see cref="T:System.Windows.Controls.ValidationRule" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationResult" /> 类的新实例。</summary>
      <param name="isValid">该值是否签出 <see cref="T:System.Windows.Controls.ValidationRule" /> 有效。</param>
      <param name="errorContent">有关无效的信息。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.Equals(System.Object)">
      <summary>比较指定的实例并 <see cref="T:System.Windows.Controls.ValidationResult" /> 当前实例值相等性的。</summary>
      <returns>true ，如果 <paramref name="obj" /> 和 <see cref="T:System.Windows.Controls.ValidationResult" />.have 此实例相同的值。</returns>
      <param name="obj">比较的 <see cref="T:System.Windows.Controls.ValidationResult" /> 实例。</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ErrorContent">
      <summary>获取提供有关无效的附加信息的对象。</summary>
      <returns>提供有关无效的附加信息的对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.GetHashCode">
      <summary>返回此 <see cref="T:System.Windows.Controls.ValidationResult" />的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.ValidationResult" />的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.IsValid">
      <summary>获取一个值基于 <see cref="T:System.Windows.Controls.ValidationRule" /> 排序规则的值是否有效。</summary>
      <returns>true ，如果该值为有效的;否则， false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>比较值相等的两 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</summary>
      <returns>true ，如果两个对象相等;否则， false。</returns>
      <param name="left">比较的第一个实例。</param>
      <param name="right">比较的第二个实例。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
      <summary>比较值不相等的两 <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</summary>
      <returns>true ，如果值不相等;否则， false。</returns>
      <param name="left">比较的第一个实例。</param>
      <param name="right">比较的第二个实例。</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationResult.ValidResult">
      <summary>获取 <see cref="T:System.Windows.Controls.ValidationResult" />有效的实例。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" />有效的实例。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationRule">
      <summary>提供一种创建自定义规则来检查用户输入的有效性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationRule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)">
      <summary>初始化 <see cref="T:System.Windows.Controls.ValidationRule" /> 类的新实例使用指定的和验证步骤以及一个值的验证规则是否运行，则在更新目标。 </summary>
      <param name="validationStep">指定的某个枚举值验证规则运行时间。</param>
      <param name="validatesOnTargetUpdated">封送处理true 验证规则运行，当 <see cref="T:System.Windows.Data.Binding" /> 的目标更新;否则， false。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
      <summary>当重写在派生类中，对值的验证检查。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
      <param name="value">从检查的绑定目标的值。</param>
      <param name="cultureInfo">使用的区域性此规则。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)">
      <summary>对值的验证检查。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
      <param name="value">从检查的绑定目标的值。</param>
      <param name="cultureInfo">使用的区域性此规则。</param>
      <param name="owner">使用验证规则的约束表达式。</param>
    </member>
    <member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)">
      <summary>对值的验证检查。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationResult" /> 对象。</returns>
      <param name="value">从检查的绑定目标的值。</param>
      <param name="cultureInfo">使用的区域性此规则。</param>
      <param name="owner">使用验证规则的约束组。</param>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated">
      <summary>获取或设置一个值验证规则是否正在运行，以 <see cref="T:System.Windows.Data.Binding" /> 的目标更新。 </summary>
      <returns>true ，如果验证规则运行，当 <see cref="T:System.Windows.Data.Binding" /> 的目标更新;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationRule.ValidationStep">
      <summary>验证时，规则运行，则获取或设置。</summary>
      <returns>一个枚举值。默认值为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationStep">
      <summary>，当 <see cref="T:System.Windows.Controls.ValidationRule" /> 运行，指定。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.CommittedValue">
      <summary>，该值提交给数据源后，运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue">
      <summary>，在转换后，运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 该值。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.RawProposedValue">
      <summary>，在任何转换前，运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationStep.UpdatedValue">
      <summary>，在源更新后，运行 <see cref="T:System.Windows.Controls.ValidationRule" /> 。</summary>
    </member>
    <member name="T:System.Windows.Controls.ViewBase">
      <summary>表示定义数据外观。 <see cref="T:System.Windows.Controls.ListView" /> 控件视图的基类。</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.ViewBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.ClearItem(System.Windows.Controls.ListViewItem)">
      <summary>移除所有绑定，并且该样式为项目设置。</summary>
      <param name="item">移除设置的 <see cref="T:System.Windows.Controls.ListViewItem" /> 从。</param>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.DefaultStyleKey">
      <summary>获取与视图模式的样式对象。</summary>
      <returns>使用的样式为视图模式。默认值为 <see cref="T:System.Windows.Controls.ListBox" />的样式。</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)">
      <summary>，当 <see cref="T:System.Windows.Controls.ListView" /> 控件创建其 <see cref="P:System.Windows.Controls.ListView.View" />时， <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 调用。</summary>
      <returns>实现自定义 <see cref="P:System.Windows.Controls.ListView.View" />的 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 的 <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer" /> 接口。 </returns>
      <param name="parent">使用的 <see cref="T:System.Windows.Controls.ListView" /> 控件创建 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />。</param>
    </member>
    <member name="P:System.Windows.Controls.ViewBase.ItemContainerDefaultStyleKey">
      <summary>获取该样式为项目使用在视图模式。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ListViewItem" />的样式。默认值为 <see cref="T:System.Windows.Controls.ListBoxItem" /> 控件的样式。</returns>
    </member>
    <member name="M:System.Windows.Controls.ViewBase.PrepareItem(System.Windows.Controls.ListViewItem)">
      <summary>在视图的项目准备要显示，通过将绑定和样式。</summary>
      <param name="item">项目准备要显示。</param>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>定义可拉伸和缩放唯一子项将填满可用空间的一个内容修饰器。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Viewbox" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.Viewbox" /> 元素的内容。</summary>
      <returns>表示 此 <see cref="T:System.Windows.Controls.Viewbox" /> 元素及其子元素的封送的范围的<see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Size" /> 此元素使用排列子元素。</param>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Viewbox" /> 元素的唯一子项。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewbox" /> 元素的唯一子项。此属性不具有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
      <summary>获取 <see cref="T:System.Windows.Media.Visual" /> 子级在指定的 <paramref name="index" /> 位置。</summary>
      <returns>父 <see cref="T:System.Windows.Controls.Viewbox" /> 元素的 <see cref="T:System.Windows.Media.Visual" /> 子级。</returns>
      <param name="index">所需的 <see cref="T:System.Windows.Media.Visual" /> 子级的索引位置。</param>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.LogicalChildren">
      <summary>获取可以重复此 <see cref="T:System.Windows.Controls.Viewbox" /> 元素的逻辑种属性的枚举器。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。此属性不具有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> 处理过程中，在封送处理之前测量 <see cref="T:System.Windows.Controls.Viewbox" /> 的子元素。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> 表示的元素范围要。</returns>
      <param name="constraint">
        <see cref="T:System.Windows.Controls.Viewbox" /> 不能超过的 <see cref="T:System.Windows.Size" /> 限制。</param>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Viewbox" /> <see cref="T:System.Windows.Media.Stretch" /> 模式，确定目录如何放入可用空间。  </summary>
      <returns>确定的 <see cref="T:System.Windows.Media.Stretch" /> 内容如何适合可用空间。默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.StretchDirection" />，确定调用如何应用于 <see cref="T:System.Windows.Controls.Viewbox" />的内容。  </summary>
      <returns>确定的 <see cref="T:System.Windows.Controls.StretchDirection" /> 调用如何应用于 <see cref="T:System.Windows.Controls.Viewbox" />的内容。默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" />的依赖项属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewbox.Stretch" />的依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
      <summary>此实例中获取子 <see cref="T:System.Windows.Media.Visual" /> 对象数 <see cref="T:System.Windows.Controls.Viewbox" />。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Visual" /> 子级的数目。</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewport3D">
      <summary>呈现 <see cref="T:System.Windows.Controls.Viewport3D" /> 元素的二维布局范围内包含的三维内容。  </summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Viewport3D" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.ArrangeOverride(System.Windows.Size)">
      <summary>使 <see cref="T:System.Windows.Controls.Viewport3D" /> 排列其可视内容以适应指定大小。 </summary>
      <returns>排列的 <see cref="T:System.Windows.Controls.Viewport3D" /> 的最终大小。</returns>
      <param name="finalSize">
        <see cref="T:System.Windows.Controls.Viewport3D" /> 将采用的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Camera">
      <summary>获取或设置将 <see cref="T:System.Windows.Controls.Viewport3D" /> 的三维内容投影到 <see cref="T:System.Windows.Controls.Viewport3D" /> 的二维图面的照相机对象。  </summary>
      <returns>将三维内容投影到二维图面的照相机。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.CameraProperty">
      <summary>标识<see cref="P:System.Windows.Controls.Viewport3D.Camera" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewport3D.Camera" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.Children">
      <summary>获取 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 子级的集合。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 子级的集合。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewport3D.ChildrenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.GetVisualChild(System.Int32)">
      <summary>获取位于 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 集合中指定位置的 <see cref="T:System.Windows.Media.Visual" />。</summary>
      <returns>位于 <see cref="P:System.Windows.Controls.Viewport3D.Children" /> 集合中指定位置的可视对象。</returns>
      <param name="index">元素在集合中的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Viewport3D" /> 的 <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <param name="value">   要作为子级添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Viewport3D.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <param name="text">   要添加到该对象的字符串。</param>
    </member>
    <member name="P:System.Windows.Controls.Viewport3D.VisualChildrenCount">
      <summary>获取一个整数，该整数表示 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的 <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Children" /> 集合中 <see cref="T:System.Windows.Media.Visual" /> 对象的数目。</summary>
      <returns>表示 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的 Children 集合中可视对象数目的整数。</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLength">
      <summary>一个表示 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性的度量。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)">
      <summary>在视区的每一端的统一缓存长度创建 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 类的新实例。</summary>
      <param name="cacheBeforeAndAfterViewport">缓存的范围在视区之前和之后的。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)">
      <summary>在视区的每一端的指定缓存长度创建 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 类的新实例。</summary>
      <param name="cacheBeforeViewport">缓存的范围在视区的前面。</param>
      <param name="cacheAfterViewport">缓存的范围在视区的后面。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport">
      <summary>，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效时，在视区之前获取缓存的大小。</summary>
      <returns>缓存的范围在视区后，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport">
      <summary>，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效时，在视区后获取缓存的大小。</summary>
      <returns>缓存的范围在视区后，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)">
      <summary>确定指定的对象是否与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />相等。</summary>
      <returns>true ，如果指定的对象与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />相等;否则， false。</returns>
      <param name="oCompare">对象和当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /><see cref="T:System.Windows.Controls.VirtualizationCacheLength" /><see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)">
      <summary>确定指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 是否与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />相等。</summary>
      <returns>true ，如果指定的对象与当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />相等;否则， false。</returns>
      <param name="cacheLength">对象和当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /><see cref="T:System.Windows.Controls.VirtualizationCacheLength" /><see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。 </param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode">
      <summary>获取当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>确定两个指定是否已 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 对象相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 相等;否则， false。</returns>
      <param name="cl1">比较的第一个对象。</param>
      <param name="cl2">比较的第二个对象。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>确定两个指定是否已 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 对象相等。</summary>
      <returns>true ，如果指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 相等;否则， false。</returns>
      <param name="cl1">比较的第一个对象。</param>
      <param name="cl2">比较的第二个对象。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLength.ToString">
      <summary>返回表示当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />的字符串。</summary>
      <returns>表示当前 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />的字符串。</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthConverter">
      <summary>来回转换 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />对象。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 是否可以将指定类型的对象转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />，则使用指定的上下文，。</summary>
      <returns>，如果 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 可以将指定类型转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />，则为 true;否则，错误。</returns>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="sourceType">要转换的类型。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 是否可以转换 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 转换为指定的类型。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizationCacheLengthConverter" /> 能转换 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 转换为指定的类型;否则， false。</returns>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="destinationType">要转换到的类型。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</summary>
      <returns>被转换的对象。</returns>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="cultureInfo">在转换过程中，提供区域性信息使用的对象。</param>
      <param name="source">要转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 的对象。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 为 null。--或者--<paramref name="source" /> 无法转换为 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizationCacheLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 转换为指定类型的对象。</summary>
      <returns>被转换的对象。</returns>
      <param name="typeDescriptorContext">一个提供格式上下文的对象。</param>
      <param name="cultureInfo">在转换过程中，提供区域性信息使用的对象。</param>
      <param name="value">转换的 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> 为另一种类型。</param>
      <param name="destinationType">要转换到的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 <paramref name="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> 为 null。--或者--<paramref name="value" /> 不是 <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />。</exception>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationCacheLengthUnit">
      <summary>指定该 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性使用的单位类型。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Item">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 测量基于面板中显示的项。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Page">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 测量根据页，带有面板的视区的大小相等。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Pixel">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 测量基于 与设备无关的单位（每个单位 1/96 英寸）。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>指定 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 使用管理活动其子项的方法。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>重用项目容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>创建并丢弃项目容器。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>为虚拟化其子数据集合的 <see cref="T:System.Windows.Controls.Panel" /> 元素提供一个框架。这是一个抽象类。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>将指定 <see cref="T:System.Windows.UIElement" /> 添加到 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 元素的 <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 集合。</summary>
      <param name="child">要添加到集合的 <see cref="T:System.Windows.UIElement" /> 子元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>在派生类中实现时，将生成位于指定索引位置的项并使之可见。</summary>
      <param name="index">已生成并使之可见的项所在的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoViewPublic(System.Int32)">
      <summary>在指定的位置 index 生成项目并使其可见。</summary>
      <param name="index">已生成并使之可见的项所在的索引位置。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLength">
      <summary>，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效时，获取或设置缓存的范围在视区之前或之后。</summary>
      <returns>缓存的范围在视区之前和之后的，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性使用单位的类型。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性使用单位的类型。默认值为 <see cref="F:System.Windows.Controls.VirtualizationCacheLengthUnit.Page" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.CacheLengthUnitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualize">
      <summary>获取指示的 value <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 是否能有效地在层次结构中进行分组或组织的项目。</summary>
      <returns>指示的 value <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 是否能有效地在层次结构中进行分组或组织的项目。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>获取指示的 value <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 是否能有效地在层次结构中进行分组或组织的项目。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLength(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性的值。</summary>
      <returns>缓存的范围在视区之前和之后的，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetCacheLengthUnit(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 属性的值。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性使用单位的类型。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsContainerVirtualizable(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 属性的值。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应有效项;否则， false。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 附加属性的值。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化其内容，则为 true；否则为 false。</returns>
      <param name="element">从中读取附加属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetIsVirtualizingWhenGrouping(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 属性的值。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效在其集合中的项分组;否则， false。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffset(System.Windows.UIElement)">
      <summary>返回指定项目的位置，相对于 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</summary>
      <returns>指定项目的位置，相对于 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</returns>
      <param name="child">查找的元素位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>返回指定项目的位置，相对于 <see cref="T:System.Windows.Controls.VirtualizingPanel" />。</summary>
      <returns>在所有情况下均为 0。</returns>
      <param name="child">查找的元素位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetScrollUnit(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 属性的值。</summary>
      <returns>指示是否移动的一 value 度量作为集合中的项或作为像素。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>返回指定对象的 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 附加属性。</summary>
      <returns>枚举值之一，指定对象是否使用容器回收。</returns>
      <param name="element">从中读取 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 属性的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>将指定 <see cref="T:System.Windows.UIElement" /> 添加到 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 元素的 <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 集合中的指定索引位置处。</summary>
      <param name="index">集合中要插入子元素的索引位置。</param>
      <param name="child">要添加到集合的 <see cref="T:System.Windows.UIElement" /> 子元素。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable">
      <summary>获取或设置指示的 value 此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 是否应有效项。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应有效项;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizableProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing">
      <summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 正在虚拟化其子集合。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 的实例正在虚拟化其子集合，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping">
      <summary>获取或设置指示的 value 此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 是否有效在其集合中的项，在显示组时。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效在其集合中的项分组;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>获取一个值，该值标识了此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>当 <see cref="T:System.Windows.Controls.Panel" /> 基类清除了子元素的集合时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>当与此 <see cref="T:System.Windows.Controls.Panel" /> 的 <see cref="T:System.Windows.Controls.ItemsControl" /> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合发生更改时调用。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="args">为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>移除 <see cref="P:System.Windows.Controls.Panel.InternalChildren" /> 集合中的子元素。</summary>
      <param name="index">集合中的起始索引位置，要移除的第一个子元素位于该位置。</param>
      <param name="range">要从集合中移除的子元素总数。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit">
      <summary>获取指示的 value 移动是否度量作为集合中的项或作为像素。</summary>
      <returns>指示是否移动的一 value 度量作为集合中的项或作为像素。默认值为 <see cref="F:System.Windows.Controls.ScrollUnit.Item" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.ScrollUnitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLength(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLength)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">缓存的范围在视区之前和之后的，当 <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetCacheLengthUnit(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationCacheLengthUnit)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLengthUnit" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">
        <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> 属性使用单位的类型。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsContainerVirtualizable(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsContainerVirtualizable" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">指示 的true<see cref="T:System.Windows.Controls.VirtualizingPanel" /> 应有效项;否则， false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" /> 附加属性的值。</summary>
      <param name="element">设置附加属性值的对象。</param>
      <param name="value">如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 正在虚拟化，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetIsVirtualizingWhenGrouping(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.IsVirtualizingWhenGrouping" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">指定 的true<see cref="T:System.Windows.Controls.VirtualizingPanel" /> 有效在其集合中的项分组;否则， false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetScrollUnit(System.Windows.DependencyObject,System.Windows.Controls.ScrollUnit)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.ScrollUnit" /> 附加属性。</summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="value">指示是否移动的一 value 度量作为集合中的项或作为像素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>在指定对象上设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 附加属性。</summary>
      <param name="element">要对其设置 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 属性的元素。</param>
      <param name="value">枚举值之一，指定 <paramref name="element" /> 是否使用容器回收。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayout(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>返回指示的 value 在 <see cref="T:System.Windows.Controls.ItemsControl" /> 的 changed 项目是否影响此面板的格式。</summary>
      <returns>true ，如果在 <see cref="T:System.Windows.Controls.ItemsControl" /> 中已更改的项目会影响此面板的布局，否则， false。</returns>
      <param name="areItemChangesLocal">true ，如果已更改的项目是此 <see cref="T:System.Windows.Controls.VirtualizingPanel" />的直接子项; false ，如果已更改的项是 <see cref="T:System.Windows.Controls.VirtualizingPanel" />的一个间接子代。</param>
      <param name="args">包含有关该已更改的项的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>返回指示的 value 在 <see cref="T:System.Windows.Controls.ItemsControl" /> 的 changed 项目是否影响此面板的格式。</summary>
      <returns>true ，如果在 <see cref="T:System.Windows.Controls.ItemsControl" /> 中已更改的项目会影响此面板的布局，否则， false。</returns>
      <param name="areItemChangesLocal">true ，如果已更改的项目是此 <see cref="T:System.Windows.Controls.VirtualizingPanel" />的直接子项; false ，如果已更改的项是 <see cref="T:System.Windows.Controls.VirtualizingPanel" />的一个间接子代。</param>
      <param name="args">包含有关该已更改的项的数据。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.ItemsControl" /> 中的面板虚拟化其子项的方式。</summary>
      <returns>枚举值之一，指定 <see cref="T:System.Windows.Controls.ItemsControl" /> 中的面板虚拟化其子项的方式。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingPanel.VirtualizationModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingPanel.VirtualizationMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>送处理并有效沿水平或垂直放置的行的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>将该 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件的事件处理程序。</summary>
      <param name="element">侦听此事件的 <see cref="T:System.Windows.DependencyObject" /> 。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 元素的内容。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 元素及其子元素的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="arrangeSize">此元素应使用排列子元素的 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
      <summary>生成项目中的指定索引位置并将其输入视图。</summary>
      <param name="index">生成并使可见项的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 位置中不存在的子集合。</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHierarchicallyScrollAndVirtualizeCore">
      <summary>获取一个值 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 是否能有效地在层次结构中进行分组或组织的项目。</summary>
      <returns>true 在所有情况下。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 是否在水平维度可以移动。</summary>
      <returns>true ，如果内容位于级别的维度可以移动;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>获取或设置一个值目录是否在垂直维度可以移动。</summary>
      <returns>true ，如果内容位于垂直维度可以移动;否则， false。默认值为 false。</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem">
      <summary>发生，在与 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />此实例的项由 <see cref="T:System.Windows.Controls.ItemsControl" /> 不再有效。 </summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" />的附加事件标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>获取包含 范围的垂直大小的值。 </summary>
      <returns>表示 范围的垂直大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>获取包含 范围的水平大小的值。</summary>
      <returns>表示 范围的水平大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetItemOffsetCore(System.Windows.UIElement)">
      <summary>返回指定项目的位置，相对于 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</summary>
      <returns>指定项目的位置，相对于 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />。</returns>
      <param name="child">查找的元素位置。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
      <summary>获取一个值此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 是否具有垂直或水平方向。</summary>
      <returns>此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>获取包含插入符号的内容的水平 偏移量 的值。 </summary>
      <returns>一个表示 移动的内容的水平 偏移量 的<see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing" />的附加属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>向下滚动内容由一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>滚动内容向左由一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>滚动内容向右由一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>向上滚动内容由一个逻辑单元。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
      <summary>获取表示 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />的 <see cref="T:System.Windows.Controls.Orientation" /> 的值。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>为指定坐标的滚动并使该部分 <see cref="T:System.Windows.Media.Visual" /> 可见。</summary>
      <returns>可见 <see cref="T:System.Windows.Rect" /> 。</returns>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" /> 。</param>
      <param name="rectangle">表示在 <see cref="T:System.Windows.Media.Visual" />中的坐标空间的 <see cref="T:System.Windows.Rect" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> 处理过程中，这些 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 的子元素所需将它们。</summary>
      <returns>表示组件的所需大小的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不应超过的一个上限 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>滚动内容逻辑上向下以响应鼠标滚轮按钮的下单击。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>逻辑滚动内容。以响应鼠标滚轮按钮的左击的左侧。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>滚动逻辑上内容右侧以响应鼠标滚轮按钮中右击。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>滚动内容逻辑上向上以响应鼠标滚轮按钮的向上单击。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>调用，如果由 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 承载的项目不再有效。 </summary>
      <param name="e">有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>调用，则基本 <see cref="T:System.Windows.Controls.Panel" /> 类清除子元素的集合。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>调用，在与此的 <see cref="T:System.Windows.Controls.ItemsControl" /><see cref="T:System.Windows.Controls.Panel" /> 更改的 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 集合。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" /> 。</param>
      <param name="args">为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportOffsetChanged(System.Windows.Vector,System.Windows.Vector)">
      <summary>调用时，视区的偏移量更改作为用户滚动内容。</summary>
      <param name="oldViewportOffset">视区的旧偏移量。</param>
      <param name="newViewportOffset">视区的新的偏移量</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <summary>调用时，视区的大小更改。</summary>
      <param name="oldViewportSize">视区的旧范围。</param>
      <param name="newViewportSize">视区的新范围。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>获取或设置描述堆叠内容的水平或垂直方向值。  </summary>
      <returns>子内容 <see cref="T:System.Windows.Controls.Orientation" /> 。默认值为 <see cref="F:System.Windows.Controls.Orientation.Vertical" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" />的依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>向下滚动内容由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>滚动内容向左由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>滚动内容向右由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>向上滚动内容由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
      <summary>移除该 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 附加事件的事件处理程序。 </summary>
      <param name="element">处理程序被移除的 <see cref="T:System.Windows.DependencyObject" /> 。</param>
      <param name="handler">指定要移除的事件处理程序。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>获取或设置标识一个容器移动此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />控件的行为的值。 </summary>
      <returns>拥有此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" />滚动的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 。 </returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>设置 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> 属性的值。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ShouldItemsChangeAffectLayoutCore(System.Boolean,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>返回一个值在 <see cref="T:System.Windows.Controls.ItemsControl" /> 的 changed 项目是否影响此面板的格式。</summary>
      <returns>true ，如果在 <see cref="T:System.Windows.Controls.ItemsControl" /> 中已更改的项目会影响此面板的布局，否则， false。</returns>
      <param name="areItemChangesLocal">true ，如果已更改的项目是此 <see cref="T:System.Windows.Controls.VirtualizingPanel" />的直接子项; false ，如果已更改的项是 <see cref="T:System.Windows.Controls.VirtualizingPanel" />的一个间接子代。</param>
      <param name="args">包含有关该已更改的项的数据。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>获取包含插入符号的内容的垂直 偏移量 的值。 </summary>
      <returns>一个表示移动的内容的垂直 偏移量 的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>获取包含内容的 视区 的垂直大小的值。 </summary>
      <returns>表示内容的 视区 的垂直大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>获取包含内容的 视区 的水平大小的值。</summary>
      <returns>表示内容的 视区 的垂直大小的 <see cref="T:System.Double" /> 。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>标识该 VirtualizingStackPanel.VirtualizationMode 附加属性。</summary>
      <returns>VirtualizingStackPanel.VirtualizationMode 的标识符附加属性。</returns>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
      <summary>承载并在 HTML 文档间导航。在 WPF 托管代码和 HTML 脚本间启用互操作性。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.WebBrowser" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoBack">
      <summary>获取指示是否存在要向后定位到的文档。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，指示是否存在要向后定位到的文档。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.CanGoForward">
      <summary>获取指示是否存在要向前定位到的文档。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，指示是否存在要向前定位到的文档。</returns>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Document">
      <summary>获取表示所承载的 HTML 页的文档对象。 </summary>
      <returns>一个文档对象。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoBack">
      <summary>向后定位到前一文档（如果存在）。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">没有要向后定位到的文档。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.GoForward">
      <summary>向前定位到下一 HTML 文档（如果存在）。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">没有要向前定位到的文档。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
      <summary>执行当前加载的文档所实现的脚本函数。</summary>
      <returns>活动脚本调用所返回的对象。</returns>
      <param name="scriptName">要执行的脚本函数的名称。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">脚本函数不存在。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])">
      <summary>执行在当前加载的文档中定义的脚本函数。</summary>
      <returns>活动脚本调用所返回的对象。</returns>
      <param name="scriptName">要执行的脚本函数的名称。</param>
      <param name="args">要传递到脚本函数的参数。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">脚本函数不存在。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
      <summary>要导航到的文档完成下载时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String)">
      <summary>异步导航到位于指定 URL 处的文档。</summary>
      <param name="source">要导航到的 URL。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)">
      <summary>异步导航到位于指定 URL 处的文档，并指定要向其中加载文档内容的目标框架。可将其他 HTTP POST 数据和 HTTP 标头作为导航请求的一部分发送到服务器。</summary>
      <param name="source">要导航到的 URL。</param>
      <param name="targetFrameName">要在其中显示文档内容的框架的名称。</param>
      <param name="postData">要在请求源时发送到服务器的 HTTP POST 数据。</param>
      <param name="additionalHeaders">要在请求源时发送到服务器的 HTTP 标头。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
      <summary>异步导航到位于指定 <see cref="T:System.Uri" /> 处的文档。</summary>
      <param name="source">要导航到的 <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Security.SecurityException">从以不完全可信状态运行的应用程序导航到不位于源站点的 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)">
      <summary>异步导航到位于指定 <see cref="T:System.Uri" /> 处的文档，并指定要向其中加载文档内容的目标框架。可将其他 HTTP POST 数据和 HTTP 标头作为导航请求的一部分发送到服务器。</summary>
      <param name="source">要导航到的 <see cref="T:System.Uri" />。</param>
      <param name="targetFrameName">要在其中显示文档内容的框架的名称。</param>
      <param name="postData">要在请求源时发送到服务器的 HTTP POST 数据。</param>
      <param name="additionalHeaders">要在请求源时发送到服务器的 HTTP 标头。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Security.SecurityException">从以不完全可信状态运行的应用程序导航：导航到并非位于源站点的 <see cref="T:System.Uri" /> 或 <paramref name="targetFrameName" /> 名称不是 null，也不为空。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigated">
      <summary>定位到要导航到的文档并开始下载时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)">
      <summary>异步导航到文档内容所在的 <see cref="T:System.IO.Stream" />。</summary>
      <param name="stream">包含文档内容的 <see cref="T:System.IO.Stream" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
      <summary>异步导航到文档内容所在的 <see cref="T:System.String" />。</summary>
      <param name="text">包含文档内容的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.Navigating">
      <summary>正好在导航到某个文档之前发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.ObjectForScripting">
      <summary>获取或设置公共类的一个实例，该实例由主机应用程序实现且可由寄宿文档的脚本访问。</summary>
      <returns>作为 public 类的实例的 <see cref="T:System.Object" />，由主机应用程序实现且可由寄宿文档的脚本访问。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> 是通过不属于 COMVisible 类型的实例设置的。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh">
      <summary>重载当前页。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)">
      <summary>重载带有可选缓存验证的当前页。</summary>
      <param name="noCache">指定是否刷新，而不进行缓存验证。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.WebBrowser" /> 中承载的当前文档的 <see cref="T:System.Uri" />。</summary>
      <returns>当前 HTML 文档的 <see cref="T:System.Uri" />。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</exception>
      <exception cref="T:System.InvalidOperationException">未能检索对基础本机 WebBrowser 的引用。</exception>
      <exception cref="T:System.Security.SecurityException">从以不完全可信状态运行的应用程序导航到不位于源站点的 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="T:System.Windows.Controls.WrapPanel">
      <summary>从左至右按顺序位置定位子元素，将内容断开至下一行在包含框的边缘。后续排序按照 <see cref="P:System.Windows.Controls.WrapPanel.Orientation" /> 属性的值按照从上至下或从右至左的顺序进行，具体</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.WrapPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
      <summary>将 <see cref="T:System.Windows.Controls.WrapPanel" /> 元素的内容。</summary>
      <returns>表示此 <see cref="T:System.Windows.Controls.WrapPanel" /> 元素及其子元素的封送的范围的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="finalSize">此元素应使用排列子元素的 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
      <summary>获取或设置指定高度的所有项。 <see cref="T:System.Windows.Controls.WrapPanel" />中包含的值。 </summary>
      <returns>表示统一高度的所有项。 <see cref="T:System.Windows.Controls.WrapPanel" />中包含的 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />  依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight" />的标识符  依赖项属性。</returns>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
      <summary>获取或设置指定所有项的宽度 (以 <see cref="T:System.Windows.Controls.WrapPanel" />中包含的值。 </summary>
      <returns>表示所有项目的统一宽度。 <see cref="T:System.Windows.Controls.WrapPanel" />中包含的 <see cref="T:System.Double" /> 。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />  依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth" />的标识符  依赖项属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
      <summary>在 <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)" /> 处理过程中，这些 <see cref="T:System.Windows.Controls.WrapPanel" /> 的子元素所需将它们。</summary>
      <returns>表示组件的所需大小的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不应超过的一个上限 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="P:System.Windows.Controls.WrapPanel.Orientation">
      <summary>获取或设置指定维度子内容排列的值。 </summary>
      <returns>表示内容实际方向在 <see cref="T:System.Windows.Controls.WrapPanel" /> 中为水平或垂直 <see cref="T:System.Windows.Controls.Orientation" /> 值。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />  依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.WrapPanel.Orientation" />的标识符  依赖项属性。</returns>
    </member>
    <member name="M:System.Windows.Controls.TreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备就绪以指定的元素显示了指定的项目。 </summary>
      <param name="element">显示该特定项的元素。</param>
      <param name="item">显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.MeasureOverride(System.Windows.Size)">
      <summary>测量布局子元素所需的大小。</summary>
      <returns>控件的大小，最大可为 <paramref name="constraint" /> 指定的最大大小。</returns>
      <param name="constraint">此元素可以赋予子元素的最大大小。可以指定为无穷大值，以指示元素的大小将调整为内容的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.TreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备指定元素以显示指定项。</summary>
      <param name="element">显示指定项的元素。</param>
      <param name="item">要显示的项。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing" /> 附加属性的值。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 有效其内容;否则 false。</returns>
      <param name="o">附加属性值读取的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>返回指定对象的 VirtualizingStackPanel.VirtualizationMode 附加属性。</summary>
      <returns>指定的某个枚举值对象是否使用容器回收。</returns>
      <param name="element">VirtualizingStackPanel.VirtualizationMode 属性读取的对象。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing">
      <summary>获取或设置一个值此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 有效其子级的集合。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 此实例有效其子级的集合;否则 false。默认值为 true。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>调用时， <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 的子代对象获得焦点。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>调用，其子代对象 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 或任何失去键盘焦点。</summary>
      <param name="e">数据的事件。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty" />附加属性的值。</summary>
      <param name="element">附加属性值设置的对象。</param>
      <param name="value">true ，如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 有效;否则 false。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>将指定对象的 VirtualizingStackPanel.VirtualizationMode 附加属性。</summary>
      <param name="element">设置为的元素 VirtualizingStackPanel.VirtualizationMode 属性。</param>
      <param name="value">指定的某个枚举值 <paramref name="element" /> 是否使用容器回收。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode">
      <summary>获取或设置在 <see cref="T:System.Windows.Controls.ItemsControl" /> 的面板如何有效地其子项。</summary>
      <returns>指定的某个枚举值。 <see cref="T:System.Windows.Controls.ItemsControl" /> 的面板如何有效地其子项。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.AutoToolTipPlacement">
      <summary>描述自动 <see cref="T:System.Windows.Controls.ToolTip" /> 在 <see cref="T:System.Windows.Controls.Slider" /> 控件上的定位方式。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.BottomRight">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的下边缘显示自动 <see cref="T:System.Windows.Controls.ToolTip" />。对于垂直 <see cref="T:System.Windows.Controls.Slider" />，在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的右边缘显示自动 <see cref="T:System.Windows.Controls.ToolTip" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None">
      <summary>无自动 <see cref="T:System.Windows.Controls.ToolTip" /></summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.TopLeft">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的上边缘显示自动 <see cref="T:System.Windows.Controls.ToolTip" />。对于垂直 <see cref="T:System.Windows.Controls.Slider" />，在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的左边缘显示自动 <see cref="T:System.Windows.Controls.ToolTip" />。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.BulletDecorator">
      <summary>表示用来将项目符号与其他可视化对象对齐的布局控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>重写 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的默认内容排列行为。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的计算大小。 </returns>
      <param name="arrangeSize">可用来对 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的内容进行布局的 <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Background">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的背景色。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 的 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> 和 <see cref="P:System.Windows.Controls.Decorator.Child" /> 的背景色。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.BulletDecorator.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet">
      <summary>获取或设置要在 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 中用作项目符号的对象。</summary>
      <returns>要用作项目符号的 <see cref="T:System.Windows.UIElement" />。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.GetVisualChild(System.Int32)">
      <summary>获取位于指定索引处的子元素。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Windows.Media.Visual" /> 子元素。</returns>
      <param name="index">子元素的指定索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。 - 或 -<paramref name="index" /> 大于等于 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.LogicalChildren">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的逻辑子元素的枚举数。</summary>
      <returns>用来访问 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的逻辑子元素的枚举数。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.MeasureOverride(System.Windows.Size)">
      <summary>重写 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的对象的默认测量行为。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件所需的 <see cref="T:System.Windows.Size" />，基于其 <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet" /> 和 <see cref="P:System.Windows.Controls.Decorator.Child" /> 对象的大小。</returns>
      <param name="constraint">
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 的 <see cref="T:System.Windows.Size" /> 上限。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.BulletDecorator.OnRender(System.Windows.Media.DrawingContext)">
      <summary>呈现 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的内容。</summary>
      <param name="dc">
        <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 的 <see cref="T:System.Windows.Media.DrawingContext" />。 </param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 控件的可视化子元素的数目。</summary>
      <returns>为 <see cref="T:System.Windows.Controls.Primitives.BulletDecorator" /> 定义的可视化元素的数目。默认值为 0。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>表示所有 <see cref="T:System.Windows.Controls.Button" /> 控件的基类。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>在单击 <see cref="T:System.Windows.Controls.Button" /> 时发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>获取或设置 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件何时发生。  </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件何时发生。默认值为 <see cref="F:System.Windows.Controls.ClickMode.Release" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>获取或设置当按此按钮时要调用的命令。  </summary>
      <returns>当按此按钮时要调用的命令。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>获取或设置要传递给 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 属性的参数。  </summary>
      <returns>要传递给 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 属性的参数。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>标识路由 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
      <summary>获取或设置要对其引发指定命令的元素。  </summary>
      <returns>要对其引发命令的元素。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
      <summary>获取 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性的值。</summary>
      <returns>如果已启用该控件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 当前是否已被激活。  </summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 已激活，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>在调用此控件的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 时进行响应。 </summary>
      <param name="e">
        <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 属性更改时调用。</summary>
      <param name="e">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>为在此控件有焦点的情况下用户按任意键时发生的 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>为在此控件有焦点的情况下用户释放任意键时发生的 <see cref="E:System.Windows.UIElement.KeyUp" /> 路由事件提供类处理。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyUp" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary> 在元素失去键盘焦点时调用。 </summary>
      <param name="e">
        <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>为当此控件不再接收鼠标事件消息时发生的 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 路由事件提供类处理。 </summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>为当鼠标进入此控件时发生的 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 路由事件提供类处理。 </summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>为当鼠标离开元素时发生的 <see cref="E:System.Windows.UIElement.MouseLeave" /> 路由事件提供类处理。 </summary>
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为鼠标指针悬停于此控件上并按下鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 路由事件提供类处理。</summary>
      <param name="e">事件数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为鼠标指针悬停于此控件上并释放鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 路由事件提供类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>为当鼠标指针悬停于此元素上并移动鼠标指针时发生的 <see cref="E:System.Windows.UIElement.MouseMove" /> 路由事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary> 当控件的呈现大小更改时调用。 </summary>
      <param name="sizeInfo">指定大小更改。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarButton">
      <summary>表示 <see cref="T:System.Windows.Controls.Calendar" /> 对象上的月份或年份。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays">
      <summary>获取一个值，该值指示此按钮是否表示包含选定日期的年份或月份。</summary>
      <returns>如果此按钮表示包含选定日期的年份或月份，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDaysProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarButton.HasSelectedDays" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive">
      <summary>获取一个值，该值指示此按钮是否表示不在当前显示的十年期中的年份。</summary>
      <returns>如果此按钮表示不在当前显示的月份中的日期，或表示不在当前显示的十年期中的年份，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarButton.IsInactiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarButton.IsInactive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarDayButton">
      <summary>表示 <see cref="T:System.Windows.Controls.Calendar" /> 上的日。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarDayButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut">
      <summary>获取用于指示数据是否不可用的值。</summary>
      <returns>如果日期不可用，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOutProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsBlackedOut" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted">
      <summary>获取一个值，该值指示此按钮是否突出显示。</summary>
      <returns>如果按钮突出显示，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlightedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsHighlighted" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive">
      <summary>获取一个值，该值指示此按钮是否表示不在当前显示的月份中的日期。</summary>
      <returns>如果按钮表示不在当前显示的月份中的日期，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsInactiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsInactive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected">
      <summary>获取一个值，该值指示由此按钮表示的日期是否处于选定状态。</summary>
      <returns>如果日期处于选定状态，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday">
      <summary>获取一个值，该值指示由此按钮表示的日期是否为当前日期。</summary>
      <returns>如果日期为当前日期，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.CalendarDayButton.IsTodayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.CalendarDayButton.IsToday" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CalendarItem">
      <summary>表示 <see cref="T:System.Windows.Controls.Calendar" /> 上当前显示的月份或年份。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CalendarItem.DayTitleTemplateResourceKey">
      <summary>获取或设置显示该周天数的 <see cref="T:System.Windows.DataTemplate" /> 的资源键。</summary>
      <returns>显示星期几的 <see cref="T:System.Windows.DataTemplate" /> 的资源键值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CalendarItem.OnApplyTemplate">
      <summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 的可视化树。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacement">
      <summary>定义 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的自定义位置参数。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构的新实例。</summary>
      <param name="point">相对于放置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 的左上角的 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的 <see cref="T:System.Windows.Point" />。</param>
      <param name="primaryAxis">当屏幕边界遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件时该控件移动所沿的 <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)">
      <summary>将此结构与另一个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构进行比较，以确定是否相等。</summary>
      <returns>如果结构的值相等，则为 true；否则为 false。</returns>
      <param name="o">要比较的 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode">
      <summary>获取此结构的哈希代码。 </summary>
      <returns>此结构的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构以确定它们是否相等。</summary>
      <returns>如果结构的值相等，则为 true；否则为 false。</returns>
      <param name="placement1">要比较的第一个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
      <param name="placement2">要比较的第二个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构以确定它们是否不相等。 </summary>
      <returns>如果结构的值不相等，则为 true；否则为 false。</returns>
      <param name="placement1">要比较的第一个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
      <param name="placement2">要比较的第二个 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 结构。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point">
      <summary>获取或设置相对于放置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件左上角的目标对象的点。 </summary>
      <returns>用于定位 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的 <see cref="T:System.Windows.Point" />。默认值为 (0,0)。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.PrimaryAxis">
      <summary>获取或设置当屏幕边界遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 时，移动 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件所采取的方向。</summary>
      <returns>当屏幕边界遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 时移动 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的方向。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback">
      <summary>表示为 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件提供自定义定位的一种方法。 </summary>
      <returns>针对与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 相关的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的可能 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" /> 位置数组。</returns>
      <param name="popupSize">
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的 <see cref="T:System.Windows.Size" />。</param>
      <param name="targetSize">
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的 <see cref="T:System.Windows.Size" />。</param>
      <param name="offset">从 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 属性值计算的 <see cref="T:System.Windows.Point" />。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridCellsPresenter">
      <summary>在 <see cref="T:System.Windows.Controls.DataGrid" /> 的模板中使用，用于指定要将单元格添加到控件的可视化树中的什么位置。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridCellsPresenter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ArrangeOverride(System.Windows.Size)">
      <returns>控件的大小。</returns>
      <param name="finalSize">父级中此对象应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>清除指定单元格的容器引用。</summary>
      <param name="element">要清除的 <see cref="T:System.Windows.Controls.DataGridCell" />。</param>
      <param name="item">数据项。不使用此值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.GetContainerForItemOverride">
      <summary>返回一个新的 <see cref="T:System.Windows.Controls.DataGridCell" /> 实例以包含单元格值。</summary>
      <returns>新 <see cref="T:System.Windows.Controls.DataGridCell" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <returns>true ，如果项目为 (或完全限定为) 自己的容器;否则， false。</returns>
      <param name="item">检查项。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item">
      <summary>获取行所表示的数据项。 </summary>
      <returns>行所表示的数据项。 </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.MeasureOverride(System.Windows.Size)">
      <returns>控件的大小，直到 <paramref name="constraint" />指定的最大次数。</returns>
      <param name="availableSize">此元素可以赋给子元素的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnApplyTemplate"></member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnColumnsChanged(System.Collections.ObjectModel.ObservableCollection{System.Windows.Controls.DataGridColumn},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>更新 <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合发生更改时的显示单元格。 </summary>
      <param name="columns">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合。</param>
      <param name="e">
        <see cref="P:System.Windows.Controls.DataGrid.Columns" /> 集合的 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件中的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnItemChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> 属性值发生更改时更新所显示的单元格。 </summary>
      <param name="oldItem">
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> 属性的先前值。</param>
      <param name="newItem">
        <see cref="P:System.Windows.Controls.Primitives.DataGridCellsPresenter.Item" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>由布局系统调用，用于在水平网格线可见的情况下在单元格下方绘制水平线。</summary>
      <param name="drawingContext">单元格的绘制说明。此上下文是为布局系统提供的。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridCellsPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备单元格以显示指定项。</summary>
      <param name="element">要准备的单元格。</param>
      <param name="item">要显示的项。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeader">
      <summary>表示单个 <see cref="T:System.Windows.Controls.DataGrid" /> 列标题。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort">
      <summary>获取一个值，该值指示用户能否通过单击此列标题对 <see cref="T:System.Windows.Controls.DataGrid" /> 按关联列进行排序。</summary>
      <returns>如果用户可以通过单击此列标题对 <see cref="T:System.Windows.Controls.DataGrid" /> 按关联列进行排序，则为 true；否则为 false。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSortProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.CanUserSort" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.Column">
      <summary>获取与此列标题关联的 <see cref="T:System.Windows.Controls.DataGridColumn" />。</summary>
      <returns>与此列标题关联的列。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnFloatingHeaderStyleKey">
      <summary>获取一个键，该键引用标题拖动操作期间用于显示列标题的样式。 </summary>
      <returns>浮动列标题的样式键。 </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey">
      <summary>获取一个键，该键引用标题拖动操作期间放置位置标志的样式。 </summary>
      <returns>放置位置标志的样式键。 </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex">
      <summary>获取与此列标题关联的列相对于 <see cref="T:System.Windows.Controls.DataGrid" /> 中其他列的显示位置。</summary>
      <returns>关联列相对于 <see cref="T:System.Windows.Controls.DataGrid" /> 中其他列的显示位置。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.DisplayIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen">
      <summary>获取一个值，该值指示是否阻止与此列标题关联的列水平滚动。</summary>
      <returns>如果阻止关联的列水平滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.IsFrozen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnApplyTemplate">
      <summary>当应用新模板时，生成列标题的可视化树。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnClick">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件并启动排序。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnCreateAutomationPeer">
      <summary>返回此列标题的新 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeaderAutomationPeer" />。</summary>
      <returns>此列标题的新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <param name="e">
        <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <param name="e">事件数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush">
      <summary>获取或设置用于绘制列标题分隔符线的 <see cref="T:System.Windows.Media.Brush" />。 </summary>
      <returns>用于绘制列标题分隔符线的画笔。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility">
      <summary>获取或设置列标题分隔符线的用户界面 (UI) 可见性。 </summary>
      <returns>列标题分隔符线的 UI 可见性。默认值为 <see cref="F:System.Windows.Visibility.Visible" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SeparatorVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection">
      <summary>获取一个值，该值指示是否按关联的列对 <see cref="T:System.Windows.Controls.DataGrid" /> 进行排序，以及列值是以升序排列还是以降序排序。</summary>
      <returns>列的排序方向；如果不排序，则为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridColumnHeader.SortDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter">
      <summary>在 <see cref="T:System.Windows.Controls.DataGrid" /> 的模板中使用，用于指定要将列标题添加到控件的可视化树中的什么位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ArrangeOverride(System.Windows.Size)">
      <returns>控件的大小。</returns>
      <param name="finalSize">父级中此元素应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <param name="element">容器元素。</param>
      <param name="item">项目。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetContainerForItemOverride">
      <summary>返回一个新的 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 实例以包含列标题值。</summary>
      <returns>新 <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader" /> 实例。 </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetLayoutClip(System.Windows.Size)">
      <summary>返回剪切蒙版的形状。如果布局系统尝试排列的元素大小超过可用显示空间，将会应用蒙版。</summary>
      <returns>剪切形状。</returns>
      <param name="layoutSlotSize">列标题所呈现的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.GetVisualChild(System.Int32)">
      <summary>返回指定索引处的 <see cref="T:System.Windows.Media.Visual" /> 子级。</summary>
      <returns>子级。 </returns>
      <param name="index">要返回的 <see cref="T:System.Windows.Media.Visual" /> 子级的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.IsItemItsOwnContainerOverride(System.Object)">
      <returns>true ，如果项目为 (或完全限定为) 自己的容器;否则， false。</returns>
      <param name="item">检查项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.MeasureOverride(System.Windows.Size)">
      <returns>控件的大小，直到 <paramref name="constraint" />指定的最大次数。</returns>
      <param name="availableSize">此元素可以赋给子元素的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnApplyTemplate"></member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.OnCreateAutomationPeer">
      <summary>返回此演示者的新 <see cref="T:System.Windows.Automation.Peers.DataGridColumnHeadersPresenterAutomationPeer" />。</summary>
      <returns>此演示者的新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <param name="element">用于的元素显示指定的项目。</param>
      <param name="item">指定项目。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridColumnHeadersPresenter.VisualChildrenCount">
      <summary>获取此演示者中 <see cref="T:System.Windows.Media.Visual" /> 子级的数目。</summary>
      <returns>visual 子级的数目。 </returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter">
      <summary>在 <see cref="T:System.Windows.Controls.DataGrid" /> 的模板中使用，用于指定要将行详细信息添加到控件的可视化树中的什么位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridDetailsPresenter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.ArrangeOverride(System.Windows.Size)">
      <returns>组件所需的实际大小。</returns>
      <param name="finalSize">父级中此元素应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.MeasureOverride(System.Windows.Size)">
      <returns>需要封送处理子内容的大小。</returns>
      <param name="availableSize">此元素可以赋给子元素的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnCreateAutomationPeer">
      <summary>返回此演示者的新 <see cref="T:System.Windows.Automation.Peers.DataGridDetailsPresenterAutomationPeer" />。</summary>
      <returns>此演示者的新自动化对等方。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnRender(System.Windows.Media.DrawingContext)">
      <summary>由布局系统调用，用于在水平网格线可见的情况下在行详细信息部分下方绘制水平线。</summary>
      <param name="drawingContext">行详细信息的绘制指令。此上下文是为布局系统提供的。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridDetailsPresenter.OnVisualParentChanged(System.Windows.DependencyObject)">
      <param name="oldParent">旧父元素。可以为 null，指示元素未曾有过可视化父级。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowHeader">
      <summary>表示单个 <see cref="T:System.Windows.Controls.DataGrid" /> 行标题。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected">
      <summary>获取一个值，该值指示是否选择了行。 </summary>
      <returns>如果该行被选定，则为 true；否则为 false。注册的默认值为 false。有关可能影响该值的因素的信息，请参见 <see cref="T:System.Windows.DependencyProperty" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.IsRowSelected" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.MeasureOverride(System.Windows.Size)">
      <summary>测量 <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 的子级，以便准备在 <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" /> 处理过程中排列它们。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader" /> 在布局过程中基于其对子对象分配大小的计算而确定的它所需的大小。 </returns>
      <param name="availableSize">此元素可以赋给子元素的可用大小。指示子元素不应超过的上限。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnApplyTemplate">
      <summary>当应用新模板时，生成行标题的可视化树。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnClick">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件并启动行选择或拖动操作。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowHeader.OnCreateAutomationPeer">
      <summary>返回此行标题的新 <see cref="T:System.Windows.Automation.Peers.DataGridRowHeaderAutomationPeer" />。</summary>
      <returns>此行标题的新自动化对等方。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush">
      <summary>获取或设置用于绘制行标题分隔符线的 <see cref="T:System.Windows.Media.Brush" />。 </summary>
      <returns>用于绘制行标题分隔符线的画笔。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility">
      <summary>获取或设置行标题分隔符线的用户界面 (UI) 可见性。 </summary>
      <returns>行标题分隔符线的 UI 可见性。默认值为 <see cref="F:System.Windows.Visibility.Visible" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DataGridRowHeader.SeparatorVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DataGridRowsPresenter">
      <summary>在 <see cref="T:System.Windows.Controls.DataGrid" /> 的模板中使用，用于指定要将行添加到控件的可视化树中的什么位置。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DataGridRowsPresenter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.MeasureOverride(System.Windows.Size)">
      <returns>表示组件的所需大小的 <see cref="T:System.Windows.Size" /> 。</returns>
      <param name="constraint">不应超过的一个上限 <see cref="T:System.Windows.Size" /> 。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>为滚出视图之外的行引发 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem" /> 事件。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
      <param name="oldIsItemsHost">旧属性值。</param>
      <param name="newIsItemsHost">新的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DataGridRowsPresenter.OnViewportSizeChanged(System.Windows.Size,System.Windows.Size)">
      <param name="oldViewportSize">视区的旧范围。</param>
      <param name="newViewportSize">视区的新范围。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DatePickerTextBox">
      <summary>表示 <see cref="T:System.Windows.Controls.DatePicker" /> 的文本输入。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DatePickerTextBox.OnApplyTemplate">
      <summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.DatePickerTextBox" /> 的可视化树。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentPageView">
      <summary>表示已分页 <see cref="T:System.Windows.Documents.DocumentPage" /> 的视区。    </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.ArrangeOverride(System.Windows.Size)">
      <summary>排列内容以符合指定的视图大小。</summary>
      <returns>页视图用于排列本身及其子级的实际大小。</returns>
      <param name="finalSize">页视图应用于排列本身及其子级的最大大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage">
      <summary>获取与此视图关联的 <see cref="T:System.Windows.Documents.DocumentPage" />。</summary>
      <returns>与此视图关联的文档页。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPaginator">
      <summary>获取或设置用于检索此视图内容页的 <see cref="T:System.Windows.Documents.DocumentPaginator" />。</summary>
      <returns>用于检索此视图内容页的分页程序。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象；如果没有 <paramref name="serviceType" /> 类型的服务对象，则为 null。</returns>
      <param name="serviceType">要获取的服务对象的类型。 </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetVisualChild(System.Int32)">
      <summary>返回指定索引位置处的 <see cref="T:System.Windows.Media.Visual" /> 子项。</summary>
      <returns>位于指定索引处的 Visual 子级。</returns>
      <param name="index">要返回的 Visual 子级的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者大于或等于 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount" />。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.IsDisposed">
      <summary>获取一个值，指示是否已为此实例调用 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" />。</summary>
      <returns>如果已为此 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 调用 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.MeasureOverride(System.Windows.Size)">
      <summary>返回可以给定以显示当前 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 的可用视区大小。</summary>
      <returns>实际所需大小。</returns>
      <param name="availableSize">最大的可用大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 的一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>新的 <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageConnected">
      <summary>当连接 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageDisconnected">
      <summary>当断开与 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage" /> 的 <see cref="T:System.Windows.Media.Visual" /> 元素的连接时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber">
      <summary>获取或设置当前所显示页面的页码。 </summary>
      <returns>当前所显示页面的从零开始的页码。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.PageNumberProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch">
      <summary>获取或设置指定应如何拉伸内容以填充显示页的 <see cref="T:System.Windows.Media.Stretch" /> 枚举值。 </summary>
      <returns>指定应如何拉伸内容以填充显示页的枚举值。默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection">
      <summary>获取或设置指定应在哪个缩放方向应用 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 的 <see cref="T:System.Windows.Controls.StretchDirection" /> 枚举值。 </summary>
      <returns>指定应在哪个缩放方向应用 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 的枚举值。默认值为 <see cref="F:System.Windows.Controls.StretchDirection.DownOnly" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IDisposable#Dispose">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。请改用类型安全的 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentPageView.System#IServiceProvider#GetService(System.Type)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。请改用类型安全的 <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)" /> 方法。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。</returns>
      <param name="serviceType"> 一个对象，它指定要获取的服务对象的类型。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount">
      <summary>获取此视图包含的 Visual 子级数。</summary>
      <returns>此视图包含的 Visual 子级数。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DocumentViewerBase">
      <summary>提供用于显示固定内容或流动内容（分别由 <see cref="T:System.Windows.Documents.FixedDocument" /> 或 <see cref="T:System.Windows.Documents.FlowDocument" /> 表示）的查看器的基类。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.#ctor">
      <summary>由某个派生类调用时，初始化基类值。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CancelPrint">
      <summary>取消任何当前打印作业。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage">
      <summary>获取一个值，该值指示此查看器是否能跳转到当前 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 的下一页。 </summary>
      <returns>如果查看器可跳转到下一页，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPagePropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖项属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage" /> 依赖项属性键的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPage(System.Int32)">
      <summary>返回一个值，该值指示查看器是否能跳转到指定的页码。</summary>
      <returns>指示查看器是否能跳转到指定的页码的布尔值。</returns>
      <param name="pageNumber">作为有效的跳转目标检查的页码。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage">
      <summary>获取一个值，该值指示此查看器是否能跳转到当前 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 的上一页。 </summary>
      <returns>如果查看器可跳转到上一页，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPagePropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖项属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage" /> 依赖项属性键的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document">
      <summary>获取或设置要由查看器分页和显示的 <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" />。 </summary>
      <returns>要由查看器分页和显示的 <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" />。默认属性为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.DocumentProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage">
      <summary>导致查看器跳转到当前文档的第一页（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性表示）。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetIsMasterPage(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性的值。</summary>
      <returns>从元素指定的依赖项对象读取的 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性的值。</returns>
      <param name="element">从中检索 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 的值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetMasterPageView">
      <summary>返回此查看器的当前母版 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />。</summary>
      <returns>此查看器的当前母版 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />，如果找不到母版 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" />，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)">
      <summary>创建和返回与当前显示文档（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性表示）关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的新的、只读集合。</summary>
      <returns>与当前显示文档关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的只读集合。</returns>
      <param name="changed">在首次调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 或自从上次调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 后集合未发生更改，则返回 true；如果自从上次调用 <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)" /> 后集合发生了更改，则返回 false。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)">
      <summary>导致查看器跳转到指定页码。</summary>
      <param name="pageNumber">要跳转到的页码。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.InvalidatePageViews">
      <summary>导致要重新生成 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> 工作集合。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage">
      <summary>获取一个值，该值指示是否应将查看器中的子元素用作母版页。</summary>
      <returns>如果关联的元素用作母版页，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPageProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage">
      <summary>导致查看器跳转到当前文档的最后一页（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性表示）。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.LogicalChildren">
      <summary>获取查看器的逻辑树中的子级的枚举数。</summary>
      <returns>可用于枚举查看器的逻辑子级的 <see cref="T:System.Collections.IEnumerator" /> 对象。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber">
      <summary>获取当前母版页的页码。 </summary>
      <returns>当前母版页的页码，如果当前未加载文档，则为 0。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖项属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 依赖项属性键的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage">
      <summary>导致查看器跳转到当前文档的下一页（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性表示）。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnApplyTemplate">
      <summary>为查看器构建可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
      <summary>只要 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 事件在其路由中到达从此类派生的元素，就会调用此方法。实现此方法可为此事件添加类处理。</summary>
      <param name="element">发出 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 事件的元素。</param>
      <param name="rect">应使其可见的矩形区域，该区域位于 <paramref name="element" /> 坐标空间中。</param>
      <param name="pageNumber">包含 <paramref name="element" /> 页的页码。</param>
      <exception cref="T:System.ArgumentNullException">当元素为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCancelPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCreateAutomationPeer">
      <summary>创建并返回此查看器的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此查看器的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDocumentChanged">
      <summary>只要修改 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性就会调用此方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnFirstPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.FirstPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnGoToPageCommand(System.Int32)">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.GoToPage" /> 路由命令。</summary>
      <param name="pageNumber">要跳转到的页码。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnLastPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.LastPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnMasterPageNumberChanged">
      <summary>只要修改 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber" /> 属性就会调用此方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnNextPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.NextPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPageViewsChanged">
      <summary>只要修改此查看器的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> 属性表示）的工作集，就会调用此方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPreviousPageCommand">
      <summary>处理 <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage" /> 路由命令。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPrintCommand">
      <summary>处理 <see cref="P:System.Windows.Input.ApplicationCommands.Print" /> 路由命令。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount">
      <summary>获取当前 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 的总页数。 </summary>
      <returns>当前文档的页数，如果当前未加载文档，则为 0。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountPropertyKey">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖项属性键。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount" /> 依赖项属性键的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews">
      <summary>获取此查看器所包含的活动 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的只读集合。</summary>
      <returns>此查看器所包含的活动 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 对象的只读集合。此属性无默认值。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged">
      <summary>当与此查看器（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews" /> 属性表示）关联的 <see cref="T:System.Windows.Controls.Primitives.DocumentPageView" /> 项目的集合更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage">
      <summary>导致查看器跳转到当前文档的上一页（由 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document" /> 属性表示）。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.Print">
      <summary>调用标准的“打印”对话框，此对话框可用于打印查看器的内容和配置打印首选项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.SetIsMasterPage(System.Windows.DependencyObject,System.Boolean)">
      <summary>对指定的依赖项对象设置<see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 附加属性。</summary>
      <param name="element">要对其设置 <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage" /> 的值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当元素为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#IServiceProvider#GetService(System.Type)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。</returns>
      <param name="serviceType"> 一个对象，它指定要获取的服务对象的类型。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <param name="value"> 要作为子级添加的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <param name="text"> 要添加到该对象的字符串。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>提供有关当用户使用鼠标完成 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的拖动操作时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 事件的信息。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> 类的新实例。 </summary>
      <param name="horizontalChange">拖动操作所导致的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的水平位置更改。</param>
      <param name="verticalChange">拖动操作所导致的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的垂直位置更改。</param>
      <param name="canceled">一个布尔值，该值指示是否通过调用 <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> 方法取消拖动操作。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>获取是否通过调用 <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> 方法取消了 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的拖动操作。 </summary>
      <returns>如果拖动操作已取消，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>获取用户使用鼠标拖动控件后 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的水平位置更改。 </summary>
      <returns>用户按下左鼠标按钮的点与用户在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的拖动操作中释放该按钮的点之间的水平差异。没有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>将处理 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 事件的方法转换为 <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventHandler" /> 类型。</summary>
      <param name="genericHandler">事件处理程序委托。</param>
      <param name="genericTarget">使用处理程序的 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>获取用户使用鼠标拖动控件后 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的垂直位置更改。</summary>
      <returns>用户按下左鼠标按钮的点与用户在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的拖动操作中释放该按钮的点之间的垂直差异。没有默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>表示将要处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 路由事件的方法。 </summary>
      <param name="sender">事件处理程序所附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>提供有关在用户使用鼠标拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件时发生一次或多次的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件的信息。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> 类的新实例。</summary>
      <param name="horizontalChange">自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置发生的水平更改。</param>
      <param name="verticalChange">自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置发生的垂直更改。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>获取当用户使用鼠标拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件时，鼠标自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件以来移动的水平距离。</summary>
      <returns>拖动操作过程中鼠标位置的水平更改。没有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>将处理 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件的方法转换为 <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventHandler" /> 类型。</summary>
      <param name="genericHandler">事件处理程序委托。</param>
      <param name="genericTarget">使用处理程序的 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>获取当用户使用鼠标拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时，鼠标自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件以来移动的垂直距离。</summary>
      <returns>拖动操作过程中鼠标位置的垂直更改。没有默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>表示将要处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 路由事件的方法。 </summary>
      <param name="sender">事件处理程序所附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>提供有关当用户使用鼠标拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 事件的信息。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> 类的新实例。</summary>
      <param name="horizontalOffset">鼠标单击相对 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的屏幕坐标的水平偏移量。</param>
      <param name="verticalOffset">鼠标单击相对 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的屏幕坐标的垂直偏移量。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>获取鼠标单击相对 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的屏幕坐标的水平偏移量。</summary>
      <returns>鼠标单击相对于 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 边框的左上角的水平偏移量。没有默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>将处理 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 事件的方法转换为 <see cref="T:System.Windows.Controls.Primitives.DragStartedEventHandler" /> 类型。</summary>
      <param name="genericHandler">事件处理程序委托。</param>
      <param name="genericTarget">使用处理程序的 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>获取鼠标单击相对 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的屏幕坐标的垂直偏移量。</summary>
      <returns>鼠标单击相对于 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 边框的左上角的水平偏移量。没有默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>表示将要处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序所附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>指定生成项时使用的方向。<see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt" /> 使用 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>指定以向后方向生成项。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>指定以向前方向生成项。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 用于描述由 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 管理的项的位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>使用指定的索引和偏移量初始化 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的新实例。</summary>
      <param name="index">与已生成（已实现）项相关的 <see cref="T:System.Int32" /> 索引。-1 是表示项列表的开头或结尾处虚拟项的特殊值。</param>
      <param name="offset">与已索引项旁未生成（未实现）项相关的 <see cref="T:System.Int32" /> 偏移量。偏移量为 0 表示已索引元素本身；偏移量为 1 表示下一未生成（未实现）项；偏移量为 -1 表示前一项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>比较 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的指定实例与当前实例的值是否相等。</summary>
      <returns>如果 <paramref name="o" /> 与 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的此实例具有相同值，则为 true。</returns>
      <param name="o">要比较的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 实例。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>返回该 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>获取或设置与已生成（已实现）项相关的 <see cref="T:System.Int32" /> 索引。</summary>
      <returns>与已生成（已实现）项相关的 <see cref="T:System.Int32" /> 索引。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>获取或设置与已索引项旁未生成（未实现）项相关的 <see cref="T:System.Int32" /> 偏移量。</summary>
      <returns>与已索引项旁未生成（未实现）项相关的 <see cref="T:System.Int32" /> 偏移量。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 对象的值是否相等。</summary>
      <returns>如果两个对象相等，则为 true；否则为 false。</returns>
      <param name="gp1">要比较的第一个实例。</param>
      <param name="gp2">要比较的第二个实例。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 对象的值是否不相等。</summary>
      <returns>如果值不相等，则为 true；否则为 false。</returns>
      <param name="gp1">要比较的第一个实例。</param>
      <param name="gp2">要比较的第二个实例。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>返回此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 实例的字符串表示形式。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 此实例的字符串表示形式</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorStatus">
      <summary>由 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 使用以指示其项生成的状态。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
      <summary>生成器已完成生成容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.Error">
      <summary>生成器已完成生成容器，但遇到一个或多个错误。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
      <summary>生成器正在生成容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
      <summary>生成器未尝试生成内容。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase">
      <summary>表示用于定义一行数据（其中不同的数据项显示在不同的列中）的布局的类的基类。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> 类的实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns">
      <summary>获取或设置一个 <see cref="T:System.Windows.Controls.GridViewColumnCollection" />。 </summary>
      <returns>显示数据的 <see cref="T:System.Windows.Controls.GridViewColumn" /> 对象的集合。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.GetVisualChild(System.Int32)">
      <summary>获取位于指定索引处的行项中的可见子级。</summary>
      <returns>包含指定索引处的子级的 <see cref="T:System.Windows.Media.Visual" /> 对象。</returns>
      <param name="index">子级的索引。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.LogicalChildren">
      <summary>获取行的逻辑子级的枚举器。</summary>
      <returns>此行的逻辑子级的 <see cref="T:System.Collections.IEnumerator" />。 </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>如果侦听器已对事件进行了处理，则为 true。</returns>
      <param name="managerType"> 调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。</param>
      <param name="sender"> 发出该事件的对象。</param>
      <param name="args"> 事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ToString">
      <summary>返回 <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase" /> 对象的字符串表示形式。</summary>
      <returns>一个包含对象类型和列数的字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.VisualChildrenCount">
      <summary>获取行的可见子级的数目。 </summary>
      <returns>当前行的可见子级的数目。 </returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IContainItemStorage">
      <summary>为项目面板提供了一个属性包实现。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <summary>清除所有关联的属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>移除关联在指定的项目和属性之间。 </summary>
      <param name="item">关联项。</param>
      <param name="dp">关联的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(System.Windows.DependencyProperty)">
      <summary>从所有属性包中移除指定的属性。</summary>
      <param name="dp">要移除的属性。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(System.Object,System.Windows.DependencyProperty)">
      <summary>返回与所指定的项目中指定的属性的值。</summary>
      <returns>与所指定的项目中指定的属性的值。</returns>
      <param name="item">具有指定的属性的项与它。</param>
      <param name="dp">返回的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)">
      <summary>存储所指定的属性和值并使它们与指定的项目。</summary>
      <param name="item">关联值和属性的项目配置。</param>
      <param name="dp">与该指定项的属性。</param>
      <param name="value">关联的属性的值。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo">
      <summary>提供控件显示分层数据与 <see cref="T:System.Windows.Controls.VirtualizingPanel" />通信的属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.Constraints">
      <summary>获取或设置表示控件的视区和缓存的范围的对象。</summary>
      <returns>表示控件的视区和缓存的范围的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.HeaderDesiredSizes">
      <summary>获取表示控件的标头的所需大小，在 与设备无关的单位（每个单位 1/96 英寸） 和在逻辑单位的对象。</summary>
      <returns>表示控件的标头的所需大小，在 与设备无关的单位（每个单位 1/96 英寸） 和在逻辑单位的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.InBackgroundLayout">
      <summary>获取一个值控件的布局通过是出现在较低优先级。</summary>
      <returns>true ，如果控件的布局处理发生在较低优先级;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemDesiredSizes">
      <summary>获取或设置表示控件中的项的所需大小，在 与设备无关的单位（每个单位 1/96 英寸） 和在逻辑单位的对象。</summary>
      <returns>表示控件中的项的所需大小，在 与设备无关的单位（每个单位 1/96 英寸） 和在逻辑单位的对象。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.ItemsHost">
      <summary>获取演示控件的项目的 <see cref="T:System.Windows.Controls.Panel" /> 。</summary>
      <returns>演示控件的项目的 <see cref="T:System.Windows.Controls.Panel" /> 。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IHierarchicalVirtualizationAndScrollInfo.MustDisableVirtualization">
      <summary>获取或设置一个值所属 <see cref="T:System.Windows.Controls.ItemsControl" /> 是否应有效项。</summary>
      <returns>true ，如果拥有的 <see cref="T:System.Windows.Controls.ItemsControl" /> 应有效项;否则， false。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>由负责代表主机生成用户界面 (UI) 内容的类所实现的接口。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <summary>返回用于显示下一项的容器元素。</summary>
      <returns>是用于显示下一项的容器元素的 <see cref="T:System.Windows.DependencyObject" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>返回用于显示下一项的容器元素，并返回其是否为新生成（实现）的容器元素。</summary>
      <returns>是用于显示下一项的容器元素的 <see cref="T:System.Windows.DependencyObject" />。</returns>
      <param name="isNewlyRealized">如果返回的 <see cref="T:System.Windows.DependencyObject" /> 为新生成（实现），则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>返回映射到指定索引处的项的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 对象。</summary>
      <returns>映射到指定索引处的项的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 对象。</returns>
      <param name="itemIndex">所需项的索引。 </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>返回适合由指定面板使用的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</summary>
      <returns>适合由指定面板使用的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
      <param name="panel">为其返回适合的 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 的面板。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>返回映射到指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的索引。</summary>
      <returns>是映射到指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 的索引的 <see cref="T:System.Int32" />。</returns>
      <param name="position">所需项的索引。所需索引的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>准备指定元素作为相应项的容器。</summary>
      <param name="container">要准备的容器。通常来说，<paramref name="container" /> 是 <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext" /> 的前一调用的结果。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>移除一个或多个生成（实现）项。</summary>
      <param name="position">要移除的元素的 <see cref="T:System.Int32" /> 索引。<paramref name="position" /> 必须引用先前生成（实现）的项，这意味着其偏移量必须为零。</param>
      <param name="count">从 <paramref name="position" /> 开始的要移除的元素的 <see cref="T:System.Int32" /> 数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>移除所有生成（实现）项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
      <summary>准备生成器以从指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 开始且使用指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> 生成项。</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 对象，可跟踪生成过程的生存期。</returns>
      <param name="position">
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />，指定从其开始生成项的项的位置。</param>
      <param name="direction">
        <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" />，指定生成项所用的方向。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>准备生成器以从指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> 开始并以指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> 来生成项，同时控制是否从生成（实现）项开始。</summary>
      <returns>
        <see cref="T:System.IDisposable" /> 对象，可跟踪生成过程的生存期。</returns>
      <param name="position">
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />，指定从其开始生成项的项的位置。</param>
      <param name="direction">指定从其开始生成项的项的位置。</param>
      <param name="allowStartAtRealizedItem">指定是否从生成（实现）项开始的 <see cref="T:System.Boolean" />。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>扩展 <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> 接口以重用它生成的 UI 内容。负责代表宿主生成用户界面 (UI) 内容的类实现此接口。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>解除项容器与其数据项的关联，并保存容器以便稍后可供其他数据项重用。</summary>
      <param name="position">要重用的第一个元素的从零开始的索引。<paramref name="position" /> 必须是以前生成（实现）的项。</param>
      <param name="count">要重用的元素的编号，从 <paramref name="position" /> 开始。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>表示 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件内的主要可滚动区域。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>获取或设置一个值，该值指示能否在水平轴上滚动。</summary>
      <returns>如果可以滚动，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>获取或设置一个值，该值指示能否在垂直轴上滚动。 </summary>
      <returns>如果可以滚动，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>获取范围的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，它以与设备无关的像素为单位表示范围的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>获取范围的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，它以与设备无关的像素为单位表示范围的水平大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>获取滚动内容的水平偏移。</summary>
      <returns>一个 <see cref="T:System.Double" />，它以与设备无关的像素为单位表示水平偏移。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>在内容内向下滚动一个逻辑单元。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>在内容内向左滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>在内容内向右滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>在内容内向上滚动一个逻辑单元。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
      <summary>强制内容滚动，直至 <see cref="T:System.Windows.Media.Visual" /> 对象的坐标空间可见。 </summary>
      <returns>可见的 <see cref="T:System.Windows.Rect" />。</returns>
      <param name="visual">变为可见的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="rectangle">标识坐标空间使之可见的边框。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>用户单击鼠标上的滚轮按钮后向下滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>用户单击鼠标上的滚轮按钮后向左滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>用户单击鼠标上的滚轮按钮后向右滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>用户单击鼠标上的滚轮按钮后向上滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>将内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>将内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>将内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>将内容向上滚动一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>获取或设置一个控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。</summary>
      <returns>控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>设置水平偏移量。</summary>
      <param name="offset">内容在水平方向上距包含视区的偏移程度。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>设置垂直偏移量。</summary>
      <param name="offset">内容在垂直方向上距包含视区的偏移程度。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>获取滚动内容的垂直偏移。</summary>
      <returns>一个 <see cref="T:System.Double" />，它以与设备无关的像素为单位表示滚动内容的垂直偏移。有效值介于 0 与 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> 减去 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" /> 所得的数值之间。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>获取此内容的视区的垂直大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，它以与设备无关的像素为单位表示此内容的视区的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>获取此内容的视区的水平大小。</summary>
      <returns>一个 <see cref="T:System.Double" />，它以与设备无关的像素为单位表示此内容的视区的水平大小。此属性无默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>获取对项集合发生的操作。</summary>
      <returns>返回发生的操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>获取更改所涉及的项数。</summary>
      <returns>表示更改所涉及的项数的整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>获取更改所涉及的用户界面 (UI) 元素数。</summary>
      <returns>表示更改所涉及的 UI 元素数的整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>获取集合中更改发生之前的位置。</summary>
      <returns>返回一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>获取集合中更改发生的位置。</summary>
      <returns>返回一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件的方法。 </summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>定义提供关于元素布局状态的其他信息的方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>返回表示元素的可见区域的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
      <returns>表示 <paramref name="element" /> 的可见区域的 <see cref="T:System.Windows.Media.Geometry" />。</returns>
      <param name="element">需要其布局剪辑的 <see cref="T:System.Windows.FrameworkElement" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>返回一个 <see cref="T:System.Windows.UIElement" />，布局引擎将在发生未经处理的异常时对其进行处理。</summary>
      <returns>一个 <see cref="T:System.Windows.UIElement" />，布局引擎将在发生未经处理的异常时对其进行处理。</returns>
      <param name="dispatcher">定义操作范围的 <see cref="T:System.Windows.Threading.Dispatcher" /> 对象。每个布局引擎实例对应一个调度程序。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="dispatcher" /> 为 null 时发生。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>返回表示为子元素保留的布局分区的 <see cref="T:System.Windows.Rect" />。</summary>
      <returns>表示元素的布局槽的 <see cref="T:System.Windows.Rect" />。</returns>
      <param name="element">需要其布局槽的 <see cref="T:System.Windows.FrameworkElement" />。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MenuBase">
      <summary>表示一个控件，该控件定义供用户选择的选项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride">
      <summary>创建或标识用于显示指定项的元素。</summary>
      <returns>用于显示指定项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
      <summary>在按下或释放鼠标按钮时调用。</summary>
      <param name="e">鼠标事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是其自身的项容器，或是否可以作为其自身的项容器。</summary>
      <returns>如果该项是一个 <see cref="T:System.Windows.Controls.MenuItem" /> 或 <see cref="T:System.Windows.Controls.Separator" />，则为 true；否则为 false。</returns>
      <param name="item">要检查是其否为项容器的项。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector">
      <summary>获取或设置选择用于显示每个项的模板的自定义逻辑。</summary>
      <returns>一个自定义对象，它提供逻辑并返回一个项容器。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>响应对 <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性所做的更改。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>为用户按任意键时引发的 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件提供类处理。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>为鼠标离开控件时发生的 <see cref="E:System.Windows.UIElement.MouseLeave" /> 路由事件提供类处理。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeave" /> 事件的事件数据。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate">
      <summary>获取或设置指示菜单是根据基础集合中项的类型还是一些其他的启发方法来选择不同的项容器的值。</summary>
      <returns>下拉菜单中选择不同的项容器，为true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.MultiSelector">
      <summary>为允许选择多项的控件提供抽象类。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems">
      <summary>启动新的选择事务。</summary>
      <exception cref="T:System.InvalidOperationException">在调用此方法时，<see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> 为 true。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems">
      <summary>获取或设置一个值，该值指示是否可以一次选择 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中的多个项。 </summary>
      <returns>如果可以一次选择 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中的多个项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems">
      <summary>将所选项提交到 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />。</summary>
      <exception cref="T:System.InvalidOperationException">在调用此方法时，<see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" /> 为 false。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 当前是否正在对 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> 集合执行批量更新。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 当前正在对 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> 集合执行批量更新，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll">
      <summary>选择 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中的所有项。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" /> 为 false。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems">
      <summary>获取在 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中选定的项。</summary>
      <returns>在 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中选定的项。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll">
      <summary>取消选择 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 中的所有项。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>描述 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在屏幕上显示的位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Absolute">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，该位置相对于屏幕的左上角，且在由 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 的属性值定义的偏移量处。如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身以与边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.AbsolutePoint">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，该位置相对于屏幕的左上角，且在由 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 的属性值定义的偏移量处。如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会从 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 或 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />= 所定义的轴的相反方向扩展。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，即控件上边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的下边缘对齐，控件左边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的左边缘对齐。如果屏幕下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，以便其下边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的上边缘对齐。如果屏幕上边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，以便其上边缘与屏幕上边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Center">
      <summary>在 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 上居中的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置。如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身以与屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Custom">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置和重新定位行为，由 <see cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" /> 属性所指定的 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 委托定义。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件，其右边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的左边缘对齐，上边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的上边缘对齐。如果屏幕左边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 会重新定位自身，以便其左边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的右边缘对齐。如果屏幕右边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件的右边缘会与屏幕的右边缘对齐。如果屏幕上或下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，使其与进行遮盖的屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，即控件上边缘与鼠标边界框的下边缘对齐，控件左边缘与鼠标边界框的左边缘对齐。如果屏幕下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，使其与鼠标边界框的上边缘对齐。如果屏幕上边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，使其与屏幕上边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，该位置相对于鼠标光标的顶端，且在由 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 的属性值定义的偏移量处。如果屏幕水平或垂直边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则它会从进行遮盖的边缘的相反方向打开。如果相反方向的屏幕边缘也遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则它会与进行遮盖的屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Relative">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，该位置相对于 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的左上角，且在由 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 的属性值定义的偏移量处。如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身以与屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.RelativePoint">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，该位置相对于 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的左上角，且在由 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 和 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 的属性值定义的偏移量处。如果屏幕边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 会从 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 或 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 所定义的轴的相反方向扩展。如果相反方向的屏幕边缘也遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会与此屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，即控件的左边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的右边缘对齐，控件上边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的上边缘对齐。如果屏幕右边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，以便其左边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的左边缘对齐。如果屏幕左边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，以便其左边缘与屏幕左边缘对齐。如果屏幕上或下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，使其与进行遮盖的屏幕边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置，控件下边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的上边缘对齐，左边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的左边缘对齐。如果屏幕上边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，以便其上边缘与 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 的下边缘对齐。如果屏幕下边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件的下边缘会与屏幕的下边缘对齐。如果屏幕左或右边缘遮盖 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则控件会重新定位自身，使其与进行遮盖的屏幕对齐。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>表示包含内容的弹出项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件是否可以包含透明内容。  </summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件可以包含透明内容，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的内容。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的 <see cref="T:System.Windows.UIElement" /> 内容。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性更改为 false 时发生。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
      <summary>将子元素附加到 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。 </summary>
      <param name="popup">向其添加子内容的 <see cref="T:System.Windows.Controls.Primitives.Popup" />。 </param>
      <param name="child">
        <see cref="T:System.Windows.UIElement" /> 子内容。 </param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
      <summary>获取或设置定位 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的委托处理程序方法。  </summary>
      <returns>提供 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的位置信息的 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 委托方法。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
      <summary>标识 <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 依赖项属性。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
      <summary>返回 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 的逻辑父级。 </summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 不包含定义的父级，并且 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 不为 null，则返回 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />。否则，返回值与 <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" /> 相同。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
      <summary>获取一个值，该值指示是否以投影效果显示 <see cref="T:System.Windows.Controls.Primitives.Popup" />。  </summary>
      <returns>如果以投影效果显示 <see cref="T:System.Windows.Controls.Primitives.Popup" />，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>获取或设置目标原点与弹出项对齐点之间的水平距离。 </summary>
      <returns>目标原点与弹出项对齐点之间的水平距离。有关目标原点和弹出项对齐点的信息，请参见 Popup 放置行为。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 是否可见。  </summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 可见，为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
      <summary>获取一个可用于访问 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的逻辑子元素的枚举数。</summary>
      <returns>可用于访问 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的逻辑子元素的 <see cref="T:System.Collections.IEnumerator" />。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
      <summary>确定逻辑父级的可视化树中 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 内容所需的大小。</summary>
      <returns>
        <see cref="P:System.Windows.Size.Height" /> 和 <see cref="P:System.Windows.Size.Width" /> 属性都等于零 (0) 的 <see cref="T:System.Windows.Size" /> 结构。</returns>
      <param name="availableSize">此元素可提供给子级的可用大小。您可以把无穷当作一个值，用来指示可将该元素的大小调整为符合任何可用内容。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性的值从 true 更改为 false 时进行响应。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
      <summary>对 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性的值从 false 更改为 true 的情况进行响应。 </summary>
      <param name="e">事件参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性更改为 true 时发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Placement">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件打开时的控件方向，并指定 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在与屏幕边界重叠时的控件行为。  </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 枚举值，该值确定 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件打开时的控件方向，并指定该控件与屏幕边界交互的方式。默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
      <summary>获取或设置当打开 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件时该控件相对于其放置的矩形。  </summary>
      <returns>用于放置 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的矩形。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
      <summary>获取或设置当打开 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件时该控件相对于其放置的元素。  </summary>
      <returns>作为 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的逻辑父级的 <see cref="T:System.Windows.UIElement" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
      <summary>获取或设置用于打开和关闭 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的动画。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> 枚举值，该值定义用于打开和关闭 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件的动画。默认值为 <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
      <summary>获取或设置一个值，该值指示当 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件焦点不再对准时，是否关闭该控件。  </summary>
      <returns>如果在 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 属性设置为 false 时关闭 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件，则为 true；如果在 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件外发生鼠标或键盘事件时关闭 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件，则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 WPF 基础结构，但不应在代码中直接使用。</summary>
      <param name="value">要作为子级添加的对象。 </param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 WPF 基础结构，但不应在代码中直接使用。</summary>
      <param name="text">要添加到该对象的字符串。 </param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>获取或设置目标原点与弹出项对齐点之间的垂直距离。  </summary>
      <returns>目标原点与弹出项对齐点之间的垂直距离。有关目标原点和弹出项对齐点的信息，请参见 Popup 放置行为。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupAnimation">
      <summary>描述 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在打开时如何显示动画。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Fade">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件会逐渐显示或淡出。可通过随时间增加 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 窗口的不透明度来创建此效果。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.None">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件在显示时不呈现动画。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件从其父级的左上角滚动。如果屏幕未提供足够的空间以允许 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 默认行为，则 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 改为从右下角滚动。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupAnimation.Slide">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件向下或向上滑入到位。默认情况下，<see cref="T:System.Windows.Controls.Primitives.Popup" /> 向下滑。不过，如果屏幕未提供 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 向下滑的足够空间，则它将改为向上滑。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PopupPrimaryAxis">
      <summary>描述为了增加可见的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 量，而需要朝哪个方向移动 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Horizontal">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件通过先沿屏幕的水平轴移动，再沿屏幕的垂直轴移动来更改位置。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.None">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件根据默认的 <see cref="T:System.Windows.Controls.Primitives.Popup" /> 行为更改位置。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Vertical">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> 控件通过先沿屏幕的垂直轴移动，再沿屏幕的水平轴移动来更改位置。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>表示具有特定范围内值的元素。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>获取或设置要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 控件的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 加上或减去的值。  </summary>
      <returns>要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 加上或减去的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>获取或设置范围元素的最大可能的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。  </summary>
      <returns>范围元素的最大可能的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>获取或设置范围元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 可能的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。  </summary>
      <returns>范围元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性更改时调用。 </summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的旧值。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性发生更改时调用。 </summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的旧值。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>引发 <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> 路由事件。 </summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性的旧值。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性的新值。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>获取或设置要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 控件的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 加上或减去的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。  </summary>
      <returns>要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 加上或减去的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。默认值为 0.1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>提供 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 对象的字符串表示形式。 </summary>
      <returns>返回 <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>获取或设置范围控件的当前数量。  </summary>
      <returns>范围控件的当前数量。默认值为 0。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>在范围值更改时发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>表示从按下按钮到释放按钮的时间内重复引发其 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 在开始重复之前被按下时等待的时间（以毫秒为单位）。该值必须为非负数。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 在开始重复之前被按下时等待的时间（以毫秒为单位）。默认为 <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> 的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>获取或设置开始重复后重复之间的时间间隔（以毫秒为单位）。该值必须为非负数。</summary>
      <returns>开始重复后重复之间的时间间隔（以毫秒为单位）。默认为 <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> 的值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnClick">
      <summary>引发自动化事件，并调用基方法来引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnCreateAutomationPeer">
      <summary>作为 WPF 基础结构的一部分，为此控件提供相应的 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> 实现。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.KeyUp" /> 事件。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.KeyUp" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 失去鼠标捕获时调用。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>在鼠标进入某个元素时报告。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseEnter" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>在鼠标离开某个元素时报告。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeave" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件。 </summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>响应 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件。 </summary>
      <param name="e">
        <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 事件的事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ResizeGrip">
      <summary>表示使 <see cref="T:System.Windows.Window" /> 能够更改其大小的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的一个实现。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ResizeGrip.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ResizeGrip" /> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>表示一个提供滚动条的控件，该滚动条具有一个其位置对应于某个值的可滑动的 <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToHorizontalOffsetCommand">
      <summary>通知 <see cref="T:System.Windows.Controls.ScrollViewer" /> 用户将水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 拖动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。  </summary>
      <returns>当用户在启用了延迟滚动的 <see cref="T:System.Windows.Controls.ScrollViewer" /> 上拖动水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.DeferScrollToVerticalOffsetCommand">
      <summary>通知 <see cref="T:System.Windows.Controls.ScrollViewer" /> 用户将垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 拖动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。  </summary>
      <returns>通知 <see cref="T:System.Windows.Controls.ScrollViewer" /> 用户将垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 拖动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。  </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore">
      <summary>获取一个值，该值指示是否启用 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />。</summary>
      <returns>如果在 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中启用 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，并且内容的大小大于显示区域，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的垂直方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的垂直方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的水平方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的水平方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的水平方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的水平方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的垂直方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的垂直方向少量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>创建 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>为当 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.ContextMenu" /> 关闭时发生的 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>为当 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.ContextMenu" /> 打开时发生的 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer">
      <summary>创建此 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件的一个 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> 事件提供类处理。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> 事件提供类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是水平显示还是垂直显示。  </summary>
      <returns>定义 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 是水平显示还是垂直显示的一个 <see cref="T:System.Windows.Controls.Orientation" /> 枚举值。默认值为 <see cref="F:System.Windows.Controls.Orientation.Vertical" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的垂直方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的垂直方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的水平方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的水平方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的水平方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的增大值的水平方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand">
      <summary>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的垂直方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </summary>
      <returns>按照其 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的减小值的垂直方向大量滚动 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的命令。 </returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>当用户通过鼠标移动 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 时，随着内容在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中滚动发生一次或多次。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 路由事件的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到打开 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中 <see cref="T:System.Windows.Controls.ContextMenu" /> 的鼠标单击点的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到打开 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中 <see cref="T:System.Windows.Controls.ContextMenu" /> 的鼠标单击点的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToBottomCommand">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand">
      <summary>将内容滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件右下角的命令。 </summary>
      <returns>将内容滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件右下角的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHomeCommand">
      <summary>将内容滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件左上角的命令。 </summary>
      <returns>将内容滚动到 <see cref="T:System.Windows.Controls.ScrollViewer" /> 控件左上角的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToHorizontalOffsetCommand">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand">
      <summary>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值的命令。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToVerticalOffsetCommand">
      <summary>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。 </summary>
      <returns>将 <see cref="T:System.Windows.Controls.ScrollViewer" /> 中垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 滚动到 <see cref="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" /> 中所提供值的命令。 </returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Track">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件的 <see cref="T:System.Windows.Controls.Primitives.Track" />。</summary>
      <returns>与 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件一起使用的 <see cref="T:System.Windows.Controls.Primitives.Track" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>获取或设置当前可见的可滚动内容的量。  </summary>
      <returns>当前可见的可滚动内容的量。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>为在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动时发生的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>通过使用指定的 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值和 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的新位置，初始化 <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> 类的实例。 </summary>
      <param name="scrollEventType">一个 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值，该值描述导致事件的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动的类型。</param>
      <param name="newValue">对应于 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的新位置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>执行相应的类型强制转换以便为 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件调用类型安全的 <see cref="T:System.Windows.Controls.Primitives.ScrollEventHandler" /> 委托。 </summary>
      <param name="genericHandler">要调用的事件处理程序。</param>
      <param name="genericTarget">事件路由上的当前对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>获取一个值，该值表示 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的新位置。 </summary>
      <returns>对应于 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的新位置的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>获取一个 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值，该值描述导致此事件的在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置中的更改。</summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 枚举值，该值描述导致 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动的类型。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>表示将要处理当 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 移动时发生的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序所附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>描述导致 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 控件发生 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件的行为。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 已拖动到一个新位置，并且现在不再会由用户拖动。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 已移动到 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 位置。对于一个垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下 Ctrl+Home 键时发生。此移动对应于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand" /> 和水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 向左（对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）或向上（对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）移动指定距离（由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 的值确定）。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 上的页按钮或按下 Page Up 键时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand" />。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 左侧的页按钮时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 向右（对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）或向下（对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）移动指定距离（由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 的值确定）。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 下的页按钮或按下 Page Down 键时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand" />。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 右侧的页按钮时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 已移动到 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 位置。对于一个垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下 Ctrl+End 键时发生。此移动对应于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand" /> 和水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中的 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 向左（对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）或向上（对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）移动一小段距离（由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 的值确定）。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下上 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 或按下向上键时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand" />。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下左 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 向右（对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）或向下（对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />）移动一小段距离（由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 的值确定）。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下下 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 或按下向下键时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand" />。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" />，此移动在用户按下右 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时发生，并对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 已移动到新位置，因为用户在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 的快捷菜单中选择了“滚动到此处”。此移动对应于 <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand" />。要查看快捷菜单，可在指针位于 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 上方时右击鼠标。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 被拖动并导致了 <see cref="E:System.Windows.UIElement.MouseMove" /> 事件。当在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 中拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时，可能多次发生此 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> 的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> 事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid">
      <summary>一个可在视图滚动时将指定单元格固定在原位的面板。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.SelectiveScrollingGrid" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.GetSelectiveScrollingOrientation(System.Windows.DependencyObject)">
      <summary>为指定对象获取单元格可滚动的方向。</summary>
      <returns>单元格可滚动的方向。</returns>
      <param name="obj">检索其滚动方向的对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation">
      <summary>获取或设置单元格可滚动的方向。</summary>
      <returns>单元格可滚动的方向。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SelectiveScrollingOrientation" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.SelectiveScrollingGrid.SetSelectiveScrollingOrientation(System.Windows.DependencyObject,System.Windows.Controls.SelectiveScrollingOrientation)">
      <summary>为指定对象设置单元格可滚动的方向。</summary>
      <param name="obj">设置其滚动方向的对象。</param>
      <param name="value">滚动方向。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>表示允许用户从其子元素中选择项的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>为 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 附加事件添加处理程序。 </summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>为 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 附加事件添加处理程序。 </summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">要添加的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>将项容器返回到其在 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> 之前所处的状态。</summary>
      <param name="element">项容器元素。</param>
      <param name="item">数据项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelected(System.Windows.DependencyObject)">
      <summary>获取指示是否选择项的 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 附加属性的值。 </summary>
      <returns>布尔值，如果 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 属性为 true，则为 true。</returns>
      <param name="element">要查询有关 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 属性的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>获取一个值，该值指示键盘焦点是否位于 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 中。</summary>
      <returns>属性的值，如果键盘焦点位于 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 中，则为 true。</returns>
      <param name="element">从中读取附加属性的元素。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelected">
      <summary>获取或设置一个值，该值指示是否选择了某个项。</summary>
      <returns>如果选定此项，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive">
      <summary>获取一个值，该值指示键盘焦点是否在 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 返回的值中。</summary>
      <returns>如果键盘焦点位于 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 控件内，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>获取或设置指示 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 是否应当使 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 与 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 属性中的当前项保持同步的值。  </summary>
      <returns>如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 始终与 <see cref="T:System.Windows.Controls.ItemCollection" /> 中的当前项保持同步，则为 true；如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 从不与当前项保持同步，则为 false；如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 只有在 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 使用 <see cref="T:System.Windows.Data.CollectionView" /> 时才与当前项保持同步，则为 null。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnInitialized(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。每当在内部将 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 设置为 true 时，都将调用此方法。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当 <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 属性更改时调用。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>当 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 中的项更改时更新当前选择。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>当选择器中的项来源更改时调用。</summary>
      <param name="oldValue">来源的旧值。</param>
      <param name="newValue">来源的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>当选择更改时调用。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备指定元素以显示指定项。 </summary>
      <param name="element">用于显示指定项的元素。</param>
      <param name="item">要显示的指定项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>移除 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 附加事件的处理程序。 </summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">要移除的事件处理程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>移除 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 附加事件的处理程序。 </summary>
      <param name="element">侦听此事件的元素。</param>
      <param name="handler">要移除的事件处理程序。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Selected">
      <summary>当选择项时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Selected" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>获取或设置当前选择中第一个项的索引，或者在选择为空时返回 -1。  </summary>
      <returns>当前选择中第一个项的索引。默认值为 -1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>获取或设置当前选择中的第一项，或者，如果选择为空，则返回 null。  </summary>
      <returns>当前选择中的第一个项，或者在选择为空时为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>获取或设置通过使用 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 而获取的 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 的值。  </summary>
      <returns>所选项的值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>获取或设置用于从 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 获取 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 的路径。  </summary>
      <returns>用于获取 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 的路径。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary> 标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>当 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 的选择更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectionChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指示是否选择 <see cref="T:System.Windows.Controls.Primitives.Selector" /> 中的项的属性值。 </summary>
      <param name="element">要对其设置属性的对象。</param>
      <param name="isSelected">要设置的值。</param>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.Unselected">
      <summary>当取消选择项时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.UnselectedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected" /> 路由事件的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBar">
      <summary>表示一个控件，该控件在应用程序窗口的水平栏中显示项和信息。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.GetContainerForItemOverride">
      <summary>创建一个新的 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" />。</summary>
      <returns>用于显示指定项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>确定指定项是否是其自己的容器（或者是否可以作为自己的容器）。</summary>
      <returns>如果项是（或可以作为）其自己的容器，则返回 true；否则返回 false。</returns>
      <param name="item">要计算的指定对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector">
      <summary>获取或设置选择用于显示每个项的模板的自定义逻辑。</summary>
      <returns>一个自定义对象，它提供逻辑并返回一个项容器。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelectorProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.StatusBar.ItemContainerTemplateSelector" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.OnCreateAutomationPeer">
      <summary>指定 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 的 <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>准备要在 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 中显示的项。</summary>
      <param name="element">要在 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 中显示的项。</param>
      <param name="item">要显示的项的内容。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey">
      <summary>表示要用于 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 中的 <see cref="T:System.Windows.Controls.Separator" /> 对象的样式的键。</summary>
      <returns>引用要用于 <see cref="T:System.Windows.Controls.Separator" /> 对象的样式的 <see cref="T:System.Windows.ResourceKey" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBar.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
      <summary>确定是否将 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 中项的 <see cref="T:System.Windows.Style" /> 应用于对象。</summary>
      <returns>如果 <paramref name="item" /> 不是 <see cref="T:System.Windows.Controls.Separator" />，则为 true；否则为 false。</returns>
      <param name="container">项的容器。</param>
      <param name="item">要计算的对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate">
      <summary>获取或设置指示菜单是根据基础集合中项的类型还是一些其他的启发方法来选择不同的项容器的值。</summary>
      <returns>下拉菜单中选择不同的项容器，为true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.StatusBar.UsesItemContainerTemplate" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.StatusBarItem">
      <summary>表示 <see cref="T:System.Windows.Controls.Primitives.StatusBar" /> 控件的项。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.StatusBarItem.OnCreateAutomationPeer">
      <summary>指定 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>此 <see cref="T:System.Windows.Controls.Primitives.StatusBarItem" /> 的 <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TabPanel">
      <summary>处理 <see cref="T:System.Windows.Controls.TabControl" /> 上的 <see cref="T:System.Windows.Controls.TabItem" /> 对象的布局。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> 对象的内容并调整其大小。 </summary>
      <returns>选项卡面板的大小。</returns>
      <param name="arrangeSize">选项卡面板用来放置子元素的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.GetLayoutClip(System.Windows.Size)">
      <summary>用于重写默认剪裁。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.TabPanel" /> 的布局大小。</returns>
      <param name="layoutSlotSize">面板的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
      <summary>需要重新测量控件时调用。 </summary>
      <returns>所需大小。</returns>
      <param name="constraint">约束大小是上限。返回值不应超过此大小。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TextBoxBase">
      <summary>用于编辑控件，包括 <see cref="T:System.Windows.Controls.TextBox" /> 和 <see cref="T:System.Windows.Controls.RichTextBox" />文本的函数的抽象基类。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn">
      <summary>获取或设置一个值编辑控件的文本如何响应，当用户按 enter 键。</summary>
      <returns>true ，如果按 enter 键时插入新行在当前光标位置;否则， enter 键将被忽略。默认值为 <see cref="T:System.Windows.Controls.TextBox" /> 和 true 的 false<see cref="T:System.Windows.Controls.RichTextBox" />的。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab">
      <summary>获取或设置一个值编辑控件的文本如何响应，当用户按 tab 键。  </summary>
      <returns>true ，如果按 tab 键插入制表符在当前光标位置; false ，如果按 tab 键将焦点移动到标记的下一个控件，当制表位并不插入制表符。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)">
      <summary>字符串追加到文本控件的内容。</summary>
      <param name="textData">指定文本追加到文本控件的当前内容的字符串。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection">
      <summary>获取或设置确定的值，当用户通过拖动选择的一部分运行时在中使用鼠标，单词的其余部分是否已选中。</summary>
      <returns>true ，如果自动字选启用;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange">
      <summary>开始更改块。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo">
      <summary>获取一个值最近是否取消事件可以在重做。</summary>
      <returns>true ，如果最近取消事件可以在重做;否则， false。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo">
      <summary>获取一个值最近的操作是否可以取消。</summary>
      <returns>true，如果最近的操作可以取消;否则， false。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush">
      <summary>获取或设置用于绘制文本框的插入符号的画笔。</summary>
      <returns>用于绘制文本框的插入符号的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Copy">
      <summary>复制编辑控件的文本的当前选定内容为 <see cref="T:System.Windows.Clipboard" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Cut">
      <summary>从编辑控件和复制的文本以移除当前选定内容为 <see cref="T:System.Windows.Clipboard" />。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock">
      <summary>导致更改块。</summary>
      <returns>为引用新更改的 <see cref="T:System.IDisposable" /> 对象块。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange">
      <summary>关闭更改块。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight">
      <summary>获取可见内容区域的垂直大小。</summary>
      <returns>指定可见内容区域的垂直大小的浮点值，在 与设备无关的单位（每个单位 1/96 英寸）。; 如果没有配置文本编辑控件支持 scroll，此属性的值为 0.0。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth">
      <summary>获取可见内容区域的水平大小。</summary>
      <returns>指定可见内容区域的水平大小的浮点值，在 与设备无关的单位（每个单位 1/96 英寸）。; 如果没有配置编辑控件的文本支持 scroll，此属性的值为 0.0。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset">
      <summary>获取或设置水平滚动位置。</summary>
      <returns>指定水平滚动位置的浮点值，在 与设备无关的单位（每个单位 1/96 英寸）。 设置此属性可生成编辑控件的文本移动到指定的水平扭曲。读取该属性返回当前级别的偏移量。; 如果没有配置编辑控件的文本支持 scroll，此属性的值为 0.0。此属性不具有默认值。</returns>
      <exception cref="T:System.ArgumentException">尝试将此属性设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
      <summary>获取或设置一个值水平滚动条是否显示。 </summary>
      <returns>由 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 枚举中定义的值。默认值为 <see cref="F:System.Windows.Visibility.Hidden" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled">
      <summary>获取或设置一个值文本框是否显示选定的文本，当文本框没有焦点时。</summary>
      <returns>true ，如果文本框显示选定的文本，当文本框没有焦点;否则， false。 该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly">
      <summary>获取或设置一个值编辑控件的文本是否是只读到与控件的用户。 </summary>
      <returns>true ，如果该编辑控件的文本内容是只读对用户;否则，编辑控件的文本内容都可由用户修改。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible">
      <summary>获取或设置一个值只读文本框是否显示插入符号。</summary>
      <returns>true ，如果只读文本框显示插入符号;否则， false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> 依赖项属性。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive">
      <summary>获取一个值文本框是否具有焦点和选定的文本。</summary>
      <returns>true ，如果在文本框中具有焦点和选定的文本;否则， false。 该注册的默认值为 false。有关的更多信息会影响值，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled">
      <summary>获取或设置一个值是否撤消支持文本编辑控件启用视图状态。  </summary>
      <returns>true ，如果撤消支持启用;否则， false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown">
      <summary>由一行将控件的内容向下滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft">
      <summary>将控件的内容向左由一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight">
      <summary>将控件的内容在右侧由一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp">
      <summary>由一行向上移动控件的内容。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit">
      <summary>锁定最近取消应用程序的撤消堆栈的单元。这样的锁定的单元合并使用取消以后添加的单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate">
      <summary>，在控件模板的应用时，将调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件到达其路由中的此类。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.DragDrop.DragEnter" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.DragDrop.DragLeave" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.DragDrop.DragOver" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.DragDrop.DragEnter" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.UIElement.LostFocus" /> 事件 (使用提供的参数)。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Mouse.MouseUp" /> 从事件到达其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">事件的参数。这些参数将包含有关哪个按钮的详细信息是按下的和处理的状态。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.UIElement.MouseWheel" /> 事件路由到此类时 (或指向从此类继承的类) 上。</summary>
      <param name="e">与此事件相关的鼠标滚轮参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>调用时， <see cref="E:System.Windows.UIElement.KeyDown" /> 发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
      <summary>，该插入符号或当前选择更改位置时，将调用。</summary>
      <param name="e">与 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
      <summary>，在控件模板更改时，将调用。</summary>
      <param name="oldTemplate">指定控件模板是当前活动的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 对象。</param>
      <param name="newTemplate">指定一个新的控件模板中使用的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
      <summary>在编辑控件中的中调用，当内容。</summary>
      <param name="e">与 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>调用，每当一个未处理的 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 附加路由事件到达从其路由中的此类派生的元素。执行此方法来添加处理为该事件的类。</summary>
      <param name="e">提供有关事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown">
      <summary>由一页将控件的内容向下滚动。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft">
      <summary>将控件的内容向左由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight">
      <summary>将控件的内容在右侧由一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp">
      <summary>由一页移动控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Paste">
      <summary>粘贴剪贴板的内容在当前选定的在编辑控件的文本。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Redo">
      <summary>撤消最近撤消命令。换言之，重复最近移除在撤消堆栈的单元。</summary>
      <returns>true ，如果重做操作成功;否则， false。此方法返回 false ，如果未取消可用的命令 (撤消堆栈为空)。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd">
      <summary>将编辑控件的视图设置为内容的末尾。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome">
      <summary>将编辑控件的 " 视图到视区的开头。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)">
      <summary>将编辑控件的内容保存到指定的水平 偏移量。</summary>
      <param name="offset">指定滚动的水平扭曲的一个双精度值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)">
      <summary>将编辑控件的内容保存到指定的垂直 偏移量。</summary>
      <param name="offset">指定滚动的垂直偏移量的一个双精度值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll">
      <summary>选择编辑控件的文本的任何内容。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush">
      <summary>获取或设置显示选定文本的画笔。</summary>
      <returns>显示的画笔选定的文本。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> 依赖项属性。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged">
      <summary>，当文本选择已更改，发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 的标识符路由事件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />的不透明度。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />的不透明度。默认值为 0.4。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck">
      <summary>获取用于提供对 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />的文本内容的拼写错误的 <see cref="T:System.Windows.Controls.SpellCheck" /> 对象。</summary>
      <returns>提供对 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 或 <see cref="T:System.Windows.Controls.RichTextBox" />的文本内容的拼写错误的 <see cref="T:System.Windows.Controls.SpellCheck" /> 对象。此属性不具有默认值。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged">
      <summary>出现问题，则在文本元素中的内容更改。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent">
      <summary> 标识 <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 的标识符路由事件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TextBoxBase.Undo">
      <summary>撤消最近撤消命令。换言之，撤消最近移除在撤消堆栈的单元。</summary>
      <returns>true ，如果取消操作成功;否则， false。，如果撤消堆栈为空，则此方法返回 false 。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit">
      <summary>获取或设置在取消队列存储的事件数。</summary>
      <returns>在取消队列存储的事件数。默认值为 – 1，这意味着取消队列限于可用内存。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 设置在调用 <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> 之后且在调用 <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />之前。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset">
      <summary>获取或设置垂直滚动位置。</summary>
      <returns>指定垂直滚动位置的浮点值，在 与设备无关的单位（每个单位 1/96 英寸）。设置此属性可生成编辑控件的文本移动到指定的垂直偏移量。读取该属性返回当前的垂直偏移量。; 如果没有配置编辑控件的文本支持 scroll，此属性的值为 0.0。此属性不具有默认值。</returns>
      <exception cref="T:System.ArgumentException">尝试将此属性设置为负值。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
      <summary>获取或设置一个值垂直滚动条是否显示。 </summary>
      <returns>由 <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 枚举中定义的值。 默认值为 <see cref="F:System.Windows.Visibility.Hidden" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight">
      <summary>获取滚动的内容区域的垂直大小。</summary>
      <returns>指定滚动的内容区域的垂直大小的浮点值，在 与设备无关的单位（每个单位 1/96 英寸）。; 如果没有配置编辑控件的文本支持 scroll，此属性的值为 0.0。此属性不具有默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth">
      <summary>获取滚动的内容区域的水平大小。</summary>
      <returns>指定滚动的内容区域的水平大小的浮点值，在 与设备无关的单位（每个单位 1/96 英寸）。; 如果没有配置编辑控件的文本支持 scroll，此属性的值为 0.0。此属性不具有默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>表示可由用户拖动的控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>取消对 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的拖动操作。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件失去鼠标捕获时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragCompletedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>当 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件具有逻辑焦点和鼠标捕获时，随着鼠标位置更改发生一次或多次。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragDeltaEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>在 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件接收逻辑焦点和鼠标捕获时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.DragStartedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 路由事件。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件是否具有逻辑焦点和鼠标捕获，以及鼠标左键是否按下。   </summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件具有焦点和鼠标捕获，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnCreateAutomationPeer">
      <summary>创建 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的一个 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>响应 <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 属性值的更改。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 事件提供类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>为 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 事件提供类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>为 <see cref="E:System.Windows.UIElement.MouseMove" /> 事件提供类处理。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBar">
      <summary>表示一个为 <see cref="T:System.Windows.Controls.Slider" /> 控件绘制一组刻度线的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Fill">
      <summary>获取或设置用于绘制刻度线的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用于绘制刻度线的 <see cref="T:System.Windows.Media.Brush" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.FillProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Fill" /> 依赖项属性。此属性为只读。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed">
      <summary>获取或设置刻度线的增加值的方向。  </summary>
      <returns>如果增加值的方向对于水平的 <see cref="T:System.Windows.Controls.Slider" /> 向左或者对于垂直的 <see cref="T:System.Windows.Controls.Slider" /> 向下，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsDirectionReversedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed" /> 依赖项属性。此属性为只读。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 是否显示选择范围。   </summary>
      <returns>如果显示选择范围，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Maximum">
      <summary>获取或设置刻度线最大的可能值。  </summary>
      <returns>刻度线的最大可能值。默认值为 100.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MaximumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Minimum">
      <summary>获取或设置刻度线最小的可能值。  </summary>
      <returns>刻度线的最小可能值。默认值为零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.MinimumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.TickBar.OnRender(System.Windows.Media.DrawingContext)">
      <summary>绘制 <see cref="T:System.Windows.Controls.Slider" /> 控件的刻度线。 </summary>
      <param name="dc">用于绘制刻度的 <see cref="T:System.Windows.Media.DrawingContext" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Placement">
      <summary>获取或设置与 <see cref="T:System.Windows.Controls.Slider" /> 控件的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 相关的刻度线显示位置。  </summary>
      <returns>标识在 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Style" /> 布局中 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 位置的 <see cref="T:System.Windows.Controls.Primitives.TickBarPlacement" /> 枚举值。默认值为 <see cref="F:System.Windows.Controls.Primitives.TickBarPlacement.Top" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.PlacementProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace">
      <summary>获取或设置包含为 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 指定的刻度线的区域的空间缓冲区。  </summary>
      <returns>表示刻度线的行或列的任意一侧的总缓冲区的一个值。默认值为零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.ReservedSpaceProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd">
      <summary>获取或设置选择的终点。  </summary>
      <returns>选择值范围中的最后一个值。默认值为 -1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionEndProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.SelectionStart">
      <summary>获取或设置选择的起点。   </summary>
      <returns>选择值范围中的第一个值。默认值为 -1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.SelectionStartProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.TickFrequency">
      <summary>获取或设置刻度线之间的间隔。  </summary>
      <returns>刻度线之间的距离。默认值为 1 (1.0)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TickFrequencyProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.TickBar.Ticks">
      <summary>获取或设置刻度线的位置。  </summary>
      <returns>指定刻度线位置的 <see cref="T:System.Windows.Media.DoubleCollection" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBar.TicksProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> 依赖项属性。此属性为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickBarPlacement">
      <summary>指定 <see cref="T:System.Windows.Controls.Primitives.TickBar" /> 相对于 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Bottom">
      <summary>刻度条放置在 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的下方。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Left">
      <summary>刻度条放置在 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的左侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Right">
      <summary>刻度条放置在 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的右侧。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Top">
      <summary>刻度条放置在 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的上方。 </summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.TickPlacement">
      <summary>指定 <see cref="T:System.Windows.Controls.Slider" /> 控件中的刻度线相对于该控件实现的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.Both">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，刻度线出现在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 条的上方和下方，对于垂直 <see cref="T:System.Windows.Controls.Slider" />，刻度线出现在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的左侧和右侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.BottomRight">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，刻度线出现在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 下方，对于垂直 <see cref="T:System.Windows.Controls.Slider" />，刻度线出现在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 右侧。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.None">
      <summary>未出现刻度线。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.TickPlacement.TopLeft">
      <summary>对于水平 <see cref="T:System.Windows.Controls.Slider" />，刻度线出现在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 上方，对于垂直 <see cref="T:System.Windows.Controls.Slider" />，刻度线出现在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 左侧。 </summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>可切换状态的控件基类，例如 <see cref="T:System.Windows.Controls.CheckBox" />。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>在选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" />  路由事件的方法。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>在 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 的状态既不是开也不是关时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" />  路由事件的方法。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>获取或设置是否选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />。   </summary>
      <returns>如果 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 已选中，则为 true；如果 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 未选中，则为 false；否则为 null。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>确定该控件是支持两种状态还是三种状态。   </summary>
      <returns>如果控件支持三种状态，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 引发 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 事件时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>当用鼠标或键盘单击控件时调用。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>作为 WPF 基础结构的一部分，为此控件提供相应的 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> 实现。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 引发 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 事件时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>由 <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> 方法调用以实现切换行为。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
      <summary>当 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 引发 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 事件时调用。</summary>
      <param name="e">
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>返回 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 对象的字符串表示形式。 </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 对象的字符串表示形式。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>在未选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent">
      <summary>标识 <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" />  路由事件的方法。 </summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked" /> 路由事件的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel">
      <summary>用来排列溢出的 <see cref="T:System.Windows.Controls.ToolBar" /> 项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.ArrangeOverride(System.Windows.Size)">
      <summary>排列 <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> 对象的内容并调整其大小。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" /> 的大小。</returns>
      <param name="arrangeBounds">工具栏溢出面板用来放置子元素的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>创建一个新的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</summary>
      <returns>新集合。</returns>
      <param name="logicalParent">新集合的逻辑父级。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.MeasureOverride(System.Windows.Size)">
      <summary>重新测量 <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />。 </summary>
      <returns>所需大小。</returns>
      <param name="constraint">约束大小是上限。返回值不应超过此大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth">
      <summary>在项溢出到下一行之前获取或设置溢出 <see cref="T:System.Windows.Controls.ToolBar" /> 的建议宽度。  </summary>
      <returns>表示 <see cref="T:System.Windows.Controls.ToolBar" /> 的建议宽度的双精度值。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth" /> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToolBarPanel">
      <summary>在 <see cref="T:System.Windows.Controls.ToolBar" /> 中排列 <see cref="T:System.Windows.Controls.ToolBar" /> 项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.ArrangeOverride(System.Windows.Size)">
      <summary>在 <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 中排列 <see cref="T:System.Windows.Controls.ToolBar" /> 项并调整其大小。</summary>
      <returns>面板的大小。</returns>
      <param name="arrangeSize">
        <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 用于定位其子级的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToolBarPanel.MeasureOverride(System.Windows.Size)">
      <summary>重新测量工具栏面板。</summary>
      <returns>所需的面板大小。</returns>
      <param name="constraint">测量约束；<see cref="T:System.Windows.Controls.Primitives.ToolBarPanel" /> 不能返回大于该约束的大小。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Track">
      <summary>表示一个处理 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件的定位和大小调整的控件基元和两个用于设置 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 控件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Track" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ArrangeOverride(System.Windows.Size)">
      <summary>创建 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的布局。</summary>
      <returns>要用于 <see cref="T:System.Windows.Controls.Primitives.Track" /> 内容的 <see cref="T:System.Windows.Size" />。</returns>
      <param name="arrangeSize">为 <see cref="T:System.Windows.Controls.Primitives.Track" /> 提供的区域。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton">
      <summary>获取减小 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。</summary>
      <returns>按下 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时减小 <see cref="T:System.Windows.Controls.Primitives.Track" /> 控件的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。默认值为具有默认设置的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 控件。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.GetVisualChild(System.Int32)">
      <summary>获取位于指定索引位置的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的子元素。</summary>
      <returns>返回可视子元素列表中位于指定索引位置的 <see cref="T:System.Windows.Controls.Primitives.Track" /> 对象。索引必须是一个介于零 (0) 到 <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> 属性值减一 (1) 所得的数值之间的数字。</returns>
      <param name="index">子级的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的索引大于 <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount" /> 属性值减一 (1) 所得的数值。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton">
      <summary>获取增加 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。</summary>
      <returns>按下 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时增加 <see cref="T:System.Windows.Controls.Primitives.Track" /> 控件的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" />。默认值为具有默认设置的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed">
      <summary>获取或设置 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 的增加方向是否与默认方向反向。  </summary>
      <returns>如果 <see cref="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton" /> 和 <see cref="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton" /> 交换位置并且值增加的方向反向，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.IsDirectionReversedProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Maximum">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的最大可能 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 的最大允许 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MaximumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Maximum" /> 依赖项属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.MeasureOverride(System.Windows.Size)">
      <summary>测量 <see cref="T:System.Windows.Controls.Primitives.Track" /> 及其组件所要求的布局大小。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 所要求的布局 <see cref="T:System.Windows.Size" />。</returns>
      <param name="availableSize">轨迹的可用空间的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Minimum">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的最小可能 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 的最小允许 <see cref="P:System.Windows.Controls.Primitives.Track.Value" />。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.MinimumProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Minimum" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Orientation">
      <summary>获取或设置一个值，该值指示是水平还是垂直显示 <see cref="T:System.Windows.Controls.Primitives.Track" />。  </summary>
      <returns>一个 <see cref="T:System.Windows.Controls.Orientation" /> 枚举值，该值指示是水平还是垂直显示 <see cref="T:System.Windows.Controls.Primitives.Track" />。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.OrientationProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Orientation" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Thumb">
      <summary>获取用于更改 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。</summary>
      <returns>与 <see cref="T:System.Windows.Controls.Primitives.Track" /> 一起使用的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。默认值为具有默认设置的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 控件。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.Value">
      <summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的当前值，该值由 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 控件的位置确定。  </summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Track" /> 的当前值。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromDistance(System.Double,System.Double)">
      <summary>计算当 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移动时在 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 中的更改。</summary>
      <returns>在 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 中的更改，它对应于 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的位移。</returns>
      <param name="horizontal">
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的水平位移。</param>
      <param name="vertical">
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的垂直位移。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Track.ValueFromPoint(System.Windows.Point)">
      <summary>计算沿 <see cref="T:System.Windows.Controls.Primitives.Track" /> 上从 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 到指定点的距离。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 和指定的 <paramref name="pt" /> 值之间的距离。</returns>
      <param name="pt">指定的点。</param>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ValueProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.Value" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.ViewportSize">
      <summary>获取或设置可见的可滚动内容部分的大小。  </summary>
      <returns>可滚动内容的可见区域的大小。默认值为 <see cref="F:System.Double.NaN" />，它表示未定义内容的大小。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Track.ViewportSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.Track.ViewportSize" /> 依赖项属性。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount">
      <summary>获取 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的子元素数。</summary>
      <returns>一个 0 到 2 之间的整数，它指定 <see cref="T:System.Windows.Controls.Primitives.Track" /> 中的子元素数。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.UniformGrid">
      <summary>提供一种在所有单元格大小相同的网格中安排内容的方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.ArrangeOverride(System.Windows.Size)">
      <summary>通过在所有子元素之间平均分配空间来定义 <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> 的布局。</summary>
      <returns>为显示可见子元素而呈现的网格的实际 <see cref="T:System.Windows.Size" />。</returns>
      <param name="arrangeSize">供网格使用的区域的 <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Columns">
      <summary>获取或设置网格中的列数。  </summary>
      <returns>网格中的列数。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.ColumnsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn">
      <summary>获取或设置网格第一行中前导空白单元格的数量。  </summary>
      <returns>网格第一行中空白单元格的数量。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.FirstColumnProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(System.Windows.Size)">
      <summary>通过测量所有子元素计算 <see cref="T:System.Windows.Controls.Primitives.UniformGrid" /> 的期望大小。</summary>
      <returns>基于网格的子内容和 <paramref name="constraint" /> 参数的期望 <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">网格可用区域的 <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.UniformGrid.Rows">
      <summary>获取或设置网格中的行数。  </summary>
      <returns>网格中的行数。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.UniformGrid.RowsProperty">
      <summary>标识 <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>提供对绑定定义的高级别访问，绑定将绑定目标对象（通常为 WPF 元素）的属性与任何数据源（例如数据库、XML 文件或包含数据的任何对象）连接起来。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>使用初始路径初始化 <see cref="T:System.Windows.Data.Binding" /> 类的新实例。</summary>
      <param name="path">绑定的初始 <see cref="P:System.Windows.Data.Binding.Path" />。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>为 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件添加处理程序。 </summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>为 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件添加处理程序。 </summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要添加的处理程序。</param>
    </member>
    <member name="P:System.Windows.Data.Binding.AsyncState">
      <summary>获取或设置传递给异步数据调度程序的不透明数据。</summary>
      <returns>传递给异步数据调度程序的数据。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>获取或设置一个值，该值指示是否计算相对于数据项或 <see cref="T:System.Windows.Data.DataSourceProvider" /> 对象的 <see cref="P:System.Windows.Data.Binding.Path" />。</summary>
      <returns>如果计算相对于数据项本身的路径，则为 false；否则为 true。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>获取或设置要使用的转换器。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.IValueConverter" /> 类型的值。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>获取或设置计算转换器要使用的区域性。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>获取或设置要传递给 <see cref="P:System.Windows.Data.Binding.Converter" /> 的参数。</summary>
      <returns>要传递给 <see cref="P:System.Windows.Data.Binding.Converter" /> 的参数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.DoNothing">
      <summary>用作返回值，以指示绑定引擎不要执行任何操作。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>获取或设置要用作绑定源对象的元素的名称。</summary>
      <returns>Name 属性的值或要使用的元素的 x:Name 指令。只有通过 RegisterName 将元素注册到适当的 <see cref="T:System.Windows.NameScope" /> 后，才能在代码中引用这些元素。有关更多信息，请参见 WPF XAML 名称范围。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
      <summary>返回一个附加到指定对象的绑定所使用的 XML 命名空间管理器对象。 </summary>
      <returns>一个返回的对象，用于查看与传递的对象元素上的绑定有关的 XML 命名空间。此对象应强制转换为 <see cref="T:System.Xml.XmlNamespaceManager" />。</returns>
      <param name="target">要从中获取命名空间信息的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 参数不能为 null。</exception>
    </member>
    <member name="F:System.Windows.Data.Binding.IndexerName">
      <summary>用作 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> 的 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> 以指示索引器属性已更改。 </summary>
    </member>
    <member name="P:System.Windows.Data.Binding.IsAsync">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Data.Binding" /> 是否应异步获取和设置值。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>获取或设置一个值，该值指示绑定的数据流方向。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 值之一。默认值为 <see cref="F:System.Windows.Data.BindingMode.Default" />，它返回目标依赖项属性的默认绑定模式值。但是，每个依赖项属性的默认值都不同。一般情况下，用户可编辑控件属性（例如文本框和复选框的属性）默认为双向绑定，而多数其他属性默认为单向绑定。确定依赖项属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定目标传输到绑定源时是否引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件。</summary>
      <returns>如果绑定源值更新时应当引发 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定源传输到绑定目标时是否引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件。</summary>
      <returns>如果绑定目标值更新时应当引发 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>获取或设置一个值，该值指示是否对绑定对象引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
      <returns>如果在源更新过程中出现验证错误时应对绑定对象引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>获取或设置绑定源属性的路径。</summary>
      <returns>绑定源的路径。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>通过指定绑定源相对于绑定目标的位置，获取或设置绑定源。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.RelativeSource" /> 对象，该对象指定要使用的绑定源的相对位置。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>移除 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的处理程序。 </summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <summary>移除 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的处理程序。 </summary>
      <param name="element">侦听事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</param>
      <param name="handler">要移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
      <summary>设置一个附加到给定元素的绑定所使用的命名空间管理器对象。 </summary>
      <param name="target">要从中获取命名空间信息的对象。</param>
      <param name="value">用于计算传递的元素中的命名空间的 <see cref="T:System.Xml.XmlNamespaceManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializePath">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.Binding.Path" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeSource">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.Binding.Source" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.Binding.ValidationRules" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>获取或设置要用作绑定源的对象。</summary>
      <returns>要用作绑定源的对象。</returns>
    </member>
    <member name="E:System.Windows.Data.Binding.SourceUpdated">
      <summary>当值从绑定目标传输到绑定源时发生，但只针对 <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 值设置为 true 的绑定。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.SourceUpdatedEvent">
      <summary>标识 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件。</summary>
    </member>
    <member name="E:System.Windows.Data.Binding.TargetUpdated">
      <summary>当值从绑定源传输到绑定目标时发生，但只针对 <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 值设置为 true 的绑定。</summary>
    </member>
    <member name="F:System.Windows.Data.Binding.TargetUpdatedEvent">
      <summary>标识 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
      <summary>获取或设置一个处理程序，您可以使用它提供自定义逻辑，用于处理绑定引擎在绑定源值的更新过程中遇到的异常。只有在将 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 与绑定进行关联之后，这才是适用的。</summary>
      <returns>一个方法，此方法提供自定义逻辑，用于处理绑定引擎在绑定源值的更新过程中遇到的异常。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>获取或设置一个值，该值确定绑定源更新的执行时间。</summary>
      <returns>
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值之一。默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，它返回目标依赖项属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。但是，多数依赖项属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。确定依赖项属性的默认 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的编程方法是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 来获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 属性的值。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</summary>
      <returns>如果包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</summary>
      <returns>如果包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <summary>获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</summary>
      <returns>如果包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidationRules">
      <summary>获取用于检查用户输入有效性的规则集合。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.XmlNamespaceManager">
      <summary>获取或设置用于在 XML 绑定中执行可以识别命名空间的 XPath 查询的 <see cref="T:System.Xml.XmlNamespaceManager" />。</summary>
      <returns>用于在 XML 绑定中执行可以识别命名空间的 XPath 查询的 <see cref="T:System.Xml.XmlNamespaceManager" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
      <summary>标识 <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 附加属性。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.XPath">
      <summary>获取或设置一个 XPath 查询，该查询返回要使用的 XML 绑定源的值。</summary>
      <returns>XPath 查询。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>定义 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> 和 <see cref="T:System.Windows.Data.MultiBinding" /> 类的公共特性。 </summary>
    </member>
    <member name="P:System.Windows.Data.BindingBase.BindingGroupName">
      <summary>获取或设置此绑定所属的 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称。</summary>
      <returns>此绑定所属的 <see cref="T:System.Windows.Data.BindingGroup" /> 的名称。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.Delay">
      <summary>在毫秒获取或设置时，，在更新绑定源前等待，在该目标的值更改后。</summary>
      <returns>时间，以毫秒为单位，在更新绑定源前等待。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>获取或设置当绑定无法返回值时要使用的值。</summary>
      <returns>默认值为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应在此绑定和扩展应用的属性上设置的对象。</summary>
      <returns>要在绑定目标属性上设置的值。</returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。可能为 null；有关更多信息，请参见备注部分。</param>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
      <summary>返回一个值，该值指示序列化进程是否应当对此类的实例的 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 有效属性值进行序列化。</summary>
      <returns>如果应对 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 属性值进行序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
      <summary>返回一个值，该值指示是否应序列化 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 属性。</summary>
      <returns>如果应序列化 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>获取或设置一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</summary>
      <returns>一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>获取或设置当源的值为 null 时在目标中使用的值。</summary>
      <returns>当源的值为 null 时在目标中使用的值。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>包含有关 <see cref="T:System.Windows.Data.Binding" /> 的单个实例的信息。 </summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>获取此 <see cref="T:System.Windows.Data.BindingExpression" /> 所用的绑定源对象。</summary>
      <returns>此 <see cref="T:System.Windows.Data.BindingExpression" /> 所用的绑定源对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>返回当前 <see cref="T:System.Windows.Data.BindingExpression" /> 的 <see cref="T:System.Windows.Data.Binding" /> 对象。</summary>
      <returns>当前绑定表达式的 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSource">
      <summary>获取此 <see cref="T:System.Windows.Data.BindingExpression" />绑定源对象。</summary>
      <returns>此 <see cref="T:System.Windows.Data.BindingExpression" />绑定源对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName">
      <summary>获取绑定源属性的名称此 <see cref="T:System.Windows.Data.BindingExpression" />的。 </summary>
      <returns>绑定源属性的名称此 <see cref="T:System.Windows.Data.BindingExpression" />的。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>以 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定的形式将当前绑定目标值发送到绑定源属性。</summary>
      <exception cref="T:System.InvalidOperationException">绑定已从其目标分离。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateTarget">
      <summary>强制将数据从绑定源属性传输到绑定目标属性。</summary>
      <exception cref="T:System.InvalidOperationException">绑定已从其目标分离。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>表示 <see cref="T:System.Windows.Data.BindingExpression" />、 <see cref="T:System.Windows.Data.PriorityBindingExpression" />和 <see cref="T:System.Windows.Data.MultiBindingExpression" />的基类。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.BindingGroup">
      <summary>获取 <see cref="T:System.Windows.Data.BindingGroup" /> 此约束表达式属于。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingGroup" /> 此约束表达式属于。，如果 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 不是 <see cref="T:System.Windows.Data.BindingGroup" />，的部分此属性返回 null 。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasError">
      <summary>获取一个值父绑定是否具有失败的验证规则。</summary>
      <returns>true ，如果父绑定具有一个失败的验证规则;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
      <summary>获取一个值父绑定是否具有失败的验证规则。</summary>
      <returns>true ，如果父绑定具有一个失败的验证规则;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.IsDirty">
      <summary>获取或设置一个值绑定目标是否对该源未编写的值。</summary>
      <returns>true ，如果目标对该源未编写的值;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
      <summary>获取此 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象创建的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象创建的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Status">
      <summary>获取绑定表达式的状态。</summary>
      <returns>描述约束表达式状态的 <see cref="T:System.Windows.Data.BindingStatus" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构并且不应在代码中直接使用。</summary>
      <returns>true ，如果该侦听器处理事件;否则， false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这只识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />管理器对象。</param>
      <param name="sender">给予事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.Target">
      <summary>获取表示此约束表达式绑定目标对象的元素。</summary>
      <returns>是此约束表达式绑定目标对象的元素。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.TargetProperty">
      <summary>获取此约束表达式绑定目标属性。</summary>
      <returns>此约束表达式绑定目标属性。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
      <summary>发送当前 绑定目标 值分配给 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定的 绑定源 。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
      <summary>强制从 绑定源 的数据传输到 绑定目标。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate">
      <summary>运行具有 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 属性设置为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />在关联的 <see cref="T:System.Windows.Data.Binding" /> 的所有 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象。此方法不更新源。</summary>
      <returns>true ，如果验证规则成功;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationError">
      <summary>获取向 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 此实例是无效的 <see cref="T:System.Windows.Controls.ValidationError" /> 。</summary>
      <returns>导致 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 此实例是无效的 <see cref="T:System.Windows.Controls.ValidationError" /> 。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpressionBase.ValidationErrors">
      <summary>获取的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合导致 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 此实例是无效的。</summary>
      <returns>的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合导致 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 此实例是无效的。，如果没有错误，该值为 null 。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingGroup">
      <summary>包含用于验证对象绑定和 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.BindingGroup" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.BeginEdit">
      <summary>开始在源中编辑事务在 <see cref="T:System.Windows.Data.BindingGroup" />。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.BindingExpressions">
      <summary>获取在 <see cref="T:System.Windows.Data.BindingGroup" />包含每个绑定的信息 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合。</summary>
      <returns>在 <see cref="T:System.Windows.Data.BindingGroup" />包含每个绑定的信息 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CancelEdit">
      <summary>关闭编辑事务并放弃挂起的更改。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.CanRestoreValues">
      <summary>获取绑定中的每个数据源是否可放弃挂起的更改和还原原始值。</summary>
      <returns>true ，如果在绑定中的每个源可以放弃挂起的更改和还原原始值;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.CommitEdit">
      <summary>所有条件，则验证规则成功，运行所有 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象并更新绑定源。</summary>
      <returns>true ，如果每 <see cref="T:System.Windows.Controls.ValidationRule" /> 成功和值提交到源;否则， false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
      <summary>返回指定的属性和项的建议值。</summary>
      <returns>建议的属性值。 </returns>
      <param name="item">包含指定属性的对象。</param>
      <param name="propertyName">建议值访问的属性。</param>
      <exception cref="T:System.InvalidOperationException">不带指定的项目和属性的绑定。</exception>
      <exception cref="T:System.Windows.Data.ValueUnavailableException">所指定的属性的值不可用，因为转换错误或，因为较早的验证规则失败。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.HasValidationError">
      <summary>获取一个值 <see cref="T:System.Windows.Data.BindingGroup" /> 是否具有失败的验证规则。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Data.BindingGroup" /> 具有失败的验证规则;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.IsDirty">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Data.BindingGroup" /> 是否包含对该源未编写的一个建议的值。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Data.BindingGroup" /> 包含对该源未编写的一个建议的值;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Items">
      <summary>获取绑定对象使用在 <see cref="T:System.Windows.Data.BindingGroup" />的源。</summary>
      <returns>绑定对象使用在 <see cref="T:System.Windows.Data.BindingGroup" />的源。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Name">
      <summary>获取或设置标识 <see cref="T:System.Windows.Data.BindingGroup" />，在 <see cref="T:System.Windows.Data.BindingGroup" />可用于包括和排除约束对象的名称。</summary>
      <returns>标识 <see cref="T:System.Windows.Data.BindingGroup" />的名称。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
      <summary>获取或设置 <see cref="E:System.Windows.Controls.Validation.Error" /> 操作是否出现问题，则 <see cref="T:System.Windows.Controls.ValidationRule" /> 的状态更改。</summary>
      <returns>true ，如果 <see cref="E:System.Windows.Controls.Validation.Error" /> 事件发生时， <see cref="T:System.Windows.Controls.ValidationRule" /> 的状态更改;否则， false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.Owner">
      <summary>获取此对象 <see cref="T:System.Windows.Data.BindingGroup" /> 分配。</summary>
      <returns>此对象 <see cref="T:System.Windows.Data.BindingGroup" /> 分配。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.SharesProposedValues">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Data.BindingGroup" /> 是否重新使用未提交到数据源的目标值。</summary>
      <returns>true ，如果 <see cref="T:System.Windows.Data.BindingGroup" /> 重新使用未提交到数据源的目标值;否则， false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
      <summary>尝试获取指定的属性和项的建议值。</summary>
      <returns>true ，如果值是指定的属性的建议值;否则， false。</returns>
      <param name="item">包含指定属性的对象。</param>
      <param name="propertyName">建议值访问的属性。</param>
      <param name="value">当此方法返回时，包含表示建议的属性值的对象。此参数传递未初始化。</param>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.UpdateSources">
      <summary>运行在具有 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 属性设置为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />、 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />或 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 并保存目标的值到源对象的绑定和 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的类型转换器所有验证规则是否成功。</summary>
      <returns>true ，如果所有验证规则成功;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
      <summary>获取或设置一个包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />的值。</summary>
      <returns> 包括 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />的true ;否则， false。默认值为 true。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
      <summary>运行在具有 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 属性设置为 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />绑定和 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的类型转换器。</summary>
      <returns>true ，如果验证规则成功;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationErrors">
      <summary>获取的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合 <see cref="T:System.Windows.Data.BindingGroup" /> 导致无效。</summary>
      <returns>的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象的集合 <see cref="T:System.Windows.Data.BindingGroup" /> 导致无效。，如果没有错误，该值为 null 。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingGroup.ValidationRules">
      <summary>获取的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合验证在 <see cref="T:System.Windows.Data.BindingGroup" />的源对象。</summary>
      <returns>的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合验证在 <see cref="T:System.Windows.Data.BindingGroup" />的源对象。 </returns>
    </member>
    <member name="T:System.Windows.Data.BindingListCollectionView">
      <summary>表示实现 <see cref="T:System.ComponentModel.IBindingList" /> 的集合的 <see cref="T:System.Windows.Data.CollectionView" />，例如 Microsoft ActiveX 数据对象 (ADO) 数据视图。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
      <summary>根据给定的列表初始化 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 的实例。</summary>
      <param name="list">基础 <see cref="T:System.ComponentModel.IBindingList" />。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.AddNew">
      <summary>开始添加事务并返回挂起的新项。</summary>
      <returns>挂起的新项。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanAddNew">
      <summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
      <returns>如果可以将新项添加到集合中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit">
      <summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
      <returns>如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelEdit">
      <summary>结束编辑事务，并还原项的原始值（如有可能）。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CancelNew">
      <summary>结束添加事务并放弃挂起的新项。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering">
      <summary>获取一个值此视图是否支持启用筛选在实时打开或关闭的数据。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping">
      <summary>获取一个值此视图是否支持启用分组在实时打开或关闭的数据。</summary>
      <returns>所有情况下均为 True。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting">
      <summary>获取一个值此视图是否支持允许对实时打开或关闭的数据。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
      <summary>获取一个值，该值指示视图是否支持自定义筛选。</summary>
      <returns>如果视图支持自定义筛选，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanFilter">
      <summary>获取一个值，该值指示视图是否支持基于回调的筛选。</summary>
      <returns>该属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanGroup">
      <summary>获取一个值，该值指示视图是否支持分组。</summary>
      <returns>对于 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 的默认实例，该属性总是返回 true。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanRemove">
      <summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
      <returns>如果可以从集合中移除项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CanSort">
      <summary>获取一个值，该值指示集合是否支持排序。</summary>
      <returns>对于 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 的默认实例，该属性总是返回 true。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitEdit">
      <summary>结束编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.CommitNew">
      <summary>结束添加事务并保存挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
      <summary>返回一个值，该值指示给定项是否属于集合视图。</summary>
      <returns>如果项属于集合视图，则为 true；否则为 false。</returns>
      <param name="item">要检查的对象。</param>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Count">
      <summary>获取集合中的记录的估计数。 </summary>
      <returns>以下之一：值含义-1未能确定集合计数。此值可能由“虚拟化”视图返回，这时视图特意不考虑基础集合中的所有项，因为它尝试提高效率，尽量降低整个集合始终都可用这一要求。其他任何整数集合的计数。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem">
      <summary>获取正在当前添加事务过程中添加的项。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" /> 为 true，则为要添加的项；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem">
      <summary>获取集合中正在编辑的项。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> 为 true，则为要编辑的集合中的项；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
      <summary>获取或设置自定义筛选器。</summary>
      <returns>用于指定项的筛选方式的字符串。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection">
      <summary>分离此集合视图的基础集合使集合视图作为垃圾回收。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)">
      <summary>开始指定项的编辑事务。</summary>
      <param name="item">要编辑的项。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
      <summary>检索位于视图中指定位置的项。</summary>
      <returns>位于视图中指定位置的项。</returns>
      <param name="index">项所在位置的索引（从零开始）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="index" /> 超出范围。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
      <summary>获取或设置一个委托，用于将 <see cref="T:System.ComponentModel.GroupDescription" /> 选作父组及其级别的功能。 </summary>
      <returns>一个方法，此方法提供用于将 <see cref="T:System.ComponentModel.GroupDescription" /> 选作父组及其级别的功能的逻辑。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.Groups">
      <summary>获取顶级组。</summary>
      <returns>一个顶级组的只读集合；如果没有任何组，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
      <summary>返回给定项在集合视图中的索引。</summary>
      <returns>集合中的项的索引，如果集合视图中不存在此项，则为 -1。</returns>
      <param name="item">要在集合中查找的对象。</param>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsAddingNew">
      <summary>获取一个值，该值指示是否正在执行添加事务。</summary>
      <returns>如果正在进行添加事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
      <summary>获取或设置一个值，该值指示项列表在应用排序功能和筛选器（如果有）后是否已处于可以进行分组的正确顺序。</summary>
      <returns>如果项列表已处于可以进行分组的正确顺序，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEditingItem">
      <summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
      <returns>如果正在执行编辑事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
      <summary>返回一个值，该值指示最终的（已筛选）视图是否为空。</summary>
      <returns>如果最终的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering">
      <summary>获取或设置一个值筛选数据时间是否启用。</summary>
      <returns>true ，如果筛选数据在实时启用; false ，如果活动筛选未启用; null ，则无法确定的集合视图实现是否启用筛选。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering" /> 不能设置。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping">
      <summary>获取或设置一个值对数据进行实时是否启用。</summary>
      <returns>true ，如果对数据进行实时启用; false ，如果活动分组未启用; null ，则无法确定的集合视图实现是否存在分组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting">
      <summary>获取或设置一个值对数据进行实时是否启用。</summary>
      <returns>true ，如果对数据进行实时启用; false ，如果活动排序未启用; null ，则无法确定的集合视图实现是否存在排序。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting" /> 不能设置。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.ItemProperties">
      <summary>获取一个对象集合，该集合描述集合中项的属性。</summary>
      <returns>一个对象集合，该集合描述集合中项的属性。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties">
      <summary>获取指定属性在实时参与筛选数据字符串的集合。</summary>
      <returns>指定属性在实时参与筛选数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties">
      <summary>获取指定属性在实时参与分组的数据字符串的集合。</summary>
      <returns>指定属性在实时参与分组的数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties">
      <summary>获取指定属性在实时参与排序数据字符串的集合。</summary>
      <returns>指定属性在实时参与排序数据字符串的集合。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
      <param name="position">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">在索引超出范围的情况下引发。 </exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition">
      <summary>获取或设置新项占位符在 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 中的位置。</summary>
      <returns>用于指定新项占位符在 <see cref="T:System.Windows.Data.BindingListCollectionView" /> 中的位置的枚举值之一。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示基础集合中的指定项是否属于视图。</summary>
      <returns>如果指定项属于视图或未对集合视图设置筛选器，则为 true；否则为 false。</returns>
      <param name="item">要检查的项。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)">
      <summary>从集合中移除指定位置的项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0 或大于集合视图中的项数。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>小于零意味着 <paramref name="o1" /> 小于 <paramref name="o2" />，零值意味着它们相等，大于零则意味着 <paramref name="o1" /> 大于 <paramref name="o2" />。</returns>
      <param name="o1">  要比较的第一个对象。</param>
      <param name="o2">  要比较的第二个对象。</param>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>描述绑定中数据流的方向。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.Default">
      <summary>使用绑定目标的默认 <see cref="P:System.Windows.Data.Binding.Mode" /> 值。每个依赖项属性的默认值都不同。一般情况下，用户可编辑控件属性（例如文本框和复选框的属性）默认为双向绑定，而多数其他属性默认为单向绑定。确定依赖项属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>当应用程序启动或数据上下文更改时，更新绑定目标。此绑定类型适用于以下情况：使用当前状态的快照适合使用的或数据状态实际为静态的数据。如果要从源属性初始化具有某个值的目标属性，并且事先不知道数据上下文，则也可以使用此绑定类型。此绑定类型实质上是 <see cref="F:System.Windows.Data.BindingMode.OneWay" /> 绑定的简化形式，在源值不更改的情况下可以提供更好的性能。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>当绑定源（源）更改时，更新绑定目标（目标）属性。此绑定类型适用于绑定的控件为隐式只读控件的情况。例如，可以绑定到如股市代号之类的源。或者，可能目标属性没有用于进行更改（例如表的数据绑定背景色）的控件接口。如果无需监视目标属性的更改，则使用 <see cref="F:System.Windows.Data.BindingMode.OneWay" /> 绑定模式可避免 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 绑定模式的系统开销。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWayToSource">
      <summary>当目标属性更改时更新源属性。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>导致对源属性或目标属性的更改可自动更新对方。此绑定类型适用于可编辑窗体或其他完全交互式 UI 方案。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>提供用于操作绑定的静态方法，包括 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
      <summary>提供对集合使用指定的应用程序的同步机制，在调用 EnableCollectionSynchronization。</summary>
      <param name="collection">访问的集合。</param>
      <param name="accessMethod">要执行的操作。集合。</param>
      <param name="writeAccess">true ，如果 <paramref name="accessMethod" /> 将写入集合;否则， false。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
      <summary>从指定的 <see cref="T:System.Windows.DependencyObject" /> 移除所有绑定，包括 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 类型的绑定。</summary>
      <param name="target">要从中移除绑定的对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="target" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>从属性中移除绑定。（如果有。）</summary>
      <param name="target">要从中移除绑定的对象。</param>
      <param name="dp">要从中移除绑定的依赖项属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionRegistering">
      <summary>出现问题，则数据绑定系统通知集合。</summary>
    </member>
    <member name="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
      <summary>出现问题，则数据绑定系统通知集合视图。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
      <summary>移除指定的集合注册的同步。</summary>
      <param name="collection">移除同步访问的集合。</param>
    </member>
    <member name="P:System.Windows.Data.BindingOperations.DisconnectedSource">
      <summary>获取替换 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 的对象，而项容器从可视化树中移除。</summary>
      <returns>替换 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 的对象，而项容器从可视化树中移除。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
      <summary>使集合在多个线程中捕获并指定应该使用同步对集合的访问的锁定对象。</summary>
      <param name="collection">需要的集合同步访问。</param>
      <param name="lockObject">要锁定的对象，同时访问集合时。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
      <summary>使集合在多个线程中捕获并指定应该使用同步对集合的访问的回调。</summary>
      <param name="collection">需要的集合同步访问。</param>
      <param name="context">传递给回调的对象。</param>
      <param name="synchronizationCallback">调用的回调，当需要对集合的访问。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索在指定属性上设置的 <see cref="T:System.Windows.Data.Binding" /> 对象。</summary>
      <returns>给定属性上设置的 <see cref="T:System.Windows.Data.Binding" /> 对象，或 null（如果尚未设置 <see cref="T:System.Windows.Data.Binding" /> 对象）。</returns>
      <param name="target">
        <paramref name="dp" /> 所在的对象。</param>
      <param name="dp">从中检索绑定的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索在指定属性上设置的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</summary>
      <returns>给定属性上设置的 <see cref="T:System.Windows.Data.BindingBase" /> 对象，或 null（如果尚未设置绑定对象）。</returns>
      <param name="target">
        <paramref name="dp" /> 所在的对象。</param>
      <param name="dp">从中检索 <see cref="T:System.Windows.Data.BindingBase" /> 对象的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回与指定对象上的指定的绑定目标关联的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。</summary>
      <returns>与给定属性关联的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，或为 null（如果不存在此类对象）。如果 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象是在该属性上设置的，则会返回 <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />。</returns>
      <param name="target">
        <paramref name="dp" />所在的绑定目标对象。</param>
      <param name="dp">从中检索 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索在指定属性上设置的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</summary>
      <returns>给定属性上设置的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象，或 null（如果尚未设置绑定对象）。</returns>
      <param name="target">
        <paramref name="dp" /> 所在的对象。</param>
      <param name="dp">从中检索 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索在指定属性上设置的 <see cref="T:System.Windows.Data.MultiBinding" /> 对象。</summary>
      <returns>给定属性上设置的 <see cref="T:System.Windows.Data.MultiBinding" /> 对象，或 null（如果尚未设置 <see cref="T:System.Windows.Data.MultiBinding" /> 对象）。</returns>
      <param name="target">
        <paramref name="dp" /> 所在的对象。</param>
      <param name="dp">从中检索绑定的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回与指定对象的指定绑定目标属性关联的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象。</summary>
      <returns>与给定属性关联的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象，或为 null（如果不存在此类对象）。</returns>
      <param name="target">
        <paramref name="dp" />所在的绑定目标对象。</param>
      <param name="dp">从中检索 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>检索在指定属性上设置的 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</summary>
      <returns>给定属性上设置的 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象，或 null（如果尚未设置 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象）。</returns>
      <param name="target">
        <paramref name="dp" /> 所在的对象。</param>
      <param name="dp">从中检索绑定的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回与指定对象的指定绑定目标属性关联的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象。</summary>
      <returns>与给定属性关联的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象，或为 null（如果不存在此类对象）。</returns>
      <param name="target">
        <paramref name="dp" />所在的绑定目标对象。</param>
      <param name="dp">从中检索 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 对象的绑定目标属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 和 <paramref name="dp" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
      <summary>获取具有无效 value 或 value 尚未更新 source 目标的所有 <see cref="T:System.Windows.Data.BindingGroup" /> 对象。</summary>
      <returns>value 或目标 value 尚未更新的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象的集合关联具有指定的元素且具有无效 source。</returns>
      <param name="root">绑定组的根 <see cref="T:System.Windows.UIElement" /> 访问。此方法返回与此元素关联或子代元素的 <see cref="T:System.Windows.Data.BindingGroup" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
      <summary>获取具有无效 value 或 value 尚未更新 source 目标的所有 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</summary>
      <returns>value 或目标 value 尚未更新的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象的集合关联具有指定的元素且具有无效 source。</returns>
      <param name="root">绑定组的根 <see cref="T:System.Windows.UIElement" /> 访问。此方法返回与此元素关联或子代元素的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary>返回一个值，该值指示指定的属性当前是否是数据绑定的。</summary>
      <returns>如果指定的属性为数据绑定的，则为 true；否则为 false。</returns>
      <param name="target">
        <paramref name="dp" /> 所在的对象。</param>
      <param name="dp">要检查的依赖项属性。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="target" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>创建 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的新实例，并将其与指定的绑定目标属性关联。</summary>
      <returns>为指定的属性创建并与之相关联的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的实例。<see cref="T:System.Windows.Data.BindingExpressionBase" /> 类是 <see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.MultiBindingExpression" /> 和 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 的基类。</returns>
      <param name="target">绑定的绑定目标。</param>
      <param name="dp">绑定的目标属性。</param>
      <param name="binding">描述绑定的 <see cref="T:System.Windows.Data.BindingBase" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dp" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> 参数不能为 null。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingStatus">
      <summary>描述绑定的状态。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Active">
      <summary>已成功激活绑定。这意味着绑定已附加到其绑定目标（目标）属性，并且已找到绑定源（源），解析 Path 和/或 XPath 并开始传输值。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
      <summary>绑定正在等待异步操作完成。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Detached">
      <summary>绑定已从其目标属性分离。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Inactive">
      <summary>绑定尚未激活。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.PathError">
      <summary>绑定无法解析源路径。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.Unattached">
      <summary>绑定尚未附加到其目标属性。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateSourceError">
      <summary>绑定无法将值发送到源属性。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingStatus.UpdateTargetError">
      <summary>绑定未能成功返回源值以更新目标值。有关更多信息，请参见 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 的备注。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionContainer">
      <summary>保存要用在 <see cref="T:System.Windows.Data.CompositeCollection" /> 中的现有集合结构，如 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 或 <see cref="T:System.Data.DataSet" />。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.CollectionContainer" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionContainer.Collection">
      <summary>获取或设置要添加的集合。 </summary>
      <returns>要添加的集合。默认值为空集合。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.CollectionChanged">
      <summary>当包含的集合更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Data.CollectionContainer.CollectionProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionContainer.CollectionChanged" /> 事件。</summary>
      <param name="args">事件数据。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>处理集中事件表中的事件。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.ShouldSerializeCollection">
      <summary>指示是否应持久保存 <see cref="P:System.Windows.Data.CollectionContainer.Collection" /> 属性。 </summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>在包含的集合更改后发生。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Data.CollectionRegisteringEventArgs">
      <summary>为 <see cref="E:System.Windows.Data.BindingOperations.CollectionRegistering" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection">
      <summary>获取集合注册跨线程访问。</summary>
      <returns>跨线程访问将注册的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent">
      <summary>具有集合的父注册。</summary>
      <returns>集合的父注册的。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionSynchronizationCallback">
      <summary>表示同步跨线程访问的集合的方法。</summary>
      <param name="collection">访问集合在除创建它的类型以外的线程。</param>
      <param name="context">用于同步的对象集合。</param>
      <param name="accessMethod">对集合操作的方法的委托。</param>
      <param name="writeAccess">true ，如果对集合的 <paramref name="accessMethod" /> 编写;否则， false。</param>
    </member>
    <member name="T:System.Windows.Data.CollectionView">
      <summary>表示用于分组、排序、筛选和导航数据集合的视图。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
      <summary>初始化表示指定集合视图的 <see cref="T:System.Windows.Data.CollectionView" /> 类的新实例。 </summary>
      <param name="collection">基础集合。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges">
      <summary>获取一个值除了创建的类型以外的线程 <see cref="T:System.Windows.Data.CollectionView" /> 是否可以更改 <see cref="P:System.Windows.Data.CollectionView.SourceCollection" />。 </summary>
      <returns>true ，如果除了创建 <see cref="T:System.Windows.Data.CollectionView" /> 内容之外的线程可以更改 <see cref="P:System.Windows.Data.CollectionView.SourceCollection" />;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanFilter">
      <summary>获取一个值，该值指示视图是否支持筛选。</summary>
      <returns>如果视图支持筛选，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanGroup">
      <summary>获取一个值，该值指示视图是否支持分组。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CanSort">
      <summary>获取一个值，该值指示视图是否支持排序。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearChangeLog">
      <summary>从更改日志中清除所有挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ClearPendingChanges">
      <summary>清除非托管更改为集合。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CollectionChanged">
      <summary>在视图更改时发生。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Comparer">
      <summary>返回可用于比较视图中的项的对象。</summary>
      <returns>可用于比较视图中的项的 <see cref="T:System.Collections.IComparer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Contains(System.Object)">
      <summary>返回一个值，该值指示指定项是否属于视图。</summary>
      <returns>如果项属于视图，则为 true；否则为 false。</returns>
      <param name="item">要检查的对象。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Count">
      <summary>获取视图中的记录数。</summary>
      <returns>视图中的记录数，或 –1（如果记录数未知）。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Culture">
      <summary>获取或设置排序期间使用的区域性信息。</summary>
      <returns>排序期间使用的区域性信息。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanged">
      <summary>在 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 更改后发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.CurrentChanging">
      <summary>在 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 正在更改时发生。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentItem">
      <summary>获取视图中的当前项。</summary>
      <returns>视图中的当前项。默认情况下，最开始时集合的第一项为当前项。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.CurrentPosition">
      <summary>获取 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 在（可能经过排序和筛选）视图中的序号位置。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 在（可能经过排序和筛选）视图中的序号位置。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DeferRefresh">
      <summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。</summary>
      <returns>一个可用于释放调用对象的 <see cref="T:System.IDisposable" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.DetachFromSourceCollection">
      <summary>取消对基础集合从 <see cref="T:System.Windows.Data.CollectionView" />。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Filter">
      <summary>获取或设置用于确定某个项是否适合包含在视图中的方法。</summary>
      <returns>一个委托，表示用于确定某个项是否适合包含在视图中的方法。</returns>
      <exception cref="T:System.NotSupportedException">当前实现不支持筛选。 </exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetEnumerator">
      <summary>返回可用于枚举视图中的项的对象。</summary>
      <returns>一个可用于枚举视图中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
      <summary>检索视图中位于从零开始的指定索引处的项。</summary>
      <returns>视图中位于从零开始的指定索引处的项。</returns>
      <param name="index">要检索的项的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。 </exception>
    </member>
    <member name="P:System.Windows.Data.CollectionView.GroupDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，该集合描述集合中的项在视图中的分组方式。</summary>
      <returns>在所有情况下均为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.Groups">
      <summary>获取顶级组的集合，该集合根据 <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> 属性构造而成。</summary>
      <returns>在所有情况下均为 null。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
      <summary>返回指定项所在的索引位置。</summary>
      <returns>指定项所在的索引位置，或 -1（如果该项未知）。</returns>
      <param name="item">要定位的项。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
      <summary>获取一个值，该值指示视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是否超出集合的末尾。</summary>
      <returns>如果视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 超出集合的末尾，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
      <summary>获取一个值，该值指示视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是否位于集合开始位置之前。</summary>
      <returns>如果视图的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 位于集合开始位置之前，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsCurrentInSync">
      <summary>获取一个值，该值指示 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是否位于 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" />。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 位于视图中且位于 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 处，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsDynamic">
      <summary>获取一个值，该值指示基础集合是否提供更改通知。</summary>
      <returns>如果基础集合提供更改通知，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsEmpty">
      <summary>获取一个值，该值指示最终的（已筛选）视图是否为空。</summary>
      <returns>如果最终的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsInUse">
      <summary>获取一个值任何对象是否订阅此 <see cref="T:System.Windows.Data.CollectionView" />事件。</summary>
      <returns>true ，如果任何对象订阅此 <see cref="T:System.Windows.Data.CollectionView" />事件;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
      <summary>获取一个值，该值指示是否有某个未完成的 <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> 正在运行。</summary>
      <returns>如果有某个未完成的 <see cref="M:System.Windows.Data.CollectionView.DeferRefresh" /> 正在运行，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
      <summary>将指定项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 位于视图中，则为 true；否则为 false。</returns>
      <param name="item">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
      <summary>将视图中的第一项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
      <summary>将视图中的最后一项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
      <summary>将视图中位于 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 之后的项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
      <param name="position">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
      <summary>将视图中位于 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 之前的项设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NeedsRefresh">
      <summary>获取一个值，该值指示视图是否需要刷新。</summary>
      <returns>如果视图需要刷新，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.NewItemPlaceholder">
      <summary>获取集合中表示新项的对象。</summary>
      <returns>集合中表示新项的对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
      <summary>返回一个值，该值指示视图是否可以更改作为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</summary>
      <returns>如果侦听器取消了更改，则为 false；否则为 true。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>当 <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> 属性更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>由基类调用，以通知派生类 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件已发送到消息队列。</summary>
      <param name="args">添加到更改日志的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 事件。 </summary>
      <param name="args">要传递给事件处理程序的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 事件。</summary>
      <param name="sender">事件的发送方。</param>
      <param name="args">要传递给事件处理程序的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanged">
      <summary>引发 <see cref="E:System.Windows.Data.CollectionView.CurrentChanged" /> 事件。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging">
      <summary>引发一个不可取消的 <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> 事件。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
      <summary>用指定的参数引发 <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> 事件。</summary>
      <param name="args">有关事件的信息。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>用指定的参数引发 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</summary>
      <param name="e">要引发的事件的参数。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示基础集合中的指定项是否属于视图。</summary>
      <returns>如果指定项属于视图或未对集合视图设置筛选器，则为 true；否则为 false。</returns>
      <param name="item">要检查的项。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>在派生类中重写时，处理 UI 线程上的单个更改。</summary>
      <param name="args">要处理的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.ProcessPendingChanges">
      <summary>确保对集合的所有挂起的更改进行了。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.Refresh">
      <summary>重新创建视图。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOrDefer">
      <summary>刷新视图或指定视图在延迟循环完成后需要刷新。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.RefreshOverride">
      <summary>重新创建视图。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
      <summary>将指定项和索引设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 和 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性的值。</summary>
      <param name="newItem">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</param>
      <param name="newPosition">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性值的值。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
      <summary>将指定项和索引设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 和 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性的值。可以从派生类的构造函数中调用此方法。</summary>
      <param name="newItem">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 的项。</param>
      <param name="newPosition">要设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentPosition" /> 属性值的值。</param>
      <param name="count">
        <see cref="T:System.Windows.Data.CollectionView" /> 中的项数。 </param>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SortDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.SortDescription" /> 结构的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>在所有情况下均为空 <see cref="T:System.ComponentModel.SortDescriptionCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionView.SourceCollection">
      <summary>返回未筛选的基础集合。</summary>
      <returns>一个表示基础集合的 <see cref="T:System.Collections.IEnumerable" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回可用于枚举视图中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</summary>
      <returns>一个可用于枚举视图中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>在视图更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
      <summary>获取一个值，该值指示是否必须更新更改日志，因为在没有先进入用户界面 (UI) 线程调度程序的情况下，已在其他线程上收到 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 通知。</summary>
      <returns>如果由于在没有先进入用户界面 (UI) 线程调度程序的情况下已在其他线程上收到 <see cref="E:System.Windows.Data.CollectionView.CollectionChanged" /> 通知而必须更新更改日志，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>表示 <see cref="T:System.Windows.Data.CollectionView" /> 对象基于 <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions" /> 创建的组。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>用组的名称初始化 <see cref="T:System.Windows.Data.CollectionViewGroup" /> 类的新实例。</summary>
      <param name="name">此组的名称。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>获取一个值，该值指示此组是否有任何子组。</summary>
      <returns>如果此组位于底层，且没有任何子组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>获取此组下子树中的项数。</summary>
      <returns>此组下子树中的项数（叶）。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>获取此组中包含的直接项。</summary>
      <returns>此组中直接项的只读集合。这可能是子组的集合，如果该组没有任何子组，则为项的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>获取此组的名称。</summary>
      <returns>此组的名称，是将项划分到组时所使用的属性的公共值。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>引发使用提供的参数的 <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> 事件。</summary>
      <param name="e">要引发的事件的参数。</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>获取并设置此组下子树中的项数。</summary>
      <returns>此组下子树中的项数（叶）</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>获取此组中包含的直接项。</summary>
      <returns>此组中直接项的集合。这可能是子组的集合，如果该组没有任何子组，则为项的集合。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>在更改属性值时发生。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <summary>为 <see cref="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView">
      <summary>获取集合视图注册跨线程访问。</summary>
      <returns>跨线程访问将注册的集合视图。</returns>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>
        <see cref="T:System.Windows.Data.CollectionView" /> 类的可扩展应用程序标记语言 (XAML) 代理。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.CollectionViewSource" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering">
      <summary>获取一个值集合视图是否支持启用筛选在实时打开或关闭的数据。</summary>
      <returns>true ，如果集合视图支持启用实时筛选打开或关闭;否则， false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping">
      <summary>获取一个值集合视图是否支持启用分组在实时打开或关闭的数据。</summary>
      <returns>true ，如果集合视图支持启用实时分组打开或关闭;否则， false。该注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting">
      <summary>获取一个值集合视图是否支持允许对实时打开或关闭的数据。</summary>
      <returns>true ，如果集合视图支持启用实时排序打开或关闭;否则， false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
      <summary>获取或设置所需视图类型。  </summary>
      <returns>所需视图类型。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>获取或设置用于排序和比较等操作的区域性。 </summary>
      <returns>用于排序和比较等操作的区域性。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。</summary>
      <returns>一个可用于释放调用对象的 <see cref="T:System.IDisposable" /> 对象。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>提供筛选逻辑。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
      <summary>返回给定源的默认视图。</summary>
      <returns>返回一个 <see cref="T:System.ComponentModel.ICollectionView" /> 对象，它是给定源集合的默认视图。</returns>
      <param name="source">一个对绑定源的对象引用。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>获取或设置 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，该集合描述集合中的项在视图中的分组方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />，该集合描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
      <summary>返回一个值，该值指示给定视图是否为 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 集合的默认视图。</summary>
      <returns>如果给定视图为 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 集合的默认视图，或给定视图为 nulll，则为 true；否则为 false。</returns>
      <param name="view">要检查的视图对象。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering">
      <summary>获取一个值 <see cref="T:System.Windows.Data.CollectionViewSource" /> 是否在实时筛选数据。</summary>
      <returns>true ，如果筛选数据在实时启用; false ，如果活动筛选未启用; null ，则无法确定的集合视图实现是否启用筛选。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Data.CollectionViewSource" /> 是否在实时应筛选数据，则可以。</summary>
      <returns>true ，如果活动筛选请求;否则， false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping">
      <summary>获取是否在实时指示 <see cref="T:System.Windows.Data.CollectionViewSource" /> 组数据的值。</summary>
      <returns>true ，如果对数据进行实时是启用; false ，如果活动分组未启用; null ，则无法确定的集合视图实现是否存在分组。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested">
      <summary>获取或设置一 <see cref="T:System.Windows.Data.CollectionViewSource" /> 的值在实时如果组数据，则可以。</summary>
      <returns>true ，如果活动分组请求;否则， false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSorting">
      <summary>获取一个值 <see cref="T:System.Windows.Data.CollectionViewSource" /> 是否在实时数据进行排序。</summary>
      <returns>true ，如果对数据进行实时是启用; false ，如果活动排序未启用; null ，则无法确定的集合视图实现是否存在排序。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested">
      <summary>获取或设置一个值 <see cref="T:System.Windows.Data.CollectionViewSource" /> 是否在实时应对数据进行排序，则可以。</summary>
      <returns>true ，如果活动排序请求;否则， false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties">
      <summary>获取指定属性在实时参与筛选数据字符串的集合。</summary>
      <returns>指定属性在实时参与筛选数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties">
      <summary>获取指定属性在实时参与分组的数据字符串的集合。</summary>
      <returns>指定属性在实时参与分组的数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties">
      <summary>获取指定属性在实时参与排序数据字符串的集合。</summary>
      <returns>指定属性在实时参与排序数据字符串的集合。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>当 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 属性发生更改时调用。</summary>
      <param name="oldCollectionViewType">
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 属性的旧值。</param>
      <param name="newCollectionViewType">
        <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>当 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 属性发生更改时调用。</summary>
      <param name="oldSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 属性的旧值。</param>
      <param name="newSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>处理集中事件表中的事件。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Windows.Data.DataChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>获取或设置 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>获取或设置从其创建此视图的集合对象。   </summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>接收集中事件管理器中的事件。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Windows.Data.DataChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>获取当前与 <see cref="T:System.Windows.Data.CollectionViewSource" /> 的此实例关联的视图对象。  </summary>
      <returns>当前与 <see cref="T:System.Windows.Data.CollectionViewSource" /> 的此实例关联的视图对象。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Data.CollectionViewSource.View" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="T:System.Windows.Data.CompositeCollection">
      <summary>启用要以单个列表形式显示的多个集合和项。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor">
      <summary>创建 <see cref="T:System.Windows.Data.CompositeCollection" /> 类的新实例，该实例为空并且具有默认初始容量。 </summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
      <summary>创建 <see cref="T:System.Windows.Data.CompositeCollection" /> 类的新实例，该实例为空并且具有指定的初始容量。 </summary>
      <param name="capacity">新列表最初可存储的项数。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
      <summary>将指定项添加到此集合。</summary>
      <returns>从零开始的索引，在此处添加新项。</returns>
      <param name="newItem">要添加到集合的新项。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Clear">
      <summary>清除集合。</summary>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.CollectionChanged">
      <summary>在由于添加或移除项而使集合更改时发生。 </summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
      <summary>检查给定项是否在此集合中。</summary>
      <returns>如果集合包含给定项，则为 true；否则为 false。</returns>
      <param name="containItem">要检查的项。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
      <summary>将对象引用从此集合浅表复制到给定数组。</summary>
      <param name="array">复制操作的目标位置的数组。</param>
      <param name="index">目标数组中从零开始的索引，在此处开始复制。</param>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Count">
      <summary>获取此集合中存储的项数。</summary>
      <returns>此集合中存储的项数。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
      <summary>返回此集合中可找到给定项的索引。 </summary>
      <returns>如果项出现在集合中，则返回在集合中可找到给定项的从零开始的索引；否则返回 -1。</returns>
      <param name="indexItem">要检索其索引的项。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
      <summary>将项插入集合中的给定索引处。给定位置后的所有项都向下移动一个位置。</summary>
      <param name="insertIndex">要在其位置插入项的索引。</param>
      <param name="insertItem">要添加到集合的项引用。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围。</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
      <summary>检索或替换位于集合中给定从零开始的偏移量处的项的索引器属性。 </summary>
      <returns>位于从零开始的指定偏移量处的项。</returns>
      <param name="itemIndex">要检索或替换项的从零开始的偏移量。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围。</exception>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>处理集中事件表中的事件。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
      <summary>从集合中移除给定项引用。所有其余项向上移动一个位置。</summary>
      <param name="removeItem">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除位于给定索引处的项。所有其余项向上移动一个位置。</summary>
      <param name="removeIndex">要从其位置移除项的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果索引超出范围。</exception>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>如果对 <see cref="T:System.Collections.ICollection" /> 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回枚举数。</summary>
      <returns>IEnumerator 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>在集合更改后发生。</summary>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>创建的视图。</returns>
    </member>
    <member name="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>如果侦听器已处理事件，则为 true；否则为 false。</returns>
      <param name="managerType">调用此方法的 <see cref="T:System.Windows.WeakEventManager" /> 的类型。这仅识别类型 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 的管理器对象。</param>
      <param name="sender">发出该事件的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Data.DataChangedEventManager">
      <summary>提供 <see cref="T:System.Windows.WeakEventManager" /> 实现，以便可以使用“弱事件侦听器”模式附加 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件的侦听器。</summary>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>将指定的事件处理程序中，调用，当指定的源 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 引发事件时。</summary>
      <param name="source">该源的对象所引发 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <param name="handler">该委托处理 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>将指定侦听器添加到指定源的 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件中。</summary>
      <param name="source">带事件的对象。</param>
      <param name="listener">要作为侦听器添加的对象。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.NewListenerList">
      <summary>返回一个新的对象包含侦听器添加到 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</summary>
      <returns>包含侦听器的新对象。 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</returns>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <summary>从指定的源代码中移除指定的事件处理程序。</summary>
      <param name="source">该源的对象所引发 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <param name="handler">该委托处理 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <summary>将指定的侦听器从指定源的 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件中移除。</summary>
      <param name="source">带事件的对象。</param>
      <param name="listener">要移除的侦听器。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
      <summary>开始对指定源侦听 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</summary>
      <param name="source">带事件的对象。</param>
    </member>
    <member name="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
      <summary>停止对指定源侦听 <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged" /> 事件。</summary>
      <param name="source">要停止侦听的源对象。</param>
    </member>
    <member name="T:System.Windows.Data.DataTransferEventArgs">
      <summary>封装数据传输事件的参数。</summary>
    </member>
    <member name="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>对指定对象以特定于类型的方式调用指定的处理程序。</summary>
      <param name="genericHandler">以特定于类型的方式调用的一般处理程序。</param>
      <param name="genericTarget">要对其调用处理程序的对象。</param>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.Property">
      <summary>获取数据传输事件中涉及的特定绑定目标属性。</summary>
      <returns>已更改的属性。</returns>
    </member>
    <member name="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
      <summary>获取引发事件的绑定的绑定目标对象。</summary>
      <returns>引发事件的绑定的目标对象。</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>提供与 <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> 事件关联的信息和事件数据。</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>获取或设置一个值，该值指示项是否通过筛选器。</summary>
      <returns>如果项通过了筛选器，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>获取筛选器应测试的对象。</summary>
      <returns>筛选器应测试的对象。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <summary>表示用于提供自定义逻辑以根据父组及其级别选择 <see cref="T:System.ComponentModel.GroupDescription" /> 的方法。</summary>
      <returns>基于父组及其级别选择的 <see cref="T:System.ComponentModel.GroupDescription" />。 </returns>
      <param name="group">父组。</param>
      <param name="level">
        <paramref name="group" /> 的级别。</param>
    </member>
    <member name="T:System.Windows.Data.IMultiValueConverter">
      <summary>提供一种在 <see cref="T:System.Windows.Data.MultiBinding" /> 中应用自定义逻辑的方式。</summary>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将源值转换为绑定源的值。数据绑定引擎在将值从绑定源传播给绑定目标时，调用此方法。</summary>
      <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。<see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 的返回值表示转换器没有生成任何值，且绑定将使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />（如果可用），否则将使用默认值。<see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> 的返回值表示绑定不传输值，或不使用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 或默认值。</returns>
      <param name="values">
        <see cref="T:System.Windows.Data.MultiBinding" /> 中源绑定生成的值的数组。值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 表示源绑定没有要提供以进行转换的值。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
    </member>
    <member name="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>将绑定目标值转换为源绑定值。</summary>
      <returns>从目标值转换回源值的值的数组。</returns>
      <param name="value">绑定目标生成的值。</param>
      <param name="targetTypes">要转换到的类型数组。数组长度指示为要返回的方法所建议的值的数量与类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>提供一种将自定义逻辑应用于绑定的方式。</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>转换值。 </summary>
      <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。</returns>
      <param name="value">绑定源生成的值。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>转换值。 </summary>
      <returns>转换后的值。如果该方法返回 null，则使用有效的 null 值。</returns>
      <param name="value">绑定目标生成的值。</param>
      <param name="targetType">要转换到的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
    </member>
    <member name="T:System.Windows.Data.ListCollectionView">
      <summary>表示实现 <see cref="T:System.Collections.IList" /> 的集合的集合视图。 </summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
      <summary>使用所提供的实现 <see cref="T:System.Collections.IList" /> 的集合来初始化 <see cref="T:System.Windows.Data.ListCollectionView" /> 类的新实例。</summary>
      <param name="list">必须实现 <see cref="T:System.Collections.IList" /> 的基础集合。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveComparer">
      <summary>获取或设置在排序时使用的当前活动比较器。</summary>
      <returns>属于活动比较器的 <see cref="T:System.Collections.IComparer" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ActiveFilter">
      <summary>获取或设置当前活动的 <see cref="P:System.Windows.Data.CollectionView.Filter" /> 回调。</summary>
      <returns>活动的 <see cref="P:System.Windows.Data.CollectionView.Filter" /> 回调。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNew">
      <summary>开始添加事务并返回挂起的新项。</summary>
      <returns>挂起的新项。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)">
      <summary>将指定的对象添加到集合。</summary>
      <returns>已添加到集合中的对象。</returns>
      <param name="newItem">要添加到集合中的对象。</param>
      <exception cref="T:System.InvalidOperationException">对象不能使用 <see cref="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" /> 方法添加到 <see cref="T:System.Windows.Data.ListCollectionView" />。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNew">
      <summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
      <returns>如果可以将新项添加到集合中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanAddNewItem">
      <summary>获取一个值，该值指示是否可以向集合中添加指定的对象。</summary>
      <returns>如果可以将指定的对象添加到集合中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanCancelEdit">
      <summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
      <returns>如果集合视图可以放弃挂起的更改并还原所编辑对象的原始值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelEdit">
      <summary>结束编辑事务，并还原项的原始值（如有可能）。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CancelNew">
      <summary>结束添加事务并放弃挂起的新项。</summary>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering">
      <summary>获取一个值集合视图是否支持启用筛选在实时打开或关闭的数据。</summary>
      <returns>所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping">
      <summary>获取一个值集合视图是否支持启用分组在实时打开或关闭的数据。</summary>
      <returns>所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting">
      <summary>获取一个值集合视图是否支持允许对实时打开或关闭的数据。</summary>
      <returns>所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanFilter">
      <summary>获取一个值，该值指示视图是否支持基于回调的筛选。</summary>
      <returns>对于 <see cref="T:System.Windows.Data.ListCollectionView" /> 的默认实例，此属性始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanGroup">
      <summary>获取一个值，该值指示集合视图是否支持分组。</summary>
      <returns>如果集合视图支持分组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanRemove">
      <summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
      <returns>如果可以从集合中移除项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CanSort">
      <summary>获取一个值，该值指示集合视图是否支持排序。</summary>
      <returns>对于 <see cref="T:System.Windows.Data.ListCollectionView" /> 的默认实例，此属性始终返回 true。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitEdit">
      <summary>结束编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.CommitNew">
      <summary>结束添加事务并保存挂起的新项。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
      <summary>比较两个对象并返回一个值，指示一个对象是小于、等于还是大于另一个对象。</summary>
      <returns>如果 <paramref name="o1" /> 小于 <paramref name="o2" />，则小于零；如果 <paramref name="o1" /> 和 <paramref name="o2" /> 相等，则为零；如果 <paramref name="o1" /> 大于 <paramref name="o2" />，则大于零。</returns>
      <param name="o1">要比较的第一个对象。</param>
      <param name="o2">要比较的第二个对象。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
      <summary>返回一个值，该值指示给定项是否属于集合视图。</summary>
      <returns>如果项属于集合视图，则为 true；否则为 false。</returns>
      <param name="item">要检查的对象。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Count">
      <summary>获取记录的估计数量。</summary>
      <returns>以下之一：值含义-1未能确定集合计数。此值可能由“虚拟化”视图返回，这时视图特意不考虑基础集合中的所有项，因为它尝试提高效率，尽量降低整个集合始终都可用这一要求。其他任何整数集合的计数。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentAddItem">
      <summary>获取正在当前添加事务过程中添加的项。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.ListCollectionView.IsAddingNew" /> 为 true，则为要添加的项；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CurrentEditItem">
      <summary>获取集合中正在编辑的项。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.ListCollectionView.IsEditingItem" /> 为 true，则为要编辑的集合中的项；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.CustomSort">
      <summary>获取或设置一个实现 <see cref="T:System.Collections.IComparer" /> 的自定义对象，用于在视图中对项进行排序。</summary>
      <returns>作为 <see cref="T:System.Collections.IComparer" /> 的实现的排序条件。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)">
      <summary>开始指定项的编辑事务。</summary>
      <param name="item">要编辑的项。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Filter">
      <summary>获取或设置用于确定某个项是否适合包含在视图中的方法。</summary>
      <returns>一个委托，表示用于确定某个项是否适合包含在视图中的方法。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetEnumerator">
      <summary>返回可用于枚举视图中的项的对象。</summary>
      <returns>一个可用于枚举视图中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
      <summary>检索位于视图中指定位置的项。</summary>
      <returns>位于视图中指定位置的项。</returns>
      <param name="index">项所在位置的索引（从零开始）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="index" /> 超出范围。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupBySelector">
      <summary>获取或设置一个委托，用于将 <see cref="T:System.ComponentModel.GroupDescription" /> 选作父组及其级别的功能。 </summary>
      <returns>一个方法，此方法提供用于将 <see cref="T:System.ComponentModel.GroupDescription" /> 选作父组及其级别的功能的逻辑。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.GroupDescription" /> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.Groups">
      <summary>获取顶级组。</summary>
      <returns>一个顶级组的只读集合；如果没有任何组，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
      <summary>返回给定数据项在集合中所在位置的索引，如果该项的索引未知，则返回 -1。 </summary>
      <returns>集合中的项的索引，如果集合中不存在此项，则 -1。</returns>
      <param name="item">集合中要检查的对象。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
      <summary>返回一个值，该值指示 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 是否包含此项。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 包含该项，则为 true；否则为 false。</returns>
      <param name="item">要定位的项。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalCount">
      <summary>获取 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中记录的数量。</summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中记录的数量。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
      <summary>返回 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 的一个枚举数。 </summary>
      <returns>
        <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 的一个枚举数。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
      <summary>返回指定项在 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中的索引。</summary>
      <returns>指定项在 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中的索引。</returns>
      <param name="item">要返回其索引的项。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
      <summary>返回 <see cref="P:System.Windows.Data.ListCollectionView.InternalList" /> 中给定索引处的项。</summary>
      <returns>视图中位于从零开始的指定索引处的项。</returns>
      <param name="index">项所在位置的索引。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.InternalList">
      <summary>获取完整的且未经筛选的基础集合。</summary>
      <returns>必须实现 <see cref="T:System.Collections.IList" /> 的基础集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsAddingNew">
      <summary>获取一个值，该值指示是否正在执行添加事务。</summary>
      <returns>如果正在进行添加事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
      <summary>获取或设置一个值，该值指示项列表在应用排序功能和筛选器（如果有）后是否已处于可以进行分组的正确顺序。</summary>
      <returns>如果项列表已处于可以进行分组的正确顺序，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEditingItem">
      <summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
      <returns>如果正在执行编辑事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsEmpty">
      <summary>返回一个值，该值指示最终的（已筛选）视图是否为空。</summary>
      <returns>如果最终的视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsGrouping">
      <summary>获取一个值，该值指示视图中是否有组。</summary>
      <returns>如果视图中有组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveFiltering">
      <summary>获取或设置一个值筛选数据时间是否启用。</summary>
      <returns>true ，如果筛选数据在实时启用; false ，如果活动筛选未启用; null ，则无法确定的集合视图实现是否启用筛选。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveGrouping">
      <summary>获取或设置一个值对数据进行实时是否启用。</summary>
      <returns>true ，如果对数据进行实时启用; false ，如果活动分组未启用; null ，则无法确定的集合视图实现是否存在分组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.IsLiveSorting">
      <summary>获取或设置一个值排序时间是否启用。</summary>
      <returns>true ，如果对数据进行实时启用; false ，如果活动排序未启用; null ，则无法确定的集合视图实现是否存在排序。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" /> 不能设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.ItemProperties">
      <summary>获取一个对象集合，该集合描述集合中项的属性。</summary>
      <returns>一个对象集合，该集合描述集合中项的属性。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties">
      <summary>获取指定属性在实时参与筛选数据字符串的集合。</summary>
      <returns>指定属性在实时参与筛选数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties">
      <summary>获取指定属性在实时参与分组的数据字符串的集合。</summary>
      <returns>指定属性在实时参与分组的数据字符串的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.LiveSortingProperties">
      <summary>获取指定属性在实时参与排序数据字符串的集合。</summary>
      <returns>指定属性在实时参与排序数据字符串的集合。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</summary>
      <returns>如果最终的 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" /> 是视图中的项，则为 true；否则为 false。</returns>
      <param name="position">一个索引位置，位于该位置的项将设置为 <see cref="P:System.Windows.Data.CollectionView.CurrentItem" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">在索引超出范围的情况下引发。 </exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition">
      <summary>获取或设置新项占位符在 <see cref="T:System.Windows.Data.ListCollectionView" /> 中的位置。</summary>
      <returns>用于指定新项占位符在 <see cref="T:System.Windows.Data.ListCollectionView" /> 中的位置的枚举值之一。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged">
      <summary>当 <see cref="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" /> 属性更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>由基类调用，用于通知派生类已将 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件发送到消息队列。</summary>
      <param name="args">添加到更改日志的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="args" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
      <summary>返回一个值，该值指示基础集合中的指定项是否属于视图。</summary>
      <returns>如果指定项属于视图或未对集合视图设置筛选器，则为 true；否则为 false。</returns>
      <param name="item">要检查的项。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>处理 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</summary>
      <param name="args">要处理的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="args" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RefreshOverride">
      <summary>重新创建该视图。</summary>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.Remove(System.Object)">
      <summary>从集合中移除指定的项。</summary>
      <param name="item">要移除的项。</param>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)">
      <summary>从集合中移除指定位置的项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0 或大于集合视图中的项数。</exception>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.SortDescriptions">
      <summary>获取 <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，该集合描述集合中的项在视图中的排序方式。</summary>
      <returns>
        <see cref="T:System.ComponentModel.SortDescription" /> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>小于零的值意味着 <paramref name="o1" /> 小于 <paramref name="o2;" />；零值意味着对象相等；大于零的值则意味着 <paramref name="o1" /> 大于 <paramref name="o2" />。</returns>
      <param name="o1">要比较的第一个对象。</param>
      <param name="o2">要比较的第二个对象。</param>
    </member>
    <member name="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
      <summary>获取一个值，该值指示排序和筛选是否需要数据的私有副本。</summary>
      <returns>如果排序和筛选需要数据的私有副本，则为 true；否则为 false。如果存在 <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter" /> 或 <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer" />，或者两者同时存在，则默认实现返回 true。</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBinding">
      <summary>描述附加到单个绑定目标属性的 <see cref="T:System.Windows.Data.Binding" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.MultiBinding" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Bindings">
      <summary>获取此 <see cref="T:System.Windows.Data.MultiBinding" /> 实例中的 <see cref="T:System.Windows.Data.Binding" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> 对象的集合。<see cref="T:System.Windows.Data.MultiBinding" /> 当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 类型的对象，而不支持 <see cref="T:System.Windows.Data.MultiBinding" /> 或 <see cref="T:System.Windows.Data.PriorityBinding" /> 类型的对象。将 <see cref="T:System.Windows.Data.Binding" /> 子级添加到 <see cref="T:System.Windows.Data.MultiBinding" /> 对象会将该子级隐式添加到 <see cref="T:System.Windows.Data.MultiBinding" /> 对象的 <see cref="T:System.Windows.Data.BindingBase" /> 集合。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Converter">
      <summary>获取或设置用于将源值转换为目标值、或将目标值转换为源值的转换器。</summary>
      <returns>一个 <see cref="T:System.Windows.Data.IMultiValueConverter" /> 类型的值，该值指示要使用的转换器。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterCulture">
      <summary>获取或设置 <see cref="T:System.Globalization.CultureInfo" /> 对象，该对象应用于任何分配给绑定（由 <see cref="T:System.Windows.Data.MultiBinding" /> 包装或是在 <see cref="T:System.Windows.Data.MultiBinding" /> 自身上）的转换器。</summary>
      <returns>有效的 <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ConverterParameter">
      <summary>获取或设置一个作为附加信息传递到转换器的可选参数。</summary>
      <returns>要传递到转换器的参数。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.Mode">
      <summary>获取或设置一个值，该值指示此绑定的数据流的方向。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 值之一。默认值为 <see cref="F:System.Windows.Data.BindingMode.Default" />，它返回目标依赖项属性的默认绑定模式值。但是，每个依赖项属性的默认值都不同。一般情况下，用户可编辑的控件属性（例如 <see cref="P:System.Windows.Controls.TextBox.Text" />）默认为双向绑定，而其他大多数属性默认为单向绑定。确定依赖项属性绑定在默认情况下是单向还是双向的编程方法是：使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 属性的布尔值。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定目标传输到绑定源时是否引发 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 事件。</summary>
      <returns>如果绑定源值更新时应引发 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 事件，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
      <summary>获取或设置一个值，该值指示当值从绑定源传输到绑定目标时是否引发 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 事件。</summary>
      <returns>如果绑定目标值更新时应引发 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 事件，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
      <summary>获取或设置一个值，该值指示是否对绑定元素引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
      <returns>如果在源更新过程中出现验证错误时应对绑定元素引发 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。 </param>
    </member>
    <member name="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
      <summary>获取或设置一个处理程序，您可以使用它提供自定义逻辑，用于处理绑定引擎在绑定源值的更新过程中遇到的异常。这只在您已将 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 与 <see cref="T:System.Windows.Data.MultiBinding" /> 对象相关联时适用。</summary>
      <returns>一个方法，此方法提供自定义逻辑，用于处理绑定引擎在绑定源值的更新过程中遇到的异常。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
      <summary>获取或设置一个值，该值确定绑定源更新的执行时间。</summary>
      <returns>
        <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值之一。默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，它返回目标依赖项属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。但是，多数依赖项属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。确定依赖项属性的默认 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的编程方法是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 来获取属性的属性元数据，然后检查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 属性的值。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors">
      <summary>获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</summary>
      <returns>如果包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions">
      <summary>获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</summary>
      <returns>如果包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors">
      <summary>获取或设置一个值，该值指示是否包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</summary>
      <returns>如果包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBinding.ValidationRules">
      <summary>获取 <see cref="T:System.Windows.Data.MultiBinding" /> 的此实例的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Data.MultiBinding" /> 的此实例的 <see cref="T:System.Windows.Controls.ValidationRule" /> 对象的集合。</returns>
    </member>
    <member name="T:System.Windows.Data.MultiBindingExpression">
      <summary>包含有关 <see cref="T:System.Windows.Data.MultiBinding" />的单个实例的实例信息。</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
      <summary>此实例中获取 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合 <see cref="T:System.Windows.Data.MultiBindingExpression" />。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpression" /> 对象的只读集合。即使返回类型为 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象的集合返回的集合将只包含 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，因为 <see cref="T:System.Windows.Data.MultiBinding" /> 类仅当前支持 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasError">
      <summary>返回一个值任何内部 <see cref="T:System.Windows.Data.Binding" /> 对象或 <see cref="T:System.Windows.Data.MultiBinding" /> 是否具有失败的验证规则。</summary>
      <returns>true ，如果至少有一个内部 <see cref="T:System.Windows.Data.Binding" /> 对象或 <see cref="T:System.Windows.Data.MultiBinding" /> 具有失败的验证规则;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.HasValidationError">
      <summary>获取一个值父绑定是否具有失败的验证规则。</summary>
      <returns>true ，如果父绑定具有一个失败的验证规则;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
      <summary>获取此 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 创建的 <see cref="T:System.Windows.Data.MultiBinding" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 创建的 <see cref="T:System.Windows.Data.MultiBinding" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateSource">
      <summary>发送当前 绑定目标 值分配给 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 绑定的 绑定源 属性。</summary>
    </member>
    <member name="M:System.Windows.Data.MultiBindingExpression.UpdateTarget">
      <summary>强制从 绑定源 属性的数据传输到 绑定目标 属性。</summary>
    </member>
    <member name="P:System.Windows.Data.MultiBindingExpression.ValidationError">
      <summary>获取向 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 此实例是无效的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</summary>
      <returns>导致 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 此实例是无效的 <see cref="T:System.Windows.Controls.ValidationError" /> 对象。</returns>
    </member>
    <member name="T:System.Windows.Data.ObjectDataProvider">
      <summary>包装和创建可以用作绑定源的对象。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
      <summary>根据 <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> 属性的值，立即开始创建请求的对象，或在后台线程上开始创建。</summary>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
      <summary>获取要传递给该构造函数的参数列表。</summary>
      <returns>要传递给该构造函数的参数列表。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
      <summary>获取或设置一个值，该值指示是在辅助线程还是在活动上下文中执行对象创建。</summary>
      <returns>如果为 true，则在辅助线程中执行对象创建；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodName">
      <summary>获取或设置要调用的方法的名称。</summary>
      <returns>要调用的方法的名称。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
      <summary>获取要传递给该方法的参数列表。</summary>
      <returns>要传递给该方法的参数列表。默认值是空列表。</returns>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
      <summary>获取或设置用作绑定源的对象。</summary>
      <returns>对象的实例是从 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />，或 <see cref="T:System.Windows.Data.DataSourceProvider" />（其中的 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 用作 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />）构造的。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> 同时分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，只允许分配一个。</exception>
    </member>
    <member name="P:System.Windows.Data.ObjectDataProvider.ObjectType">
      <summary>获取或设置要创建其实例的对象的类型。</summary>
      <returns>如果 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 未初始化或显式设置为 null，则该属性为 null。如果分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，则 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 返回对象的类型或 null（如果对象为 null）。默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.ObjectDataProvider" /> 同时分配了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，只允许分配一个。</exception>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType">
      <summary>指示是否应保持 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Data.PriorityBinding">
      <summary>描述附加到单个绑定目标属性的 <see cref="T:System.Windows.Data.Binding" /> 对象的集合，该属性从成功生成值的集合中的第一个绑定接收其值。</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.PriorityBinding" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBinding.Bindings">
      <summary>获取 <see cref="T:System.Windows.Data.Binding" /> 对象的集合，该集合是为 <see cref="T:System.Windows.Data.PriorityBinding" /> 的此实例建立的。</summary>
      <returns>
        <see cref="T:System.Windows.Data.Binding" /> 对象的集合。<see cref="T:System.Windows.Data.PriorityBinding" /> 当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 类型的对象，而不支持 <see cref="T:System.Windows.Data.MultiBinding" /> 或 <see cref="T:System.Windows.Data.PriorityBinding" /> 类型的对象。将 <see cref="T:System.Windows.Data.Binding" /> 子级添加到 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象会将该子级隐式添加到 <see cref="T:System.Windows.Data.MultiBinding" /> 对象的 <see cref="T:System.Windows.Data.BindingBase" /> 集合。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.ShouldSerializeBindings">
      <summary>返回一个值，该值指示序列化进程是否应当在此类的实例上对 <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> 属性的有效值进行序列化。</summary>
      <returns>如果 <see cref="P:System.Windows.Data.PriorityBinding.Bindings" /> 属性值应当进行序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <param name="value">要作为子级添加的对象。</param>
    </member>
    <member name="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <param name="text">要添加到该对象的字符串。</param>
    </member>
    <member name="T:System.Windows.Data.PriorityBindingExpression">
      <summary>包含有关 <see cref="T:System.Windows.Data.PriorityBinding" />的单个实例的实例信息。</summary>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
      <summary>获取活动 <see cref="T:System.Windows.Data.BindingExpression" /> 对象。</summary>
      <returns>有效的 <see cref="T:System.Windows.Data.BindingExpression" /> 对象;或 null，因此，如果 <see cref="T:System.Windows.Data.BindingExpression" /> 对象未处于活动状态。虽然返回类型为 <see cref="T:System.Windows.Data.BindingExpressionBase" />，返回的对象是仅 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，因为 <see cref="T:System.Windows.Data.PriorityBinding" /> 类的当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
      <summary>获取 <see cref="T:System.Windows.Data.BindingExpression" /> 对象的集合。 <see cref="T:System.Windows.Data.PriorityBindingExpression" />内此实例的。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpression" /> 对象的只读集合。虽然返回类型为 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 对象的集合，返回的集合只包含 <see cref="T:System.Windows.Data.BindingExpression" /> 对象，因为 <see cref="T:System.Windows.Data.PriorityBinding" /> 类的当前仅支持 <see cref="T:System.Windows.Data.Binding" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.HasValidationError">
      <summary>获取一个值父绑定是否具有失败的验证规则。</summary>
      <returns>true ，如果父绑定具有一个失败的验证规则;否则， false。</returns>
    </member>
    <member name="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
      <summary>获取此 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 创建的 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 创建的 <see cref="T:System.Windows.Data.PriorityBinding" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateSource">
      <summary>更新在活动绑定源。</summary>
    </member>
    <member name="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget">
      <summary>更新在活动绑定目标。 </summary>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>描述使用属性名作为标准对项进行分组。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>用指定的属性名初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
      <param name="propertyName">指定项所属的组的属性名称。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>用指定的属性名和转换器初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
      <param name="propertyName">指定项所属的组的属性名称。如果是 null，则项本身会传递到值转换器。</param>
      <param name="converter">要应用到属性值或项以生成用于确定项所属的组的最终值的 <see cref="T:System.Windows.Data.IValueConverter" /> 对象。转换器可能返回集合，即指示项可能出现在多个组中。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription" /> 类的新实例。</summary>
      <param name="propertyName">指定项所属的组的属性名称。如果是 null，则项本身会传递到值转换器。</param>
      <param name="converter">要应用到属性值或项以生成用于确定项所属的组的最终值的 <see cref="T:System.Windows.Data.IValueConverter" /> 对象。转换器可能返回集合，即指示项可能出现在多个组中。</param>
      <param name="stringComparison">指定项的值与组名称之间的比较的 <see cref="T:System.StringComparison" /> 值。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>获取或设置一个要应用到属性值或项以生成用于确定项所属的组的最终值的转换器。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>返回给定项的组名称。 </summary>
      <returns>给定项的组名称。</returns>
      <param name="item">要返回其组名称的项。</param>
      <param name="level">分组级别。</param>
      <param name="culture">要提供给转换器的 <see cref="T:System.Globalization.CultureInfo" />。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>返回一个值，该值指示组名称和项名称是否匹配，从而项属于组。</summary>
      <returns>如果名称匹配并且项属于组，则为 true，否则为 false。</returns>
      <param name="groupName">要检查的组名称。</param>
      <param name="itemName">要检查的项名称。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>获取或设置用于确定项所属的组的属性名称。</summary>
      <returns>默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>获取或设置一个 <see cref="T:System.StringComparison" /> 值，该值指定项的值（由 <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> 和 <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" /> 确定）和组名称之间的比较。</summary>
      <returns>默认值为 <see cref="T:System.StringComparison" />。Ordinal。</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>实现标记扩展，以描述绑定源相对于绑定目标的位置。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>用初始模式初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 类的一个新实例。</summary>
      <param name="mode">
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值之一。</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
      <summary>用初始模式以及其他用于查找所需相对源的树遍历限定符初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 类的一个新实例。</summary>
      <param name="mode">
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值之一。对于这一相关的签名，该值应当为 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />。</param>
      <param name="ancestorType">要查找的上级节点的 <see cref="T:System.Type" />。</param>
      <param name="ancestorLevel">所有给定类型的上级节点中所需的上级节点的序号位置。 </param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
      <summary>在 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 模式中获取或设置要查找的上级节点的级别。使用 1 表示与绑定目标元素最近的一个级别。</summary>
      <returns>上级节点级别。使用 1 表示与绑定目标元素最近的一个级别。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorType">
      <summary>获取或设置要查找的上级节点的类型。</summary>
      <returns>上级节点的类型。默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.RelativeSource" /> 未处于 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 模式中。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>获取或设置一个 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值，该值描述绑定源相对于绑定目标的位置。</summary>
      <returns>
        <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值之一。默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">此属性在初始化之后是不可变的。不要对此实例更改 <see cref="P:System.Windows.Data.RelativeSource.Mode" />，而应创建一个新的 <see cref="T:System.Windows.Data.RelativeSource" /> 或使用其他静态实例。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.PreviousData">
      <summary>获取一个静态值，该值用于返回为 <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" /> 模式构造的 <see cref="T:System.Windows.Data.RelativeSource" />。</summary>
      <returns>静态 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
      <summary>返回一个应设置为此标记扩展的目标对象属性上的值的对象。对于 <see cref="T:System.Windows.Data.RelativeSource" />，这是另一个 <see cref="T:System.Windows.Data.RelativeSource" />，它使用指定模式的适当的源。</summary>
      <returns>另一个 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
      <param name="serviceProvider">可以为标记扩展提供服务的对象。在此实现中，此参数可以为 null。</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Self">
      <summary>获取一个静态值，该值用于返回为 <see cref="F:System.Windows.Data.RelativeSourceMode.Self" /> 模式构造的 <see cref="T:System.Windows.Data.RelativeSource" />。</summary>
      <returns>静态 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel">
      <summary>指示是否应持久保存 <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType">
      <summary>指示是否应持久保存 <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.TemplatedParent">
      <summary>获取一个静态值，该值用于返回为 <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" /> 模式构造的 <see cref="T:System.Windows.Data.RelativeSource" />。</summary>
      <returns>静态 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>描述相对于绑定目标位置的绑定源的位置。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
      <summary>引用数据绑定元素父链中的上级。您可以使用它绑定到特定类型或其子类的上级。如果您要指定 <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> 和/或 <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />，可以使用此模式。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.PreviousData">
      <summary>允许您绑定所显示数据项列表中以前的数据项（不是包含数据项的控件）。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>引用您对其设置绑定的元素，并允许您将该元素的一个属性绑定到同一元素中的其他属性。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>引用应用了模板（其中有数据绑定元素）的元素。这类似于设置 <see cref="T:System.Windows.TemplateBindingExtension" />，并仅当 <see cref="T:System.Windows.Data.Binding" /> 在模板中时适用。</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
      <summary>表示处理更新绑定源值过程中引发的异常的方法。它必须与 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 一起使用。</summary>
      <returns>通常为下列某项的对象：值说明null忽略任何异常。默认行为（如果没有 <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />）是对异常创建 <see cref="T:System.Windows.Controls.ValidationError" /> 并将其添加到绑定元素的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合。任何对象创建 <see cref="T:System.Windows.Controls.ValidationError" /> 对象，并将 <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> 设置为此对象。将 <see cref="T:System.Windows.Controls.ValidationError" /> 对象添加到绑定元素的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合中。一个 <see cref="T:System.Windows.Controls.ValidationError" /> 对象将 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 对象设置为 <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />。将 <see cref="T:System.Windows.Controls.ValidationError" /> 对象添加到绑定元素的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合中。</returns>
      <param name="bindExpression">出现异常的对象。</param>
      <param name="exception">遇到的异常。</param>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>描述绑定源更新的执行时间。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>绑定目标属性的默认 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。大多数依赖项属性的默认值都为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 属性的默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>仅在调用 <see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> 方法时更新绑定源。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
      <summary>当绑定目标元素失去焦点时，更新绑定源。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
      <summary>当绑定目标属性更改时，立即更新绑定源。</summary>
    </member>
    <member name="T:System.Windows.Data.ValueConversionAttribute">
      <summary>表示允许值转换器的作者指定转换器的实现中涉及的数据类型的特性。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
      <summary>用指定的源类型和目标类型初始化 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 类的新实例。</summary>
      <param name="sourceType">此转换器转换的类型。</param>
      <param name="targetType">此转换器转换为的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetType" /> 参数不能为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
      <summary>返回 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 的此实例的哈希代码。</summary>
      <returns>
        <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 实例的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
      <summary>获取和设置可选值转换器参数对象的类型。</summary>
      <returns>可选值转换器参数对象的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.SourceType">
      <summary>获取此转换器转换的类型。</summary>
      <returns>此转换器转换的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TargetType">
      <summary>获取此转换器转换为的类型。</summary>
      <returns>此转换器转换为的类型。</returns>
    </member>
    <member name="P:System.Windows.Data.ValueConversionAttribute.TypeId">
      <summary>获取此 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 实例的唯一标识符。</summary>
      <returns>此 <see cref="T:System.Windows.Data.ValueConversionAttribute" /> 实例的唯一标识符。</returns>
    </member>
    <member name="T:System.Windows.Data.ValueUnavailableException">
      <summary>当值不可用时由 <see cref="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" /> 方法引发的异常。</summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。</summary>
      <param name="info">承载序列化对象数据的对象。 </param>
      <param name="context">关于来源和目标的上下文信息 </param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)">
      <summary>用指定消息初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。 </summary>
      <param name="message">描述错误的消息。 </param>
    </member>
    <member name="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)">
      <summary>使用指定错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Windows.Data.ValueUnavailableException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误信息。 </param>
      <param name="innerException">导致当前异常的异常。如果 <paramref name="innerException" /> 参数不是空引用（在 Visual Basic 中为 Nothing），则在处理内部异常的 catch 块中引发当前异常。</param>
    </member>
    <member name="T:System.Windows.Data.XmlDataProvider">
      <summary>允许以声明方式访问数据绑定的 XML 数据。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.XmlDataProvider" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.BaseUri">
      <summary> 此类型或成员支持 WPF 基础结构，但不应在代码中直接使用。</summary>
      <returns>基 URI。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.BeginQuery">
      <summary>准备加载内联 XML 或外部 XML 文件，以生成 XML 节点的集合。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Document">
      <summary>获取或设置要用作绑定源的 <see cref="T:System.Xml.XmlDocument" />。</summary>
      <returns>要用作绑定源的 <see cref="T:System.Xml.XmlDocument" />。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.EndInit">
      <summary>表示此元素的初始化已完成。如果没有其他未完成的 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />，则这会导致 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
      <summary>获取或设置一个值，该值指示是在辅助线程还是在活动上下文中执行节点集合创建。</summary>
      <returns>如果在辅助线程中执行节点集合创建，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource">
      <summary>指示是否应持久保存 <see cref="P:System.Windows.Data.XmlDataProvider.Source" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer">
      <summary>指示是否应持久保存 <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath">
      <summary>指示是否应持久保存 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.Source">
      <summary>获取或设置要用作绑定源的 XML 数据文件的 <see cref="T:System.Uri" />。</summary>
      <returns>要用作绑定源的 XML 数据文件的 <see cref="T:System.Uri" />。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
      <returns>基 URI。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
      <summary>获取或设置用于运行 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 查询的 <see cref="T:System.Xml.XmlNamespaceManager" />。</summary>
      <returns>用于运行 <see cref="P:System.Windows.Data.XmlDataProvider.XPath" /> 查询的 <see cref="T:System.Xml.XmlNamespaceManager" />。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XmlSerializer">
      <summary>获取内联 XML 内容。</summary>
      <returns>内联 XML 内容。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlDataProvider.XPath">
      <summary>获取或设置用于生成数据集合的 XPath 查询。</summary>
      <returns>用于生成数据集合的 XPath 查询。默认值为空字符串。</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMapping">
      <summary>声明 统一资源标识符 (URI) 与前缀之间的映射</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
      <summary>使用指定的前缀和 统一资源标识符 (URI) 初始化 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 类的一个新实例。</summary>
      <param name="prefix">要用在 可扩展应用程序标记语言 (XAML) 中的前缀。</param>
      <param name="uri">要为其创建映射的命名空间的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
      <summary>返回一个值，该值指示此 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 是否与指定实例相等。</summary>
      <returns>如果两个实例相同，则为 true；否则为 false。</returns>
      <param name="obj">要比较是否相等的实例。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
      <summary>返回该 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 的哈希代码。</summary>
      <returns>此 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>按值执行相等比较。</summary>
      <returns>如果两个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象相同，则为 true；否则为 false。</returns>
      <param name="mappingA">要比较的第一个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
      <param name="mappingB">要比较的第二个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <summary>按值执行不相等比较。</summary>
      <returns>如果两个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象不相等，则为 true；否则为 false。</returns>
      <param name="mappingA">要比较的第一个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
      <param name="mappingB">要比较的第二个 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</param>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
      <summary>获取或设置要用在 可扩展应用程序标记语言 (XAML) 中的前缀。</summary>
      <returns>与 URI 关联的前缀。默认值为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMapping.Uri">
      <summary>获取或设置要为其创建映射的命名空间的 <see cref="T:System.Uri" />。</summary>
      <returns>命名空间的 URI。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Data.XmlNamespaceMappingCollection">
      <summary>表示 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
      <summary>将 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象添加到此集合中。</summary>
      <param name="mapping">要添加的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。该类型不能为 null。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="mapping" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">如果 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象的 <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
      <summary>将 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象添加到此集合中。</summary>
      <param name="value">要添加的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。该类型不能为 null。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="mapping" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
      <summary>添加文本字符串作为此 <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection" /> 对象的子级。</summary>
      <param name="text">要作为子级添加的文本字符串。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="text" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
      <summary>移除此集合中的所有 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
      <summary>返回一个值，该值指示此集合是否包含指定的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</summary>
      <returns>如果此集合包含指定的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象，则为 true；否则为 false。</returns>
      <param name="mapping">相关的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。该类型不能为 null。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="mapping" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">如果 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象的 <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
      <summary>从指定索引处开始，将集合中的项复制到指定的数组。</summary>
      <param name="array">从集合所复制的项的目标位置的数组。</param>
      <param name="arrayIndex">数组中从零开始的索引，在此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">如果项的数目超过数组的长度。 </exception>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
      <summary>获取集合中的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象数。</summary>
      <returns>集合中的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象数。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
      <summary>返回可用于枚举此集合中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</summary>
      <returns>可用于枚举此集合中的项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
      <summary>获取一个指示此集合是否为只读的值。</summary>
      <returns>该值始终返回 false。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
      <summary>返回一般 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</summary>
      <returns>一般 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
      <summary>从此集合中移除指定的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。</summary>
      <returns>如果已成功移除指定的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象，则为 true，否则为 false。</returns>
      <param name="mapping">要移除的 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象。该类型不能为 null。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="mapping" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">如果 <see cref="T:System.Windows.Data.XmlNamespaceMapping" /> 对象的 <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="value">要添加的子 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="text">要添加到 <see cref="T:System.Object" /> 的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.Adorner">
      <summary>表示用于修饰 <see cref="T:System.Windows.UIElement" /> 的 <see cref="T:System.Windows.FrameworkElement" /> 的抽象类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Adorner.#ctor(System.Windows.UIElement)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Adorner" /> 类的新实例。</summary>
      <param name="adornedElement">装饰器所要绑定到的元素。</param>
      <exception cref="T:System.ArgumentNullException">adornedElement 是 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.Adorner.AdornedElement">
      <summary>获取此装饰器绑定到的 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>此装饰器绑定到的元素。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
      <summary>基于当前应用于装饰元素的转换，返回装饰器的 <see cref="T:System.Windows.Media.Transform" />。</summary>
      <returns>要应用于装饰器的转换。</returns>
      <param name="transform">当前应用于装饰元素的转换。</param>
    </member>
    <member name="M:System.Windows.Documents.Adorner.GetLayoutClip(System.Windows.Size)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />。</summary>
      <returns>可能的剪辑几何图形。请参见"备注"。</returns>
      <param name="layoutSlotSize">此元素提供的可用大小。</param>
    </member>
    <member name="P:System.Windows.Documents.Adorner.IsClipEnabled">
      <summary>获取或设置一个指示是否启用装饰器剪辑的值。</summary>
      <returns>一个 Boolean 值，该值指示是否启用装饰器剪辑。如果此属性为 false，则不剪裁装饰器。如果此属性为 true，则使用与装饰元素相同的剪辑几何图形来剪辑装饰器。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.Adorner.MeasureOverride(System.Windows.Size)">
      <summary>实现装饰器的任何自定义度量行为。</summary>
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示装饰器所需的布局空间量。</returns>
      <param name="constraint">装饰器所要约束到的大小。</param>
    </member>
    <member name="T:System.Windows.Documents.AdornerDecorator">
      <summary>为 “可视化树”中的子元素提供 <see cref="T:System.Windows.Documents.AdornerLayer" />。 </summary>
      <exception cref="T:System.ArgumentException">尝试将多个子级添加到 <see cref="T:System.Windows.Documents.AdornerDecorator" />。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.AdornerLayer">
      <summary>获取与此 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 关联的 <see cref="T:System.Windows.Documents.AdornerLayer" />。</summary>
      <returns>与此装饰器修饰器关联的 <see cref="T:System.Windows.Documents.AdornerLayer" />。 </returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素并确定 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 的大小。</summary>
      <returns>元素所需的实际大小。此返回值通常与传递给 finalSize 的值相同。</returns>
      <param name="finalSize">此元素的父级为其保留的大小。</param>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.Child">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 的单个子元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.AdornerDecorator" /> 的单个子元素。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.GetVisualChild(System.Int32)">
      <summary>获取指定 <paramref name="index" /> 位置处的 <see cref="T:System.Windows.Media.Visual" /> 子级。</summary>
      <returns>父元素 <see cref="T:System.Windows.Controls.Viewbox" /> 的一个 <see cref="T:System.Windows.Media.Visual" /> 子级。</returns>
      <param name="index">所需 <see cref="T:System.Windows.Media.Visual" /> 子级的索引位置。</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerDecorator.MeasureOverride(System.Windows.Size)">
      <summary>测量子元素所需的大小，并确定 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 的大小。</summary>
      <returns>一个 <see cref="T:System.Windows.Size" /> 对象，表示 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 所需的布局空间量。</returns>
      <param name="constraint">将 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 约束到的大小。</param>
    </member>
    <member name="P:System.Windows.Documents.AdornerDecorator.VisualChildrenCount">
      <summary>获取此 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 实例中 <see cref="T:System.Windows.Media.Visual" /> 的子对象数。</summary>
      <returns>返回 2（一个是 <see cref="T:System.Windows.Documents.AdornerLayer" />，另一个是 <see cref="P:System.Windows.Documents.AdornerDecorator.Child" />），或者，如果 <see cref="T:System.Windows.Documents.AdornerDecorator" /> 无子级，则属性返回 0。</returns>
    </member>
    <member name="T:System.Windows.Documents.AdornerLayer">
      <summary>表示用于呈现装饰器的图面。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Add(System.Windows.Documents.Adorner)">
      <summary>将装饰器添加到装饰器层。</summary>
      <param name="adorner">要添加的装饰器。</param>
      <exception cref="T:System.ArgumentNullException">当 adorner 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)">
      <summary>获取指定点的 <see cref="T:System.Windows.Media.AdornerHitTestResult" />。</summary>
      <returns>指定点的 <see cref="T:System.Windows.Media.AdornerHitTestResult" />。</returns>
      <param name="point">要进行命中测试的点。</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.ArrangeOverride(System.Windows.Size)">
      <summary>定位子元素并确定 <see cref="T:System.Windows.Documents.AdornerLayer" /> 的大小。</summary>
      <returns>元素所需的实际大小。此返回值通常与传递给 finalSize 的值相同。</returns>
      <param name="finalSize">此元素的父级为其保留的大小。</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdornerLayer(System.Windows.Media.Visual)">
      <summary>在指定 <see cref="T:System.Windows.Media.Visual" /> 的上方的可视化树中返回第一个装饰器层。</summary>
      <returns>指定视觉的装饰器层；如果找不到装饰器层，则为 null。</returns>
      <param name="visual">为其查找装饰器层的视觉元素。</param>
      <exception cref="T:System.ArgumentNullException">当 visual 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetAdorners(System.Windows.UIElement)">
      <summary>返回绑定到指定 <see cref="T:System.Windows.UIElement" /> 的装饰器数组。</summary>
      <returns>一个装饰器数组，这些装饰器修饰指定的 <see cref="T:System.Windows.UIElement" />；如果没有绑定到指定元素的装饰器，则为 null。</returns>
      <param name="element">要为其检索装饰器数组的 <see cref="T:System.Windows.UIElement" />。</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.GetVisualChild(System.Int32)">
      <summary>获取指定 <paramref name="index" /> 位置处的 <see cref="T:System.Windows.Media.Visual" /> 子级。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.AdornerLayer" /> 父元素的一个 <see cref="T:System.Windows.Media.Visual" /> 子级。</returns>
      <param name="index">所需 <see cref="T:System.Windows.Media.Visual" /> 子级的索引位置。</param>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.LogicalChildren">
      <summary>获取一个可循环访问此 <see cref="T:System.Windows.Documents.AdornerLayer" /> 元素的逻辑子元素的枚举数。 </summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.MeasureOverride(System.Windows.Size)">
      <summary>测量子元素所需的大小，并确定 <see cref="T:System.Windows.Documents.AdornerLayer" /> 的大小。</summary>
      <returns>该方法将始终返回 (0,0) 的 <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">未使用。</param>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Remove(System.Windows.Documents.Adorner)">
      <summary>从装饰器层中移除指定的 <see cref="T:System.Windows.Documents.Adorner" />。</summary>
      <param name="adorner">要移除的 <see cref="T:System.Windows.Documents.Adorner" />。</param>
      <exception cref="T:System.ArgumentNullException">当 adorner 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update">
      <summary>更新布局并重绘装饰器层中的所有装饰器。</summary>
    </member>
    <member name="M:System.Windows.Documents.AdornerLayer.Update(System.Windows.UIElement)">
      <summary>更新布局并重绘装饰器层中绑定到指定 <see cref="T:System.Windows.UIElement" /> 的所有装饰器。</summary>
      <param name="element">与要更新的装饰器关联的 <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">当 element 为 null 时引发。</exception>
      <exception cref="T:System.InvalidOperationException">当找不到指定的元素时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.AdornerLayer.VisualChildrenCount">
      <summary>获取此 <see cref="T:System.Windows.Documents.AdornerLayer" /> 实例中的子 <see cref="T:System.Windows.Media.Visual" /> 对象数。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.AdornerLayer" /> 实例中的子 <see cref="T:System.Windows.Media.Visual" /> 对象数。</returns>
    </member>
    <member name="T:System.Windows.Documents.AnchoredBlock">
      <summary>为 <see cref="T:System.Windows.Documents.Inline" /> 元素提供基类的抽象类，这些元素用于将 <see cref="T:System.Windows.Documents.Block" /> 元素锚定到流内容。</summary>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>由某个派生类调用时，初始化基类值，将指定的 <see cref="T:System.Windows.Documents.Block" /> 对象作为 <see cref="T:System.Windows.Documents.AnchoredBlock" /> 的新后代的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.AnchoredBlock" /> 后代的插入位置。</summary>
      <param name="block">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新元素的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Block" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Blocks">
      <summary>获取一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成元素内容的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成元素内容的 <see cref="T:System.Windows.Documents.Block" /> 元素。 此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderBrush">
      <summary>获取或设置绘制元素边框时使用的 <see cref="T:System.Windows.Media.Brush" />。 </summary>
      <returns>用来应用于元素边框的画笔。默认值为 null 画笔。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.BorderThickness">
      <summary>获取或设置元素的边框宽度。 </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边框宽度（以与设备无关的像素为单位）。默认值为统一宽度值零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineHeight">
      <summary>获取或设置各行内容的高度。 </summary>
      <returns>一个双精度值，指定行的高度（以与设备无关的像素为单位）。<see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 必须等于或大于 0.0034 并且等于或小于 160000。值 <see cref="F:System.Double.NaN" />（等同于特性值“Auto”）使行高由当前字体特征自动确定。  默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">当尝试将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为一个非正值时引发。</exception>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy">
      <summary>获取或设置一种机制，根据该机制来为文本元素内的每一行文字确定一个行框。 </summary>
      <returns>一种机制，根据该机制来为文本元素内的每一行文字确定一个行框。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Margin">
      <summary>获取或设置元素的边距宽度。 </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边距宽度（以与设备无关的像素为单位）。默认值为统一宽度值零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.MarginProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Margin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.Padding">
      <summary>获取或设置元素的边距宽度。 </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的填充量（以与设备无关的像素为单位）。默认值为统一宽度值零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示在序列化从 <see cref="T:System.Windows.Documents.AnchoredBlock" /> 派生的对象期间，是否应对 <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> 属性的有效值进行序列化。</summary>
      <returns>如果应对 <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks" /> 属性进行序列化，则为 true；否则为 false。</returns>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <exception cref="T:System.NullReferenceException">当 <paramref name="manager" /> 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.AnchoredBlock.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。 </summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 枚举的一个成员，它指定所需的对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>一个抽象类，它为所有块级别流内容元素提供了一个基础。</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>由某个派生类调用时，初始化 <see cref="T:System.Windows.Documents.Block" /> 基类的值。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderBrush">
      <summary>获取或设置绘制元素边框时使用的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用来应用于元素边框的画笔。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BorderThickness">
      <summary>获取或设置元素的边框宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边框宽度（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakColumnBefore">
      <summary>获取或设置一个值，该值指示当元素参与使用了分栏的内容呈现时，是否自动在此元素之前插入一个分栏符。  </summary>
      <returns>如果为 true，则在此元素之前自动插入一个分栏符；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakColumnBeforeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.BreakPageBefore">
      <summary>获取或设置一个值，该值指示是否自动在此元素之前插入一个分页符。  </summary>
      <returns>如果为 true，则在此元素之前自动插入一个分页符；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.BreakPageBeforeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.BreakPageBefore" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.ClearFloaters">
      <summary>获取或设置某个 <see cref="T:System.Windows.Documents.Block" /> 元素所包含的任何 <see cref="T:System.Windows.Documents.Floater" /> 元素的重新定位方向。  </summary>
      <returns>
        <see cref="T:System.Windows.WrapDirection" /> 值之一，它指定将 <see cref="T:System.Windows.Documents.Block" /> 元素中所包含的任何 <see cref="T:System.Windows.Documents.Floater" /> 元素与其他内容分隔开来的方向。默认值为 <see cref="F:System.Windows.WrapDirection.None" />，它指示浮标应在现有位置上呈现。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.ClearFloatersProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.ClearFloaters" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.FlowDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Block" /> 元素中内容流的相对方向。  </summary>
      <returns>
        <see cref="T:System.Windows.FlowDirection" /> 值之一，指定相对流动方向。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性的值。</summary>
      <returns>指定依赖项对象的 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性的当前值。</returns>
      <param name="element">从中检索 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 属性的值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的值。</summary>
      <returns>指定依赖项对象的 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的当前值。</returns>
      <param name="element">从中检索 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 属性的值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性的值。</summary>
      <returns>指定依赖项对象的 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性的当前值。</returns>
      <param name="element">从中检索 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性的值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的值。</summary>
      <returns>指定依赖项对象的 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的当前值。</returns>
      <param name="element">从中检索 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 属性的值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.IsHyphenationEnabled">
      <summary>获取或设置一个值，该值指示是否启用文字的自动断字功能。  </summary>
      <returns>如果启用自动对文字进行断字和添加连字符，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
      <summary>获取或设置各行内容的高度。  </summary>
      <returns>各行的高度以与设备无关的像素为单位表示，范围为 0.0034 到 160000，或者为 <see cref="F:System.Double.NaN" /> 以自动确定高度。默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为一个非正值。</exception>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
      <summary>获取或设置为块级别流内容元素内的每行文本确定行框的方式。  </summary>
      <returns>
        <see cref="T:System.Windows.LineStackingStrategy" /> 值之一，它指定为块级别流内容元素内的每行文本确定行框的方式。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Margin">
      <summary>获取或设置元素的边距宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边距宽度（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.MarginProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.Margin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.Margin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.NextBlock">
      <summary>获取紧随当前 <see cref="T:System.Windows.Documents.Block" /> 元素之后的同级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>紧随当前 <see cref="T:System.Windows.Documents.Block" /> 元素之后的同级 <see cref="T:System.Windows.Documents.Block" /> 元素，或者，如果不存在这样的元素，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.Padding">
      <summary>获取或设置元素的边距宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的填充量（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.Padding" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.PreviousBlock">
      <summary>获取紧邻当前 <see cref="T:System.Windows.Documents.Block" /> 元素之前的同级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>紧邻当前 <see cref="T:System.Windows.Documents.Block" /> 元素之前的同级 <see cref="T:System.Windows.Documents.Block" /> 元素，或者，如果不存在这样的元素，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定依赖项对象的 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> 属性的值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Block.LineHeight" /> 属性的值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 为负数。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
      <summary>设置指定依赖项对象的 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 属性的值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 属性的值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.Block.SiblingBlocks">
      <summary>获取一个 <see cref="T:System.Windows.Documents.Block" /> 元素的集合，这些元素是当前 <see cref="T:System.Windows.Documents.Block" /> 元素的同级元素。</summary>
      <returns>一个包含子级 <see cref="T:System.Windows.Documents.Block" /> 元素的 <see cref="T:System.Windows.Documents.BlockCollection" />，这些元素直接由当前 <see cref="T:System.Windows.Documents.Block" /> 元素的父级承载；如果当前 <see cref="T:System.Windows.Documents.Block" /> 元素无父级，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>获取或设置文本内容的水平对齐方式。  </summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>表示 <see cref="T:System.Windows.Documents.Block" /> 元素的集合。<see cref="T:System.Windows.Documents.BlockCollection" /> 定义 <see cref="T:System.Windows.Documents.FlowDocument" />、<see cref="T:System.Windows.Documents.Section" />、<see cref="T:System.Windows.Documents.ListItem" />、<see cref="T:System.Windows.Documents.TableCell" />、<see cref="T:System.Windows.Documents.Floater" /> 和 <see cref="T:System.Windows.Documents.Figure" /> 元素允许使用的子内容。</summary>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.FirstBlock">
      <summary>获取此 <see cref="T:System.Windows.Documents.BlockCollection" /> 实例中的第一个 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.BlockCollection" /> 中的第一个 <see cref="T:System.Windows.Documents.Block" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.BlockCollection.LastBlock">
      <summary>获取此 <see cref="T:System.Windows.Documents.BlockCollection" /> 实例中的最后一个 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.BlockCollection" /> 中的最后一个 <see cref="T:System.Windows.Documents.Block" /> 元素。</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockUIContainer">
      <summary>一个块级别流内容元素，可以使 <see cref="T:System.Windows.UIElement" /> 元素（即<see cref="T:System.Windows.Controls.Button" />）能够嵌入到（承载）流内容中。</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)">
      <summary>初始化 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.UIElement" /> 对象作为新的 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 的初始内容。</summary>
      <param name="uiElement">
        <see cref="T:System.Windows.UIElement" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 的初始内容。</param>
    </member>
    <member name="P:System.Windows.Documents.BlockUIContainer.Child">
      <summary>获取或设置由 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 承载的 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>由 <see cref="T:System.Windows.Documents.BlockUIContainer" /> 承载的 <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>一个内联级别的流内容元素，该元素导致内容以粗体形式呈现。</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Bold" /> 类的新的空实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Bold" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的 <see cref="T:System.Windows.Documents.Bold" /> 的初始内容。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Bold" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Bold" /> 类的一个新实例，使用指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新 <see cref="T:System.Windows.Documents.Bold" /> 的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.Inline" /> 元素的插入位置。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Bold" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Inline" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的 <see cref="T:System.Windows.Documents.Bold" /> 元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Bold" /> 类的一个新实例，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象指示该新 <see cref="T:System.Windows.Documents.Bold" /> 将要包含的内容选择的开始和结束位置。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指示该新 <see cref="T:System.Windows.Documents.Bold" /> 将要包含的内容选择的开始位置。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指示该新 <see cref="T:System.Windows.Documents.Bold" /> 将要包含的内容选择的结束位置。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="start" /> 或 <paramref name="end" /> 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 <paramref name="start" /> 和 <paramref name="end" /> 没有解析为适于由一个 <see cref="T:System.Windows.Documents.Bold" /> 元素包围的范围时引发，例如，当 <paramref name="start" /> 和 <paramref name="end" /> 指示位置位于不同的段落时。</exception>
    </member>
    <member name="T:System.Windows.Documents.DocumentReference">
      <summary>提供访问以引用 <see cref="T:System.Windows.Documents.FixedDocument" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.GetDocument(System.Boolean)">
      <summary>同步加载和分析由 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 属性位置指定的文档。</summary>
      <returns>已加载的文档。</returns>
      <param name="forceReload">如果为 true，则强制对 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 文档进行新的加载，即使先前已加载。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReference.SetDocument(System.Windows.Documents.FixedDocument)">
      <summary>将 <see cref="T:System.Windows.Documents.FixedDocument" /> 附加到 <see cref="T:System.Windows.Documents.DocumentReference" />。</summary>
      <param name="doc">附加的文档。</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.Source">
      <summary>获取或设置此文档引用的统一资源标识符 (URI)。 </summary>
      <returns>
        <see cref="T:System.Uri" />，表示文档引用。</returns>
    </member>
    <member name="F:System.Windows.Documents.DocumentReference.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.DocumentReference.Source" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReference.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentReferenceCollection">
      <summary>定义 <see cref="T:System.Windows.Documents.DocumentReference" /> 元素的有序列表。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.Add(System.Windows.Documents.DocumentReference)">
      <summary>将一个元素添加到集合末尾。</summary>
      <param name="item">要添加到集合末尾的元素。</param>
    </member>
    <member name="E:System.Windows.Documents.DocumentReferenceCollection.CollectionChanged">
      <summary>在添加或移除元素时发生。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.CopyTo(System.Windows.Documents.DocumentReference[],System.Int32)">
      <summary>将整个集合复制到一个从给定数组索引开始的数组。</summary>
      <param name="array">集合中的元素应复制到的目标数组。</param>
      <param name="arrayIndex">集合元素将复制到的数组中从零开始的起始索引。</param>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Count">
      <summary>获取集合中包含的元素数。</summary>
      <returns>集合中包含的项的数量。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator">
      <summary>返回迭代集合的一个枚举数。</summary>
      <returns>可用来迭代集合的枚举数。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentReferenceCollection.Item(System.Int32)">
      <summary>获取位于指定索引处的元素。</summary>
      <returns>位于指定 <paramref name="index" /> 处的集合元素。</returns>
      <param name="index">要从集合中获取的元素的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个循环访问集合的枚举数。请改用类型安全的 <see cref="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator" /> 方法。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.Windows.Documents.EditingCommands">
      <summary>提供一组标准的与编辑相关的命令。</summary>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignCenter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> 命令，该命令请求将当前段落或选中的段落居中。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+E。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignJustify">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> 命令，该命令请求将当前段落或选中的段落两端对齐。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+J。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignLeft">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> 命令，该命令请求将所选内容左对齐。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+L。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.AlignRight">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> 命令，该命令请求将所选内容右对齐。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+R。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Backspace">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> 命令，该命令请求在当前位置或当前所选内容上输入一个退格。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Backspace。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.CorrectSpellingError">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> 命令，该命令请求更正当前位置任何拼写错误的单词。</summary>
      <returns>请求的命令。此命令无默认键笔势。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseFontSize">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> 命令，该命令请求将当前所选内容的字号缩小 1 磅。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+OemOpenBrackets。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DecreaseIndentation">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> 命令，该命令请求将当前段落的缩进减少一个制表位。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+T。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.Delete">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> 命令，该命令请求删除当前所选内容。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Delete。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeleteNextWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> 命令，该命令请求删除下一单词（相对于当前位置而言）。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Delete。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.DeletePreviousWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> 命令，该命令请求删除上一单词（相对于当前位置而言）。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Backspace。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterLineBreak">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> 命令，该命令请求在当前位置或当前所选内容上插入一个换行符。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Enter。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> 命令，该命令请求在当前位置或当前所选内容上插入一个分段符。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Enter。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> 命令，该命令请求忽略当前位置或当前所选内容中任何拼写错误的单词的实例。</summary>
      <returns>请求的命令。此命令无默认键笔势。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseFontSize">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> 命令，该命令请求将当前所选内容的字号增加 1 磅。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+OemCloseBrackets。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.IncreaseIndentation">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> 命令，该命令请求将当前段落的缩进增加一个制表位。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+T。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> 命令，该命令请求将插入符号向下移动一行。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> 命令，该命令请求将插入符号向下移动一页。</summary>
      <returns>请求的命令。此命令的默认键笔势为 PageDown。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> 命令，该命令请求将插入符号向下移动一个段落。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> 命令，该命令请求将插入符号向左移动一个字符。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveLeftByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> 命令，该命令请求将插入符号向左移动一个单词。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> 命令，该命令请求将插入符号向右移动一个字符。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveRightByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> 命令，该命令请求将插入符号向右移动一个单词。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> 命令，该命令请求将插入符号移至内容的末尾。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> 命令，该命令请求将插入符号移至内容的开头。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> 命令，该命令请求将插入符号移至当前行的末尾。</summary>
      <returns>请求的命令。此命令的默认键笔势为 End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveToLineStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> 命令，该命令请求将插入符号移至当前行的开头。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> 命令，该命令请求将插入符号向上移动一行。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> 命令，该命令请求将插入符号向上移动一页。</summary>
      <returns>请求的命令。此命令的默认键笔势为 PageUp。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> 命令，该命令请求将插入符号向上移动一个段落。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> 命令，该命令请求将当前选择范围向下扩展一行。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> 命令，该命令请求将当前选择范围向下扩展一页。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+PageDown。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> 命令，该命令请求将当前选择范围向下扩展一段。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+Down。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> 命令，该命令请求将当前选择范围向左扩展一个字符。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectLeftByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> 命令，该命令请求将当前选择范围向左扩展一个单词。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+Left。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> 命令，该命令请求将当前选择范围向右扩展一个字符。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectRightByWord">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> 命令，该命令请求将当前选择范围向右扩展一个单词。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+Right。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> 命令，该命令请求将当前选择范围扩展到内容末尾处。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> 命令，该命令请求将当前选择范围扩展到内容开头处。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineEnd">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> 命令，该命令请求将当前选择范围扩展到当前行的末尾。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+End。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectToLineStart">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> 命令，该命令请求将当前选择范围扩展到当前行的开头。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Home。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByLine">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> 命令，该命令请求将当前选择范围向上扩展一行。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByPage">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> 命令，该命令请求将当前选择范围向上扩展一页。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+PageUp。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> 命令，该命令请求将当前选择范围向上扩展一段。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+Up。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabBackward">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> 命令。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Shift+Tab。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.TabForward">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> 命令。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Tab。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBold">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Bold" /> 格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+B。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleBullets">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> 命令，该命令请求对当前所选内容进行无序列表（也称为项目符号列表）格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+L。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleInsert">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> 命令，该命令用于切换“插入”和“改写”键入模式。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Insert。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleItalic">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Italic" /> 格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+I。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleNumbering">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> 命令，该命令请求对当前所选内容进行排序列表（也称为编号列表）格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+N。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSubscript">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> 命令，该命令请求对当前所选内容进行下标格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+OemPlus。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleSuperscript">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> 命令，该命令请求对当前所选内容进行上标格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+Shift+OemPlus。</returns>
    </member>
    <member name="P:System.Windows.Documents.EditingCommands.ToggleUnderline">
      <summary>表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> 命令，该命令请求对当前所选内容进行 <see cref="T:System.Windows.Documents.Underline" /> 格式切换。</summary>
      <returns>请求的命令。此命令的默认键笔势为 Ctrl+U。</returns>
    </member>
    <member name="T:System.Windows.Documents.Figure">
      <summary>一个内联级别的用于承载图形的流内容元素。图形是带有位置属性的流内容的一部分，可以独立于 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的主内容流自定义该部分。</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Figure" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Figure" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的 <see cref="T:System.Windows.Documents.Figure" /> 的初始内容。</summary>
      <param name="childBlock">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Figure" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Figure" /> 类的一个新实例，使用指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为新 <see cref="T:System.Windows.Documents.Figure" /> 的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.Figure" /> 元素的插入位置。</summary>
      <param name="childBlock">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Figure" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Block" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的 <see cref="T:System.Windows.Documents.Figure" /> 元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="P:System.Windows.Documents.Figure.CanDelayPlacement">
      <summary>获取或设置一个值，该值指示此图形是否可延迟放入内容流中。  </summary>
      <returns>如果此图形可延迟放入，则为 true；否则为 false。默认值为“True”。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.CanDelayPlacementProperty">
      <summary> 标识 <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.Height">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Figure" /> 元素的高度。  </summary>
      <returns>一个 <see cref="T:System.Windows.FigureLength" /> 结构，它指定 <see cref="T:System.Windows.Documents.Figure" /> 的高度特性。默认值为 <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 和 <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.Height" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.Height" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalAnchor">
      <summary>获取或设置一个值，该值指示内容沿水平方向锚定到的位置。  </summary>
      <returns>
        <see cref="T:System.Windows.FigureHorizontalAnchor" /> 枚举的一个成员，它指定 <see cref="T:System.Windows.Documents.Figure" /> 的水平锚定位置。默认值为 <see cref="F:System.Windows.FigureHorizontalAnchor.ColumnRight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalAnchorProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.HorizontalOffset">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Figure" /> 沿水平方向从其基线偏移的距离。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Figure" /> 沿水平方向从其基线偏移的距离（以与设备无关的像素为单位）。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.HorizontalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.HorizontalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalAnchor">
      <summary>获取或设置一个值，该值指示内容沿垂直方向锚定到的位置。  </summary>
      <returns>
        <see cref="T:System.Windows.FigureVerticalAnchor" /> 枚举的一个成员，它指定 <see cref="T:System.Windows.Documents.Figure" /> 的垂直锚定位置。默认值为 <see cref="F:System.Windows.FigureVerticalAnchor.ParagraphTop" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalAnchorProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.VerticalAnchor" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.VerticalOffset">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Figure" /> 沿垂直方向从其基线偏移的距离。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Figure" /> 沿垂直方向从其基线偏移的距离（以与设备无关的像素为单位）。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.VerticalOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.VerticalOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.Width">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Figure" /> 元素的宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.FigureLength" /> 结构，它指定 <see cref="T:System.Windows.Documents.Figure" /> 的宽度特性。默认值为 <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.Value" /> = 1.0 和 <see cref="T:System.Windows.FigureLength" />.<see cref="P:System.Windows.FigureLength.FigureUnitType" /> = <see cref="F:System.Windows.FigureUnitType.Auto" />.</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.Width" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Figure.WrapDirection">
      <summary>获取或设置一个值，该值指示内容可用其环绕 <see cref="T:System.Windows.Documents.Figure" /> 的允许方式。   </summary>
      <returns>
        <see cref="T:System.Windows.WrapDirection" /> 枚举的一个成员，它指定内容可用其环绕 <see cref="T:System.Windows.Documents.Figure" /> 的允许方式。默认值为 <see cref="F:System.Windows.WrapDirection.Both" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Figure.WrapDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Figure.WrapDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedDocument">
      <summary>承载一个可移植、高保真、格式固定的文档，该文档具有对用户文本选定内容、键盘导航和搜索的读取访问权限。</summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FixedDocument" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.DocumentPaginator">
      <summary>获取 <see cref="T:System.Windows.Documents.FixedDocument" /> 的分页程序，该分页程序提供面向页的服务（如获取特定页及重标页码以响应更改）。 </summary>
      <returns>一个从提供分页服务的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 派生的类的对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.LogicalChildren">
      <summary>获取一个枚举器，用于访问文档的 <see cref="T:System.Windows.Documents.PageContent" /> 子元素。</summary>
      <returns>一个枚举数，用于访问文档的 <see cref="T:System.Windows.Documents.PageContent" /> 子元素。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer">
      <summary>创建文档的自动化对等方。 </summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />，它向 Microsoft UI 自动化公开 <see cref="T:System.Windows.Documents.FixedDocument" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.Pages">
      <summary>获取文档的 <see cref="T:System.Windows.Documents.PageContent" /> 元素的集合。 </summary>
      <returns>文档的 <see cref="T:System.Windows.Documents.PageContent" /> 元素的集合。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.PrintTicket">
      <summary>获取或设置与此文档关联的 <see cref="T:System.Printing.PrintTicket" />。 </summary>
      <returns>此文档的 <see cref="T:System.Printing.PrintTicket" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocument.PrintTicketProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。- 或 - 如果没有 <paramref name="serviceType" /> 类型的服务对象，则为 null。</returns>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。 </param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前应用程序上下文的基 URI。 </summary>
      <returns>应用程序上下文的基 URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedDocumentSequence">
      <summary>承载定义固定文档的序列的一个或多个 <see cref="T:System.Windows.Documents.DocumentReference" /> 元素。 </summary>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator">
      <summary>获取 <see cref="T:System.Windows.Documents.FixedDocument" /> 的分页程序，该分页程序提供面向页的服务（如获取特定页及重标页码以响应更改）。 </summary>
      <returns>一个从提供分页服务的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 派生的类的对象</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren">
      <summary>获取一个枚举数，以用于访问文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素。 </summary>
      <returns>一个枚举数，用于访问文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer">
      <summary>创建序列的自动化对等方。 </summary>
      <returns>一个 <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />，它向 Microsoft UI 自动化公开 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket">
      <summary>获取或设置与此文档序列关联的 <see cref="T:System.Printing.PrintTicket" />。 </summary>
      <returns>此序列的 <see cref="T:System.Printing.PrintTicket" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.References">
      <summary>获取文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素的集合。 </summary>
      <returns>文档序列的 <see cref="T:System.Windows.Documents.DocumentReference" /> 子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。- 或 - 如果没有 <paramref name="serviceType" /> 类型的服务对象，则为 null。</returns>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。 </param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前应用程序上下文的基 URI。 </summary>
      <returns>应用程序上下文的基 URI。</returns>
    </member>
    <member name="T:System.Windows.Documents.FixedPage">
      <summary>为高保真度、固定格式的页面提供内容。 </summary>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FixedPage" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Background">
      <summary>获取或设置用于呈现页面背景的 <see cref="T:System.Windows.Media.Brush" />。   </summary>
      <returns>用于呈现页面背景的画笔。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.BleedBox">
      <summary>获取或设置一个为出血、注册标记和裁切标记定义溢出区域的矩形。  </summary>
      <returns>定义溢出区域的 <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BleedBoxProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.BleedBox" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.DocumentPage.BleedBox" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Bottom">
      <summary>获取或设置页面底部与父 <see cref="T:System.Windows.Controls.Canvas" /> 的底部之间的距离。</summary>
      <returns>页面的底部与父画布的底部之间的距离。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.BottomProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Bottom" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Children">
      <summary>获取 <see cref="T:System.Windows.Documents.FixedPage" /> 子元素的集合。 </summary>
      <returns>子元素的 <see cref="T:System.Windows.Controls.UIElementCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.ContentBox">
      <summary>获取或设置内容区域（即，位于边距（如果有）内 的页面区域）的边框。  </summary>
      <returns>用于定义内容区域的 <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.ContentBoxProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.ContentBox" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetBottom(System.Windows.UIElement)">
      <summary>返回某元素的底部与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的底部之间的距离。</summary>
      <returns>某元素的底部与其父画布的底部之间的距离。</returns>
      <param name="element">要从中获取底部偏移量的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetLeft(System.Windows.UIElement)">
      <summary>返回某元素的左侧与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的左侧之间的距离。</summary>
      <returns>某元素的右侧与其父画布的右侧之间的距离。</returns>
      <param name="element">要从中获取左侧偏移量的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetNavigateUri(System.Windows.UIElement)">
      <summary>返回给定元素的 <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 属性。</summary>
      <returns>
        <paramref name="element" /> 的 <see cref="T:System.Uri" />。</returns>
      <param name="element">要从中获取属性的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetRight(System.Windows.UIElement)">
      <summary>返回某元素的右侧与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的右侧之间的距离。</summary>
      <returns>某元素的右侧与其父画布的右侧之间的距离。</returns>
      <param name="element">要从中获取右侧偏移量的元素。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.GetTop(System.Windows.UIElement)">
      <summary>返回某元素的顶部与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的顶部之间的距离。</summary>
      <returns>某元素的顶部与其父画布的顶部之间的距离。</returns>
      <param name="element">要从中获取顶部偏移量的元素。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Left">
      <summary>获取或设置页面的左边缘与父 <see cref="T:System.Windows.Controls.Canvas" /> 的左边缘之间的距离。</summary>
      <returns>页面的左边缘与父画布的左边缘之间的距离。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.LeftProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Left" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Left" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.NavigateUri">
      <summary>获取或设置与页面关联的 URI。</summary>
      <returns>与  关联的 <see cref="TLA#tla_uri" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.NavigateUriProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.NavigateUri" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.PrintTicket">
      <summary>获取或设置与页面关联的 <see cref="T:System.Printing.PrintTicket" />。  </summary>
      <returns>页的 <see cref="T:System.Printing.PrintTicket" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.PrintTicketProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.PrintTicket" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Right">
      <summary>获取或设置页面的右边缘与父 <see cref="T:System.Windows.Controls.Canvas" /> 的右边缘之间的距离。</summary>
      <returns>页面的右边缘与父画布的右边缘之间的距离。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.RightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Right" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Right" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetBottom(System.Windows.UIElement,System.Double)">
      <summary>设置某元素的底部与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的底部之间的距离。</summary>
      <param name="element">要在其上设置底部偏移量的元素。</param>
      <param name="length">元素的底部与其父画布的底部之间的新距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>设置某元素的左侧与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的左侧之间的距离。</summary>
      <param name="element">要在其上设置左侧偏移量的元素。</param>
      <param name="length">元素的左侧与其父画布的左侧之间的新距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetNavigateUri(System.Windows.UIElement,System.Uri)">
      <summary>设置在单击超链接时要导航到的统一资源标识符 (URI)。</summary>
      <param name="element">要在其上设置 URI 偏移量的元素。</param>
      <param name="uri">在单击超链接时要导航到的URI。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetRight(System.Windows.UIElement,System.Double)">
      <summary>设置某元素的右侧与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的右侧之间的距离。</summary>
      <param name="element">要在其上设置右侧偏移量的元素。</param>
      <param name="length">元素的右侧与其父画布的右侧之间的新距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.SetTop(System.Windows.UIElement,System.Double)">
      <summary>设置某元素的顶部与其父 <see cref="T:System.Windows.Controls.Canvas" /> 的顶部之间的距离。</summary>
      <param name="element">要在其上设置顶部偏移量的元素。</param>
      <param name="length">元素的顶部与其父画布的顶部之间的新距离。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FixedPage.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前应用程序上下文的基 URI。 </summary>
      <returns>应用程序上下文的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.FixedPage.Top">
      <summary>获取或设置页面顶部与父 <see cref="T:System.Windows.Controls.Canvas" /> 的顶部之间的距离。</summary>
      <returns>页面的顶部与父画布的顶部之间的距离。</returns>
    </member>
    <member name="F:System.Windows.Documents.FixedPage.TopProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FixedPage.Top" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FixedPage.Top" /> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Floater">
      <summary>提供一个内联级别的流内容元素，该元素用于承载一个浮标。“浮标”显示与 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的主内容流平行的图像和其他内容。</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Floater" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Floater" /> 类的一个新实例，并使用指定的 <see cref="T:System.Windows.Documents.Block" /> 对象作为其初始内容。</summary>
      <param name="childBlock">新 <see cref="T:System.Windows.Documents.Floater" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Floater" /> 类的一个新实例，其中使用指定 <see cref="T:System.Windows.Documents.Block" /> 对象作为其初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.Floater" /> 的插入位置。</summary>
      <param name="childBlock">新 <see cref="T:System.Windows.Documents.Floater" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Block" />。</param>
      <param name="insertionPosition">所创建的 <see cref="T:System.Windows.Documents.Floater" /> 元素的插入位置。</param>
    </member>
    <member name="P:System.Windows.Documents.Floater.HorizontalAlignment">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Floater" /> 对象的水平对齐方式。 </summary>
      <returns>
        <see cref="T:System.Windows.HorizontalAlignment" /> 枚举的一个成员，它指定 <see cref="T:System.Windows.Documents.Floater" /> 的水平对齐方式。默认值为 <see cref="F:System.Windows.HorizontalAlignment.Stretch" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Floater.Width">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Floater" /> 对象的宽度。 </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Floater" /> 的宽度，以与设备无关的像素为单位。默认值为 <see cref="F:System.Double.NaN" />（等效于特性值 Auto），它指示将自动确定行高。</returns>
    </member>
    <member name="F:System.Windows.Documents.Floater.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Floater.Width" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Floater.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.FlowDocument">
      <summary>用高级文档功能（如分页和列）承载流内容和设置流内容格式。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.FlowDocument" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)">
      <summary>初始化 <see cref="T:System.Windows.Documents.FlowDocument" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Block" /> 元素作为初始内容添加到实例中。 </summary>
      <param name="block">要作为初始内容添加的从抽象 <see cref="T:System.Windows.Documents.Block" /> 类派生的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="block" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Background">
      <summary>获取或设置要用于填充内容区域背景的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用于填充内容区域背景的画笔，或 null（不使用背景画笔）。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Blocks">
      <summary>获取 <see cref="T:System.Windows.Documents.FlowDocument" /> 的内容的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.FlowDocument" /> 的内容的 <see cref="T:System.Windows.Documents.Block" /> 元素。  </returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnGap">
      <summary>获取或设置列间隔值，该值指示 <see cref="T:System.Windows.Documents.FlowDocument" /> 中各列之间的间距。  </summary>
      <returns>列间隔，以与设备无关的像素为单位。值为 <see cref="F:System.Double.NaN" />（等效于特性值“Auto”）指示列间隔等于 <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 属性。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnGapProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush">
      <summary>获取或设置用于绘制列之间标尺的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>
        <see cref="T:System.Windows.Media.Brush" />（用于绘制列之间的标尺线），或为 null（不使用背景画笔）。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth">
      <summary>获取或设置列标尺宽度。  </summary>
      <returns>列标尺宽度，以与设备无关的像素为单位。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ColumnWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中列的所需最小宽度。  </summary>
      <returns>所需的最小列宽，以与设备无关的像素为单位。值为 <see cref="F:System.Double.NaN" /> 会导致无论页面宽度如何，都只显示一列。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentEnd">
      <summary>获取表示 <see cref="T:System.Windows.Documents.FlowDocument" /> 中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer" />。 </summary>
      <returns>表示 <see cref="T:System.Windows.Documents.FlowDocument" /> 中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.ContentStart">
      <summary>获取表示 <see cref="T:System.Windows.Documents.FlowDocument" /> 中内容起始位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>表示 <see cref="T:System.Windows.Documents.FlowDocument" /> 中内容起始位置的 <see cref="T:System.Windows.Documents.TextPointerContext" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FlowDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中内容流的相对方向。  </summary>
      <returns>
        <see cref="T:System.Windows.FlowDirection" /> 值之一，指定相对流动方向。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontFamily">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 的首选顶级字体系列。  </summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" /> 对象，指定首选字体系列，或者指定一个主要首选字体系列并附带一个或多个备用字体系列。默认字体是由 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 值确定的字体。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontSize">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 的顶级字体大小。  </summary>
      <returns>希望使用的字号，以与设备无关的像素为单位。默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 值确定。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStretch">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 的顶级字体拉伸特征。  </summary>
      <returns>
        <see cref="T:System.Windows.FontStretch" /> 类的一个成员，指定希望使用的字体拉伸特征。默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 的顶级字形。  </summary>
      <returns>
        <see cref="T:System.Windows.FontStyles" /> 类的一个成员，指定所需的字形。默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 值确定。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.FontWeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 的顶级字体粗细。  </summary>
      <returns>
        <see cref="T:System.Windows.FontWeights" /> 类的一个成员，指定所需的字体粗细。默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 值确定。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Foreground">
      <summary>获取或设置要应用于 <see cref="T:System.Windows.Documents.FlowDocument" /> 的文本内容的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>要应用于文本内容的画笔。默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible">
      <summary>获取或设置一个值，该值指示 <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 值是可变的还是固定的。  </summary>
      <returns>如果列宽是可变的，则为 true；如果列宽是固定的，则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsEnabledCore">
      <summary>获取 <see cref="T:System.Windows.Documents.FlowDocument" /> 的 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性的值。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 的 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性的值。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled">
      <summary>获取或设置一个值，该值指示是否启用文字的自动断字功能。  </summary>
      <returns>如果启用自动对文字进行断字和添加连字符，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled">
      <summary>获取或设置一个值，该值指示是否启用最佳段落布局功能。  </summary>
      <returns>如果启用最佳段落布局，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineHeight">
      <summary>获取或设置各行内容的高度。  </summary>
      <returns>各行的高度以与设备无关的像素为单位表示，其范围为 0.0034 到 160000。<see cref="F:System.Double.NaN" /> 的值（等效于特性值“Auto”）使行高由当前字体特征自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为一个非正值。</exception>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LineStackingStrategy">
      <summary>获取或设置为 <see cref="T:System.Windows.Documents.FlowDocument" /> 内每行文本确定行框所依据的机制。  </summary>
      <returns>
        <see cref="T:System.Windows.LineStackingStrategy" /> 值之一，指定为 <see cref="T:System.Windows.Documents.FlowDocument" /> 内的每行文本确定行框的机制。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.LogicalChildren">
      <summary>获取一个可用于迭代 <see cref="T:System.Windows.Documents.FlowDocument" /> 的逻辑子级的枚举数。 </summary>
      <returns>用于逻辑子级的枚举数。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最大页高。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最大页高，以与设备无关的像素为单位。默认值为 <see cref="F:System.Double.PositiveInfinity" />（无最大页高）。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MaxPageWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最大页宽。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最大页宽，以与设备无关的像素为单位。默认值为 <see cref="F:System.Double.PositiveInfinity" />（无最大页宽）。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最小页高。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最小页高，以与设备无关的像素为单位。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.MinPageWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最小页宽。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的最小页宽，以与设备无关的像素为单位。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer">
      <summary>在派生类中重写时，将特定的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现提供给 Windows Presentation Foundation (WPF) 基础结构。</summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>当元素上存在的一个或多个依赖项属性的有效值更改时调用。</summary>
      <param name="e">关联事件的参数。</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageHeight">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的首选页高。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的首选页高，以与设备无关的像素为单位。如果值为 <see cref="F:System.Double.NaN" />（等效于特性值“Auto”），则页高自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PagePadding">
      <summary>获取或设置一个值，该值指示页面边界与页面内容之间的边距的宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的填充量（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PagePaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.PageWidth">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.FlowDocument" /> 中的首选页宽。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.FlowDocument" /> 中的首选页宽，以与设备无关的像素为单位。如果值为 <see cref="F:System.Double.NaN" />（等效于特性值“Auto”），则页宽自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.PageWidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <returns>null</returns>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。 </param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator">
      <summary>定义执行实际内容分页的源对象。</summary>
      <returns>执行实际内容分页的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。  </summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.TextEffects">
      <summary>获取或设置要应用于 <see cref="T:System.Windows.Documents.FlowDocument" /> 的文本的效果。  </summary>
      <returns>一个 <see cref="T:System.Windows.Media.TextEffectCollection" />，其中包含一个或多个 <see cref="T:System.Windows.Media.TextEffect" /> 对象，这些对象定义了要应用于 <see cref="T:System.Windows.Documents.FlowDocument" /> 的文本的效果。默认值为 null（不应用任何效果）。</returns>
    </member>
    <member name="F:System.Windows.Documents.FlowDocument.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.FlowDocument.Typography">
      <summary>获取 <see cref="T:System.Windows.Documents.FlowDocument" /> 的文本内容的当前有效的版式变体。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。有关默认版式值的列表，请参见 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkRichTextComposition">
      <summary>表示与文本输入相关的撰写。可以使用此类来查找撰写或结果字符串的文本位置。</summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionEnd">
      <summary> 获取当前撰写文本的结束位置。 </summary>
      <returns>当前撰写文本的结束位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionStart">
      <summary> 获取当前撰写文本的开始位置。 </summary>
      <returns>当前撰写文本的开始位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultEnd">
      <summary> 获取文本输入的结果文本的结束位置。 </summary>
      <returns>文本输入的结果文本的结束位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultStart">
      <summary> 获取文本输入的结果文本的开始位置。 </summary>
      <returns>文本输入的结果文本的开始位置。</returns>
    </member>
    <member name="T:System.Windows.Documents.FrameworkTextComposition">
      <summary>表示在 <see cref="T:System.Windows.Controls.TextBox" /> 的文本输入事件期间的撰写。 </summary>
    </member>
    <member name="M:System.Windows.Documents.FrameworkTextComposition.Complete">
      <summary>完成撰写。 </summary>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionLength">
      <summary>获取当前撰写的长度（以 Unicode 符号为单位）。</summary>
      <returns>当前撰写的长度（以 Unicode 符号为单位）。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.CompositionOffset">
      <summary>获取撰写文本在 <see cref="T:System.Windows.Controls.TextBox" /> 中出现的位置。</summary>
      <returns>撰写文本在 <see cref="T:System.Windows.Controls.TextBox" /> 中出现的位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultLength">
      <summary>获取发生 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件时已完成文本的长度（以 Unicode 符号为单位）。</summary>
      <returns>发生 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件时已完成文本的长度（以 Unicode 符号为单位）。</returns>
    </member>
    <member name="P:System.Windows.Documents.FrameworkTextComposition.ResultOffset">
      <summary>获取发生 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件时已完成文本的偏移。</summary>
      <returns>发生 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 事件时已完成文本的偏移。</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventArgs">
      <summary> 为 <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Documents.GetPageRootCompletedEventArgs.Result">
      <summary> 获取 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 异步请求的 <see cref="T:System.Windows.Documents.FixedPage" /> 内容。 </summary>
      <returns>
        <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 请求的 <see cref="T:System.Windows.Documents.PageContent" /> 的可视化树的根元素。</returns>
    </member>
    <member name="T:System.Windows.Documents.GetPageRootCompletedEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Documents.PageContent" /> 类的 <see cref="E:System.Windows.Documents.PageContent.GetPageRootCompleted" /> 事件的方法。 </summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>表示用于呈现固定文本的标志符号集。</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Glyphs" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.BidiLevel">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Glyphs" /> 的双向嵌套级别。  </summary>
      <returns>一个表示双向嵌套级别的 <see cref="T:System.Int32" /> 值。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.BidiLevelProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.BidiLevel" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.CaretStops">
      <summary>获取或设置对应于表示 <see cref="T:System.Windows.Documents.Glyphs" /> 的 Unicode 字符串中码位的脱字符。  </summary>
      <returns>一个表示该码位是否存在脱字符的 <see cref="T:System.String" /> 类型的值。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.CaretStopsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.CaretStops" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.DeviceFontName">
      <summary>获取或设置已优化其 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的特定设备字体。  </summary>
      <returns>一个表示设备字体名称的 <see cref="T:System.String" /> 的值。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.DeviceFontNameProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>获取或设置用于填充 <see cref="T:System.Windows.Documents.Glyphs" /> 类的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用于填充 <see cref="T:System.Windows.Documents.Glyphs" /> 类的 <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>获取或设置用于呈现 <see cref="T:System.Windows.Documents.Glyphs" /> 类的全身大小。  </summary>
      <returns>一个 <see cref="T:System.Double" /> 值，表示用于呈现的全身大小。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>获取或设置表示用于呈现 <see cref="T:System.Windows.Documents.Glyphs" /> 类的字体位置的 <see cref="T:System.Uri" />。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" />，它表示用于呈现 <see cref="T:System.Uri" /> 类的字体位置。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>获取或设置表示 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的字形规范集合。</summary>
      <returns>表示 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的字形规范集合。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.IsSideways">
      <summary>确定是否旋转此 <see cref="T:System.Windows.Documents.Glyphs" /> 对象。  </summary>
      <returns>如果组成 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的标志符号按逆时针旋转 90°，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IsSidewaysProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.IsSideways" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的 X 的原始值。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> 对象的 x 原点。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的 Y 原始值。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> 对象的 y 原点。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Glyphs" /> 类的 <see cref="T:System.Windows.Media.StyleSimulations" />。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> 类的一个 <see cref="T:System.Windows.Media.StyleSimulations" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.ToGlyphRun">
      <summary>根据 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的属性创建一个 <see cref="T:System.Windows.Media.GlyphRun" />。</summary>
      <returns>使用 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的属性创建的 <see cref="T:System.Windows.Media.GlyphRun" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>获取或设置一个表示 <see cref="T:System.Windows.Documents.Glyphs" /> 对象的 Unicode 字符串的 <see cref="T:System.String" />。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> 对象的 Unicode 字符串。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依赖项属性的标识符。 </returns>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>提供用于承载流内容中超链接的功能的内联级别的流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类一个默认的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的初始内容。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类的一个新实例，使用指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新 <see cref="T:System.Windows.Documents.Hyperlink" /> 的初始内容，并使用一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.Hyperlink" /> 的插入位置。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Hyperlink" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Inline" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的 <see cref="T:System.Windows.Documents.Hyperlink" /> 元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Hyperlink" /> 类的一个新实例，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，以指示该新 <see cref="T:System.Windows.Documents.Hyperlink" /> 所包含的选定内容的开始位置和结束位置。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" />，指示该新 <see cref="T:System.Windows.Documents.Hyperlink" /> 所包含的选定内容的开始位置。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" />，指示该新 <see cref="T:System.Windows.Documents.Hyperlink" /> 所包含的选定内容的结束位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> 或 <paramref name="end" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> 和 <paramref name="end" /> 不能解析为可包含在 <see cref="T:System.Windows.Documents.Span" /> 元素中的内容范围；例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示的位置处于不同的段落中。</exception>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.BaseUri">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Hyperlink" /> 的基 URI。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> 的基 URI。</returns>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>在 <see cref="T:System.Windows.Documents.Hyperlink" /> 上单击鼠标左键时发生。</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.ClickEvent">
      <summary>标识 <see cref="E:System.Windows.Documents.Hyperlink.Click" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Documents.Hyperlink.Click" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>获取或设置要与 <see cref="T:System.Windows.Documents.Hyperlink" /> 关联的命令。  </summary>
      <returns>要与 <see cref="T:System.Windows.Documents.Hyperlink" /> 关联的命令。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>获取或设置与由 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性指定的命令关联的命令参数。  </summary>
      <returns>一个对象，指定由 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性指定的命令的参数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandTarget">
      <summary>获取或设置要对其执行由 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性指定的命令的目标元素。  </summary>
      <returns>要对其执行由 <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 属性指定的命令的目标元素。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.DoClick">
      <summary>模拟用户单击 <see cref="T:System.Windows.Documents.Hyperlink" /> 的操作。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.IsEnabledCore">
      <summary>获取一个值，该值指示是否启用了 <see cref="T:System.Windows.Documents.Hyperlink" />。</summary>
      <returns>如果启用 <see cref="T:System.Windows.Documents.Hyperlink" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>获取或设置激活 <see cref="T:System.Windows.Documents.Hyperlink" /> 时要导航到的 URI。 </summary>
      <returns>激活 <see cref="T:System.Windows.Documents.Hyperlink" /> 时要导航到的 <see cref="T:System.Uri" />。默认值为 null。说明只有 <see cref="T:System.Windows.Documents.Hyperlink" /> 的直接或间接父级为导航宿主时，<see cref="T:System.Windows.Documents.Hyperlink" /> 才能导航到 <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 属性的值，导航宿主包括 <see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" /> 或任何可承载 XBAP 的浏览器（包括 Internet Explorer 7、Microsoft Internet Explorer 6 和 Firefox 2.0 以上版本）。有关更多信息，请参见导航概述中的“导航宿主”部分。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnClick">
      <summary>处理 <see cref="E:System.Windows.Documents.Hyperlink.Click" /> 路由事件。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Documents.Hyperlink" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.Hyperlink" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>处理 <see cref="E:System.Windows.ContentElement.KeyDown" /> 路由事件。</summary>
      <param name="e">与 <see cref="E:System.Windows.ContentElement.KeyDown" /> 事件关联的参数。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>处理 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 路由事件。</summary>
      <param name="e">与 <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> 事件关联的参数。</param>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>处理 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 路由事件。</summary>
      <param name="e">与 <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> 事件关联的参数。</param>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.RequestNavigate">
      <summary>在请求导航事件时发生。</summary>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.RequestNavigateEvent">
      <summary>标识 <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 路由事件。</summary>
      <returns>
        <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Hyperlink" /> 的基 URI。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> 的基 URI。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Hyperlink" /> 的目标窗口或框架的名称。  </summary>
      <returns>一个字符串，指定 <see cref="T:System.Windows.Documents.Hyperlink" /> 的目标窗口或框架的名称。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>为所有内联流内容元素提供基类的抽象类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>由某个派生类调用时，初始化基类值。</summary>
    </member>
    <member name="P:System.Windows.Documents.Inline.BaselineAlignment">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.Inline" /> 元素的基线对齐方式。   </summary>
      <returns>
        <see cref="T:System.Windows.BaselineAlignment" /> 枚举的一个成员，它指定 <see cref="T:System.Windows.Documents.Inline" /> 元素的基线对齐方式。默认值为 <see cref="T:System.Windows.BaselineAlignment" />.Baseline。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.BaselineAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.BaselineAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.FlowDirection">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Windows.Documents.Inline" /> 元素中内容流的相对方向。  </summary>
      <returns>
        <see cref="T:System.Windows.FlowDirection" /> 枚举的一个成员，它指定相对流动方向。获取此属性将返回当前有效的流动方向。设置此属性将导致 <see cref="T:System.Windows.Documents.Inline" /> 元素的内容沿指示的方向重新流动。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.NextInline">
      <summary>获取与此元素对等的下一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Inline" /> 对象，它表示与此元素对等的下一个 <see cref="T:System.Windows.Documents.Inline" /> 元素；如果没有下一个 <see cref="T:System.Windows.Documents.Inline" /> 元素，则为 null。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.PreviousInline">
      <summary>获取与此元素对等的上一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Inline" /> 对象，它表示与此元素对等的上一个 <see cref="T:System.Windows.Documents.Inline" /> 元素；如果没有上一个 <see cref="T:System.Windows.Documents.Inline" /> 元素，则为 null。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.SiblingInlines">
      <summary>获取一个 <see cref="T:System.Windows.Documents.InlineCollection" />，它包含与此元素同级（对等）的 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.InlineCollection" /> 对象，它包含与此元素同级的 <see cref="T:System.Windows.Documents.Inline" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>获取一个 <see cref="T:System.Windows.TextDecorationCollection" />，它包含要应用于此元素的文本修饰。  </summary>
      <returns>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 集合，它包含应用于此元素的文本修饰。默认值为 null（不应用任何文本修饰）。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>表示 <see cref="T:System.Windows.Documents.Inline" /> 元素的集合。<see cref="T:System.Windows.Documents.InlineCollection" /> 定义 <see cref="T:System.Windows.Documents.Paragraph" />、<see cref="T:System.Windows.Documents.Span" /> 和 <see cref="T:System.Windows.Controls.TextBlock" /> 元素允许使用的子内容。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>用作为 <see cref="T:System.String" /> 提供的给定文本添加一个隐式 <see cref="T:System.Windows.Documents.Run" /> 元素。</summary>
      <param name="text">设置为隐式 <see cref="T:System.Windows.Documents.Run" /> 的 <see cref="P:System.Windows.Documents.Run.Text" /> 属性的文本。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.Windows.UIElement)">
      <summary>添加一个隐式 <see cref="T:System.Windows.Documents.InlineUIContainer" />，提供的 <see cref="T:System.Windows.UIElement" /> 已经包含在其中。 </summary>
      <param name="uiElement">设置为隐式 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的 <see cref="P:System.Windows.Documents.InlineUIContainer.Child" /> 属性的 <see cref="T:System.Windows.UIElement" />。</param>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.FirstInline">
      <summary>获取此 <see cref="T:System.Windows.Documents.InlineCollection" /> 实例中的第一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.InlineCollection" /> 实例中的第一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.InlineCollection.LastInline">
      <summary>获取此 <see cref="T:System.Windows.Documents.InlineCollection" /> 实例中的最后一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.InlineCollection" /> 实例中的最后一个 <see cref="T:System.Windows.Documents.Inline" /> 元素。</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>使 <see cref="T:System.Windows.UIElement" /> 元素（即<see cref="T:System.Windows.Controls.Button" />）能够嵌入到（承载）流内容中。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)">
      <summary>初始化 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.UIElement" /> 对象作为新的 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的初始内容。</summary>
      <param name="childUIElement">
        <see cref="T:System.Windows.UIElement" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 类的一个新实例，使用指定 <see cref="T:System.Windows.UIElement" /> 对象作为新 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 元素的插入位置。</summary>
      <param name="childUIElement">一个 <see cref="T:System.Windows.UIElement" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.UIElement" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>获取或设置由 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 承载的 <see cref="T:System.Windows.UIElement" />。</summary>
      <returns>由 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 承载的 <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>提供一个内联级别的流内容元素，该元素导致内容以斜体样式呈现。</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Italic" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Italic" /> 类的一个新实例，该类使用指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容。</summary>
      <param name="childInline">新的 <see cref="T:System.Windows.Documents.Italic" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Italic" /> 类的一个新实例，该类使用指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容，并具有一个用于指定 <see cref="T:System.Windows.Documents.Inline" /> 新元素插入位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <param name="childInline">初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Inline" />。</param>
      <param name="insertionPosition">所创建 <see cref="T:System.Windows.Documents.Italic" /> 元素的插入位置。</param>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Italic" /> 类的一个新实例，该类具有一些指定的 <see cref="T:System.Windows.Documents.TextPointer" /> 对象，这些对象指示新的 <see cref="T:System.Windows.Documents.Italic" /> 将包含的选定内容的开始和结束位置。</summary>
      <param name="start">新的 <see cref="T:System.Windows.Documents.Italic" /> 将包含的选定内容的开始位置。</param>
      <param name="end">新的 <see cref="T:System.Windows.Documents.Italic" /> 将包含的选定内容的结束位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="start" /> 或 <paramref name="end" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> 和 <paramref name="end" /> 不能解析为可包含在一个 <see cref="T:System.Windows.Documents.Italic" /> 元素中的一个内容范围；例如，如果 <paramref name="start" /> 和 <paramref name="end" /> 指示的位置处于不同的段落中。</exception>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>导致在流内容中发生换行的内联流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.LineBreak" /> 类的一个新默认实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor(System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.LineBreak" /> 类的一个新实例，并在指定位置插入新的 <see cref="T:System.Windows.Documents.LineBreak" />。</summary>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的 <see cref="T:System.Windows.Documents.LineBreak" /> 元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="T:System.Windows.Documents.LinkTarget">
      <summary>表示某页上的一个元素，可以从其他文档或同一文档中的其他位置链接到该元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTarget.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.LinkTarget" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.LinkTarget.Name">
      <summary>获取或设置此 <see cref="T:System.Windows.Documents.LinkTarget" /> 标识为可链接元素的元素名称。</summary>
      <returns>一个 <see cref="T:System.String" />，与对应于此 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素的标记元素的 <see cref="P:System.Windows.FrameworkElement.Name" /> 属性相同。</returns>
    </member>
    <member name="T:System.Windows.Documents.LinkTargetCollection">
      <summary>提供 <see cref="T:System.IO.Packaging.Package" /> 中所有 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素的集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.LinkTargetCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Add(System.Windows.Documents.LinkTarget)">
      <summary>将指定的 <see cref="T:System.Windows.Documents.LinkTarget" /> 添加到集合。</summary>
      <returns>添加的 <paramref name="value" /> 的集合中从零开始的索引。</returns>
      <param name="value">添加的链接目标。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Contains(System.Windows.Documents.LinkTarget)">
      <summary>指定一个值，该值指示某个特定 <see cref="T:System.Windows.Documents.LinkTarget" /> 是否位于集合中。</summary>
      <returns>如果 <paramref name="value" /> 存在，则为 true；否则为 false。</returns>
      <param name="value">要测试的链接。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.CopyTo(System.Windows.Documents.LinkTarget[],System.Int32)">
      <summary>从指定索引处开始，将集合中的项复制到指定的数组。</summary>
      <param name="array">目标数组。</param>
      <param name="index">在其中复制第一项所在的数组位置的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.IndexOf(System.Windows.Documents.LinkTarget)">
      <summary>获取指定项的索引。</summary>
      <returns>如果在集合中找到该对象，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在集合中定位的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Insert(System.Int32,System.Windows.Documents.LinkTarget)">
      <summary>将指定的项插入集合中的指定索引处。</summary>
      <param name="index">在其位置插入链接目标的点。</param>
      <param name="value">要插入的目标。</param>
    </member>
    <member name="P:System.Windows.Documents.LinkTargetCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的 <see cref="T:System.Windows.Documents.LinkTarget" />。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Windows.Documents.LinkTarget" />。</returns>
      <param name="index">正在写入或读取的目标的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.LinkTargetCollection.Remove(System.Windows.Documents.LinkTarget)">
      <summary>从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要移除的链接目标。</param>
    </member>
    <member name="T:System.Windows.Documents.List">
      <summary>提供用于在有序列表或无序列表中呈现内容的功能的块级别流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.List" /> 类的新的空实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)">
      <summary>初始化 <see cref="T:System.Windows.Documents.List" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.ListItem" /> 对象作为新的 <see cref="T:System.Windows.Documents.List" /> 的初始内容。</summary>
      <param name="listItem">一个 <see cref="T:System.Windows.Documents.ListItem" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.List" /> 的初始内容。</param>
    </member>
    <member name="P:System.Windows.Documents.List.ListItems">
      <summary>获取一个 <see cref="T:System.Windows.Documents.ListItemCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.List" /> 的内容的 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.ListItemCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.List" /> 的内容的 <see cref="T:System.Windows.Documents.ListItem" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerOffset">
      <summary>获取或设置每个 <see cref="T:System.Windows.Documents.ListItem" /> 元素的内容和列表标记的近边缘之间所需的距离。  </summary>
      <returns>一个双精度值，该值指定列表内容和列表标记的近边缘之间所需的距离（以与设备无关的像素为单位）。  如果值为 <see cref="F:System.Double.NaN" />（等效于“Auto”特性值），则标记偏移量会自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.List.MarkerOffset" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.List.MarkerOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.MarkerStyle">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.List" /> 的标记样式。  </summary>
      <returns>
        <see cref="T:System.Windows.TextMarkerStyle" /> 枚举的一个成员，指定要使用的标记样式。默认值为 <see cref="F:System.Windows.TextMarkerStyle.Disc" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.MarkerStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.List.MarkerStyle" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.List.MarkerStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.List.StartIndex">
      <summary>获取或设置用于标记有序列表中的项的起始索引。  </summary>
      <returns>用于标记有序列表中的项的起始索引。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Documents.List.StartIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.List.StartIndex" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.List.StartIndex" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.ListItem">
      <summary>一个流内容元素，表示有序或无序的 <see cref="T:System.Windows.Documents.List" /> 中的一个特定内容项。</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.ListItem" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)">
      <summary>初始化 <see cref="T:System.Windows.Documents.ListItem" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Paragraph" /> 对象作为新的 <see cref="T:System.Windows.Documents.ListItem" /> 的初始内容。</summary>
      <param name="paragraph">一个 <see cref="T:System.Windows.Documents.Paragraph" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.ListItem" /> 的初始内容。</param>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Blocks">
      <summary>获取一个块集合，该集合包含 <see cref="T:System.Windows.Documents.ListItem" /> 的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个块集合，该集合包含 <see cref="T:System.Windows.Documents.ListItem" /> 的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderBrush">
      <summary>获取或设置绘制元素边框时使用的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用来应用于元素边框的画笔。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.BorderThickness">
      <summary>获取或设置元素的边框宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边框宽度（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.FlowDirection">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.ListItem" /> 元素中内容的相对流动方向。  </summary>
      <returns>
        <see cref="T:System.Windows.FlowDirection" /> 值之一，指定相对流动方向。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineHeight">
      <summary>获取或设置各行内容的高度。  </summary>
      <returns>各行的高度以与设备无关的像素为单位表示，其值的范围为 0.0034 到 160000。<see cref="F:System.Double.NaN" /> 的值（等效于特性值“Auto”）使行高由当前字体特征自动确定。默认值为 <see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.LineStackingStrategy">
      <summary>获取或设置一种机制，根据该机制来为 <see cref="T:System.Windows.Documents.ListItem" /> 内的每一行文字确定一个行框。  </summary>
      <returns>指定该机制的 <see cref="T:System.Windows.LineStackingStrategy" /> 值之一，根据该机制来为 <see cref="T:System.Windows.Documents.ListItem" /> 内的每一行文字确定一个行框。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.List">
      <summary>获取包含 <see cref="T:System.Windows.Documents.ListItem" /> 的 <see cref="T:System.Windows.Documents.List" />。</summary>
      <returns>包含 <see cref="T:System.Windows.Documents.ListItem" /> 的列表。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Margin">
      <summary>获取或设置元素的边距宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的边距宽度（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.MarginProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.Margin" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.Margin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.NextListItem">
      <summary>获取包含 <see cref="T:System.Windows.Documents.List" /> 中的下一个 <see cref="T:System.Windows.Documents.ListItem" />。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.List" /> 中的下一个 <see cref="T:System.Windows.Documents.ListItem" />；如果没有下一个 <see cref="T:System.Windows.Documents.ListItem" />，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.Padding">
      <summary>获取或设置元素的边距宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，指定要应用的填充量（以与设备无关的像素为单位）。默认值为等于零 (0.0) 的一个统一宽度。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.Padding" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.PreviousListItem">
      <summary>获取包含 <see cref="T:System.Windows.Documents.List" /> 中的上一个 <see cref="T:System.Windows.Documents.ListItem" />。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.List" /> 中的上一个 <see cref="T:System.Windows.Documents.ListItem" />；如果没有上一个 <see cref="T:System.Windows.Documents.ListItem" />，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示在序列化 <see cref="T:System.Windows.Documents.ListItem" /> 对象期间，是否应对 <see cref="P:System.Windows.Documents.ListItem.Blocks" /> 属性的有效值进行序列化。</summary>
      <returns>如果 <see cref="P:System.Windows.Documents.ListItem.Blocks" /> 属性应被序列化，则为 true；否则为 false。</returns>
      <param name="manager">对象的序列化服务管理器对象。</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.ListItem.SiblingListItems">
      <summary>获取包含 <see cref="T:System.Windows.Documents.ListItem" /> 元素的 <see cref="T:System.Windows.Documents.ListItemCollection" />，这些元素是当前 <see cref="T:System.Windows.Documents.ListItem" /> 元素的同级元素。</summary>
      <returns>一个包含 <see cref="T:System.Windows.Documents.ListItem" /> 子元素的 <see cref="T:System.Windows.Documents.ListItemCollection" />，这些元素直接由当前 <see cref="T:System.Windows.Documents.ListItem" /> 元素的父级承载；如果当前 <see cref="T:System.Windows.Documents.ListItem" /> 元素无父级，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItem.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。  </summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 值之一，它指定所需对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.ListItem.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.ListItem.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.ListItemCollection">
      <summary>表示 <see cref="T:System.Windows.Documents.ListItem" /> 元素的集合。<see cref="T:System.Windows.Documents.ListItemCollection" /> 定义了 <see cref="T:System.Windows.Documents.List" /> 元素可允许的子内容。</summary>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.FirstListItem">
      <summary>获取此 <see cref="T:System.Windows.Documents.ListItemCollection" /> 实例中的第一个 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.ListItemCollection" /> 实例中的第一个 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</returns>
    </member>
    <member name="P:System.Windows.Documents.ListItemCollection.LastListItem">
      <summary>获取此 <see cref="T:System.Windows.Documents.ListItemCollection" /> 实例中的最后一个 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.ListItemCollection" /> 实例中的最后一个 <see cref="T:System.Windows.Documents.ListItem" /> 元素。</returns>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>指定执行某些文本操作所使用的逻辑方向，如在相对于指定位置（一个 <see cref="T:System.Windows.Documents.TextPointer" />）的文本中进行插入、检索或导航等操作。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>向后或从右到左。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>向前或从左到右。</summary>
    </member>
    <member name="T:System.Windows.Documents.PageContent">
      <summary>提供有关 <see cref="T:System.Windows.Documents.FixedDocument" /> 中的 <see cref="T:System.Windows.Documents.FixedPage" /> 元素的信息。</summary>
    </member>
    <member name="M:System.Windows.Documents.PageContent.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.PageContent" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Child">
      <summary>获取或设置与此 <see cref="T:System.Windows.Documents.PageContent" /> 关联的 <see cref="T:System.Windows.Documents.FixedPage" />。</summary>
      <returns>与此 <see cref="T:System.Windows.Documents.PageContent" /> 关联的 <see cref="T:System.Windows.Documents.FixedPage" />；如果 <see cref="P:System.Windows.Documents.PageContent.Source" /> 属性设置了 <see cref="T:System.Windows.Documents.FixedPage" />，则为 null。 </returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)">
      <summary>加载并返回 <see cref="T:System.Windows.Documents.FixedPage" /> 内容元素。 </summary>
      <returns>此页的可视化树的根元素。</returns>
      <param name="forceReload">如果为 true，则始终重新加载 <see cref="T:System.Windows.Documents.FixedPage" />，即使先前以对其进行加载和缓存；如果为 false，则仅在没有缓存的版本的情况下才加载 <see cref="T:System.Windows.Documents.FixedPage" />。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)">
      <summary>异步加载并返回 <see cref="T:System.Windows.Documents.FixedPage" /> 内容元素。 </summary>
      <param name="forceReload">如果为 true，则始终重新加载 <see cref="T:System.Windows.Documents.FixedPage" />，即使先前以对其进行加载和缓存；如果为 false，则仅在没有缓存的版本的情况下才加载 <see cref="T:System.Windows.Documents.FixedPage" />。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel">
      <summary>取消当前正在进行的任何 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 操作。</summary>
    </member>
    <member name="E:System.Windows.Documents.PageContent.GetPageRootCompleted">
      <summary>在 <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)" /> 完成时发生。</summary>
    </member>
    <member name="P:System.Windows.Documents.PageContent.LinkTargets">
      <summary>获取标识页上超链接可寻址位置的 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素的集合。 </summary>
      <returns>标识页上超链接可寻址位置的 <see cref="T:System.Windows.Documents.LinkTarget" /> 元素的 <see cref="T:System.Windows.Documents.LinkTargetCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>获取一个值，该值指示当序列化此 <see cref="T:System.Windows.Documents.PageContent" /> 时，是否应该序列化 <see cref="P:System.Windows.Documents.PageContent.Child" /> 属性的值。</summary>
      <returns>如果 <paramref name="manager" /> 不为 null 并且它没有 XmlWriter，则为 true；否则为 false。默认值为 false。</returns>
      <param name="manager">序列化服务提供程序。</param>
    </member>
    <member name="P:System.Windows.Documents.PageContent.Source">
      <summary>获取统一资源标识符 (URI) 或将其设置到 <see cref="T:System.Windows.Documents.FixedPage" /> 内容数据流。</summary>
      <returns>相应的 <see cref="T:System.Windows.Documents.FixedPage" /> 的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.PageContent.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.PageContent.Source" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.PageContent.Source" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />。</summary>
      <param name="value">要添加的子 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.PageContent.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Documents.PageContent.System#Windows#Markup#IUriContext#BaseUri">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Windows.Markup.IUriContext.BaseUri" />。</summary>
      <returns>当前上下文的基 URI。 </returns>
    </member>
    <member name="T:System.Windows.Documents.PageContentCollection">
      <summary>为文档页集合提供集合支持。 </summary>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.Add(System.Windows.Documents.PageContent)">
      <summary>向页集合中添加新页。</summary>
      <returns>已添加页的集合中从零开始的索引。</returns>
      <param name="newPageContent">要添加到集合中的新页。 </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newPageContent" /> 作为 null 传递。</exception>
      <exception cref="T:System.InvalidOperationException">作为 <paramref name="newPageContent" /> 传递的页面已存在于集合中。</exception>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Count">
      <summary>获取页集合中包含的元素数。</summary>
      <returns>集合中的元素数。</returns>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.GetEnumerator">
      <summary>返回用于循环访问页集合的一个枚举数。 </summary>
      <returns>一个可用于循环访问集合的枚举数。</returns>
    </member>
    <member name="P:System.Windows.Documents.PageContentCollection.Item(System.Int32)">
      <summary>获取集合中位于指定索引处的 <see cref="T:System.Windows.Documents.PageContent" /> 元素。 </summary>
      <returns>集合中位于指定索引处的页内容元素。 </returns>
      <param name="pageIndex">要获取的页的从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.PageContentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。请改用类型安全的 <see cref="M:System.Windows.Documents.PageContentCollection.GetEnumerator" /> 方法。</summary>
      <returns>枚举器。</returns>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>用于将内容分组到一个段落中的块级别流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Paragraph" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Paragraph" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容。</summary>
      <param name="inline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Paragraph" /> 的初始内容。</param>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>获取一个 <see cref="T:System.Windows.Documents.InlineCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.Paragraph" /> 的内容的顶级 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.InlineCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.Paragraph" /> 的内容的 <see cref="T:System.Windows.Documents.Inline" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepTogether">
      <summary>获取或设置一个值，该值指示是否可以用分页符或分栏符来断开段落的文本。  </summary>
      <returns>若要防止段落文本被断开，则设置为 true；否则，设置为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepTogetherProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.KeepTogether" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.KeepWithNext">
      <summary>获取或设置一个值，该值指示此段落和下一段落之间是否可以出现一个换行符。  </summary>
      <returns>若要防止在此段落与下一段落之间出现换行符，则应设置为 true；否则，设置为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.KeepWithNextProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinOrphanLines">
      <summary>获取或设置一个值，该值指定了在用分页符或分栏符断开一个 <see cref="T:System.Windows.Documents.Paragraph" /> 时，换行符前保留的最小行数。  </summary>
      <returns>一个整数，指定了在用分页符或分栏符断开一个 <see cref="T:System.Windows.Documents.Paragraph" /> 时，换行符前保留的最小行数。零值指示无最小行数。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinOrphanLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.MinWidowLines">
      <summary>获取或设置一个值，该值指定了在用分页符或分栏符断开一个 <see cref="T:System.Windows.Documents.Paragraph" /> 时，换行符后的最小行数。  </summary>
      <returns>一个整数，指定了在用分页符或分栏符断开一个 <see cref="T:System.Windows.Documents.Paragraph" /> 时，换行符后的最小行数。零值指示无最小行数。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.MinWidowLinesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>指示是否应保持 <see cref="P:System.Windows.Documents.Paragraph.Inlines" /> 属性。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextDecorations">
      <summary>获取或设置一个 <see cref="T:System.Windows.TextDecorationCollection" />，它包含应用于此元素的文本修饰。  </summary>
      <returns>一个 <see cref="T:System.Windows.TextDecorationCollection" /> 集合，它包含应用于此元素的文本修饰。值为 null 表示不应用任何文本修饰。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextDecorationsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.TextDecorations" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.TextIndent">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Documents.Paragraph" /> 的第一行的缩进距离。  </summary>
      <returns>一个双精度值，该值指定段落第一行的缩进量（以与设备无关的像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Paragraph.TextIndentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Paragraph.TextIndent" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>应包含一连串格式化或未格式化文本的内联级别的流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Run" /> 类的一个新默认实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Run" /> 类的一个新实例，将指定字符串作为文本运行的初始内容。</summary>
      <param name="text">指定 <see cref="T:System.Windows.Documents.Run" /> 对象的初始内容的字符串。</param>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Run" /> 类的一个新实例，将指定字符串作为文本运行的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定文本运行的插入位置。</summary>
      <param name="text">指定 <see cref="T:System.Windows.Documents.Run" /> 对象的初始内容的字符串。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建文本运行的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示在序列化 <see cref="T:System.Windows.Documents.Run" /> 对象期间，是否应对 <see cref="P:System.Windows.Documents.Run.Text" /> 属性的有效值进行序列化。</summary>
      <returns>如果 <see cref="P:System.Windows.Documents.Run.Text" /> 属性应被序列化，则为 true；否则为 false。</returns>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>获取或设置此文本 <see cref="T:System.Windows.Documents.Run" /> 的未格式化文本内容。</summary>
      <returns>一个字符串，它指定此文本 <see cref="T:System.Windows.Documents.Run" /> 的非格式化文本内容。默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.TextProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Run.Text" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Run.Text" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>用于分组其他 <see cref="T:System.Windows.Documents.Block" /> 元素的块级别流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Section" /> 类的新的空实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Section.#ctor(System.Windows.Documents.Block)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Section" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的 <see cref="T:System.Windows.Documents.Section" /> 的初始内容。</summary>
      <param name="block">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Section" /> 的初始内容。</param>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>获取一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.Section" /> 的内容的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.Section" /> 的内容的 <see cref="T:System.Windows.Documents.Block" /> 元素此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>获取或设置一个值，该值指示当将 <see cref="T:System.Windows.Documents.Section" /> 根元素的内容置于剪贴板中时，是否应在最后一个段落之后插入尾随分段符。</summary>
      <returns>要指示应包含尾随分段符，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.Section.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>如果应序列化 <see cref="P:System.Windows.Documents.Section.Blocks" /> 属性，则为 true；否则为 false。</returns>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <exception cref="T:System.NullReferenceException">当 <paramref name="manager" /> 为 null 时引发。</exception>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>将其他 <see cref="T:System.Windows.Documents.Inline" /> 流内容元素分组。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Span" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Span" /> 类的一个新实例，并使用指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为其初始内容。</summary>
      <param name="childInline">新 <see cref="T:System.Windows.Documents.Span" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Span" /> 类的一个新实例，其中使用指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新 <see cref="T:System.Windows.Documents.Span" /> 的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.Inline" /> 元素的插入位置。</summary>
      <param name="childInline">一个 <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新 <see cref="T:System.Windows.Documents.Span" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Inline" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定要在创建后插入 <see cref="T:System.Windows.Documents.Span" /> 元素的位置，或者为 null 以表示没有自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Span" /> 类的一个新实例，其中使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象指示了该新 <see cref="T:System.Windows.Documents.Span" /> 将要包含的内容选择的开始位置和结束位置。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指示该新 <see cref="T:System.Windows.Documents.Span" /> 将要包含的内容选择的开始位置。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指示该新 <see cref="T:System.Windows.Documents.Span" /> 将要包含的内容选择的结束位置。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="start" /> 或 <paramref name="end" /> 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 <paramref name="start" /> 和 <paramref name="end" /> 没有解析为一个适于由 <see cref="T:System.Windows.Documents.Span" /> 元素包围的范围时引发；例如，当 <paramref name="start" /> 和 <paramref name="end" /> 指示位置位于不同的段落中时。</exception>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>获取一个 <see cref="T:System.Windows.Documents.InlineCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.Span" /> 的内容的顶级 <see cref="T:System.Windows.Documents.Inline" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.InlineCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.Span" /> 的内容的 <see cref="T:System.Windows.Documents.Inline" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>返回一个值，该值指示在 <see cref="T:System.Windows.Documents.Run" /> 对象的序列化期间，是否应对 <see cref="T:System.Windows.Documents.Span" /> 元素的内容进行序列化。</summary>
      <returns>如果内容应序列化，则为 true；否则为 false。</returns>
      <param name="manager">此对象的序列化服务管理器对象。</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Documents.Table">
      <summary>提供按行和列组织的基于网格的表示形式的块级别流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Table" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Table.BeginInit"></member>
    <member name="P:System.Windows.Documents.Table.CellSpacing">
      <summary>获取或设置表的单元格之间的间距量。  </summary>
      <returns>表的单元格之间的间距量，以与设备无关的像素为单位。默认值为 2.0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Table.CellSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Table.CellSpacing" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.Table.CellSpacing" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.Columns">
      <summary>获取一个 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 对象，它包含由表承载的列。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 对象，它包含由表承载的列（由 <see cref="T:System.Windows.Documents.TableColumn" /> 对象表示）。请注意，该数量可能并非表中呈现的实际列数。确定实际呈现的列数量的是表中的 <see cref="T:System.Windows.Documents.TableCell" /> 对象。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.EndInit"></member>
    <member name="P:System.Windows.Documents.Table.LogicalChildren">
      <summary>获取一个可用于迭代 <see cref="T:System.Windows.Documents.Table" /> 的逻辑子级的枚举数。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Table" /> 的逻辑子级的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Documents.Table" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.Table" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.Table.RowGroups">
      <summary>获取一个 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 集合对象，它包含由表承载的行组。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 集合对象，它包含由表承载的行组（由 <see cref="T:System.Windows.Documents.TableRowGroup" /> 对象表示）。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.ShouldSerializeColumns">
      <summary>获取一个值，该值指示在序列化 <see cref="T:System.Windows.Documents.Table" /> 对象期间，是否应对 <see cref="P:System.Windows.Documents.Table.Columns" /> 属性的有效值进行序列化。</summary>
      <returns>如果应该序列化 <see cref="P:System.Windows.Documents.Table.Columns" /> 属性，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Table.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.TableCell">
      <summary>定义 <see cref="T:System.Windows.Documents.Table" /> 中内容单元格的流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableCell" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableCell" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Block" /> 对象作为新的 <see cref="T:System.Windows.Documents.TableCell" /> 的初始内容。</summary>
      <param name="blockItem">一个 <see cref="T:System.Windows.Documents.Block" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.TableCell" /> 的初始内容。</param>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Blocks">
      <summary>获取一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.TableCell" /> 的内容的顶级 <see cref="T:System.Windows.Documents.Block" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.BlockCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.TableCell" /> 的内容的 <see cref="T:System.Windows.Documents.Block" /> 元素此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderBrush">
      <summary>获取或设置绘制元素边框时使用的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用来应用于元素边框的画笔。默认值为 null 画笔。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderBrushProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.BorderThickness">
      <summary>获取或设置元素的边框宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的边框宽度（以与设备无关的像素为单位）。默认值为统一宽度值零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.BorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.ColumnSpan">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.TableCell" /> 应跨越的列数。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableCell" /> 应跨越的列数。默认值为 1（无跨距）。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.ColumnSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.FlowDirection">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Windows.Documents.TableCell" /> 元素中内容流的相对方向。  </summary>
      <returns>
        <see cref="T:System.Windows.FlowDirection" /> 枚举的一个成员，它指定相对流动方向。获取此属性将返回当前有效的流动方向。设置此属性将导致 <see cref="T:System.Windows.Documents.TableCell" /> 元素的内容重新沿指示的方向流动。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.FlowDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineHeight">
      <summary>获取或设置各行内容的高度。  </summary>
      <returns>一个双精度值，指定行的高度（以与设备无关的像素为单位）。<see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 必须等于或大于 0.0034 并且等于或小于 160000。<see cref="F:System.Double.NaN" /> 的值（等同于特性值“Auto”）使行高由当前字体特征自动确定。  默认值为 <see cref="F:System.Double.NaN" />。</returns>
      <exception cref="T:System.ArgumentException">当尝试将 <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 设置为一个非正值时引发。</exception>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.LineStackingStrategy">
      <summary>获取或设置一种机制，根据该机制来为 <see cref="T:System.Windows.Documents.TableCell" /> 内的每一行文本确定一个行框。  </summary>
      <returns>一种机制，根据该机制来为 <see cref="T:System.Windows.Documents.TableCell" /> 内的每一行文本确定一个行框。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" />  依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Documents.TableCell" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Documents.TableCell" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.Padding">
      <summary>获取或设置元素的边距宽度。  </summary>
      <returns>一个 <see cref="T:System.Windows.Thickness" /> 结构，它指定要应用的填充量（以与设备无关的像素为单位）。默认值为统一宽度值零 (0.0)。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.PaddingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.Padding" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.Padding" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.RowSpan">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.TableCell" /> 应跨越的行数。  </summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableCell" /> 应跨越的行数。默认值为 1（无跨距）。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.RowSpanProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCell.TextAlignment">
      <summary>获取或设置一个值，该值指示文本内容的水平对齐方式。  </summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 枚举的一个成员，它指定所需的对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableCell.TextAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.TableCellCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableCell" /> 对象的类型安全的有序集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)">
      <summary>将指定的 <see cref="T:System.Windows.Documents.TableCell" /> 追加到表单元格的集合。</summary>
      <param name="item">要追加到表单元格集合的 <see cref="T:System.Windows.Documents.TableCell" />。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="item" /> 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="item" /> 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Capacity">
      <summary>获取或设置为此集合预先分配的集合项容量。</summary>
      <returns>为此集合预先分配的集合项容量。默认值为 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试将 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 设置为小于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 的当前值的值时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)">
      <summary>查询集合中是否存在指定的项。</summary>
      <returns>如果指定的 <paramref name="item" /> 存在于集合中，则为 true，否则为 false。</returns>
      <param name="item">要查询是否存在于集合中的项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)">
      <summary>复制集合的内容并插入到指定数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="array" /> 中包括与 <see cref="T:System.Windows.Documents.TableCell" /> 类型不兼容的项，或 <paramref name="index" /> 指定的位置超出 <paramref name="array" /> 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="array" /> 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="index" /> 小于 0 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)">
      <summary>复制集合的内容并插入到指定的 <see cref="T:System.Windows.Documents.TableCell" /> 数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维 <see cref="T:System.Windows.Documents.TableCell" /> 数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="array" /> 中包括与 <see cref="T:System.Windows.Documents.TableCell" /> 类型不兼容的项，或 <paramref name="index" /> 指定的位置超出 <paramref name="array" /> 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="array" /> 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="index" /> 小于 0 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Count">
      <summary>获取集合中当前包含的项数。</summary>
      <returns>集合中当前包含的项数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)">
      <summary>返回指定集合项从零开始的索引。</summary>
      <returns>指定集合项的从零开始的索引，或 -1（如果指定项不是集合成员）。</returns>
      <param name="item">要返回其索引的集合项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)">
      <summary>将集合中的指定项插入指定的索引位置。</summary>
      <param name="index">从零开始的索引，指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合中的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="index" /> 小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="item" /> 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的集合项。这是一个索引属性。</summary>
      <returns>指定索引处的集合项。</returns>
      <param name="index">从零开始的索引，指定集合项的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="index" /> 小于零或 <paramref name="index" /> 大于等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)">
      <summary>从集合中移除指定的项。</summary>
      <returns>如果找到并移除了指定项，则为 true；否则为 false。</returns>
      <param name="item">要从集合中移除的项。</param>
      <exception cref="T:System.ArgumentException">当集合中不存在 <paramref name="item" /> 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="item" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，指定要移除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="index" /> 小于零或 <paramref name="index" /> 大于等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从集合中移除由起始索引和计数指定的项范围。</summary>
      <param name="index">从零开始的索引，指示要移除的一系列项的起始位置。</param>
      <param name="count">从 <paramref name="index" /> 所指定位置开始移除的项数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="index" /> 或 <paramref name="count" /> 小于零，或 <paramref name="index" /> 大于等于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 <paramref name="index" /> 和 <paramref name="count" /> 未指定此集合中的有效范围时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Windows.Documents.TableCellCollection" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果在 <see cref="T:System.Windows.Documents.TableCellCollection" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableCellCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableCellCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</param>
      <param name="value">要插入 <see cref="T:System.Windows.Documents.TableCellCollection" /> 中的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableCellCollection" /> 有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableCellCollection" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Documents.TableCellCollection" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TableCellCollection.TrimToSize">
      <summary>通过将基础集合 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 设置为等于集合中当前项的 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 来优化集合的内存占用。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableColumn">
      <summary>定义 <see cref="T:System.Windows.Documents.Table" /> 中列的流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumn.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableColumn" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Background">
      <summary>获取或设置用于填充 <see cref="T:System.Windows.Documents.TableColumn" /> 的内容的背景 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用于填充 <see cref="T:System.Windows.Documents.TableColumn" /> 的内容的背景 <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableColumn.Background" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableColumn.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumn.Width">
      <summary>获取或设置 <see cref="T:System.Windows.Documents.TableColumn" /> 元素的宽度。<see cref="P:System.Windows.Documents.TableColumn.Width" /> 属性从一端到另一端测量 <see cref="T:System.Windows.Documents.TableColumn" /> 内容、填充和边框之和。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TableColumn" /> 元素的宽度（作为 <see cref="T:System.Windows.GridLength" />）。</returns>
    </member>
    <member name="F:System.Windows.Documents.TableColumn.WidthProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TableColumn.Width" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.TableColumn.Width" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.TableColumnCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableColumn" /> 对象的类型安全的有序集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)">
      <summary>将指定项追加到集合。</summary>
      <param name="item">要追加到列集合的表列。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Capacity">
      <summary>获取或设置为此集合预先分配的集合项容量。</summary>
      <returns>为此集合预先分配的集合项容量。默认值为 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试将 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 设置为小于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 的当前值的值时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)">
      <summary>查询集合中是否存在指定的项。</summary>
      <returns>如果指定的 item 存在于集合中，则为 true；否则为 false。</returns>
      <param name="item">要查询是否存在于集合中的项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Array,System.Int32)">
      <summary>复制集合的内容并插入到指定数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TableColumn" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Windows.Documents.TableColumn[],System.Int32)">
      <summary>复制集合的内容并插入到指定的 <see cref="T:System.Windows.Documents.TableColumn" /> 数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维 <see cref="T:System.Windows.Documents.TableColumn" /> 数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TableColumn" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Count">
      <summary>获取集合中当前包含的项数。</summary>
      <returns>集合中当前包含的项数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)">
      <summary>返回指定集合项从零开始的索引。</summary>
      <returns>指定集合项从零开始的索引，或 -1（如果指定项不是集合成员）。</returns>
      <param name="item">要返回其索引的集合项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)">
      <summary>将集合中的指定项插入指定的索引位置。</summary>
      <param name="index">从零开始的索引，指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合中的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.Item(System.Int32)">
      <summary>获取指定索引处的集合项。这是一个索引属性。</summary>
      <returns>指定索引处的集合项。</returns>
      <param name="index">从零开始的索引，指定要检索的集合项的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)">
      <summary>从集合中移除指定的项。</summary>
      <returns>如果找到并移除了指定项，则为 true ；否则为 false。</returns>
      <param name="item">要从集合中移除的项。</param>
      <exception cref="T:System.ArgumentException">当集合中不存在 item 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，指定要移除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从集合中移除由起始索引和计数指定的项范围。</summary>
      <param name="index">从零开始的索引，指示要移除的项范围的开始位置。</param>
      <param name="count">从 <paramref name="index" /> 所指定位置开始移除的项数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 或 count 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 index 和 count 未指定此集合中的有效范围时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)" /> 方法。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.Clear" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)" /> 方法。</summary>
      <returns>如果在 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)" /> 方法。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)" /> 方法。</summary>
      <param name="index">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</param>
      <param name="value">要插入 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 中的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableCellCollection" /> 有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。请改用类型安全的 <see cref="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)" /> 属性。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />、<see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" /> 或 <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> 方法。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Documents.TableColumnCollection" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)" />、<see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)" /> 或 <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)" /> 方法。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Documents.TableColumnCollection.TrimToSize">
      <summary>通过将基础集合 <see cref="P:System.Windows.Documents.TableColumnCollection.Capacity" /> 设置为等于集合中当前项的 <see cref="P:System.Windows.Documents.TableColumnCollection.Count" /> 来优化集合的内存占用。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRow">
      <summary>定义 <see cref="T:System.Windows.Documents.Table" /> 中行的流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRow.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableRow" /> 类的新的空实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRow.Cells">
      <summary>获取包含 <see cref="T:System.Windows.Documents.TableRow" /> 的单元格的 <see cref="T:System.Windows.Documents.TableCellCollection" />。 </summary>
      <returns>子单元格集合。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.ShouldSerializeCells">
      <summary>返回一个值，该值指示在序列化 <see cref="T:System.Windows.Documents.TableRow" /> 对象期间，是否应对 <see cref="P:System.Windows.Documents.TableRow.Cells" /> 属性的有效值进行序列化。</summary>
      <returns>如果应对 <see cref="P:System.Windows.Documents.TableRow.Cells" /> 属性进行序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>
        <see cref="P:System.Windows.Documents.TableRow.Cells" /> 属性将子 <see cref="T:System.Windows.Documents.TableCell" /> 元素添加到 <see cref="T:System.Windows.Documents.TableRow" /> 中。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRow.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.TableRowCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableRow" /> 对象的类型安全的有序集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Add(System.Windows.Documents.TableRow)">
      <summary>将指定项追加到集合。</summary>
      <param name="item">要追加到集合或行的表行。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Capacity">
      <summary>获取或设置为此集合预先分配的集合项容量。</summary>
      <returns>为此集合预先分配的集合项容量。默认值为 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试将 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 设置为小于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 的当前值的值时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Contains(System.Windows.Documents.TableRow)">
      <summary>查询集合中是否存在指定的项。</summary>
      <returns>如果指定的 item 存在于集合中，则为 true；否则为 false。</returns>
      <param name="item">要查询是否存在于集合中的项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>复制集合的内容并插入到指定数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TableRow" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Windows.Documents.TableRow[],System.Int32)">
      <summary>复制集合的内容并插入到指定的 <see cref="T:System.Windows.Documents.TableRow" /> 数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维 <see cref="T:System.Windows.Documents.TableRow" /> 数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TableRow" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Count">
      <summary>获取集合中当前包含的项数。</summary>
      <returns>集合中当前包含的项数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.IndexOf(System.Windows.Documents.TableRow)">
      <summary>返回指定集合项从零开始的索引。</summary>
      <returns>指定集合项从零开始的索引，或 -1（如果指定项不是集合成员）。</returns>
      <param name="item">要返回其索引的集合项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)">
      <summary>将集合中的指定项插入指定的索引位置。</summary>
      <param name="index">从零开始的索引，指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合中的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.Item(System.Int32)">
      <summary>获取指定索引处的集合项。这是一个索引属性。</summary>
      <returns>指定索引处的集合项。</returns>
      <param name="index">从零开始的索引，指定要检索的集合项的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)">
      <summary>从集合中移除指定的项。</summary>
      <returns>如果找到并移除了指定项，则为 true ；否则为 false。</returns>
      <param name="item">要从集合中移除的项。</param>
      <exception cref="T:System.ArgumentException">当集合中不存在 item 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，指定要移除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从集合中移除由起始索引和计数指定的项范围。</summary>
      <param name="index">从零开始的索引，指示要移除的项范围的开始位置。</param>
      <param name="count">从 <paramref name="index" /> 所指定位置开始移除的项数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 或 count 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 index 和 count 未指定此集合中的有效范围时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Windows.Documents.TableRowCollection" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果在 <see cref="T:System.Windows.Documents.TableRowCollection" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableRowCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableRowCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</param>
      <param name="value">要插入 <see cref="T:System.Windows.Documents.TableRowCollection" /> 中的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableRowCollection" /> 有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableRowCollection" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Documents.TableRowCollection" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowCollection.TrimToSize">
      <summary>通过将基础集合 <see cref="P:System.Windows.Documents.TableRowCollection.Capacity" /> 设置为等于集合中当前项的 <see cref="P:System.Windows.Documents.TableRowCollection.Count" /> 来优化集合的内存占用。</summary>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroup">
      <summary>表示用于分组 <see cref="T:System.Windows.Documents.Table" /> 中的 <see cref="T:System.Windows.Documents.TableRow" /> 元素的流内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TableRowGroup" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroup.Rows">
      <summary>获取一个 <see cref="T:System.Windows.Documents.TableRowCollection" />，它包含组成 <see cref="T:System.Windows.Documents.TableRowGroup" /> 的内容的 <see cref="T:System.Windows.Documents.TableRow" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TableRowCollection" />，其中包含组成 <see cref="T:System.Windows.Documents.TableRowGroup" /> 的内容的 <see cref="T:System.Windows.Documents.TableRow" /> 元素。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.ShouldSerializeRows">
      <summary>指示是否应使 <see cref="P:System.Windows.Documents.TableRowGroup.Rows" /> 属性持久化。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>将表行添加到 <see cref="T:System.Windows.Documents.TableRowGroup" /> 集合中。</summary>
      <param name="value">要添加到集合中的 <see cref="T:System.Windows.Documents.TableRow" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.TableRowGroupCollection">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TableRowGroup" /> 对象的类型安全的有序集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Add(System.Windows.Documents.TableRowGroup)">
      <summary>将指定项追加到集合。</summary>
      <param name="item">要追加到集合的项。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Capacity">
      <summary>获取或设置为此集合预先分配的集合项容量。</summary>
      <returns>为此集合预先分配的集合项容量。默认值为 8。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当尝试将 <see cref="P:System.Windows.Documents.TableCellCollection.Capacity" /> 设置为小于 <see cref="P:System.Windows.Documents.TableCellCollection.Count" /> 的当前值的值时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Contains(System.Windows.Documents.TableRowGroup)">
      <summary>查询集合中是否存在指定的项。</summary>
      <returns>如果指定的 item 存在于集合中，则为 true；否则为 false。</returns>
      <param name="item">要查询是否存在于集合中的项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>复制集合的内容并插入到指定数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TableRowGroup" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Windows.Documents.TableRowGroup[],System.Int32)">
      <summary>复制集合的内容并插入到指定的 <see cref="T:System.Windows.Documents.TableRowGroup" /> 数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维 <see cref="T:System.Windows.Documents.TableRowGroup" /> 数组。此数组必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TableRowGroup" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Count">
      <summary>获取集合中当前包含的项数。</summary>
      <returns>集合中当前包含的项数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.IndexOf(System.Windows.Documents.TableRowGroup)">
      <summary>返回指定集合项从零开始的索引。</summary>
      <returns>指定集合项从零开始的索引，或 -1（如果指定项不是集合成员）。</returns>
      <param name="item">要返回其索引的集合项。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)">
      <summary>将集合中的指定项插入指定的索引位置。</summary>
      <param name="index">从零开始的索引，指定集合中要插入 <paramref name="item" /> 的位置。</param>
      <param name="item">要插入到集合中的项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于 0 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsReadOnly">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.IsSynchronized">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>当前，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.Item(System.Int32)">
      <summary>获取指定索引处的集合项。这是一个索引属性。</summary>
      <returns>指定索引处的集合项。</returns>
      <param name="index">从零开始的索引，指定要检索的集合项的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)">
      <summary>从集合中移除指定的项。</summary>
      <returns>如果找到并移除了指定项，则为 true ；否则为 false。</returns>
      <param name="item">要从集合中移除的项。</param>
      <exception cref="T:System.ArgumentException">当集合中不存在 item 时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除索引指定的项。</summary>
      <param name="index">从零开始的索引，指定要移除的集合项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>从集合中移除由起始索引和计数指定的项范围。</summary>
      <param name="index">从零开始的索引，指示要移除的项范围的开始位置。</param>
      <param name="count">从 <paramref name="index" /> 所指定位置开始移除的项数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 index 或 count 小于零，或 index 大于或等于 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 index 和 count 未指定此集合中的有效范围时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.SyncRoot">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果在 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</param>
      <param name="value">要插入 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 中的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Documents.TableRowGroupCollection" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的项的从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TableRowGroupCollection.TrimToSize">
      <summary>通过将基础集合 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Capacity" /> 设置为等于集合中当前项的 <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count" /> 来优化集合的内存占用。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextEffectResolver">
      <summary> 用于在文本容器中设置文本效果的帮助器类 </summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)">
      <summary> 将文本范围的文本效果解析为文本效果目标的列表。 </summary>
      <returns>与文本范围对应的 <see cref="T:System.Windows.Documents.TextEffectTarget" /> 对象的集合。</returns>
      <param name="startPosition">起始文本指针</param>
      <param name="endPosition">结束文本指针</param>
      <param name="effect">要应用于文本的效果</param>
    </member>
    <member name="T:System.Windows.Documents.TextEffectTarget">
      <summary>使用 <see cref="T:System.Windows.Documents.TextEffectResolver" /> 对文本设置效果所产生的结果。它由创建的 <see cref="T:System.Windows.Media.TextEffect" /> 和 <see cref="T:System.Windows.Media.TextEffect" /> 应设置为的 <see cref="T:System.Windows.DependencyObject" /> 组成。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Disable">
      <summary> 对效果目标禁用 <see cref="T:System.Windows.Media.TextEffect" />。 </summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.Element">
      <summary> 获取 <see cref="T:System.Windows.Media.TextEffect" /> 的目标 <see cref="T:System.Windows.DependencyObject" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.TextEffect" /> 的目标 <see cref="T:System.Windows.DependencyObject" />。 </returns>
    </member>
    <member name="M:System.Windows.Documents.TextEffectTarget.Enable">
      <summary>对目标文本启用 <see cref="T:System.Windows.Media.TextEffect" />。 </summary>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.IsEnabled">
      <summary>获取一个值，该值确定是否对目标元素启用文本效果。 </summary>
      <returns>如果对目标启用 <see cref="T:System.Windows.Media.TextEffect" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextEffectTarget.TextEffect">
      <summary> 获取 <see cref="T:System.Windows.Documents.TextEffectTarget" /> 的<see cref="T:System.Windows.Media.TextEffect" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextEffectTarget" /> 的 <see cref="T:System.Windows.Media.TextEffect" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>用作抽象类 <see cref="T:System.Windows.Documents.Block" /> 和 <see cref="T:System.Windows.Documents.Inline" /> 的基类的抽象类。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Background">
      <summary>获取或设置用于填充内容区域背景的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>用于填充内容区域背景的画笔，或 null（不使用背景画笔）。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.BackgroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.Background" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Background" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>获取表示元素中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>表示 <see cref="T:System.Windows.Documents.TextElement" /> 中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>获取表示元素中内容开头的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>表示 <see cref="T:System.Windows.Documents.TextElement" /> 中内容开头的 <see cref="T:System.Windows.Documents.TextPointerContext" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>获取表示紧接元素末尾之后位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>表示紧接 <see cref="T:System.Windows.Documents.TextElement" /> 末尾之后位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>获取表示紧邻元素开头之前位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>表示紧邻 <see cref="T:System.Windows.Documents.TextElement" /> 开头之前位置的 <see cref="T:System.Windows.Documents.TextPointerContext" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>获取或设置元素内容的首选顶级字体系列。  </summary>
      <returns>一个 <see cref="T:System.Windows.Media.FontFamily" /> 对象，指定首选字体系列，或者指定一个主要首选字体系列并附带一个或多个备用字体系列。默认字体是由 <see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 值确定的字体。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>获取或设置元素内容的字号。  </summary>
      <returns>希望使用的字号，以与设备无关的像素为单位，大于 0.001，小于或等于 35791。默认值取决于当前系统设置以及 <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 值。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 设置为大于 35791 或小于等于 0.001 的值。</exception>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>获取或设置元素内容的字体拉伸特征。  </summary>
      <returns>
        <see cref="T:System.Windows.FontStretch" /> 结构，指定希望使用的字体拉伸特征。默认值为 <see cref="P:System.Windows.FontStretches.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>获取或设置元素内容的字形。  </summary>
      <returns>
        <see cref="T:System.Windows.FontStyles" /> 类的一个成员，指定所需的字形。默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 值确定。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>获取或设置元素内容的顶级字体粗细。  </summary>
      <returns>
        <see cref="T:System.Windows.FontWeights" /> 类的一个成员，指定所需的字体粗细。默认值由 <see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 值确定。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>获取或设置要应用于元素内容的 <see cref="T:System.Windows.Media.Brush" />。  </summary>
      <returns>要应用于文本内容的画笔。默认值为 <see cref="P:System.Windows.Media.Brushes.Black" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElement.LogicalChildren">
      <summary>获取一个可用于迭代该元素的逻辑子元素的枚举数。</summary>
      <returns>用于逻辑子级的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>处理元素上存在的一个或多个依赖项属性的有效值已更改的通知。 </summary>
      <param name="e">与属性值更改关联的参数。<see cref="P:System.Windows.DependencyPropertyChangedEventArgs.Property" /> 属性指定已更改的属性，<see cref="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" /> 属性指定之前的属性值，<see cref="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" /> 属性指定新的属性值。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.TextEffects">
      <summary>获取或设置应用于元素内容的文本效果集合。  </summary>
      <returns>一个 <see cref="T:System.Windows.Media.TextEffectCollection" />，其中包含一个或多个 <see cref="T:System.Windows.Media.TextEffect" /> 对象，这些对象定义了要应用于此元素内容的效果。默认值为 null（不是空集合）。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.TextEffectsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.TextEffects" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Typography">
      <summary>获取该元素内容的当前有效的版式变体。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Typography" /> 对象，它指定当前有效的版式变体。有关默认版式值的列表，请参见 <see cref="T:System.Windows.Documents.Typography" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TextElement" /> 对象的类型安全的有序集合。这是一个泛型集合，用于使用从 <see cref="T:System.Windows.Documents.TextElement" /> 派生的指定类型的对象。</summary>
      <typeparam name="TextElementType">泛型集合的类型说明符。可接受的类型被约束为一种 <see cref="T:System.Windows.Documents.TextElement" /> 或 <see cref="T:System.Windows.Documents.TextElement" /> 的后代。</typeparam>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Add(`0)">
      <summary>将指定项追加到集合。</summary>
      <param name="item">要追加到集合的项。</param>
      <exception cref="T:System.ArgumentException">当 item 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 item 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)">
      <summary>将指定范围内的项追加到集合中。</summary>
      <param name="range">实现 <see cref="T:System.Collections.IEnumerable" /> 接口并指定要添加到集合中的项的范围的对象。</param>
      <exception cref="T:System.ArgumentException">当 range 包括任何 null 项时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 range 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Clear">
      <summary>清除集合中的所有项。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)">
      <summary>查询集合中是否存在指定的项。</summary>
      <returns>如果指定的 item 存在于集合中，则为 true；否则为 false。</returns>
      <param name="item">要查询是否存在于集合中的项。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>复制集合的内容并插入到指定数组中，从数组中指定的索引位置开始插入。</summary>
      <param name="array">集合内容将要复制到的一维数组。此数组必须使用从零开始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中从零开始的索引，指定插入复制的集合对象的开始位置。</param>
      <exception cref="T:System.ArgumentException">当 array 中包括与 <see cref="T:System.Windows.Documents.TextElement" /> 类型不兼容的项，或 arrayIndex 指定的位置超出 array 的边界时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 array 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">当 arrayIndex 小于 0 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.Count">
      <summary>获取当前集合中项的数目。</summary>
      <returns>当前集合中项的数目。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator">
      <summary>返回集合内容的一个枚举数。</summary>
      <returns>集合内容的一个枚举数。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)">
      <summary>将集合中的指定项插入到指定集合项之后。</summary>
      <param name="previousSibling">集合中在其后插入新项的项。</param>
      <param name="newItem">要插入到集合中的项。</param>
      <exception cref="T:System.ArgumentException">当 newItem 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 previousSibling 或 newItem 为 null 时引发。</exception>
      <exception cref="T:System.InvalidOperationException">当 previousSibling 不属于此集合时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)">
      <summary>将集合中的指定项插入到指定集合项之前。</summary>
      <param name="nextSibling">集合中在其前插入新项的项。</param>
      <param name="newItem">要插入到集合中的项。</param>
      <exception cref="T:System.ArgumentException">当 newItem 已属于集合时引发。</exception>
      <exception cref="T:System.ArgumentNullException">当 nextSibling 或 newItem 为 null 时引发。</exception>
      <exception cref="T:System.InvalidOperationException">当 nextSibling 不属于此集合时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.IsReadOnly">
      <summary>获取一个值，该值指示该集合是否为只读。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)">
      <summary>从集合中移除指定的项。</summary>
      <returns>如果找到并移除了指定项，则为 true ；否则为 false。</returns>
      <param name="item">要从集合中移除的项。</param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>从特定的 <see cref="T:System.Array" /> 索引处开始，将 <see cref="T:System.Collections.ICollection" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)" /> 方法。</summary>
      <param name="array">作为从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标的一维 <see cref="T:System.Array" />。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。 </param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count">
      <summary>获取 <see cref="T:System.Collections.ICollection" /> 中包含的元素数。请改用类型安全的 <see cref="P:System.Windows.Documents.TextElementCollection`1.Count" /> 属性。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中包含的元素个数。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection" /> 的访问（线程安全）。</summary>
      <returns>如果对 <see cref="T:System.Collections.ICollection" /> 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.ICollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个循环访问集合的枚举数。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator" /> 方法。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>将某项添加到 <see cref="T:System.Collections.IList" /> 中。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.Add(`0)" /> 方法。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Collections.IList" /> 的对象。 </param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.Clear" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)" /> 方法。</summary>
      <returns>如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的对象。 </param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的对象。 </param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>将一个项插入指定索引处的 <see cref="T:System.Collections.IList" />。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)" /> 或 <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)" /> 方法。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。 </param>
      <param name="value">要插入 <see cref="T:System.Collections.IList" /> 的对象。 </param>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。请改用类型安全的 <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)" /> 方法。</summary>
      <param name="value">要从 <see cref="T:System.Collections.IList" /> 中移除的对象。 </param>
    </member>
    <member name="M:System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>移除指定索引处的 <see cref="T:System.Collections.IList" /> 项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
    </member>
    <member name="T:System.Windows.Documents.TextElementEditingBehaviorAttribute">
      <summary>指定 <see cref="T:System.Windows.Controls.RichTextBox" /> 应如何处理自定义文本元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.TextElementEditingBehaviorAttribute" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.RichTextBox" /> 是否可以合并两个相邻的文本元素。</summary>
      <returns>如果 <see cref="T:System.Windows.Controls.RichTextBox" /> 可以合并具有相同属性值的相邻自定义文本元素，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly">
      <summary>获取或设置一个值，该值指示是由文本元素基于字符提供格式，还是将格式应用到整个元素。 </summary>
      <returns>如果应将格式应用到单个的字符，则为 true；如果应将格式应用到整个元素，则为 false。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>表示 <see cref="T:System.Windows.Documents.FlowDocument" /> 或 <see cref="T:System.Windows.Controls.TextBlock" /> 中的一个位置。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>对当前 <see cref="T:System.Windows.Documents.TextPointer" /> 和第二个指定 <see cref="T:System.Windows.Documents.TextPointer" /> 所表示位置的顺序进行比较。</summary>
      <returns>如果当前 <see cref="T:System.Windows.Documents.TextPointer" /> 位于 <paramref name="position" /> 之前，则为 –1；如果位置相同，则为 0；如果当前 <see cref="T:System.Windows.Documents.TextPointer" /> 位于 <paramref name="position" /> 之后，则为 +1。  </returns>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定要与当前位置进行比较的位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> 指定位于与当前位置相关联的文本容器之外的某个位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
      <summary>从当前 <see cref="T:System.Windows.Documents.TextPointer" /> 指示的位置开始删除指定数目的字符。</summary>
      <returns>实际删除的字符数。</returns>
      <param name="count">从当前位置开始要删除的字符数。指定正值将删除当前位置之后的字符；指定负值将删除当前位置之前的字符。</param>
      <exception cref="T:System.InvalidOperationException">在不允许出现文本的位置处调用此方法。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentEnd">
      <summary>获取一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向文本容器中与当前位置相关联的内容的结束位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向文本容器中与当前位置相关联的内容的结束位置。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.DocumentStart">
      <summary>获取一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向文本容器中与当前位置相关联的内容的开始位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向文本容器中与当前位置相关联的内容的开始位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
      <summary>返回在指定逻辑方向上的边界正好位于当前 <see cref="T:System.Windows.Documents.TextPointer" /> 处的元素（如果有）。 </summary>
      <returns>指定 <paramref name="direction" /> 上的相邻元素；或者，如果不存在任何相邻元素，则为 null。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定搜索相邻元素时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>返回在指定逻辑方向上的边界正好位于当前 <see cref="T:System.Windows.Documents.TextPointer" /> 处的内容的边框 (<see cref="T:System.Windows.Rect" />)。</summary>
      <returns>在指定方向上的边界正好位于当前 <see cref="T:System.Windows.Documents.TextPointer" /> 处的内容的边框；或者，如果当前没有可用的有效布局信息，则为 <see cref="P:System.Windows.Rect.Empty" />。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定查找内容边框时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>返回一个指向指定逻辑方向上的最近插入位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>一个指向指定方向上的最近插入位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定搜索最近插入位置时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
      <summary>返回一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向相对于当前 <see cref="T:System.Windows.Documents.TextPointer" /> 指定的行的开始位置。</summary>
      <returns>一个指向指定行的开始位置的 <see cref="T:System.Windows.Documents.TextPointer" />（<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 设置为 <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />）；或者，如果指定行超出范围或无法定位，则为 null。</returns>
      <param name="count">在确定要返回其开始位置的行时要跳过的行开始位置标记数。负值指定前面的行，0 指定当前行，正值指定后面的行。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
      <summary>返回一个指向相对于当前 <see cref="T:System.Windows.Documents.TextPointer" /> 所指定行的开始位置的 <see cref="T:System.Windows.Documents.TextPointer" />，并报告跳过的行数。</summary>
      <returns>一个指向指定行的开始位置的 <see cref="T:System.Windows.Documents.TextPointer" />（<see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 设置为 <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />）；或者，如果指定行超出范围，则指向最靠近指定行的行的开始位置。</returns>
      <param name="count">在确定要返回其开始位置的行时要跳过的行开始位置标记数。负值指定前面的行，0 指定当前行，正值指定后面的行。</param>
      <param name="actualCount">此方法返回时，将包含在确定要返回其开始位置的行时所实际跳过的行开始位置标记数。如果在跳过指定行数之前遇到内容的开始或结束位置，则此值可能小于 <paramref name="count" />。该参数未经初始化即被传递。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
      <summary>返回一个指向指定逻辑方向上的下一个符号的指针。</summary>
      <returns>一个指向请求方向上的下一个符号的 <see cref="T:System.Windows.Documents.TextPointer" />；或者，如果当前 <see cref="T:System.Windows.Documents.TextPointer" /> 是内容开始或结束位置的边界，则为 null。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定搜索下一个符号时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>返回一个指向指定逻辑方向上的下一个插入位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" />，它标识所请求方向上的下一个插入位置；或者，如果找不到下一个插入位置，则为 null。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定搜索下一个插入位置时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
      <summary>返回当前 <see cref="T:System.Windows.Documents.TextPointer" /> 与第二个指定 <see cref="T:System.Windows.Documents.TextPointer" /> 之间的符号数。</summary>
      <returns>当前 <see cref="T:System.Windows.Documents.TextPointer" /> 与 <paramref name="position" /> 之间的相对符号数。负值指示当前 <see cref="T:System.Windows.Documents.TextPointer" /> 位于 <paramref name="position" /> 指定的位置之后，0 指示位置相同，正值指示当前 <see cref="T:System.Windows.Documents.TextPointer" /> 位于 <paramref name="position" /> 指定的位置之前。</returns>
      <param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定一个位置，将查找该位置与当前位置之间相距的距离（以符号数为单位）。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> 指定位于与当前位置相关联的文本容器之外的某个位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
      <summary>返回在指定逻辑方向上与当前 <see cref="T:System.Windows.Documents.TextPointer" /> 相邻的内容的类别指示标志。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextPointerContext" /> 值之一，它指示指定逻辑方向上相邻内容的类别。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定确定相邻内容的类别时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
      <summary>返回一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向从当前 <see cref="T:System.Windows.Documents.TextPointer" /> 的开始位置计算的由指定偏移量（以符号数为单位）指示的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向由指定偏移量指示的位置；或者，如果找不到对应位置，则为 null。</returns>
      <param name="offset">偏移量（以符号数为单位），使用它计算并返回位置。如果偏移量为负，则在与 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 属性指示的方向相反的逻辑方向上计算位置。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>返回一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向从当前 <see cref="T:System.Windows.Documents.TextPointer" /> 的开始位置沿指定方向计算的由指定偏移量（以符号数为单位）指示的位置。</summary>
      <returns>一个指向由指定偏移量指示的位置的 <see cref="T:System.Windows.Documents.TextPointer" />；或者，如果偏移量超过了内容的结束位置，则为 null。</returns>
      <param name="offset">偏移量（以符号数为单位），使用它计算并返回位置。如果偏移量为负，则返回的 <see cref="T:System.Windows.Documents.TextPointer" /> 位于当前 <see cref="T:System.Windows.Documents.TextPointer" /> 之前；否则，位于它之后。</param>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定返回的 <see cref="T:System.Windows.Documents.TextPointer" /> 的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
      <summary>返回一个字符串，其中包含在指定逻辑方向上与当前 <see cref="T:System.Windows.Documents.TextPointer" /> 相邻的任何文本。</summary>
      <returns>一个包含指定逻辑方向上的任何相邻文本的字符串；或者，如果找不到相邻文本，则为 <see cref="F:System.String.Empty" />。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定查找并返回任何相邻文本时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
      <summary>将从指定方向上的任何相邻文本中提取的指定了最大数量的字符复制到由调用方提供的字符数组中。</summary>
      <returns>实际复制到 <paramref name="textBuffer" /> 中的字符数。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定查找并复制任何相邻文本时的逻辑方向。</param>
      <param name="textBuffer">要向其中复制文本的缓冲区。</param>
      <param name="startIndex">一个索引，从该索引处开始将复制的文本写入 <paramref name="textBuffer" /> 中。</param>
      <param name="count">要复制的最大字符数。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> 小于 0 或大于 <paramref name="textBuffer" /> 的 <see cref="P:System.Array.Length" /> 属性。 - 或 -<paramref name="count" /> 小于 0 或大于 <paramref name="textBuffer" /> 中的剩余空间（<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /> 减去 <paramref name="startIndex" />）。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
      <summary>返回当前 <see cref="T:System.Windows.Documents.TextPointer" /> 与指定逻辑方向上的下一个非文本符号之间的 Unicode 字符数。</summary>
      <returns>当前 <see cref="T:System.Windows.Documents.TextPointer" /> 与下一个非文本符号之间的 Unicode 字符数。如果没有相邻文本，则此数目可以为 0。</returns>
      <param name="direction">
        <see cref="T:System.Windows.Documents.LogicalDirection" /> 值之一，它指定计数字符数时的逻辑方向。</param>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.HasValidLayout">
      <summary>获取一个值，该值指示与当前位置相关联的文本容器是否具有有效（最新）的布局。</summary>
      <returns>如果布局是最新的而且有效，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertLineBreak">
      <summary>在当前位置插入一个换行符。</summary>
      <returns>紧接在由此方法插入的 <see cref="T:System.Windows.Documents.LineBreak" /> 元素之后的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
      <summary>在当前位置插入一个分段符。</summary>
      <returns>一个指向新段落开始位置 (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) 的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
      <exception cref="T:System.InvalidOperationException">应针对无法进行拆分以容纳一个新段落的位置调用此方法，例如在 <see cref="T:System.Windows.Documents.Hyperlink" /> 或 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的范围内。 </exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
      <summary>将指定文本插入到文本 <see cref="T:System.Windows.Documents.Run" /> 中的当前位置。</summary>
      <param name="textData">要插入的文本。</param>
      <exception cref="T:System.InvalidOperationException">当前位置没有位于 <see cref="T:System.Windows.Documents.Run" /> 元素内。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textData" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>获取一个值，该值指示当前位置是否是一个插入位置。</summary>
      <returns>如果当前位置是插入位置，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
      <summary>获取一个值，该值指示当前位置是否位于行的开始处。</summary>
      <returns>如果当前位置位于行的开始处，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
      <summary>指示指定位置与当前位置是否位于相同的文本容器内。</summary>
      <returns>如果 <paramref name="textPosition" /> 指示的位置与当前位置位于相同的文本容器内，则为 true；否则为 false。</returns>
      <param name="textPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定要与当前位置进行比较的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textPosition" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>获取与当前位置相关联的逻辑方向，用于消除与当前位置相关联内容的不确定性。</summary>
      <returns>与当前位置相关联的 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Paragraph">
      <summary>获取涵盖当前位置的段落（如果有）。</summary>
      <returns>涵盖当前位置的 <see cref="T:System.Windows.Documents.Paragraph" />；或者，如果不存在这样的段落，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>获取涵盖当前位置的逻辑父项。</summary>
      <returns>涵盖当前位置的逻辑父项。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.ToString">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>此字符串表示对象。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextPointerContext">
      <summary>确定与指定 <see cref="T:System.Windows.Documents.LogicalDirection" /> 中的 <see cref="T:System.Windows.Documents.TextPointer" /> 相邻的内容类别。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementEnd">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 与 <see cref="T:System.Windows.Documents.TextElement" /> 的结束标记相邻。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.ElementStart">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 与 <see cref="T:System.Windows.Documents.TextElement" /> 的开始标记相邻。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.EmbeddedElement">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 与嵌入式 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" /> 相邻。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.None">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 与内容的开头或末尾相邻。</summary>
    </member>
    <member name="F:System.Windows.Documents.TextPointerContext.Text">
      <summary>
        <see cref="T:System.Windows.Documents.TextPointer" /> 与文本相邻。</summary>
    </member>
    <member name="T:System.Windows.Documents.TextRange">
      <summary>表示两个 <see cref="T:System.Windows.Documents.TextPointer" /> 位置之间的所选内容。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.TextRange" /> 类的新实例，将两个指定的 <see cref="T:System.Windows.Documents.TextPointer" /> 位置作为新范围的开始和结束位置。</summary>
      <param name="position1">标记用于组成新 <see cref="T:System.Windows.Documents.TextRange" /> 的所选内容的一端的固定定位点位置。</param>
      <param name="position2">标记用于组成新 <see cref="T:System.Windows.Documents.TextRange" /> 的所选内容的另一端的可移动位置。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="position1" /> 和 <paramref name="position2" /> 不在同一文档中时发生。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="position1" /> 或 <paramref name="position2" /> 为 null 时发生。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>将指定的格式属性和值应用于当前所选内容。</summary>
      <param name="formattingProperty">要应用的格式属性。</param>
      <param name="value">格式属性的值。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="formattingProperty" /> 未指定有效的格式属性，或 <paramref name="value" /> 为 <paramref name="formattingProperty" /> 指定的值无效时发生。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="formattingProperty" /> 为 null 时发生。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanLoad(System.String)">
      <summary>检查当前所选内容是否可以与采用指定数据格式的内容一起加载。</summary>
      <returns>如果当前内容可以与采用指定数据格式的内容一起加载，则为 true；否则为 false。</returns>
      <param name="dataFormat">要检查是否与当前所选内容的加载兼容的数据格式。请参见 <see cref="T:System.Windows.DataFormats" /> 以获得预定义数据格式的列表。</param>
    </member>
    <member name="M:System.Windows.Documents.TextRange.CanSave(System.String)">
      <summary>检查是否可将当前所选内容保存为指定数据格式。</summary>
      <returns>如果可将当前所选内容保存为指定数据格式，则为 true；否则为 false。</returns>
      <param name="dataFormat">要检查是否与当前所选内容的保存兼容的数据格式。请参见 <see cref="T:System.Windows.DataFormats" /> 以获得预定义数据格式的列表。</param>
    </member>
    <member name="E:System.Windows.Documents.TextRange.Changed">
      <summary>在重新定位范围以涵盖新的内容范围时发生。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.ClearAllProperties">
      <summary>从当前所选内容中移除所有格式属性（由 <see cref="T:System.Windows.Documents.Inline" /> 元素表示）。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)">
      <summary>检查某个位置（由 <see cref="T:System.Windows.Documents.TextPointer" /> 指定）是否位于当前所选内容中。</summary>
      <returns>如果指定位置位于当前所选内容中，则为 true；否则为 false。</returns>
      <param name="textPointer">要测试是否包含在当前所选内容中的位置。</param>
      <exception cref="T:System.ArgumentException">当 textPointer 与当前所选内容不在同一文档中时发生。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.End">
      <summary>获取用于标记当前所选内容的结尾的位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指向当前所选内容的结尾。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>返回对当前所选内容指定的格式属性的有效值。</summary>
      <returns>一个对象，它指定所指定格式属性的值。</returns>
      <param name="formattingProperty">要获取与当前所选内容相关的值的格式属性。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="formattingProperty" /> 未指定有效的格式属性，或 <paramref name="value" /> 为 <paramref name="formattingProperty" /> 指定的值无效时发生。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="formattingProperty" /> 为 null 时发生。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.IsEmpty">
      <summary>获取一个值，该值指示当前所选内容是否为空。</summary>
      <returns>如果当前所选内容为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)">
      <summary>从指定流加载采用指定数据格式的当前所选内容。</summary>
      <param name="stream">包含要加载到当前所选内容中的数据的可读流。</param>
      <param name="dataFormat">要将数据加载为的数据格式。当前支持的数据格式是 <see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" /> 和 <see cref="F:System.Windows.DataFormats.XamlPackage" />。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="stream" /> 或 <paramref name="dataFormat" /> 为 null 时发生。</exception>
      <exception cref="T:System.ArgumentException">当不支持指定数据格式时发生。如果从 <paramref name="stream" /> 加载的内容与指定数据格式不匹配，也可能引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)">
      <summary>将当前所选内容以指定数据格式保存到指定流中。</summary>
      <param name="stream">要将当前所选内容保存到的空可写流。</param>
      <param name="dataFormat">要将当前所选内容保存为的数据格式。当前支持的数据格式是 <see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" /> 和 <see cref="F:System.Windows.DataFormats.XamlPackage" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="dataFormat" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">不支持指定的数据格式。- 或 -从 <paramref name="stream" /> 加载的内容与指定数据格式不匹配。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)">
      <summary>将当前所选内容以指定数据格式保存到指定流中，同时选择保留自定义 <see cref="T:System.Windows.Documents.TextElement" /> 对象。</summary>
      <param name="stream">要将当前所选内容保存到的空可写流。</param>
      <param name="dataFormat">要将当前所选内容保存为的数据格式。当前支持的数据格式是 <see cref="F:System.Windows.DataFormats.Rtf" />、<see cref="F:System.Windows.DataFormats.Text" />、<see cref="F:System.Windows.DataFormats.Xaml" /> 和 <see cref="F:System.Windows.DataFormats.XamlPackage" />。</param>
      <param name="preserveTextElements">如果要保留自定义 <see cref="T:System.Windows.Documents.TextElement" /> 对象，则为 true ；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="stream" /> 或 <paramref name="dataFormat" /> 为 null 时发生。</exception>
      <exception cref="T:System.ArgumentException">当不支持指定数据格式时发生。如果从 <paramref name="stream" /> 加载的内容与指定数据格式不匹配，也可能引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>更新当前所选内容，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 位置来指示更新的所选内容。</summary>
      <param name="position1">标记更新的所选内容一端的固定定位点位置。</param>
      <param name="position2">标记更新的所选内容另一端的可移动位置。</param>
      <exception cref="T:System.ArgumentException">当 <paramref name="position1" /> 和 <paramref name="position2" /> 不在同一文档中时发生。</exception>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="position1" /> 或 <paramref name="position2" /> 为 null 时发生。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Start">
      <summary>获取用于标记当前所选内容的开始的位置。</summary>
      <returns>指向当前所选内容的开始位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextRange.Text">
      <summary>获取或设置当前所选内容的纯文本内容。</summary>
      <returns>一个字符串，其中包含当前所选内容的纯文本内容。</returns>
      <exception cref="T:System.ArgumentNullException">当尝试将此属性设置为 null 时发生。</exception>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>封装 <see cref="T:System.Windows.Controls.RichTextBox" /> 控件的选择状态。</summary>
    </member>
    <member name="T:System.Windows.Documents.Typography">
      <summary>提供对一组丰富的 OpenType 版式属性的访问。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
      <summary>获取或设置一个值，该值指定备用批注格式的索引。 </summary>
      <returns>备用批注格式的索引。默认值为 0（零）。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Capitals">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontCapitals" /> 枚举值，该值指示所选字体的大写格式。 </summary>
      <returns>一个 <see cref="T:System.Windows.FontCapitals" /> 枚举值。默认值为 <see cref="F:System.Windows.FontCapitals.Normal" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CapitalSpacing">
      <summary>获取或设置一个值，该值确定是否全局调整所有全大写文本的内部标志符号间距以提高可读性。 </summary>
      <returns>如果调整间距，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalSpacingProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
      <summary>获取或设置一个值，该值确定是否调整标志符号的垂直位置以更好地与大写标志符号对齐。 </summary>
      <returns>如果调整垂直位置，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualAlternates">
      <summary>获取或设置一个值，该值确定是否可以根据所呈现文本的上下文使用自定义标志符号格式。 </summary>
      <returns>如果可以使用自定义标志符号格式，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualAlternatesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualLigatures">
      <summary>获取或设置一个值，该值确定是否启用上下文连字。 </summary>
      <returns>如果启用上下文连字，则为 true，否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualSwashes">
      <summary>获取或设置一个值，该值指定上下文花体格式的索引。 </summary>
      <returns>标准花体格式的索引。默认值为 0（零）。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualSwashesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
      <summary>获取或设置一个值，该值确定是否启用自由连字。 </summary>
      <returns>如果启用自由连字，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
      <summary>获取或设置一个值，该值确定是否使用相应的首选版式格式替换标准日语字体格式。 </summary>
      <returns>如果使用相应的首选版式格式替换标准日语字体格式，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontEastAsianLanguage" /> 枚举值，该值指示为特定书写系统或语言使用的标志符号版本。 </summary>
      <returns>一个 <see cref="T:System.Windows.FontEastAsianLanguage" /> 枚举值。默认值为 <see cref="F:System.Windows.FontEastAsianLanguage.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianLanguageProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianWidths">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontEastAsianWidths" /> 枚举值，该值指示为东亚字体中的拉丁语字符使用比例宽度。 </summary>
      <returns>一个 <see cref="T:System.Windows.FontEastAsianWidths" /> 枚举值。默认值为 <see cref="F:System.Windows.FontEastAsianWidths.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianWidthsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Fraction">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontFraction" /> 枚举值，该值指示分数的样式。 </summary>
      <returns>
        <see cref="T:System.Windows.FontFraction" /> 枚举值默认值为 <see cref="F:System.Windows.FontFraction.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.FractionProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象上 <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 属性值的依赖项对象。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 属性值的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
      <summary>为指定的依赖项对象返回 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的值。</summary>
      <returns>指定的依赖项对象的 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的当前值。</returns>
      <param name="element">要检索其 <see cref="P:System.Windows.Documents.Typography.Variants" /> 属性值的依赖项对象。</param>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalForms">
      <summary>获取或设置一个值，该值确定是否启用历史记录格式。 </summary>
      <returns>如果启用历史记录格式，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalFormsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
      <summary>获取或设置一个值，该值指示是否启用历史记录连字。 </summary>
      <returns>如果启用历史记录连字，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Kerning">
      <summary>获取或设置一个值，该值指示是否启用字距调整。 </summary>
      <returns>如果启用字距调整，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.KerningProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.MathematicalGreek">
      <summary>获取或设置一个值，该值指示是否使用在数学符号中常用的相应字体格式，替换希腊语标志符号的标准版式字体格式。 </summary>
      <returns>如果启用数学希腊语格式，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.MathematicalGreekProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralAlignment">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontNumeralAlignment" /> 枚举值，该值指示使用数字时的宽度对齐方式。 </summary>
      <returns>一个 <see cref="T:System.Windows.FontNumeralAlignment" /> 枚举值。默认值为 <see cref="F:System.Windows.FontNumeralAlignment.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralAlignmentProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralStyle">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontNumeralStyle" /> 枚举值，该值确定用于呈现数字备用字体格式的标志符号集。 </summary>
      <returns>一个 <see cref="T:System.Windows.FontNumeralStyle" /> 枚举值。默认值为 <see cref="F:System.Windows.FontNumeralStyle.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralStyleProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.Capitals" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.Fraction" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.Kerning" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
      <summary>为指定的依赖项对象设置 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的值。</summary>
      <param name="element">要设置其 <see cref="P:System.Windows.Documents.Typography.Variants" /> 属性值的依赖项对象。</param>
      <param name="value">要为属性设置的新值。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="element" /> 为 null 时引发。</exception>
    </member>
    <member name="P:System.Windows.Documents.Typography.SlashedZero">
      <summary>获取或设置一个值，该值指示是否使用斜杠零替换标称零字体格式。 </summary>
      <returns>如果启用斜杠零格式，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.SlashedZeroProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardLigatures">
      <summary>获取或设置一个值，该值指示是否启用标准连字。 </summary>
      <returns>如果启用了标准连字，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardLigaturesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardSwashes">
      <summary>获取或设置一个值，该值指定标准花体格式的索引。 </summary>
      <returns>标准花体格式的索引。默认值为 0（零）。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardSwashesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticAlternates">
      <summary>获取或设置一个值，该值指定样式备用项格式的索引。 </summary>
      <returns>样式备用项格式索引。默认值为 0（零）。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticAlternatesProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet1">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet10">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet10Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet11">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet11Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet12">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet12Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet13">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet13Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet14">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet14Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet15">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet15Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet16">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet16Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet17">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet17Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet18">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet18Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet19">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet19Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet1Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet2">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet20">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet20Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet2Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet3">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet3Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet4">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet4Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet5">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet5Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet6">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet6Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet7">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet7Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet8">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet8Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet9">
      <summary>获取或设置一个值，该值指示是否启用字体格式的样式集。 </summary>
      <returns>如果启用字体格式的样式集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet9Property">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Variants">
      <summary>获取或设置一个 <see cref="T:System.Windows.FontVariants" /> 枚举值，该值指示使用的标准版式格式的变体。 </summary>
      <returns>一个 <see cref="T:System.Windows.FontVariants" /> 枚举值。默认值为 <see cref="F:System.Windows.FontVariants.Normal" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.VariantsProperty">
      <summary>标识 <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Variants" /> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>一个内联级别的流内容元素，该元素导致内容以带下划线的文本修饰呈现。</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Underline" /> 类的新的空实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Underline" /> 类的一个新实例，将指定的 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新的 <see cref="T:System.Windows.Documents.Underline" /> 的初始内容。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Underline" /> 的初始内容。</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Underline" /> 类的一个新实例，使用指定 <see cref="T:System.Windows.Documents.Inline" /> 对象作为新 <see cref="T:System.Windows.Documents.Underline" /> 的初始内容，并由一个 <see cref="T:System.Windows.Documents.TextPointer" /> 指定新 <see cref="T:System.Windows.Documents.Inline" /> 元素的插入位置。</summary>
      <param name="childInline">
        <see cref="T:System.Windows.Documents.Inline" /> 对象，它指定新的 <see cref="T:System.Windows.Documents.Underline" /> 的初始内容。此参数可以为 null，在这种情况下，不插入任何 <see cref="T:System.Windows.Documents.Inline" />。</param>
      <param name="insertionPosition">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指定插入所创建的 <see cref="T:System.Windows.Documents.Underline" /> 元素的插入位置，或者为 null 以表示不自动插入。</param>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Underline" /> 类的一个新实例，使用两个 <see cref="T:System.Windows.Documents.TextPointer" /> 对象指示该新 <see cref="T:System.Windows.Documents.Underline" /> 将要包含的内容选择的开始和结束位置。</summary>
      <param name="start">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指示该新 <see cref="T:System.Windows.Documents.Underline" /> 将要包含的内容选择的开始位置。</param>
      <param name="end">一个 <see cref="T:System.Windows.Documents.TextPointer" />，它指示该新 <see cref="T:System.Windows.Documents.Underline" /> 将要包含的内容选择的结束位置。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="start" /> 或 <paramref name="end" /> 为 null 时引发。</exception>
      <exception cref="T:System.ArgumentException">当 <paramref name="start" /> 和 <paramref name="end" /> 没有解析为可包含在 <see cref="T:System.Windows.Documents.Underline" /> 元素的内容范围时引发，例如，当 <paramref name="start" /> 和 <paramref name="end" /> 指示不同段落中的位置时。</exception>
    </member>
    <member name="T:System.Windows.Documents.ZoomPercentageConverter">
      <summary>实现一个类型转换器，该转换器用于将 <see cref="T:System.Double" />（用作 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 的值）与其他类型相互转换。</summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.ZoomPercentageConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将 <see cref="T:System.Double" />（用作 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 的值）转换为指定类型的对象。 </summary>
      <returns>当转换器无法生成值时，为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />；例如，当 <paramref name="value" /> 为 null 或当 <paramref name="targetType" /> 不为 <see cref="T:System.Double" /> 或 <see cref="T:System.String" /> 时。- 或 -指定的类型的新 <see cref="T:System.Object" />。在此类中实现时，它必须为 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。如果它是字符串，则它将为 <paramref name="culture" /> 设置适当的格式。</returns>
      <param name="value">
        <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 的当前值。</param>
      <param name="targetType">
        <paramref name="value" /> 要转换为的类型。它必须为 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。请参见"备注"。</param>
      <param name="parameter">null.请参见"备注"。</param>
      <param name="culture">转换期间采用的语言和区域。</param>
    </member>
    <member name="M:System.Windows.Documents.ZoomPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>将 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 的先前转换的值返回到可指派给 <see cref="P:System.Windows.Controls.DocumentViewer.Zoom" /> 的 <see cref="T:System.Double" />。 </summary>
      <returns>当转换器无法生成值时，为 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />；例如，当 <paramref name="value" /> 不是有效的百分比，或当 <paramref name="targetType" /> 不是 <see cref="T:System.Double" /> 或 <see cref="T:System.String" /> 时。- 或 -一个 <see cref="T:System.Double" />，表示 <see cref="T:System.Windows.Controls.DocumentViewer" /> 的缩放百分比。</returns>
      <param name="value">要转换回 <see cref="T:System.Double" /> 的对象。 </param>
      <param name="targetType">
        <paramref name="value" /> 的类型。它必须为 <see cref="T:System.Double" /> 或 <see cref="T:System.String" />。请参见"备注"。</param>
      <param name="parameter">null.请参见"备注"。</param>
      <param name="culture">转换期间采用的语言和区域。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.BlockElement">
      <summary>不要使用。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.BlockElement.#ctor">
      <summary>不要使用。 </summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.FigureStructure">
      <summary>表示文档中的绘图、图表或关系图。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.FigureStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>将命名元素添加到图形中。</summary>
      <param name="element">要添加的元素。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">要添加的子 <see cref="T:System.Object" />。 </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。  </param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListItemStructure">
      <summary>表示列表或大纲中的项。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.ListItemStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块添加到列表项中。</summary>
      <param name="element">要添加的块。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.ListItemStructure.Marker">
      <summary>获取或设置当文档的格式标记中显示列表项时列表项的数字、字符或项目符号的名称。</summary>
      <returns>标记列表项的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，但不应在代码中直接使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>未实现。</summary>
      <param name="text">未使用。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ListStructure">
      <summary>表示文档中项的列表。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.ListStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.Add(System.Windows.Documents.DocumentStructures.ListItemStructure)">
      <summary>将列表项添加到列表中。</summary>
      <param name="listItem">要添加的列表项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="listItem" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。  </param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.NamedElement">
      <summary>标识 <see cref="T:System.Windows.Documents.FixedPage" /> 下的元素层次结构中的元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.NamedElement.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.NamedElement.NameReference">
      <summary>获取或设置为 <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement" /> 父级提供内容的 <see cref="T:System.Windows.Documents.FixedPage" /> 标记层次结构中的元素的名称。 </summary>
      <returns>元素的名称。</returns>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.ParagraphStructure">
      <summary>表示文档中的段落。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.ParagraphStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.Add(System.Windows.Documents.DocumentStructures.NamedElement)">
      <summary>将命名元素添加到段落中。</summary>
      <param name="element">要添加的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>未实现。</summary>
      <param name="text">未使用。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SectionStructure">
      <summary>表示文档中的一部分内容。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.SectionStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块添加到节中。</summary>
      <param name="element">要添加的块元素。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>System.Collections.Generic.IEnumerator`1</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>System.Collections.IEnumerator</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。 </summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.SemanticBasicElement">
      <summary>XML 纸张规范 (XPS) 文档标记中的 XML 元素。 </summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryBreak">
      <summary>标识由一个或多个 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 元素组成的文章的开头或结尾。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragment">
      <summary>表示 XPS 文档中的整篇文章或其中一部分。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块添加到文章段落中。</summary>
      <param name="element">要添加的块。</param>
      <exception cref="T:System.ArgumentNullException">传递的块是 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName">
      <summary>获取或设置文章段落的名称。 </summary>
      <returns>表示此段落名称的 <see cref="T:System.String" />。 </returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType">
      <summary>获取或设置段落的类型。 </summary>
      <returns>表示段落类型的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName">
      <summary>获取或设置文章的名称。 </summary>
      <returns>表示文章名称的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.StoryFragments">
      <summary>表示一组元素，其中包含一个或多个 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.Add(System.Windows.Documents.DocumentStructures.StoryFragment)">
      <summary>将 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 添加到 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> 集合中。</summary>
      <param name="storyFragment">要相加的 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Collections#IEnumerable#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>将子对象添加到 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" /> 中。</summary>
      <param name="value">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableCellStructure">
      <summary>表示表中的单元格。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.Add(System.Windows.Documents.DocumentStructures.BlockElement)">
      <summary>将块元素添加到表单元格中。</summary>
      <param name="element">要添加的元素。</param>
      <exception cref="T:System.ArgumentNullException">此元素为 null。</exception>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.ColumnSpan">
      <summary>获取或设置单元格跨越的列数。</summary>
      <returns>单元格跨越的列数。默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.RowSpan">
      <summary>获取或设置单元格跨越的行数。</summary>
      <returns>单元格跨越的行数。默认值为 1。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>未实现此 API。</summary>
      <returns>未实现此 API。</returns>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>将子对象添加到 <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure" /> 中。 </summary>
      <param name="value">要添加的子对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure">
      <summary>表示表中的一行或多行的集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.Add(System.Windows.Documents.DocumentStructures.TableRowStructure)">
      <summary>将行添加到表行组中。</summary>
      <param name="tableRow">要添加的行。</param>
      <exception cref="T:System.ArgumentNullException">该行为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableRowStructure">
      <summary>表示表中的一个或多个单元格的行。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableRowStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.Add(System.Windows.Documents.DocumentStructures.TableCellStructure)">
      <summary>将单元格添加到表行中。</summary>
      <param name="tableCell">要添加的单元格。</param>
      <exception cref="T:System.ArgumentNullException">单元格为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.DocumentStructures.TableStructure">
      <summary>表示文档中的表。</summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.TableStructure" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.Add(System.Windows.Documents.DocumentStructures.TableRowGroupStructure)">
      <summary>将一组行添加到表中。</summary>
      <param name="tableRowGroup">要添加的一组行。</param>
      <exception cref="T:System.ArgumentNullException">行组为 null。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Collections#IEnumerable#GetEnumerator">
      <summary>此方法尚未实现。</summary>
      <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>此成员支持 Microsoft .NET Framework 基础结构，但不应直接在代码中使用。 </summary>
      <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是可作为此类的子级的类型之一。请参见备注。</exception>
    </member>
    <member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="text">要添加到对象的文本。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.ISerializerFactory">
      <summary>提供一种方法，用于创建可将 Windows Presentation Foundation (WPF) 应用程序内容的任何部分序列化为制造商专用格式的软件组件。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter(System.IO.Stream)">
      <summary>为指定的 <see cref="T:System.IO.Stream" /> 初始化从抽象 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 类派生的对象。 </summary>
      <returns>一个派生自 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 的类的对象。</returns>
      <param name="stream">返回的对象要写入的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DefaultFileExtension">
      <summary>获取制造商专用格式的文件的默认扩展名。 </summary>
      <returns>表示专用格式的默认文件扩展名的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DisplayName">
      <summary>获取制造商的序列化组件的公共名称。 </summary>
      <returns>表示序列化组件的公共名称的 <see cref="T:System.String" />。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerName">
      <summary>获取序列化组件制造商的名称。 </summary>
      <returns>表示制造商的名称的 <see cref="T:System.String" />。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerWebsite">
      <summary>获取序列化组件制造商的 Web 地址。 </summary>
      <returns>表示制造商的网站的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerDescriptor">
      <summary>提供有关已安装的插件序列化程序的信息。    </summary>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName">
      <summary>获取包含序列化程序的程序集的名称。 </summary>
      <returns>包含插件序列化程序的程序集（通常为 DLL）的名称。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath">
      <summary>获取包含序列化程序的程序集文件的路径。 </summary>
      <returns>包含插件序列化程序的程序集文件的路径。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion">
      <summary>获取包含序列化程序的程序集的版本。 </summary>
      <returns>包含插件序列化程序的程序集的版本。 </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)">
      <summary>通过给定的 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 实现创建新的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。 </summary>
      <returns>新的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />，其属性使用给定的 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 实现中的值进行初始化。 </returns>
      <param name="factoryInstance">新的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 的数据源。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factoryInstance" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="factoryInstance" /> 的以下属性中的一个或多个为 Null：<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName" />、<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName" />、<see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite" /> 和 <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension" /></exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension">
      <summary>获取与序列化程序输出的文件关联的默认扩展名。 </summary>
      <returns>与序列化程序输出的文件关联的默认扩展名。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName">
      <summary>获取序列化程序的公共显示名称。 </summary>
      <returns>序列化程序的公共显示名称。 </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)">
      <summary>测试两个 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 对象是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。 </returns>
      <param name="obj">要与此 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 进行比较的对象。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName">
      <summary>获取实现序列化程序的 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 派生类的名称。 </summary>
      <returns>实现序列化程序的 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 派生类的名称。 </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode">
      <summary>获取序列化程序的唯一哈希代码值。 </summary>
      <returns>序列化程序的唯一哈希代码值。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable">
      <summary>获取一个值，该值指示是否可以使用当前安装的 Microsoft .NET Framework 的版本加载序列化程序。</summary>
      <returns>如果可以加载序列化程序程序集，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName">
      <summary>获取开发序列化程序的公司的名称。 </summary>
      <returns>开发插件序列化程序的公司的名称。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite">
      <summary>获取开发序列化程序的公司的 Web 地址。 </summary>
      <returns>开发序列化程序的公司的 Web 地址。 </returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion">
      <summary>获取序列化程序所需的 Microsoft .NET Framework 的版本。</summary>
      <returns>插件序列化程序所需的 Microsoft .NET Framework 的版本。 </returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerProvider">
      <summary>使用 <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory" /> 和 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 管理具有自己的专用序列化格式的制造商创建的序列化插件。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerProvider" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter(System.Windows.Documents.Serialization.SerializerDescriptor,System.IO.Stream)">
      <summary>为将使用指定说明符的指定的 <see cref="T:System.IO.Stream" /> 初始化从抽象 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 类派生的对象。</summary>
      <returns>一个派生自 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 的类的对象。</returns>
      <param name="serializerDescriptor">包含 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 的序列化信息的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <param name="stream">返回的对象要写入的 <see cref="T:System.IO.Stream" />。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数为 Null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializerDescriptor" /> 指定版本错误。- 或 -它没有注册。- 或 -找不到程序集文件。- 或 -无法加载程序集。</exception>
    </member>
    <member name="P:System.Windows.Documents.Serialization.SerializerProvider.InstalledSerializers">
      <summary>获取安装的插件序列化程序的集合。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" /> 对象的 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 已注册。 </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.RegisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor,System.Boolean)">
      <summary>注册序列化程序插件。 </summary>
      <param name="serializerDescriptor">用于插件的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <param name="overwrite">如果覆盖同一插件的现有注册，则为 true，否则为 false。请参见"备注"。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="overwrite" /> 为 false 并且插件已注册。</exception>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerProvider.UnregisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor)">
      <summary>从注册表中删除序列化插件。</summary>
      <param name="serializerDescriptor">用于插件的 <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializerDescriptor" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">未注册插件。请参见备注。</exception>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriter">
      <summary>定义实现插件文档输出序列化程序所需的抽象方法和事件。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync">
      <summary>当在派生类中重写时，取消异步写操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator">
      <summary>在派生类中重写时，返回 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，它写入排序的 <see cref="T:System.Windows.Media.Visual" /> 元素。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，它将排序的 <see cref="T:System.Windows.Media.Visual" /> 元素写入文档输出序列化 <see cref="T:System.IO.Stream" /> 中。 </returns>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，返回 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，它将排序的 <see cref="T:System.Windows.Media.Visual" /> 元素与给定打印票证写入到一起。</summary>
      <returns>一个 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />，它将排序的 <see cref="T:System.Windows.Media.Visual" /> 元素写入文档输出序列化 <see cref="T:System.IO.Stream" /> 中。</returns>
      <param name="documentSequencePT">
        <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 内容的默认打印首选项。</param>
      <param name="documentPT">
        <see cref="T:System.Windows.Documents.FixedDocument" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="documentPaginator">定义要写入<see cref="T:System.IO.Stream" />序列化中的内容的文档分页程序。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以同步方式将已分页的内容与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="documentPaginator">定义要写入<see cref="T:System.IO.Stream" />序列化中的内容的文档分页程序。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocument">要写入序列化<see cref="T:System.IO.Stream" />中的文档。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocument">要写入序列化<see cref="T:System.IO.Stream" />中的文档。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocumentSequence">定义要写入序列化<see cref="T:System.IO.Stream" />中的内容的文档序列。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocumentSequence">定义要写入序列化<see cref="T:System.IO.Stream" />中的内容的文档序列。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 中的页。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 中的页。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.Windows.Media.Visual" /> 中的 <see cref="T:System.IO.Stream" /> 元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以同步方式将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.Windows.Media.Visual" /> 中的 <see cref="T:System.IO.Stream" /> 元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
      <summary>在派生类中重写时，以异步方式将给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="documentPaginator">定义要写入<see cref="T:System.IO.Stream" />序列化中的内容的文档分页程序。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="documentPaginator">定义要写入<see cref="T:System.IO.Stream" />序列化中的内容的文档分页程序。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以异步方式将给定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的内容写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="documentPaginator">定义要写入<see cref="T:System.IO.Stream" />序列化中的内容的文档分页程序。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，以异步方式将已分页的内容与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="documentPaginator">定义要写入<see cref="T:System.IO.Stream" />序列化中的内容的文档分页程序。</param>
      <param name="printTicket">
        <paramref name="documentPaginator" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocument">要写入序列化<see cref="T:System.IO.Stream" />中的文档。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocument">要写入序列化<see cref="T:System.IO.Stream" />中的文档。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocument">要写入序列化<see cref="T:System.IO.Stream" />中的文档。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocument">要写入序列化<see cref="T:System.IO.Stream" />中的文档。</param>
      <param name="printTicket">
        <paramref name="fixedDocument" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocumentSequence">定义要写入序列化<see cref="T:System.IO.Stream" />中的内容的文档序列。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocumentSequence">定义要写入序列化<see cref="T:System.IO.Stream" />中的内容的文档序列。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocumentSequence">定义要写入序列化<see cref="T:System.IO.Stream" />中的内容的文档序列。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedDocumentSequence">定义要写入序列化<see cref="T:System.IO.Stream" />中的内容的文档序列。</param>
      <param name="printTicket">
        <paramref name="fixedDocumentSequence" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 中的页。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 中的页。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 中的页。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> 内容的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Documents.FixedPage" /> 与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="fixedPage">要写入序列化 <see cref="T:System.IO.Stream" /> 中的页。</param>
      <param name="printTicket">
        <paramref name="fixedPage" /> 内容的默认打印首选项。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.Windows.Media.Visual" /> 中的 <see cref="T:System.IO.Stream" /> 元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.Windows.Media.Visual" /> 中的 <see cref="T:System.IO.Stream" /> 元素。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的 <see cref="T:System.Printing.PrintTicket" /> 一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.Windows.Media.Visual" /> 中的 <see cref="T:System.IO.Stream" /> 元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，以异步方式将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的 <see cref="T:System.Printing.PrintTicket" /> 以及标识符一起写入序列化 <see cref="T:System.IO.Stream" /> 中。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.Windows.Media.Visual" /> 中的 <see cref="T:System.IO.Stream" /> 元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled">
      <summary>在派生类中重写时，当执行 <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> 操作时发生。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted">
      <summary>在派生类中重写时，当写操作完成时发生。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired">
      <summary>在派生类中重写时，恰好在通过 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> 或 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> 方法将 <see cref="T:System.Printing.PrintTicket" /> 添加到流之前发生。</summary>
    </member>
    <member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged">
      <summary>在派生类中重写时，当 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 更新其进度时发生。 </summary>
    </member>
    <member name="T:System.Windows.Documents.Serialization.SerializerWriterCollator">
      <summary>定义实现插件文档序列化 <see cref="T:System.Windows.Media.Visual" /> 排序程序所需的抽象方法。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite">
      <summary>当在派生类中重写时，启动批处理写操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel">
      <summary>在派生类中重写时，取消同步 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> 操作。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync">
      <summary>在派生类中重写时，取消异步 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> 操作。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite">
      <summary>在派生类中重写时，完成批处理写操作。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素同步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的打印票证一起同步写入序列化流。</summary>
      <param name="visual">写入流的 <see cref="T:System.Windows.Media.Visual" />。</param>
      <param name="printTicket">为打印材料的方式指定首选项的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)">
      <summary>在派生类中重写时，将带有指定事件标识符的给定的 <see cref="T:System.Windows.Media.Visual" /> 元素异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的打印票证一起异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
    </member>
    <member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
      <summary>在派生类中重写时，将给定的 <see cref="T:System.Windows.Media.Visual" /> 元素与关联的打印票证和标识符一起异步写入序列化流。</summary>
      <param name="visual">要写入序列化 <see cref="T:System.IO.Stream" /> 的可视元素。</param>
      <param name="printTicket">
        <paramref name="visual" /> 元素的默认打印首选项。</param>
      <param name="userState">用于标识异步写操作的调用方指定的对象。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs">
      <summary>为 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCancelledEventArgs.#ctor(System.Exception)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs" /> 类的新实例。</summary>
      <param name="exception">取消写操作的异常。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingCancelledEventArgs.Error">
      <summary>获取取消写操作的异常。</summary>
      <returns>取消写操作的异常。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCancelledEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs">
      <summary>为 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs" /> 类的新实例。</summary>
      <param name="cancelled">如果已取消，则为 true；否则，如果写操作正常完成，则为 false。</param>
      <param name="state">传递给 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> 方法的、用户提供的状态对象。</param>
      <param name="exception">在写操作过程中发生的错误，或如果没有错误，则为 null。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingCompletedEventHandler">
      <summary>表示处理 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 类的 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs">
      <summary>为 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs" /> 类的新实例。</summary>
      <param name="printTicketLevel">将 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> 的范围指定为页、文档或文档序列的枚举值。</param>
      <param name="sequence">与 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> 关联的页数或文档数，取决于 <paramref name="printTicketLevel" /> 定义的范围。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket">
      <summary>获取或设置打印文档时使用的默认打印机设置。</summary>
      <returns>打印文档时使用的默认打印机设置。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicketLevel">
      <summary>获取一个值，该值指示 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> 事件的范围。</summary>
      <returns>指定关于文档序列、单个文档或单页的 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" /> 事件的范围的枚举。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.Sequence">
      <summary>获取使用 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> 输出的文档数或页数。</summary>
      <returns>使用 <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket" /> 输出的文档数或页数。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler">
      <summary>表示处理 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 的 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs">
      <summary>为 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.#ctor(System.Windows.Documents.Serialization.WritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
      <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs" /> 类的新实例。</summary>
      <param name="writingLevel">指定更改事件（例如，针对整个多文档序列、单个文档或单页的事件）的进度范围的枚举值。</param>
      <param name="number">已写入的文档数或页数，取决于 <paramref name="writingLevel" /> 定义的范围。</param>
      <param name="progressPercentage">已写入的数据的百分比。</param>
      <param name="state">标识写操作的用户提供的对象。</param>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.Number">
      <summary>获取已写入的文档数或页数。</summary>
      <returns>在事件发生时已写入的文档数或页数。</returns>
    </member>
    <member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.WritingLevel">
      <summary>获取一个值，该值指示写入进度的范围。</summary>
      <returns>指定写入多文档序列、单个文档或单页的范围的枚举。</returns>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 的 <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Documents.Serialization.WritingProgressChangeLevel">
      <summary>指定 <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" /> 事件的范围。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
      <summary>多个文档序列的输出进度。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentWritingProgress">
      <summary>单个文档的输出进度。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedPageWritingProgress">
      <summary>单页的输出进度。</summary>
    </member>
    <member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.None">
      <summary>未指定输出进度。</summary>
    </member>
    <member name="T:System.Windows.Input.CommandConverter">
      <summary>在 <see cref="T:System.Windows.Input.ICommand" /> 对象与其他类型之间进行转换。</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Input.CommandConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否可使用指定上下文，将指定类型的对象转换为 <see cref="T:System.Windows.Input.ICommand" /> 的实例。</summary>
      <returns>如果 <paramref name="sourceType" /> 为 <see cref="T:System.String" /> 类型，则为 true；否则为 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="sourceType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定是否可使用指定的上下文将 <see cref="T:System.Windows.Input.ICommand" /> 的实例转换为指定类型。</summary>
      <returns>如果 <paramref name="destinationType" /> 为 <see cref="T:System.String" /> 类型，则为 true；否则为 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="destinationType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试使用指定上下文将指定对象转换为 <see cref="T:System.Windows.Input.ICommand" />。</summary>
      <returns>返回已转换的对象；如果 <paramref name="source" /> 为空字符串，则返回 null。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="source">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="source" />。</exception>
    </member>
    <member name="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试使用指定上下文将 <see cref="T:System.Windows.Input.ICommand" /> 转换为指定类型。</summary>
      <returns>经过转换的对象，或空字符串。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="value" />。</exception>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigation">
      <summary>在可获得焦点的对象之间提供逻辑和方向导航。 </summary>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn">
      <summary>获取或设置一个值，该值指示控件是否接受回车符。</summary>
      <returns>如果接受回车符，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.AcceptsReturnProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation">
      <summary>获取设置此属性所在元素的子级的逻辑控件 Tab 键导航行为或对该行为进行设置。</summary>
      <returns>当发生控件 Tab 键导航时，容器移动焦点的方式。默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.ControlTabNavigationProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 附加属性。 </summary>
      <returns>附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation">
      <summary>获取设置此属性所在元素的子级的方向导航行为或对该行为进行设置。 </summary>
      <returns>当发生方向导航时，容器移动焦点的方式。默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.DirectionalNavigationProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetAcceptsReturn(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 附加属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 属性的值。</returns>
      <param name="element">从中读取附加属性的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetControlTabNavigation(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 附加属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 属性的值。</returns>
      <param name="element">从中获取附加属性的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetDirectionalNavigation(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 属性的值。</returns>
      <param name="element">从中获取附加属性的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetIsTabStop(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 属性的值。</returns>
      <param name="element">从中读取附加属性的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabIndex(System.Windows.DependencyObject)">
      <summary>获取 <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 的值  指定元素的附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 属性的值。</returns>
      <param name="element">从中读取附加属性的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.GetTabNavigation(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性的值。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 属性的值。</returns>
      <param name="element">从中获取附加属性的元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.IsTabStop">
      <summary>获取或设置一个值，该值表示设置该属性所在的元素是否是一个制表位。 </summary>
      <returns>如果该元素为制表位，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.IsTabStopProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetAcceptsReturn(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置 <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn" /> 的值  指定元素的附加属性。 </summary>
      <param name="element">要在其中写入附加属性的元素。</param>
      <param name="enabled">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetControlTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation" /> 附加属性的值。 </summary>
      <param name="element">对其设置附加属性的元素。</param>
      <param name="mode">要设置的属性值</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetDirectionalNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation" /> 附加属性的值。 </summary>
      <param name="element">对其设置附加属性的元素。</param>
      <param name="mode">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetIsTabStop(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop" /> 附加属性的值。 </summary>
      <param name="element">对其写入附加属性的元素。</param>
      <param name="isTabStop">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性的值。 </summary>
      <param name="element">对其设置附加属性的元素。</param>
      <param name="index">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyboardNavigation.SetTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性的值。 </summary>
      <param name="element">对其设置附加属性的元素。</param>
      <param name="mode">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabIndex">
      <summary>获取设置此属性所在元素的 Tab 键索引或对该索引进行设置。 </summary>
      <returns>Tab 键索引。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabIndexProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyboardNavigation.TabNavigation">
      <summary>获取设置此属性所在元素的子级的逻辑 Tab 键导航行为或对该行为进行设置。 </summary>
      <returns>当发生 Tab 键导航时，容器移动焦点的方式。默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" />。</returns>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigation.TabNavigationProperty">
      <summary>标识 <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation" /> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>指定当发生逻辑和方向导航时，对焦点所做更改的可能值。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Contained">
      <summary>根据导航方向，当到达容器的末尾或开始位置时，焦点将返回到第一项或最后一项，而不会移至超出容器的开始或末尾的位置。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Continue">
      <summary>对于每个元素，只要它是导航停止位，就可以接收键盘焦点。当到达边缘时，导航会离开包含元素。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>根据导航方向，当到达容器的末尾或开始位置时，焦点将返回到第一项或最后一项。焦点无法使用逻辑导航离开该容器。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>只有 Tab 索引位于此容器内且其行为类似 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue" /> 时，才会在本地子树上考虑这些索引。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.None">
      <summary>不允许在此容器内进行键盘导航。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>容器及其所有子元素整个只能接收焦点一次。组中第一个子树或最后一个已设定焦点的元素会接收焦点</summary>
    </member>
    <member name="T:System.Windows.Interop.ActiveXHost">
      <summary>将 ActiveX 控件作为 Windows Presentation Foundation (WPF) 内容中的元素承载。 </summary>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>创建 <see cref="T:System.Windows.Interop.ActiveXHost" /> 窗口并将其分配给父级。</summary>
      <returns>
        <see cref="T:System.Windows.Interop.ActiveXHost" /> 窗口的 <see cref="T:System.Runtime.InteropServices.HandleRef" />。</returns>
      <param name="hwndParent">父窗口。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>销毁所承载的窗口。</summary>
      <param name="hwnd">包含窗口句柄的结构。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
      <summary>释放 <see cref="T:System.Windows.Interop.ActiveXHost" /> 使用的非托管资源，还可以选择释放托管资源。 </summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。 </param>
    </member>
    <member name="P:System.Windows.Interop.ActiveXHost.IsDisposed">
      <summary>获取一个值，该值指示是否已对 <see cref="T:System.Windows.Interop.ActiveXHost" /> 实例调用了 <see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /> 方法。 </summary>
      <returns>如果 <see cref="T:System.Windows.Interop.ActiveXHost" /> 实例已释放，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
      <summary>按照布局引擎操作的要求，返回 <see cref="T:System.Windows.Interop.HwndHost" /> 对象所表示的窗口的大小。 </summary>
      <returns>
        <see cref="T:System.Windows.Interop.HwndHost" /> 对象的大小。</returns>
      <param name="swConstraint">
        <see cref="T:System.Windows.Interop.HwndHost" /> 对象的大小。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
      <summary>在调用对于此元素有意义的访问键时提供类处理。 </summary>
      <param name="args">访问键事件的事件数据。事件数据报告哪个键被调用，并指示控制发送这些事件的 <see cref="T:System.Windows.Input.AccessKeyManager" /> 对象是否也将此访问键调用发送到其他元素。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>每当更新了此 <see cref="T:System.Windows.FrameworkElement" /> 上的任何依赖项属性的有效值时调用。将在实参形参中报告已更改的特定依赖项属性。重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</summary>
      <param name="e">说明更改的属性、旧值和新值的事件数据。</param>
    </member>
    <member name="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary>当承载的窗口的位置发生更改时调用。 </summary>
      <param name="bounds">窗口的位置。</param>
    </member>
    <member name="T:System.Windows.Interop.BrowserInteropHelper">
      <summary>提供有关承载 XAML 浏览器应用程序 (XBAP) 应用程序的浏览器环境的信息的帮助器类。</summary>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
      <summary>返回对某个对象的引用，该对象可用于通过其 OLE 容器接口（例如，IOleClientSite::GetContainer();）来访问主机浏览器。</summary>
      <returns>可强制转换为 <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleClientSite" /> 的对象。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.HostScript">
      <summary>如果在框架中承载 XAML 浏览器应用程序 (XBAP)，则获取一个脚本对象，该对象提供对 HTML 页面的 HTML 窗口对象、自定义脚本函数以及全局变量的访问。</summary>
      <returns>如果在框架中承载 XAML 浏览器应用程序 (XBAP)，则为一个脚本对象，该对象提供对 HTML 页面的 HTML 窗口对象、自定义脚本函数以及全局变量的访问；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
      <summary>获取一个值，该值指定当前 Windows Presentation Foundation (WPF) 应用程序是否由浏览器承载。</summary>
      <returns>如果该应用程序由浏览器承载，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.BrowserInteropHelper.Source">
      <summary>获取从中启动 XAML 浏览器应用程序 (XBAP) 应用程序的位置的统一资源标识符 (URI)。</summary>
      <returns>从中启动 XAML 浏览器应用程序 (XBAP) 应用程序的位置的 <see cref="T:System.Uri" />；否则为 null。</returns>
    </member>
    <member name="T:System.Windows.Interop.DocObjHost">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。 </summary>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.#ctor">
      <summary> 此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。 </summary>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.InitializeLifetimeService">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。 </summary>
      <returns>一个新的 <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> 对象。 </returns>
    </member>
    <member name="M:System.Windows.Interop.DocObjHost.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.IServiceProvider.GetService(System.Type)" />。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。- 或 - 如果没有 <paramref name="serviceType" /> 类型的服务对象，则为 null。</returns>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。 </param>
    </member>
    <member name="T:System.Windows.Interop.DynamicScriptObject">
      <summary>允许从 XAML 浏览器应用程序 (XBAP) 中调用承载应用程序的 HTML 窗口。 </summary>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.ToString">
      <summary>尝试将脚本对象转换为字符串表示形式。</summary>
      <returns>如果可以转换脚本对象，则为该对象的字符串表示形式；否则为该对象的默认属性或方法的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
      <summary>使用 <paramref name="indexes" /> 集合中的第一个索引值，从脚本对象中获取索引值。</summary>
      <returns>始终返回 true。 </returns>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="indexes">要检索的索引。</param>
      <param name="result">方法结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。- 或 -<paramref name="indexes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="indexes" /> 的长度不等于 1。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">第一个 <paramref name="indexes" /> 值为 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>从脚本对象中获取成员值。</summary>
      <returns>始终返回 true。 </returns>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="result">方法结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
      <summary>调用默认的脚本方法。</summary>
      <returns>始终返回 true。</returns>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="args">要传递给默认方法的参数。</param>
      <param name="result">方法结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。</exception>
      <exception cref="T:System.MissingMethodException">方法不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>对脚本对象调用方法。 </summary>
      <returns>始终返回 true。 </returns>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="args">要传递给默认方法的参数。</param>
      <param name="result">方法结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。</exception>
      <exception cref="T:System.MissingMethodException">方法不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
      <summary>使用 <paramref name="indexes" /> 集合中指定的第一个索引设置脚本对象的成员。</summary>
      <returns>始终返回 true。</returns>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="indexes">要检索的索引。</param>
      <param name="value">方法结果</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。- 或 -<paramref name="indexes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="indexes" /> 的长度不等于 1。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">第一个 <paramref name="indexes" /> 值为 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="M:System.Windows.Interop.DynamicScriptObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>将脚本对象的成员设置为指定值。</summary>
      <returns>始终返回 true。</returns>
      <param name="binder">调用站点提供的联编程序。</param>
      <param name="value">要为成员设置的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binder" /> 为 null。- 或 -<paramref name="indexes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="indexes" /> 的长度不等于 1。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">第一个 <paramref name="indexes" /> 值为 null。</exception>
      <exception cref="T:System.MissingMemberException">该成员不存在。</exception>
    </member>
    <member name="T:System.Windows.Interop.HwndHost">
      <summary>在 Windows Presentation Foundation (WPF) 内容中将 Win32 窗口作为元素承载。 </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Interop.HwndHost" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>在派生类中重写时，会创建要承载的窗口。 </summary>
      <returns>要创建的子 Win32 窗口的句柄。</returns>
      <param name="hwndParent">父窗口的窗口句柄。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>在派生类中重写时，会损坏所承载的窗口。 </summary>
      <param name="hwnd">包含窗口句柄的结构。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose">
      <summary>立即释放该对象可能持有的任何系统资源。 </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
      <summary>立即释放该对象可能持有的任何系统资源。 </summary>
      <param name="disposing">如果从显式释放器调用，则设置为 true。否则设置为 false。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.Finalize">
      <summary>在垃圾回收器损坏对象之前执行最后的清理工作。 </summary>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.Handle">
      <summary>获取所承载的窗口的窗口句柄。 </summary>
      <returns>窗口句柄。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
      <summary>获取一个值，该值指示接收器或其所包含的组件之一是否具有焦点。</summary>
      <returns>如果接收器或其所包含的组件之一具有焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
      <summary>按照布局引擎操作的要求，返回 <see cref="T:System.Windows.Interop.HwndHost" /> 对象所表示的窗口的大小。 </summary>
      <returns>
        <see cref="T:System.Windows.Interop.HwndHost" /> 对象的大小。</returns>
      <param name="constraint">
        <see cref="T:System.Windows.Interop.HwndHost" /> 对象的大小。</param>
    </member>
    <member name="E:System.Windows.Interop.HwndHost.MessageHook">
      <summary>适用于所承载的窗口接收的每条未处理的消息。 </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
      <summary>为 <see cref="T:System.Windows.Interop.HwndHost" /> 创建一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。 </summary>
      <returns>特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。 </returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>在托管窗口收到 WM_KEYDOWN 消息时被调用。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary> 在托管窗口收到 WM_KEYUP 消息时被调用。 </summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>调用此接收器的助记键（访问键）之一时调用。 </summary>
      <returns>始终返回 false。 </returns>
      <param name="msg">助记键和关联数据的消息。</param>
      <param name="modifiers">修改键。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
      <summary> 当承载的窗口的位置发生更改时调用。 </summary>
      <param name="rcBoundingBox">窗口的位置。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <summary>注册所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接口。  </summary>
      <returns>所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</returns>
      <param name="sink">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />。</summary>
      <returns>如果接收器或其所包含的组件之一具有焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />。</summary>
      <returns>对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="msg">助记键和关联数据的消息。请勿修改此消息结构。仅由于性能原因，通过引用来传递此消息。</param>
      <param name="modifiers">修改键。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />。</summary>
      <returns>所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</returns>
      <param name="sink">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</summary>
      <returns>如果已按要求对焦点进行了设置，则为 true；如果没有制表位，则为 false。</returns>
      <param name="request">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <returns>如果方法实现对该消息进行了处理，则为 true；否则为 false。</returns>
      <param name="msg">消息及关联数据。请勿修改此结构。仅由于性能原因，通过引用来传递此消息。</param>
      <param name="modifiers">修改键。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <returns>如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 true；否则为 false。</returns>
      <param name="msg">消息及关联数据。请勿修改此结构。仅由于性能原因，通过引用来传递此消息。</param>
      <param name="modifiers">修改键。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <summary>在接收器的第一个制表位或最后一个制表位上设置焦点。</summary>
      <returns>始终返回 false。</returns>
      <param name="request">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>在 keydown 消息级处理键盘输入。</summary>
      <returns>始终返回 false。</returns>
      <param name="msg">消息及关联数据。请勿修改此结构。仅由于性能原因，通过引用来传递此消息。</param>
      <param name="modifiers">修改键。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>在调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 方法之前处理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 输入消息。</summary>
      <returns>始终返回 false。</returns>
      <param name="msg">消息及关联数据。请勿修改此结构。仅由于性能原因，通过引用来传递此消息。</param>
      <param name="modifiers">修改键。</param>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
      <summary> 更新子窗口的大小、可见性和位置以反映元素的当前状态。 </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>在派生类中重写时，访问承载的子窗口的窗口进程（句柄）。 </summary>
      <returns>子窗口的窗口句柄。</returns>
      <param name="hwnd">所承载的窗口的窗口句柄。</param>
      <param name="msg">引发操作的消息。</param>
      <param name="wParam">可能与处理消息有关的信息。它通常用于存储小段信息，如标志。</param>
      <param name="lParam">可能与处理消息有关的信息。它通常用于引用对象。</param>
      <param name="handled">是否应将所得事件标记为已处理。</param>
    </member>
    <member name="T:System.Windows.Interop.IErrorPage">
      <summary>定义承载互操作内容并由 Windows Presentation Foundation (WPF) 可执行文件解释的 Windows Presentation Foundation (WPF) 应用程序与主机提供的错误页之间的互操作。 </summary>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.DeploymentPath">
      <summary>获取或设置应用程序的部署清单的路径。</summary>
      <returns>应用程序的部署清单的路径。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorFlag">
      <summary>获取或设置一个值，该值指示此项是表示一个错误，还是表示某个其他情况（如警告）。true 表示一个错误。</summary>
      <returns>true 表示一个错误；false 表示其他情况（如警告）。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorText">
      <summary>获取或设置错误的详细说明。</summary>
      <returns>错误的说明。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.ErrorTitle">
      <summary>获取或设置错误页的字符串标题。</summary>
      <returns>错误页的字符串标题。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
      <summary>获取或设置对 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序的引用，该处理程序可处理 Microsoft .NET Framework运行时下载的请求。</summary>
      <returns>一个 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序，</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.LogFilePath">
      <summary>获取或设置错误日志文件（如果有）的字符串路径。</summary>
      <returns>关联错误文件的路径。可能为空字符串。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.RefreshCallback">
      <summary>获取或设置对 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序的引用，该处理程序能处理错误页的刷新。</summary>
      <returns>
        <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序可处理错误页的刷新。</returns>
    </member>
    <member name="P:System.Windows.Interop.IErrorPage.SupportUri">
      <summary>获取或设置与该错误关联的支持信息的统一资源标识符 (URI)。</summary>
      <returns>支持信息的链接。</returns>
    </member>
    <member name="T:System.Windows.Interop.IProgressPage">
      <summary>定义承载互操作内容的 Windows Presentation Foundation (WPF) 应用程序与主机提供的进度页之间的互操作。 </summary>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.ApplicationName">
      <summary>获取或设置应用程序的名称。</summary>
      <returns>生成进度页的应用程序的名称。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.DeploymentPath">
      <summary>获取或设置应用程序部署清单的 <see cref="T:System.Uri" /> 路径。</summary>
      <returns>应用程序部署清单的路径。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.PublisherName">
      <summary>获取或设置应用程序的发行者。</summary>
      <returns>发行者标识字符串。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.RefreshCallback">
      <summary>获取或设置对 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序的引用，该处理程序能处理用户启动的“刷新”命令。</summary>
      <returns>回调引用。</returns>
    </member>
    <member name="P:System.Windows.Interop.IProgressPage.StopCallback">
      <summary>获取或设置对 <see cref="T:System.Windows.Threading.DispatcherOperationCallback" /> 处理程序的引用，该处理程序能处理用户启动的“停止”命令。</summary>
      <returns>回调引用。</returns>
    </member>
    <member name="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
      <summary>提供可用于更新进度指示器的上载进度数字信息。</summary>
      <param name="bytesDownloaded">到目前为止下载的总字节数。</param>
      <param name="bytesTotal">需要下载的应用程序的总字节数。</param>
    </member>
    <member name="T:System.Windows.Interop.WindowInteropHelper">
      <summary>协助 Windows Presentation Foundation (WPF) 与 Win32 代码之间的互操作。 </summary>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
      <summary>为指定的 Windows Presentation Foundation (WPF) 窗口初始化 <see cref="T:System.Windows.Interop.WindowInteropHelper" /> 类的一个新实例。 </summary>
      <param name="window">一个 WPF 窗口对象。</param>
    </member>
    <member name="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle">
      <summary>如果尚未创建窗口的 HWND，则创建 HWND。</summary>
      <returns>表示 HWND 的 <see cref="T:System.IntPtr" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Handle">
      <summary>获取用于创建此 <see cref="T:System.Windows.Interop.WindowInteropHelper" /> 的 Windows Presentation Foundation (WPF) 窗口的窗口句柄。 </summary>
      <returns>Windows Presentation Foundation (WPF) 窗口句柄 (HWND)。</returns>
    </member>
    <member name="P:System.Windows.Interop.WindowInteropHelper.Owner">
      <summary>获取或设置 Windows Presentation Foundation (WPF) 所有者窗口的句柄。 </summary>
      <returns>所有者窗口句柄 (HWND)。</returns>
    </member>
    <member name="T:System.Windows.Markup.ComponentResourceKeyConverter">
      <summary>实现 <see cref="T:System.Windows.ComponentResourceKey" /> 对象的类型转换器，经过考虑，该转换器没有类型转换路径。类型转换器强制执行并报告该行为。</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.ComponentResourceKeyConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否使用指定的上下文将指定类型的对象转换为 <see cref="T:System.Windows.ComponentResourceKey" /> 的实例。始终返回 false。</summary>
      <returns>所有情况下均为 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="sourceType">要进行计算以供转换的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否使用指定的上下文将 <see cref="T:System.Windows.ComponentResourceKey" /> 的实例转换为指定的类型。始终返回 false。</summary>
      <returns>所有情况下均为 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="destinationType">要进行计算以供转换的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>使用指定的上下文尝试将指定对象转换为 <see cref="T:System.Windows.ComponentResourceKey" />。在所有情况下均引发异常。</summary>
      <returns>在所有情况下均引发异常。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="value">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">不能执行转换。</exception>
    </member>
    <member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试使用指定上下文将 <see cref="T:System.Windows.ComponentResourceKey" /> 转换为指定类型。在所有情况下均引发异常。</summary>
      <returns>在所有情况下均引发异常。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <exception cref="T:System.NotSupportedException">不能执行转换。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不属于 <see cref="T:System.Windows.ComponentResourceKey" /> 类型。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Markup.DependencyPropertyConverter">
      <summary>将字符串转换为 <see cref="T:System.Windows.DependencyProperty" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否将指定类型的对象转换为 <see cref="T:System.Windows.DependencyProperty" /> 的实例。</summary>
      <returns>如果此转换器能够执行该操作，则为 true；否则为 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="sourceType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否将 <see cref="T:System.Windows.DependencyProperty" /> 的实例转换为指定的类型。</summary>
      <returns>如果此转换器能够执行该操作，则为 true；否则为 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="destinationType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试使用指定上下文将指定对象转换为 <see cref="T:System.Windows.DependencyProperty" />。</summary>
      <returns>被转换的对象。如果转换成功，则这是 <see cref="T:System.Windows.DependencyProperty" />。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="source">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="source" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试使用指定上下文将 <see cref="T:System.Windows.DependencyProperty" /> 转换为指定类型。始终引发异常。</summary>
      <returns>始终引发异常。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="T:System.Windows.Markup.EventSetterHandlerConverter">
      <summary>将事件 setter 处理程序的字符串名称转换为委托表示形式。</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可以将一种类型的对象转换为 <see cref="T:System.Delegate" />。</summary>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。 </returns>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="sourceType">一个 <see cref="T:System.Type" />，表示要转换的类型。 </param>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回此转换器是否可将该对象转换为指定的类型。</summary>
      <returns>始终返回 false。</returns>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="destinationType">一个 <see cref="T:System.Type" />，表示要转换到的类型。 </param>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的字符串转换为事件处理程序的新 <see cref="T:System.Delegate" />。</summary>
      <returns>一个表示引用的事件处理程序的新 <see cref="T:System.Delegate" />。</returns>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="cultureInfo">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。 </param>
      <param name="source">要转换的源字符串。</param>
      <exception cref="T:System.NotSupportedException">必要的服务不可用。- 或 -未能执行特定转换。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeDescriptorContext" /> 或 <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的值对象转换为指定的类型。始终引发异常。</summary>
      <returns>始终引发异常。</returns>
      <param name="typeDescriptorContext">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="cultureInfo">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。 </param>
      <param name="value">要转换的值。</param>
      <param name="destinationType">
        <paramref name="value" /> 参数所要转换成的类型。 </param>
      <exception cref="T:System.NotSupportedException">在所有情况下均引发。</exception>
    </member>
    <member name="T:System.Windows.Markup.IStyleConnector">
      <summary>提供 WPF XAML 分析器在内部用于在已编译的 XAML 中附加事件和事件 setter 的方法。 </summary>
    </member>
    <member name="M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)">
      <summary>在已编译的内容中附加事件 setter 上的事件以及模板。 </summary>
      <param name="connectionId">用于事件布线用途的唯一连接 ID。 </param>
      <param name="target">事件布线的目标。</param>
    </member>
    <member name="T:System.Windows.Markup.NamespaceMapEntry">
      <summary>提供 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 在 XML 命名空间、CLR 命名空间以及包含该 CLR 命名空间的相关类型的程序集之间建立映射所使用的信息。</summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor(System.String,System.String,System.String)">
      <summary>使用所提供的 XML 命名空间、CLR 命名空间和程序集信息初始化 <see cref="T:System.Windows.Markup.NamespaceMapEntry" /> 类的新实例。 </summary>
      <param name="xmlNamespace">XML 命名空间的映射前缀。</param>
      <param name="assemblyName">包含要映射到 XML 命名空间的 CLR 命名空间和类型的程序集。</param>
      <param name="clrNamespace">程序集中包含相关类型的 CLR 命名空间。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null- 或 - <paramref name="assemblyName" /> 为 null- 或 - <paramref name="clrNamespace" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName">
      <summary>获取或设置包含 CLR 命名空间中类型的程序集名称。 </summary>
      <returns>程序集名称。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName" /> 值将设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace">
      <summary>获取或设置包含要映射的类型的 CLR 命名空间。 </summary>
      <returns>CLR 命名空间。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace" /> 值将设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace">
      <summary>获取或设置要映射到的 XML 命名空间的映射前缀。 </summary>
      <returns>XML 命名空间的映射前缀。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace" /> 值将设置为 null。</exception>
    </member>
    <member name="T:System.Windows.Markup.ParserContext">
      <summary>提供 XAML 分析器所需的上下文信息。 </summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.ParserContext" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlParserContext" /> 初始化 <see cref="T:System.Windows.Markup.ParserContext" /> 类的新实例。</summary>
      <param name="xmlParserContext">新的 <see cref="T:System.Windows.Markup.ParserContext" /> 所基于的 XML 处理上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlParserContext" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.BaseUri">
      <summary>获取或设置此上下文的基 URI。</summary>
      <returns>字符串形式的基 URI。</returns>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
      <summary>将 XAML <see cref="T:System.Windows.Markup.ParserContext" /> 转换为 <see cref="T:System.Xml.XmlParserContext" />。</summary>
      <returns>转换后的 XML 分析器上下文。</returns>
      <param name="parserContext">要转换为 <see cref="T:System.Xml.XmlParserContext" /> 的 XAML 分析器上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
      <summary>将 <see cref="T:System.Windows.Markup.ParserContext" /> 转换为 <see cref="T:System.Xml.XmlParserContext" />。</summary>
      <returns>XML 分析器上下文。</returns>
      <param name="parserContext">要转换为 <see cref="T:System.Xml.XmlParserContext" /> 的上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parserContext" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
      <summary>获取或设置要与此 <see cref="T:System.Windows.Markup.ParserContext" /> 一起使用的 <see cref="T:System.Windows.Markup.XamlTypeMapper" />。</summary>
      <returns>将 XAML 元素映射到 CLR 类型时要使用的类型映射器。 </returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlLang">
      <summary>获取或设置此上下文的 xml:lang 字符串。</summary>
      <returns>xml:lang 字符串值。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
      <summary>获取此 XAML 分析器上下文的 XAML 命名空间字典。</summary>
      <returns>XAML 命名空间字典。</returns>
    </member>
    <member name="P:System.Windows.Markup.ParserContext.XmlSpace">
      <summary>获取或设置 xml:space 或此上下文的字符。</summary>
      <returns>xml:space 或此上下文的字符。</returns>
    </member>
    <member name="T:System.Windows.Markup.ResourceReferenceExpressionConverter">
      <summary>在 ResourceReferenceExpression 的实例和其他类型之间来回转换。 </summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.ResourceReferenceExpressionConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示转换器能否将源对象转换为 ResourceReferenceExpression 对象。 </summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="sourceType">要转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示转换器能否将 ResourceReferenceExpression 对象转换为指定的目标类型。 </summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="destinationType">要转换到的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的值转换为 ResourceReferenceExpression 类型。 </summary>
      <returns>转换后的值。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。 </param>
      <param name="value">要转换的对象。</param>
    </member>
    <member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的 ResourceReferenceExpression 对象转换为指定的类型。</summary>
      <returns>转换后的值。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。 </param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换到的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 必须属于 ResourceReferenceExpression 类型。</exception>
    </member>
    <member name="T:System.Windows.Markup.RoutedEventConverter">
      <summary>从字符串中转换 <see cref="T:System.Windows.RoutedEvent" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.RoutedEventConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否将指定类型的对象转换为 <see cref="T:System.Windows.RoutedEvent" /> 的实例。</summary>
      <returns>如果此转换器能够执行该操作，则为 true；否则为 false。</returns>
      <param name="typeDescriptorContext">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="sourceType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否将 <see cref="T:System.Windows.RoutedEvent" /> 的实例转换为指定的类型。</summary>
      <returns>始终返回 false。</returns>
      <param name="typeDescriptorContext">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="destinationType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>使用指定的上下文尝试将指定对象转换为 <see cref="T:System.Windows.RoutedEvent" /> 对象。</summary>
      <returns>转换结果。</returns>
      <param name="typeDescriptorContext">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="cultureInfo">特定于区域性的信息。</param>
      <param name="source">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="source" /> 不是字符串或无法转换。</exception>
    </member>
    <member name="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试将 <see cref="T:System.Windows.RoutedEvent" /> 转换为指定类型。在所有情况下均引发异常。</summary>
      <returns>始终引发异常。</returns>
      <param name="typeDescriptorContext">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="cultureInfo">特定于区域性的信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="value" />。这不是用于存储路径的机能转换器...</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 或 <paramref name="destinationType" /> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Markup.SetterTriggerConditionValueConverter">
      <summary>为处理 <see cref="T:System.Windows.DependencyProperty" /> 值的 <see cref="T:System.Windows.Setter" />、<see cref="T:System.Windows.Trigger" /> 和 <see cref="T:System.Windows.Condition" /> 类型提供类型转换模拟行为。此转换器仅支持 ConvertFrom。</summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.SetterTriggerConditionValueConverter" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示转换器能否将源对象转换为产生副作用的 <see cref="T:System.Windows.Setter" />、<see cref="T:System.Windows.Trigger" /> 或 <see cref="T:System.Windows.Condition" />。 </summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="sourceType">要转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示转换器能否转换为指定的目标类型。始终返回 false。</summary>
      <returns>始终返回 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="destinationType">要转换到的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>如果基础类型转换器可从上下文中获得，则转换已转换的源值。否则，返回未转换的源。</summary>
      <returns>转换器对象，或者可能为未转换的源。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。 </param>
      <param name="source">要转换的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 或 <paramref name="source" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">没有可用的 <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> 服务。</exception>
    </member>
    <member name="M:System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定对象转换为指定类型。始终引发异常。</summary>
      <returns>始终引发异常。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。 </param>
      <param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。 </param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换到的类型。</param>
      <exception cref="T:System.InvalidOperationException">在所有情况下均引发。</exception>
    </member>
    <member name="T:System.Windows.Markup.TemplateKeyConverter">
      <summary>实现 <see cref="T:System.Windows.TemplateKey" /> 对象的类型转换器，经过考虑，该转换器没有类型转换路径。类型转换器强制执行并报告该行为。</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.TemplateKeyConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否将指定类型的对象转换为 <see cref="T:System.Windows.TemplateKey" /> 的实例。</summary>
      <returns>始终返回 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="sourceType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定能否将 <see cref="T:System.Windows.TemplateKey" /> 的实例转换为指定类型。</summary>
      <returns>始终返回 false。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="destinationType">要进行计算以供转换的类型。</param>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>尝试将指定对象（字符串）转换为 <see cref="T:System.Windows.TemplateKey" />。</summary>
      <returns>始终引发异常。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="source">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="source" />。</exception>
    </member>
    <member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>尝试使用指定上下文将 <see cref="T:System.Windows.TemplateKey" /> 转换为指定类型。</summary>
      <returns>始终引发异常。</returns>
      <param name="context">一种格式上下文，可提供有关要从中调用此转换器的环境的信息。</param>
      <param name="culture">特定于区域性的信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <exception cref="T:System.NotSupportedException">无法转换 <paramref name="value" />。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlDesignerSerializationManager">
      <summary>为要求高级序列化的 XAML 设计器或其他调用方进行的 XAML 序列化提供服务。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDesignerSerializationManager.#ctor(System.Xml.XmlWriter)">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> 类的新实例。</summary>
      <param name="xmlWriter">用作 <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" /> 的基础的 XML 编写器实现。 </param>
    </member>
    <member name="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode">
      <summary>获取或设置 XAML 编写器模式。</summary>
      <returns>XAML 编写器模式。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">不是 <see cref="T:System.Windows.Markup.XamlWriterMode" /> 枚举的有效成员。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlInstanceCreator">
      <summary>提供用来存储分析器记录（供以后实例化时使用）的方法的抽象类。 </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlInstanceCreator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlInstanceCreator.CreateObject">
      <summary>在派生类中重写时，创建一个用于存储分析器记录的新对象。</summary>
      <returns>创建的对象。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>表示来自 WPF 分析器的、特定于分析器的异常的异常类。此异常用于 .NET Framework 3.0 和 .NET Framework 3.5 中的 XAML API 或 WPF XAML 分析器操作，或者通过调用 <see cref="T:System.Windows.Markup.XamlReader" /> API 而特别用于 WPF XAML 分析器。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。 </summary>
      <param name="info">包含序列化或反序列化对象所需的全部信息。</param>
      <param name="context">已序列化的流的源和目标。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
      <summary>使用指定的异常消息字符串初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。</summary>
      <param name="message">异常消息。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>使用指定的异常消息字符串和内部异常初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。 </summary>
      <param name="message">异常消息。</param>
      <param name="innerException">所发生的初始异常。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>使用指定的异常消息字符串、指定的行号以及行中的位置初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。</summary>
      <param name="message">异常消息。</param>
      <param name="lineNumber">发生异常的行号。</param>
      <param name="linePosition">行中发生异常的位置。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
      <summary>使用指定的异常消息、内部异常、行号以及行中的位置初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 类的新实例。</summary>
      <param name="message">异常消息。</param>
      <param name="lineNumber">发生异常的行号。</param>
      <param name="linePosition">行中发生异常的位置。</param>
      <param name="innerException">所发生的初始异常。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.BaseUri">
      <summary>引发异常时获取基 URI 信息。</summary>
      <returns>分析器上下文基 URI。 </returns>
    </member>
    <member name="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>通过填充指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，获取序列化指定对象所需的数据。</summary>
      <param name="info">要向其添加序列化数据的序列化信息对象。</param>
      <param name="context">此序列化的目标。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.KeyContext">
      <summary>获取或设置字典中发生异常的项的键值。 </summary>
      <returns>相关的 XAML x:Key 值。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>获取发生异常的行号。 </summary>
      <returns>行号。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>获取行中发生异常的位置。 </summary>
      <returns>行位置。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.NameContext">
      <summary>获取或设置发生异常的对象的 XAML 名称。</summary>
      <returns>对象的 XAML 名称。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.UidContext">
      <summary>获取或设置发生异常的对象的 x:Uid 指令。 </summary>
      <returns>Uid 字符串的值。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>使用 WPF 默认 XAML 读取器和关联的 XAML 对象编写器读取 XAML 输入并创建对象图。 </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XamlReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.CancelAsync">
      <summary>如果有挂起的异步加载操作，则中止当前的异步加载操作。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext">
      <summary>返回一个 <see cref="T:System.Xaml.XamlSchemaContext" /> 对象，该对象表示 <see cref="T:System.Windows.Markup.XamlReader" /> 的 WPF 架构上下文设置。</summary>
      <returns>一个 <see cref="T:System.Xaml.XamlSchemaContext" /> 对象，该对象表示 <see cref="T:System.Windows.Markup.XamlReader" /> 的 WPF 架构上下文设置。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)">
      <summary>读取指定 <see cref="T:System.IO.Stream" /> 中的 XAML 输入，并返回作为相应对象树根的 <see cref="T:System.Object" />。</summary>
      <returns>所创建的对象树根处的对象。</returns>
      <param name="stream">要加载的 XAML，以流形式表示。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>读取指定 <see cref="T:System.IO.Stream" /> 中的 XAML 输入，并返回作为相应对象树根的对象。</summary>
      <returns>已创建的对象树的根对象。</returns>
      <param name="stream">包含要加载的 XAML 输入的流。</param>
      <param name="parserContext">由分析器使用的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。- 或 -<paramref name="parserContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)">
      <summary>通过所提供的 <see cref="T:System.Xaml.XamlReader" /> 读取 XAML 输入，并返回作为相应对象树根的对象。</summary>
      <returns>已创建的对象树的根对象。</returns>
      <param name="reader">
        <see cref="T:System.Xaml.XamlReader" /> 对象。应使用输入 XAML 初始化此对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)">
      <summary>读取指定 <see cref="T:System.Xml.XmlReader" /> 中的 XAML 输入，并返回作为相应对象树根的对象。</summary>
      <returns>已创建的对象树的根对象。</returns>
      <param name="reader">已经以 XML 形式加载了要加载的 XAML 输入的 <see cref="T:System.Xml.XmlReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)">
      <summary>读取指定 <see cref="T:System.IO.Stream" /> 中的 XAML 输入，并返回相应对象树的根。</summary>
      <returns>已创建的对象树的根对象。</returns>
      <param name="stream">包含要加载的 XAML 输入的流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">对同一个 <see cref="T:System.Windows.Markup.XamlReader" /> 的多个加载操作用时挂起。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)">
      <summary>读取指定 <see cref="T:System.IO.Stream" /> 中的 XAML 输入，并返回相应对象树的根。 </summary>
      <returns>已创建的对象树的根。</returns>
      <param name="stream">包含要加载的 XAML 输入的流。</param>
      <param name="parserContext">由分析器使用的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">对同一个 <see cref="T:System.Windows.Markup.XamlReader" /> 同时执行多个加载操作。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)">
      <summary>读取指定 <see cref="T:System.Xml.XmlReader" /> 中的 XAML 输入，并返回相应对象树的根。 </summary>
      <returns>已创建的对象树的根。</returns>
      <param name="reader">已加载/读取了 XAML 输入的现有 <see cref="T:System.Xml.XmlReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">对同一个 <see cref="T:System.Windows.Markup.XamlReader" /> 同时执行多个加载操作。</exception>
    </member>
    <member name="E:System.Windows.Markup.XamlReader.LoadCompleted">
      <summary>在异步加载操作完成时发生。 </summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String)">
      <summary>读取指定文本字符串中的 XAML 输入，并返回与指定标记的根对应的对象。</summary>
      <returns>已创建的对象树的根。</returns>
      <param name="xamlText">输入 XAML，作为单个文本字符串。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)">
      <summary>（使用指定的 <see cref="T:System.Windows.Markup.ParserContext" />）读取指定文本字符串中的 XAML 标记，并返回与指定标记的根对应的对象。</summary>
      <returns>已创建的对象树的根。</returns>
      <param name="xamlText">输入 XAML，作为单个文本字符串。</param>
      <param name="parserContext">由分析器使用的上下文信息。</param>
    </member>
    <member name="T:System.Windows.Markup.XamlTypeMapper">
      <summary>将 XAML 元素名称映射到程序集中适当的 CLR <see cref="T:System.Type" />。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
      <summary>通过指定 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的程序集名称的数组，初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 类的新实例。</summary>
      <param name="assemblyNames">
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的程序集名称的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
      <summary>使用指定的程序集名称数组和指定的命名空间映射，初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 类的新实例。</summary>
      <param name="assemblyNames">
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的程序集名称的数组。</param>
      <param name="namespaceMaps">
        <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 应该使用的命名空间映射的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyNames" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
      <summary>定义 XML 命名空间与程序集中 CLR 命名空间之间的映射，并将这些映射添加到 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 信息中。</summary>
      <param name="xmlNamespace">XML 命名空间的前缀。</param>
      <param name="clrNamespace">包含要映射的类型的 CLR 命名空间。</param>
      <param name="assemblyName">包含 CLR 命名空间的程序集。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null- 或 -<paramref name="clrNamespace" /> 为 null- 或 -<paramref name="assemblyName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
      <summary>请求允许在完全信任的情况下调用的 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 派生类型访问特定的内部类型。</summary>
      <returns>如果可以访问内部类型，则为 true；否则为 false。</returns>
      <param name="type">要访问的类型。</param>
    </member>
    <member name="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
      <summary>获取要使用的 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 的实例（如果尚未指定）。</summary>
      <returns>默认类型映射器。</returns>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
      <summary>使用指定的 XML 命名空间前缀和元素名称，获取给定 XAML 元素所映射到的 CLR <see cref="T:System.Type" />。</summary>
      <returns>对象的 <see cref="T:System.Type" />；如果无法解析任何映射，则为 null。</returns>
      <param name="xmlNamespace">指定的 XML 命名空间前缀。</param>
      <param name="localName">要获取其映射 <see cref="T:System.Type" /> 的 XAML 元素的“本地”名称。这种情况下“本地”意味着映射而非提供的 <paramref name="xmlNamespace" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null- 或 -<paramref name="localName" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
      <summary>指定要在加载程序集时使用的路径。</summary>
      <param name="assemblyName">未指定扩展名或路径的程序集的简称（等效于 <see cref="P:System.Reflection.AssemblyName.Name" />）。  </param>
      <param name="assemblyPath">程序集的文件路径。程序集路径必须是包含文件扩展名的完整文件路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> 为 null- 或 -<paramref name="assemblyPath" /> 为 null。</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">
        <paramref name="assemblyName" /> 为 <see cref="F:System.String.Empty" />- 或 -<paramref name="assemblyPath" /> 为 <see cref="F:System.String.Empty" />- 或 -<paramref name="assemblyPath" /> 不是包含文件扩展名的完整文件路径。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriter">
      <summary>提供一个静态 <see cref="Overload:System.Windows.Markup.XamlWriter.Save" /> 方法（多次重载），该方法可用于以受限的 XAML 序列化方式，将所提供的运行时对象序列化为 XAML 标记。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object)">
      <summary>返回用于序列化指定对象及其属性的 XAML 字符串。</summary>
      <returns>可以写入流或文件的 XAML 字符串。将序列化位于提供的 <paramref name="obj" /> 元素下面的所有元素的逻辑树。</returns>
      <param name="obj">要序列化的元素。通常，这是页面或应用程序的根元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未在完全信任环境中运行。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.Stream)">
      <summary>将 XAML 信息保存到指定流中，以便序列化指定对象及其属性。</summary>
      <param name="obj">要序列化的元素。通常，这是页面或应用程序的根元素。</param>
      <param name="stream">序列化 XAML 信息的目标流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未在完全信任环境中运行。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.TextWriter)">
      <summary>将 XAML 信息保存为所提供的 <see cref="T:System.IO.TextWriter" /> 对象的源。然后，可以使用 <see cref="T:System.IO.TextWriter" /> 的输出对所提供的对象及其属性进行序列化。</summary>
      <param name="obj">要序列化的元素。通常，这是页面或应用程序的根元素。</param>
      <param name="writer">作为写入序列化 XAML 信息的目标的 <see cref="T:System.IO.TextWriter" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="writer" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未在完全信任环境中运行。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>将 XAML 信息保存到自定义序列化程序中。然后，可以使用该序列化程序的输出来序列化提供的对象及其属性。</summary>
      <param name="obj">要序列化的元素。通常，这是页面或应用程序的根元素。</param>
      <param name="manager">自定义序列化实现。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="manager" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未在完全信任环境中运行。</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Xml.XmlWriter)">
      <summary>将 XAML 信息保存为所提供的 <see cref="T:System.Xml.XmlWriter" /> 对象的源。然后，可以使用 <see cref="T:System.Xml.XmlWriter" /> 的输出对所提供的对象及其属性进行序列化。</summary>
      <param name="obj">要序列化的元素。通常，这是页面或应用程序的根元素。</param>
      <param name="xmlWriter">用于写入序列化的 XAML 信息的编写器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="xmlWriter" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">应用程序未在完全信任环境中运行。</exception>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterMode">
      <summary>指定用于序列化作为表达式（如绑定声明）的值的 XAML 编写器模式。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Expression">
      <summary>将序列化 <see cref="T:System.Windows.Expression" />。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterMode.Value">
      <summary>序列化 <see cref="T:System.Windows.Expression" /> 的计算所得值。</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlWriterState">
      <summary>描述自定义 XAML 编写器的可能的编写状态。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Finished">
      <summary>
        <see cref="T:System.Windows.Markup.XamlWriter" /> 已经完成了其操作。</summary>
    </member>
    <member name="F:System.Windows.Markup.XamlWriterState.Starting">
      <summary>
        <see cref="T:System.Windows.Markup.XamlWriter" /> 已经开始了其操作。</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlAttributeProperties">
      <summary>封装 <see cref="T:System.Windows.DependencyObject" /> 的 XML 语言特定的特性。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlNamespaceMaps(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性的值。</summary>
      <returns>指定对象的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 属性的值。</returns>
      <param name="dependencyObject">要从中获取 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 属性的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDefinition(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性的值。</summary>
      <returns>指定对象的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性的值。</returns>
      <param name="dependencyObject">要从中获取 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性值的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDictionary(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的值。</summary>
      <returns>指定对象的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的值。</returns>
      <param name="dependencyObject">要从中获取 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性值的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace(System.Windows.DependencyObject)">
      <summary>获取指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的值。</summary>
      <returns>指定对象的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的值。</returns>
      <param name="dependencyObject">要从中获取 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性值的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlNamespaceMaps(System.Windows.DependencyObject,System.String)">
      <summary>设置指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性的值。</summary>
      <param name="dependencyObject">要对其设置 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性的对象。</param>
      <param name="value">要设置的字符串值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDefinition(System.Windows.DependencyObject,System.String)">
      <summary>设置指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性的值。</summary>
      <param name="dependencyObject">要对其设置 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 属性的对象。</param>
      <param name="value">字符串形式的 XML 命名空间定义。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDictionary(System.Windows.DependencyObject,System.Windows.Markup.XmlnsDictionary)">
      <summary>设置指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的值。</summary>
      <param name="dependencyObject">要对其设置 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性的对象。</param>
      <param name="value">字符串形式的 xmlns 字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlSpace(System.Windows.DependencyObject,System.String)">
      <summary>设置指定的 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的值。</summary>
      <param name="dependencyObject">要对其设置 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性的对象。</param>
      <param name="value">用于 XML 空间的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps">
      <summary>获取或设置一个附加属性值，该附加属性值存储供 .NET Framework 3.0 和 .NET Framework 3.5 的 WPF XAML 分析器使用的 XML 命名空间映射。</summary>
      <returns>字符串形式的 XML 命名空间映射。</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMapsProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps" /> 附加属性。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition">
      <summary>获取或设置一个附加属性值，该附加属性值存储供 .NET Framework 3.0 和 .NET Framework 3.5 的 WPF XAML 分析器使用的 xmlns 定义。</summary>
      <returns>字符串形式的 xmlns 定义。</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinitionProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition" /> 附加属性。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary">
      <summary>获取或设置一个附加属性值，该附加属性值存储供 .NET Framework 3.0 和 .NET Framework 3.5 的 WPF XAML 分析器使用的 xmlns 字典。</summary>
      <returns>用于存储 xmlns 字典的附加属性值。</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionaryProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary" /> 附加属性。</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace">
      <summary>获取或设置 xml:space 属性的映射值。</summary>
      <returns>要用作 xml:space 的字符串。</returns>
    </member>
    <member name="F:System.Windows.Markup.XmlAttributeProperties.XmlSpaceProperty">
      <summary>标识 <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace" /> 附加属性。</summary>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDictionary">
      <summary>表示包含 WPF 中 XAML 命名空间的 xmlns 映射的字典。 </summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.#ctor(System.Windows.Markup.XmlnsDictionary)">
      <summary>通过使用指定字典作为复制源，初始化 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 类的新实例。</summary>
      <param name="xmlnsDictionary">新的 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 所基于的字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlnsDictionary" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.Object,System.Object)">
      <summary>将一个前缀 URI 对添加到此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="prefix">要添加的 XAML 命名空间前缀。 </param>
      <param name="xmlNamespace">前缀所映射到的 XAML 命名空间 URI。 </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> 或 <paramref name="xmlNamespace" /> 不是字符串。 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 或 <paramref name="xmlNamespace" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.String,System.String)">
      <summary>将一个前缀 URI 对添加到此 <see cref="T:System.Windows.Markup.XmlnsDictionary" />。</summary>
      <param name="prefix">此 XML 命名空间的前缀。</param>
      <param name="xmlNamespace">前缀所映射到的 XML 命名空间 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 或 <paramref name="xmlNamespace" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Clear">
      <summary>从此 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中移除所有项。 </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Contains(System.Object)">
      <summary>返回一个值，该值指示指定的前缀键是否在此 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中。 </summary>
      <returns>如果请求的前缀键位于字典中，则为 true；否则为 false。</returns>
      <param name="key">要搜索的前缀键。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Array,System.Int32)">
      <summary>将 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的项复制到指定的数组中。 </summary>
      <param name="array">要将表数据复制到的数组。</param>
      <param name="index">目标数组中从零开始的索引，从该索引开始复制。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的项复制到指定的 <see cref="T:System.Collections.DictionaryEntry" /> 数组中。 </summary>
      <param name="array">要将表数据复制到的数组。</param>
      <param name="index">目标数组中从零开始的索引，从该索引开始复制。</param>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Count">
      <summary>获取 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的项数。 </summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的项数。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.DefaultNamespace">
      <summary>查找与默认 XAML 命名空间对应的 XAML 命名空间。 </summary>
      <returns>如果存在与默认 XML 命名空间对应的命名空间，则为该命名空间；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetDictionaryEnumerator">
      <summary>返回一个循环访问此 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的字典枚举数。</summary>
      <returns>此字典的字典枚举数。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetEnumerator">
      <summary>返回一个循环访问此 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的枚举数。</summary>
      <returns>此字典的枚举数。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespace(System.String)">
      <summary>针对提供的前缀字符串检索 XAML 命名空间。</summary>
      <returns>请求的 XAML 命名空间 URI。</returns>
      <param name="prefix">要针对其检索 XAML 命名空间的前缀。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.GetNamespacePrefixes">
      <summary>返回所有可能的前缀到 XAML 命名空间映射（<see cref="T:System.Xaml.NamespaceDeclaration" /> 值），这些映射可在活动架构上下文中找到。</summary>
      <returns>
        <see cref="T:System.Xaml.NamespaceDeclaration" /> 值的可枚举集合。要明确地获取前缀字符串，请从每个返回的值中获取 <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的大小是否是固定的。 </summary>
      <returns>如果大小是固定的，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 是否为只读。 </summary>
      <returns>如果字典是只读的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.IsSynchronized">
      <summary>获取一个值，该值指示对此 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的访问是否是线程安全的。 </summary>
      <returns>如果对该字典的访问是线程安全的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.Object)">
      <summary>获取或设置与指定前缀关联的 XAML 命名空间 URI。</summary>
      <returns>对应的 XAML 命名空间 URI。</returns>
      <param name="prefix">要从其获取或设置关联的 XML 命名空间 URI 的前缀。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="prefix" /> 不是字符串- 或 -要设置的值不是字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null- 或 -值设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.String)">
      <summary>获取或设置与指定前缀关联的 XAML 命名空间 URI。</summary>
      <returns>对应的 XML 命名空间 URI。</returns>
      <param name="prefix">获取或设置关联的命名空间时所针对的前缀。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null- 或 -值设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Keys">
      <summary>获取 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的所有键的集合。 </summary>
      <returns>字典中的所有键的集合。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupNamespace(System.String)">
      <summary>返回与指定 XAML 命名空间前缀对应的 XML 命名空间 URI。 </summary>
      <returns>如果与指定前缀对应的 XAML 命名空间 URI 在此 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中存在，则为该 URI；否则为 null。</returns>
      <param name="prefix">要查找的 XAML 命名空间前缀。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.LookupPrefix(System.String)">
      <summary>返回与指定 XAML 命名空间 URI 对应的前缀。 </summary>
      <returns>与给定命名空间对应的 XML 前缀；否则为 null。</returns>
      <param name="xmlNamespace">要查找的 XAML 命名空间 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PopScope">
      <summary>弹出 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的范围。 </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.PushScope">
      <summary>推入 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的范围。 </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.Object)">
      <summary>从 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中移除具有指定前缀键的项。 </summary>
      <param name="prefix">要移除的前缀键。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.String)">
      <summary>从 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中移除具有指定前缀键的项。 </summary>
      <param name="prefix">要移除的前缀键。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 被密封。</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.Seal">
      <summary>锁定字典，使其无法进行更改。 </summary>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Sealed">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 是否是密封的。 </summary>
      <returns>如果字典是密封的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的访问的对象。 </summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDictionary.Values">
      <summary>获取 <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中的所有值的集合。 </summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlnsDictionary" /> 中所有值的集合。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver">
      <summary>解析二进制 XAML (BAML) 中类和属性的可本地化设置。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetElementLocalizability(System.String,System.String)">
      <summary>返回一个值，该值指示指定类型的元素是否可本地化以及在可本地化时是否可设置为内联格式。 </summary>
      <returns>一个包含指定程序集和元素的本地化信息的对象。</returns>
      <param name="assembly">包含要本地化的BAML 程序集的全名。</param>
      <param name="className">要检索其本地化信息的元素的完整类名。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetPropertyLocalizability(System.String,System.String,System.String)">
      <summary>返回一个值，该值指示指定类型的元素的指定属性是否可本地化。 </summary>
      <returns>一个指定属性是否可本地化以及如何本地化的对象。</returns>
      <param name="assembly">包含要本地化的BAML 程序集的全名。</param>
      <param name="className">要检索其本地化信息的元素的完整类名。</param>
      <param name="property">要检索其本地化信息的属性的名称。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveAssemblyFromClass(System.String)">
      <summary>返回包含指定类的程序集的全名。</summary>
      <returns>包含类的程序集的全名。</returns>
      <param name="className">完整的类名。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveFormattingTagToClass(System.String)">
      <summary>返回 BAML 中尚未遇到过的 XAML 标记的完整类名。</summary>
      <returns>与该标记关联的完整类名。</returns>
      <param name="formattingTag">该标记的名称。</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResource">
      <summary>表示BAML 流中的可本地化资源。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor(System.String,System.String,System.Windows.LocalizationCategory,System.Boolean,System.Boolean)">
      <summary>使用指定的可本地化值、本地化注释、资源类别、本地化锁状态及资源的可见性来初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 类的新实例。</summary>
      <param name="content">可本地化的值。</param>
      <param name="comments">用于本地化的注释。</param>
      <param name="category">资源的字符串类别。</param>
      <param name="modifiable">如果资源应可修改，则为 true；否则为 false。</param>
      <param name="readable">如果由于资源有可能作为 UI 中的文本而可读，因此出于翻译目的该资源应可见，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Category">
      <summary>获取或设置资源的本地化类别。 </summary>
      <returns>本地化类别，表现形式为枚举值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Comments">
      <summary>获取或设置与资源关联的本地化注释。 </summary>
      <returns>本地化注释字符串。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Content">
      <summary>获取或设置可本地化的内容。</summary>
      <returns>可本地化的内容字符串。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 对象是否等于此对象。</summary>
      <returns>如果 <paramref name="other" /> 等于此对象，则为 true；否则为 false。</returns>
      <param name="other">要测试相等的 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.GetHashCode">
      <summary>返回表示此实例的整数哈希代码。 </summary>
      <returns>整数哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Modifiable">
      <summary>获取或设置一个值，该值指示是否可修改可本地化的资源。 </summary>
      <returns>如果可修改该资源，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Readable">
      <summary>获取或设置资源在翻译时是否可见。 </summary>
      <returns>如果资源在翻译时可见，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey">
      <summary>表示用于标识 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 中可本地化资源的键。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.#ctor(System.String,System.String,System.String)">
      <summary>用所提供的 UID、类名和属性名初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 类的新实例。</summary>
      <param name="uid">具有可本地化资源的元素的 UID。</param>
      <param name="className">二进制 XAML (BAML) 中可本地化资源的类名称。</param>
      <param name="propertyName">BAML 中可本地化资源的属性名称。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.AssemblyName">
      <summary>获取定义可本地化资源类型（如资源的 <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName" /> 所声明）的程序集的名称。</summary>
      <returns>程序集的名称。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName">
      <summary>获取此 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的类名部分。</summary>
      <returns>此 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的类名部分。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Object)">
      <summary>比较某个对象与 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的实例是否相等。</summary>
      <returns>如果两个实例相等，则为 true；否则为 false。</returns>
      <param name="other">要比较是否相等的对象。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>比较 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的两个实例是否相等。</summary>
      <returns>如果两个实例相等，则为 true；否则为 false。</returns>
      <param name="other">要比较是否相等的另一个 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 实例。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.GetHashCode">
      <summary>返回表示此实例的整数哈希代码。</summary>
      <returns>整数哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.PropertyName">
      <summary>获取此 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的属性名部分。</summary>
      <returns>此 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的属性名部分。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid">
      <summary>获取此 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的 UID 部分。</summary>
      <returns>此 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey" /> 的 UID 部分。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary">
      <summary>包含 BAML 记录中所有可本地化的资源。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Add(System.Windows.Markup.Localizer.BamlLocalizableResourceKey,System.Windows.Markup.Localizer.BamlLocalizableResource)">
      <summary>在 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 中添加一个带有所提供的键和值的项。</summary>
      <param name="key">资源的键。</param>
      <param name="value">一个包含该资源的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">已存在具有相同密钥的项。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Clear">
      <summary>删除 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象中的所有资源。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Contains(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>确定 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象是否包含具有指定键的资源。</summary>
      <returns>如果 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象包含具有指定键的资源，则为 true；否则为 false。</returns>
      <param name="key">要查找的资源键。</param>
      <exception cref="T:System.ArgumentNullException">项为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
      <summary>从指定的索引处开始，将 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象的内容复制到 <see cref="T:System.Collections.DictionaryEntry" /> 对象的一维数组中。 </summary>
      <param name="array">要存放数据的对象数组。</param>
      <param name="arrayIndex">起始索引值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> 超过目标数组长度。- 或 -副本不适合 <paramref name="arrayIndex" /> 和目标数组长度之间的剩余数组空间。</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Count">
      <summary>获取 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 中可本地化资源的数量。</summary>
      <returns>可本地化资源的数目。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的枚举数。 </summary>
      <returns>一个可以循环访问字典内容的专用 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator" />。 </returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象是否具有固定大小。 </summary>
      <returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象是否为只读。 </summary>
      <returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Item(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>获取或设置一个由它的键指定的可本地化资源。</summary>
      <returns>资源值。</returns>
      <param name="key">资源的键值。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Keys">
      <summary>获取一个集合，其中包含 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象中的所有键。 </summary>
      <returns>一个包含对象中所有键的集合。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Remove(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
      <summary>从 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 中移除指定的可本地化资源。</summary>
      <param name="key">要移除的资源的键。</param>
      <exception cref="T:System.ArgumentNullException">项为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.RootElementKey">
      <summary>如果根元素可本地化，则获取它的键。 </summary>
      <returns>如果根元素可本地化，则为它的键。否则，该值将设置为 null。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">一个从零开始的 <see cref="T:System.Array" />，它接收复制的项。</param>
      <param name="index">指定的 <see cref="T:System.Array" /> 中接收复制内容的第一个位置。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>集合中的项数。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步对 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />。</summary>
      <param name="key">要添加的元素的键。</param>
      <param name="value">要添加到 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 的对象值。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />。</summary>
      <returns>如果在 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="key">要在字典中查找的键。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的枚举器对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionary.Item(System.Object)" />。</summary>
      <returns>具有指定键的项。</returns>
      <param name="key">要获取或设置的项的键。 </param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />。</summary>
      <param name="key">要从 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Values">
      <summary>获取一个集合，该集合包含 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 中的所有值。 </summary>
      <returns>一个包含对象中所有值的集合。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator">
      <summary>定义一个专用的枚举器，它可以枚举 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 对象的内容。</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Current">
      <summary>获取集合中的当前对象。 </summary>
      <returns>当前对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Entry">
      <summary>获取当前位置的 <see cref="T:System.Collections.DictionaryEntry" /> 对象。 </summary>
      <returns>一个对象，包含当前位置条目的键和值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Key">
      <summary>获取当前条目的键。 </summary>
      <returns>当前条目的键。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.MoveNext">
      <summary>移至集合中的下一项。 </summary>
      <returns>如果枚举数成功前移至下一个元素，则为 true。如果没有剩余元素，则此方法会返回 false。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Reset">
      <summary>将枚举数返回至其初始位置，即位于集合中第一个对象之前。 </summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionaryEnumerator.Key" />。</summary>
      <returns>当前枚举元素的键。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IDictionaryEnumerator.Value" />。</summary>
      <returns>当前枚举元素的值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.System#Collections#IEnumerator#Current">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IEnumerator.Current" />。</summary>
      <returns>集合中的当前元素。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Value">
      <summary>获取当前条目的值。 </summary>
      <returns>当前条目的值。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizer">
      <summary>从 BAML 文件提取资源，并生成 BAML 源的本地化版本。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream)">
      <summary>使用指定的 BAML 源流初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 类的新实例。 </summary>
      <param name="source">一个文件流，包含要本地化的 BAML 输入。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver)">
      <summary>使用指定的本地化解析程序和 BAML 源流初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 类的新实例。 </summary>
      <param name="source">一个文件流，包含要本地化的 BAML 输入。</param>
      <param name="resolver">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> 的一个实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver,System.IO.TextReader)">
      <summary>使用指定的本地化解析程序、BAML 源流和 <see cref="T:System.IO.TextReader" /> 初始化 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 类的新实例。</summary>
      <param name="source">一个文件流，包含要本地化的 BAML 输入。</param>
      <param name="resolver">
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver" /> 的一个实例。</param>
      <param name="comments">读取与此 BAML 输入关联的本地化 XML 注释。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 为 null。</exception>
    </member>
    <member name="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify">
      <summary>当 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 遇到意外情况时发生。</summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.ExtractResources">
      <summary>提取 BAML 流中的所有可本地化资源。 </summary>
      <returns>BAML 流中可本地化资源的副本，采用 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary" /> 形式。</returns>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.OnErrorNotify(System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> 事件。</summary>
      <param name="e">必需的事件参数。</param>
    </member>
    <member name="M:System.Windows.Markup.Localizer.BamlLocalizer.UpdateBaml(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizationDictionary)">
      <summary>将资源更新应用于 BAML 源，并将更新版本写入指定流，以创建源 BAML 的本地化版本。 </summary>
      <param name="target">将接收经过更新的 BAML 的流。</param>
      <param name="updates">要应用于源 BAML 的资源更新。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> 或 <paramref name="updates" /> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerError">
      <summary>指定 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 可能会遇到的错误情况。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateElement">
      <summary>本地化的 BAML 包含对同一元素的多个引用。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateUid">
      <summary>多个元素具有相同的 <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> 值。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.IncompleteElementPlaceholder">
      <summary>元素的替换内容包含不完整的子占位符。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidCommentingXml">
      <summary>XML 注释的格式不正确。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationAttributes">
      <summary>本地化注释文本中包含无效特性。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationComments">
      <summary>本地化注释文本中包含无效注释。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidUid">
      <summary>
        <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" /> 与 BAML 源中的任何元素都不对应。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.MismatchedElements">
      <summary>指示替换和源之间不匹配。替换必须包含源中的所有元素占位符。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.SubstitutionAsPlaintext">
      <summary>元素内容的替换不能分析为 XML，因此无法识别替换中的任何格式设置标记。该替换将改为作为纯文本进行应用。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UidMissingOnChildElement">
      <summary>子元素没有 <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid" />。因此，它不能表示为父元素的内容字符串中的占位符。</summary>
    </member>
    <member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UnknownFormattingTag">
      <summary>无法识别替换中的格式设置标记。</summary>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs">
      <summary>为 <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> 事件提供必需的事件数据。</summary>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Error">
      <summary>获取 <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 所遇到的特定错误条件。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer" /> 遇到的错误条件，表现形式为枚举值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Key">
      <summary>获取与产生错误情况的资源关联的键。</summary>
      <returns>与产生错误情况的资源关联的键。</returns>
    </member>
    <member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventHandler">
      <summary>表示将处理 <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Markup.Localizer.ElementLocalizability">
      <summary>表示 BAML 中元素的本地化设置。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor(System.String,System.Windows.LocalizabilityAttribute)">
      <summary>使用指定的格式设置标记和本地化特性初始化 <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability" /> 类的新实例。 </summary>
      <param name="formattingTag">格式设置标记名称。为此参数赋予非空值可指示内联格式设置。</param>
      <param name="attribute">关联元素的本地化特性。</param>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.Attribute">
      <summary> 获取或设置关联元素的本地化特性。 </summary>
      <returns>关联元素的本地化特性。</returns>
    </member>
    <member name="P:System.Windows.Markup.Localizer.ElementLocalizability.FormattingTag">
      <summary>获取或设置关联元素的格式设置标记。 </summary>
      <returns>格式化标记字符串。</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupWriter">
      <summary>提供用来将对象写入 XAML 格式的方法。</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Markup.Primitives.MarkupWriter" /> 占用的资源。</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object)">
      <summary>从指定对象创建 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 的实例。</summary>
      <returns>一个标记对象，使用它可以在对象树中进行导航。</returns>
      <param name="instance">一个对象，它将成为序列化树的根。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
      <summary>从指定对象和指定序列化管理器创建 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 的实例。</summary>
      <returns>一个标记对象，使用它可以在对象树中进行导航。</returns>
      <param name="instance">一个对象，它将成为序列化树的根。</param>
      <param name="manager">序列化管理器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> 或 <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Media.AdornerHitTestResult">
      <summary>表示通过调用 <see cref="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)" /> 方法返回的数据。</summary>
    </member>
    <member name="P:System.Windows.Media.AdornerHitTestResult.Adorner">
      <summary> 获取已被命中的可视对象。 </summary>
      <returns>已被命中的可视对象。</returns>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>定义一组影响文本在元素中的显示方式的附加属性。</summary>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextFormattingMode(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="T:System.Windows.Media.TextFormattingMode" />。</summary>
      <returns>
        <paramref name="element" /> 的 <see cref="T:System.Windows.Media.TextFormattingMode" />。</returns>
      <param name="element">要获取其 <see cref="T:System.Windows.Media.TextFormattingMode" /> 的元素。</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="T:System.Windows.Media.TextHintingMode" />。</summary>
      <returns>
        <paramref name="element" /> 的 <see cref="T:System.Windows.Media.TextHintingMode" />。</returns>
      <param name="element">要获取其 <see cref="T:System.Windows.Media.TextHintingMode" /> 的元素。</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextRenderingMode(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</summary>
      <returns>
        <paramref name="element" /> 的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</returns>
      <param name="element">要获取其 <see cref="T:System.Windows.Media.TextRenderingMode" /> 的元素。</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextFormattingMode(System.Windows.DependencyObject,System.Windows.Media.TextFormattingMode)">
      <summary>设置指定元素的 <see cref="T:System.Windows.Media.TextFormattingMode" />。 </summary>
      <param name="element">要设置其 <see cref="T:System.Windows.Media.TextFormattingMode" /> 的元素。</param>
      <param name="value">要对 <paramref name="element" /> 设置的 <see cref="T:System.Windows.Media.TextFormattingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.DependencyObject,System.Windows.Media.TextHintingMode)">
      <summary>设置指定元素的 <see cref="T:System.Windows.Media.TextHintingMode" />。</summary>
      <param name="element">要设置其 <see cref="T:System.Windows.Media.TextHintingMode" /> 的元素。</param>
      <param name="value">要对 <paramref name="element" /> 设置的 <see cref="T:System.Windows.Media.TextHintingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。 </exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextRenderingMode(System.Windows.DependencyObject,System.Windows.Media.TextRenderingMode)">
      <summary>设置指定元素的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</summary>
      <param name="element">要设置其 <see cref="T:System.Windows.Media.TextRenderingMode" /> 的元素。</param>
      <param name="value">要对 <paramref name="element" /> 设置的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。 </exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextFormattingMode">
      <summary>获取元素的 <see cref="T:System.Windows.Media.TextFormattingMode" />。这是一个附加属性。</summary>
      <returns>此元素的 <see cref="T:System.Windows.Media.TextFormattingMode" />。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextFormattingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TextOptions.TextFormattingMode" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>获取此元素的 <see cref="T:System.Windows.Media.TextHintingMode" />。这是一个附加属性。</summary>
      <returns>此元素的 <see cref="T:System.Windows.Media.TextHintingMode" />。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextRenderingMode">
      <summary>设置此元素的 <see cref="T:System.Windows.Media.TextRenderingMode" />。这是一个附加属性。</summary>
      <returns>此元素的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextRenderingModeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TextOptions.TextRenderingMode" /> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>一个触发器操作，该操作可启动 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 并将其动画分发给动画的目标对象和属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior">
      <summary>获取或设置正确的提交行为以启动此演示图板中的动画时钟周期。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 枚举值之一。默认值为 <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Name">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 对象的名称。通过命名 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 对象，可在 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 启动后对其进行控制。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 的名称。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 启动的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 启动的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ControllableStoryboardAction">
      <summary>操作已经由 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 操作应用的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName">
      <summary>获取或设置 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 方法的 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" />，此方法打开了您要以交互方式控制的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 的 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name" />，它打开了您要以交互方式控制的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame">
      <summary>通过使用离散内插，可以在前一个关键帧的 <see cref="T:System.Windows.Thickness" /> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>用指定的结束值初始化 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>用指定的结束值和关键时间初始化 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。关键时间确定何时达到目标值，该时间也是关键帧结束的时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame" /> 的一个新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>使用离散内插可以在前一个关键帧值和当前关键帧的值之间进行内插。</summary>
      <returns>指定基值和进度时此关键帧的输出值。</returns>
      <param name="baseValue">动画处理的起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 到 1.0 之间的值，它指定此关键帧所经过的时间的百分比。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingThicknessKeyFrame">
      <summary>一个类，通过它可以将缓动函数与 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 关键帧动画相关联。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>使用指定的 <see cref="T:System.Windows.Thickness" /> 值初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类的新实例。 </summary>
      <param name="value">初始的 <see cref="T:System.Windows.Thickness" /> 值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>用指定的 <see cref="T:System.Windows.Thickness" /> 值和关键时间初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类的新实例。 </summary>
      <param name="value">初始的 <see cref="T:System.Windows.Thickness" /> 值。</param>
      <param name="keyTime">初始关键时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>用指定的 <see cref="T:System.Windows.Thickness" /> 值、关键时间和缓动函数初始化 <see cref="T:System.Windows.Media.Animation.EasingThicknessKeyFrame" /> 类的新实例。 </summary>
      <param name="value">初始的 <see cref="T:System.Windows.Thickness" /> 值。</param>
      <param name="keyTime">初始关键时间。</param>
      <param name="easingFunction">缓动函数。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Freezable" /> 派生类的新实例。在创建派生类时，必须重写此方法。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction">
      <summary>获取或设置应用于关键帧的缓动函数。</summary>
      <returns>应用于关键帧的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunctionProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.EasingThicknessKeyFrame.EasingFunction" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>根据所使用的缓动函数，利用提供的进度增量在前一个关键帧的值和当前关键帧的值之间进行插值。</summary>
      <returns>指定基值和进度时此关键帧的输出值。</returns>
      <param name="baseValue"> 动画处理的起始值。</param>
      <param name="keyFrameProgress"> 一个介于 0.0 和 1.0 之间（均含）的值，该值指定此关键帧已经过去的时间的百分比。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearThicknessKeyFrame">
      <summary>通过使用线性内插，可以在前一个关键帧的 <see cref="T:System.Windows.Thickness" /> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>用指定的结束值初始化 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>用指定的结束值和关键时间初始化 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。关键时间确定何时达到目标值，该时间也是关键帧结束的时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame" /> 的一个新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>使用提供的进度增量，以线性方式在前一个关键帧的值和当前关键帧的值之间内插。</summary>
      <returns>指定基值和进度时此关键帧的输出值。</returns>
      <param name="baseValue">动画处理的起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间（均含）的值，该值指定此关键帧已经过去的时间的百分比。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.PauseStoryboard">
      <summary>一个暂停 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发器操作。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PauseStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.PauseStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.RemoveStoryboard">
      <summary>一个移除 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发器操作。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RemoveStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.RemoveStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ResumeStoryboard">
      <summary>支持用于恢复暂停的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发器操作。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ResumeStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ResumeStoryboard" /> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SeekStoryboard">
      <summary>一个触发器操作，该操作提供查找到（跳到）<see cref="T:System.Windows.Media.Animation.Storyboard" /> 的活动周期中指定时间的功能。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Offset">
      <summary>获取或设置演示图板应该从查找原点 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" /> 前进或后退的距离。.</summary>
      <returns>一个正值或负值，该值指定演示图板应该从查找原点 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin" /> 前进或后退的距离。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.SeekStoryboard.Origin">
      <summary>获取或设置一个位置，此查找操作的 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 从该位置开始应用。 </summary>
      <returns>开始应用此查找操作的 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 的位置。默认值为 <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SeekStoryboard.ShouldSerializeOffset">
      <summary>返回一个值，该值指示是否应序列化此 <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> 的 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 属性。</summary>
      <returns>如果应序列化此 <see cref="T:System.Windows.Media.Animation.SeekStoryboard" /> 的 <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset" /> 属性，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio">
      <summary>一个触发器操作，它更改 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的速度。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SetStoryboardSpeedRatio.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SetStoryboardSpeedRatio.SpeedRatio">
      <summary>获取或设置新的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 动画速度，该速度以相对于旧动画速度的比率值表示。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的速度比率值。默认值为 1.0。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SkipStoryboardToFill">
      <summary>用于将 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 移到填充期末尾的触发器操作。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SkipStoryboardToFill.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineThicknessKeyFrame">
      <summary>通过使用样条内插，可以在前一个关键帧的 <see cref="T:System.Windows.Thickness" /> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>用指定的结束值初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>用指定的结束值和关键时间初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。关键时间确定何时达到目标值，该时间也是关键帧结束的时间。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
      <summary>用指定的结束值、关键时间和 <see cref="T:System.Windows.Media.Animation.KeySpline" /> 初始化 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 类的新实例。</summary>
      <param name="value">关键帧的结束值（也称为“目标值”）。</param>
      <param name="keyTime">关键帧的关键时间。关键时间确定何时达到目标值，该时间也是关键帧结束的时间。</param>
      <param name="keySpline">关键帧的 <see cref="T:System.Windows.Media.Animation.KeySpline" />。<see cref="T:System.Windows.Media.Animation.KeySpline" /> 表示一条贝塞尔曲线，该曲线定义了关键帧的动画进度。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame" /> 的一个新实例。</summary>
      <returns>新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>使用样条内插可以在前一个关键帧值和当前关键帧的值之间进行过渡。</summary>
      <returns>指定基值和进度时此关键帧的输出值。</returns>
      <param name="baseValue">动画处理的起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间（均含）的值，该值指定此关键帧已经过去的时间的百分比。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline">
      <summary>获取或设置定义此关键帧的动画进度的两个控制点。</summary>
      <returns>两个控制点，用来指定定义关键帧进度的三次方贝塞尔曲线。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySplineProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.StopStoryboard">
      <summary>一个停止 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的触发器操作。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.StopStoryboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.StopStoryboard" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>为容器的子动画提供对象和属性目标信息的容器时间线。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="isControllable">如果此演示图板应该可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />，将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新动画应该用来与任何当前动画进行交互的行为。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />，将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。 </summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新动画应该用来与任何当前动画进行交互的行为。</param>
      <param name="isControllable">声明在动画启动后是否可以控制（可以暂停）动画。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="isControllable">如果此演示图板应该可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</summary>
      <param name="containingObject">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</summary>
      <param name="containingObject">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
      <param name="isControllable">如果此演示图板应该可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</summary>
      <param name="containingObject">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
      <param name="handoffBehavior">新动画应该用来与任何当前动画进行交互的行为。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们在指定模板内的目标并启动它们。</summary>
      <param name="containingObject">指定的 <paramref name="frameworkTemplate" /> 已应用到的对象。没有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="frameworkTemplate">要进行动画处理的模板。</param>
      <param name="handoffBehavior">新动画应该用来与任何当前动画进行交互的行为。</param>
      <param name="isControllable">如果此演示图板应该可以以交互方式控制，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />，将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新动画应该用来与任何当前动画进行交互的行为。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
      <summary>将与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的动画应用到它们的目标并启动它们。</summary>
      <param name="containingObject">与此演示图板的动画的目标包含在同一名称领域中的对象。没有指定的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的动画将应用到 <paramref name="containingObject" />。</param>
      <param name="handoffBehavior">新动画应该用来与任何当前动画进行交互的行为。</param>
      <param name="isControllable">声明在动画启动后是否可以控制（可以暂停）动画。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Clone">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的一个可修改复本，以制作该对象值的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 类的新实例。  </summary>
      <returns>一个新的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />。 </summary>
      <returns>当前全局速度，或者为 0（如果时钟停止）。 </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />。 </summary>
      <returns>当前全局速度，或者为 null（如果时钟停止）。 </returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />。</summary>
      <returns>当前全局速度，或者为 null（如果时钟停止）。 </returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />。</summary>
      <returns>此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />。</summary>
      <returns>此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 null。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />。</summary>
      <returns>此时钟在其当前活动期中的当前迭代，如果此时钟已停止，则为 null。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</summary>
      <returns>如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 null；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</summary>
      <returns>如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 null；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</summary>
      <returns>如果此时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 null；如果此时钟处于活动状态并且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 为 <see cref="P:System.Windows.Duration.Forever" />，则为 0.0；在其他情况下为一个介于 0.0 和 1.0 之间的值，此值指示此时钟在其当前迭代中的当前进度。值为 0.0 时表示没有进度，值为 1.0 时表示此时钟处于其当前迭代的末尾。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />。</summary>
      <returns>为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />。</summary>
      <returns>为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />。</summary>
      <returns>为此演示图板创建的时钟的当前状态：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />。</summary>
      <returns>如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 null；否则为此演示图板的时钟的当前时间。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />。</summary>
      <returns>如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 null；否则为此演示图板的时钟的当前时间。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
      <summary>检索为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />。</summary>
      <returns>如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，则为 null；否则为此演示图板的时钟的当前时间。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused">
      <summary>检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 是否已暂停。</summary>
      <returns>如果为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 已暂停，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
      <summary>检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 是否已暂停。 </summary>
      <returns>如果为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 已暂停，则为 true；否则为 false。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
      <summary>检索一个值，该值指示为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 是否已暂停。</summary>
      <returns>如果为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 已暂停，则为 true；否则为 false。</returns>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)">
      <summary>检索指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 值。</summary>
      <returns>作为 <paramref name="element" /> 的目标的依赖项属性。</returns>
      <param name="element">要从其中检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的时间线。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
      <summary>检索指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 值。 </summary>
      <returns>作为 <paramref name="element" /> 的目标的依赖项对象的名称。</returns>
      <param name="element">要从其中检索 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的时间线。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
      <summary>检索所指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 值。 </summary>
      <returns>作为 <paramref name="element" /> 的目标的属性。</returns>
      <param name="element">要从中获取 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>暂停为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
      <summary>暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkContentElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
      <summary>暂停与此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 关联的指定 <see cref="T:System.Windows.FrameworkElement" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove">
      <summary>移除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。对于属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画，不管它们的 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，它们都不再影响它们曾进行动画处理的属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
      <summary>移除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。对于属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画，不管它们的 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，它们都不再影响它们曾进行动画处理的属性。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
      <summary>移除为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。对于属于此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的动画，不管它们的 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 设置如何，它们都不再影响它们曾进行动画处理的属性。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>继续为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
      <summary>继续为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
      <summary>继续为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定的位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="offset">一个正值或负值，用来描述时间线应向前或向后移动的量。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定的位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="offset">一个正值或负值，表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">一个位置，以该位置为起点应用 <paramref name="offset" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定的位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">一个位置，以该位置为起点应用 <paramref name="offset" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到指定的位置。<see cref="T:System.Windows.Media.Animation.Storyboard" /> 在时钟下一次走动时执行请求的定位操作。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">一个位置，以该位置为起点应用 <paramref name="offset" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到新位置（以同步方式）。</summary>
      <param name="offset">一个正值或负值，用来描述时间线应向前或向后移动的量。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到新位置（以同步方式）。</summary>
      <param name="offset">一个正值或负值，表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">一个位置，以该位置为起点应用 <paramref name="offset" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到新位置（以同步方式）。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">一个位置，以该位置为起点应用 <paramref name="offset" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>立即将此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 定位到新位置（以同步方式）。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="offset">一个正值或负值，表示时间线应从指定的 <paramref name="origin" /> 向前或向后移动的量。</param>
      <param name="origin">一个位置，以该位置为起点应用 <paramref name="offset" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)">
      <summary>设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互速度比。</summary>
      <param name="speedRatio">一个大于零的有限值，表示演示图板新的交互速度比。用此值乘以演示图板的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值来确定演示图板的有效速度。此值不会覆盖演示图板的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。例如，如果对 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 为 0.5 的演示图板调用此方法并将交互速度比指定为 3，则该演示图板的有效速度将为 1.5。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
      <summary>设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互速度比。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="speedRatio">一个大于零的有限值，表示演示图板新的交互速度比。用此值乘以演示图板的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值来确定演示图板的有效速度。此值不会覆盖演示图板的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。例如，如果对 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 为 0.5 的演示图板调用此方法并将交互速度比指定为 3，则该演示图板的有效速度将为 1.5。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
      <summary>设置为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的交互速度比。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
      <param name="speedRatio">一个大于零的有限值，表示演示图板新的交互速度比。用此值乘以演示图板的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值来确定演示图板的有效速度。此值不会覆盖演示图板的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 属性。例如，如果对 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 为 0.5 的演示图板调用此方法并将交互速度比指定为 3，则该演示图板的有效速度将为 1.5。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 以此依赖项对象为目标。 </summary>
      <param name="element">应以指定的依赖项对象为目标的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="value">要作为目标的依赖项对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
      <summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 以具有指定名称的依赖项对象为目标。 </summary>
      <param name="element">应以指定的依赖项对象为目标的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
      <param name="name">要作为目标的依赖项对象的名称。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
      <summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 以指定的依赖项属性为目标。</summary>
      <param name="element">要将指定的依赖项属性与之关联的 <see cref="T:System.Windows.Media.Animation.Timeline" />。 </param>
      <param name="path">说明要进行动画处理的依赖项属性的路径。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>将此演示图板的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的当前时间后调至其活动期结束时间。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
      <summary>将此演示图板的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的当前时间后调至其活动期结束时间。</summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
      <summary>将此演示图板的 <see cref="T:System.Windows.Media.Animation.Clock" /> 的当前时间后调至其活动期结束时间。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
      <summary>停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
      <summary>停止为此 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 创建的 <see cref="T:System.Windows.Media.Animation.Clock" />。 </summary>
      <param name="containingObject">在调用 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法时指定的对象。此对象包含为此演示图板及其子级创建的 <see cref="T:System.Windows.Media.Animation.Clock" /> 对象。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Target">
      <summary>获取或设置应进行动画处理的对象。 </summary>
      <returns>要进行动画处理的对象。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>获取或设置要进行动画处理的对象的名称。该对象必须为 <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" /> 或 <see cref="T:System.Windows.Freezable" />。</summary>
      <returns>要进行动画处理的 <see cref="T:System.Windows.FrameworkElement" />、<see cref="T:System.Windows.FrameworkContentElement" /> 或 <see cref="T:System.Windows.Freezable" /> 的名称。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加属性。  </summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>获取或设置应进行动画处理的属性。 </summary>
      <returns>要进行动画处理的属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimation">
      <summary> 在指定的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 内使用线性内插对两个目标值之间的 <see cref="T:System.Windows.Thickness" /> 属性值进行动画处理。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor">
      <summary> 初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 类的新实例，它在指定的持续时间内将动画处理继续到指定的值。动画的起始值是正在进行动画处理的属性的基值或另一个动画的输出值。</summary>
      <param name="toValue">动画的目标值。 </param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 类的一个新实例，它在指定的持续时间内将动画处理继续到指定的值，并具有指定的填充行为。动画的起始值是正在进行动画处理的属性的基值或另一个动画的输出值。</summary>
      <param name="toValue">动画的目标值。 </param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
      <param name="fillBehavior">指定动画在不活动时的行为方式。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)">
      <summary> 初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 类的新实例，它在指定的持续时间内将动画从指定的起始值继续到指定的目标值。 </summary>
      <param name="fromValue">动画的起始值。</param>
      <param name="toValue">动画的目标值。 </param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> 初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 类的新实例，它在指定的持续时间内将动画处理从指定的起始值继续到指定的目标值，并具有指定的填充行为。 </summary>
      <param name="fromValue">动画的起始值。</param>
      <param name="toValue">动画的目标值。 </param>
      <param name="duration">动画从头到尾播放一次所花的时间长度。有关更多信息，请参见 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 属性。</param>
      <param name="fillBehavior">指定动画在不活动时的行为方式。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.By">
      <summary> 获取或设置动画更改其起始值时所依据的总量。  </summary>
      <returns>动画更改其起始值时所依据的总量。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ByProperty">
      <summary> 标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.By" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.Clone">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 的可修改复本，从而制作该对象的值的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 的一个新实例。          </summary>
      <returns>新实例。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction">
      <summary>获取或设置应用于此动画的缓动函数。</summary>
      <returns>应用于此动画的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.EasingFunction" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.From">
      <summary>  获取或设置动画的起始值。  </summary>
      <returns>动画的起始值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.FromProperty">
      <summary> 标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.From" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>计算一个值，该值表示正在进行动画处理的属性的当前值，并由 <see cref="T:System.Windows.Media.Animation.ThicknessAnimation" /> 确定。 </summary>
      <returns>计算得出的属性值，该值由当前动画确定。</returns>
      <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
      <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
      <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，用来生成动画所使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsAdditive">
      <summary>获取或设置一个值，该值指示是否应将目标属性的当前值与此动画的起始值相加。  </summary>
      <returns>如果应将目标属性的当前值与此动画的起始值相加，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsCumulative">
      <summary> 获取或设置一个值，该值指定动画重复时是否累计该动画的值。  </summary>
      <returns>如果动画在其 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 属性使其简单重复时累计它的值，则为 true。否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimation.To">
      <summary> 获取或设置动画的结束值。  </summary>
      <returns>动画的结束值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessAnimation.ToProperty">
      <summary> 标识 <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ThicknessAnimation.To" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationBase">
      <summary>一个抽象类，该类在实现后可以对 <see cref="T:System.Windows.Thickness" /> 值进行动画处理。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.Clone">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase" /> 的可修改复本，并制作该对象的值的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>获取动画的当前值。</summary>
      <returns>此动画的当前值。</returns>
      <param name="defaultOriginValue">如果动画没有自己的起始值，则为提供给动画的原始值。 </param>
      <param name="defaultDestinationValue">如果动画没有自己的目标值，则为提供给动画的目标值。</param>
      <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，它可以生成供动画用来生成它的输出值的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>获取动画的当前值。</summary>
      <returns>此动画的当前值。</returns>
      <param name="defaultOriginValue">如果动画没有自己的起始值，则为提供给动画的原始值。 </param>
      <param name="defaultDestinationValue">如果动画没有自己的目标值，则为提供给动画的目标值。</param>
      <param name="animationClock">一个 <see cref="T:System.Windows.Media.Animation.AnimationClock" />，它可以生成供动画用来生成它的输出值的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary>计算一个值，该值表示正在进行动画处理的属性的当前值，并由宿主动画确定。 </summary>
      <returns>此动画的当前值。</returns>
      <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。 </param>
      <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
      <param name="animationClock">用于生成宿主动画使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 的 <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType">
      <summary>获取此动画生成的值的类型。</summary>
      <returns>此动画生成的值的类型。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames">
      <summary> 对一组 <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> 中的 <see cref="T:System.Windows.Thickness" /> 属性的值进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>将子 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 添加到此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。 </summary>
      <param name="child">要添加作为 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 子级的对象。 </param>
      <exception cref="T:System.ArgumentException">参数 <paramref name="child" /> 不是 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddText(System.String)">
      <summary>添加文本字符串作为 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的子级。</summary>
      <param name="childText">添加到 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的文本。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 不接受文本作为子级，因此除非派生类重写了允许添加文本的行为，否则该方法将引发异常。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.Clone">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的可修改复本，并制作该对象的值的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象的可修改复本，从而制作该对象的当前值的深层副本。不复制资源引用、数据绑定和动画，但复制其当前值。</summary>
      <returns>当前对象的可修改复本。即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>使用当前的属性值使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的可修改深层副本。不复制资源引用、数据绑定和动画，但复制其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的一个新实例。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的新实例。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>使此 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象的实例成为不可修改的，或确定是否可使其成为不可修改的。</summary>
      <returns>如果 <paramref name="isChecking" /> 为 true，则该方法将在可使该实例为只读的情况下返回 true，而在其他情况下返回 false。如果 <paramref name="isChecking" /> 为 false，则该方法将在该实例目前为只读的情况下返回 true，而在其他情况下返回 false，并且其副作用是已开始更改该对象的冻结状态。</returns>
      <param name="isChecking">如果是 true，则检查是否可冻结该实例；如果是 false，则冻结该实例。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象的复本。 </summary>
      <param name="source">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的冻结复本。不复制资源引用、数据绑定和动画，但复制其当前值。</summary>
      <param name="source">要复制和冻结的 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
      <summary> 计算一个值，该值表示正在进行动画处理的属性的当前值，该值由 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的实例确定。</summary>
      <returns>计算得出的属性值，该值由当前实例确定。</returns>
      <param name="defaultOriginValue">建议使用的原始值。如果动画没有自己显式设置的起始值，则使用该值。</param>
      <param name="defaultDestinationValue">建议使用的目标值。如果动画没有自己显式设置的结束值，则使用该值。</param>
      <param name="animationClock">用于生成宿主动画使用的 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 或 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 的 <see cref="T:System.Windows.Media.Animation.AnimationClock" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>将 <see cref="T:System.Windows.Duration" /> 属性设置为 <see cref="P:System.Windows.Duration.Automatic" /> 时，可提供自定义的自然 <see cref="T:System.Windows.Duration" />。 </summary>
      <returns>如果此动画的最后一个关键帧是 <see cref="T:System.Windows.Media.Animation.KeyTime" />，则该值将用作 <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />；否则将为 1 秒。</returns>
      <param name="clock">具有所需自然持续时间的 <see cref="T:System.Windows.Media.Animation.Clock" />。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsAdditive">
      <summary>获取一个值，该值指定是否将动画的输出值添加到正进行动画处理的属性的基值。  </summary>
      <returns>如果动画将其输出值添加到正进行动画处理的属性的基值，而不是将其替换，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsCumulative">
      <summary>获取或设置一个值，该值指定动画重复时是否累计该动画的值。</summary>
      <returns>如果动画在其 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 属性使其简单重复时累计它的值，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames">
      <summary> 获取或设置用于定义动画的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象的集合。 </summary>
      <returns>用于定义动画的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象的集合。默认值为 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.OnChanged">
      <summary>修改当前 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 对象时调用。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>如果 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的此实例的 <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames" /> 属性值应是经过序列化的值，则将返回 true。</summary>
      <returns>如果应对该属性值进行序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="child">要添加的子对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>将节点的文本内容添加到对象。 </summary>
      <param name="childText">要添加到对象的文本。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>获取或设置与此动画序列相关联的有序集合 P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames。</summary>
      <returns>一个由 <see cref="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames" /> 组成的 <see cref="T:System.Collections.IList" />。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrame">
      <summary>一个抽象类，该类在实现后可以用它自己的目标值和 <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames" /> 的内插方法来定义一个动画段。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness)">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 类的具有所指定目标 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 的新实例。  </summary>
      <param name="value">新的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 实例的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 类的具有所指定目标 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 和 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 的新实例。  </summary>
      <param name="value">新的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 实例的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" />。</param>
      <param name="keyTime">新的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 实例的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValue(System.Windows.Thickness,System.Double)">
      <summary>返回特定关键帧在提供的进度增量处的内插值。 </summary>
      <returns>指定基值和进度时此关键帧的输出值。</returns>
      <param name="baseValue">动画处理的起始值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间（均含）的值，该值指定此关键帧已经过去的时间的百分比。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">当 <paramref name="keyFrameProgress" /> 不在 0.0 和 1.0 之间（包括两端）时发生。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
      <summary>计算关键帧在提供的进度增量处的值。 </summary>
      <returns>指定基值和进度时此关键帧的输出值。</returns>
      <param name="baseValue">动画处理的起始值；通常是前一个关键帧的值。</param>
      <param name="keyFrameProgress">一个介于 0.0 和 1.0 之间（均含）的值，该值指定此关键帧已经过去的时间的百分比。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime">
      <summary> 获取或设置应到达关键帧的目标 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 的时间。  </summary>
      <returns>关键帧的当前值所在的时间应等于它的 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 属性。默认值为 <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTimeProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>获取或设置与 <see cref="T:System.Windows.Media.Animation.KeyTime" /> 实例关联的值。 </summary>
      <returns>此属性的当前值。 </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value">
      <summary> 获取或设置关键帧的目标值。  </summary>
      <returns>关键帧的目标值，这是此关键帧在其指定 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime" /> 的值。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.ValueProperty">
      <summary>标识 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection">
      <summary>表示 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象的集合。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Add(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>将 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 添加到集合的末尾。 </summary>
      <returns>添加 <paramref name="keyFrame" /> 的位置处的索引。</returns>
      <param name="keyFrame">要添加到集合末尾的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clear">
      <summary>从集合中移除所有 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clone">
      <summary>创建此 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 的可修改复本，并制作该对象的值的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <returns>当前对象的可修改复本。即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 的深层副本。在复制依赖项属性时，此方法会复制资源引用和数据绑定（但它们可能不再解析），但不复制动画或其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>使用当前的属性值使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 的可修改深层副本。不复制资源引用、数据绑定和动画，但复制其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Contains(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>获取一个指示集合是否包含指定的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 的值。 </summary>
      <returns>如果集合包含 <paramref name="keyFrame" />，则为 true；否则为 false。</returns>
      <param name="keyFrame">要在集合中定位的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ThicknessKeyFrame[],System.Int32)">
      <summary>将集合中的所有 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象复制到指定的数组中。 </summary>
      <param name="array">标识内容要复制到的数组。</param>
      <param name="index">集合内容要复制到的数组中的索引位置。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count">
      <summary>获取 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 中包含的关键帧的数量。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 中包含的关键帧的数量。 </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 的一个新的冻结实例。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 的一个冻结实例。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty">
      <summary> 获取空的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。  </summary>
      <returns>一个空 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>使此 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 实例成为只读的，或者确定是否可以使其成为只读的。</summary>
      <returns>如果 <paramref name="isChecking" /> 为 true，则该方法将在可使该实例为只读的情况下返回 true，而在其他情况下返回 false。如果 <paramref name="isChecking" /> 为 false，则该方法将在该实例目前为只读的情况下返回 true，而在其他情况下返回 false，并且其副作用是已开始更改该对象的冻结状态。</returns>
      <param name="isChecking">如果是 true，则检查是否可冻结该实例；如果是 false，则冻结该实例。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 对象的复本。 </summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>使用当前的属性值使该实例成为指定的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" /> 的可修改深层副本。不复制资源引用、数据绑定和动画，但复制其当前值。</summary>
      <param name="sourceFreezable">要克隆的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetEnumerator">
      <summary> 返回可循环访问集合的枚举数。 </summary>
      <returns>一个可以循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary> 在整个集合中搜索指定的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />，并返回第一个匹配项的从零开始的索引。</summary>
      <returns>如果在整个集合中找到 <paramref name="keyFrame" />，则为第一个匹配项的从零开始的索引；否则为 -1。</returns>
      <param name="keyFrame">要在集合中定位的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>在集合中的特定位置插入 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。 </summary>
      <param name="index">
        <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 所插入到的索引位置。</param>
      <param name="keyFrame">要在集合中插入的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsFixedSize">
      <summary>获取一个值，该值指示集合大小是否可以更改。</summary>
      <returns>如果集合被冻结，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsReadOnly">
      <summary> 获取一个值，该值指示该集合是否为只读。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsSynchronized">
      <summary>获取一个值，该值指示对集合的访问是否同步（线程安全）。 </summary>
      <returns>如果对该集合的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引位置的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。  </summary>
      <returns>指定索引处的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</returns>
      <param name="index">要获取或设置的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 的从零开始的索引。</param>
      <exception cref="T:System.InvalidOperationException">由于集合被冻结（其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 true），因此尝试修改它的行为将无效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 等于或大于 <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count" />。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Remove(System.Windows.Media.Animation.ThicknessKeyFrame)">
      <summary>从集合中移除 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 对象。 </summary>
      <param name="keyFrame">标识要从集合中移除的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除指定索引位置处的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" />。 </summary>
      <param name="index">要移除的 <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame" /> 的索引位置。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.SyncRoot">
      <summary> 获取可用于同步对集合的访问的对象。 </summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>从特定的 <see cref="T:System.Array" /> 索引处开始，将 <see cref="T:System.Collections.ICollection" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array">作为从 <see cref="T:System.Collections.ICollection" /> 复制的元素的目标的一维 <see cref="T:System.Array" />。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>将某项添加到 <see cref="T:System.Collections.IList" /> 中。</summary>
      <returns>新元素所插入到的位置，或为 -1 以指示未将该项插入到集合中。</returns>
      <param name="keyFrame">要添加到 <see cref="T:System.Collections.IList" /> 的对象。    </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</summary>
      <returns>如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="keyFrame">要在 <see cref="T:System.Collections.IList" /> 中查找的对象。    </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="keyFrame">要在 <see cref="T:System.Collections.IList" /> 中查找的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>将一个项插入指定索引处的 <see cref="T:System.Collections.IList" />。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。 </param>
      <param name="keyFrame">要插入 <see cref="T:System.Collections.IList" /> 的对象。 </param>
    </member>
    <member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。    </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="keyFrame">要从 <see cref="T:System.Collections.IList" /> 中移除的对象。</param>
    </member>
    <member name="T:System.Windows.Navigation.CustomContentState">
      <summary>使用 <see cref="T:System.Windows.Navigation.CustomContentState" />，可以在源内容片段的不同状态之间导航，而无需为每个后续导航重新加载源内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.CustomContentState" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Navigation.CustomContentState.JournalEntryName">
      <summary>存储在导航历史记录中的内容的名称。<see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> 的值显示自 <see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" /> 和 Windows Internet Explorer 7 导航 UI。</summary>
      <returns>存储在导航历史记录中的内容的 <see cref="T:System.String" /> 名称。</returns>
    </member>
    <member name="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)">
      <summary>在发生导航时调用，以对内容片段重新应用状态。</summary>
      <param name="navigationService">一种 <see cref="T:System.Windows.Navigation.NavigationService" />，为对要将此 <see cref="T:System.Windows.Navigation.CustomContentState" /> 应用到其中的内容负责的导航器所拥有。</param>
      <param name="mode">一种 <see cref="T:System.Windows.Navigation.NavigationMode" />，指定如何导航到要对其应用 <see cref="T:System.Windows.Navigation.CustomContentState" /> 的内容。</param>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
      <summary>为 FragmentNavigation 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
      <summary>获取统一资源标识符 (URI) 片段。</summary>
      <returns>URI 片段。如果将该属性设置为空字符串，将默认导航到内容的顶部。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Handled">
      <summary>获取或设置指示是否已对片段导航进行了处理的值。 </summary>
      <returns>如果已对导航进行了处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Navigator">
      <summary>引发 <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" /> 事件的导航器。</summary>
      <returns>一个 <see cref="T:System.Object" />，表示正在导航到内容片段的导航器（Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" /> 或 <see cref="T:System.Windows.Controls.Frame" />）。</returns>
    </member>
    <member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
      <summary>表示将处理 FragmentNavigation 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.IProvideCustomContentState">
      <summary>由某类实现，该类需要在离开内容之前将自定义状态添加到内容的导航历史记录条目中。</summary>
    </member>
    <member name="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState">
      <summary>返回一个要与导航历史记录中的内容关联的自定义状态类的实例。</summary>
      <returns>一个要与导航历史记录中的内容关联的自定义 <see cref="T:System.Windows.Navigation.CustomContentState" /> 类的实例。</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntry">
      <summary>表示后退或前进导航历史记录中的一个条目。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Windows.Navigation.JournalEntry" /> 类的新实例。 </summary>
      <param name="info">序列化信息。</param>
      <param name="context">流上下文。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.CustomContentState">
      <summary>获取或设置与日记条目关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
      <returns>与日记条目关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。如果没有关联对象，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)">
      <summary>返回指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。 </summary>
      <returns>指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性值。 </returns>
      <param name="dependencyObject">从中获取附加属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
      <summary>获取指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。 </summary>
      <returns>指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。 </returns>
      <param name="dependencyObject">从中获取附加属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>将此对象序列化时调用。</summary>
      <param name="info">序列化目标对象所必需的数据。</param>
      <param name="context">流上下文。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.KeepAlive">
      <summary>获取或设置一个值，该值指示在导航到日记条目内容时，在导航历史记录中是保留还是重新创建内容。</summary>
      <returns>如果在导航历史记录中保留内容，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Name">
      <summary>获取或设置日记条目的名称。</summary>
      <returns>日记条目的名称。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" /> 附加属性。</summary>
      <param name="dependencyObject">对其设置附加属性值的元素。</param>
      <param name="keepAlive">若要将日记条目保留在内存中，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
      <summary>设置指定元素的 <see cref="P:System.Windows.Navigation.JournalEntry.Name" /> 附加属性。</summary>
      <param name="dependencyObject">对其设置附加属性值的元素。</param>
      <param name="name">要分配给附加属性的名称。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntry.Source">
      <summary>获取或设置导航到的内容的 URI。</summary>
      <returns>导航到的内容的 URI，如果条目没有关联任何 URI，则为 null。</returns>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryListConverter">
      <summary>此类型或成员支持 Microsoft .NET 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.#ctor">
      <summary>此类型或成员支持 Microsoft .NET 基础结构，但不应在代码中直接使用。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。 </summary>
      <returns>转换后的值。</returns>
      <param name="value">绑定源生成的值。</param>
      <param name="targetType">绑定目标属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryListConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>此类型或成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
      <returns>转换后的值。</returns>
      <param name="value">绑定目标生成的值。</param>
      <param name="targetType">绑定源属性的类型。</param>
      <param name="parameter">要使用的转换器参数。</param>
      <param name="culture">要用在转换器中的区域性。</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryPosition">
      <summary>指定与当前内容相关的内容片段在导航历史记录中的位置。<see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> 使用 <see cref="T:System.Windows.Navigation.JournalEntryPosition" />。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Back">
      <summary>内容位于与当前内容相关的后退导航历史记录中。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Current">
      <summary>内容为当前内容。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryPosition.Forward">
      <summary>内容位于与当前内容相关的前进导航历史记录中。</summary>
    </member>
    <member name="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter">
      <summary>
        <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> 将后退导航历史记录和前进导航历史记录（由 <see cref="T:System.Windows.Controls.Frame" /> 或 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 公开）合并为单一的 Windows Internet Explorer 7 样式的导航菜单。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>合并两个导航历史记录堆栈。</summary>
      <returns>如果任何一个传递的导航堆栈都不是 null，则为可用于枚举导航历史记录堆栈合并列表的 <see cref="T:System.Collections.IEnumerable" />。否则为 null。</returns>
      <param name="values">由两个导航堆栈组成的数组。 </param>
      <param name="targetType">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>未实现。</summary>
      <returns>始终返回 <see cref="F:System.Windows.Data.Binding.DoNothing" />。</returns>
      <param name="value">未使用此参数。</param>
      <param name="targetTypes">未使用此参数。</param>
      <param name="parameter">未使用此参数。</param>
      <param name="culture">未使用此参数。</param>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.GetJournalEntryPosition(System.Windows.DependencyObject)">
      <summary>获取指定元素的 <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性。</summary>
      <returns>指定元素日记条目的 <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性值。 </returns>
      <param name="element">从中获取附加属性值的元素。</param>
    </member>
    <member name="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition">
      <summary>获取或设置一个值，该值指定项是后退导航历史记录、前进导航历史记录还是导航器的当前内容。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> 值，用于指定项是后退导航历史记录、前进导航历史记录还是导航器的当前内容。</returns>
    </member>
    <member name="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition" /> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.SetJournalEntryPosition(System.Windows.DependencyObject,System.Windows.Navigation.JournalEntryPosition)">
      <summary>设置指定元素的 <see cref="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty" /> 附加属性。</summary>
      <param name="element">对其设置附加属性值的元素。</param>
      <param name="position">
        <see cref="T:System.Windows.Navigation.JournalEntryPosition" /> 对象的位置。</param>
    </member>
    <member name="T:System.Windows.Navigation.JournalOwnership">
      <summary>指定 <see cref="T:System.Windows.Controls.Frame" /> 是否使用自己的日记。<see cref="T:System.Windows.Navigation.JournalOwnership" /> 由 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 属性使用。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
      <summary>此 <see cref="T:System.Windows.Controls.Frame" /> 是否创建和使用自己的日记取决于它的父级。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> 维护自己的日记。</summary>
    </member>
    <member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
      <summary>
        <see cref="T:System.Windows.Controls.Frame" /> 使用内容树中下一个可用导航宿主的日记（如果有的话）。否则，将不保留 <see cref="T:System.Windows.Controls.Frame" /> 的导航历史记录。</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>表示将处理 LoadCompleted 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>表示将处理 Navigated 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>为 Navigating 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Content">
      <summary>获取对要导航到的内容对象的引用。</summary>
      <returns>对要导航到的内容对象的 <see cref="T:System.Object" /> 引用；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave">
      <summary>获取或设置 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，该对象与正在从中导航的页面的后退导航历史记录项关联。</summary>
      <returns>与正在从中导航的页面的后退导航历史记录项关联的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData">
      <summary>获取导航开始时传递的可选数据 <see cref="T:System.Object" />。</summary>
      <returns>导航开始时传递的可选数据 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
      <summary>指示由 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> 指定的导航器（<see cref="T:System.Windows.Navigation.NavigationWindow" />、<see cref="T:System.Windows.Controls.Frame" />）是否正在进行此导航，或者父导航器是否正在进行此操作。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，如果由 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator" /> 指定的导航器进行此导航，则为 true。否则，将返回 false，例如，在进行嵌套 <see cref="T:System.Windows.Controls.Frame" /> 导航过程中将返回此值。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>获取一个 <see cref="T:System.Windows.Navigation.NavigationMode" /> 值，该值指示所发生导航的类型。</summary>
      <returns>一个 <see cref="T:System.Windows.Navigation.NavigationMode" /> 值，该值指示所发生导航的类型。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator">
      <summary>引发此事件的导航器。</summary>
      <returns>一个 <see cref="T:System.Object" />，它是引发此事件的导航器。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.TargetContentState">
      <summary>获取要应用于所导航到的内容的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</summary>
      <returns>要应用于所导航到的内容的 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>获取正在导航到的内容的统一资源标识符 (URI)。</summary>
      <returns>正在导航到的内容的 <see cref="T:System.Uri" />。如果导航到对象，则 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri" /> 为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest">
      <summary>获取用于请求指定内容的 <see cref="T:System.Net.WebRequest" /> 对象。</summary>
      <returns>获取用于请求指定内容的 <see cref="T:System.Net.WebRequest" /> 对象。 </returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>表示将处理 Navigating 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>为无法取消的导航事件提供数据，这些事件包括 <see cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />、<see cref="E:System.Windows.Navigation.NavigationWindow.Navigated" /> 和 <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />。  </summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>获取目标页内容的根节点。 </summary>
      <returns>目标页内容的根元素。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.ExtraData">
      <summary>获取可选的用户定义的数据对象。 </summary>
      <returns>数据对象。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
      <summary>获取一个值，该值指示当前导航器是否启动了导航。</summary>
      <returns>如果在当前框架内启动了导航，则为 true；如果父导航器也在进行导航，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Navigator">
      <summary>获取引发该事件的导航器。 </summary>
      <returns>引发该事件的导航器。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>获取目标页的统一资源标识符 (URI)。</summary>
      <returns>目标页的 URI。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.WebResponse">
      <summary>获取 Web 响应可允许访问 HTTP 标头和其他属性。 </summary>
      <returns>Web 响应。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
      <summary>提供用于 NavigationFailed 事件的数据。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
      <summary>获取因导航失败而引发的 <see cref="T:System.Exception" />。</summary>
      <returns>因导航失败而引发的 <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData">
      <summary>获取导航开始时传递的可选数据 <see cref="T:System.Object" />。</summary>
      <returns>导航开始时传递的可选数据 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
      <summary>获取或设置是否已处理了失败导航异常。</summary>
      <returns>如果已处理异常，则为 true；否则为 false（默认值）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator">
      <summary>引发此事件的导航器。</summary>
      <returns>一个 <see cref="T:System.Object" />，它是引发此事件的导航器。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
      <summary>获取未能导航到其中的内容的统一资源标识符 (URI)。</summary>
      <returns>未能导航到其中的内容的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest">
      <summary>获取用于请求指定内容的 Web 请求。</summary>
      <returns>获取用于请求指定内容的 <see cref="T:System.Net.WebRequest" /> 对象。如果导航到对象，则 <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest" /> 为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse">
      <summary>获取尝试下载请求的特定内容之后返回的 Web 响应。</summary>
      <returns>尝试下载请求的特定内容之后返回的 <see cref="T:System.Net.WebResponse" />。如果导航失败，则 <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse" /> 为 null。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
      <summary>表示将处理 NavigationFailed 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>指定所发生的导航类型。<see cref="T:System.Windows.Navigation.NavigationMode" /> 由 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode" /> 属性使用。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>向后导航到后退导航历史记录中的最新内容。这在调用 GoBack 方法时发生。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>导航到前进导航历史记录中的最新内容。这在调用 GoForward 方法时发生。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>导航到新内容。这在调用 Navigate 方法时发生，或者当设置了 Source 属性时发生。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>重新加载当前内容。这在调用 Refresh 方法时发生。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Reset">
      <summary />
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventArgs">
      <summary>为 <see cref="E:System.Windows.Application.NavigationProgress" /> 和 <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" /> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead">
      <summary>获取已读取的字节数。 </summary>
      <returns>已读取的字节数。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes">
      <summary>获取最大字节数。 </summary>
      <returns>最大字节数。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Navigator">
      <summary>获取引发该事件的导航器。 </summary>
      <returns>引发该事件的导航器。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Uri">
      <summary>获取目标页的统一资源标识符 (URI)。 </summary>
      <returns>目标页的 URI。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationProgressEventHandler">
      <summary>表示将处理 NavigationProgress 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationService">
      <summary>包含支持导航的各种方法、属性和事件。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>向包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象的后退导航历史记录中添加一个条目。</summary>
      <param name="state">一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，该对象表示与特定内容片段关联的应用程序定义的状态。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> 为 null，并且 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> 对象不是从 <see cref="T:System.Windows.Navigation.CustomContentState" /> 返回的对象。</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
      <summary>获取一个值，该值指示后退导航历史记录中是否至少有一个条目。</summary>
      <returns>如果后退导航历史记录中至少具有一个条目，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
      <summary>获取一个值，该值指示前进导航历史记录中是否至少有一个条目。</summary>
      <returns>如果前进导航历史记录中至少具有一个条目，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Content">
      <summary>获取或设置对包含当前内容的对象的引用。</summary>
      <returns>一个对象，它是对包含当前内容的对象的引用。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
      <summary>获取上次导航到的内容的统一资源标识符 (URI)。</summary>
      <returns>如果是通过使用 URI 导航到内容的，则为上一次导航到的内容的 <see cref="T:System.Uri" />；否则为 null。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
      <summary>当开始导航到某个内容片段时发生，如果所需片段位于当前内容中，它会立即发生；或者，如果所需片段位于不同内容中，它会在加载了源 XAML 内容之后发生。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
      <summary>获取对导航器的 <see cref="T:System.Windows.Navigation.NavigationService" /> 的引用，该导航器的内容中包含指定的 <see cref="T:System.Windows.DependencyObject" />。</summary>
      <returns>对导航器（该导航器的内容中包含指定的 <see cref="T:System.Windows.DependencyObject" />）的 <see cref="T:System.Windows.Navigation.NavigationService" /> 的引用在某些情况下可以为 null（请参见“备注”）。</returns>
      <param name="dependencyObject">由导航器承载的内容中的 <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoBack">
      <summary>导航到后退导航历史记录中的最新条目（如果有）。</summary>
      <exception cref="T:System.InvalidOperationException">如果后退导航历史记录中没有条目，则调用 <see cref="M:System.Windows.Navigation.NavigationService.GoBack" />。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.GoForward">
      <summary>导航到前进导航历史记录中的最新条目（如果有）。</summary>
      <exception cref="T:System.InvalidOperationException">如果前进导航历史记录中没有任何条目，则调用 <see cref="M:System.Windows.Navigation.NavigationService.GoForward" />。</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.LoadCompleted">
      <summary>当已加载、分析并开始呈现目标导航内容时发生。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)">
      <summary>异步导航到某个对象中包含的内容。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="root">一个包含目标导航内容的对象。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)">
      <summary>异步导航某个对象包含的内容，并传递一个对象，其中包含要在导航过程中进行处理的数据。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="root">一个包含目标导航内容的对象。</param>
      <param name="navigationState">一个包含要在导航过程中进行处理的数据的对象。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
      <summary>异步导航到由统一资源标识符 (URI) 指定的内容。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="source">一个使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)">
      <summary>异步导航到位于某个统一资源标识符 (URI) 中的源内容，并传递一个对象，其中包含要在导航过程中进行处理的数据。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="source">一个使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
      <param name="navigationState">一个包含要在导航过程中进行处理的数据的对象。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)">
      <summary>异步导航到位于某个统一资源标识符 (URI) 中的源内容，传递一个包含在导航过程中进行处理的导航状态的对象，并沙盒处理内容。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="source">一个使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
      <param name="navigationState">一个包含要在导航过程中进行处理的数据的对象。</param>
      <param name="sandboxExternalContent">将内容下载到部分信任的安全沙盒中（如果为 true，则具有默认的 Internet 区域权限集）。默认值为 false。</param>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigated">
      <summary>当已经找到目标导航内容且可通过 <see cref="P:System.Windows.Navigation.NavigationService.Content" /> 属性获得时发生，即使此时可能尚未完成加载）。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.Navigating">
      <summary>在请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
      <summary>在导航到所请求内容出错时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationProgress">
      <summary>在下载过程中定期发生，以提供导航进度信息。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
      <summary>在调用 <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> 方法时发生，或者在一个当前导航正在进行过程中又请求一个新导航时发生。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.Refresh">
      <summary>重新加载当前内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.RemoveBackEntry">
      <summary>移除后退历史记录中的最新日记条目。</summary>
      <returns>后退导航历史记录中的最新 <see cref="T:System.Windows.Navigation.JournalEntry" />（如果有）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationService.Source">
      <summary>获取或设置当前内容的统一资源标识符 (URI)，或当前正在导航到的新内容的 URI。</summary>
      <returns>一个 <see cref="T:System.Uri" />，其中包含当前内容或当前正在导航到的内容的 URI。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationService.StopLoading">
      <summary>停止为当前导航请求下载更多内容。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
      <summary>表示将处理 NavigationStopped 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationUIVisibility">
      <summary>指定 <see cref="T:System.Windows.Controls.Frame" /> 是否显示其导航镶边。<see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> 由 <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 属性使用。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Automatic">
      <summary>当 <see cref="T:System.Windows.Controls.Frame" /> 使用自己的日记时，导航镶边可见（请参见 <see cref="P:System.Windows.Controls.Frame.JournalOwnership" />）。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Hidden">
      <summary>导航镶边不可见。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationUIVisibility.Visible">
      <summary>导航镶边可见。</summary>
    </member>
    <member name="T:System.Windows.Navigation.NavigationWindow">
      <summary>表示支持内容导航的窗口。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
      <summary>向包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象的后退导航历史记录中添加一个条目。</summary>
      <param name="state">一个 <see cref="T:System.Windows.Navigation.CustomContentState" /> 对象，该对象表示与特定内容片段关联的应用程序定义的状态。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="state" /> 为 null，并且 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> 对象不是从 <see cref="T:System.Windows.Navigation.CustomContentState" /> 返回的对象。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)">
      <summary>添加子对象。</summary>
      <param name="value">要添加的子对象。</param>
      <exception cref="T:System.InvalidOperationException">调用此方法时。这将阻止使用 XAML 将内容添加到 <see cref="T:System.Windows.Navigation.NavigationWindow" />。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)">
      <summary>将文本添加到对象。</summary>
      <param name="text">要添加到对象的文本。</param>
      <exception cref="T:System.ArgumentException">如果文本参数值包含非空白字符。</exception>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.BackStack">
      <summary>获取一个 <see cref="T:System.Collections.IEnumerable" />（用于枚举 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的后退导航历史记录中的条目）。  </summary>
      <returns>如果后退导航历史记录中至少添加了一个条目，则为 <see cref="T:System.Collections.IEnumerable" />；如果没有条目，或者 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 没有自己的导航历史记录，则为 null。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.BackStackProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoBack">
      <summary>获取一个值，该值指示后退导航历史记录中是否至少有一个条目。  </summary>
      <returns>如果后退导航历史记录中至少有一个条目，则为 true；如果后退导航历史记录中没有条目，或者 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 没有自己的导航历史记录，则为 false。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CanGoForward">
      <summary>获取一个值，该值指示前进导航历史记录中是否至少有一个条目。  </summary>
      <returns>如果前进导航历史记录中至少有一个条目，则为 true；如果前进导航历史记录中没有条目，或者 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 没有自己的导航历史记录，则为 false。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.CurrentSource">
      <summary>获取上次导航到的内容的统一资源标识符 (URI)。</summary>
      <returns>如果使用 URI 进行导航，则为最后导航到的内容的 URI；否则为 null。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ForwardStack">
      <summary>获取一个 <see cref="T:System.Collections.IEnumerable" />（用于枚举 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的后退导航历史记录中的条目）。  </summary>
      <returns>如果前进导航历史记录中至少添加了一个条目，则为 <see cref="T:System.Collections.IEnumerable" />；如果没有条目，或者 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 没有自己的导航历史记录，则为 Null。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation">
      <summary>当开始导航到某个内容片段时发生，如果所需片段位于当前内容中，它会立即发生；或者，如果所需片段位于不同内容中，它会在加载了源 XAML 内容之后发生。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoBack">
      <summary>导航到后退导航历史记录中的最近的条目。</summary>
      <exception cref="T:System.InvalidOperationException">如果后退导航历史记录中没有条目，则调用 <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack" />。</exception>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.GoForward">
      <summary>导航到前进导航历史记录中的最近的条目。</summary>
      <exception cref="T:System.InvalidOperationException">如果前进导航历史记录中没有任何条目，则调用 <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward" />。</exception>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.LoadCompleted">
      <summary>当已加载、分析并开始呈现目标导航内容时发生。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)">
      <summary>异步导航到包含在某个对象中的内容。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="content">一个 <see cref="T:System.Object" />，其中包含要导航到的内容。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)">
      <summary>异步导航到包含在某个对象中的内容，并传递一个对象，该对象包含要在导航过程中进行处理的数据。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="content">一个 <see cref="T:System.Object" />，其中包含要导航到的内容。</param>
      <param name="extraData">一个 <see cref="T:System.Object" />，其中包含要在导航过程中进行处理的数据。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)">
      <summary>异步导航到由统一资源标识符 (URI) 指定的内容。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="source">一个使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)">
      <summary>异步导航到位于某个统一资源标识符 (URI) 的源内容，并传递一个对象，其中包含要在导航过程中进行处理的数据。</summary>
      <returns>如果未取消导航，则为 true；否则为 false。</returns>
      <param name="source">一个使用所需内容的 URI 初始化的 <see cref="T:System.Uri" /> 对象。</param>
      <param name="extraData">一个 <see cref="T:System.Object" />，其中包含要在导航过程中进行处理的数据。</param>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigated">
      <summary>找到导航的目标内容且可通过 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性得到这些内容时发生，即使尚未加载完毕也是如此。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.Navigating">
      <summary>在请求新导航时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationFailed">
      <summary>在导航到所请求内容出错时发生。</summary>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationProgress">
      <summary>在下载过程中定期发生，以提供导航进度信息。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.NavigationService">
      <summary>获取 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 用来为其内容提供导航服务的 <see cref="T:System.Windows.Navigation.NavigationService" />。</summary>
      <returns>
        <see cref="T:System.Windows.Navigation.NavigationWindow" /> 所使用的导航服务。</returns>
    </member>
    <member name="E:System.Windows.Navigation.NavigationWindow.NavigationStopped">
      <summary>在调用 <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading" /> 方法时发生，或在当前导航正在进行中又请求了新导航时发生。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate">
      <summary>在为可视化树创建模板生成时调用。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Window.Closed" /> 事件。</summary>
      <param name="args">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer">
      <summary>创建并返回此 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象。</summary>
      <returns>此 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 的 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.Refresh">
      <summary>重新加载当前内容。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry">
      <summary>移除后退历史记录中的最新日记条目。</summary>
      <returns>后退导航历史记录中的最新 <see cref="T:System.Windows.Navigation.JournalEntry" />（如果有）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 是否在一个部分信任的安全沙盒（具有默认 Internet 区域权限集）内隔离外部可扩展应用程序标记语言 (XAML) 内容。</summary>
      <returns>如果在一个部分信任的安全沙盒中隔离内容，则为 true；否则为 false。默认值为 false。</returns>
      <exception cref="T:System.Security.SecurityException">当应用程序在部分信任的环境中执行时，设置了 <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" />。</exception>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent">
      <summary>指示是否应使 <see cref="P:System.Windows.Controls.ContentControl.Content" /> 属性持久化。</summary>
      <returns>如果属性值已更改，不再是默认值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 是否显示其导航 UI。</summary>
      <returns>如果显示导航 UI，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.Source">
      <summary>获取或设置当前内容的统一资源标识符 (URI)，或当前正在导航到的新内容的 URI。</summary>
      <returns>当前内容或当前导航到的内容的 URI。</returns>
    </member>
    <member name="F:System.Windows.Navigation.NavigationWindow.SourceProperty">
      <summary>标识 <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> 依赖项属性。</summary>
      <returns>
        <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Navigation.NavigationWindow.StopLoading">
      <summary>停止为当前导航请求下载更多内容。</summary>
    </member>
    <member name="P:System.Windows.Navigation.NavigationWindow.System#Windows#Markup#IUriContext#BaseUri">
      <summary>获取或设置当前上下文的基统一资源标识符 (URI)。</summary>
      <returns>当前上下文的基 URI。</returns>
    </member>
    <member name="T:System.Windows.Navigation.PageFunction`1">
      <summary>表示一种特殊类型的页面，该页面允许以与调用方法类似的方式在页面中导航。 </summary>
      <typeparam name="T">
        <see cref="T:System.Windows.Navigation.PageFunction`1" /> 返回给调用方的值的类型。</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})">
      <summary>
        <see cref="T:System.Windows.Navigation.PageFunction`1" /> 调用 <see cref="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})" /> 以返回至调用方，并通过 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 对象传递一个返回值。</summary>
      <param name="e">一个包含 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 返回值 (<see cref="P:System.Windows.Navigation.ReturnEventArgs`1.Result" />) 的 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 对象。</param>
    </member>
    <member name="E:System.Windows.Navigation.PageFunction`1.Return">
      <summary>当调用的 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 返回时发生，而且只能由调用页处理。</summary>
    </member>
    <member name="T:System.Windows.Navigation.PageFunctionBase">
      <summary>一个抽象基类，它是所有页函数类的父级。</summary>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.PageFunctionBase" /> 类型的新实例。</summary>
    </member>
    <member name="P:System.Windows.Navigation.PageFunctionBase.RemoveFromJournal">
      <summary>获取或设置一个值，指示是否不应该将页函数添加到导航历史记录中。</summary>
      <returns>一个 <see cref="T:System.Boolean" />，指示是否不应该将页函数添加到导航历史记录中。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Navigation.PageFunctionBase.Start">
      <summary>重写此方法以在第一次导航到 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 时对其进行初始化。</summary>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventArgs">
      <summary>为 <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> 类的新实例。此构造函数受到保护。</summary>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor(System.Uri,System.String)">
      <summary>使用统一资源标识符 (URI) 和目标名称初始化 <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" /> 类的新实例。</summary>
      <param name="uri">目标 URI。</param>
      <param name="target">目标名称。</param>
    </member>
    <member name="M:System.Windows.Navigation.RequestNavigateEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>从指定的发送方调用指定的事件处理程序。 </summary>
      <param name="genericHandler">处理程序的名称。</param>
      <param name="genericTarget">引发事件的对象。</param>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Target">
      <summary>将承载目标导航内容的导航器。</summary>
      <returns>将承载目标导航内容的导航器（<see cref="T:System.Windows.Navigation.NavigationWindow" /> 或 <see cref="T:System.Windows.Controls.Frame" />）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Uri">
      <summary>当前目标导航内容的统一资源标识符 (URI)。</summary>
      <returns>当前目标导航内容的 URI。</returns>
    </member>
    <member name="T:System.Windows.Navigation.RequestNavigateEventHandler">
      <summary>表示将要处理 <see cref="T:System.Windows.Documents.Hyperlink" /> 类的 <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate" /> 路由事件的方法。</summary>
      <param name="sender">事件处理程序所附加到的对象。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventArgs`1">
      <summary>为 <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> 事件提供数据。 </summary>
      <typeparam name="T">返回值的类型。</typeparam>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor(`0)">
      <summary>使用返回值初始化 <see cref="T:System.Windows.Navigation.ReturnEventArgs`1" /> 类的新实例。</summary>
      <param name="result">要返回的值。</param>
    </member>
    <member name="P:System.Windows.Navigation.ReturnEventArgs`1.Result">
      <summary>获取或设置由页函数返回的值。</summary>
      <returns>页函数返回的值。</returns>
    </member>
    <member name="T:System.Windows.Navigation.ReturnEventHandler`1">
      <summary>表示将处理 <see cref="T:System.Windows.Navigation.PageFunction`1" /> 类的 <see cref="E:System.Windows.Navigation.PageFunction`1.Return" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
      <typeparam name="T">事件的类型说明符。</typeparam>
    </member>
    <member name="T:System.Windows.Resources.ContentTypes">
      <summary>支持可扩展应用程序标记语言 (XAML) 作为内容类型和资源。</summary>
    </member>
    <member name="M:System.Windows.Resources.ContentTypes.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Resources.ContentTypes" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Resources.ContentTypes.XamlContentType">
      <summary>声明可扩展应用程序标记语言 (XAML) 内容类型。</summary>
      <returns>用于将可扩展应用程序标记语言 (XAML) 标识为多用途 Internet 邮件扩展 (MIME) 类型的字符串。</returns>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>存储在 Windows Presentation Foundation (WPF) 中使用的流资源的信息，如图像。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>根据所提供的流初始化 <see cref="T:System.Windows.Resources.StreamResourceInfo" /> 类的一个新实例。</summary>
      <param name="stream">引用流。</param>
      <param name="contentType">流的多用途 Internet 邮件扩展 (MIME) 内容类型。</param>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary> 获取或设置流的内容类型。 </summary>
      <returns>多用途 Internet 邮件扩展 (MIME) 内容类型。</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary> 获取或设置实际的资源流。 </summary>
      <returns>用于资源的流。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>绘制一个椭圆。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Ellipse" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.GeometryTransform">
      <summary>获取在呈现之前应用于 <see cref="T:System.Windows.Shapes.Ellipse" /> 的 <see cref="T:System.Windows.Media.Geometry" /> 的任何 <see cref="P:System.Windows.Media.Transform.Identity" /> 变换的值。</summary>
      <returns>在呈现之前应用于 <see cref="T:System.Windows.Shapes.Ellipse" /> 的 <see cref="T:System.Windows.Media.Geometry" /> 的任何 <see cref="P:System.Windows.Media.Transform.Identity" /> 变换的值。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Ellipse.RenderedGeometry">
      <summary>获取 <see cref="T:System.Windows.Shapes.Ellipse" /> 的最终呈现的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Ellipse" /> 的最终呈现的 <see cref="T:System.Windows.Media.Geometry" />。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>在两个点之间绘制一条直线。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Line" /> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 起点的 x 坐标。  </summary>
      <returns>直线起点的 x 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.X1" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.X1" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 终点的 x 坐标。  </summary>
      <returns>直线终点的 x 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.X2" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.X2" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 起点的 y 坐标。  </summary>
      <returns>直线起点的 y 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.Y1" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.Y1" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Line" /> 终点的 y 坐标。  </summary>
      <returns>直线终点的 y 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>标识 <see cref="P:System.Windows.Shapes.Line.Y2" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.Y2" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>绘制一系列相互连接的直线和曲线。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Path" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>获取或设置指定要绘制的形状的 <see cref="T:System.Windows.Media.Geometry" />。  </summary>
      <returns>要绘制的形状的说明。 </returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Path.Data" /> 依赖项属性。  </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Path.Data" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>绘制一个多边形，它是形成闭合形状的一系列相互连接的直接。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Polygon" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.FillRule" /> 枚举，该枚举指定如何确定形状的内部填充。   </summary>
      <returns>
        <see cref="T:System.Windows.Media.FillRule" /> 枚举值之一。默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd" />。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依赖项属性。  </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>获取或设置一个集合，其中包含多边形的顶点。   </summary>
      <returns>描述多边形顶点的 <see cref="T:System.Windows.Point" /> 结构的集合。默认为空引用（Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>绘制一系列相互连接的直线。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Polyline" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.FillRule" /> 枚举，该枚举指定如何确定形状的内部填充。  </summary>
      <returns>
        <see cref="T:System.Windows.Media.FillRule" /> 枚举值之一。默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd" />。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>获取或设置一个集合，其中包含 <see cref="T:System.Windows.Shapes.Polyline" /> 的顶点。  </summary>
      <returns>描述 <see cref="T:System.Windows.Shapes.Polyline" /> 顶点的 <see cref="T:System.Windows.Point" /> 结构的集合。默认为空引用（Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>绘制一个矩形。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Rectangle" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.GeometryTransform">
      <summary>获取适用于此 <see cref="T:System.Windows.Shapes.Rectangle" /> 的 <see cref="T:System.Windows.Media.Transform" />。 </summary>
      <returns>适用于此 <see cref="T:System.Windows.Shapes.Rectangle" /> 的变换。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>获取或设置用于使矩形的角变圆的椭圆的 x 轴半径。  </summary>
      <returns>用于使矩形的角变圆的椭圆的 x 轴半径。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依赖项属性。  </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>获取或设置用于使矩形的角变圆的椭圆的 y 轴半径。  </summary>
      <returns>用于使矩形的角变圆的椭圆的 y 轴半径。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RenderedGeometry">
      <summary>获取一个表示最终呈现的形状的 <see cref="T:System.Windows.Media.Geometry" /> 对象。 </summary>
      <returns>最终呈现的形状。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>为 <see cref="T:System.Windows.Shapes.Ellipse" />、<see cref="T:System.Windows.Shapes.Polygon" /> 和 <see cref="T:System.Windows.Shapes.Rectangle" /> 之类的形状元素提供基类。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shapes.Shape" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.ArrangeOverride(System.Windows.Size)">
      <summary>通过计算形状的 <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry" /> 和 <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 属性来排列 <see cref="T:System.Windows.Shapes.Shape" />。</summary>
      <returns>排列的 <see cref="T:System.Windows.Shapes.Shape" /> 元素的最终大小。</returns>
      <param name="finalSize">
        <see cref="T:System.Windows.Shapes.Shape" /> 的最终计算大小。</param>
    </member>
    <member name="P:System.Windows.Shapes.Shape.DefiningGeometry">
      <summary>获取一个值，该值表示 <see cref="T:System.Windows.Shapes.Shape" /> 的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> 的 <see cref="T:System.Windows.Media.Geometry" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>获取或设置指定形状内部绘制方式的 <see cref="T:System.Windows.Media.Brush" />。 </summary>
      <returns>说明形状内部绘制方式的 <see cref="T:System.Windows.Media.Brush" />。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依赖项属性。此字段为只读。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>获取一个表示 <see cref="T:System.Windows.Media.Transform" /> 的值，该值在绘制形状之前应用于 <see cref="T:System.Windows.Shapes.Shape" /> 的几何图形。</summary>
      <returns>一个 <see cref="T:System.Windows.Media.Transform" />，它在绘制形状之前应用于 <see cref="T:System.Windows.Shapes.Shape" /> 的几何图形。</returns>
    </member>
    <member name="M:System.Windows.Shapes.Shape.MeasureOverride(System.Windows.Size)">
      <summary>排列之前在第一个布局处理过程中测量 <see cref="T:System.Windows.Shapes.Shape" />。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> 的最大 <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">不能超过的最大 <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="M:System.Windows.Shapes.Shape.OnRender(System.Windows.Media.DrawingContext)">
      <summary>提供用于更改 <see cref="T:System.Windows.Shapes.Shape" /> 元素的默认外观的方法。</summary>
      <param name="drawingContext">在此 <see cref="T:System.Windows.Shapes.Shape" /> 的呈现处理过程中绘制的 <see cref="T:System.Windows.Media.DrawingContext" /> 对象。</param>
    </member>
    <member name="P:System.Windows.Shapes.Shape.RenderedGeometry">
      <summary>获取一个值，该值表示 <see cref="T:System.Windows.Shapes.Shape" /> 的最终呈现的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> 的最终呈现的 <see cref="T:System.Windows.Media.Geometry" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.Stretch" /> 枚举值，该值描述形状如何填充为它分配的空间。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" /> 枚举值之一。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>获取或设置指定 <see cref="T:System.Windows.Shapes.Shape" /> 轮廓绘制方式的 <see cref="T:System.Windows.Media.Brush" />。 </summary>
      <returns>一个 <see cref="T:System.Windows.Media.Brush" />，指定 <see cref="T:System.Windows.Shapes.Shape" /> 轮廓的绘制方式。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>获取或设置 <see cref="T:System.Double" /> 值的集合，这些值指示用于勾勒形状轮廓的虚线和间隙样式。 </summary>
      <returns>指定虚线和间隙样式的 <see cref="T:System.Double" /> 值的集合。 </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依赖项属性。  </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值，该值指定如何绘制虚线的两端。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 的枚举值之一。默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat" />。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>获取或设置一个 <see cref="T:System.Double" />，它指定虚线样式内虚线开始处的距离。</summary>
      <returns>一个 <see cref="T:System.Double" />，表示虚线样式内虚线开始处的距离。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值，该值描述位于直线末端的 <see cref="T:System.Windows.Shapes.Shape" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 的枚举值之一。默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat" />。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineJoin" /> 枚举值，该值指定在 <see cref="T:System.Windows.Shapes.Shape" /> 的顶点处使用的联接类型。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineJoin" /> 的枚举值之一。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>获取或设置对斜接长度与 <see cref="T:System.Windows.Shapes.Shape" /> 元素的 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 的一半之比的限制。 </summary>
      <returns>对斜接长度与 <see cref="T:System.Windows.Shapes.Shape" /> 元素的 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 之比的限制。此值始终是大于或等于 1 的正数。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值，该值描述位于 <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 起始处的 <see cref="T:System.Windows.Shapes.Shape" />。 </summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> 枚举值之一。默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat" />。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>获取或设置 <see cref="T:System.Windows.Shapes.Shape" /> 轮廓的宽度。 </summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> 轮廓的宽度。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItem">
      <summary>表示 <see cref="T:System.Windows.Shell.JumpPath" /> 和 <see cref="T:System.Windows.Shell.JumpTask" /> 类的基类。</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpItem.CustomCategory">
      <summary>获取或设置在 Windows 7 任务栏跳转列表中对 <see cref="T:System.Windows.Shell.JumpItem" /> 进行分组所依据的类别的名称。</summary>
      <returns>对 <see cref="T:System.Windows.Shell.JumpItem" /> 进行分组所依据的类别的名称。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemRejectionReason">
      <summary>描述 Windows shell 未能将 <see cref="T:System.Windows.Shell.JumpItem" /> 添加到跳转列表中的原因。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.InvalidItem">
      <summary>
        <see cref="T:System.Windows.Shell.JumpItem" /> 引用无效文件路径，或者操作系统不支持跳转列表。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.None">
      <summary>未指定原因。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.NoRegisteredHandler">
      <summary>应用程序未对处理 <see cref="T:System.Windows.Shell.JumpItem" /> 的文件扩展名进行注册。</summary>
    </member>
    <member name="F:System.Windows.Shell.JumpItemRejectionReason.RemovedByUser">
      <summary>该项以前在跳转列表中，但已经被用户移除。</summary>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRejectedEventArgs">
      <summary>为 <see cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRejectedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem},System.Collections.Generic.IList{System.Windows.Shell.JumpItemRejectionReason})">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpItemsRejectedEventArgs" /> 类的一个新实例，该实例具有指定的参数。</summary>
      <param name="rejectedItems">未能通过 Windows shell 添加到跳转列表中的跳转列表项的列表。</param>
      <param name="reasons">未能将被拒绝的跳转列表项添加到跳转列表中的原因的列表。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rejectedItems " /> 的数量不等于拒绝 <paramref name="reasons" /> 的数量。</exception>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectedItems">
      <summary>获取未能通过 Windows shell 添加到跳转列表中的跳转列表项的列表。</summary>
      <returns>未能通过 Windows shell 添加到跳转列表中的跳转列表项的列表。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRejectedEventArgs.RejectionReasons">
      <summary>获取未能将被拒绝的跳转列表项添加到跳转列表中的原因的列表。</summary>
      <returns>未能将被拒绝的跳转列表项添加到跳转列表中的原因的列表。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpItemsRemovedEventArgs">
      <summary>为 <see cref="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpItemsRemovedEventArgs.#ctor(System.Collections.Generic.IList{System.Windows.Shell.JumpItem})">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpItemsRemovedEventArgs" /> 类的一个新实例，该实例具有指定的参数。</summary>
      <param name="removedItems">自上次调用 <see cref="M:System.Windows.Shell.JumpList.Apply" /> 以来已被用户移除的跳转列表项的列表。</param>
    </member>
    <member name="P:System.Windows.Shell.JumpItemsRemovedEventArgs.RemovedItems">
      <summary>获取自上次调用 <see cref="M:System.Windows.Shell.JumpList.Apply" /> 方法以来已被用户移除的跳转列表项的列表。</summary>
      <returns>自上次调用 <see cref="M:System.Windows.Shell.JumpList.Apply" /> 方法以来已被用户移除的跳转列表项的列表。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpList">
      <summary>表示作为菜单显示在 Windows 7 任务栏按钮上的项和任务的列表。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)">
      <summary>使用指定的参数初始化 <see cref="T:System.Windows.Shell.JumpList" /> 类的新实例。</summary>
      <param name="items">在跳转列表中显示的 <see cref="T:System.Windows.Shell.JumpItem" /> 对象的集合。</param>
      <param name="showFrequent">一个指示常用项是否显示在跳转列表中的值。</param>
      <param name="showRecent">一个指示最近使用的项是否显示在跳转列表中的值。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)">
      <summary>将指定的项路径添加到跳转列表的“最近”类别中。</summary>
      <param name="itemPath">要添加到跳转列表中的路径。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)">
      <summary>将指定的跳转路径添加到跳转列表的“最近”类别中。</summary>
      <param name="jumpPath">要添加到跳转列表中的 <see cref="T:System.Windows.Shell.JumpPath" />。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)">
      <summary>将指定的跳转任务添加到跳转列表的“最近”类别中。</summary>
      <param name="jumpTask">要添加到跳转列表中的 <see cref="T:System.Windows.Shell.JumpTask" />。</param>
    </member>
    <member name="M:System.Windows.Shell.JumpList.Apply">
      <summary>在其当前状态下将 <see cref="T:System.Windows.Shell.JumpList" /> 发送到 Windows shell 中。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Shell.JumpList" /> 未完全初始化。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.BeginInit">
      <summary>表示 <see cref="T:System.Windows.Shell.JumpList" /> 初始化开始。</summary>
      <exception cref="T:System.InvalidOperationException">对 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的此调用嵌套在对 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的之前调用中。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.EndInit">
      <summary>表示 <see cref="T:System.Windows.Shell.JumpList" /> 初始化结束。</summary>
      <exception cref="T:System.NotSupportedException">对 <see cref="M:System.Windows.Shell.JumpList.EndInit" /> 的此调用未与对 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 的调用配对。</exception>
    </member>
    <member name="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)">
      <summary>返回与某个应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" /> 对象。</summary>
      <returns>与指定应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" /> 对象。</returns>
      <param name="application">与 <see cref="T:System.Windows.Shell.JumpList" /> 关联的应用程序。</param>
    </member>
    <member name="P:System.Windows.Shell.JumpList.JumpItems">
      <summary>获取在跳转列表中显示的 <see cref="T:System.Windows.Shell.JumpItem" /> 对象的集合。</summary>
      <returns>在跳转列表中显示的 <see cref="T:System.Windows.Shell.JumpItem" /> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRejected">
      <summary>在 Windows shell 将跳转项添加到跳转列表中失败时发生。</summary>
    </member>
    <member name="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser">
      <summary>在用户从跳转列表中移除以前位于该列表中的跳转项时发生。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)">
      <summary>设置与应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" /> 对象。</summary>
      <param name="application">与 <see cref="T:System.Windows.Shell.JumpList" /> 关联的应用程序。</param>
      <param name="value">要与应用程序关联的 <see cref="T:System.Windows.Shell.JumpList" />。</param>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowFrequentCategory">
      <summary>获取或设置一个值，该值指示常用项是否显示在跳转列表中。</summary>
      <returns>如果常用项显示在跳转列表中，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpList.ShowRecentCategory">
      <summary>获取或设置一个值，该值指示最近使用的项是否显示在跳转列表中。</summary>
      <returns>如果最近使用的项显示在跳转列表中，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpPath">
      <summary>表示指向 Windows 7 任务栏跳转列表中所显示的文件的链接。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpPath.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpPath" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpPath.Path">
      <summary>获取或设置要包含在跳转列表中的文件的路径。</summary>
      <returns>要包含在跳转列表中的文件的路径。</returns>
    </member>
    <member name="T:System.Windows.Shell.JumpTask">
      <summary>表示某应用程序在 Windows 7 任务栏跳转列表中的快捷方式。</summary>
    </member>
    <member name="M:System.Windows.Shell.JumpTask.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.JumpTask" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.ApplicationPath">
      <summary>获取或设置应用程序的路径。</summary>
      <returns>应用程序的路径。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Arguments">
      <summary>获取或设置启动时要传递给应用程序的参数。</summary>
      <returns>启动时要传递给应用程序的参数。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Description">
      <summary>获取或设置针对跳转列表中的任务在工具提示中显示的文本。</summary>
      <returns>针对任务在工具提示中显示的文本。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourceIndex">
      <summary>获取或设置嵌入在资源中的图标的索引，索引从零开始。</summary>
      <returns>图标的从零开始的索引；如果未使用图标，则为 -1。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.IconResourcePath">
      <summary>获取或设置资源的路径，该资源包含要在跳转列表中显示的图标。</summary>
      <returns>包含图标的资源的路径。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.Title">
      <summary>获取或设置针对跳转列表中的任务显示的文本。</summary>
      <returns>针对跳转列表中的任务显示的文本。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.JumpTask.WorkingDirectory">
      <summary>获取或设置启动时应用程序的工作目录。</summary>
      <returns>启动时应用程序的工作目录。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Shell.NonClientFrameEdges">
      <summary>指定显示窗口框不属于由客户端边缘的常数。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Bottom">
      <summary>底部边缘不归客户端所有 (值 = 8）。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Left">
      <summary>左端边缘不归客户端所有（值 = 1）。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.None">
      <summary>所有边缘所归客户端所有（值 = 0）。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Right">
      <summary>右边缘不归客户端所有（值 = 4）。</summary>
    </member>
    <member name="F:System.Windows.Shell.NonClientFrameEdges.Top">
      <summary>上边缘不归客户端所有（值 = 2）。</summary>
    </member>
    <member name="T:System.Windows.Shell.ResizeGripDirection">
      <summary>指定在输入元件上显示出调整手柄行为方向的常数。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Bottom">
      <summary>可从窗口下边缘调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomLeft">
      <summary>可从窗口左下角调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.BottomRight">
      <summary>可从窗口右下角调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Left">
      <summary>可从窗口左边缘调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.None">
      <summary>未指定任何重设大小行为。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Right">
      <summary>可从窗口右边缘调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.Top">
      <summary>可从窗口上边缘调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopLeft">
      <summary>可从窗口左上角调整窗口的大小。</summary>
    </member>
    <member name="F:System.Windows.Shell.ResizeGripDirection.TopRight">
      <summary>可从窗口右上角调整窗口的大小。</summary>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemInfo">
      <summary>表示有关任务栏缩略图显示方式的信息。</summary>
    </member>
    <member name="M:System.Windows.Shell.TaskbarItemInfo.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.TaskbarItemInfo" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Description">
      <summary>获取或设置任务栏项工具提示的文本。</summary>
      <returns>任务栏项工具提示的文本。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.DescriptionProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.Description" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.Overlay">
      <summary>获取或设置在任务栏按钮中的程序图标上方显示的图像。</summary>
      <returns>在任务栏按钮中的程序图标上方显示的图像。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.OverlayProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.Overlay" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressState">
      <summary>获取或设置一个值，该值指示在任务栏按钮中显示进度指示器的方式。</summary>
      <returns>一个枚举值，该值指示在任务栏按钮中显示进度指示器的方式。默认值为 <see cref="F:System.Windows.Shell.TaskbarItemProgressState.None" />。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressStateProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressState" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue">
      <summary>获取或设置一个值，该值指示任务栏按钮中进度指示器的填满状态。</summary>
      <returns>一个值，该值指示任务栏按钮中进度指示器的填满状态。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ProgressValueProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ProgressValue" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos">
      <summary>获取或设置与 <see cref="T:System.Windows.Window" /> 关联的 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 对象的集合。</summary>
      <returns>与 <see cref="T:System.Windows.Window" /> 关联的 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfosProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin">
      <summary>获取或设置一个值，该值指定在任务栏缩略图中显示的应用程序窗口工作区的部件。</summary>
      <returns>一个值，该值指定在任务栏缩略图中显示的应用程序窗口工作区的部件。默认值为空 <see cref="T:System.Windows.Thickness" />。</returns>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMarginProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shell.TaskbarItemProgressState">
      <summary>指定 Windows 任务栏中进度指示器的状态。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Error">
      <summary>任务栏按钮中显示红色的进度指示器。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Indeterminate">
      <summary>任务栏按钮中显示闪烁的绿色进度指示器。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.None">
      <summary>任务栏按钮中未显示进度指示器。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Normal">
      <summary>任务栏按钮中显示绿色的进度指示器。</summary>
    </member>
    <member name="F:System.Windows.Shell.TaskbarItemProgressState.Paused">
      <summary>任务栏按钮中显示黄色的进度指示器。</summary>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfo">
      <summary>表示有关如何在 Windows 7 任务栏缩略图中显示按钮的信息。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfo.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Shell.ThumbButtonInfo.Click">
      <summary>在单击缩略图按钮时发生。</summary>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Command">
      <summary>获取或设置在单击此缩略图按钮时要调用的命令。</summary>
      <returns>在单击此缩略图按钮时要调用的命令。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter">
      <summary>获取或设置要传递给 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 属性的参数。</summary>
      <returns>要传递给 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 属性的参数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget">
      <summary>获取或设置要对其引发指定命令的元素。</summary>
      <returns>在其上引发指定命令的元素。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Description">
      <summary>获取或设置要为缩略图按钮工具提示显示的文本。</summary>
      <returns>要为缩略图按钮工具提示显示的文本。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked">
      <summary>获取或设置一个值，该值指示在单击缩略图按钮时任务栏缩略图是否关闭。</summary>
      <returns>如果缩略图关闭，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.ImageSource">
      <summary>获取或设置在缩略图按钮上显示的图像。</summary>
      <returns>在缩略图按钮上显示的图像。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible">
      <summary>获取或设置一个值，该值指示在缩略图按钮周围是否突出显示边框。</summary>
      <returns>如果在缩略图按钮周围突出显示边框，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled">
      <summary>获取或设置一个值，该值指示是否启用缩略图按钮。</summary>
      <returns>如果启用缩略图按钮，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive">
      <summary>获取或设置一个值，该值指示用户是否可以与缩略图按钮进行交互。</summary>
      <returns>如果用户可以与缩略图按钮进行交互，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.ThumbButtonInfo.Visibility">
      <summary>获取或设置一个值，该值指定缩略图按钮的显示状态。</summary>
      <returns>一个枚举值，该值指定缩略图按钮的显示状态。默认值为 <see cref="F:System.Windows.Visibility.Visible" />。</returns>
    </member>
    <member name="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> 依赖项属性。 </summary>
      <returns>
        <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shell.ThumbButtonInfoCollection">
      <summary>表示与 <see cref="T:System.Windows.Window" /> 关联的 <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.ThumbButtonInfoCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Shell.ThumbButtonInfoCollection.CreateInstanceCore">
      <summary>创建集合的新实例。</summary>
      <returns>集合的新实例。</returns>
    </member>
    <member name="T:System.Windows.Shell.WindowChrome">
      <summary>表示描述窗口的非客户端区域的自定义项的对象。</summary>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Shell.WindowChrome" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CaptionHeight">
      <summary>获取或设置窗口顶部标题区域的高度。</summary>
      <returns>标题区域的高度。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CaptionHeightProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.CaptionHeight" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.CaptionHeight" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.CornerRadius">
      <summary>获取或设置一个值，该值表示圆形窗口边角的度数。</summary>
      <returns>一个描述倒圆的量的值。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.CornerRadiusProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.CornerRadius" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.CornerRadius" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.CreateInstanceCore">
      <summary>创建 <see cref="T:System.Windows.Shell.WindowChrome" /> 类的新实例。</summary>
      <returns>此类的新实例。</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetIsHitTestVisibleInChrome(System.Windows.IInputElement)">
      <summary>从指定的输入元素获取 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加属性的值。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加属性的值。</returns>
      <param name="inputElement">从中读取属性值的输入元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetResizeGripDirection(System.Windows.IInputElement)">
      <summary>从指定的输入元素获取 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加属性的值。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加属性的值。</returns>
      <param name="inputElement">从中读取属性值的输入元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.GetWindowChrome(System.Windows.Window)">
      <summary>从指定的 <see cref="T:System.Windows.Window" /> 中获取 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 附加属性的值。</summary>
      <returns>附件到指定 <see cref="T:System.Windows.Window" /> 的  <see cref="T:System.Windows.Shell.WindowChrome" /> 实例。</returns>
      <param name="window">从中读取属性值的 <see cref="T:System.Windows.Window" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameCompleteThickness">
      <summary>获取统一的粗细为 -1。</summary>
      <returns>在所有情况下，统一宽度值为 -1。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.GlassFrameThickness">
      <summary>获取或设置一个值，该值表示窗口周围透明边框的宽度。</summary>
      <returns>窗口周围玻璃边框的宽度。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.GlassFrameThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.GlassFrameThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.GlassFrameThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome">
      <summary>获取或设置一个值，该值表示 WPF 命中测试在窗口非工作区中的元素是否可用。</summary>
      <returns>如果在非客户端区域启用命中测试，则为 true；否则为 false。注册的默认值为 false。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChromeProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges">
      <summary>获取或设置一个值，该值表示窗口框架边缘是否归客户端所有。</summary>
      <returns>枚举值的按位组合，这些值指定客户端不能拥有的帧的边缘。注册的默认值为 <see cref="F:System.Windows.Shell.NonClientFrameEdges.None" />。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.NonClientFrameEdgesProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.NonClientFrameEdges" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness">
      <summary>获取或设置一个值，该值表示边框的宽度，用于调整窗口大小尺寸。</summary>
      <returns>用于调整窗口的边框宽度。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeBorderThicknessProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.ResizeBorderThickness" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.ResizeGripDirection">
      <summary>获取或设置一个值，该值表示输入元素的大小调整手柄行为的方向。</summary>
      <returns>枚举值之一，该值指示对输入元素调整手柄大小行为的方向。注册的默认值为 <see cref="F:System.Windows.Shell.ResizeGripDirection.None" />。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.ResizeGripDirectionProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetIsHitTestVisibleInChrome(System.Windows.IInputElement,System.Boolean)">
      <summary>设置指定输入元素上的 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加属性的值。</summary>
      <param name="inputElement">要设置 <see cref="P:System.Windows.Shell.WindowChrome.IsHitTestVisibleInChrome" /> 附加属性的元素。</param>
      <param name="hitTestVisible">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetResizeGripDirection(System.Windows.IInputElement,System.Windows.Shell.ResizeGripDirection)">
      <summary>设置指定输入元素上的 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加属性的值。</summary>
      <param name="inputElement">要设置 <see cref="P:System.Windows.Shell.WindowChrome.ResizeGripDirection" /> 附加属性的元素。</param>
      <param name="direction">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputElement" /> 不是 <see cref="T:System.Windows.DependencyObject" />。</exception>
    </member>
    <member name="M:System.Windows.Shell.WindowChrome.SetWindowChrome(System.Windows.Window,System.Windows.Shell.WindowChrome)">
      <summary>设置指定的 <see cref="T:System.Windows.Window" /> 的 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 附加属性的值。</summary>
      <param name="window">对其设置 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 附加属性的 <see cref="T:System.Windows.Window" />。</param>
      <param name="chrome">要设置的 <see cref="T:System.Windows.Shell.WindowChrome" /> 的实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="window" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons">
      <summary>获取或设置一个值，表示是对 Windows Aero 标题按钮启用的命中测试是否可用。</summary>
      <returns>如果在标题按钮上启用命中测试，则为 true；否则为 false。注册的默认值为 true。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.UseAeroCaptionButtonsProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.UseAeroCaptionButtons" /> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shell.WindowChrome.WindowChrome">
      <summary>获取或设置附加到窗口的 <see cref="T:System.Windows.Shell.WindowChrome" /> 的实例。</summary>
      <returns>附加到窗口的 <see cref="T:System.Windows.Shell.WindowChrome" /> 的实例。注册的默认值为 null。有关可以影响值的因素的更多信息，请参见 依赖项属性值优先级。</returns>
    </member>
    <member name="F:System.Windows.Shell.WindowChrome.WindowChromeProperty">
      <summary>标识 <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 依赖属性。</summary>
      <returns>
        <see cref="P:System.Windows.Shell.WindowChrome.WindowChrome" /> 依赖项属性的标识符。</returns>
    </member>
  </members>
</doc>