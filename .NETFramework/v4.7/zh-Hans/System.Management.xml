<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>
              当新事件到达时出现。
            </summary>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>
              当取消订阅时出现。
            </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>
              当某项操作已完成时发生。
            </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>
              当对象已成功提交时发生。
            </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>
              可用的新对象时出现。
            </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>
              发生以指示正在进行的操作的进度。
            </summary>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>
              指示应发生无超时。
            </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.ConnectionOptions" /> 类对于连接操作，使用默认值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
              创建新 ConnectionOption。
            </summary>
      <param name="locale">
                要用于连接的区域设置。
              </param>
      <param name="username">
                要用于连接的用户名称。
                 如果为 null，将使用当前登录的用户的凭据。
              </param>
      <param name="password">
                对于给定的用户名密码。
                 用户名称也为 null，如果使用的凭据将那些当前登录的用户。
              </param>
      <param name="authority">
                要用于对指定的用户进行身份验证机构。
              </param>
      <param name="impersonation">
                要用于连接的 COM 模拟级别。
              </param>
      <param name="authentication">
                要用于连接的 COM 身份验证级别。
              </param>
      <param name="enablePrivileges">
                true 以启用特殊的用户特权。否则为 false。
                 在执行需要特殊的 Windows NT 用户权限的操作时，应仅使用此参数。
              </param>
      <param name="context">
                提供程序特定的名称-值对对象传递给提供程序。
              </param>
      <param name="timeout">
                留待将来使用。
              </param>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ConnectionOptions" /> 类要用于 WMI 连接，使用指定的值。
            </summary>
      <param name="locale">
                要用于连接的区域设置。
              </param>
      <param name="username">
                要用于连接的用户名称。
                 如果为 null，将使用当前登录的用户的凭据。
              </param>
      <param name="password">
                对于给定的用户名密码。
                 用户名称也为 null，如果使用的凭据将那些当前登录的用户。
              </param>
      <param name="authority">
                要用于对指定的用户进行身份验证机构。
              </param>
      <param name="impersonation">
                要用于连接的 COM 模拟级别。
              </param>
      <param name="authentication">
                要用于连接的 COM 身份验证级别。
              </param>
      <param name="enablePrivileges">
                <see langword="true" /> 若要启用特殊的用户特权。否则为 <see langword="false" />。
                 在执行需要特殊的 Windows NT 用户权限的操作时，应仅使用此参数。
              </param>
      <param name="context">
                提供程序特定的名称-值对对象传递给提供程序。
              </param>
      <param name="timeout">
                留待将来使用。
              </param>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.DeleteOptions" /> 类对于删除操作，使用默认值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
              新实例初始化 <see cref="T:System.Management.DeleteOptions" /> 类对于删除操作，使用指定的值。
            </summary>
      <param name="context">
                提供程序特定名称-值对对象传递给提供程序。
              </param>
      <param name="timeout">
                要让该操作执行超时之前的时间长度。
                 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。
                 将此参数设置将半同步调用该操作。
              </param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.EnumerationOptions" /> 使用默认值 （请参阅各属性的说明为默认值）。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Management.EnumerationOptions" /> 类要用于查询或枚举，这样就允许用户指定不同的选项的值。
            </summary>
      <param name="context">
                包含可以通过传递给提供程序的提供程序特定信息的选项上下文对象。
              </param>
      <param name="timeout">
                枚举整个结果超时值。
              </param>
      <param name="blockSize">
                若要在一次从 WMI 检索的项的数目。
              </param>
      <param name="rewindable">
                <see langword="true" /> 若要显示的结果集是可倒回 （允许多个遍历）;否则为 <see langword="false" />。
              </param>
      <param name="returnImmediatley">
                <see langword="true" /> 若要显示该操作应立即返回 （半同步） 或被阻止，直到所有结果才都会有效。否则为 <see langword="false" />。
              </param>
      <param name="useAmendedQualifiers">
                <see langword="true" /> 要显示返回的对象应包含已修正 （可识别区域设置的） 的限定符;否则为 <see langword="false" />。
              </param>
      <param name="ensureLocatable">
                <see langword="true" /> 若要确保所有返回的对象具有有效的路径;否则为 <see langword="false" />。
              </param>
      <param name="prototypeOnly">
                <see langword="true" /> 若要返回的结果集而不是实际的结果; 原型否则为 <see langword="false" />。
              </param>
      <param name="directRead">
                <see langword="true" /> 若要检索对象的指定的类或派生类也;否则为 <see langword="false" />。
              </param>
      <param name="enumerateDeep">
                <see langword="true" /> 若要在子类; 中使用递归枚举否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.EventQuery" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.EventQuery" /> 指定查询的类。
            </summary>
      <param name="query">
                <paramref name="event query" /> 的文本化表示形式。
              </param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.EventQuery" /> 类用于在指定的语言和查询。
            </summary>
      <param name="language">
                在其中指定查询字符串的语言。
              </param>
      <param name="query">
                查询的字符串表示形式。
              </param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.EventWatcherOptions" /> 类为事件监视，使用默认值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Management.EventWatcherOptions" /> 类使用给定的值。
            </summary>
      <param name="context">
                包含要传递给提供程序的提供程序特定信息的选项上下文对象。
              </param>
      <param name="timeout">
                超时时间等待下一个事件。
              </param>
      <param name="blockSize">
                要等待每个块中的事件数。
              </param>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.Instrumentation.BaseEvent" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>
              引发管理事件。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>
              引发管理事件。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.Instrumentation.IgnoreMemberAttribute" /> 类的新实例。          
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instance.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.Instrumentation.Instance" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.Instrumentation.Instrumentation" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>
              引发管理事件。
            </summary>
      <param name="eventData">
                确定类、 属性和事件的值的对象。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>
              确定是否指定的程序集的规范架构已正确注册到 WMI。
            </summary>
      <param name="assemblyToRegister">
                <see cref="T:System.Reflection.Assembly" /> 包含检测实例或事件类型。
              </param>
      <returns>
              <see langword="true" /> 如果中的规范架构中指定的程序集注册到 WMI;，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>
              设置实例通过管理检测可见。
            </summary>
      <param name="instanceData">
                要通过管理检测可见对象。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>
              在指定的程序集与 WMI 中注册管理实例或事件的类。
               这将确保检测架构都可以访问 <see cref="N:System.Management" /> 客户端应用程序。
            </summary>
      <param name="assemblyToRegister">
                <see cref="T:System.Reflection.Assembly" /> 包含检测实例或事件类型。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>
              通过以前发布的实例 <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />             方法通过管理检测不再可见。
            </summary>
      <param name="instanceData">
                要移除对管理规范的可见性的对象。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>
              指定要一次提供的指定类型的对象的最大数目。
            </summary>
      <param name="instrumentationClass">
                正在为其设置批大小类。
              </param>
      <param name="batchSize">
                对象提供一次的最大数目。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>
              新实例初始化 <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> 类的此类型从另一种具有派生的情况下使用 <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> 属性中，或者如果这是一个顶级规范类 (例如，而无需基类或事件的实例或抽象类派生自 __ExtrinsicEvent)。
            </summary>
      <param name="instrumentationType">
                此类提供的检测的类型。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> 类，该类具有一个现有基类的架构。
               该类必须包含现有 WMI 基类的属性的正确成员定义。
            </summary>
      <param name="instrumentationType">
                此类提供的检测的类型。
              </param>
      <param name="managedBaseClassName">
                基本类的名称。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 为 root\default 命名空间设置的类。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 设置为此程序集内检测指定的命名空间的类。
            </summary>
      <param name="namespaceName">
                检测实例和事件的命名空间。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 将为此程序集内检测指定的命名空间和安全设置的类。
            </summary>
      <param name="namespaceName">
                检测实例和事件的命名空间。
              </param>
      <param name="securityDescriptor">
                 只允许指定的用户或组来运行应用程序提供支持检测此程序集的安全描述符。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" /> 类，它允许的备用名称来指定类型、 字段、 属性、 方法或向其应用此特性的参数。
            </summary>
      <param name="name">
                类型、 字段、 属性、 方法或向其应用此特性的参数替换名称。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.Instrumentation.ManagementInstaller" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>
              提交对操作的程序集。
            </summary>
      <param name="savedState">
                程序集的状态。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>
              安装的程序集。
            </summary>
      <param name="savedState">
                程序集的状态。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
              回滚的程序集的状态。
            </summary>
      <param name="savedState">
                程序集的状态。
              </param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
              卸载程序集。
            </summary>
      <param name="savedState">
                程序集的状态。
              </param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.InvokeMethodOptions" /> 类 <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> 操作，使用默认值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
              新实例初始化 <see cref="T:System.Management.InvokeMethodOptions" /> 类，为调用操作使用指定的值。
            </summary>
      <param name="context">
                提供程序特定名称-值对对象传递给提供程序。
              </param>
      <param name="timeout">
                要让该操作执行超时之前的时间长度。
                 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。
                 将此参数设置将半同步调用该操作。
              </param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementBaseObject" /> 是可序列化的类。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                目标 (请参阅 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) 此序列化。
              </param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              新克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>
              将此对象到另一个，将根据指定的选项进行比较。
            </summary>
      <param name="otherObject">
                与此对象进行比较的对象。
              </param>
      <param name="settings">
                有关如何比较的对象的选项。
              </param>
      <returns>
              <see langword="true" /> 如果比较的对象相等，根据给定的选项;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Dispose">
      <summary>
              释放 ManagementBaseObject 使用的非托管资源。
            </summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>
              比较两个管理对象。
            </summary>
      <param name="obj">
                与此实例进行比较的对象。
              </param>
      <returns>
              <see langword="true" /> 如果这是实例 <see cref="T:System.Management.ManagementBaseObject" /> 并表示相同的对象与此实例; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>
              用作特定类型的哈希函数，适合在哈希算法和数据结构（如哈希表）中使用。
            </summary>
      <returns>
              当前对象的哈希代码。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所必需进行反序列化此实例所表示的字段的数据。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                目标 (请参阅 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) 此序列化。
              </param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>
              返回指定的属性限定符的值。
            </summary>
      <param name="propertyName">
                限定符所属的属性的名称。
              </param>
      <param name="qualifierName">
                属性限定符的名称。
              </param>
      <returns>
              指定限定符的值。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>
              获取属性的值等效的访问器。
            </summary>
      <param name="propertyName">
                感兴趣的属性的名称。
              </param>
      <returns>
              指定属性的值。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>
              获取指定限定符的值。
            </summary>
      <param name="qualifierName">
                感兴趣的限定符的名称。
              </param>
      <returns>
              指定限定符的值。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>
              返回该对象的文本表示形式中指定的格式。
            </summary>
      <param name="format">
                请求的文本格式。
              </param>
      <returns>
              指定格式的对象的文本表示形式。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>
              提供了所表示的内部 WMI 对象 <see cref="T:System.Management.ManagementObject" />。
            </summary>
      <param name="managementObject">
                <see cref="T:System.Management.ManagementBaseObject" /> 引用请求的 WMI 对象。
              </param>
      <returns>
              <see cref="T:System.IntPtr" /> 表示内部的 WMI 对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>
              设置指定的属性限定符的值。
            </summary>
      <param name="propertyName">
                限定符所属的属性的名称。
              </param>
      <param name="qualifierName">
                属性限定符的名称。
              </param>
      <param name="qualifierValue">
                限定符的新值。
              </param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>
              设置已命名属性的值。
            </summary>
      <param name="propertyName">
                要更改属性的名称。
              </param>
      <param name="propertyValue">
                此属性的新值。
              </param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>
              设置命名的限定符的值。
            </summary>
      <param name="qualifierName">
                要设置的限定符的名称。
                 此参数不能为 null。
              </param>
      <param name="qualifierValue">
                要设置的值。
              </param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化所需的数据 <see cref="T:System.Management.ManagementBaseObject" />。
            </summary>
      <param name="info">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 包含序列化所需的信息 <see cref="T:System.Management.ManagementBaseObject" />。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 包含的源和目标与相关联的序列化流 <see cref="T:System.Management.ManagementBaseObject" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="info" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.ManagementClass" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>
              初始化 <see cref="T:System.Management.ManagementClass" /> 类的新实例。
               类从 WMI 表示通用信息模型 (CIM) 管理类如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 指定要将绑定到 WMI 类。
                 参数必须指定一个 WMI 类路径。
                 类表示来自 WMI CIM 管理类。
                 CIM 类表示管理信息包括硬件、 软件、 流程和等等。
                 有关 Windows 中可用的 CIM 类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"Win32 类"。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementClass" /> 类初始化为给定 WMI 类路径中使用指定的选项。
               类从 WMI 表示通用信息模型 (CIM) 管理类如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 实例，它表示 WMI 类路径。
                 类表示来自 WMI CIM 管理类。
                 CIM 类表示管理信息包括硬件、 软件、 流程和等等。
                 有关 Windows 中可用的 CIM 类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"Win32 类"。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> 表示要检索此类时使用的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementClass" /> 类为指定的 WMI 类中指定的作用域并使用指定的选项。
               类从 WMI 表示通用信息模型 (CIM) 管理类如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
      <param name="scope">
                一个 <see cref="T:System.Management.ManagementScope" /> ，它指定的作用域 （服务器和命名空间） 的 WMI 类所在的位置。
              </param>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 表示传递给指定范围中的 WMI 类路径。
                 类表示来自 WMI CIM 管理类。
                 CIM 类表示管理信息包括硬件、 软件、 流程和等等。
                 有关 Windows 中可用的 CIM 类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"Win32 类"。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> ，它指定要检索 WMI 类时使用的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              从 <see cref="T:System.Management.ManagementClass" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。
            </summary>
      <param name="info">
                一个实例 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 包含序列化新所必需的信息类 <see cref="T:System.Management.ManagementClass" />。
              </param>
      <param name="context">
                一个实例 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 包含与新关联的序列化流的源类 <see cref="T:System.Management.ManagementClass" />。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementClass" /> 类初始化为给定的路径。
               类从 WMI 表示通用信息模型 (CIM) 管理类如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
      <param name="path">
                WMI 类的路径。
                 类表示来自 WMI CIM 管理类。
                 CIM 类表示管理信息包括硬件、 软件、 流程和等等。
                 有关 Windows 中可用的 CIM 类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"Win32 类"。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementClass" /> 类初始化为给定 WMI 类路径中使用指定的选项。
               类从 WMI 表示通用信息模型 (CIM) 管理类如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
      <param name="path">
                WMI 类的路径。
                 类表示来自 WMI CIM 管理类。
                 CIM 类表示管理信息包括硬件、 软件、 流程和等等。
                 有关 Windows 中可用的 CIM 类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"Win32 类"。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> 表示要检索 WMI 类时使用的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementClass" /> 为在指定范围内，并使用指定的选项指定 WMI 类的类。
               类从 WMI 表示通用信息模型 (CIM) 管理类如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
      <param name="scope">
                WMI 类所在的范围。
              </param>
      <param name="path">
                对指定范围内的 WMI 类路径。
                 类表示来自 WMI CIM 管理类。
                 CIM 类表示管理信息包括硬件、 软件、 流程和等等。
                 有关 Windows 中可用的 CIM 类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"Win32 类"。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> ，它指定要检索 WMI 类时使用的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>
              初始化 WMI 类的新实例。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementObject" /> ，它表示 WMI 类的新实例。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>
              从此类派生新类。
            </summary>
      <param name="newClassName">
                要派生的新类的名称。
              </param>
      <returns>
              一个新 <see cref="T:System.Management.ManagementClass" /> ，它表示从原始类派生的新 WMI 类。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>
              返回类的所有实例的集合。
            </summary>
      <returns>
              一套 <see cref="T:System.Management.ManagementObject" /> 表示类的实例的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>
              返回使用指定的选项的类的所有实例的集合。
            </summary>
      <param name="options">
                其他操作选项。
              </param>
      <returns>
              一套 <see cref="T:System.Management.ManagementObject" /> 对象表示的实例的类中，根据指定的选项。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>
              以异步方式返回的类的所有实例的集合。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>
              使用指定的选项以异步方式返回的类，所有实例的集合。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
      <param name="options">
                有关获取实例指定的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所必需进行反序列化此实例所表示的字段的数据。
            </summary>
      <param name="info">
                用序列化信息填充的对象。
              </param>
      <param name="context">
                将存储和检索序列化的数据的位置。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>
              检索与 WMI 类相关的类。
            </summary>
      <returns>
              一套 <see cref="T:System.Management.ManagementClass" /> 或 <see cref="T:System.Management.ManagementObject" /> 表示 WMI 类或实例的对象相关的 WMI 类。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>
              检索与 WMI 类，以异步方式相关的类。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>
              检索与 WMI 类，以异步方式，给定相关的类的名称相关的类。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
      <param name="relatedClass">
                相关类的名称。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
              检索与相关的类的 WMI 类，以异步方式，使用指定的选项。
            </summary>
      <param name="watcher">
                进度和结果的异步操作的处理程序。
              </param>
      <param name="relatedClass">
                从其生成的类具有派生的类。
              </param>
      <param name="relationshipClass">
                生成的类必须具有与源类的关系类型。
              </param>
      <param name="relationshipQualifier">
                此限定符必须存在于关系。
              </param>
      <param name="relatedQualifier">
                此限定符必须是位于每个生成类。
              </param>
      <param name="relatedRole">
                在关系中，所得到的类必须具有此角色。
              </param>
      <param name="thisRole">
                在关系中，源类必须具有此角色。
              </param>
      <param name="options">
                有关检索所得到的类的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>
              检索与 WMI 类相关的类。
            </summary>
      <param name="relatedClass">
                从其生成的类具有派生的类。
              </param>
      <returns>
              与此类相关的类的集合。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
              检索与基于指定的选项的 WMI 类相关的类。
            </summary>
      <param name="relatedClass">
                从其生成的类具有派生的类。
              </param>
      <param name="relationshipClass">
                生成的类必须具有与源类的关系类型。
              </param>
      <param name="relationshipQualifier">
                此限定符必须存在于关系。
              </param>
      <param name="relatedQualifier">
                此限定符必须是位于每个生成类。
              </param>
      <param name="relatedRole">
                在关系中，所得到的类必须具有此角色。
              </param>
      <param name="thisRole">
                在关系中，源类必须具有此角色。
              </param>
      <param name="options">
                有关检索所得到的类的选项。
              </param>
      <returns>
              与此类相关的类的集合。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>
              检索使类与其他相关的关系类。
            </summary>
      <returns>
              一套 关联类 使类与任何其他类相关。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>
              检索以异步方式使类与其他人，相关的关系类。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>
              检索类以异步方式与指定的 WMI 类的关系类。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
      <param name="relationshipClass">
                应指向所有返回的关系的 WMI 类。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
              根据指定选项以异步方式检索与该类相关的关系类。
            </summary>
      <param name="watcher">
                异步操作的进度和结果的处理程序。
              </param>
      <param name="relationshipClass">
                所有生成的关系必须从其派生的类。
              </param>
      <param name="relationshipQualifier">
                生成的关系类必须拥有的限定符。
              </param>
      <param name="thisRole">
                源类必须在生成的关系类中具有的角色。
              </param>
      <param name="options">
                检索结果的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>
              检索使此类相关给其他人，其中终结点类是指定的类的关系类。
            </summary>
      <param name="relationshipClass">
                返回的所有关系类该终结点类。
              </param>
      <returns>
              一套 关联类 使类与指定的类相关。
               有关关系类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"ASSOCIATORS 的语句"。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
              检索与此类，根据指定的选项的关系类。
            </summary>
      <param name="relationshipClass">
                产生的所有关系类必须都派生自此类。
              </param>
      <param name="relationshipQualifier">
                产生的关系类必须具有此限定符。
              </param>
      <param name="thisRole">
                源类必须具有此角色中产生的关系类。
              </param>
      <param name="options">
                指定用于检索结果的选项。
              </param>
      <returns>
              一套 关联类 ，使此类与其他人，根据指定的选项。
               有关关系类的详细信息，请参阅位于 http://msdn.microsoft.com/library 上 MSDN Library 的 Windows Management Instrumentation 文档中的"ASSOCIATORS 的语句"。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>
              生成给定 WMI 类的强类型类。
            </summary>
      <param name="includeSystemClassInClassDef">
                <see langword="true" /> 包括用于管理系统属性，为类否则为 <see langword="false" />。
              </param>
      <param name="systemPropertyClass">
                <see langword="true" /> 若要生成的类管理系统属性;否则为 <see langword="false" />。
              </param>
      <returns>
              一个 <see cref="T:System.CodeDom.CodeTypeDeclaration" /> 表示强类型类的声明。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>
              生成给定 WMI 类的强类型类。
               此函数生成代码的 Visual Basic、 C#、 JScript、 J# 或 c + + 具体取决于输入参数。
            </summary>
      <param name="lang">
                若要生成的代码的语言。
                 此代码语言来自 <see cref="T:System.Management.CodeLanguage" /> 枚举。
              </param>
      <param name="filePath">
                其中的代码是要写入的文件的路径。
              </param>
      <param name="classNamespace">
                应在其中生成类的.net 命名空间。
                 如果它为空，则将从 WMI 命名空间生成命名空间。
              </param>
      <returns>
              <see langword="true" />, 如果该方法成功，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>
              返回所有子类的类的集合。
            </summary>
      <returns>
              一套 <see cref="T:System.Management.ManagementObject" /> 这些对象表示 WMI 类的子类。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>
              检索使用指定的选项的类的子类。
            </summary>
      <param name="options">
                指定附加选项用于检索类的子类。
              </param>
      <returns>
              一套 <see cref="T:System.Management.ManagementObject" /> 对象表示子类的 WMI 类，根据指定的选项。
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>
              返回所有以异步方式从该类派生的类的集合。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>
              检索所有类以异步方式派生自此类，使用指定的选项。
            </summary>
      <param name="watcher">
                要处理异步操作的进度的对象。
              </param>
      <param name="options">
                要使用的派生的类检索中的指定其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDateTime(System.String)">
      <summary>
              将转换为给定的 DMTF 日期时间 <see cref="T:System.DateTime" />。
               返回 <see cref="T:System.DateTime" /> 将采用系统的当前所在的时区。
            </summary>
      <param name="dmtfDate">
                表示在 DMTF 格式的日期时间的字符串。
              </param>
      <returns>
              一个 <see cref="T:System.DateTime" /> 表示给定的 DMTF 日期时间。
            </returns>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfDateTime(System.DateTime)">
      <summary>
              将转换给定 <see cref="T:System.DateTime" /> 为 DMTF 日期时间格式。
            </summary>
      <param name="date">
                一个 <see cref="T:System.DateTime" /> 表示的日期时间转换为 DMTF 日期时间。
              </param>
      <returns>
              一个字符串，表示 DMTF 日期时间给定 <see cref="T:System.DateTime" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfTimeInterval(System.TimeSpan)">
      <summary>
              将转换给定 <see cref="T:System.TimeSpan" /> 到 DMTF 时间间隔。
            </summary>
      <param name="timespan">
                一个 <see cref="T:System.TimeSpan" /> 表示要转换为 DMTF 时间间隔的日期时间。
              </param>
      <returns>
              一个字符串，表示 DMTF 时间间隔为给定 <see cref="T:System.TimeSpan" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToTimeSpan(System.String)">
      <summary>
              将转换为一个给定的 DMTF 时间间隔 <see cref="T:System.TimeSpan" />。
            </summary>
      <param name="dmtfTimespan">
                DMTF 时间间隔字符串表示形式。
              </param>
      <returns>
              一个 <see cref="T:System.TimeSpan" /> ，它表示给定的 DMTF 时间间隔。
            </returns>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例。
               进一步初始化，在对象上设置的属性。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类在给定一个 WMI 事件查询。
            </summary>
      <param name="query">
                <see cref="T:System.Management.EventQuery" /> 表示 WMI 事件查询，它确定为其观察程序将侦听的事件。
              </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementEventWatcher" />              侦听符合给定 WMI 事件的类 事件查询。
            </summary>
      <param name="scope">
                一个 <see cref="T:System.Management.ManagementScope" /> 表示观察程序将在其中侦听事件的作用域 （命名空间）。
              </param>
      <param name="query">
                <see cref="T:System.Management.EventQuery" /> 表示 WMI 事件查询，它确定为其观察程序将侦听的事件。
              </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 侦听符合给定的 WMI 事件查询，根据指定的选项的事件的类。
               对于此变体，查询和范围是指定的对象。
               Options 对象可以指定选项，如超时和上下文信息。
            </summary>
      <param name="scope">
                一个 <see cref="T:System.Management.ManagementScope" /> 表示观察程序将在其中侦听事件的作用域 （命名空间）。
              </param>
      <param name="query">
                <see cref="T:System.Management.EventQuery" /> 表示 WMI 事件查询，它确定为其观察程序将侦听的事件。
              </param>
      <param name="options">
                <see cref="T:System.Management.EventWatcherOptions" /> 表示用来监视事件的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类在给定一个 WMI 事件查询 中以字符串的形式。
            </summary>
      <param name="query">
                 WMI 事件查询，定义为其观察程序将侦听的事件。
              </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 侦听符合给定 WMI 事件的类 事件查询。
               对于此变体，查询和范围指定为字符串。
            </summary>
      <param name="scope">
                管理作用域 （命名空间） 中的观察程序将侦听的事件。
              </param>
      <param name="query">
                定义的查询，为其观察程序将侦听的事件。
              </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 侦听符合给定 WMI 事件的类 事件查询, ，根据指定的选项。
               对于此变体，查询和范围指定为字符串。
               Options 对象可以指定选项，如超时和上下文信息。
            </summary>
      <param name="scope">
                管理作用域 （命名空间） 中的观察程序将侦听的事件。
              </param>
      <param name="query">
                定义的查询，为其观察程序将侦听的事件。
              </param>
      <param name="options">
                <see cref="T:System.Management.EventWatcherOptions" /> 表示用来监视事件的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>
              可确保清除了未处理的调用。
               这是该对象的析构函数。
               在 C# 中，使用析构函数语法表示终结器。
            </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>
              具有给定查询的事件订阅，并提供了它们，以异步方式，通过 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件。
            </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>
              它是同步还是异步取消的订阅。
            </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>
              等待下一个事件匹配到达时，指定的查询，然后又返回它。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementBaseObject" /> 表示刚到达的事件。
            </returns>
    </member>
    <member name="M:System.Management.ManagementException.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.ManagementException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementException" /> 是可序列化的类。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 目标。
              </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementException" />              类，具有指定的错误消息。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String,System.Exception)">
      <summary>
              初始化新的空实例 <see cref="T:System.Management.ManagementException" /> 类。
               如果 <paramref name="innerException" /> 参数不是 <see langword="null" />, ，处理内部异常的 catch 块中引发当前异常。
            </summary>
      <param name="message">
                描述错误的消息。
              </param>
      <param name="innerException">
                导致当前异常的异常。
              </param>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 序列化所需的数据 <see cref="T:System.Management.ManagementException" />。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 目标。
              </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementNamedValueCollection" /> 类，该类为空。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementNamedValueCollection" /> 类，该类可序列化并使用指定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" />。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                目标 (请参阅 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) 此序列化。
              </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>
              向集合中添加一个名为的值。
            </summary>
      <param name="name">
                新值的名称。
              </param>
      <param name="value">
                要与名称相关联的值。
              </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>
              创建集合的克隆。
               每个值被克隆。
               如果值不支持克隆，则 <see cref="T:System.NotSupportedException" /> 引发。
            </summary>
      <returns>
              集合中的新副本。
            </returns>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>
              从集合中删除单名的值。
               如果集合不包含具有指定名称的元素，该集合保持不变，并不会引发异常。
            </summary>
      <param name="name">
                要删除的值的名称。
              </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>
              从集合中移除所有项。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.ManagementObject" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 类指定的 WMI 对象路径。
               为提供的路径 <see cref="T:System.Management.ManagementPath" />。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> ，其中包含对 WMI 对象路径。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 类绑定到指定的 WMI 路径，其中包括指定其他选项。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 包含 WMI 路径。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> 包含用于绑定到 WMI 对象的其他选项。
                 此参数可能是默认选项，则要使用的情况下为 null。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 类绑定到指定的 WMI 路径，其中包含指定的选项。
            </summary>
      <param name="scope">
                一个 <see cref="T:System.Management.ManagementScope" /> 表示 WMI 对象驻留在其中的值范围。
                 在此版本中，范围只能是 WMI 命名空间。
              </param>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> WMI 路径表示为易于管理的对象。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> 指定附加选项可用来获取该对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 是可序列化的类。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 类指定的 WMI 对象路径。
               字符串形式提供的路径。
            </summary>
      <param name="path">
                一个 WMI 路径。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 类绑定到指定的 WMI 路径，其中包括指定其他选项。
               在此变体，可以将路径指定为一个字符串。
            </summary>
      <param name="path">
                指向对象的 WMI 路径。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> 表示选项来获取所指定的 WMI 对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObject" /> 类绑定到指定的 WMI 路径，并包含指定的选项。
               作用域和路径被指定为字符串。
            </summary>
      <param name="scopeString">
                WMI 对象的范围。
              </param>
      <param name="pathString">
                WMI 对象路径。
              </param>
      <param name="options">
                <see cref="T:System.Management.ObjectGetOptions" /> 表示用于获取 WMI 对象的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>
              创建对象的一个副本。
            </summary>
      <returns>
              复制的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>
              以异步方式将对象复制到其他位置。
            </summary>
      <param name="watcher">
                一个对象，它将接收操作的结果。
              </param>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 指定该对象应复制到其中的路径。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>
              以异步方式将对象复制到其他位置。
            </summary>
      <param name="watcher">
                一个对象，它将接收操作的结果。
              </param>
      <param name="path">
                该对象应复制到其中的路径。
              </param>
      <param name="options">
                有关应如何放置该对象的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>
              以异步方式将对象复制到其他位置。
            </summary>
      <param name="watcher">
                一个对象，它将接收操作的结果。
              </param>
      <param name="path">
                该对象应复制到其中的路径。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>
              以异步方式将对象复制到其他位置。
            </summary>
      <param name="watcher">
                一个对象，它将接收操作的结果。
              </param>
      <param name="path">
                该对象应复制到其中的路径。
              </param>
      <param name="options">
                有关应如何放置该对象的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>
              将对象复制到另一个位置。
            </summary>
      <param name="path">
                <see cref="T:System.Management.ManagementPath" /> 到复制对象。
              </param>
      <returns>
              复制对象的新路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>
              将对象复制到另一个位置。
            </summary>
      <param name="path">
                <see cref="T:System.Management.ManagementPath" /> 到复制对象。
              </param>
      <param name="options">
                有关应如何放置该对象的选项。
              </param>
      <returns>
              复制对象的新路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>
              将对象复制到另一个位置。
            </summary>
      <param name="path">
                该对象应复制到其中的路径。
              </param>
      <returns>
              复制对象的新路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>
              将对象复制到另一个位置。
            </summary>
      <param name="path">
                该对象应复制到其中的路径。
              </param>
      <param name="options">
                有关应如何放置该对象的选项。
              </param>
      <returns>
              复制对象的新路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>
              删除对象。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>
              删除对象。
            </summary>
      <param name="options">
                有关如何删除对象的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>
              删除对象。
            </summary>
      <param name="watcher">
                一个对象，它将接收操作的结果。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>
              删除对象。
            </summary>
      <param name="watcher">
                一个对象，它将接收操作的结果。
              </param>
      <param name="options">
                有关如何删除对象的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.Dispose">
      <summary>
              释放组件使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>
              将 WMI 类信息绑定到的管理对象。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>
              将以异步方式绑定到的管理对象。
            </summary>
      <param name="watcher">
                要接收事件的操作结果的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> 表示的方法的输入参数的列表。
            </summary>
      <param name="methodName">
                方法的名称。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementBaseObject" /> 包含对方法的输入的参数。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所必需进行反序列化此实例所表示的字段的数据。
            </summary>
      <param name="info">
                用序列化信息填充的对象。
              </param>
      <param name="context">
                将存储和检索序列化的数据的位置。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>
              获取与对象 （联系） 相关联的对象的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含相关的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>
              获取与对象 （联系） 以异步方式相关的对象的集合。
               此调用将立即返回，并在结果可用时调用委托。
            </summary>
      <param name="watcher">
                要使用来返回结果的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>
              获取与对象 （联系） 相关联的对象的集合。
            </summary>
      <param name="watcher">
                要使用来返回结果的对象。
              </param>
      <param name="relatedClass">
                相关对象的类。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
              获取与对象 （联系） 相关联的对象的集合。
            </summary>
      <param name="watcher">
                要使用来返回结果的对象。
              </param>
      <param name="relatedClass">
                相关对象的类。
              </param>
      <param name="relationshipClass">
                感兴趣的关系类。
              </param>
      <param name="relationshipQualifier">
                要在关系类中存在所需的限定符。
              </param>
      <param name="relatedQualifier">
                要在相关类中存在所需的限定符。
              </param>
      <param name="relatedRole">
                相关的类在关系中扮演的角色。
              </param>
      <param name="thisRole">
                此类在关系中扮演的角色。
              </param>
      <param name="classDefinitionsOnly">
                返回与查询匹配的实例的类定义。
              </param>
      <param name="options">
                有关如何执行查询的扩展的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>
              获取与对象 （联系） 相关联的对象的集合。
            </summary>
      <param name="relatedClass">
                相关对象的类。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含相关的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
              获取与对象 （联系） 相关联的对象的集合。
            </summary>
      <param name="relatedClass">
                相关对象的类。
              </param>
      <param name="relationshipClass">
                感兴趣的关系类。
              </param>
      <param name="relationshipQualifier">
                要在关系类中存在所需的限定符。
              </param>
      <param name="relatedQualifier">
                要在相关类中存在所需的限定符。
              </param>
      <param name="relatedRole">
                相关的类在关系中扮演的角色。
              </param>
      <param name="thisRole">
                此类在关系中扮演的角色。
              </param>
      <param name="classDefinitionsOnly">
                此方法返回时，它包含与查询匹配的实例的类定义。
              </param>
      <param name="options">
                有关如何执行查询的扩展的选项。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含相关的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>
              获取与对象关联的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含关联对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>
              获取与对象关联的集合。
            </summary>
      <param name="watcher">
                要使用来返回结果的对象。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>
              获取与对象关联的集合。
            </summary>
      <param name="watcher">
                要使用来返回结果的对象。
              </param>
      <param name="relationshipClass">
                要包括的关联。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
              获取与对象关联的集合。
            </summary>
      <param name="watcher">
                要使用来返回结果的对象。
              </param>
      <param name="relationshipClass">
                感兴趣的关系的类型。
              </param>
      <param name="relationshipQualifier">
                要在关系上存在的限定符。
              </param>
      <param name="thisRole">
                此对象在关系中的角色。
              </param>
      <param name="classDefinitionsOnly">
                此方法返回时，它包含的类定义将为结果集。
              </param>
      <param name="options">
                有关查询执行的扩展的选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>
              获取与对象关联的集合。
            </summary>
      <param name="relationshipClass">
                要包括的关联。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含关联对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
              获取与对象关联的集合。
            </summary>
      <param name="relationshipClass">
                感兴趣的关系的类型。
              </param>
      <param name="relationshipQualifier">
                要在关系上存在的限定符。
              </param>
      <param name="thisRole">
                此对象在关系中的角色。
              </param>
      <param name="classDefinitionsOnly">
                此方法返回时，它包含的类定义将为结果集。
              </param>
      <param name="options">
                有关查询执行的扩展的选项。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含关联对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>
              以异步方式调用该对象上的方法。
            </summary>
      <param name="watcher">
                一个 <see cref="T:System.Management.ManagementOperationObserver" /> 用来处理异步执行的进度和结果。
              </param>
      <param name="methodName">
                要执行的方法的名称。
              </param>
      <param name="inParameters">
                一个 <see cref="T:System.Management.ManagementBaseObject" /> 包含该方法的输入的参数。
              </param>
      <param name="options">
                <see cref="T:System.Management.InvokeMethodOptions" /> 包含用于执行该方法的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>
              以异步方式调用该对象上的方法。
            </summary>
      <param name="watcher">
                要接收操作的结果的对象。
              </param>
      <param name="methodName">
                要执行的方法的名称。
              </param>
      <param name="args">
                包含参数值的数组。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>
              调用上的 WMI 对象的方法。
               输入和输出参数表示为 <see cref="T:System.Management.ManagementBaseObject" /> 对象。
            </summary>
      <param name="methodName">
                要执行的方法的名称。
              </param>
      <param name="inParameters">
                一个 <see cref="T:System.Management.ManagementBaseObject" /> 保存方法的输入的参数。
              </param>
      <param name="options">
                <see cref="T:System.Management.InvokeMethodOptions" /> 包含用于执行该方法的其他选项。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementBaseObject" /> 包含输出参数和执行方法的返回值。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>
              调用该对象上的方法。
            </summary>
      <param name="methodName">
                要执行的方法的名称。
              </param>
      <param name="args">
                包含参数值的数组。
              </param>
      <returns>
              该方法返回的对象值。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>
              提交对对象所做的更改。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementPath" /> 包含已提交的对象的路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>
              以异步方式将更改提交到该对象。
            </summary>
      <param name="watcher">
                一个 <see cref="T:System.Management.ManagementOperationObserver" /> 用来处理进度和结果的异步操作。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>
              以异步方式提交对对象所做的更改并使用指定的选项。
            </summary>
      <param name="watcher">
                一个 <see cref="T:System.Management.ManagementOperationObserver" /> 用来处理进度和结果的异步操作。
              </param>
      <param name="options">
                一个 <see cref="T:System.Management.PutOptions" /> 用来指定用于提交操作的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>
              提交对对象所做的更改。
            </summary>
      <param name="options">
                有关如何提交所做的更改的选项。
              </param>
      <returns>
              一个 <see cref="T:System.Management.ManagementPath" /> 包含已提交的对象的路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>
              返回该对象的完整路径。
               这是默认对象实现的重写。
            </summary>
      <returns>
              对象的完整路径。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              将集合复制到一个数组。
            </summary>
      <param name="array">
                若要将复制到一个数组。
              </param>
      <param name="index">
                从其开始的索引。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>
              该集合中的项复制 <see cref="T:System.Management.ManagementBaseObject" /> 数组。
            </summary>
      <param name="objectCollection">
                目标数组中。
              </param>
      <param name="index">
                从其开始的索引。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>
              释放与该对象关联的资源。
               使用此对象的尝试调用此方法后，将导致 <see cref="T:System.ObjectDisposedException" /> 引发。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>
              处置对象所保留的资源。
               这是该对象的析构函数。
               使用析构函数语法表示终结器。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>
              返回集合的枚举数。
            </summary>
      <returns>
              可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>
              释放与该对象关联的资源。
               调用该方法后，尝试使用该对象将导致引发 <see cref="T:System.ObjectDisposedException" /> 异常。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>
              处置对象所保留的资源。
               这是该对象的析构函数。
               使用析构函数语法表示终结器。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>
              指示枚举数是否已移到了枚举中的下一个对象。
            </summary>
      <returns>
              如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>
              将枚举数重置到集合的开头。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              返回 <see cref="T:System.Collections.IEnumerator" /> ，它循环访问 <see cref="T:System.Management.ManagementObjectCollection" />。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.ManagementObjectCollection" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的新实例。
               此对象上的某些属性设置后，该对象可用于调用管理信息的查询。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类，用于调用指定的作用域中指定的查询。
            </summary>
      <param name="scope">
                一个 <see cref="T:System.Management.ManagementScope" /> 表示要在其中调用查询的范围。
              </param>
      <param name="query">
                <see cref="T:System.Management.ObjectQuery" /> 表示要调用的查询。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类可用来调用指定的查询中指定的范围，使用指定的选项。
            </summary>
      <param name="scope">
                一个 <see cref="T:System.Management.ManagementScope" /> 指定查询的范围。
              </param>
      <param name="query">
                <see cref="T:System.Management.ObjectQuery" /> 指定要调用的查询。
              </param>
      <param name="options">
                <see cref="T:System.Management.EnumerationOptions" /> 指定要用于查询的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类，用于调用指定的查询管理信息。
            </summary>
      <param name="query">
                <see cref="T:System.Management.ObjectQuery" /> 表示搜索器调用的查询。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类，用于调用指定的查询管理信息。
            </summary>
      <param name="queryString">
                要调用的对象的 WMI 查询。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类，用于调用指定的作用域中指定的查询。
            </summary>
      <param name="scope">
                在其中查询的范围。
              </param>
      <param name="queryString">
                要调用的查询。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类，用于调用指定的查询，在指定范围内，并使用指定的选项。
            </summary>
      <param name="scope">
                应在其中调用查询作用域。
              </param>
      <param name="queryString">
                要调用的查询。
              </param>
      <param name="options">
                <see cref="T:System.Management.EnumerationOptions" /> 指定查询的其他选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>
              调用指定的 WMI 查询并返回生成的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementObjectCollection" /> 包含与指定的查询匹配的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>
              以异步方式调用 WMI 查询并绑定到一个观察程序来提供的结果。
            </summary>
      <param name="watcher">
                观察程序引发由该操作触发的事件。
              </param>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.ManagementOperationObserver" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>
              取消所有未完成的操作。
            </summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>
              初始化为空的 <see cref="T:System.Management.ManagementPath" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementPath" /> 给定路径的类。
            </summary>
      <param name="path">
                 对象路径。
              </param>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>
              返回一份 <see cref="T:System.Management.ManagementPath" />。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>
              设置为新的类路径的路径。
               这意味着该路径必须有一个类名称，但没有键值。
            </summary>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>
              将路径设置为一个新 单独 对象路径。
               这意味着它是指向实例的路径，但没有任何键的值。
            </summary>
    </member>
    <member name="M:System.Management.ManagementPath.System#ICloneable#Clone">
      <summary>
              创建作为当前实例副本的新对象。
            </summary>
      <returns>
              作为此实例副本的新对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>
              以字符串表示形式返回完整对象路径。
            </summary>
      <returns>
              一个字符串，其中包含由此对象表示的完整对象路径。
               此值的值等效 <see cref="P:System.Management.ManagementPath.Path" /> 属性。
            </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>
              分析查询字符串，并相应地设置属性值。
               如果查询是有效的将分析类名属性和查询的条件属性。
            </summary>
      <param name="query">
                要分析的查询字符串。
              </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementScope" /> 类，具有默认值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementScope" /> 类，表示指定的范围路径。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 包含路径的服务器和命名空间 <see cref="T:System.Management.ManagementScope" />。
              </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementScope" /> 类，表示指定的范围路径，使用指定的选项。
            </summary>
      <param name="path">
                一个 <see cref="T:System.Management.ManagementPath" /> 包含路径的服务器和命名空间 <see cref="T:System.Management.ManagementScope" />。
              </param>
      <param name="options">
                <see cref="T:System.Management.ConnectionOptions" /> 包含连接选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementScope" /> 类，表示指定的范围路径。
            </summary>
      <param name="path">
                服务器和命名空间路径 <see cref="T:System.Management.ManagementScope" />。
              </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ManagementScope" /> 类，表示指定的范围路径，使用指定的选项。
            </summary>
      <param name="path">
                服务器和命名空间 <see cref="T:System.Management.ManagementScope" />。
              </param>
      <param name="options">
                一个 <see cref="T:System.Management.ConnectionOptions" /> 包含连接选项。
              </param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              一份新 <see cref="T:System.Management.ManagementScope" />。
            </returns>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>
              连接 <see cref="T:System.Management.ManagementScope" /> 到实际的 WMI 范围。
            </summary>
    </member>
    <member name="M:System.Management.ManagementScope.System#ICloneable#Clone">
      <summary>
              创建作为当前实例副本的新对象。
            </summary>
      <returns>
              作为此实例副本的新对象。
            </returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>
              向 <see cref="T:System.Management.MethodData" /> 中添加一个 <see cref="T:System.Management.MethodDataCollection" />。
               此重载将向集合添加不带参数的新方法。
            </summary>
      <param name="methodName">
                要添加的方法的名称。
              </param>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>
              向 <see cref="T:System.Management.MethodData" /> 中添加一个 <see cref="T:System.Management.MethodDataCollection" />。
               此重载将向集合添加具有指定的参数对象的新方法。
            </summary>
      <param name="methodName">
                要添加的方法的名称。
              </param>
      <param name="inParameters">
                <see cref="T:System.Management.ManagementBaseObject" /> 保存方法的输入的参数。
              </param>
      <param name="outParameters">
                <see cref="T:System.Management.ManagementBaseObject" /> 保存方法的输出参数。
              </param>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              副本 <see cref="T:System.Management.MethodDataCollection" /> 转换为数组。
            </summary>
      <param name="array">
                要将集合复制到数组。
              </param>
      <param name="index">
                从其开始的索引。
              </param>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>
              副本 <see cref="T:System.Management.MethodDataCollection" /> 到一个专用 <see cref="T:System.Management.MethodData" /> 数组。
            </summary>
      <param name="methodArray">
                要复制到目标数组 <see cref="T:System.Management.MethodData" /> 对象。
              </param>
      <param name="index">
                中从其开始复制的目标数组的索引。
              </param>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>
              返回的枚举数 <see cref="T:System.Management.MethodDataCollection" />。
            </summary>
      <returns>
              <see cref="T:System.Collections.IEnumerator" /> 用于循环访问集合。
            </returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>
              移动到 <see cref="T:System.Management.MethodDataCollection" /> 枚举中的下一个元素。
            </summary>
      <returns>
              如果枚举数成功地推进到下一个方法，则为 <see langword="true" />；如果枚举数越过集合的结尾，则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>
              将枚举数重置到 <see cref="T:System.Management.MethodDataCollection" /> 枚举的起始处。
            </summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>
              从 <see cref="T:System.Management.MethodData" /> 中移除 <see cref="T:System.Management.MethodDataCollection" />。
            </summary>
      <param name="methodName">
                要从集合中移除的方法的名称。
              </param>
    </member>
    <member name="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              返回 <see cref="T:System.Collections.IEnumerator" /> ，它循环访问 <see cref="T:System.Management.MethodDataCollection" />。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.MethodDataCollection" />。
            </returns>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.ObjectGetOptions" /> 获取 WMI 对象，使用默认值的类。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ObjectGetOptions" /> 获取 WMI 对象，使用指定的提供程序特定上下文的类。
            </summary>
      <param name="context">
                提供程序特定名称值对要传递给提供程序的上下文对象。
              </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ObjectGetOptions" /> 获取 WMI 对象，使用给定的选项值的类。
            </summary>
      <param name="context">
                提供程序特定名称值对要传递给提供程序的上下文对象。
              </param>
      <param name="timeout">
                要让该操作执行超时之前的时间长度。
                 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。
              </param>
      <param name="useAmendedQualifiers">
                <see langword="true" /> 如果返回的对象应包含已修正 （可识别区域设置的） 的限定符;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.ObjectQuery" /> 类未初始化的值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ObjectQuery" /> 特定查询字符串的类。
            </summary>
      <param name="query">
                查询的字符串表示形式。
              </param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.ObjectQuery" /> 特定查询字符串和语言的类。
            </summary>
      <param name="language">
                在其中指定此查询的查询语言。
              </param>
      <param name="query">
                查询的字符串表示形式。
              </param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>
              添加一个新 <see cref="T:System.Management.PropertyData" /> 、 没有赋值。
            </summary>
      <param name="propertyName">
                属性的名称。
              </param>
      <param name="propertyType">
                该属性的通用信息模型 (CIM) 类型。
              </param>
      <param name="isArray">
                <see langword="true" /> 若要指定该属性是数组类型;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>
              添加一个新 <see cref="T:System.Management.PropertyData" /> 用指定的值。
               值不能为 null，且必须转换为通用信息模型 (CIM) 类型。
            </summary>
      <param name="propertyName">
                新属性的名称。
              </param>
      <param name="propertyValue">
                （不能为 null） 的属性的值。
              </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>
              添加一个新 <see cref="T:System.Management.PropertyData" /> 使用指定的值和通用信息模型 (CIM) 类型。
            </summary>
      <param name="propertyName">
                属性的名称。
              </param>
      <param name="propertyValue">
                属性的值 （该值可以为 null）。
              </param>
      <param name="propertyType">
                属性的 CIM 类型。
              </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              副本 <see cref="T:System.Management.PropertyDataCollection" /> 转换为数组。
            </summary>
      <param name="array">
                要复制到数组 <see cref="T:System.Management.PropertyDataCollection" />。
              </param>
      <param name="index">
                从其开始复制的索引。
              </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>
              副本 <see cref="T:System.Management.PropertyDataCollection" /> 到一个专用 <see cref="T:System.Management.PropertyData" /> 对象数组。
            </summary>
      <param name="propertyArray">
                将包含要复制的目标数组 <see cref="T:System.Management.PropertyDataCollection" />。
              </param>
      <param name="index">
                中从其开始复制的目标数组的索引。
              </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>
              返回此枚举 <see cref="T:System.Management.PropertyDataCollection" />。
            </summary>
      <returns>
              可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。
            </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>
              移动到 <see cref="T:System.Management.PropertyDataCollection" /> 枚举中的下一个元素。
            </summary>
      <returns>
              如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>
              将枚举数重置到 <see cref="T:System.Management.PropertyDataCollection" /> 枚举的起始处。
            </summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>
              从 <see cref="T:System.Management.PropertyData" /> 中移除 <see cref="T:System.Management.PropertyDataCollection" />。
            </summary>
      <param name="propertyName">
                要删除的属性的名称。
              </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              返回 <see cref="T:System.Collections.IEnumerator" /> ，它循环访问 <see cref="T:System.Management.PropertyDataCollection" />。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.PropertyDataCollection" />。
            </returns>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Management.PutOptions" /> 类为 put 操作，使用默认值。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>
              新实例初始化 <see cref="T:System.Management.PutOptions" /> 提交 WMI 对象，使用指定的提供程序特定上下文的类。
            </summary>
      <param name="context">
                提供程序特定名称值对要传递给提供程序的上下文对象。
              </param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>
              新实例初始化 <see cref="T:System.Management.PutOptions" /> 提交 WMI 对象，使用指定的选项值的类。
            </summary>
      <param name="context">
                提供程序特定名称-值对对象传递给提供程序。
              </param>
      <param name="timeout">
                要让该操作执行超时之前的时间长度。
                 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。
              </param>
      <param name="useAmendedQualifiers">
                <see langword="true" /> 如果返回的对象应包含已修正 （可识别区域设置的） 的限定符;否则为 <see langword="false" />。
              </param>
      <param name="putType">
                提交要执行的类型 （更新或创建）。
              </param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>
              返回对象的副本。
            </summary>
      <returns>
              克隆的对象。
            </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>
              向 <see cref="T:System.Management.QualifierData" /> 中添加一个 <see cref="T:System.Management.QualifierDataCollection" />。
               此重载指定限定符的名称和值。
            </summary>
      <param name="qualifierName">
                名称 <see cref="T:System.Management.QualifierData" /> 要添加到 <see cref="T:System.Management.QualifierDataCollection" />。
              </param>
      <param name="qualifierValue">
                新限定符的值。
              </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
              向 <see cref="T:System.Management.QualifierData" /> 中添加一个 <see cref="T:System.Management.QualifierDataCollection" />。
               此重载指定的所有属性值 <see cref="T:System.Management.QualifierData" />。
            </summary>
      <param name="qualifierName">
                限定符名称。
              </param>
      <param name="qualifierValue">
                限定符的值。
              </param>
      <param name="isAmended">
                <see langword="true" /> 若要指定此限定符已修正 (<paramref name="flavor" />); 否则为 <see langword="false" />。
              </param>
      <param name="propagatesToInstance">
                <see langword="true" /> 若要将传播到实例; 此限定符否则为 <see langword="false" />。
              </param>
      <param name="propagatesToSubclass">
                <see langword="true" /> 若要将传播到子类; 此限定符否则为 <see langword="false" />。
              </param>
      <param name="isOverridable">
                <see langword="true" /> 若要指定此限定符的值是可重写的子类; 实例中否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              副本 <see cref="T:System.Management.QualifierDataCollection" /> 转换为数组。
            </summary>
      <param name="array">
                要复制到数组 <see cref="T:System.Management.QualifierDataCollection" />。
              </param>
      <param name="index">
                从其开始复制的索引。
              </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>
              副本 <see cref="T:System.Management.QualifierDataCollection" /> 到专用              <see cref="T:System.Management.QualifierData" /> 数组。
            </summary>
      <param name="qualifierArray">
                专用的数组 <see cref="T:System.Management.QualifierData" /> 要向其复制对象 <see cref="T:System.Management.QualifierDataCollection" />。
              </param>
      <param name="index">
                从其开始复制的索引。
              </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>
              返回的枚举数 <see cref="T:System.Management.QualifierDataCollection" />。
               此方法是强类型。
            </summary>
      <returns>
              可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。
            </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>
              移动到 <see cref="T:System.Management.QualifierDataCollection" /> 枚举中的下一个元素。
            </summary>
      <returns>
              如果枚举数已成功地推进到下一个元素，则为 <see langword="true" />；如果枚举数传递到集合的末尾，则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>
              将枚举数重置到 <see cref="T:System.Management.QualifierDataCollection" /> 枚举的起始处。
            </summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>
              删除 <see cref="T:System.Management.QualifierData" /> 从 <see cref="T:System.Management.QualifierDataCollection" /> 按名称。
            </summary>
      <param name="qualifierName">
                要移除的 <see cref="T:System.Management.QualifierData" /> 的名称。
              </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              返回 <see cref="T:System.Collections.IEnumerator" /> ，它循环访问 <see cref="T:System.Management.QualifierDataCollection" />。
            </summary>
      <returns>
              用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.QualifierDataCollection" />。
            </returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 架构查询使用给定的参数集的类。
               对于架构查询仅使用此构造函数︰ 第一个参数必须设置为 <see langword="true" />                。
            </summary>
      <param name="isSchemaQuery">
                <see langword="true" /> 表示这是架构查询;否则为 <see langword="false" /> 。
              </param>
      <param name="sourceObject">
                源类的路径。
              </param>
      <param name="relatedClass">
                相关的对象所需的基类。
              </param>
      <param name="relationshipClass">
                关系类型。
              </param>
      <param name="relatedQualifier">
                不必存在对相关对象所需的限定符。
              </param>
      <param name="relationshipQualifier">
                要在关系中存在所需的限定符。
              </param>
      <param name="relatedRole">
                相关的对象所需关系中担任的角色。
              </param>
      <param name="thisRole">
                源类是需要在关系中扮演的角色。
              </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。
               如果指定的字符串可以成功地解析为 WQL 查询，它被视为可查询字符串中;否则，它被假定可查询的源对象的路径。
               在这种情况下，假定查询为实例查询。
            </summary>
      <param name="queryOrSourceObject">
                查询字符串或源对象的路径。
              </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类用于在给定的源对象和相关的类。
               假定该查询以实例查询 （而不是架构查询）。
            </summary>
      <param name="sourceObject">
                此查询的源对象的路径。
              </param>
      <param name="relatedClass">
                相关的对象的类。
              </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 给定的参数集的类。
               假定该查询以实例查询 （而不是架构查询）。
            </summary>
      <param name="sourceObject">
                源对象的路径。
              </param>
      <param name="relatedClass">
                相关的对象所需的类。
              </param>
      <param name="relationshipClass">
                关系类型。
              </param>
      <param name="relatedQualifier">
                不必存在对相关对象所需的限定符。
              </param>
      <param name="relationshipQualifier">
                要在关系中存在所需的限定符。
              </param>
      <param name="relatedRole">
                相关的对象所需关系中担任的角色。
              </param>
      <param name="thisRole">
                源对象是需要在关系中扮演的角色。
              </param>
      <param name="classDefinitionsOnly">
                <see langword="true" /> 若要返回的类定义将相关的对象;否则为 false。
              </param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>
              生成的当前属性值根据查询字符串。
            </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>
              创建对象的一个副本。
            </summary>
      <returns>
              复制的对象。
            </returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>
              分析查询字符串，并相应地设置属性值。
            </summary>
      <param name="query">
                要分析的查询字符串。
              </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.RelationshipQuery" /> 架构查询使用给定的参数集的类。
               此构造函数用于架构查询，因此第一个参数必须为 true。
            </summary>
      <param name="isSchemaQuery">
                <see langword="true" /> 表示这是架构查询;否则为 <see langword="false" />。
              </param>
      <param name="sourceObject">
                此查询的源类的路径。
              </param>
      <param name="relationshipClass">
                为其查询的关系的类型。
              </param>
      <param name="relationshipQualifier">
                需要存在于关系类上的限定符。
              </param>
      <param name="thisRole">
                源类是需要在关系中扮演的角色。
              </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。
               如果指定的字符串可以成功地解析为 WQL 查询，它被视为可查询字符串中;否则，它被假定可查询的源对象的路径。
               在这种情况下，假定查询为实例查询。
            </summary>
      <param name="queryOrSourceObject">
                查询字符串或此查询的类名。
              </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.RelationshipQuery" /> 给定的源对象和关系类的类。
               假定该查询以实例查询 （而不是架构查询）。
            </summary>
      <param name="sourceObject">
                 此查询的源对象的路径。
              </param>
      <param name="relationshipClass">
                 为其查询的关系的类型。
              </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Management.RelationshipQuery" /> 给定的参数集的类。
               假定该查询以实例查询 （而不是架构查询）。
            </summary>
      <param name="sourceObject">
                此查询的源对象的路径。
              </param>
      <param name="relationshipClass">
                为其查询的关系的类型。
              </param>
      <param name="relationshipQualifier">
                需要在关系对象中提供的限定符。
              </param>
      <param name="thisRole">
                源对象是需要在关系中扮演的角色。
              </param>
      <param name="classDefinitionsOnly">
                此方法返回时，它包含一个布尔值，该值指示返回结果对象的类定义。
              </param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>
              生成的当前属性值根据查询字符串。
            </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>
              创建对象的一个副本。
            </summary>
      <returns>
              复制的对象。
            </returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>
              分析查询字符串，并相应地设置属性值。
            </summary>
      <param name="query">
                要分析的查询字符串。
              </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.SelectQuery" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.SelectQuery" /> 架构查询，可以选择指定一个条件的类。
            </summary>
      <param name="isSchemaQuery">
                <see langword="true" /> 表示这是架构查询;否则为 <see langword="false" />。
                 一个 <see langword="false" /> 值是否在此构造函数中无效。
              </param>
      <param name="condition">
                要将应用于窗体的类的结果集的条件。
              </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.SelectQuery" /> 类指定的类名称或指定的查询。
            </summary>
      <param name="queryOrClassName">
                整个查询，也要在查询中使用的类名称。
                 此类中的分析器会尝试解析为有效的 WQL SELECT 查询字符串。
                 如果分析器不成功，则假定字符串是类的名称。
              </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.SelectQuery" /> 带有指定的类名称和条件的类。
            </summary>
      <param name="className">
                要选择的查询中的类的名称。
              </param>
      <param name="condition">
                要在查询中应用的条件。
              </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>
              新实例初始化 <see cref="T:System.Management.SelectQuery" /> 带有指定的类名称和条件，选择指定的属性的类。
            </summary>
      <param name="className">
                从中选择类的名称。
              </param>
      <param name="condition">
                要应用于所选类的实例的条件。
              </param>
      <param name="selectedProperties">
                属性名称，用于在查询结果中返回一个数组。
              </param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>
              生成的当前属性值根据查询字符串。
            </summary>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>
              创建对象的一个副本。
            </summary>
      <returns>
              复制的对象。
            </returns>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>
              分析查询字符串，并相应地设置属性值。
            </summary>
      <param name="query">
                要分析的查询字符串。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 类根据给定的查询字符串或事件类名称。
            </summary>
      <param name="queryOrEventClassName">
                查询表示完整的事件查询或事件类的名称的字符串。
                 该对象将尝试解析为有效的事件查询字符串。
                 如果不成功，分析器将假定该参数表示一个事件的类名。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 指定的事件的类名称，使用指定的条件的类。
            </summary>
      <param name="eventClassName">
                查询的事件类的名称。
              </param>
      <param name="condition">
                要将应用于指定类的事件的条件。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 类，具有指定的事件的类名、 条件以及分组间隔。
            </summary>
      <param name="eventClassName">
                查询的事件类的名称。
              </param>
      <param name="condition">
                要将应用于指定类的事件的条件。
              </param>
      <param name="groupWithinInterval">
                指定的时间间隔从该处 WMI 发送一个 <paramref name="aggregate event" />, ，而不是很多事件。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 与所指定的事件的类名、 条件、 分组间隔和分组属性的类。
            </summary>
      <param name="eventClassName">
                查询的事件类的名称。
              </param>
      <param name="condition">
                要将应用于指定类的事件的条件。
              </param>
      <param name="groupWithinInterval">
                指定的时间间隔从该处 WMI 发送一个 <paramref name="aggregate event" />, ，而不是很多事件。
              </param>
      <param name="groupByPropertyList">
                中的事件应分组所依据的事件类的属性。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 类指定的事件的类，具有指定的滞后时间。
            </summary>
      <param name="eventClassName">
                查询的事件类的名称。
              </param>
      <param name="withinInterval">
                一个 <see cref="T:System.TimeSpan" /> 值，该值指定用于接收此事件可接受的延迟。
                 在其中没有显式事件提供程序与查询所请求，并且 WMI 需要轮询的条件的情况下使用此值。
                 此间隔为的最大必须传递事件通知之前可经过的时间量。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 用指定的事件的类名、 轮询间隔和条件。
            </summary>
      <param name="eventClassName">
                查询的事件类的名称。
              </param>
      <param name="withinInterval">
                一个 <see cref="T:System.TimeSpan" /> 值，该值指定用于接收此事件可接受的延迟。
                 在没有所请求的查询没有显式事件提供程序并且需要 WMI 轮询的条件的情况下使用此值。
                 此间隔为的最大必须传递事件通知之前可经过的时间量。
              </param>
      <param name="condition">
                要将应用于指定类的事件的条件。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlEventQuery" /> 与所指定的事件的类名、 条件、 分组间隔、 分组属性和指定的数目的事件的类。
            </summary>
      <param name="eventClassName">
                Event 类对其进行查询的名称。
              </param>
      <param name="withinInterval">
                一个 <see cref="T:System.TimeSpan" /> 值，该值指定用于接收此事件可接受的延迟。
                 在其中没有显式事件提供程序与查询所请求，并且 WMI 需要轮询的条件的情况下使用此值。
                 此间隔为的最大必须传递事件通知之前可经过的时间量。
              </param>
      <param name="condition">
                要将应用于指定类的事件的条件。
              </param>
      <param name="groupWithinInterval">
                指定的时间间隔从该处 WMI 发送一个 <paramref name="aggregate event" />, ，而不是很多事件。
              </param>
      <param name="groupByPropertyList">
                中的事件应分组所依据的事件类的属性。
              </param>
      <param name="havingCondition">
                要应用到的事件数的条件。
              </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>
              生成的当前属性值根据查询字符串。
            </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>
              创建对象的一个副本。
            </summary>
      <returns>
              复制的对象。
            </returns>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>
              分析查询字符串，并相应地设置属性值。
            </summary>
      <param name="query">
                要分析的查询字符串。
              </param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>
              初始化 <see cref="T:System.Management.WqlObjectQuery" /> 类的新实例。
               这是默认构造函数。
            </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Management.WqlObjectQuery" /> 类初始化为指定的查询。
            </summary>
      <param name="query">
                 数据查询的表示形式。
              </param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>
              创建对象的一个副本。
            </summary>
      <returns>
              复制的对象。
            </returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>
              获取该操作的完成状态。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementStatus" /> 枚举值。
            </returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>
              获取 WMI 对象内的其他状态信息。
               这可能为 null。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> ，包含有关操作的完成状态信息。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>
              获取或设置要用于此连接中的操作的 COM 身份验证级别。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.AuthenticationLevel" /> 枚举值，该值指示用于连接到本地计算机或远程计算机的 COM 身份验证级别。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>
              获取或设置要用于对指定的用户进行身份验证的颁发机构。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> ，它定义了用于进行身份验证指定的用户的权限。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>
              获取或设置一个值，该值指示是否需要为连接操作启用用户特权。
               当执行的操作需要某一用户权限才可用 （例如，重新启动计算机） 时，才应使用此属性。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否需要为连接操作启用用户特权。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>
              获取或设置要用于此连接中的操作的 COM 模拟级别。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ImpersonationLevel" /> 枚举值，该值指示用于连接到 WMI 的模拟级别。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>
              获取或设置要用于连接操作的区域设置。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 用于连接到 WMI 中的区域设置的值。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>
              设置为指定用户的密码。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 用于连接到 WMI 中的密码值。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.SecurePassword">
      <summary>
              设置为指定用户的密码。
            </summary>
      <returns>
              返回一个 SecureString 值，用于连接到 WMI 中的密码。
            </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>
              获取或设置要用于连接操作的用户名。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值用作连接到 WMI 中的用户名。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>
              获取或设置块操作的块大小。
               当枚举整个集合，WMI 将返回组中的指定大小的结果。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 用于块操作中的块大小值。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>
              获取或设置一个值，该值指示是否 直接访问 请求指定的类，而不考虑其超级类或派生的类到 WMI 提供程序。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否 直接访问 到 WMI 提供程序为指定类的请求。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>
              获取或设置一个值，该值指示是否对返回的对象应具有可定位信息在其中。
               这样可以确保系统属性，如 __PATH, ，__RELPATH, ，和 __SERVER, ，均非空。
               此标志仅可用于在查询中，并且在枚举中被忽略。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示返回的对象是否应在其中具有可定位信息。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>
              获取或设置一个值，该值指示是否将递归枚举请求到从指定的超类派生的所有类。
               如果 <see langword="false" />, ，只有直接派生的类成员的返回。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否将递归枚举请求到从指定的超类派生的所有类。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>
              获取或设置一个值，该值指示查询是否应返回的结果而不是实际结果集的原型。
               此标志用于原型制作。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示查询是否应返回的结果而不是实际结果集的原型。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>
              获取或设置一个值，该值指示是否应同步或半同步方式执行调用的操作。
               如果此属性设置为 <see langword="true" />, 则会调用枚举，则调用立即返回。
               当遍历结果的集合，将产生实际检索结果。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否应同步或半同步方式执行调用的操作。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>
              获取或设置一个值，该值指示是否将集合假定为可重绕。
               如果 <see langword="true" />, ，集合中的对象将保留可用于多个枚举。
               如果 <see langword="false" />, ，集合仅可以枚举一次。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否将集合假定为可重绕。
            </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>
              获取或设置一个值，指示从 WMI 返回的对象是否应包含修正的信息。
               通常情况下，修正的信息是可本地化信息连接到 WMI 对象，如对象和属性说明。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示从 WMI 返回的对象是否应包含修正的信息。
            </returns>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>
              获取已传递的 WMI 事件。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> ，其中包含传递的 WMI 事件。
            </returns>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>
              获取或设置块操作的块大小。
               当等待事件，此值指定要在返回之前等待的事件数。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值指示操作的块的块大小。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>
              获取或设置一个值，该值指示是否通过管理检测可见实现此接口的类的实例。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否通过管理检测可见实现此接口的类的实例。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>
              获取或设置一个值，该值指示是否通过管理检测可见实现此接口的类的实例。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否通过管理检测可见实现此接口的类的实例。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>
              获取或设置的检测由此类提供的类型。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.Instrumentation.InstrumentationType" /> 枚举值，该值包含的检测由此类提供的类型。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>
              获取或设置此规范类的基类的名称。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含此规范类的基类的名称。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>
              获取或设置在此程序集中的检测实例和事件的命名空间。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含用于检测实例和在此程序集中的事件的命名空间名称。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>
              获取或设置安全描述符，以只允许指定的用户或组来运行应用程序提供支持此程序集检测。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含只允许指定的用户或组来运行应用程序提供支持此程序集检测的安全描述符。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <summary>
              获取受管实体的名称。
            </summary>
      <returns>
              返回一个包含托管实体的名称的 T:System.String 值。
            </returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>
              获取或设置此类安装程序选项。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含此类的安装程序选项。
            </returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>
              获取管理对象的类的路径。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementPath" /> ，其中包含管理对象的类的类路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>
              获取访问权限通过 [] 表示法的属性值。
               此属性是索引器 <see cref="T:System.Management.ManagementBaseObject" /> 类。
               可以使用某个类型定义的默认索引属性，但不是能显式定义您自己。
               但是，指定 expando 类上的属性将自动提供的默认索引属性，其类型是对象，其索引类型是字符串。
            </summary>
      <param name="propertyName">
                感兴趣的属性的名称。
              </param>
      <returns>
              返回 <see cref="T:System.Object" /> 值，该值包含特定的类属性的管理对象。
            </returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>
              获取一套 <see cref="T:System.Management.PropertyData" /> 对象描述了管理对象的属性。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.PropertyDataCollection" /> ，它持有管理对象的属性。
            </returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>
              获取的集合 <see cref="T:System.Management.QualifierData" /> 管理对象中定义的对象。
               集合中的每个元素均包含信息如 限定符 名称、 值和 风格。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.QualifierDataCollection" /> ，它持有的管理对象的限定符。
            </returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>
              获取 WMI 系统属性的管理对象 （例如，类名、 服务器和命名空间） 的集合。
               WMI 系统属性名称以"__"开头。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.PropertyDataCollection" /> ，其中包含管理对象的系统属性。
            </returns>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>
              获取包含层次结构顶部从此类继承层次结构中的所有 WMI 类的数组。
            </summary>
      <returns>
              一个字符串集合，其中包含所有继承层次结构中的此类的 WMI 类的名称。
            </returns>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>
              获取或设置的集合 <see cref="T:System.Management.MethodData" /> 这些对象表示在 WMI 类中定义的方法。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.MethodDataCollection" /> 表示在 WMI 类中定义的方法。
            </returns>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>
              获取或设置到的 WMI 类的路径 <see cref="T:System.Management.ManagementClass" /> 绑定对象。
            </summary>
      <returns>
              对象的类的路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>
              获取回显从触发该事件的操作返回的操作上下文。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 操作上下文的值。
            </returns>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>
              获取或设置用来监视事件的选项。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.EventWatcherOptions" /> ，其中包含用于监视事件的事件选项。
            </returns>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>
              获取或设置要应用于事件的条件。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.EventQuery" /> ，其中包含要应用于事件的查询。
            </returns>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>
              获取或设置要在其中监视的事件 （命名空间或范围） 的作用域。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementScope" /> ，其中包含作用域监视事件的顺序。
            </returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>
              获取报告的 WMI 中，这会导致此异常的错误代码。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementStatus" /> 枚举值，该值包含错误代码。
            </returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>
              获取由 WMI 提供的扩展的错误对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> 包含扩展的错误信息。
            </returns>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>
              获取与此集合中的指定名称关联的值。
               在 C# 中，此属性是 <see cref="T:System.Management.ManagementNamedValueCollection" /> 类的索引器。
            </summary>
      <param name="name">
                要返回的值的名称。
              </param>
      <returns>
              返回 <see cref="T:System.Object" /> 与此集合中指定的名称相关联的值。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>
              获取或设置对象的类的路径。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementPath" /> 对象的类表示的路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>
              获取或设置检索对象时要使用的其他信息。
            </summary>
      <returns>
              <see cref="T:System.Management.ObjectGetOptions" /> 检索对象时要使用。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>
              获取或设置对象的 WMI 路径。
            </summary>
      <returns>
              一个 <see cref="T:System.Management.ManagementPath" /> 表示对象的路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>
              获取或设置此对象驻留在其中的作用域。
            </summary>
      <returns>
              此对象驻留在其中的范围。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>
              获取指示集合中的对象数的值。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值指示在集合中的对象的数目。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>
              获取一个值，该值指示对象是否已同步。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示对象是否已同步。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>
              获取该枚举数指向的当前 <see cref="T:System.Management.ManagementBaseObject" />。
            </summary>
      <returns>
              枚举中的当前对象。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取集合中的当前对象。
            </summary>
      <returns>
              返回集合中的当前元素。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  创建枚举器后，已修改该集合。
                </exception>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>
              获取要用于同步的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 值，该值表示要用于同步的对象。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>
              获取或设置如何搜索对象的选项。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.EnumerationOptions" /> ，它包含有关对 WMI 对象的搜索选项。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>
              获取或设置要在搜索器 （即，条件应用于搜索管理对象） 中调用的查询。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ObjectQuery" /> ，其中包含要在搜索器中调用的查询。
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>
              获取或设置在其中查找 （作用域表示的 WMI 命名空间） 的对象的范围。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementScope" /> 作用域 （命名空间） 包含要在其中查找 WMI 对象。
            </returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>
              获取或设置一个 WMI 上下文对象。
               这是要传递到的 WMI 提供程序支持自定义操作的上下文信息的名称 / 值对列表。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementNamedValueCollection" /> 包含 WMI 上下文信息。
            </returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>
              获取或设置要应用于操作的超时值。
               请注意，对于返回集合的操作，此超时适用于通过生成的集合，该操作的枚举 ( <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" />                   属性适用于后者)。
               此属性用于指示应以半同步方式执行的操作。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" /> ，它定义要应用于操作的超时时间。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>
              获取或设置路径的类部分。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 保留类路径部分的值。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>
              获取或设置指定无作用域时使用的默认作用域路径。
               默认作用域是 \\.\root\cimv2，并且可以通过设置此属性更改。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementPath" /> ，其中包含指定无作用域时使用的默认作用域 （命名空间） 路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>
              获取或设置一个值，该值指示这是否类路径。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示这是否为类路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>
              获取或设置一个值，该值指示这是否实例路径。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示这是否为实例路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>
              获取或设置一个值，该值指示这是否 单独 实例路径。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示这是否为单一实例路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>
              获取或设置命名空间部分路径。
               请注意这不包括服务器名称，可以单独检索。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含命名空间部分路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>
              获取或设置对象中的字符串表示形式的完整路径。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含完整路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>
              获取或设置相对路径︰ 类名和仅键。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含相对路径。
            </returns>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>
              获取或设置路径的服务器部分。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含服务器名称。
            </returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>
              获取或设置用于定义查询字符串的格式的查询字符串中的查询语言。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含查询字符串的格式。
            </returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>
              获取或设置文本格式的查询。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含查询。
            </returns>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>
              获取一个值，该值指示是否 <see cref="T:System.Management.ManagementScope" /> 当前绑定到 WMI 服务器和命名空间。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示作用域当前是否绑定到 WMI 服务器和命名空间。
            </returns>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>
              获取或设置用于建立 WMI 连接的选项。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ConnectionOptions" /> ，其中包含用于建立 WMI 连接的选项。
            </returns>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>
              获取或设置的路径 <see cref="T:System.Management.ManagementScope" />。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementPath" /> 包含作用域 （命名空间） 的路径。
            </returns>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>
              获取该方法的输入的参数。
               每个参数被描述为对象中的属性。
               如果某个参数同时入和签出，它将显示在这两 <see cref="P:System.Management.MethodData.InParameters" /> 和 <see cref="P:System.Management.MethodData.OutParameters" /> 属性。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> 包含对方法的输入的参数。
            </returns>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>
              获取该方法的名称。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含方法的名称。
            </returns>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>
              获取在其中该方法首先引入类继承层次结构中的管理类的名称。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含在其中该方法首先引入类继承层次结构中的类的名称。
            </returns>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>
              获取方法的输出参数。
               每个参数被描述为对象中的属性。
               如果参数既是入和签出，它将出现在 <see cref="P:System.Management.MethodData.InParameters" /> 和 <see cref="P:System.Management.MethodData.OutParameters" /> 属性。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> 包含该方法的输出参数。
            </returns>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>
              获取集合中的方法中定义的限定符。
               每个元素的类型是 <see cref="T:System.Management.QualifierData" /> 和包含的信息，如 限定符 名称、 值和 风格。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.QualifierDataCollection" /> 包含该方法的限定符。
            </returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>
              获取中的对象数 <see cref="T:System.Management.MethodDataCollection" /> 集合。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值表示在集合中的对象的数目。
            </returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>
              获取一个值，该值指示是否同步该对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示对象是否已同步。
            </returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>
              获取指定 <see cref="T:System.Management.MethodData" /> 从 <see cref="T:System.Management.MethodDataCollection" />。
            </summary>
      <param name="methodName">
                请求的方法的名称。
              </param>
      <returns>
              返回 <see cref="T:System.Management.MethodData" /> 包含集合中的指定方法的方法数据。
            </returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>
              返回 <see cref="T:System.Management.MethodDataCollection" /> 枚举中的当前 <see cref="T:System.Management.MethodData" />。
            </summary>
      <returns>
              集合中的当前 <see cref="T:System.Management.MethodData" /> 项。
            </returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取集合中的当前对象。
            </summary>
      <returns>
              返回集合中的当前元素。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  创建枚举器后，已修改该集合。
                </exception>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>
              获取要用于同步的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 值，该值表示要用于同步的对象。
            </returns>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>
              获取或设置一个值，指示从 WMI 返回的对象是否应包含修正的信息。
               通常情况下，修正的信息是可本地化信息连接到 WMI 对象，如对象和属性说明。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示从 WMI 返回的对象是否应包含修正的信息。
            </returns>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>
              获取已将该对象的标识。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementPath" /> 其中包含已放置的对象的路径。
            </returns>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>
              获取新返回的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementBaseObject" /> 包含新返回的对象。
            </returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>
              获取当前操作已完成的工作量。
               这是始终小于或等于 <see cref="P:System.Management.ProgressEventArgs.UpperBound" />。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值表示当前操作已完成的工作量。
            </returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>
              获取或设置有关操作的进度的可选附加信息。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含有关操作的进度信息。
            </returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>
              获取所需操作已完成工作的总量。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值表示要由该操作完成的工作的总量。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>
              获取一个值，该值指示属性是否为数组。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示属性是否为数组。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>
              获取一个值，该值指示属性是否已在当前的 WMI 类中定义。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示属性是否已在当前的 WMI 类中定义。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>
              获取属性的名称。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含属性名称。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>
              获取在其中引入了属性层次结构中的 WMI 类的名称。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含在其中引入了属性层次结构中的 WMI 类的名称。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>
              获取在属性上定义的限定符集。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.QualifierDataCollection" /> 包含组的属性上定义的限定符。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>
              获取属性的 CIM 类型。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.CimType" /> 枚举值，该值表示该属性的 CIM 类型。
            </returns>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>
              获取或设置该属性的当前值。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 值，该值表示属性的值。
            </returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>
              获取中的对象数 <see cref="T:System.Management.PropertyDataCollection" />。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值表示在集合中的对象的数目。
            </returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>
              获取一个值，该值指示对象是否已同步。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示对象是否已同步。
            </returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>
              获取指定的属性从 <see cref="T:System.Management.PropertyDataCollection" />, ，使用 [] 语法。
               此属性是索引器 <see cref="T:System.Management.PropertyDataCollection" /> 类。
            </summary>
      <param name="propertyName">
                要检索的属性的名称。
              </param>
      <returns>
              返回 <see cref="T:System.Management.PropertyData" /> 包含在集合中的指定属性的数据。
            </returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>
              获取 <see cref="T:System.Management.PropertyDataCollection" /> 枚举中的当前 <see cref="T:System.Management.PropertyData" />。
            </summary>
      <returns>
              集合中的当前 <see cref="T:System.Management.PropertyData" /> 元素。
            </returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取集合中的当前对象。
            </summary>
      <returns>
              返回集合中的当前元素。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  创建枚举器后，已修改该集合。
                </exception>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>
              获取要用于同步的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 值，该值包含要用于同步的对象。
            </returns>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>
              获取或设置要为对象执行的提交类型。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.PutType" /> 表示要执行的对象的提交类型的枚举值。
            </returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>
              获取或设置一个值，指示从 WMI 返回的对象是否应包含修正的信息。
               通常情况下，修正的信息是可本地化信息连接到 WMI 对象，如对象和属性说明。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示从 WMI 返回的对象是否应包含修正的信息。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>
              获取或设置一个值，该值指示是否已修正限定符。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否已修正限定符。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>
              获取一个值，该值指示限定符此类上本地定义的还是已传播从基类。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示限定符此类上本地定义的还是已传播从基类。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>
              获取或设置一个值，该值指示当传播时，是否可以重写限定符的值。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示当传播时，是否可以重写限定符的值。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>
              表示限定符的名称。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含限定符的名称。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>
              获取或设置一个值，该值指示是否应将该限定符传播到类的实例。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否应将该限定符传播到类的实例。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>
              获取或设置一个值，该值指示是否应将该限定符传播到类的子类。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否应将该限定符传播到类的子类。
            </returns>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>
              获取或设置的限定符的值。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 值，该值包含限定符的值。
            </returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>
              获取的数 <see cref="T:System.Management.QualifierData" /> 中的对象 <see cref="T:System.Management.QualifierDataCollection" />。
            </summary>
      <returns>
              返回 <see cref="T:System.Int32" /> 值，该值表示在集合中的对象的数目。
            </returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>
              获取一个值，该值指示对象是否已同步。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示对象是否已同步。
            </returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>
              获取指定 <see cref="T:System.Management.QualifierData" /> 从 <see cref="T:System.Management.QualifierDataCollection" />。
            </summary>
      <param name="qualifierName">
                名称 <see cref="T:System.Management.QualifierData" /> 于中访问 <see cref="T:System.Management.QualifierDataCollection" />。
              </param>
      <returns>
              返回 <see cref="T:System.Management.QualifierData" /> 包含在集合中的指定限定符的数据。
            </returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>
              获取或设置 <see cref="T:System.Management.QualifierDataCollection" /> 枚举中的当前 <see cref="T:System.Management.QualifierData" />。
            </summary>
      <returns>
              集合中的当前 <see cref="T:System.Management.QualifierData" /> 元素。
            </returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取集合中的当前对象。
            </summary>
      <returns>
              返回集合中的当前元素。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  创建枚举器后，已修改该集合。
                </exception>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>
              获取要用于同步的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Object" /> 值要用于同步。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>
              获取或设置一个值，该值的所有实例符合查询，返回它们的类定义。
               此参数才是有效的实例查询。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> ，指示对于符合查询的所有实例，它们的类定义了要返回的值。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>
              获取或设置一个值，该值指示此数据库架构查询还是实例查询。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示这是否为架构查询。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>
              获取或设置终结点对象 （相关类） 的类。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含相关的类名。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>
              获取或设置需要在相关对象上定义的限定符。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含相关对象所需的限定符的名称。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>
              获取或设置返回的相关的对象，应在该关系中扮演的角色。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含相关对象的角色。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>
              获取或设置关系 （关联） 的类型。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含关系类名。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>
              获取或设置需要在关系对象中定义的限定符。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含所需的关系对象的限定符的名称。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>
              获取或设置要用于该查询的源对象。
               对于实例查询，这通常是实例路径。
               对于架构查询，这通常是类名。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含要用于该查询的对象的路径。
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>
              获取或设置关系中应扮演源对象的角色。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含此对象的角色。
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>
              获取或设置一个值，指示要返回相关关系对象的类定义。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示要返回相关关系对象的类定义。
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>
              获取或设置一个值，该值指示此查询架构查询还是实例查询。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示此查询是否为架构查询。
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>
              获取或设置查询中所需的关系对象的类。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含关系类名。
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>
              获取或设置关系对象上所需的限定符。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含所需的关系对象的限定符的名称。
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>
              获取或设置此查询的源对象。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含要用于该查询的对象的路径。
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>
              获取或设置关系中的源对象的角色。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含此对象的角色。
            </returns>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>
              获取或设置要从查询中选择的类名。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含在查询中的类的名称。
            </returns>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>
              获取或设置要在 SELECT 查询中应用的条件。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含要应用于 SELECT 查询的条件。
            </returns>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>
              获取或设置一个值，该值指示此查询架构查询还是实例查询。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" /> 值，该值指示查询是否为架构查询。
            </returns>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>
              获取或设置查询中 <see cref="T:System.Management.SelectQuery" /> 对象，以字符串形式。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含查询。
            </returns>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>
              获取或设置数组的属性名称来查询中选择。
            </summary>
      <returns>
              返回 <see cref="T:System.Collections.Specialized.StringCollection" /> 包含要在查询中选择的属性的名称。
            </returns>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>
              获取该操作的完成状态。
            </summary>
      <returns>
              返回 <see cref="T:System.Management.ManagementStatus" /> 包含操作的状态。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>
              获取或设置要应用于指定类的事件的条件。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含条件在事件查询。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>
              获取或设置查询的事件类。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含事件类的名称在事件查询。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>
              获取或设置要用于进行分组的相同类型的事件的事件中的属性。
            </summary>
      <returns>
              返回 <see cref="T:System.Collections.Specialized.StringCollection" /> 包含要用于进行分组的相同类型的事件的事件中的属性。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>
              获取或设置要用于对相同类型的事件进行分组的时间间隔。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" /> 值，该值包含用于对相同类型的事件进行分组的时间间隔。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>
              获取或设置要应用于聚合各种事件，根据接收的事件数的条件。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含应用于聚合各种事件，根据接收的事件数的条件。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>
              获取查询的语言。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含在编写这一查询的查询语言。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>
              获取或设置表示查询的字符串。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含查询。
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>
              获取或设置要在此查询中使用的轮询间隔。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" /> 值，该值包含轮询间隔事件中使用的查询。
            </returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>
              获取查询的语言。
            </summary>
      <returns>
              返回 <see cref="T:System.String" /> 值，该值包含查询的语言。
            </returns>
    </member>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>
              描述要用于连接到 WMI 的身份验证级别。
               这适用于 COM 连接到 WMI。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>
              默认 COM 身份验证级别。
               WMI 使用的默认 Windows 身份验证设置。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>
              无 COM 身份验证。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>
              连接级 COM 身份验证。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>
              调用级 COM 身份验证。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>
              数据包级 COM 身份验证。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>
              数据包完整性级 COM 身份验证。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>
              数据包隐私级 COM 身份验证。
            </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>
              之前，应保持身份验证级别。
            </summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>
              描述对于属性，可能的 CIM 类型 限定符, ，或方法参数。
            </summary>
    </member>
    <member name="F:System.Management.CimType.None">
      <summary>
              Null 值。
            </summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>
              有符号的 8 位整数。
               此值对应于 <see cref="T:System.SByte" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>
              无符号的 8 位整数。
               此值对应于 <see cref="T:System.Byte" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>
              16 位有符号整数。
               此值对应于 <see cref="T:System.Int16" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>
              无符号的 16 位整数。
               此值对应于 <see cref="T:System.UInt16" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>
              16 位有符号整数。
               此值对应于 <see cref="T:System.Int32" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>
              无符号的 32 位整数。
               此值对应于 <see cref="T:System.UInt32" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>
              64 位有符号整数。
               此值对应于 <see cref="T:System.Int64" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>
              64 位无符号整数。
               此值对应于 <see cref="T:System.UInt64" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>
              浮点的 32 位数字。
               此值对应于 <see cref="T:System.Single" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>
              一个浮点 64 位数字。
               此值对应于 <see cref="T:System.Double" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>
              一个布尔值。
               此值对应于 <see cref="T:System.Boolean" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>
              一个字符串。
               此值对应于 <see cref="T:System.String" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>
              日期或时间值，由 DMTF 日期/时间格式字符串中表示︰ yyyymmddHHMMSS.mmmmmmsUUU, ，其中 yyyymmdd 年/月/日; 中的日期 HHMMSS 是时间以小时/分钟/秒; 表示 是 6 位数字; 微秒数和 sUUU 是符号 (+ 或-) 和 3 个数字 UTC 偏移量。
               此值对应于 <see cref="T:System.DateTime" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>
              对另一个对象的引用。
               它是通过包含所引用对象的路径的字符串表示。
               此值对应于 <see cref="T:System.Int16" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>
              一个 16 位字符。
               此值对应于 <see cref="T:System.Char" /> 类型。
            </summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>
              嵌套的对象。
               请注意嵌入的对象不同于引用中，在其中嵌入的对象不具有路径，其生存期与包含对象的生存期相同。
               此值对应于 <see cref="T:System.Object" /> 类型。
            </summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>
              定义代码生成器支持的语言。
            </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>
              用于生成 C# 代码的值。
            </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>
              用于生成 JScript 代码的值。
            </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>
              用于生成 Visual Basic 代码的值。
            </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VJSharp">
      <summary>
              用于生成 Visual J# 代码的值。
            </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.Mcpp">
      <summary>
              用于生成托管 c + + 代码的值。
            </summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>
              描述可与使用的对象比较模式 <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" />。
               请注意，可以组合这些值。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>
              一种比较所比较的对象的所有元素的模式。
               值︰ 0。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>
              一种模式，将进行比较的对象，并忽略 限定符。
               值︰ 1。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>
              将忽略对象，即在服务器和它们的来源，对其他对象的比较中的命名空间的源的一种模式。
               值︰ 2。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>
              将忽略属性的默认值的一种模式。
               在比较类时，此值才有意义。
               值︰ 4。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>
              假定要比较的对象都是同一个类的实例的一种模式。
               因此，此值导致的实例相关信息的比较。
               使用此标志来优化性能。
               如果对象不属于同一个类，则结果不确定。
               值︰ 8。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>
              一种比较不区分大小写的方式的字符串值的模式。
               这适用于字符串和限定符值。
               始终不区分大小写的方式比较属性和限定符的名称，是否或不指定此标志。
               值︰ 16。
            </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>
              一种模式，将忽略限定符 风格。
               此标志仍限定符值考虑在内，但会忽略风格差别，如传播规则，并替代限制。
               值︰ 32。
            </summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>
              包含事件数据以进行 <see cref="E:System.Management.ManagementOperationObserver.Completed" /> 事件。
            </summary>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>
              表示用来处理 <see cref="E:System.Management.ManagementOperationObserver.Completed" /> 事件的方法。
            </summary>
      <param name="sender">
                为其调用此方法的对象的实例。
              </param>
      <param name="e">
                <see cref="T:System.Management.CompletedEventArgs" /> ，指定调用事件的原因。
              </param>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>
              指定用于建立 WMI 连接所需的所有设置。
            </summary>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>
              指定的选项以删除管理对象。
            </summary>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>
              为进行查询和枚举相关的选项对象提供基类。
            </summary>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>
              包含事件数据以进行 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件。
            </summary>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>
              表示用来处理 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件的方法。
            </summary>
      <param name="sender">
                为其调用此方法的对象的实例。
              </param>
      <param name="e">
                <see cref="T:System.Management.EventArrivedEventArgs" /> ，指定调用事件的原因。
              </param>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>
              表示一个 WMI 事件查询。
            </summary>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>
              指定用于管理事件监视的选项。
            </summary>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>
              描述要用于连接到 WMI 的模拟级别。
            </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>
              默认模拟。
            </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>
              隐藏调用方的身份的匿名 COM 模拟级别。
               此模拟级别，对 WMI 的调用可能会失败。
            </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>
              允许对象查询调用方的凭据的标识级别 COM 模拟级别。
               此模拟级别，对 WMI 的调用可能会失败。
            </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>
              允许对象使用调用方的凭据的模拟级别 COM 模拟级别。
               这是推荐的模拟级别为 WMI 调用。
            </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>
              允许对象允许其他对象使用调用方的凭据的委托级别 COM 模拟级别。
               仅在 Windows 2000 支持此级别，但可以使用 WMI 调用可能会造成不必要的安全风险。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>
              表示从 <see cref="T:System.Management.Instrumentation.BaseEvent" /> 中派生的类，这些类为已知的管理事件类。
               这些派生类继承 <see cref="T:System.Management.Instrumentation.IEvent" /> 的实现，该实现允许通过 <see cref="M:System.Management.Instrumentation.BaseEvent.Fire" /> 方法触发事件。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>
              安装已检测的程序集。
               若要使用此默认项目安装程序，在程序集中从 <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> 派生类。
               不需要重写任何方法。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>
              指定管理检测事件的源。
               已知实现此接口的对象是管理检测事件的源。
               而是应由非派生自 <see cref="T:System.Management.Instrumentation.BaseEvent" /> 的类实现此接口。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>
              导致 management instrumentation 忽略被检测类的相关成员。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>
              指定管理检测实例的源。
               已知实现此接口的对象是管理检测实例的源。
               而是应由非派生自 <see cref="T:System.Management.Instrumentation.Instance" /> 的类实现此接口。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>
              表示已知为 management instrumentation 实例类的派生类。
               这些派生类继承 <see cref="T:System.Management.Instrumentation.IInstance" /> 的实现，该实现允许通过 <see cref="P:System.Management.Instrumentation.IInstance.Published" /> 属性发布实例。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>
              提供 Helper 函数，该函数用于公开管理事件和数据。
               每个应用程序域都有此类的一个实例。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>
              指定一个类提供事件或实例检测。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>
              指定由一个类提供的检测的类型。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>
              该类提供管理检测的实例。
            </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>
              该类提供管理检测的事件。
            </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>
              该类定义管理检测的抽象类。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>
              指定此程序集提供管理检测。
               此属性应在每个程序集出现一次。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>
              允许被检测类或其成员通过 Management Instrumentation 表示替代名称。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>
              安装检测程序集。
               在一个程序集的项目安装程序中包含此安装程序类的一个实例，该程序集包含检测。
            
              注意：WMI .NET 库现在视为处于最终状态，且没有可用于会影响这些库的非安全性相关问题的进一步开发、增强或更新。
              MI API 应用于所有新的开发。
            </summary>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>
              指定管理方法调用的选项。
            </summary>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>
              包含管理对象的基本元素。
               它用作更具体的管理对象类的基类。
            </summary>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>
              表示一个通用信息模型 (CIM) 管理类。
               管理类是 WMI 类，如 Win32_LogicalDisk, ，该类型可表示一个磁盘驱动器，并 Win32_Process, ，它表示的进程 Notepad.exe 等。
               此类的成员可以访问 WMI 数据，使用一个特定的 WMI 类路径。
               有关更多信息，请参阅 MSDN Library(网址为 http://www.microsoft.com/china/msdn/library) 上 Windows Management Instrumentation 文档中的“Win32 类”。
            </summary>
    </member>
    <member name="T:System.Management.ManagementDateTimeConverter">
      <summary>
              提供一些方法将 DMTF 日期时间和时间间隔转换为符合 CLR 的 <see cref="T:System.DateTime" /> 和 <see cref="T:System.TimeSpan" /> 格式，反之亦然。
            </summary>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>
              表示虚拟基类以包含 WMI 事件的事件数据。
            </summary>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>
              基于指定的临时事件通知订阅 事件查询。
            </summary>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>
              表示管理异常。
            </summary>
    </member>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>
              表示适合用作 WMI 操作上下文信息的命名值的集合。
               名称不区分大小写。
            </summary>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>
              表示 WMI 实例。
            </summary>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>
              表示不同的通过 WMI 检索到的管理对象集合。
               此集合中的对象属于 <see cref="T:System.Management.ManagementBaseObject" />的派生类型，其中包括 <see cref="T:System.Management.ManagementObject" /> 和 <see cref="T:System.Management.ManagementClass" />。
               集合可以通过执行 WMI 查询的结果 <see cref="T:System.Management.ManagementObjectSearcher" />, ，或通过检索到的管理对象的指定类型的枚举 <see cref="T:System.Management.ManagementClass" /> 代表该类型。
               此外，这可以是的管理的对象关联与特定的管理的对象的指定方式在这种情况下通过一种方法将如检索该集合的集合 <see cref="M:System.Management.ManagementObject.GetRelated" />。
               可以使用将遍历该集合 <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> ，并且可以检查或操作以执行各种管理任务中它的对象。
            </summary>
    </member>
    <member name="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator">
      <summary>
              表示集合的枚举数。
            </summary>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>
              检索指定的查询所基于的管理对象的集合。
               此类是一个检索管理信息的使用频率较高的入口点。
               例如，可用于枚举所有磁盘驱动器、 网络适配器、 进程和更多管理的对象在系统上，或用于查询所有网络连接正常运行的服务已暂停，依次类推。
                实例化时，此类的实例将作为输入以表示 WMI 查询 <see cref="T:System.Management.ObjectQuery" /> 或其派生，并根据需要 <see cref="T:System.Management.ManagementScope" /> 表示要执行中的查询的 WMI 命名空间。
               它也可以采用其他高级的选项 <see cref="T:System.Management.EnumerationOptions" />。
               当 <see cref="M:System.Management.ManagementObjectSearcher.Get" /> 调用该对象上的方法时， <see cref="T:System.Management.ManagementObjectSearcher" /> 指定范围内执行给定的查询，并返回匹配的查询中的管理对象的集合 <see cref="T:System.Management.ManagementObjectCollection" />。
            </summary>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>
              管理异步操作和句柄管理信息和以异步方式接收到的事件。
            </summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>
              为所有选项对象提供一个抽象基类。
            </summary>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>
              提供用于分析和生成 WMI 对象的路径的包装。
            </summary>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>
              提供的所有管理查询对象的一个抽象基类。
            </summary>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>
              表示用于管理操作的范围 （命名空间）。
            </summary>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>
              对当前定义的所有 WMI 错误代码的类进行描述。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>
              操作已成功。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>
              在没有更多的对象可用时，会返回此值，返回的对象数小于请求，或在枚举末尾的数量。
               如果值为 0 的参数调用该方法，它也会返回。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>
              重写的属性已被删除。
               返回此值以指示已由于删除恢复原始的非重写值。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>
              比较的项 （如对象和类） 不相同。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>
              呼叫已超时。
               这不是错误条件;因此，某些结果返回了。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>
              没有更多数据是可从枚举;用户应终止枚举。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>
              已经取消了操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>
              正在请求仍;但是，结果尚不可用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>
              在结果集中的一个枚举，检测到的同一个对象的多个副本。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>
              用户未接收所有请求的对象由于无法访问的资源 （而不是安全冲突）。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>
              调用失败。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>
              找不到该对象。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>
              当前用户没有权限执行的操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>
              提供程序在初始化后失败。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>
              出现类型不匹配。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>
              没有足够的内存用于该操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>
              上下文对象不是有效的。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>
              调用的参数之一是不正确。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>
              该资源，通常为远程服务器当前不可用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>
              出现内部、 严重和意外错误。
               此错误报告给 Microsoft 技术支持部门。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>
              远程会话期间，损坏了一个或多个网络数据包。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>
              不支持此功能或操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>
              指定的超类无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>
              找不到指定的命名空间。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>
              指定的实例不是有效的。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>
              指定的类无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>
              在架构中引用的提供程序没有相应的注册。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>
              在架构中引用的提供程序已注册不正确或不完整。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>
              COM 找不到架构中引用的提供程序。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>
              一个组件，如提供程序，由于内部原因初始化失败。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary>
               发生了网络错误阻止正常操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>
              所请求的操作无效。
               此错误通常适用于删除类或属性的尝试无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>
              查询在语法上有效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>
              不支持请求的查询语言。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>
              在 put 操作中，指定了 wbemChangeFlagCreateOnly 标记，但该实例已存在。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>
              不能对限定符执行添加操作，因为所属的对象不允许重写。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>
              用户试图删除不为其所有的限定符。
               限定符从父类继承。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>
              用户试图删除不为其所有属性。
               该属性从父类继承。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>
              客户端所做的调用的顺序出乎意料和非法。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>
              用户请求了非法操作，如生成从实例类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>
              没有非法尝试在不能为键属性上指定一个键限定符。
               密钥对象的类定义中指定，不能更改基于每个实例。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>
              当前对象不是有效的类定义。
               不完整，或使用 WMI 尚未注册，就会对其进行使用 <see cref="M:System.Management.ManagementObject.Put" />（)。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>
              留待将来使用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>
              留待将来使用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>
              正在尝试修改的属性是只读的。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>
              提供程序无法执行请求的操作，如请求太复杂的查询、 检索实例、 创建或更新类、 删除类或枚举类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>
              尝试进行的更改使派生的类无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>
              已尝试删除或修改具有实例的类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>
              留待将来使用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>
              为可能不为空，例如通过键、 索引或空白限定符标记的属性指定的值为 null。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>
              提供为限定符的值不是合法的限定符类型。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>
              为属性指定的 CIM 类型无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>
              请求已超出范围值时，或与类型不兼容。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>
              非法尝试使一个类的单一实例，例如当从非 singleton 类派生的类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>
              指定的 CIM 类型无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>
              请求的方法不可用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>
              该方法为提供的参数是无效的。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>
              试图获取系统的属性的限定符。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>
              无法识别属性类型。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>
              内部或由用户已取消一个异步过程。
               请注意，由于计时和异步操作的性质，该操作可能不具有已真正取消。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>
              处在关闭过程中 WMI 时，用户请求了一个操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>
              尝试重新使用现有的超类，方法名称和签名不匹配。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>
              一个或多个参数值，例如查询文本，是过于复杂或不受支持。
               WMI 请求以重试该操作与简单的参数。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>
              方法调用中缺少参数。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>
              方法参数具有无效的 ID 限定符。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>
              一个或多个方法参数的 ID 限定符的顺序。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>
              一种方法的返回值具有一个 ID 限定符。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>
              指定的对象路径无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>
              没有足够的可用磁盘空间以继续操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>
              提供的缓冲区太小，无法容纳枚举器中的所有对象，或读取一个字符串属性。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>
              提供程序不支持请求的 put 的操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>
              封送处理期间遇到一个不正确的类型或版本的对象。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>
              封送处理期间遇到一个不正确的类型或版本的数据包。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>
              数据包具有不受支持的版本。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>
              该数据包已损坏。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>
              对不匹配限定符，例如将 [ManagementKey] 放在而不是属性的对象上进行了尝试。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>
              已在 CIM 方法中声明了重复的参数。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>
              留待将来使用。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>
              事件的传递已失败。
               提供程序可能会选择再次引发该事件。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>
              指定的风格句柄无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>
              尝试创建一个引用，它是循环 （例如，从其自身派生类）。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>
              不支持指定的类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>
              尝试更改项时实例或派生的类已经开始使用键。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>
              尝试更改索引时实例或派生的类所使用的索引。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>
              尝试创建比的类所支持的当前版本的更多属性。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>
              使用派生类中的冲突类型重新定义属性。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>
              试图在派生类中重写非可重写限定符。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>
              一种方法是使用派生类中相冲突的签名重新声明。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>
              尝试执行方法未标有 [已实现] 相关的任何类中。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>
              尝试执行标记为 [已禁用] 的方法。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>
              刷新程序正忙于处理另一个操作。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>
              筛选的查询在语法上无效。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>
              筛选查询的 FROM 子句引用不是一个事件类别的类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>
              相应的组内子句在未使用 GROUP BY 子句。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>
              使用 GROUP BY 子句。
               不支持对所有属性执行聚合运算。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>
              在不是嵌入的对象的属性使用了点表示法。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>
              GROUP BY 子句引用的属性，则嵌入的对象而无需使用点表示法。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>
              事件提供程序 登记查询 (__EventProviderRegistration) 未指定为其提供事件的类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>
              请求向导来备份或还原存储库时 WinMgmt.exe 正在使用它。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>
              异步传送队列从溢出 事件使用者 由于太慢。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>
              操作失败，因为客户端没有所需的安全特权。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>
              运算符不能用于此属性类型。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>
              用户在本地连接上指定用户名、 密码或颁发机构。
               用户必须使用一个空的用户名和密码，并依赖于默认安全性。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>
              当其超类不是抽象，已使抽象类。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>
              在 put 操作上没有指定的 WBEM_FLAG_USE_AMENDED_QUALIFIERS 标志的情况下使用修改后的对象。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>
              客户端收回对象的速度足够快从枚举。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>
              提供程序注册与系统事件域重叠。
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>
              此查询中未使用过 WITHIN 子句。
            </summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>
              包含有关 WMI 方法的信息。
            </summary>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>
              表示集合中可用的方法集。
            </summary>
    </member>
    <member name="T:System.Management.MethodDataCollection.MethodDataEnumerator">
      <summary>
              表示 <see cref="T:System.Management.MethodDataCollection" /> 中的 <see cref="T:System.Management.MethodData" /> 对象的枚举数。
            </summary>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>
              指定选项可用来获取管理对象。
            </summary>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>
              包含事件数据以进行 <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> 事件。
            </summary>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>
              表示用来处理 <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> 事件的方法。
            </summary>
      <param name="sender">
                为其调用此方法的对象的实例。
              </param>
      <param name="e">
                <see cref="T:System.Management.ObjectPutEventArgs" /> ，指定调用事件的原因。
              </param>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>
              表示返回实例或类的管理查询。
            </summary>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>
              包含事件数据以进行 <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> 事件。
            </summary>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>
              表示用来处理 <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> 事件的方法。
            </summary>
      <param name="sender">
                为其调用此方法的对象的实例。
              </param>
      <param name="e">
                <see cref="T:System.Management.ObjectReadyEventArgs" /> ，指定调用事件的原因。
              </param>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>
              包含事件数据以进行 <see cref="E:System.Management.ManagementOperationObserver.Progress" /> 事件。
            </summary>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>
              表示用来处理 <see cref="E:System.Management.ManagementOperationObserver.Progress" /> 事件的方法。
            </summary>
      <param name="sender">
                为其调用此方法的对象的实例。
              </param>
      <param name="e">
                <see cref="T:System.Management.ProgressEventArgs" /> ，指定调用事件的原因。
              </param>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>
              表示 WMI 属性有关的信息。
            </summary>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>
              表示 WMI 对象的属性集。
            </summary>
    </member>
    <member name="T:System.Management.PropertyDataCollection.PropertyDataEnumerator">
      <summary>
              表示 <see cref="T:System.Management.PropertyDataCollection" /> 中的 <see cref="T:System.Management.PropertyData" /> 对象的枚举数。
            </summary>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>
              指定提交管理对象更改的选项。
            </summary>
    </member>
    <member name="T:System.Management.PutType">
      <summary>
              描述将对象保存到 WMI 时使用的可能影响 <see cref="M:System.Management.ManagementObject.Put" />。
            </summary>
    </member>
    <member name="F:System.Management.PutType.None">
      <summary>
              没有变化。
            </summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>
              更新现有对象不创建新对象。
            </summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>
              创建一个对象，仅;不会更新现有对象。
            </summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>
              保存对象、 更新现有对象是否或创建新的对象。
            </summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>
              包含关于 WMI 限定符的信息。
            </summary>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>
              表示 <see cref="T:System.Management.QualifierData" /> 对象集合。
            </summary>
    </member>
    <member name="T:System.Management.QualifierDataCollection.QualifierDataEnumerator">
      <summary>
              表示 <see cref="T:System.Management.QualifierDataCollection" /> 中的 <see cref="T:System.Management.QualifierData" /> 对象的枚举数。
            </summary>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>
              表示一种 WQL ASSOCIATORS OF 数据的查询。
               它可以用于实例和架构查询。
            </summary>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>
              表示一种 WQL REFERENCES OF 数据的查询。
            </summary>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>
              表示数据 WQL SELECT 查询。
            </summary>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>
              包含事件数据以进行 <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> 事件。
            </summary>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>
              表示用来处理 <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> 事件的方法。
            </summary>
      <param name="sender">
                为其调用此方法的对象的实例。
              </param>
      <param name="e">
                <see cref="T:System.Management.StoppedEventArgs" /> ，指定调用事件的原因。
              </param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>
              描述可与 <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" /> 一起使用的可能的文本格式。
            </summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>
              托管对象格式
            </summary>
    </member>
    <member name="F:System.Management.TextFormat.CimDtd20">
      <summary>
              与 CIM DTD 版本 2.0 相对应的 XML DTD。
            </summary>
    </member>
    <member name="F:System.Management.TextFormat.WmiDtd20">
      <summary>
              与 CIM DTD 版本 2.0 相对应的 XML WMI DTD。
               使用此值将启用一些特定于 WMI 的扩展，如嵌入对象。
            </summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>
              表示在一个 WMI 事件查询 WQL 格式。
            </summary>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>
              表示 WQL 格式的 WMI 数据查询。
            </summary>
    </member>
  </members>
</doc>