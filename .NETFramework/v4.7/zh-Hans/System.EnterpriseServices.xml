<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.EnterpriseServices</name>
  </assembly>
  <members>
    <member name="F:System.EnterpriseServices.BOID.rgb">
      <summary>
              表示一个包含数据的数组。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfRMSupported">
      <summary>
              指定零。
               此字段为保留。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfRMSupportedRetaining">
      <summary>
              指定零。
               此字段为保留。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfTCSupported">
      <summary>
              表示一个位屏蔽，它指示 <see langword="grfTC" /> 此事务实现支持的标志。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfTCSupportedRetaining">
      <summary>
              指定零。
               此字段为保留。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.isoFlags">
      <summary>
              指定零。
               此字段为保留。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.isoLevel">
      <summary>
              表示与此事务对象相关联的隔离级别。
               ISOLATIONLEVEL_UNSPECIFIED 指示没有隔离级别已指定。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.uow">
      <summary>
              表示与此事务关联的工作单元。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Activity" /> 类的新实例。
            </summary>
      <param name="cfg">
                一个 <see cref="T:System.EnterpriseServices.ServiceConfig" /> ，包含要使用的服务的配置信息。
              </param>
      <exception cref="T:System.PlatformNotSupportedException">
                  <see cref="T:System.EnterpriseServices.Activity" /> 当前平台上不支持。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)">
      <summary>
              以异步方式运行的指定的用户定义的批处理工作。
            </summary>
      <param name="serviceCall">
                一个 <see cref="T:System.EnterpriseServices.IServiceCall" /> 用来实现批处理工作的对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Activity.BindToCurrentThread">
      <summary>
              绑定到当前线程的用户定义的工作。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)">
      <summary>
              以同步方式运行的指定的用户定义的批处理工作。
            </summary>
      <param name="serviceCall">
                一个 <see cref="T:System.EnterpriseServices.IServiceCall" /> 用来实现批处理工作的对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Activity.UnbindFromThread">
      <summary>
              取消绑定由提交的批处理工作 <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> 或 <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> 从在其运行的批处理工作线程的方法。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationAccessControlAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ApplicationAccessControlAttribute" /> 类，并启用 COM + 安全配置。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationAccessControlAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ApplicationAccessControlAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Value" /> 属性，该值指示是否启用 COM 安全配置。
            </summary>
      <param name="val">
                <see langword="true" /> 若要允许的安全性，则配置否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationActivationAttribute.#ctor(System.EnterpriseServices.ActivationOption)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ApplicationActivationAttribute" /> 类设置指定 <see cref="T:System.EnterpriseServices.ActivationOption" /> 值。
            </summary>
      <param name="opt">
                <see cref="T:System.EnterpriseServices.ActivationOption" /> 值之一。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationIDAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ApplicationIDAttribute" /> 类指定表示的 COM + 应用程序的应用程序 ID 的 GUID。
            </summary>
      <param name="guid">
                与 COM + 应用程序关联的 GUID。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationNameAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" /> 类，同时指定要用于安装的组件的 COM + 应用程序的名称。
            </summary>
      <param name="name">
                COM + 应用程序的名称。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationQueuingAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" /> 类的新实例，并且为程序集启用队列支持以及初始化 <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />、<see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" /> 和 <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.AutoCompleteAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" /> 类，同时指定应用程序应自动调用 <see cref="M:System.EnterpriseServices.ContextUtil.SetComplete" /> 如果事务成功完成。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.AutoCompleteAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" /> 类中，指定是否 COM + <see langword="AutoComplete" /> 已启用。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用 <see langword="AutoComplete" /> 在 COM + 对象; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)">
      <summary>
              创建手动使用事务 Internet 协议 (TIP) 事务中登记的对象。
            </summary>
      <param name="url">
                提示指定的 URL，一个事务。
              </param>
      <param name="t">
                类型。
              </param>
      <returns>
              请求的事务。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)">
      <summary>
              创建在手动事务中登记的对象。
            </summary>
      <param name="transaction">
                <see cref="T:System.EnterpriseServices.ITransaction" /> 或 <see cref="T:System.Transactions.Transaction" /> 对象，它指定事务。
              </param>
      <param name="t">
                指定的类型。
              </param>
      <returns>
              请求的事务。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute" /> 类设置 <see cref="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value" /> 属性设置为 <see langword="true" />。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute" /> 类根据需要设置 <see cref="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value" /> 属性设置为 <see langword="false" />。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用补偿资源管理器 (CRM);否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 类的新实例。
            </summary>
      <param name="compensator">
                补偿器的名称。
              </param>
      <param name="description">
                补偿器的说明。
              </param>
      <param name="flags">
                <see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> 值的按位组合。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 类的新实例。
            </summary>
      <param name="compensator">
                一种表示补偿器的类型。
              </param>
      <param name="description">
                补偿器的说明。
              </param>
      <param name="flags">
                <see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> 值的按位组合。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize">
      <summary>
              在被垃圾回收器回收之前，请释放当前分配器的资源。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog">
      <summary>
              强制转换成磁盘的所有日志记录。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort">
      <summary>
              对事务执行立即中断调用。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord">
      <summary>
              并不提供的最后一个日志记录已写入此接口的此实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)">
      <summary>
              将非结构化的日志记录写入日志。
            </summary>
      <param name="record">
                要写入日志的日志记录。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Finalize">
      <summary>
              释放当前的资源 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> 垃圾回收器回收之前。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Finalize">
      <summary>
              释放当前的资源 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" /> 垃圾回收器回收之前。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.GetEnumerator">
      <summary>
              补偿资源管理器 (CRM) 监视器集合中返回的 clerk 的枚举。
            </summary>
      <returns>
              描述集合中的分配一个枚举器。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Populate">
      <summary>
              获取分配器集合对象，这是 Clerk 的当前状态的快照。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>
              在中止阶段期间将一条日志记录传递到补偿资源管理器 (CRM) 补偿。
            </summary>
      <param name="rec">
                要传递的日志记录。
              </param>
      <returns>
              <see langword="true" /> 如果应忘记传递的记录;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)">
      <summary>
              通知补偿资源管理器 (CRM) 补偿的事务完成后，中止阶段和即将传递记录。
            </summary>
      <param name="fRecovery">
                <see langword="true" /> 若要开始中止阶段;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)">
      <summary>
              通知在事务完成后的提交阶段和即将传递记录补偿资源管理器 (CRM) 补偿。
            </summary>
      <param name="fRecovery">
                <see langword="true" /> 若要开始提交阶段;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare">
      <summary>
              通知在事务完成后的在准备阶段和即将传递记录补偿资源管理器 (CRM) 补偿。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>
              在提交阶段向顺序传递一条日志记录。
            </summary>
      <param name="rec">
                要转发的日志记录。
              </param>
      <returns>
              <see langword="true" /> 如果应忘记传递的记录;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort">
      <summary>
              通知补偿资源管理器 (CRM) 补偿已收到中止阶段期间可用的所有日志记录。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit">
      <summary>
              通知补偿资源管理器 (CRM) 补偿传递提交阶段期间可用的所有日志记录。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare">
      <summary>
              通知补偿资源管理器 (CRM) 补偿的已准备阶段期间可用的所有日志记录。
            </summary>
      <returns>
              如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>
              在准备阶段中按向前顺序提供一条日志记录。
            </summary>
      <param name="rec">
                要转发的日志记录。
              </param>
      <returns>
              <see langword="true" /> 如果应忘记传递的记录;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ComponentAccessControlAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ComponentAccessControlAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ComponentAccessControlAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ComponentAccessControlAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.ComponentAccessControlAttribute.Value" /> 属性以指示是否启用 COM + 安全配置。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用对组件; 的调用上的安全检查否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.COMTIIntrinsicsAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.COMTIIntrinsicsAttribute" /> 类设置 <see cref="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value" /> 属性设置为 <see langword="true" />。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.COMTIIntrinsicsAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.COMTIIntrinsicsAttribute" /> 类，并启用的设置 <see cref="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value" /> 属性。
            </summary>
      <param name="val">
                <see langword="true" /> 如果 COMTI 上下文属性传递到 COM + 上下文;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ConstructionEnabledAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ConstructionEnabledAttribute" /> 类，并初始化的默认设置 <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled" /> 和 <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Default" />。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ConstructionEnabledAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ConstructionEnabledAttribute" /> 类设置 <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled" /> 为指定的值。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用 COM + 对象构造支持;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.DisableCommit">
      <summary>
              设置同时 <see langword="consistent" /> 位与 <see langword="done" /> 位为 <see langword="false" /> COM + 上下文中。
            </summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  COM + 上下文中没有才可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.EnableCommit">
      <summary>
              集 <see langword="consistent" /> 位为 <see langword="true" /> 和 <see langword="done" /> 位为 <see langword="false" /> COM + 上下文中。
            </summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  COM + 上下文中没有才可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)">
      <summary>
              从 COM + 上下文中返回的已命名的属性。
            </summary>
      <param name="name">
                请求的属性的名称。
              </param>
      <returns>
              上下文已命名的属性。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)">
      <summary>
              确定调用方是否在指定的角色。
            </summary>
      <param name="role">
                要检查的角色的名称。
              </param>
      <returns>
              <see langword="true" /> 如果调用方指定的角色;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.IsDefaultContext">
      <summary>
              确定是否在默认上下文中激活服务的组件。
               默认上下文中激活维护不具有 COM + 目录信息的组件。
            </summary>
      <returns>
              true 服务的组件是否已激活默认上下文中; 否则为 false。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetAbort">
      <summary>
              集 <see langword="consistent" /> 位为 <see langword="false" /> 和 <see langword="done" /> 位为 <see langword="true" /> COM + 上下文中。
            </summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetComplete">
      <summary>
              集 <see langword="consistent" /> 位与 <see langword="done" /> 位为 <see langword="true" /> COM + 上下文中。
            </summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)">
      <summary>
              设置 COM+ 上下文的命名属性。
            </summary>
      <param name="name">
                要设置的属性的名称。
              </param>
      <param name="value">
                表示要设置的属性值的对象。
              </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM+ 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.DescriptionAttribute.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.DescriptionAttribute" /> 类的新实例。
            </summary>
      <param name="desc">
                程序集 （应用程序）、 组件、 方法或接口的说明。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.EventClassAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.EventClassAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.EventTrackingEnabledAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.EventTrackingEnabledAttribute" /> 类，并启用事件跟踪。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.EventTrackingEnabledAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.EventTrackingEnabledAttribute" /> 类，并可以选择禁用事件跟踪。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用事件跟踪;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ExceptionClassAttribute.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ExceptionClassAttribute" /> 类的新实例。
            </summary>
      <param name="name">
                播放机激活并播放消息路由到的死信队列之前的异常类的名称。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.IAsyncErrorNotify.OnError(System.Int32)">
      <summary>
              处理错误以异步方式成批工作。
            </summary>
      <param name="hresult">
                以异步方式运行的批处理工作时出现的错误的 HRESULT。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.IISIntrinsicsAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.IISIntrinsicsAttribute" /> 类，并启用 ASP 内部值的访问。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.IISIntrinsicsAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.IISIntrinsicsAttribute" /> 类，并可以选择禁用对 ASP 内部值的访问。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用对 ASP 内部值; 访问否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 类设置 <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> 和 <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> 为其默认值的属性。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> 类，并可以选择禁用队列支持。
            </summary>
      <param name="enabled">
                <see langword="true" /> 若要启用队列支持;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.AppDomainHelper.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.AppDomainHelper" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.AppDomainHelper.Finalize">
      <summary>
              在通过垃圾回收将 <see cref="T:System.ComponentModel.Component" /> 回收之前，释放非托管资源并执行其他清理操作。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.AssemblyLocator.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.AssemblyLocator" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.ClientRemotingConfig" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              启用 SOAP 的 COM + 应用程序中创建客户端类型库的客户端远程处理配置文件。
            </summary>
      <param name="DestinationDirectory">
                要在其中创建配置文件文件夹。
              </param>
      <param name="VRoot">
                虚拟根目录的名称。
              </param>
      <param name="BaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="AssemblyName">
                包含对应的类型库的公共语言运行时 (CLR) 元数据的程序集显示名称。
              </param>
      <param name="TypeName">
                包含类型库与对应的 CLR 元数据的程序集完全限定的名称。
              </param>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <param name="Mode">
                激活模式。
              </param>
      <param name="Transport">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <returns>
              <see langword="true" /> 如果成功创建客户端的远程处理配置文件;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.ClrObjectFactory" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理，使用该程序集的配置文件。
            </summary>
      <param name="AssemblyName">
                要激活的程序集的名称。
              </param>
      <param name="TypeName">
                要激活的类型的名称。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              一个实例 <see cref="T:System.Object" /> 表示的类型，其区域性、 参数和绑定及激活特性设置为 <see langword="null" />, ，或 <see langword="null" /> 如果 <paramref name="TypeName" /> 找不到参数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  未注册的类。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理，使用远程程序集的邮箱。
               当前未实现;引发 <see cref="T:System.Runtime.InteropServices.COMException" /> 如果调用。
            </summary>
      <param name="Mailbox">
                与 Web 服务邮箱。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              调用此方法会引发异常。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  未实现简单邮件传输协议 (SMTP)。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理，使用远程程序集的虚拟根 URL。
            </summary>
      <param name="VrootUrl">
                要激活的对象的虚拟根 URL。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              一个实例 <see cref="T:System.Object" /> 与区域性、 参数和绑定及激活特性设置为表示的类型， <see langword="null" />, ，或 <see langword="null" /> 标识程序集如果 <paramref name="VrootUrl" /> 找不到参数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  无法打开线程令牌。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理使用 Web 服务描述语言 (WSDL) 的 XML Web 服务。
            </summary>
      <param name="WsdlUrl">
                Web 服务的 WSDL URL。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              一个实例 <see cref="T:System.Object" /> 与区域性、 参数和绑定及激活特性设置为表示的类型， <see langword="null" />, ，或 <see langword="null" /> 标识程序集如果 <paramref name="WsdlUrl" /> 找不到参数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  无法打开线程令牌。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)">
      <summary>
              从程序集中获取组件信息。
            </summary>
      <param name="assemblyPath">
                程序集的路径。
              </param>
      <param name="numComponents">
                此方法返回时，此参数将包含在程序集中的组件数。
              </param>
      <param name="componentInfo">
                此方法返回时，此参数将包含有关组件的信息。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="assemblyPath" /> 为空字符串，仅包含空白，或通过定义包含一个或多个无效字符 <see cref="F:System.IO.Path.InvalidPathChars" />。
                
                  - 或 - 
                
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所需的权限。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="assemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="assemblyPath" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  指定的路径和/或文件名超过了系统定义的最大长度。
                   例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)">
      <summary>
              将程序集安装到 COM + 应用程序。
            </summary>
      <param name="asmpath">
                程序集路径。
              </param>
      <param name="parname">
                COM + 分区名称。
              </param>
      <param name="appname">
                COM + 应用程序名称。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComSoapPublishError.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.ComSoapPublishError" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComSoapPublishError.Report(System.String)">
      <summary>
              在 COM + 应用程序中发布启用 SOAP 的 COM 接口时遇到的错误将写入事件日志。
            </summary>
      <param name="s">
                要写入到事件日志错误消息。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.GenerateMetadata" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)">
      <summary>
              生成或定位一个程序集，该程序集包含指定类型库所表示的 COM+ 组件的公共语言运行时 (CLR) 元数据。
            </summary>
      <param name="strSrcTypeLib">
                类型库的名称，将为该类型库生成一个程序集。
              </param>
      <param name="outPath">
                将在其中生成程序集或定位现有程序集的文件夹。
              </param>
      <returns>
              生成的程序集的名称；如果输入无效，则为一个空字符串。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)">
      <summary>
              生成或定位一个程序集，该程序集包含指定类型库所表示的 COM+ 组件的公共语言运行时 (CLR) 元数据；使用强名称密钥对来对程序集进行签名；然后将该程序集安装在全局程序集缓存中。
            </summary>
      <param name="strSrcTypeLib">
                类型库的名称，将为该类型库生成一个程序集。
              </param>
      <param name="outPath">
                将在其中生成程序集或定位现有程序集的文件夹。
              </param>
      <param name="PublicKey">
                用于将类型库信息导入程序集的公钥。
              </param>
      <param name="KeyPair">
                用于对生成的程序集进行签名的强名称密钥对。
              </param>
      <returns>
              生成的程序集的名称；如果输入无效，则为一个空字符串。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)">
      <summary>
              生成或定位一个程序集，该程序集包含指定类型库所表示的 COM+ 组件的公共语言运行时 (CLR) 元数据；使用强名称密钥对来对程序集进行签名；然后将该程序集安装在全局程序集缓存中。
            </summary>
      <param name="strSrcTypeLib">
                类型库的名称，将为该类型库生成一个程序集。
              </param>
      <param name="outPath">
                将在其中生成程序集或定位现有程序集的文件夹。
              </param>
      <param name="InstallGac">
                已忽略。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
      <returns>
              生成的程序集的名称；如果输入无效，则为一个空字符串。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])">
      <summary>
              在指定路径搜索指定文件。
            </summary>
      <param name="path">
                要在其中搜索文件的路径。
              </param>
      <param name="fileName">
                要搜索的文件的名称。
              </param>
      <param name="extension">
                搜索文件时要添加到文件名的扩展名。
              </param>
      <param name="numBufferChars">
                接收有效路径和文件名的缓冲区的大小。
              </param>
      <param name="buffer">
                接收找到的文件的路径和文件名的缓冲区。
              </param>
      <param name="filePart">
                接收地址的变量，该地址的内容是有效路径和文件名的最后一个组成部分。
              </param>
      <returns>
              如果搜索成功，返回值的长度是复制到 <paramref name="buffer" /> 的字符串的长度。
               如果搜索失败，则返回值为 0。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理，使用该程序集的配置文件。
            </summary>
      <param name="assembly">
                要激活的程序集的名称。
              </param>
      <param name="type">
                要激活的类型的名称。
              </param>
      <param name="mode">
                未使用。
              </param>
      <returns>
              一个实例 <see cref="T:System.Object" /> 与区域性、 参数和绑定及激活特性设置为表示的类型， <see langword="null" />, ，或 <see langword="null" /> 如果 <paramref name="type" /> 找不到参数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  未注册的类。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理，使用远程程序集的邮箱。
               当前未实现;引发 <see cref="T:System.Runtime.InteropServices.COMException" /> 如果调用。
            </summary>
      <param name="Mailbox">
                与 Web 服务邮箱。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              调用此方法会引发异常。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  未实现简单邮件传输协议 (SMTP)。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理，使用远程程序集的虚拟根 URL。
            </summary>
      <param name="VrootUrl">
                远程对象的虚拟根 URL。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              一个实例 <see cref="T:System.Object" /> 与区域性、 参数和绑定及激活特性设置为表示的类型， <see langword="null" />, ，或 <see langword="null" /> 标识程序集如果 <paramref name="VrootUrl" /> 找不到参数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  无法打开线程令牌。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)">
      <summary>
              激活远程程序集通过.NET 远程处理使用 Web 服务描述语言 (WSDL) 的 XML Web 服务。
            </summary>
      <param name="WsdlUrl">
                Web 服务的 WSDL URL。
              </param>
      <param name="Mode">
                未使用。
              </param>
      <returns>
              一个实例 <see cref="T:System.Object" /> 与区域性、 参数和绑定及激活特性设置为表示的类型， <see langword="null" />, ，或 <see langword="null" /> 标识程序集如果 <paramref name="WsdlUrl" /> 找不到参数。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  无法打开线程令牌。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)">
      <summary>
              从程序集中获取组件信息。
            </summary>
      <param name="assemblyPath">
                程序集的路径。
              </param>
      <param name="numComponents">
                此方法返回时，此参数将包含在程序集中的组件数。
              </param>
      <param name="componentInfo">
                此方法返回时，此参数将包含有关组件的信息。
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="assemblyPath" /> 为空字符串 ("")，仅包含空白，或者按照定义包含一个或多个无效字符 <see cref="F:System.IO.Path.InvalidPathChars" />。
                
                  - 或 - 
                
                  系统无法检索的绝对路径。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所需的权限。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="assemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="assemblyPath" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  指定的路径和/或文件名超过了系统定义的最大长度。
                   例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)">
      <summary>
              将程序集安装到 COM + 应用程序。
            </summary>
      <param name="filename">
                程序集路径。
              </param>
      <param name="parname">
                COM + 分区名称。
              </param>
      <param name="appname">
                COM + 应用程序名称。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapIISVRoot.Create(System.String,System.String,System.String,System.String@)">
      <summary>
              创建 Internet 信息服务 (IIS) 虚拟根目录。
            </summary>
      <param name="RootWeb">
                根 Web 服务器。
              </param>
      <param name="PhysicalDirectory">
                对应的虚拟根目录的物理路径 <paramref name="PhysicalPath" /> 从 <see cref="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" /> 方法。
              </param>
      <param name="VirtualDirectory">
                对应的虚拟根目录的名称 <paramref name="VirtualRoot" /> 从 <see cref="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" /> 方法。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapIISVRoot.Delete(System.String,System.String,System.String,System.String@)">
      <summary>
              删除 Internet 信息服务 (IIS) 虚拟根目录。
            </summary>
      <param name="RootWeb">
                根 Web 服务器。
              </param>
      <param name="PhysicalDirectory">
                虚拟根目录的物理路径。
              </param>
      <param name="VirtualDirectory">
                虚拟根目录的名称。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)">
      <summary>
              将生成一个包含指定的类型库所表示的 COM + 组件的公共语言运行时 (CLR) 元数据程序集。
            </summary>
      <param name="SrcTypeLibFileName">
                类型库的名称，将为该类型库生成一个程序集。
              </param>
      <param name="OutPath">
                在其中生成程序集的文件夹。
              </param>
      <returns>
              生成的程序集名称。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)">
      <summary>
              生成一个程序集，其中包含指定的类型库所表示的 COM + 组件的公共语言运行时 (CLR) 元数据，使用具有强名称密钥对，对程序集签名并将其安装在全局程序集缓存。
            </summary>
      <param name="SrcTypeLibFileName">
                类型库的名称，将为该类型库生成一个程序集。
              </param>
      <param name="OutPath">
                在其中生成程序集的文件夹。
              </param>
      <param name="InstallGac">
                一个标志，指示是否要将程序集安装在全局程序集缓存中。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
      <returns>
              生成的程序集名称。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>
              在指定的 URL 创建启用 SOAP 的 COM + 应用程序邮箱。
               未完全实现。
            </summary>
      <param name="RootMailServer">
                根邮件服务器的 URL。
              </param>
      <param name="MailBox">
                要创建的邮箱。
              </param>
      <param name="SmtpName">
                此方法返回时，此参数包含包含邮箱的简单邮件传输协议 (SMTP) 服务器的名称。
              </param>
      <param name="Domain">
                此方法返回时，此参数包含 SMTP 服务器的域。
              </param>
      <param name="PhysicalPath">
                此方法返回时，此参数将包含邮箱的文件系统路径。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>
              创建一个启用 SOAP 的 COM + 应用程序的虚拟根目录。
            </summary>
      <param name="Operation">
                要执行的操作。
              </param>
      <param name="FullUrl">
                虚拟根目录完整 URL 地址。
              </param>
      <param name="BaseUrl">
                此方法返回时，此参数包含基 URL 地址。
              </param>
      <param name="VirtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
      <param name="PhysicalPath">
                此方法返回时，此参数将包含虚拟根目录的文件路径。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  调用方不具有访问域名系统 (DNS) 信息的权限。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="FullUrl" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  在本地主机名称解析时遇到错误。
                </exception>
      <exception cref="T:System.UriFormatException">
                  <paramref name="FullUrl" /> 为空。
                
                  - 或 - 
                
                  中指定的方案 <paramref name="FullUrl" /> 无效。
                
                  - 或 - 
                
                  <paramref name="FullUrl" /> 包含两个以上连续的斜线。
                
                  - 或 - 
                
                  中指定的密码 <paramref name="FullUrl" /> 是无效的。
                
                  - 或 - 
                
                  在指定的主机名 <paramref name="FullUrl" /> 是无效的。
                
                  - 或 - 
                
                  在指定的文件名 <paramref name="FullUrl" /> 是无效的。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)">
      <summary>
              删除位于指定 URL 处的启用 SOAP 的 COM + 应用程序邮箱。
               未完全实现。
            </summary>
      <param name="RootMailServer">
                根邮件服务器的 URL。
              </param>
      <param name="MailBox">
                要删除的邮箱。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)">
      <summary>
              删除一个启用 SOAP 的 COM + 应用程序的虚拟根目录。
               未完全实现。
            </summary>
      <param name="RootWebServer">
                根 Web 服务器。
              </param>
      <param name="FullUrl">
                虚拟根目录完整 URL 地址。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)">
      <summary>
              将程序集安装在全局程序集缓存中。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)">
      <summary>
              从全局程序集缓存中移除程序集。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="AssemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="AssemblyPath" /> 为空。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="AssemblyPath" /> 未找到。
                </exception>
      <exception cref="T:System.IO.FileLoadException">
                  一个程序集或模块用两个不同的证据加载了两次。
                </exception>
      <exception cref="T:System.BadImageFormatException">
                  <paramref name="AssemblyPath" /> 不是有效的程序集。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)">
      <summary>
              返回具有强名称签名生成的程序集 SoapCache 目录中的完整路径。
            </summary>
      <param name="TypeLibPath">
                包含类型库文件的路径。
              </param>
      <param name="CachePath">
                此方法返回时，此参数包含 SoapCache 目录中的代理程序集的完整路径。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="TypeLibPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
      <exception cref="T:System.ArgumentException">
                  文件名为空，仅包含空格，或包含无效字符。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  访问 <paramref name="TypeLibPath" /> 被拒绝。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  指定的路径和/或文件名超过了系统定义的最大长度。
                   例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="TypeLibPath" /> 在字符串中间包含一个冒号 (:)。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)">
      <summary>
              在程序集上反映，并返回与匹配 ProgID 的类型名称。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <returns>
              相匹配的 ProgID 的类型名称。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>
              处理客户端类型库，创建客户端上的配置文件。
            </summary>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <param name="SrcTlbPath">
                包含类型库文件的路径。
              </param>
      <param name="PhysicalPath">
                Web 应用程序目录。
              </param>
      <param name="VRoot">
                虚拟根目录的名称。
              </param>
      <param name="BaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="Mode">
                激活模式。
              </param>
      <param name="Transport">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <param name="AssemblyName">
                此方法返回时，此参数将包含程序集的显示名称。
              </param>
      <param name="TypeName">
                此方法返回时，此参数将包含程序集的完全限定类型名称。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>
              处理服务器类型库，添加或删除组件 Web.config 和 Default.disco 文件条目。
               如有必要，则生成代理。
            </summary>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <param name="SrcTlbPath">
                包含类型库文件的路径。
              </param>
      <param name="PhysicalPath">
                Web 应用程序目录。
              </param>
      <param name="Operation">
                要执行的操作。
              </param>
      <param name="AssemblyName">
                此方法返回时，此参数将包含程序集的显示名称。
              </param>
      <param name="TypeName">
                此方法返回时，此参数将包含程序集的完全限定类型名称。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  <paramref name="SrcTlbPath" /> 参数引用 scrobj.dll; 因此，不支持 SOAP 的脚本组件的发布。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)">
      <summary>
              注册为 COM 互操作程序集。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  指定了不以“file://”开头的基本代码，且没有所需的 <see cref="T:System.Net.WebPermission" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="AssemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="AssemblyPath" /> 未找到，或者未指定文件扩展名。
                </exception>
      <exception cref="T:System.BadImageFormatException">
                  <paramref name="AssemblyPath" /> 不是有效的程序集。
                </exception>
      <exception cref="T:System.IO.FileLoadException">
                  两次用两个不同的证据加载了程序集或模块，或程序集名称的长度超过 MAX_PATH 个字符。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  一种方法标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 不是 <see langword="static" />。
                
                  - 或 - 
                
                  使用标记的多个方法 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 在给定级别的层次结构。
                
                  - 或 - 
                
                  该方法的签名标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 无效。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)">
      <summary>
              注销 COM 互操作程序集。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  指定了不以“file://”开头的基本代码，且没有所需的 <see cref="T:System.Net.WebPermission" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="AssemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="AssemblyPath" /> 未找到，或者未指定文件扩展名。
                </exception>
      <exception cref="T:System.BadImageFormatException">
                  <paramref name="AssemblyPath" /> 不是有效的程序集。
                </exception>
      <exception cref="T:System.IO.FileLoadException">
                  两次用两个不同的证据加载了程序集或模块，或程序集名称的长度超过 MAX_PATH 个字符。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  一种方法标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 不是 <see langword="static" />。
                
                  - 或 - 
                
                  使用标记的多个方法 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 在给定级别的层次结构。
                
                  - 或 - 
                
                  该方法的签名标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 无效。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.IISVirtualRoot" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.Create(System.String,System.String,System.String,System.String@)">
      <summary>
              创建 Internet 信息服务 (IIS) 虚拟根目录。
            </summary>
      <param name="RootWeb">
                包含值的字符串 "IIS://localhost/W3SVC/1/ROOT" 表示根 Web 服务器。
              </param>
      <param name="inPhysicalDirectory">
                对应的虚拟根目录的物理路径 <paramref name="PhysicalPath" /> 从 <see cref="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" /> 方法。
              </param>
      <param name="VirtualDirectory">
                对应的虚拟根目录的名称 <paramref name="VirtualRoot" /> 从 <see cref="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.Delete(System.String,System.String,System.String,System.String@)">
      <summary>
              删除 Internet 信息服务 (IIS) 虚拟根目录。
            </summary>
      <param name="RootWeb">
                根 Web 服务器上的，按照 <paramref name="RootWebServer" /> 从 <see cref="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)" /> 方法。
              </param>
      <param name="PhysicalDirectory">
                虚拟根目录的物理路径。
              </param>
      <param name="VirtualDirectory">
                虚拟根目录的名称。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)">
      <summary>
              将 XML 元素添加到 Web.config 文件，以便发布在启用 SOAP 的 COM + 应用程序的 COM 接口。
            </summary>
      <param name="FilePath">
                现有的 Web.config 文件的路径。
              </param>
      <param name="AssemblyName">
                包含要添加的类型的程序集的名称。
              </param>
      <param name="TypeName">
                要添加的类型的名称。
              </param>
      <param name="ProgId">
                要添加的类型编程标识符。
              </param>
      <param name="Mode">
                一个字符串常量，它对应于中的某个成员的名称 <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> 枚举，指示如何激活已知对象。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)">
      <summary>
              创建启用 SOAP 的 COM + 应用程序的 Web.config 文件，以便该文件已准备好添加 COM 接口要发布的 XML 元素。
            </summary>
      <param name="FilePath">
                要在其中创建配置文件文件夹。
              </param>
      <param name="FileRootName">
                （例如站点设置为 Web.config） 添加 config 扩展名的字符串值。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              创建包括安全和身份验证选项，在.NET 远程处理客户端配置文件。
            </summary>
      <param name="progId">
                类的编程标识符。
                 如果是空字符串 ("")，此方法返回时不执行任何操作。
              </param>
      <param name="virtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="baseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="authentication">
                要使用的 ASP.NET 身份验证的类型。
              </param>
      <param name="assemblyName">
                程序集的名称。
              </param>
      <param name="typeName">
                类型的名称。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
      <summary>
              将为服务器类型库项添加到 Web.config 和 Default.disco 文件，具体取决于安全选项，并生成一个代理，如有必要。
            </summary>
      <param name="progId">
                类的编程标识符。
              </param>
      <param name="classId">
                类型库类标识符 (CLSID)。
              </param>
      <param name="interfaceId">
                类型库的 IID。
              </param>
      <param name="srcTlbPath">
                包含类型库的文件路径。
              </param>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="baseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="virtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="clientActivated">
                <see langword="true" /> 如果客户端激活;否则为 <see langword="false" />。
              </param>
      <param name="wellKnown">
                <see langword="true" /> 如果已知;，否则为 <see langword="false" />。
              </param>
      <param name="discoFile">
                <see langword="true" /> 如果发现文件;，否则为 <see langword="false" />。
              </param>
      <param name="operation">
                要执行的操作。
                 指定"删除"或空字符串。
              </param>
      <param name="assemblyName">
                此方法返回时，包含的程序集的名称。
              </param>
      <param name="typeName">
                此方法返回时，包含程序集的类型。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              从 Web.config 和 Default.disco 文件，具体取决于安全选项移除服务器类型库项。
            </summary>
      <param name="progId">
                类的编程标识符。
              </param>
      <param name="classId">
                类型库类标识符 (CLSID)。
              </param>
      <param name="interfaceId">
                类型库的 IID。
              </param>
      <param name="srcTlbPath">
                包含类型库的文件路径。
              </param>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="baseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="virtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="operation">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <param name="assemblyName">
                程序集的名称。
              </param>
      <param name="typeName">
                程序集的类型。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>
              使用安全选项创建 SOAP 虚拟根目录。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="homePage">
                <see langword="true" /> 如果 <see langword="EnableDefaultDoc" /> 属性将设置; 否则为 <see langword="false" />。
              </param>
      <param name="discoFile">
                <see langword="true" /> 如果要创建; 默认的发现文件 <see langword="false" /> 如果没有为任何发现文件。
                 如果 <see langword="false" /> 并且 Default.disco 文件存在，则会删除该文件。
              </param>
      <param name="secureSockets">
                <see langword="true" /> 如果 SSL 加密是必需的;否则为 <see langword="false" />。
              </param>
      <param name="authentication">
                如果要使用的 （匿名用户） 无身份验证，则指定"anonymous"。
                 否则，指定一个空字符串。
              </param>
      <param name="operation">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <param name="baseUrl">
                此方法返回时，此参数包含基 URL。
              </param>
      <param name="virtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
      <param name="physicalPath">
                此方法返回时，此参数将包含虚拟根目录下的磁盘地址。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)">
      <summary>
              删除虚拟根目录。
               未完全实现。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="baseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="virtualRoot">
                虚拟根目录的名称。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于标识系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
      <summary>
              返回现有的 SOAP 虚拟根目录的安全状态。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="exists">
                此方法返回时，此参数将包含 <see langword="true" /> 如果虚拟目录是否存在; 否则为 <see langword="false" />。
              </param>
      <param name="secureSockets">
                此方法返回时，此参数将包含 <see langword="true" /> SSL 加密是必选的; 否则为如果 <see langword="false" />。
              </param>
      <param name="windowsAuth">
                此方法返回时，此参数将包含 <see langword="true" /> 设置 Windows 身份验证，否则，如果 <see langword="false" />。
              </param>
      <param name="anonymous">
                此方法返回时，此参数将包含 <see langword="true" /> 如果不进行身份验证设置 （匿名用户）; 否则为 <see langword="false" />。
              </param>
      <param name="homePage">
                此方法返回时，此参数将包含 <see langword="true" /> 如果虚拟根目录的 <see langword="EnableDefaultDoc" /> 属性是设置; 否则为 <see langword="false" />。
              </param>
      <param name="discoFile">
                此方法返回时，此参数将包含 <see langword="true" /> 如果 Default.disco 文件存在; 否则为 <see langword="false" />。
              </param>
      <param name="physicalPath">
                此方法返回时，此参数将包含虚拟根目录下的磁盘地址。
              </param>
      <param name="baseUrl">
                此方法返回时，此参数包含基 URL。
              </param>
      <param name="virtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)">
      <summary>
              返回 SOAP 虚拟根目录的 bin 目录的路径。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                基 URL 地址。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="binPath">
                此方法返回时，此参数包含 SOAP 虚拟根目录的 bin 目录的文件路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)">
      <summary>
              返回 SOAP 虚拟根目录的路径。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                基 URL 地址。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="physicalPath">
                此方法返回时，此参数包含 SOAP 虚拟根目录的文件路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapUtility.Present">
      <summary>
              确定是否经过身份验证，加密的 SOAP 接口存在。
            </summary>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.Publish" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>
              在指定的 URL 创建启用 SOAP 的 COM + 应用程序邮箱。
               未完全实现。
            </summary>
      <param name="RootMailServer">
                根邮件服务器的 URL。
              </param>
      <param name="MailBox">
                要创建的邮箱。
              </param>
      <param name="SmtpName">
                此方法返回时，此参数包含包含邮箱的简单邮件传输协议 (SMTP) 服务器的名称。
              </param>
      <param name="Domain">
                此方法返回时，此参数包含 SMTP 服务器的域。
              </param>
      <param name="PhysicalPath">
                此方法返回时，此参数将包含邮箱的文件系统路径。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>
              创建一个启用 SOAP 的 COM + 应用程序的虚拟根目录。
            </summary>
      <param name="Operation">
                要执行的操作。
              </param>
      <param name="FullUrl">
                虚拟根目录完整 URL 地址。
              </param>
      <param name="BaseUrl">
                此方法返回时，此参数包含基 URL 地址。
              </param>
      <param name="VirtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
      <param name="PhysicalPath">
                此方法返回时，此参数将包含虚拟根目录的文件路径。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  调用方没有权限访问 DNS 信息。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="FullUrl" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  在本地主机名称解析时遇到错误。
                </exception>
      <exception cref="T:System.UriFormatException">
                  <paramref name="FullUrl" /> 为空。
                
                  - 或 - 
                
                  中指定的方案 <paramref name="FullUrl" /> 无效。
                
                  - 或 - 
                
                  <paramref name="FullUrl" /> 包含两个以上连续的斜线。
                
                  - 或 - 
                
                  中指定的密码 <paramref name="FullUrl" /> 是无效的。
                
                  - 或 - 
                
                  在指定的主机名 <paramref name="FullUrl" /> 是无效的。
                
                  - 或 - 
                
                  在指定的文件名 <paramref name="FullUrl" /> 是无效的。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)">
      <summary>
              删除位于指定 URL 处的启用 SOAP 的 COM + 应用程序邮箱。
               未完全实现。
            </summary>
      <param name="RootMailServer">
                根邮件服务器的 URL。
              </param>
      <param name="MailBox">
                要删除的邮箱。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)">
      <summary>
              删除一个启用 SOAP 的 COM + 应用程序的虚拟根目录。
               未完全实现。
            </summary>
      <param name="RootWebServer">
                根 Web 服务器。
              </param>
      <param name="FullUrl">
                虚拟根目录完整 URL 地址。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GacInstall(System.String)">
      <summary>
              将程序集安装在全局程序集缓存中。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GacRemove(System.String)">
      <summary>
              从全局程序集缓存中移除程序集。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  调用方没有路径发现权限。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="AssemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  <paramref name="AssemblyPath" /> 为空。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="AssemblyPath" /> 未找到。
                </exception>
      <exception cref="T:System.IO.FileLoadException">
                  一个程序集或模块用两个不同的证据加载了两次。
                </exception>
      <exception cref="T:System.BadImageFormatException">
                  <paramref name="AssemblyPath" /> 不是有效的程序集。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)">
      <summary>
              返回具有强名称签名生成的程序集 SoapCache 目录中的完整路径。
            </summary>
      <param name="TypeLibPath">
                包含类型库文件的路径。
              </param>
      <param name="CachePath">
                此方法返回时，此参数包含 SoapCache 目录的名称。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="TypeLibPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
      <exception cref="T:System.ArgumentException">
                  文件名为空，仅包含空格，或包含无效字符。
                </exception>
      <exception cref="T:System.UnauthorizedAccessException">
                  访问 <paramref name="TypeLibPath" /> 被拒绝。
                </exception>
      <exception cref="T:System.IO.PathTooLongException">
                  指定的路径和/或文件名超过了系统定义的最大长度。
                   例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  <paramref name="TypeLibPath" /> 在字符串中间包含一个冒号 (:)。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)">
      <summary>
              返回用于存储客户端配置文件的目录的路径。
            </summary>
      <param name="CreateDir">
                设置为 <see langword="true" /> 若要创建目录，或 <see langword="false" /> 要返回的路径，但不是创建目录。
              </param>
      <returns>
              包含配置文件的目录的路径。
            </returns>
      <exception cref="T:System.UnauthorizedAccessException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)">
      <summary>
              在程序集上反映，并返回与匹配 ProgID 的类型名称。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <returns>
              相匹配的 ProgID 的类型名称。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)">
      <summary>
              分析的 URL，并返回的基 URL 和虚拟根部分。
            </summary>
      <param name="FullUrl">
                虚拟根目录完整 URL 地址。
              </param>
      <param name="BaseUrl">
                此方法返回时，此参数包含基 URL 地址。
              </param>
      <param name="VirtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="FullUrl" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.Sockets.SocketException">
                  在本地主机名称解析时遇到错误。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有权限访问 DNS 信息。
                </exception>
      <exception cref="T:System.UriFormatException">
                  <paramref name="FullUrl" /> 为空。
                
                  - 或 - 
                
                  中指定的方案 <paramref name="FullUrl" /> 无效。
                
                  - 或 - 
                
                  <paramref name="FullUrl" /> 包含太多的斜杠。
                
                  - 或 - 
                
                  中指定的密码 <paramref name="FullUrl" /> 是无效的。
                
                  - 或 - 
                
                  在指定的主机名 <paramref name="FullUrl" /> 是无效的。
                
                  - 或 - 
                
                  在指定的文件名 <paramref name="FullUrl" /> 是无效的。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>
              处理客户端类型库，创建客户端上的配置文件。
            </summary>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <param name="SrcTlbPath">
                包含类型库文件的路径。
              </param>
      <param name="PhysicalPath">
                Web 应用程序目录。
              </param>
      <param name="VRoot">
                虚拟根目录的名称。
              </param>
      <param name="BaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="Mode">
                激活模式。
              </param>
      <param name="Transport">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <param name="AssemblyName">
                此方法返回时，此参数将包含程序集的显示名称。
              </param>
      <param name="TypeName">
                此方法返回时，此参数将包含程序集的完全限定类型名称。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>
              处理服务器类型库，添加或删除组件 Web.config 和 Default.disco 文件条目。
               如有必要，则生成代理。
            </summary>
      <param name="ProgId">
                类的编程标识符。
              </param>
      <param name="SrcTlbPath">
                包含类型库文件的路径。
              </param>
      <param name="PhysicalPath">
                Web 应用程序目录。
              </param>
      <param name="Operation">
                要执行的操作。
              </param>
      <param name="strAssemblyName">
                此方法返回时，此参数将包含程序集的显示名称。
              </param>
      <param name="TypeName">
                此方法返回时，此参数将包含程序集的完全限定类型名称。
              </param>
      <param name="Error">
                此方法返回时，此参数将包含一条错误消息，如果遇到了问题。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  <paramref name="SrcTlbPath" /> 参数引用 scrobj.dll; 因此，不支持 SOAP 的脚本组件的发布。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)">
      <summary>
              注册为 COM 互操作程序集。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  指定了不以“file://”开头的基本代码，且没有所需的 <see cref="T:System.Net.WebPermission" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="AssemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="AssemblyPath" /> 未找到，或者未指定文件扩展名。
                </exception>
      <exception cref="T:System.BadImageFormatException">
                  <paramref name="AssemblyPath" /> 不是有效的程序集。
                </exception>
      <exception cref="T:System.IO.FileLoadException">
                  两次用两个不同的证据加载了程序集或模块，或程序集名称的长度超过 MAX_PATH 个字符。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  一种方法标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 不是 <see langword="static" />。
                
                  - 或 - 
                
                  使用标记的多个方法 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 在给定级别的层次结构。
                
                  - 或 - 
                
                  该方法的签名标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 无效。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)">
      <summary>
              注销 COM 互操作程序集。
            </summary>
      <param name="AssemblyPath">
                程序集文件系统路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                
                  - 或 - 
                
                  指定了不以“file://”开头的基本代码，且没有所需的 <see cref="T:System.Net.WebPermission" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  <paramref name="AssemblyPath" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.IO.FileNotFoundException">
                  <paramref name="AssemblyPath" /> 未找到，或者未指定文件扩展名。
                </exception>
      <exception cref="T:System.BadImageFormatException">
                  <paramref name="AssemblyPath" /> 不是有效的程序集。
                </exception>
      <exception cref="T:System.IO.FileLoadException">
                  两次用两个不同的证据加载了程序集或模块，或程序集名称的长度超过 MAX_PATH 个字符。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  一种方法标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 不是 <see langword="static" />。
                
                  - 或 - 
                
                  使用标记的多个方法 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 在给定级别的层次结构。
                
                  - 或 - 
                
                  该方法的签名标有 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 无效。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)">
      <summary>
              将 XML 元素添加到 Web.config 文件，以便发布在启用 SOAP 的 COM + 应用程序的 COM 接口。
            </summary>
      <param name="FilePath">
                现有的 Web.config 文件的路径。
              </param>
      <param name="AssemblyName">
                包含要添加的类型的程序集的名称。
              </param>
      <param name="TypeName">
                要添加的类型的名称。
              </param>
      <param name="ProgId">
                要添加的类型编程标识符。
              </param>
      <param name="WkoMode">
                一个字符串常量，它对应于中的某个成员的名称 <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> 枚举，指示如何激活已知对象。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)">
      <summary>
              创建启用 SOAP 的 COM + 应用程序的 Web.config 文件，以便该文件已准备好添加 COM 接口要发布的 XML 元素。
            </summary>
      <param name="FilePath">
                应在其中创建配置文件的文件夹。
              </param>
      <param name="FilePrefix">
                字符串值"Web"，向其中添加 config 扩展名。
              </param>
      <param name="Error">
                一个可写入错误信息的字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapClientImport.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.SoapClientImport" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              创建包括安全和身份验证选项，在.NET 远程处理客户端配置文件。
            </summary>
      <param name="progId">
                类的编程标识符。
                 如果是空字符串 ("")，此方法返回时不执行任何操作。
              </param>
      <param name="virtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="baseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="authentication">
                要使用的 ASP.NET 身份验证的类型。
              </param>
      <param name="assemblyName">
                程序集的名称。
              </param>
      <param name="typeName">
                类型的名称。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerTlb.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.SoapServerTlb" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
      <summary>
              将为服务器类型库项添加到 Web.config 和 Default.disco 文件，具体取决于安全选项，并生成一个代理，如有必要。
            </summary>
      <param name="progId">
                类的编程标识符。
              </param>
      <param name="classId">
                类型库类标识符 (CLSID)。
              </param>
      <param name="interfaceId">
                类型库的 IID。
              </param>
      <param name="srcTlbPath">
                包含类型库的文件路径。
              </param>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="clientActivated">
                <see langword="true" /> 如果客户端激活;否则为 <see langword="false" />。
              </param>
      <param name="wellKnown">
                <see langword="true" /> 如果已知;，否则为 <see langword="false" />。
              </param>
      <param name="discoFile">
                <see langword="true" /> 如果发现文件;，否则为 <see langword="false" />。
              </param>
      <param name="operation">
                要执行的操作。
                 指定"删除"或空字符串。
              </param>
      <param name="strAssemblyName">
                此方法返回时，包含的程序集的名称。
              </param>
      <param name="typeName">
                此方法返回时，包含程序集的类型。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              从 Web.config 和 Default.disco 文件，具体取决于安全选项移除服务器类型库项。
            </summary>
      <param name="progId">
                类的编程标识符。
              </param>
      <param name="classId">
                类型库类标识符 (CLSID)。
              </param>
      <param name="interfaceId">
                类型库的 IID。
              </param>
      <param name="srcTlbPath">
                包含类型库的文件路径。
              </param>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="baseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="virtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="operation">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <param name="assemblyName">
                程序集的名称。
              </param>
      <param name="typeName">
                程序集的类型。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>
              使用安全选项创建 SOAP 虚拟根目录。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
                 默认值为"IIS://localhost/W3SVC/1/ROOT"。
              </param>
      <param name="inBaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="homePage">
                主页页面的 URL。
              </param>
      <param name="discoFile">
                <see langword="true" /> 如果要创建; 默认的发现文件 <see langword="false" /> 如果没有为任何发现文件。
                 如果 <see langword="false" /> 并且 Default.disco 文件存在，则会删除该文件。
              </param>
      <param name="secureSockets">
                <see langword="true" /> 如果 SSL 加密是必需的;否则为 <see langword="false" />。
              </param>
      <param name="authentication">
                如果要使用的 （匿名用户） 无身份验证，则指定"anonymous"。
                 否则，指定一个空字符串。
              </param>
      <param name="operation">
                未使用。
                 指定 <see langword="null" /> 为此参数。
              </param>
      <param name="baseUrl">
                此方法返回时，此参数包含基 URL。
              </param>
      <param name="virtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
      <param name="physicalPath">
                此方法返回时，此参数将包含虚拟根目录下的磁盘地址。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)">
      <summary>
              删除虚拟根目录。
               未完全实现。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
                 默认值为"IIS://localhost/W3SVC/1/ROOT"。
              </param>
      <param name="inBaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
      <summary>
              返回现有的 SOAP 虚拟根目录的安全状态。
            </summary>
      <param name="RootWebServer">
                根 Web 服务器。
                 默认值为"IIS://localhost/W3SVC/1/ROOT"。
              </param>
      <param name="inBaseUrl">
                包含虚拟根目录的基 URL。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="Exists">
                此方法返回时，此参数将包含 <see langword="true" /> 如果虚拟目录是否存在; 否则为 <see langword="false" />。
              </param>
      <param name="SSL">
                此方法返回时，此参数将包含 <see langword="true" /> SSL 加密是必选的; 否则为如果 <see langword="false" />。
              </param>
      <param name="WindowsAuth">
                此方法返回时，此参数将包含 <see langword="true" /> 设置 Windows 身份验证，否则，如果 <see langword="false" />。
              </param>
      <param name="Anonymous">
                此方法返回时，此参数将包含 <see langword="true" /> 如果不进行身份验证设置 （匿名用户）; 否则为 <see langword="false" />。
              </param>
      <param name="HomePage">
                此方法返回时，此参数将包含 <see langword="true" /> 如果虚拟根目录 <see langword="EnableDefaultDoc" /> 属性是设置; 否则为 <see langword="false" />。
              </param>
      <param name="DiscoFile">
                此方法返回时，此参数将包含 <see langword="true" /> 如果 Default.disco 文件存在; 否则为 <see langword="false" />。
              </param>
      <param name="PhysicalPath">
                此方法返回时，此参数将包含虚拟根目录下的磁盘地址。
              </param>
      <param name="BaseUrl">
                此方法返回时，此参数包含基 URL。
              </param>
      <param name="VirtualRoot">
                此方法返回时，此参数将包含虚拟根目录的名称。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)">
      <summary>
              返回的 SOAP bin 目录的路径。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                基 URL 地址。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="binPath">
                此方法返回时，此参数包含 SOAP 虚拟根目录的 bin 目录的文件路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)">
      <summary>
              返回 SOAP 虚拟根目录的路径。
            </summary>
      <param name="rootWebServer">
                根 Web 服务器。
              </param>
      <param name="inBaseUrl">
                基 URL 地址。
              </param>
      <param name="inVirtualRoot">
                虚拟根目录的名称。
              </param>
      <param name="physicalPath">
                此方法返回时，此参数包含 SOAP 虚拟根目录的文件路径。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">
                  用于获取系统目录的调用失败。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.Present">
      <summary>
              确定是否经过身份验证，加密的 SOAP 接口存在。
            </summary>
      <exception cref="T:System.Security.SecurityException">
                  在调用链中的调用方没有权限访问非托管的代码。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  SOAP 实用程序将不可用。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
      <summary>
              通知客户端的异常处理组件，均被拒绝的所有消息队列尝试将消息传送到服务器，并且在消息终止于客户端的事务死信队列。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
      <summary>
              通知服务器端异常类实现，播放到服务器的延迟的激活的所有尝试都失败，并且在消息已被移动到其最终静止队列。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout(System.Int32)">
      <summary>
              设置之前剩余的秒数 <see cref="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" /> 方法超时之前。
            </summary>
      <param name="dwSecondsRemaining">
                在所需执行的启动方法超时时间的时间之前保持的秒数。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
      <summary>
              执行关闭操作。
               当 Dllhost.exe 关闭时调用。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
      <summary>
              执行在启动时初始化。
               启动 Dllhost.exe 时调用。
            </summary>
      <param name="punkProcessControl">
                在 Microsoft Windows XP 中，指向的指针 <see langword="IUnknown" /> 启动的 COM 组件的接口。
                 在 Microsoft Windows 2000 中，此参数始终是 <see langword="null" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.IRegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>
              将程序集安装到 COM + 目录中。
            </summary>
      <param name="assembly">
                作为一个文件或全局程序集缓存 (GAC) 中的程序集的强名称程序集名称。
              </param>
      <param name="application">
                应用程序参数可以为 <see langword="null" />。
                 如果是，应用程序的名称基于自动生成的程序集名称或 <see langword="ApplicationName" /> 属性。
                 如果该应用程序包含 <see langword="ApplicationID" /> 特性，该特性将优先。
              </param>
      <param name="tlb">
                输出类型库 (TLB) 文件，或一个字符串，包含的名称 <see langword="null" /> 如果应注册帮助器生成的名称。
                 在调用完成后，使用的实际名称位于参数中。
              </param>
      <param name="installFlags">
                枚举中指定的安装选项。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.IRegistrationHelper.UninstallAssembly(System.String,System.String)">
      <summary>
              从 COM + 目录中卸载该程序集。
            </summary>
      <param name="assembly">
                作为一个文件或全局程序集缓存 (GAC) 中的程序集的强名称程序集名称。
              </param>
      <param name="application">
                COM + 应用程序的名称。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System.String)">
      <summary>
              确保在 COM + 上下文中， <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类对象 done 的位设置为 <see langword="true" /> 远程方法调用后。
            </summary>
      <param name="s">
                要转换为实现一个请求对象的字符串 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> 接口。
              </param>
      <returns>
              从实现的响应对象的字符串转换 <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> 接口。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System.String)">
      <summary>
              不能确保在 COM + 上下文中， <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类对象 done 的位设置为 <see langword="true" /> 远程方法调用后。
            </summary>
      <param name="s">
                字符串转换为请求对象实现 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> 接口。
              </param>
      <returns>
              一个字符串，转换从响应对象实现 <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> 接口。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.IServiceCall.OnCall">
      <summary>
              开始执行此方法中实现的批处理工作。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)">
      <summary>
              获取有关的某些信息 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类实例。
            </summary>
      <param name="infoMask">
                位掩码，其中 0x00000001 为服务的组件的进程 id、 0x00000002 是应用程序域 ID 的键，0x00000004 是服务的组件的远程 URI 的密钥。
              </param>
      <param name="infoArray">
                一个字符串数组，可能会包含任何或所有以下顺序︰ 服务的组件的进程 ID、 应用程序域 ID 和服务的组件的远程 URI。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.Abort(System.EnterpriseServices.BOID@,System.Int32,System.Int32)">
      <summary>
              中止事务。
            </summary>
      <param name="pboidReason">
                一个可选 <see cref="T:System.EnterpriseServices.BOID" /> ，该值指示在事务中止原因。
                 此参数可以为 <see langword="null" />, ，指示不提供任何原因有关中止。
              </param>
      <param name="fRetaining">
                必须是 <see langword="false" />。
              </param>
      <param name="fAsync">
                当 <paramref name="fAsync" /> 是 <see langword="true" />, ，执行异步中止，并且调用方必须使用 <see langword="ITransactionOutcomeEvents" /> 若要了解该事务的结果。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>
              提交事务。
            </summary>
      <param name="fRetaining">
                必须是 <see langword="false" />。
              </param>
      <param name="grfTC">
                从 OLE DB 枚举的值 <see langword="XACTTC" />。
              </param>
      <param name="grfRM">
                必须为零。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.GetTransactionInfo(System.EnterpriseServices.XACTTRANSINFO@)">
      <summary>
              返回有关事务对象的信息。
            </summary>
      <param name="pinfo">
                指向调用方分配 <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> 结构，它将接收有关事务的信息。
                 不得为 <see langword="null" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.JustInTimeActivationAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> 类的新实例。
               默认构造函数允许在实时 (JIT) 激活。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.JustInTimeActivationAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> 类，这 （可选） 允许通过传递来禁用实时 (JIT) 激活 <see langword="false" /> 作为参数。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用 JIT 激活;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.LoadBalancingSupportedAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.LoadBalancingSupportedAttribute" /> 类，同时指定负载平衡支持。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.LoadBalancingSupportedAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.LoadBalancingSupportedAttribute" /> 类，并可以选择禁用负载平衡支持。
            </summary>
      <param name="val">
                <see langword="true" /> 若要启用负载平衡支持;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.MustRunInClientContextAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.MustRunInClientContextAttribute" /> 类，需要创建该对象的创建者的上下文中。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.MustRunInClientContextAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.MustRunInClientContextAttribute" /> 类中，选择不创建对象的创建者的上下文中。
            </summary>
      <param name="val">
                <see langword="true" /> 若要创建者; 的上下文中创建对象否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />, ，<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />, ，<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" />, ，和 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout" /> 为其默认值的属性。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" /> 属性。
            </summary>
      <param name="enable">
                <see langword="true" /> 若要启用对象池;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Boolean,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />, ，<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />, ，和 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" /> 属性。
            </summary>
      <param name="enable">
                <see langword="true" /> 若要启用对象池;否则为 <see langword="false" />。
              </param>
      <param name="minPoolSize">
                最小池大小。
              </param>
      <param name="maxPoolSize">
                最大池大小。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" /> 和 <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" /> 属性。
            </summary>
      <param name="minPoolSize">
                最小池大小。
              </param>
      <param name="maxPoolSize">
                最大池大小。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.AfterSaveChanges(System.Collections.Hashtable)">
      <summary>
              在内部调用.NET Framework 基础结构时安装和配置 COM + 目录中的程序集。
            </summary>
      <param name="info">
                一个包含由内部键引用的内部对象的哈希表。
              </param>
      <returns>
              <see langword="true" /> 如果该方法已发生更改。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.Apply(System.Collections.Hashtable)">
      <summary>
              在内部调用.NET Framework 基础结构在应用时 <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> 类属性与维护的组件。
            </summary>
      <param name="info">
                一个包含哪些对象共用属性将应用到，内部键所引用的一个内部对象的哈希表。
              </param>
      <returns>
              <see langword="true " />如果该方法已发生更改。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.IsValidTarget(System.String)">
      <summary>
              在内部调用.NET Framework 基础结构时安装和配置 COM + 目录中的程序集。
            </summary>
      <param name="s">
                通过检查为特殊值，该值指示服务的组件的.NET Framework 基础结构生成一个字符串。
              </param>
      <returns>
              <see langword="true" /> 如果该属性应用到服务的组件类。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.PrivateComponentAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.PrivateComponentAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationConfig.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.RegistrationConfig" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.RegistrationException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor(System.String)">
      <summary>
              用指定的错误消息初始化 <see cref="T:System.EnterpriseServices.RegistrationException" /> 类的新实例。
            </summary>
      <param name="msg">
                引发异常时显示到客户端的消息。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor(System.String,System.Exception)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.RegistrationException" /> 用指定的错误消息和嵌套的异常类。
            </summary>
      <param name="msg">
                引发异常时显示到客户端的消息。
              </param>
      <param name="inner">
                嵌套的异常。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              集 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象中的错误信息 <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" />。
            </summary>
      <param name="info">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，它包含序列化对象数据。
              </param>
      <param name="ctx">
                关于来源和目标的上下文信息
              </param>
      <exception cref="T:System.ArgumentException">
                  <paramref name="info" /> 参数是 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.RegistrationHelper" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>
              安装 COM + 应用程序中指定的程序集。
            </summary>
      <param name="assembly">
                要安装的程序集文件的名称。
              </param>
      <param name="application">
                若要安装到 COM + 应用程序的名称。
                 此参数可以为 <see langword="null" />。
                 如果参数是 <see langword="null" /> 和该程序集包含 <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, ，然后使用该属性。
                 否则为应用程序的名称基于程序集名称生成，则会返回。
              </param>
      <param name="partition">
                分区的名称。
                 此参数可以为 <see langword="null" />。
              </param>
      <param name="tlb">
                输出的名称类型库导出程序 (Tlbexp.exe) 文件或一个字符串，包含 <see langword="null" /> 如果应注册帮助器生成的名称。
                 使用的实际名称将置于调用完成后的参数。
              </param>
      <param name="installFlags">
                <see cref="T:System.EnterpriseServices.InstallationFlags" /> 值的按位组合。
              </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>
              安装 COM + 应用程序中指定的程序集。
            </summary>
      <param name="assembly">
                要安装的程序集文件的名称。
              </param>
      <param name="application">
                若要安装到 COM + 应用程序的名称。
                 此参数可以为 <see langword="null" />。
                 如果参数是 <see langword="null" /> 和该程序集包含 <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, ，然后使用该属性。
                 否则为应用程序的名称基于程序集名称生成，则会返回。
              </param>
      <param name="tlb">
                输出的名称类型库导出程序 (Tlbexp.exe) 文件或一个字符串，包含 <see langword="null" /> 如果应注册帮助器生成的名称。
                 使用的实际名称将置于调用完成后的参数。
              </param>
      <param name="installFlags">
                <see cref="T:System.EnterpriseServices.InstallationFlags" /> 值的按位组合。
              </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)">
      <summary>
              安装 COM + 应用程序中指定的程序集。
            </summary>
      <param name="regConfig">
                一个 <see cref="T:System.EnterpriseServices.RegistrationConfig" /> 确定要安装的程序集。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)">
      <summary>
              从给定的应用程序卸载该程序集。
            </summary>
      <param name="assembly">
                要卸载的程序集文件的名称。
              </param>
      <param name="application">
                如果此名称不是 <see langword="null" />, ，它是包含在程序集中的组件的应用程序的名称。
              </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)">
      <summary>
              从给定的应用程序卸载该程序集。
            </summary>
      <param name="assembly">
                要卸载的程序集文件的名称。
              </param>
      <param name="application">
                如果此名称不是 <see langword="null" />, ，它是包含在程序集中的组件的应用程序的名称。
              </param>
      <param name="partition">
                分区的名称。
                 此参数可以为 <see langword="null" />。
              </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">
                  输入程序集没有强名称。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)">
      <summary>
              从给定的应用程序卸载该程序集。
            </summary>
      <param name="regConfig">
                一个 <see cref="T:System.EnterpriseServices.RegistrationConfig" /> 确定要卸载的程序集。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)">
      <summary>
              将指定的程序集安装在 COM + 目录使用事务性语义。
            </summary>
      <param name="assembly">
                要安装的程序集文件的名称。
              </param>
      <param name="application">
                若要安装到 COM + 应用程序或一个字符串，包含的名称 <see langword="null" />。
              </param>
      <param name="partition">
                分区名称或 <see langword="null" />。
              </param>
      <param name="tlb">
                输出名称类型库导出程序 (Tlbexp.exe) 文件或 <see langword="null" />。
              </param>
      <param name="installFlags">
                安装的按位组合的标志值。
              </param>
      <param name="sync">
                基础结构，可以等待，直到指定的程序集已在 COM + 目录中生成一个同步对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)">
      <summary>
              将指定的程序集安装在 COM + 目录使用事务性语义。
            </summary>
      <param name="assembly">
                要安装的程序集文件的名称。
              </param>
      <param name="application">
                若要安装到 COM + 应用程序的名称或 <see langword="null" />。
              </param>
      <param name="tlb">
                输出名称类型库导出程序 (Tlbexp.exe) 文件或 <see langword="null" />。
              </param>
      <param name="installFlags">
                安装的按位组合的标志值。
              </param>
      <param name="sync">
                基础结构，可以等待，直到指定的程序集已在 COM + 目录中生成一个同步对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)">
      <summary>
              将指定的程序集安装在 COM + 目录使用事务性语义。
            </summary>
      <param name="regConfig">
                将程序集安装到 COM + 目录的配置信息。
              </param>
      <param name="sync">
                基础结构，一直等待，直到指定的程序集已在 COM + 目录中生成一个同步对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.IsInTransaction">
      <summary>
              获取一个值，该值指示是否使当前上下文让出 <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> 类实例是事务性的。
            </summary>
      <returns>
              <see langword="true" /> 如果当前上下文让出 <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> 类实例是事务; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)">
      <summary>
              从使用事务性语义的 COM + 应用程序卸载程序集。
            </summary>
      <param name="assembly">
                要卸载的程序集文件的名称。
              </param>
      <param name="application">
                COM + 应用程序包含在程序集中的组件名称或 <see langword="null" />。
              </param>
      <param name="sync">
                生成可以等待，直到指定的程序集已卸载的基础结构的一个同步对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)">
      <summary>
              从使用事务性语义的 COM + 应用程序卸载程序集。
            </summary>
      <param name="assembly">
                要卸载的程序集文件的名称。
              </param>
      <param name="application">
                COM + 应用程序包含在程序集中的组件名称或 <see langword="null" />。
              </param>
      <param name="partition">
                分区名称或 <see langword="null" />。
              </param>
      <param name="sync">
                生成可以等待，直到指定的程序集已卸载的基础结构的一个同步对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)">
      <summary>
              从使用事务性语义的 COM + 应用程序卸载指定的程序集。
            </summary>
      <param name="regConfig">
                指定要从应用程序卸载程序集的配置信息。
              </param>
      <param name="sync">
                通过等待，直到指定的程序集已卸载的基础结构生成一个同步对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.#ctor(System.EnterpriseServices.ResourcePool.TransactionEndDelegate)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ResourcePool" /> 类的新实例。
            </summary>
      <param name="cb">
                一个 <see cref="T:System.EnterpriseServices.ResourcePool.TransactionEndDelegate" />, 时完成事务后, 调用。
                 当前事务中存储的所有项都交回给用户通过该委托。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.GetResource">
      <summary>
              从当前事务获取的资源。
            </summary>
      <returns>
              资源对象中。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.PutResource(System.Object)">
      <summary>
              将资源添加到当前事务。
            </summary>
      <param name="resource">
                要添加的资源。
              </param>
      <returns>
              <see langword="true" /> 如果添加了与池; 资源对象否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SecureMethodAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.SecureMethodAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
      <summary>
              验证直接调用方是指定角色的成员。
            </summary>
      <param name="role">
                指定的角色。
              </param>
      <returns>
              <see langword="true" /> 如果直接调用方是指定角色; 的成员否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
      <summary>
              验证指定的用户属于指定的角色。
            </summary>
      <param name="user">
                指定的用户。
              </param>
      <param name="role">
                指定的角色。
              </param>
      <returns>
              <see langword="true" /> 如果指定的用户是指定角色; 的成员否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallers.GetEnumerator">
      <summary>
              检索对象的枚举接口。
            </summary>
      <returns>
              枚举器接口 <see langword="ISecurityCallersColl" /> 集合。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" /> 属性。
            </summary>
      <param name="role">
                个应用程序、 组件、 接口或方法的安全角色。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> 类并设置 <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" /> 和 <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess" /> 属性。
            </summary>
      <param name="role">
                个应用程序、 组件、 接口或方法的安全角色。
              </param>
      <param name="everyone">
                <see langword="true" /> 需要新创建的角色让每个人都作为用户; 用户组添加否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServiceConfig.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.ServiceConfig" /> 类设置的属性来配置所需的服务。
            </summary>
      <exception cref="T:System.PlatformNotSupportedException">
                  <see cref="T:System.EnterpriseServices.ServiceConfig" /> 当前平台上不支持。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Activate">
      <summary>
              创建或从池中分配的对象时，由基础结构调用。
               重写此方法以将自定义初始化代码添加到对象。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
      <summary>
              该对象放回到该池之前，将由基础结构调用此方法。
               重写此方法，以决定是否该对象放回到该池。
            </summary>
      <returns>
              <see langword="true" /> 如果可以建立池连接的服务的组件;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)">
      <summary>
              调用的构造函数，构造函数字符串中传递后立即由基础结构调用。
               重写此方法进行构造字符串值的使用。
            </summary>
      <param name="s">
                结构字符串。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Deactivate">
      <summary>
              即将停用该对象时，由基础结构调用。
               重写此方法，以实时 (JIT) 编译代码或使用对象池时向对象添加自定义终止代码。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Dispose">
      <summary>
              释放由 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                <see langword="true" /> 若要释放托管和非托管资源;否则为 <see langword="false" /> 仅释放非托管的资源。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)">
      <summary>
              确定对象，并删除关联的 COM + 引用。
            </summary>
      <param name="sc">
                要释放的对象。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)">
      <summary>
              确保在 COM + 上下文中， <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类对象的 <see langword="done" /> 位设置为 <see langword="true" /> 远程方法调用后。
            </summary>
      <param name="s">
                要转换为实现一个请求对象的字符串 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> 接口。
              </param>
      <returns>
              从实现的响应对象的字符串转换 <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> 接口。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
      <summary>
              不能确保在 COM + 上下文中， <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类对象的 <see langword="done" /> 位设置为 <see langword="true" /> 远程方法调用后。
            </summary>
      <param name="s">
                要转换为实现一个请求对象的字符串 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> 接口。
              </param>
      <returns>
              从实现的响应对象的字符串转换 <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> 接口。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
      <summary>
              获取有关的某些信息 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类实例。
            </summary>
      <param name="infoMask">
                位掩码，其中 0x00000001 为服务的组件的进程 id、 0x00000002 是应用程序域 ID 的键，0x00000004 是服务的组件的远程 URI 的密钥。
              </param>
      <param name="infoArray">
                一个字符串数组，可能会包含任何或所有以下顺序︰ 服务的组件的进程 ID、 应用程序域 ID 和服务的组件的远程 URI。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ServicedComponentException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor(System.String)">
      <summary>
              用指定的错误消息初始化 <see cref="T:System.EnterpriseServices.ServicedComponentException" /> 类的新实例。
            </summary>
      <param name="message">
                引发异常时显示到客户端的消息。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor(System.String,System.Exception)">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.ServicedComponentException" /> 类的新实例。
            </summary>
      <param name="message">
                引发异常时显示到客户端的消息。
              </param>
      <param name="innerException">
                引发了当前异常的 <see cref="P:System.Exception.InnerException" />（如果有）。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
      <summary>
              创建由指定的上下文 <see cref="T:System.EnterpriseServices.ServiceConfig" /> 对象，并将其推送到上下文堆栈成为当前上下文。
            </summary>
      <param name="cfg">
                一个 <see cref="T:System.EnterpriseServices.ServiceConfig" /> ，包含要在所包含的代码中使用的服务的配置信息。
              </param>
      <exception cref="T:System.PlatformNotSupportedException">
                  <see cref="T:System.EnterpriseServices.ServiceConfig" /> 当前平台上不支持。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.ServiceDomain.Leave">
      <summary>
              就像方法调用正在返回将触发服务器，然后客户端的策略。
               当前上下文然后从上下文堆栈，并且正在运行时的上下文中弹出 <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> 调用成为当前上下文。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.TransactionStatus" /> 值之一。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  <see cref="T:System.EnterpriseServices.ServiceConfig" /> 当前平台上不支持。
                </exception>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.CreateProperty(System.String,System.Boolean@)">
      <summary>
              创建具有给定名称的属性。
            </summary>
      <param name="name">
                新属性的名称。
              </param>
      <param name="fExists">
                确定属性是否存在。
                 设置为 <see langword="true" /> 返回时如果属性存在。
              </param>
      <returns>
              请求的 <see cref="T:System.EnterpriseServices.SharedProperty" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.CreatePropertyByPosition(System.Int32,System.Boolean@)">
      <summary>
              指定位置创建一个属性。
            </summary>
      <param name="position">
                新属性的索引 
              </param>
      <param name="fExists">
                确定属性是否存在。
                 设置为 <see langword="true" /> 返回时如果属性存在。
              </param>
      <returns>
              请求的 <see cref="T:System.EnterpriseServices.SharedProperty" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.Property(System.String)">
      <summary>
              返回具有给定名称的属性。
            </summary>
      <param name="name">
                请求的属性的名称。
              </param>
      <returns>
              请求的 <see cref="T:System.EnterpriseServices.SharedProperty" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.PropertyByPosition(System.Int32)">
      <summary>
              返回位于给定位置的属性。
            </summary>
      <param name="position">
                该属性的索引。
              </param>
      <returns>
              请求的 <see cref="T:System.EnterpriseServices.SharedProperty" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.#ctor">
      <summary>
              初始化 <see cref="T:System.EnterpriseServices.SharedPropertyGroupManager" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.CreatePropertyGroup(System.String,System.EnterpriseServices.PropertyLockMode@,System.EnterpriseServices.PropertyReleaseMode@,System.Boolean@)">
      <summary>
              查找或创建具有给定的信息的属性组。
            </summary>
      <param name="name">
                请求的属性的名称。
              </param>
      <param name="dwIsoMode">
                <see cref="T:System.EnterpriseServices.PropertyLockMode" /> 值之一。
                 有关详细信息，请参阅备注部分。
              </param>
      <param name="dwRelMode">
                <see cref="T:System.EnterpriseServices.PropertyReleaseMode" /> 值之一。
                 有关详细信息，请参阅备注部分。
              </param>
      <param name="fExist">
                此方法返回时，包含 <see langword="true" /> 属性已经存在; 如果 <see langword="false" /> 如果调用创建了属性。
              </param>
      <returns>
              请求的 <see cref="T:System.EnterpriseServices.SharedPropertyGroup" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.GetEnumerator">
      <summary>
              检索集合的枚举接口。
            </summary>
      <returns>
              用于集合的枚举器接口。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.Group(System.String)">
      <summary>
              查找具有给定名称的属性组。
            </summary>
      <param name="name">
                请求的属性的名称。
              </param>
      <returns>
              请求的 <see cref="T:System.EnterpriseServices.SharedPropertyGroup" />。
            </returns>
    </member>
    <member name="M:System.EnterpriseServices.SynchronizationAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.SynchronizationAttribute" /> 类，具有默认值 <see cref="T:System.EnterpriseServices.SynchronizationOption" />。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.SynchronizationAttribute.#ctor(System.EnterpriseServices.SynchronizationOption)">
      <summary>
              使用指定的 <see cref="T:System.EnterpriseServices.SynchronizationAttribute" /> 初始化 <see cref="T:System.EnterpriseServices.SynchronizationOption" /> 类的新实例。
            </summary>
      <param name="val">
                <see cref="T:System.EnterpriseServices.SynchronizationOption" /> 值之一。
              </param>
    </member>
    <member name="M:System.EnterpriseServices.TransactionAttribute.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.TransactionAttribute" /> 类组件的请求的事务类型设置为 <see cref="F:System.EnterpriseServices.TransactionOption.Required" />。
            </summary>
    </member>
    <member name="M:System.EnterpriseServices.TransactionAttribute.#ctor(System.EnterpriseServices.TransactionOption)">
      <summary>
              新实例初始化 <see cref="T:System.EnterpriseServices.TransactionAttribute" /> 类，同时指定事务类型。
            </summary>
      <param name="val">
                指定的事务类型 <see cref="T:System.EnterpriseServices.TransactionOption" /> 值。
              </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.AccessChecksLevel">
      <summary>
              获取或设置检查级别为进程级别或组件级别的访问权限。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.AccessChecksLevelOption" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Authentication">
      <summary>
              获取或设置远程过程调用 (RPC) 身份验证级别。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.AuthenticationOption" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.ImpersonationLevel">
      <summary>
              获取或设置用于调用此应用程序的目标允许的模拟级别。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.ImpersonationLevelOption" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Value">
      <summary>
              获取或设置一个值，该值指示是否启用 COM + 安全配置。
            </summary>
      <returns>
              <see langword="true" /> 如果启用 COM + 安全配置，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.SoapMailbox">
      <summary>
              在当前版本不支持此属性。
            </summary>
      <returns>
              在当前版本不支持此属性。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.SoapVRoot">
      <summary>
              获取或设置一个值，表示一个在 COM + 应用程序 Web 上的虚拟根目录。
            </summary>
      <returns>
              在 COM + 应用程序 Web 上找到虚拟根目录。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.Value">
      <summary>
              获取指定 <see cref="T:System.EnterpriseServices.ActivationOption" /> 值。
            </summary>
      <returns>
              其中一个 <see cref="T:System.EnterpriseServices.ActivationOption" /> 值，或者 <see langword="Library" /> 或 <see langword="Server" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationIDAttribute.Value">
      <summary>
              获取 COM + 应用程序的 GUID。
            </summary>
      <returns>
              表示 COM + 应用程序的 GUID。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationNameAttribute.Value">
      <summary>
              获取一个值，该值的 COM + 应用程序包含在程序集中的组件的名称。
            </summary>
      <returns>
              COM + 应用程序的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled">
      <summary>
              获取或设置一个值，该值指示是否启用队列支持。
            </summary>
      <returns>
              如果启用队列支持，则为 <see langword="true" />；否则为 <see langword="false" />。
               构造函数设置的默认值是 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads">
      <summary>
              获取或设置用于从队列提取消息并激活相应组件的线程的数目。
            </summary>
      <returns>
              用于处理到达队列中的消息的线程的最大数目。
               默认值为零。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled">
      <summary>
              获取或设置一个值，该值指示应用程序是否将从客户端接受已排队的组件调用。
            </summary>
      <returns>
              如果应用程序接受已排队的组件调用，则为 <see langword="true" />；否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.AutoCompleteAttribute.Value">
      <summary>
              获取一个值，该值的设置 <see langword="AutoComplete" /> COM + 中的选项。
            </summary>
      <returns>
              <see langword="true" /> 如果 <see langword="AutoComplete" /> 启用 COM + 中; 否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value">
      <summary>
              启用或禁用补偿资源管理器 (CRM) 上标记的应用程序。
            </summary>
      <returns>
              <see langword="true" /> 如果启用 CRM;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount">
      <summary>
              获取日志记录的数目。
            </summary>
      <returns>
              日志记录的数目。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW">
      <summary>
              获取一个值，表示事务工作单元 (UOW)。
            </summary>
      <returns>
              一个表示 UOW GUID。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.ActivityId">
      <summary>
              获取当前补偿资源管理器 (CRM) 工作线程的活动 ID。
            </summary>
      <returns>
              获取当前补偿资源管理器 (CRM) 工作线程的活动 ID。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Clerk">
      <summary>
              获取 <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> 为当前的分配器。
            </summary>
      <returns>
              <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> 为当前的分配器。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Compensator">
      <summary>
              获取当前的 CRM Clerk 补偿资源管理器 (CRM) 补偿的 ProgId。
            </summary>
      <returns>
              当前的 CRM Clerk CRM 补偿的 ProgId。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Description">
      <summary>
              获取当前的 CRM Clerk 补偿资源管理器 (CRM) 补偿的说明。
               描述字符串为所提供的字符串 <see langword="ICrmLogControl::RegisterCompensator" /> 方法。
            </summary>
      <returns>
              当前的 CRM Clerk CRM 补偿器说明。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.InstanceId">
      <summary>
              获取当前补偿资源管理器 (CRM) 分配器的实例类 ID (CLSID)。
            </summary>
      <returns>
              当前的 CRM Clerk 实例 CLSID。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.TransactionUOW">
      <summary>
              获取工作单元 (UOW 的当前补偿资源管理器 (CRM) 分配器的事务)。
            </summary>
      <returns>
              UOW 为当前的 CRM Clerk 的事务。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Count">
      <summary>
              补偿资源管理器 (CRM) 监视器集合中获取的分配器监视器的计数。
            </summary>
      <returns>
              到 CRM 中的分配器监视器数目监视器集合。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Item(System.Int32)">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> 对象的 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />。
            </summary>
      <param name="index">
                标识的整数索引 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />。
              </param>
      <returns>
              <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> 对象的 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Item(System.String)">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> 对象的 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />。
            </summary>
      <param name="index">
                标识的数字索引 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />。
              </param>
      <returns>
              <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> 对象的 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk">
      <summary>
              获取一个值，表示补偿资源管理器 (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 对象。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> 对象。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Flags">
      <summary>
              获取一个值，该值指示何时写入日志记录。
            </summary>
      <returns>
              按位组合 <see cref="T:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags" /> 值可提供有关何时写入该记录信息。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Record">
      <summary>
              获取日志记录的用户数据。
            </summary>
      <returns>
              单个 BLOB 包含用户数据。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Sequence">
      <summary>
              日志记录的序列号。
            </summary>
      <returns>
              一个指定的日志记录的序列号的整数值。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ComponentAccessControlAttribute.Value">
      <summary>
              获取一个值，该值指示是否启用对组件的调用上的安全检查。
            </summary>
      <returns>
              <see langword="true" /> 如果安全检查，则启用;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value">
      <summary>
              获取一个值，该值指示是否将 COM 事务集成器 (COMTI) 上下文属性传递到 COM + 上下文。
            </summary>
      <returns>
              <see langword="true" /> 如果 COMTI 上下文属性传递到 COM + 上下文;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ConstructionEnabledAttribute.Default">
      <summary>
              获取或设置构造函数字符串的默认值。
            </summary>
      <returns>
              要使用的默认构造函数的字符串的值。
               默认值为空字符串("")。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled">
      <summary>
              获取或设置一个值，该值指示是否启用 COM + 对象构造支持。
            </summary>
      <returns>
              <see langword="true" /> 如果 COM + 对象结构支持则启用;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ActivityId">
      <summary>
              获取表示包含该组件的活动的 GUID。
            </summary>
      <returns>
              如果当前上下文是一个活动; 的一部分的活动的 GUID否则为 <see langword="GUID_NULL" />。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ApplicationId">
      <summary>
              获取当前应用程序的 GUID。
            </summary>
      <returns>
              当前应用程序 GUID。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows XP 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId">
      <summary>
              获取当前应用程序实例的 GUID。
            </summary>
      <returns>
              当前的应用程序实例的 GUID。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows XP 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ContextId">
      <summary>
              当前上下文中获取的 GUID。
            </summary>
      <returns>
              当前上下文的 GUID。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn">
      <summary>
              获取或设置 <see langword="done" /> 位 COM + 上下文中。
            </summary>
      <returns>
              <see langword="true" /> 如果对象是被停用时该方法返回;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.IsInTransaction">
      <summary>
              获取一个值，该值指示当前的上下文是否为事务性。
            </summary>
      <returns>
              <see langword="true" /> 如果当前上下文是事务性的;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled">
      <summary>
              获取一个值，该值指示是否基于角色的安全性处于活动状态的当前上下文中。
            </summary>
      <returns>
              <see langword="true" /> 如果当前上下文启用了安全性;否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.MyTransactionVote">
      <summary>
              获取或设置 <see langword="consistent" /> 位 COM + 上下文中。
            </summary>
      <returns>
              其中一个 <see cref="T:System.EnterpriseServices.TransactionVote" /> 值，或者 <see langword="Commit" /> 或 <see langword="Abort" />。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.PartitionId">
      <summary>
              获取当前分区的 GUID。
            </summary>
      <returns>
              当前分区的 GUID。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows XP 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.SystemTransaction">
      <summary>
              获取当前事务上下文。
            </summary>
      <returns>
              一个 <see cref="T:System.Transactions.Transaction" /> ，它表示当前事务上下文。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.Transaction">
      <summary>
              获取描述当前 COM + DTC 事务的对象。
            </summary>
      <returns>
              一个对象，表示当前事务。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.TransactionId">
      <summary>
              获取当前的 COM + DTC 事务的 GUID。
            </summary>
      <returns>
              存在一个表示当前的 COM + DTC 事务，如果一个 GUID。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有可用的 COM + 上下文。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  该平台不是 Windows 2000 或更高版本。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers">
      <summary>
              获取或设置一个值，该值指示是否可以在发布服务器上的进程中激活订阅服务器。
            </summary>
      <returns>
              <see langword="true" /> 如果在发布服务器上的进程; 中，可以激活订户否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.FireInParallel">
      <summary>
              获取或设置一个值，该值指示是否要传递到并行的订阅服务器的事件。
            </summary>
      <returns>
              <see langword="true" /> 如果事件所传递到订阅服务器并行;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.PublisherFilter">
      <summary>
              获取或设置一个事件方法的发布者筛选器。
            </summary>
      <returns>
              发布者筛选器。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.EventTrackingEnabledAttribute.Value">
      <summary>
              获取的值 <see cref="P:System.EnterpriseServices.EventTrackingEnabledAttribute.Value" /> 属性，用于指示是否启用了跟踪。
            </summary>
      <returns>
              <see langword="true" /> 如果启用跟踪;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ExceptionClassAttribute.Value">
      <summary>
              获取播放机激活并播放消息路由到的死信队列之前的异常类的名称。
            </summary>
      <returns>
              播放机激活并播放消息路由到的死信队列之前的异常类的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.IISIntrinsicsAttribute.Value">
      <summary>
              获取一个值，该值指示是否启用了对 ASP 内部值的访问。
            </summary>
      <returns>
              <see langword="true" /> 如果启用了访问;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled">
      <summary>
              获取或设置一个值，该值指示是否启用队列支持。
            </summary>
      <returns>
              如果启用队列支持，则为 <see langword="true" />；否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface">
      <summary>
              获取或设置在其启用队列的接口的名称。
            </summary>
      <returns>
              在其启用队列接口的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.JustInTimeActivationAttribute.Value">
      <summary>
              获取的值 <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> 设置。
            </summary>
      <returns>
              <see langword="true" /> 如果启用 JIT 激活;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.LoadBalancingSupportedAttribute.Value">
      <summary>
              获取一个值，该值指示是否启用负载平衡支持。
            </summary>
      <returns>
              <see langword="true" /> 如果启用负载平衡支持;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.MustRunInClientContextAttribute.Value">
      <summary>
              获取一个值，该值指示是否可以在创建者的上下文中创建的属性化的对象。
            </summary>
      <returns>
              <see langword="true" /> 如果要创建者; 的上下文中创建对象否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout">
      <summary>
              获取或设置要对某个对象变得可用在池中在引发异常之前等待的时间长度。
               此值是以毫秒为单位。
            </summary>
      <returns>
              超时值（以毫秒为单位）。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled">
      <summary>
              获取或设置一个值，该值指示是否启用对象池。
            </summary>
      <returns>
              <see langword="true" /> 如果启用了对象池;否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize">
      <summary>
              获取或设置该池的最大大小的值。
            </summary>
      <returns>
              池中的对象的最大数目。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize">
      <summary>
              获取或设置该池的最小大小的值。
            </summary>
      <returns>
              池中的对象的最小数目。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.Application">
      <summary>
              获取或设置在其中要安装该程序集的 COM + 应用程序的名称。
            </summary>
      <returns>
              是用来安装该程序集的 COM + 应用程序的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.ApplicationRootDirectory">
      <summary>
              获取或设置该应用程序的根目录的名称。
            </summary>
      <returns>
              应用程序的根目录的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.AssemblyFile">
      <summary>
              获取或设置要安装的程序集的文件名。
            </summary>
      <returns>
              要安装的程序集文件的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.InstallationFlags">
      <summary>
              获取或设置一个标志，指示如何将程序集安装。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.InstallationFlags" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.Partition">
      <summary>
              获取或设置 COM + 分区的名称。
            </summary>
      <returns>
              COM + 分区的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.TypeLibrary">
      <summary>
              获取或设置输出的名称类型库导出程序 (Tlbexp.exe) 文件。
            </summary>
      <returns>
              输出的名称类型库导出程序 (Tlbexp.exe) 文件。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode">
      <summary>
              获取对象或文件的错误代码。
            </summary>
      <returns>
              对象或文件的错误代码。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorString">
      <summary>
              获取说明 <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode" />。
            </summary>
      <returns>
              <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode" /> 的说明。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.MajorRef">
      <summary>
              如果适用，导致该错误的对象获取的密钥值。
            </summary>
      <returns>
              导致该错误，如果适用的对象的键值。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.MinorRef">
      <summary>
              获取导致该错误，如属性名称的项的精确规范。
            </summary>
      <returns>
              该项目，如属性名称，导致该错误精确规范。
               如果发生多个错误，或不适用， <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.MinorRef" /> 返回字符串"&lt; 无效 &gt;"。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.Name">
      <summary>
              获取导致了错误的文件的名称。
            </summary>
      <returns>
              对象或导致了错误的文件的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationException.ErrorInfo">
      <summary>
              获取一个数组 <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" /> 描述注册错误的对象。
            </summary>
      <returns>
              数组 <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" /> 对象。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.Callers">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.SecurityCallers" /> 描述调用方的对象。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.SecurityCallers" /> 描述调用方的对象。
            </returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">
                  没有安全上下文。
                </exception>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.SecurityCallContext" /> 介绍的安全调用上下文的对象。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.SecurityCallContext" /> 介绍的安全调用上下文的对象。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.DirectCaller">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.SecurityIdentity" /> 介绍此方法的直接调用方的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.EnterpriseServices.SecurityIdentity" /> 值。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled">
      <summary>
              确定是否在当前上下文中启用了安全检查。
            </summary>
      <returns>
              <see langword="true" /> 如果当前上下文中; 中启用安全检查否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel">
      <summary>
              获取 <see langword="MinAuthenticationLevel" /> 值从 <see langword="ISecurityCallContext" /> COM + 中的集合。
            </summary>
      <returns>
              <see langword="MinAuthenticationLevel" /> 值从 <see langword="ISecurityCallContext" /> COM + 中的集合。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.NumCallers">
      <summary>
              获取 <see langword="NumCallers" /> 值从 <see langword="ISecurityCallContext" /> COM + 中的集合。
            </summary>
      <returns>
              <see langword="NumCallers" /> 值从 <see langword="ISecurityCallContext" /> COM + 中的集合。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.OriginalCaller">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.SecurityIdentity" /> 描述原始调用方。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.SecurityIdentity" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallers.Count">
      <summary>
              链中获取调用方的数目。
            </summary>
      <returns>
              链中的调用方的数目。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallers.Item(System.Int32)">
      <summary>
              获取指定 <see cref="T:System.EnterpriseServices.SecurityIdentity" /> 项。
            </summary>
      <param name="idx">
                要使用索引号来访问的项。
              </param>
      <returns>
              一个 <see cref="T:System.EnterpriseServices.SecurityIdentity" /> 对象。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AccountName">
      <summary>
              获取描述此标识的用户的名称。
            </summary>
      <returns>
              描述此标识的用户的名称。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AuthenticationLevel">
      <summary>
              获取描述此标识的用户的身份验证级别。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.AuthenticationOption" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AuthenticationService">
      <summary>
              获取描述此标识的身份验证服务。
            </summary>
      <returns>
              描述此标识的身份验证服务。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.ImpersonationLevel">
      <summary>
              获取描述此标识的用户的模拟级别。
            </summary>
      <returns>
              一个 <see cref="T:System.EnterpriseServices.ImpersonationLevelOption" /> 值。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.Description">
      <summary>
              获取或设置角色说明。
            </summary>
      <returns>
              对角色的说明。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.Role">
      <summary>
              获取或设置的安全角色。
            </summary>
      <returns>
              向应用程序、 组件、 接口或方法应用了安全角色。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess">
      <summary>
              作为用户设置一个值，该值指示是否要添加 Everyone 用户组。
            </summary>
      <returns>
              <see langword="true" /> 为了要求新创建的角色具有 Everyone （未修改该应用程序已存在的角色） 的用户; 用户组添加否则为 <see langword="false" /> 若要取消添加 Everyone 用户组作为用户添加。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Binding">
      <summary>
              获取或设置绑定选项，它指示该活动提交的所有工作都是要绑定到只有一个单线程单元 (STA)。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.BindingOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.BindingOption.NoBinding" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.BringYourOwnSystemTransaction">
      <summary>
              获取或设置 <see cref="T:System.Transactions.Transaction" /> 表示现有事务，它提供用于运行由标识事务的设置 <see cref="T:System.EnterpriseServices.ServiceConfig" />。
            </summary>
      <returns>
              <see cref="T:System.Transactions.Transaction" />。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.BringYourOwnTransaction">
      <summary>
              获取或设置 <see cref="T:System.EnterpriseServices.ITransaction" /> 表示现有事务，它提供用于运行由标识事务的设置 <see cref="T:System.EnterpriseServices.ServiceConfig" />。
            </summary>
      <returns>
              一个 <see cref="T:System.EnterpriseServices.ITransaction" />。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.COMTIIntrinsicsEnabled">
      <summary>
              获取或设置一个值，该值指示是否启用 COM 事务集成器 (COMTI) 内部函数。
            </summary>
      <returns>
              <see langword="true" /> 如果启用了 COMTI 内部函数，则否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.IISIntrinsicsEnabled">
      <summary>
              获取或设置一个值，该值指示是否启用 Internet 信息服务 (IIS) 内部函数。
            </summary>
      <returns>
              <see langword="true" /> 如果启用了 IIS 内部函数，则否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Inheritance">
      <summary>
              获取或设置一个值，该值指示是否以构造一个新的上下文，根据当前上下文或创建新的上下文中的信息仅基于 <see cref="T:System.EnterpriseServices.ServiceConfig" />。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.InheritanceOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.IsolationLevel">
      <summary>
              获取或设置事务的隔离级别。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.TransactionIsolationLevel" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Any" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.PartitionId">
      <summary>
              获取或设置要使用的 COM + 分区的 GUID。
            </summary>
      <returns>
              要使用该分区的 GUID。
               默认值为零的 GUID。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.PartitionOption">
      <summary>
              获取或设置一个值，指示如何将分区用于包含的工作。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.PartitionOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.PartitionOption.Ignore" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.SxsDirectory">
      <summary>
              获取或设置为包含的工作的并行程序集的目录。
            </summary>
      <returns>
              要用于通过并行程序集的目录的名称。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.SxsName">
      <summary>
              获取或设置包含的工作的并行程序集的文件名。
            </summary>
      <returns>
              通过并行程序集的文件名。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.SxsOption">
      <summary>
              获取或设置一个值，该值指示如何配置通过并行程序集。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.SxsOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.SxsOption.Ignore" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Synchronization">
      <summary>
              获取或设置一个值，该值指示组件请求的自动同步的类型。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.SynchronizationOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.SynchronizationOption.Disabled" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.ThreadPool">
      <summary>
              获取或设置一个值，指示它运行该活动提交的工作线程池。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.ThreadPoolOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.ThreadPoolOption.None" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TipUrl">
      <summary>
              获取或设置允许包含的代码以在现有事务中运行的事务 Internet 协议 (TIP) URL。
            </summary>
      <returns>
              一个提示的 URL。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TrackingAppName">
      <summary>
              获取或设置指向在其下报告跟踪程序信息的应用程序 ID 对应的文本字符串。
            </summary>
      <returns>
              跟踪程序报告信息的应用程序 ID。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TrackingComponentName">
      <summary>
              获取或设置为在其下报告跟踪程序信息的上下文名称对应的文本字符串。
            </summary>
      <returns>
              跟踪程序报告信息的上下文名称。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TrackingEnabled">
      <summary>
              获取或设置一个值，该值指示是否启用了跟踪。
            </summary>
      <returns>
              <see langword="true" /> 如果启用跟踪;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Transaction">
      <summary>
              获取或设置一个值，该值指示包含的工作中使用事务的方式。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.TransactionOption" /> 值之一。
               默认值为 <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TransactionDescription">
      <summary>
              获取或设置显示事务统计信息时使用的名称。
            </summary>
      <returns>
              显示事务统计信息时使用的名称。
               默认值为 <see langword="null" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TransactionTimeout">
      <summary>
              获取或设置一个新的事务的事务超时时间。
            </summary>
      <returns>
              事务超时时间，以秒为单位。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SharedProperty.Value">
      <summary>
              获取或设置共享属性的值。
            </summary>
      <returns>
              共享的属性的值。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.SynchronizationAttribute.Value">
      <summary>
              获取的当前设置 <see cref="P:System.EnterpriseServices.SynchronizationAttribute.Value" /> 属性。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.SynchronizationOption" /> 值之一。
               默认值为 <see langword="Required" />。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Isolation">
      <summary>
              获取或设置事务隔离级别。
            </summary>
      <returns>
              <see cref="T:System.EnterpriseServices.TransactionIsolationLevel" /> 值之一。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Timeout">
      <summary>
              获取或设置此事务的超时值。
            </summary>
      <returns>
              以秒为单位的事务超时。
            </returns>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Value">
      <summary>
              获取 <see cref="T:System.EnterpriseServices.TransactionOption" /> 值对于此事务，并可以选择禁用事务服务。
            </summary>
      <returns>
              指定的事务类型 <see cref="T:System.EnterpriseServices.TransactionOption" /> 值。
            </returns>
    </member>
    <member name="T:System.EnterpriseServices.AccessChecksLevelOption">
      <summary>
              指定对访问检查应用程序时，可以在进程级别仅或根本级别，包括组件、 接口和方法级别的级别。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AccessChecksLevelOption.Application">
      <summary>
              启用访问仅在进程级别检查。
               在组件、 接口或方法级别不进行任何访问检查。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AccessChecksLevelOption.ApplicationComponent">
      <summary>
              启用访问每个级别上到应用程序调用的检查。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ActivationOption">
      <summary>
              应用程序中指定的服务的组件的激活的方式。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ActivationOption.Library">
      <summary>
              指定标记的应用程序中的服务的组件在创建者的进程中激活。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ActivationOption.Server">
      <summary>
              指定标记的应用程序中的服务的组件在系统提供的进程中激活。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Activity">
      <summary>
              创建用于同步或异步批处理作业都可以使用 COM + 服务而无需创建一个在 COM + 组件的活动。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationAccessControlAttribute">
      <summary>
              指定包含的程序集的访问控制 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationActivationAttribute">
      <summary>
              指定程序集中组件运行创建者的进程中或者在系统进程。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationIDAttribute">
      <summary>
              指定此程序集的应用程序 ID （作为 GUID)。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationNameAttribute">
      <summary>
              指定要用于安装的程序集中的组件的 COM + 应用程序的名称。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationQueuingAttribute">
      <summary>
              为标记的程序集启用队列支持，并启用应用程序从“消息队列”队列读取方法调用。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.AuthenticationOption">
      <summary>
              指定的远程过程调用 (RPC) 身份验证机制。
               仅当适用 <see cref="T:System.EnterpriseServices.ActivationOption" /> 设置为 <see langword="Server" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Default">
      <summary>
              使用指定的身份验证服务的默认身份验证级别。
               在 COM + 中，此设置由提供 <see langword="DefaultAuthenticationLevel" /> 中的属性 <see langword="LocalComputer" /> 集合。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.None">
      <summary>
              身份验证不会发生。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Connect">
      <summary>
              仅在建立连接时，请验证凭据。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Call">
      <summary>
              每次调用的开头的凭据进行身份验证。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Packet">
      <summary>
              验证凭据并验证接收了所有调用数据。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Integrity">
      <summary>
              验证凭据并确认已在传输过程中修改了任何调用数据。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Privacy">
      <summary>
              验证凭据并加密数据包，包括数据和发件人的身份和签名。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.AutoCompleteAttribute">
      <summary>
              将标记该特性化的方法 <see langword="AutoComplete" /> 对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.BindingOption">
      <summary>
              指示是否由提交所有工作 <see cref="T:System.EnterpriseServices.Activity" /> 应该绑定到只有一个单线程单元 (STA)。
               此枚举的多线程单元 (MTA) 上没有任何影响。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.BindingOption.NoBinding">
      <summary>
              该活动提交的工作不绑定到单个 sta。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.BindingOption.BindingToPoolThread">
      <summary>
              该活动提交的工作绑定到单个 sta。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.BOID">
      <summary>
              表示与事务关联的工作单元。
               此结构采用 <see cref="T:System.EnterpriseServices.XACTTRANSINFO" />。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.BYOT">
      <summary>
              包装的 COM + <see langword="ByotServerEx" /> 类和 COM + DTC 接口 <see langword="ICreateWithTransactionEx" /> 和 <see langword="ICreateWithTipTransactionEx" />。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute">
      <summary>
              在标记的应用程序上启用补偿资源管理器 (CRM)。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.Clerk">
      <summary>
              将事务性操作的记录写入日志。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo">
      <summary>
              包含描述活动的补偿资源管理器 (CRM) 分配器对象的信息。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor">
      <summary>
              包含所有 Clerk 进程中处于活动状态的快照。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.Compensator">
      <summary>
              表示所有补偿资源管理器 (CRM) 补偿器基类。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions">
      <summary>
              指定补偿资源管理器 (CRM) 补偿，应收到用于控制事务完成哪些阶段的标志以及恢复是否应失败后仍有疑问的事务，如果已尝试恢复。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.PreparePhase">
      <summary>
              表示在准备阶段。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.CommitPhase">
      <summary>
              表示提交阶段。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.AbortPhase">
      <summary>
              表示中止阶段。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.AllPhases">
      <summary>
              表示所有阶段。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.FailIfInDoubtsRemain">
      <summary>
              如果有疑问的事务保持后尝试恢复将失败。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.LogRecord">
      <summary>
              表示作为 COM + 传递了非结构化的日志记录 <see langword="CrmLogRecordRead" /> 结构。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags">
      <summary>
              描述补偿资源管理器 (CRM) 日志记录的来源。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.ForgetTarget">
      <summary>
              指示应忘记传递的记录。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringPrepare">
      <summary>
              在准备期间写入日志记录。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringCommit">
      <summary>
              在提交期间写入日志记录。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringAbort">
      <summary>
              在中止期间写入日志记录。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDurringRecovery">
      <summary>
              在恢复期间写入日志记录。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringReplay">
      <summary>
              在重播期间写入日志记录。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.ReplayInProgress">
      <summary>
              重播时写入日志记录。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.TransactionState">
      <summary>
              指定当前的补偿资源管理器 (CRM) 事务的状态。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Active">
      <summary>
              事务处于活动状态。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Committed">
      <summary>
              该事务被提交。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Aborted">
      <summary>
              事务被中止。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Indoubt">
      <summary>
              事务是不确定。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ComponentAccessControlAttribute">
      <summary>
              启用安全检查，则对组件的调用。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.COMTIIntrinsicsAttribute">
      <summary>
              使您能够将上下文属性从 COM 事务集成器 (COMTI) 传递到 COM + 上下文。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ConstructionEnabledAttribute">
      <summary>
              启用 COM + 对象结构支持。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ContextUtil">
      <summary>
              获取有关 COM + 对象上下文信息。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.DescriptionAttribute">
      <summary>
              在程序集 （应用程序）、 组件、 方法或接口上设置的说明。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.EventClassAttribute">
      <summary>
              将特性化的类标记为事件类。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.EventTrackingEnabledAttribute">
      <summary>
              启用事件跟踪的组件。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ExceptionClassAttribute">
      <summary>
              设置排队类的队列异常类。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IAsyncErrorNotify">
      <summary>
              提交通过异步方式成批工作上的实现错误捕获 <see cref="T:System.EnterpriseServices.Activity" /> 对象。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IISIntrinsicsAttribute">
      <summary>
              启用对从 ASP 内部值的访问 <see cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ImpersonationLevelOption">
      <summary>
              指定允许调用服务器应用程序的目标时的模拟级别。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Default">
      <summary>
              使用指定的身份验证服务的默认模拟级别。
               在 COM + 中，此设置由提供 <see langword="DefaultImpersonationLevel" /> 中的属性 <see langword="LocalComputer" /> 集合。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Anonymous">
      <summary>
              客户端是匿名的服务器。
               服务器进程可以模拟客户端，但是模拟令牌不包含有关客户端的任何信息。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Identify">
      <summary>
              系统默认的级别。
               服务器可以获取客户端的标识，并且服务器可以模拟客户端进行 ACL 检查。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Impersonate">
      <summary>
              服务器可以模拟代表客户端操作时的客户端的安全上下文。
               服务器可以作为客户端访问本地资源。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Delegate">
      <summary>
              功能最强大的模拟级别。
               服务器选择此级别时，可以 （无论是本地或远程） 模拟代表客户端操作时的客户端的安全上下文
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.InheritanceOption">
      <summary>
              指示是否要创建新的上下文基于当前上下文或中的信息 <see cref="T:System.EnterpriseServices.ServiceConfig" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InheritanceOption.Inherit">
      <summary>
              从现有上下文创建新的上下文。
              <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" /> 是默认值为 <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InheritanceOption.Ignore">
      <summary>
              默认上下文中创建新的上下文。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.InstallationFlags">
      <summary>
              与使用标志 <see cref="T:System.EnterpriseServices.RegistrationHelper" /> 类。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Default">
      <summary>
              执行操作的默认安装，该配置时，安装时，注册，并假定该应用程序已存在。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ExpectExistingTypeLib">
      <summary>
              不导出类型库中;一个可以找到由生成或提供的类型库名称。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.CreateTargetApplication">
      <summary>
              创建目标应用程序。
               如果目标已经存在，就会出错。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.FindOrCreateTargetApplication">
      <summary>
              如果不存在;，创建了应用程序否则使用现有的应用程序。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ReconfigureExistingApplication">
      <summary>
              如果使用现有的应用程序，可确保此应用程序上的属性匹配那些在程序集中。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ConfigureComponentsOnly">
      <summary>
              配置组件仅，不要配置方法或接口。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ReportWarningsToConsole">
      <summary>
              当遇到警报文本时，将其写入控制台。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Register">
      <summary>
              不应使用。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Install">
      <summary>
              不应使用。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Configure">
      <summary>
              不应使用。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.InterfaceQueuingAttribute">
      <summary>
              启用队列支持为标记的接口。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.AppDomainHelper">
      <summary>
              切换到给定的应用程序域中，应将对象绑定到，并在给定的函数回调。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.AssemblyLocator">
      <summary>
              定位一个程序集，并返回其模块的信息。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ClientRemotingConfig">
      <summary>
              定义一个静态 <see cref="M:System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> 创建客户端类型库的客户端远程处理配置文件的方法。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ClrObjectFactory">
      <summary>
              激活启用 SOAP 的 COM + 应用程序代理从客户端。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ComManagedImportUtil">
      <summary>
              标识并安装 COM + 目录中的组件。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ComSoapPublishError">
      <summary>
              错误处理程序在 COM + 应用程序中发布支持 SOAP 的服务。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.GenerateMetadata">
      <summary>
              生成 COM+ 组件的公共语言运行时 (CLR) 元数据。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IClrObjectFactory">
      <summary>
              激活启用 SOAP 的 COM + 应用程序代理从客户端。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComManagedImportUtil">
      <summary>
              标识并安装 COM + 目录中的组件。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapIISVRoot">
      <summary>
              接口定义用于创建和删除 Internet 信息服务 (IIS) 6.0 虚拟根。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapMetadata">
      <summary>
              指定生成的 COM + 组件的公共语言运行时 (CLR) 元数据的方法。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapPublisher">
      <summary>
              发布用于启用 SOAP 的 COM + 应用程序的 COM 接口。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IISVirtualRoot">
      <summary>
              创建和删除 Internet 信息服务 (IIS) 6.0 虚拟根。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IServerWebConfig">
      <summary>
              创建启用 SOAP 的 COM + 应用程序的 Web.config 文件并将组件条目添加到 COM 接口在发布应用程序中的文件。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapClientImport">
      <summary>
              导入经过身份验证，加密的 SOAP 客户端代理。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapServerTlb">
      <summary>
              进程身份验证，在服务器上的加密的 SOAP 组件。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapServerVRoot">
      <summary>
              发布服务器中的经过身份验证、 加密 SOAP 虚拟根目录。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapUtility">
      <summary>
              提供实用工具，以支持启用 COM + SOAP 的应用程序代理服务器和客户端代理的导入导出。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.Publish">
      <summary>
              发布用于启用 SOAP 的 COM + 应用程序的 COM 接口。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ServerWebConfig">
      <summary>
              创建启用 SOAP 的 COM + 应用程序的 Web.config 文件。
               此外可以在发布应用程序中的 COM 接口的文件添加组件项。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapClientImport">
      <summary>
              导入经过身份验证，加密的 SOAP 客户端代理。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapServerTlb">
      <summary>
              进程身份验证，在服务器上的加密的 SOAP 组件。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapServerVRoot">
      <summary>
              发布服务器中的经过身份验证、 加密 SOAP 虚拟根目录。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapUtility">
      <summary>
              提供实用工具，以支持启用 COM + SOAP 的应用程序代理服务器和客户端代理的导入导出。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IPlaybackControl">
      <summary>
              排队的组件中在服务器端播放错误的异常处理和客户端失败的消息队列传送机制中的函数。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IProcessInitControl">
      <summary>
              支持设置的超时时间为 <see cref="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" /> 方法。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IProcessInitializer">
      <summary>
              支持的 COM 组件启动或关闭时可以调用的方法。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IRegistrationHelper">
      <summary>
              安装和配置 COM + 目录中的程序集。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IRemoteDispatch">
      <summary>
              实现的 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类来确定如果 <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" /> 类属性设置为 <see langword="true" /> 或 <see langword="false" /> 远程方法调用。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IServiceCall">
      <summary>
              实现创建的活动通过提交的批处理工作 <see cref="T:System.EnterpriseServices.Activity" />。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.IServicedComponentInfo">
      <summary>
              实现的 <see cref="T:System.EnterpriseServices.ServicedComponent" /> 类来获取有关通过组件的信息 <see cref="M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)" /> 方法。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ITransaction">
      <summary>
              对应到分布式事务处理协调器 (DTC) <see langword="ITransaction" /> 接口，并在支持的对象通过获取 <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" />。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.JustInTimeActivationAttribute">
      <summary>
              打开或关闭在实时 (JIT) 激活。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.LoadBalancingSupportedAttribute">
      <summary>
              确定组件是否加入负载平衡，如果安装并在服务器上启用组件负载平衡服务。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.MustRunInClientContextAttribute">
      <summary>
              强制属性化的对象，如有可能创建的创建者，上下文中。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ObjectPoolingAttribute">
      <summary>
              启用并配置组件的对象池。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.PartitionOption">
      <summary>
              指示要在其中运行 COM + 分区的上下文。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PartitionOption.Ignore">
      <summary>
              在全局分区中运行包含的上下文。
              <see cref="F:System.EnterpriseServices.PartitionOption.Ignore" /> 是默认设置 <see cref="P:System.EnterpriseServices.ServiceConfig.PartitionOption" /> 时 <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> 设置为 <see cref="F:System.EnterpriseServices.InheritanceOption.Ignore" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PartitionOption.Inherit">
      <summary>
              包含的上下文运行在当前包含 COM + 分区。
               这是默认设置 <see cref="P:System.EnterpriseServices.ServiceConfig.PartitionOption" /> 时 <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> 设置为 <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PartitionOption.New">
      <summary>
              在不同于当前包含分区的 COM + 分区中运行包含的上下文。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.PrivateComponentAttribute">
      <summary>
              将组件标识为私有组件仅看到并在同一个应用程序中由组件激活。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.PropertyLockMode">
      <summary>
              指定用于访问共享的属性组管理器中的共享的属性的模式。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyLockMode.SetGet">
      <summary>
              锁在 get 或 set，保证每个获取或设置对共享属性的操作过程的属性是原子的。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyLockMode.Method">
      <summary>
              只要执行调用方的当前方法将锁定专供调用方的共享的属性组中的所有属性。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.PropertyReleaseMode">
      <summary>
              指定新的共享的属性组中的属性的释放模式。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyReleaseMode.Standard">
      <summary>
              所有客户端已释放时它们对属性组的引用，该属性组将自动销毁。
               这是默认 COM 模式。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyReleaseMode.Process">
      <summary>
              直到在其中创建的进程已终止，该属性组不会被破坏。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationConfig">
      <summary>
              提供有关将程序集安装到 COM + 目录的配置信息。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationErrorInfo">
      <summary>
              检索有关扩展的错误信息与多个 COM + 对象相关的方法。
               这还包括安装、 导入和导出 COM + 应用程序和组件的方法。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationException">
      <summary>
              检测到注册错误时所引发的异常。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationHelper">
      <summary>
              安装和配置 COM + 目录中的程序集。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationHelperTx">
      <summary>
              由.NET Framework 基础结构用于安装和配置 COM + 目录中的程序集，同时保持新建立的事务。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ResourcePool">
      <summary>
              将对象存储在当前事务。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ResourcePool.TransactionEndDelegate">
      <summary>
              表示用于处理事务的结束的方法。
            </summary>
      <param name="resource">
                返回到该委托传递的对象。
              </param>
    </member>
    <member name="T:System.EnterpriseServices.SecureMethodAttribute">
      <summary>
              可确保，基础结构将调用通过接口的方法或类中每一方法时使用的安全服务。
               需要使用接口来使用安全服务类。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityCallContext">
      <summary>
              描述导致当前方法调用的调用方的链。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityCallers">
      <summary>
              提供当前的调用链中的标识的有序的集合。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityIdentity">
      <summary>
              包含 COM + 调用链中的标识有关的信息。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityRoleAttribute">
      <summary>
              配置应用程序或组件的角色。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ServiceConfig">
      <summary>
              指定并配置要在调用时输入的域中处于活动状态的服务 <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> 或创建 <see cref="T:System.EnterpriseServices.Activity" />。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ServicedComponent">
      <summary>
              表示使用 COM + 服务的所有类的基类。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ServicedComponentException">
      <summary>
              在已维护的组件中检测到错误时引发的异常。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ServiceDomain">
      <summary>
              允许通过标识的代码段 <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> 和 <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> 为在其自己的上下文中运行和操作方式，就好像的上下文中创建的对象调用的方法。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SharedProperty">
      <summary>
              访问共享的属性。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SharedPropertyGroup">
      <summary>
              表示共享属性的集合。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SharedPropertyGroupManager">
      <summary>
              控制访问的共享的属性组。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SxsOption">
      <summary>
              指示如何通过并行程序集配置为 <see cref="T:System.EnterpriseServices.ServiceConfig" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SxsOption.Ignore">
      <summary>
              包含的上下文中未使用并行程序集。
              <see cref="F:System.EnterpriseServices.SxsOption.Ignore" /> 是默认设置 <see cref="P:System.EnterpriseServices.ServiceConfig.SxsOption" /> 时 <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> 设置为 <see cref="F:System.EnterpriseServices.InheritanceOption.Ignore" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SxsOption.Inherit">
      <summary>
              使用当前的并行程序集所包含的上下文。
              <see cref="F:System.EnterpriseServices.SxsOption.Inherit" /> 是默认设置 <see cref="P:System.EnterpriseServices.ServiceConfig.SxsOption" /> 时 <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> 设置为 <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SxsOption.New">
      <summary>
              为包含的上下文创建新的并行程序集。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SynchronizationAttribute">
      <summary>
              设置组件的同步值。
               此类不能被继承。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.SynchronizationOption">
      <summary>
              指定的自动同步组件请求的类型。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Disabled">
      <summary>
              COM + 时确定对象的上下文，则忽略该组件的同步要求。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.NotSupported">
      <summary>
              具有此值的对象永远不会参与同步，而不考虑其调用方的状态。
               此设置才可用的非事务性，并且在不使用在实时 (JIT) 激活的组件。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Supported">
      <summary>
              具有此值的对象参与同步过程中，如果它存在。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Required">
      <summary>
              可以确保从组件创建的所有对象都保持都同步。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.RequiresNew">
      <summary>
              具有此值的对象必须参与其中 COM + 管理上下文和单元代表在调用中涉及的所有组件的新同步。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.ThreadPoolOption">
      <summary>
              指示线程池工作，提交的 <see cref="T:System.EnterpriseServices.Activity" />, ，运行。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.None">
      <summary>
              使用没有线程池。
               如果此值用于配置 <see cref="T:System.EnterpriseServices.ServiceConfig" /> 传递给 <see cref="T:System.EnterpriseServices.Activity" />, ，将引发异常。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.Inherit">
      <summary>
              使用调用方的线程单元具有相同类型的线程池单元。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.STA">
      <summary>
              使用单线程单元 (STA)。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.MTA">
      <summary>
              使用多线程的单元 (MTA)。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionAttribute">
      <summary>
              指定可用于属性化的对象的事务的类型。
               允许的值为成员 <see cref="T:System.EnterpriseServices.TransactionOption" /> 枚举。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionIsolationLevel">
      <summary>
              指定的值的 <see cref="T:System.EnterpriseServices.TransactionAttribute" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.Any">
      <summary>
              从调用组件的隔离级别中获取该组件的隔离级别。
               如果这是根组件，使用的隔离级别是 <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.ReadUncommitted">
      <summary>
              发出共享的锁和任何排他锁将生效。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.ReadCommitted">
      <summary>
              正在读取数据以避免读取已修改的数据，但在该事务，从而导致不可重复读取或幻像数据末尾之前可以更改数据时，将保持共享的锁。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.RepeatableRead">
      <summary>
              在查询中，阻止其他用户更新的数据使用的所有数据上放置锁。
               可防止非可重复读取，但仍有可能幻像行。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable">
      <summary>
              可以防止更新或插入事务完成之前。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionOption">
      <summary>
              指定组件请求的自动事务类型。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Disabled">
      <summary>
              将忽略在当前上下文中的任何事务。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.NotSupported">
      <summary>
              没有用于控制事务的上下文中创建的组件。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Supported">
      <summary>
              如果存在，则共享该事务。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Required">
      <summary>
              共享一个事务，如果其中一个存在，并且如有必要创建一个新事务。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.RequiresNew">
      <summary>
              创建新的事务，而不考虑当前上下文的状态的组件。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionStatus">
      <summary>
              指示事务状态。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.Commited">
      <summary>
              提交该事务。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.LocallyOk">
      <summary>
              该事务已不能提交或中止。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.NoTransaction">
      <summary>
              没有事务正在使用通过 <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.Aborting">
      <summary>
              在事务正在中止。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.Aborted">
      <summary>
              事务被中止。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionVote">
      <summary>
              指定所允许的事务结果投票值。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionVote.Commit">
      <summary>
              提交当前事务。
            </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionVote.Abort">
      <summary>
              中止当前事务。
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.XACTTRANSINFO">
      <summary>
              表示中使用的结构 <see cref="T:System.EnterpriseServices.ITransaction" /> 接口。
            </summary>
    </member>
  </members>
</doc>