<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Design</name>
  </assembly>
  <members>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>发生时 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 删除或添加的任何组件。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>当发出请求时要显示或隐藏智能标记面板时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>当释放设计图面时出现。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>当调用了时发生 <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> 方法 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>当设计器加载已完成时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>要从中加载设计器时出现。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>当设计器已完成的卸载时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>当设计器是将要卸载时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>发生时 <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 对调用方法 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>当前活动设计器更改时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>创建一个设计器时出现。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>当释放的设计器时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>当全局所选内容更改时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>菜单命令状态已发生更改时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>创建一个会话时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>释放会话时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>当 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> 无法在序列化管理器的名称表中找到指定名称时发生。</summary>
      <exception cref="T:System.InvalidOperationException">序列化管理器没有活动的序列化。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>在序列化完成时发生。</summary>
      <exception cref="T:System.InvalidOperationException">序列化管理器没有活动的序列化。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>执行撤消操作之前立即发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>执行撤消操作后立即发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged">
      <summary>当关联的数据任何的源属性更改时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed">
      <summary>刷新架构后发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>当关联的数据任何的源属性更改时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>刷新架构后发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IControlDesignerView.ViewEvent">
      <summary>由视图和设计器组件的设计宿主引发的事件。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged">
      <summary>当数据源具有影响数据绑定控件的方式更改时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed">
      <summary>字段或基础数据源的数据已更改时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>数据源控件中影响数据绑定控件某种方式已更改时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>字段或基础数据源的数据已更改时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>该服务加载完毕时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged">
      <summary>更改任何参数或参数的属性中的一个时发生。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>有关此成员的说明，请参阅 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>有关此成员的说明，请参阅 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>有关此成员的说明，请参阅 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>有关此成员的说明，请参阅 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete">
      <summary>当设计器完成加载 Web 窗体页时发生。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>发生时 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 启动拖放操作。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>发生时 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 完成拖动操作。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>在应刷新当前所选内容时发生。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>激发 OnEventHandlerChanged 事件。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.StoredProcedures">
      <summary>指示应从数据存储架构中返回的存储的过程。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Tables">
      <summary>指示应从数据存储架构中返回的表。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Views">
      <summary>指示应从数据存储架构中返回的数据视图。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>表示的当前值 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>表示的以前值 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>此字段为仅供内部使用。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>表示节点的值。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>控制可以访问标记项的分层集合内的节点。</summary>
    </member>
    <member name="F:System.Web.UI.Design.DesignerRegion.DesignerRegionAttributeName">
      <summary>定义设计器区域的 HTML 属性名称。</summary>
    </member>
    <member name="F:System.Web.UI.Design.DesignTimeData.DataBindingHandler">
      <summary>获取数据绑定事件处理程序。</summary>
    </member>
    <member name="F:System.Web.UI.Design.SupportsPreviewControlAttribute.Default">
      <summary>获取实例 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 设置为默认预览值的类。 此字段为只读。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Click">
      <summary>指示在设计器区域单击引发视图事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Paint">
      <summary>指示绘制设计图面上的控件引发视图事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.TemplateModeChanged">
      <summary>指示更改控件设计器的模板模式下引发视图事件。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>指定是否生成的程序集进行强命名，并将在稍后对其进行签名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>指定是否应生成类型库包装的源。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>指定是否使用只从命令行，而依赖于已注册的版本的输入。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>指定包含用于生成的程序集的强名称密钥容器的文件的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>指定包含用于生成的程序集的强名称密钥文件的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>指定用于生成的程序集的强名称。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>指定错误是否在 Microsoft Build Engine (MSBuild) 格式输出。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>指示是否将导入该控件时显示 ActiveX 导入程序 tool 徽标。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>指定将在其中创建生成的程序集的目录的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>指定要生成的 ActiveX 控件包装的文件名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>指定是否覆盖现有文件时生成程序集。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>指定用于生成程序集进行签名的公钥。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>指定 <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> 要用于解析类型和引用时生成程序集。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>指定是否在无提示模式下，会生成编译时显示的信息较少进行编译。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>指定是否在详细模式下，将生成更在编译时显示的信息进行编译。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxWrapperGen.GeneratedSources">
      <summary>此字段初始化本地 <see cref="T:System.Collections.ArrayList" /> 名为 GeneratedSources 变量中。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>指定设计器可访问性对象。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>定义一个本地 <see cref="T:System.Drawing.Point" /> 表示一个无效的值 <see cref="T:System.Drawing.Point" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>将 menuEditorService 变量初始化为 null。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问组件送纸器菜单。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问容器菜单。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来为设计器中访问属性页。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可以用于访问编辑标签处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可以用于访问取消按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问默认按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问 end 按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问家庭按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问智能标记调用处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问下移按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问移动左处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问移动右侧的键的处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问密钥的处理程序上移。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问下移一按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问微移高度减小按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问微移高度增加按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问微移左处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问微移右侧的键的处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问密钥的处理程序上移。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问微移宽度减小按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问微移宽度增加按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问反向取消按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可以用于访问选择下一步按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可以用于访问选择上一个键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问班次结束按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问 SHIFT 主页按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问大小高度减小按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问大小高度增加按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问大小宽度减小按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问大小宽度增加按键处理程序。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问选项卡顺序选择处理。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>可用于访问选择菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来设置状态矩形。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来设置状态矩形文本。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 可用来访问送纸器选择菜单。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>窗口句柄。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>一个值，指示应如何在 Visual Studio 设计器中显示时主题窗口滚动条。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> 类的新实例。</summary>
      <param name="oldSurface">正在失去激活设计图面。</param>
      <param name="newSurface">正在激活的设计图面。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.ArrayEditor" /> 使用指定的数据类型的数组。</summary>
      <param name="type">数组中项的数据类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>获取此集合都设计为包含中的数据类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> ，该值指示集合都设计为包含中的数据类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>获取数组中的项。</summary>
      <param name="editValue">从其检索的项的数组。</param>
      <returns>一个包含指定数组中的项的数组。 如果在指定的对象 <paramref name="editValue" /> 参数不一个数组，则返回一个新的空对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>数组中设置的项。</summary>
      <param name="editValue">要将项目设为的数组。</param>
      <param name="value">要将设置为数组的项的对象数组。</param>
      <returns>新数组的实例。 如果指定的对象 <paramref name="editValue" /> 参数不是一个数组，指定的对象 <paramref name="editValue" /> 返回参数。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.BinaryEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">通过它可能获得编辑服务的服务提供程序对象。</param>
      <param name="value">要编辑的值的对象。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，这应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑器样式 <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>enum 值，该值指示提供的编辑样式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>获取缓冲区中的字节。</summary>
      <returns>无符号的字节数组引用。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>获取控件的显示模式。</summary>
      <returns>此控件使用的显示模式。 在中定义的返回的值 <see cref="T:System.ComponentModel.Design.DisplayMode" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.Paint" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>将原始数据从数据缓冲区写入文件。</summary>
      <param name="path">要将保存到的文件路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 是一个空字符串 ("")，仅包含空格，或者包含一个或多个无效字符。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效，例如位于未映射的驱动器上。</exception>
      <exception cref="T:System.IO.IOException">文件写入失败。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</exception>
      <exception cref="T:System.UnauthorizedAccessException">为指定的操作系统不允许请求的访问 <paramref name="path" />, ，例如，当访问时 Write 或 ReadWrite 并且文件或目录设置为只读访问权限。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>处理 <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> 上的事件 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 控件的 <see cref="T:System.Windows.Forms.ScrollBar" />。</summary>
      <param name="source">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>设置要在查看器中显示的字节数组。</summary>
      <param name="bytes">要显示的字节数组。</param>
      <exception cref="T:System.ArgumentNullException">指定的字节数组是 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>设置当前显示模式。</summary>
      <param name="mode">要设置的显示模式。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的显示模式不是来自 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 枚举。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>设置要在查看器中显示的文件。</summary>
      <param name="path">要从加载的文件路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 是一个空字符串 ("")，仅包含空格，或者包含一个或多个无效字符。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效，例如位于未映射的驱动器上。</exception>
      <exception cref="T:System.IO.IOException">文件加载失败。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须少于 248 个字符，且文件名必须少于 260 个字符。</exception>
      <exception cref="T:System.UnauthorizedAccessException">为指定的操作系统不允许请求的访问 <paramref name="path" />, ，例如，当访问时 Write 或 ReadWrite 并且文件或目录设置为只读访问权限。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>设置的当前行 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 视图。</summary>
      <param name="line">若要显示从当前行。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 类使用指定的集合类型。</summary>
      <param name="type">对于此编辑器来编辑集合的类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>取消对集合的更改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>指示是否可以删除原始集合的成员。</summary>
      <param name="value">要移除的值。</param>
      <returns>true 如果允许此值从集合中删除;否则为 false。 默认实现始终返回 true。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以一次选择多个集合项。</summary>
      <returns>true 如果多个集合成员可以选择在同一时间;否则为 false。 默认情况下，这将返回 true。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 类的新实例。</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 用于编辑的集合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>指示是否可以移除原始集合的成员。</summary>
      <param name="value">要移除的值。</param>
      <returns>true 如果允许此值从集合中删除;否则为 false。 默认情况下，此方法返回的值从 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> 的 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 该窗体。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>指示是否可以一次选择多个集合项。</summary>
      <returns>true 如果多个集合成员可以选择在同一时间;否则为 false。 默认情况下，此方法返回的值从 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> 的 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 该窗体。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">要创建的项的类型。</param>
      <returns>指定对象的新实例或 null 如果用户选择要取消此实例的创建。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>销毁该对象的指定的实例。</summary>
      <param name="instance">要销毁的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>向用户显示指定的异常。</summary>
      <param name="e">要显示的异常。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>获取请求的服务是否可用。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>该服务的实例或 null 如果找不到该服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>提供了执行集合值已更改时处理的机会。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>显示找不到对话框中使用指定的编辑器 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 对象。</summary>
      <param name="edSvc">
        <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 可用来显示对话框。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.DialogResult" /> ，该值指示从对话框中返回的结果代码。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>创建一个新的窗体来显示和编辑当前集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 作为用户界面提供用于编辑集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>获取此集合包含的数据类型。</summary>
      <returns>在集合中，项的数据类型或 <see cref="T:System.Object" /> 如果不是 Item 属性可以在集合上找到。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">要创建的项的类型。</param>
      <returns>指定对象的新实例。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器可以包含的数据类型。</summary>
      <returns>此集合可以包含的数据类型的数组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>销毁该对象的指定的实例。</summary>
      <param name="instance">要销毁的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">通过它可以获得编辑服务的服务提供程序对象。</param>
      <param name="value">要编辑的值的对象。</param>
      <returns>对象的新值。 如果尚未更改对象的值，则它返回的对象应与传递给它的对象相同。</returns>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">签出被签入源代码管理程序的文件的尝试未成功。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>检索给定的列表项的显示文本。</summary>
      <param name="value">为其检索显示文本的列表项。</param>
      <returns>显示的文本 <paramref name="value" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑样式 <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示所提供的编辑样式。 如果该方法不支持指定的上下文中，此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 标识符。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>获取包含指定的集合的对象的数组。</summary>
      <param name="editValue">要编辑的集合。</param>
      <returns>一个数组，包含集合对象或为空对象数组，如果指定的集合不继承 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>返回包含给定的对象的列表</summary>
      <param name="instance">
        <see cref="T:System.Collections.ArrayList" /> 作为对象返回。</param>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> 其中包含要创建的各个对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>获取请求的服务是否可用。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>该服务的实例或 null 如果找不到该服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>将指定的数组设置为集合中的项。</summary>
      <param name="editValue">要编辑的集合。</param>
      <param name="value">要将设置为集合项的对象数组。</param>
      <returns>新创建的集合对象; 否则，该集合由 <paramref name="editValue" /> 参数。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>集合编辑器中显示默认的帮助主题。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>在源代码文件的默认事件在组件上创建一个方法签名，并导航到该位置的用户的光标。</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">签出被签入源代码管理程序的文件的尝试失败。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <summary>在垃圾回收将对象回收之前，尝试通过调用 Dispose(false) 来释放资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>尝试从设计器的组件的设计模式站点检索指定的类型的服务。</summary>
      <param name="serviceType">要请求的服务的类型。</param>
      <returns>实现请求的服务的对象或 null 如果无法解析服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、 编辑和设计指定的组件。</summary>
      <param name="component">此设计器的的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>重新初始化现有的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 null。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 null。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>初始化已初始化为默认值之外的设置的导入组件的设置。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>获取 <see cref="T:System.ComponentModel.InheritanceAttribute" /> 指定 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</summary>
      <param name="toInvoke">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 要检索其继承属性。</param>
      <returns>
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> 指定设计器。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>设置组件的默认属性。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器更改或移除它通过公开的属性集项 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="attributes">该组件的类的属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器更改或移除它通过公开的事件的一套项 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器更改或移除它通过公开的属性集项 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器向它通过公开的特性集中添加 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="attributes">该组件的类的属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器向它通过公开的事件集添加 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器向它通过公开的属性集添加 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件已更改。</summary>
      <param name="member">一个 <see cref="T:System.ComponentModel.MemberDescriptor" /> 指示已更改的成员。</param>
      <param name="oldValue">成员的旧值。</param>
      <param name="newValue">成员的新值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 该组件是将要更改。</summary>
      <param name="member">一个 <see cref="T:System.ComponentModel.MemberDescriptor" /> 指示将要更改的成员。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>指示在集合中是否存在指定的名称匹配的属性。</summary>
      <param name="propertyName">要检查在集合中的属性的名称。</param>
      <returns>true 如果该属性集合中的存在否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes">
        <see cref="T:System.Attribute" /> 组件的类的对象。 中的属性字典的键是 <see cref="P:System.Attribute.TypeId" /> 属性的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 表示组件的类的事件的对象。 中的事件字典的键是事件名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 表示组件的类的属性的对象。 中的属性字典的键是属性名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes">
        <see cref="T:System.Attribute" /> 组件的类的对象。 中的属性字典的键是 <see cref="P:System.Attribute.TypeId" /> 属性的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 表示组件的类的事件的对象。 中的事件字典的键是事件名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 表示组件的类的属性的对象。 中的属性字典的键是属性名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Add(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 添加到集合。</summary>
      <param name="value">一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 要添加到集合。</param>
      <returns>索引 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 已添加到集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Contains(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>获取一个值，该值指示是否 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 包含指定 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</summary>
      <param name="value">要查找的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
      <returns>true 如果 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 包含在集合; 否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceDescriptor[],System.Int32)">
      <summary>副本 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 值到一维 <see cref="T:System.Array" /> 中指定索引处。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 从复制的值的目标 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />。</param>
      <param name="index">中的索引 <paramref name="array" /> 开始复制。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>返回的索引 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 中 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />。</summary>
      <param name="value">要查找的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
      <returns>索引 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 的 <paramref name="value" /> 中 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />, ，如果找到; 否则为-1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>将插入 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 到 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 中指定索引处。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Remove(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>中移除特定 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 从 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 移除的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroup.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Add(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 添加到集合。</summary>
      <param name="value">一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 要添加到集合。</param>
      <returns>索引 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 已添加到集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Contains(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>获取一个值，该值指示是否 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 包含指定 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</summary>
      <param name="value">要查找的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
      <returns>true 如果 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 包含在集合; 否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceGroup[],System.Int32)">
      <summary>副本 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 值到一维 <see cref="T:System.Array" /> 中指定索引处。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 从复制的值的目标 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />。</param>
      <param name="index">中的索引 <paramref name="array" /> 开始复制。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>返回的索引 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 中 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />。</summary>
      <param name="value">要查找的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
      <returns>索引 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 的 <paramref name="value" /> 中 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, ，如果找到; 否则为-1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>将插入 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 到 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 中指定索引处。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Remove(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>中移除特定 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 从 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 移除的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceProviderService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.AddDataSourceInstance(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>当在派生类中重写，创建和返回给定的数据源的一个实例并将其添加到设计图面上。</summary>
      <param name="host">设计器宿主。</param>
      <param name="dataSourceDescriptor">数据源。</param>
      <returns>
        <see cref="T:System.Object" /> 表示添加的数据源的实例。</returns>
      <exception cref="T:System.ArgumentException">无法创建或解析的类型名称。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.GetDataSources">
      <summary>当在派生类中重写，检索在数据源的集合 EnvDTE.Project 级别。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, ，或 null 在没有数据源是否 EnvDTE.Project 级别。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)">
      <summary>当在派生类中重写时，将调用 添加新数据源向导。</summary>
      <param name="parentWindow">父窗口中。</param>
      <param name="startPosition">窗体的初始位置。</param>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 的新添加的数据源集合或 null 如果不添加了任何数据源。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>当在派生类中重写时，将调用 配置数据源 上指定的数据源的对话框。</summary>
      <param name="parentWindow">父窗口中。</param>
      <param name="startPosition">窗体的初始位置。</param>
      <param name="dataSourceDescriptor">数据源。</param>
      <returns>true 如果未对该数据源，则进行任何更改否则为 false。</returns>
      <exception cref="T:System.ArgumentException">指定的数据源无效或 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.NotifyDataSourceComponentAdded(System.Object)">
      <summary>当在派生类中重写时通知服务已将一个表示数据源的组件添加到设计图面。</summary>
      <param name="dsc">数据源组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 具有指定名称和数据类型的类。</summary>
      <param name="name">标识数据存储区中的列的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 类，具有指定的名称、 数据类型和默认值。</summary>
      <param name="name">标识数据存储区中的列的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
      <param name="defaultValue">列的默认值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>用指定的值初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 类的新实例。</summary>
      <param name="name">标识数据存储区中的列的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
      <param name="defaultValue">列的默认值</param>
      <param name="identity">true 如果此字段为标识字段的数据行中;否则为 false。</param>
      <param name="nullable">true 如果在数据存储区; 该字段可为 null否则为 false。</param>
      <param name="primaryKey">true 如果此字段为; 中的数据行的主键否则为 false。</param>
      <param name="precision">最大的数值数据域使用的数字个数。</param>
      <param name="scale">数值数据字段中小数点右侧位数最大数量。</param>
      <param name="length">数据字段，以字节为单位的长度。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 类，具有指定的名称、 数据访问接口和连接字符串。</summary>
      <param name="name">与此连接关联的名称。</param>
      <param name="providerName">用来访问基础数据存储区提供程序对象的名称</param>
      <param name="connectionString">指定如何连接到数据存储区的字符串。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 类具有指定的名称、 数据访问接口和连接字符串，并指示连接是否已从配置文件加载。</summary>
      <param name="name">与此连接关联的名称。</param>
      <param name="providerName">用来访问基础数据存储区的提供程序对象的名称。</param>
      <param name="connectionString">指定如何连接到数据存储区的字符串。</param>
      <param name="isConfigured">true 如果连接被创建从信息存储在应用程序的配置文件;否则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> 类，具有指定的名称、 数据类型和输入/输出语义。</summary>
      <param name="name">参数的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
      <param name="direction">
        <see cref="T:System.Data.ParameterDirection" /> 值之一。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataRelationship.#ctor(System.String,System.Collections.ICollection,System.ComponentModel.Design.Data.DesignerDataTable,System.Collections.ICollection)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> 类，具有指定的名称、 父列和子关系。</summary>
      <param name="name">关系的名称。</param>
      <param name="parentColumns">定义的关系中父表的列。</param>
      <param name="childTable">在关系中子表。</param>
      <param name="childColumns">定义的关系中子表的列。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> 类的新实例。</summary>
      <param name="name">存储过程的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> 类，具有指定的名称和所有者。</summary>
      <param name="name">存储过程的名称。</param>
      <param name="owner">数据存储区存储过程的所有者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.CreateParameters">
      <summary>当在派生类中重写，则返回的存储过程的参数集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> 对象的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> 类的新实例。</summary>
      <param name="name">表的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> 类，具有指定的名称和所有者。</summary>
      <param name="name">表的名称。</param>
      <param name="owner">表的所有者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.CreateRelationships">
      <summary>当在派生类中重写时返回的关系对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> 对象的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> 类的新实例。</summary>
      <param name="name">表或视图的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> 类的新实例。</summary>
      <param name="name">表或视图的名称。</param>
      <param name="owner">数据存储区的表或视图的所有者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.CreateColumns">
      <summary>当在派生类中重写，则返回的数据存储区列对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 对象的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> 类的新实例。</summary>
      <param name="name">视图的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> 类，具有指定的名称和所有者。</summary>
      <param name="name">视图的名称。</param>
      <param name="owner">数据存储区的视图的所有者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>创建新的数据连接或编辑现有连接使用设计工具的新连接的用户界面。</summary>
      <param name="owner">连接对话框的父窗口。</param>
      <param name="initialConnection">该连接，如果有的话，以编辑。 若要创建新的连接， <paramref name="initialConnection" /> 应 null。</param>
      <returns>一个新的或已编辑 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象，或 null 如果用户已取消。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildQuery(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.ComponentModel.Design.Data.QueryBuilderMode,System.String)">
      <summary>启动一个对话框，以生成 SQL 查询字符串。</summary>
      <param name="owner">对话框的父窗口。</param>
      <param name="connection">要用于查询的数据连接。</param>
      <param name="mode">
        <see cref="T:System.ComponentModel.Design.Data.QueryBuilderMode" /> 值之一。</param>
      <param name="initialQueryText">查询的初始值或 <see cref="F:System.String.Empty" /> 若要创建一个新查询。</param>
      <returns>一个包含 SQL 查询字符串或 null 如果用户已取消。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.ConfigureConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.String)">
      <summary>将写入应用程序的配置文件的连接字符串。</summary>
      <param name="owner">对话框中，如果有父窗口。</param>
      <param name="connection">一个 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象，其中包含要保存的连接数据。</param>
      <param name="name">新的连接配置项的名称。</param>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象，其中包含已保存的连接数据与 <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name" /> 属性设置为 <paramref name="name" />, ，和 <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured" /> 属性设置为 true。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetCodeExpression(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>返回包含从应用程序的配置文件检索连接字符串所需的源代码的代码表达式。</summary>
      <param name="connection">要从应用程序的配置文件中检索的连接。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 从应用程序的配置文件检索连接字符串所需的对象，其中包含的源代码。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetConnectionSchema(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>获取指定的数据连接的架构。</summary>
      <param name="connection">要为其返回架构信息的数据连接。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.IDesignerDataSchema" /> 对象，其中包含指定的数据连接的架构信息或 null 如果没有架构信息可用。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetDesignTimeConnection(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>获取可在设计时使用的数据库连接。</summary>
      <param name="connection">所需的数据连接。</param>
      <returns>一个 <see cref="T:System.Data.Common.DbConnection" /> 可在设计时使用的对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>获取指定的架构项的集合。</summary>
      <param name="schemaClass">要返回的架构对象。</param>
      <returns>指定类型的架构对象的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>返回一个值，该值指示数据存储区是否包含指定的数据架构的对象。</summary>
      <param name="schemaClass">要返回的架构对象。</param>
      <returns>true 如果数据存储支持指定的数据架构的对象;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的对象值，使用所提供的 GetEditorStyle 的编辑器样式。 服务提供商提供，以便可以获取所需的所有编辑服务。</summary>
      <param name="context">一个用于提供其他上下文信息的类型描述符上下文。</param>
      <param name="provider">通过它可能获得编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，这应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索的编辑样式 <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> 方法。 如果不支持的方法，这将返回 None。</summary>
      <param name="context">一个用于提供其他上下文信息的类型描述符上下文。</param>
      <returns>enum 值，该值指示提供的编辑样式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 类使用提供的名称的字符串。</summary>
      <param name="displayName">标头中显示的文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 类使用提供的名称和类别字符串。</summary>
      <param name="displayName">标头中显示的文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 定义面板条目的分组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 类的新实例。</summary>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 定义面板条目的分组。</param>
      <param name="description">为此项，这可能导致在工具提示或状态栏中使用的补充文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>添加提供 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 到当前集合。</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" />  添加。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 处已添加的值的索引。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>确定 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 是否包含特定元素。</summary>
      <param name="value">要在 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 中定位的 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
      <returns>true 如果 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 包含指定的值; 否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>将当前集合中的元素复制到提供的数组，从指定的数组索引处开始。</summary>
      <param name="array">一维 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 从当前集合复制的元素的目标的数组。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>确定集合中特定项的索引。</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 要在集合中查找。</param>
      <returns>如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 第一个匹配项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>将元素插入 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 的指定索引处。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>从 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 移除的 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 类的新实例。</summary>
      <param name="component">对相关的组件 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>返回一个对象，表示由与关联的组件提供的服务 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</summary>
      <param name="serviceType">由提供的服务 <see cref="T:System.ComponentModel.Component" />。</param>
      <returns>
        <see cref="T:System.Object" /> ，表示由提供的服务 <see cref="T:System.ComponentModel.Component" />。 此值是 null 如果 <see cref="T:System.ComponentModel.Component" /> 不提供指定的服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>返回的集合 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 列表中包含的对象。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 数组，其中包含此列表中的项。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>用默认设置初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 类，具有指定的控制面板项。</summary>
      <param name="value">数组 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象来填充集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>添加提供 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 到当前集合。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>向其中新元素插入到集合的内部列表的位置。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>将所提供的元素添加 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 数组转换为当前集合的末尾。</summary>
      <param name="value">数组 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 要添加对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>将所提供的元素添加 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 到当前集合的末尾。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>指示集合是否包含特定值。</summary>
      <param name="value">要搜索的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <returns>true 如果集合包含指定的值;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>将当前集合中的元素复制到提供的数组，从指定的数组索引处开始。</summary>
      <param name="array">类型的一维数组 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 是从当前集合中复制的元素的目标。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 - 当前集合中的元素数大于从的可用空间 <paramref name="index" /> 到目标数组的末尾。</exception>
      <exception cref="T:System.InvalidCastException">目标数组的类型将当前集合的元素强制转换可能由于故障向下转换的结果时出现问题。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>确定集合中特定项的索引。</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 要在集合中查找。</param>
      <returns>索引 <paramref name="value" /> 如果在内部列表中找到; 否则为-1。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>将插入所提供 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 插入集合中的指定位置处。</summary>
      <param name="index">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 要插入到集合。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 为小于 0 或大于当前集合中的元素数。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear">
      <summary>清除 <see cref="T:System.Collections.CollectionBase" /> 实例的内容时执行其他自定义进程。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <summary>插入新元素插入之前执行其他自定义进程 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 实例。</summary>
      <param name="index">从零开始的索引，在其中插入 <paramref name="value" />。</param>
      <param name="value">处的元素的新值 <paramref name="index" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <summary>当移除的元素时执行其他自定义进程 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 实例。</summary>
      <param name="index">从零开始的索引，到 <paramref name="value" /> 找不到。</param>
      <param name="value">要移除的元素的值 <paramref name="index" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>在设置值之前执行其他自定义进程 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 实例。</summary>
      <param name="index">从零开始的索引，到 <paramref name="oldValue" /> 找不到。</param>
      <param name="oldValue">要替换的值 <paramref name="newValue" />。</param>
      <param name="newValue">处的元素的新值 <paramref name="index" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>在验证一个值时，请执行其他自定义进程。</summary>
      <param name="value">要验证的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>移除特定的第一个匹配项 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 集合中。</summary>
      <param name="value">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 若要从当前集合中移除。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> 类的新实例。</summary>
      <param name="relatedObject">与集合相关联的对象。</param>
      <param name="changeType">一个值，指定是否 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 已添加或从集合中移除。</param>
      <param name="actionLists">应用操作后列表元素的集合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类，使用指定的方法，并显示名称。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ，其中包含与此项关联的方法。</param>
      <param name="memberName">从派生类中的方法的区分大小写名称 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 来调用通过控制面板项。</param>
      <param name="displayName">此项的面板文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类，使用指定的方法，并显示名称和一个标志，指示该项是否应该出现在其他用户界面上下文。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ，其中包含与此项关联的方法。</param>
      <param name="memberName">从派生类中的方法的区分大小写名称 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 来调用通过控制面板项。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也视为设计器谓词关联的方法。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类，具有指定的方法、 显示和类别名称。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ，其中包含与此项关联的方法。</param>
      <param name="memberName">从派生类中的方法的区分大小写名称 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 来调用通过控制面板项。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 用于在面板上的类似项进行分组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 带有指定的方法、 显示和类别名称和一个标志，指示该项是否应该出现在其他用户界面上下文类。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ，其中包含与此项关联的方法。</param>
      <param name="memberName">从派生类中的方法的区分大小写名称 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 来调用通过控制面板项。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 用于在面板上的类似项进行分组。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也视为关联组件的设计器谓词关联的方法。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类，使用指定的方法和类别名称和显示文本和说明文本。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ，其中包含与此项关联的方法。</param>
      <param name="memberName">从派生类中的方法的区分大小写名称 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 来调用通过控制面板项。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 用于在面板上的类似项进行分组。</param>
      <param name="description">此项，请在工具提示或状态栏中使用的补充文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类，使用指定的方法和类别名称、 显示和说明文本和一个标志，指示该项是否应该出现在其他用户界面上下文。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ，其中包含与此项关联的方法。</param>
      <param name="memberName">从派生类中的方法的区分大小写名称 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 来调用通过控制面板项。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 用于在面板上的类似项进行分组。</param>
      <param name="description">此项，请在工具提示或状态栏中使用的补充文本。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也视为关联组件的设计器谓词关联的方法。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>以编程方式执行与关联的方法 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />。</summary>
      <exception cref="T:System.InvalidOperationException">该方法，在名为 <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> 找不到。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类与指定的属性和显示名称。</summary>
      <param name="memberName">与此面板项关联的属性名称区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类，使用指定的属性和类别名称，并显示文本。</summary>
      <param name="memberName">与此面板项关联的属性名称区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 用于在面板上的类似项进行分组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类，使用指定的属性和类别名称和显示文本和说明文本。</summary>
      <param name="memberName">与此面板项关联的属性名称区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写 <see cref="T:System.String" /> 用于在面板上的类似项进行分组。</param>
      <param name="description">此项，请在工具提示或状态栏中使用的补充文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 类的新实例。</summary>
      <param name="serviceProvider">服务提供程序当前的设计时环境中。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>添加 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 到当前集合的托管智能标记。</summary>
      <param name="comp">
        <see cref="T:System.ComponentModel.IComponent" /> 以使用智能标记关联。</param>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 包含要添加的新智能标记项。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>添加 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 到当前集合的托管智能标记。</summary>
      <param name="comp">
        <see cref="T:System.ComponentModel.IComponent" /> 以使用智能标记关联。</param>
      <param name="designerActionListCollection">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 包含要添加的新智能标记项。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>释放所有组件的管理并清除所有推模型智能标记列表。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>确定是否当前的智能标记服务管理指定的组件的操作列表。</summary>
      <param name="comp">要搜索的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>true 如果该组件由当前的服务;否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 类使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>返回与组件关联的智能标记项列表的集合。</summary>
      <param name="component">与之关联的智能标记该组件。</param>
      <returns>指定组件的智能标记的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <summary>返回的智能标记的集合与组件相关联的指定类型的项列表。</summary>
      <param name="component">与之关联的智能标记该组件。</param>
      <param name="type">
        <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> 筛选与关联的智能标记。</param>
      <returns>指定组件的指定类型的智能标记的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>检索与组件关联的拉出模型智能标记。</summary>
      <param name="component">与之关联的智能标记该组件。</param>
      <param name="actionLists">要添加到关联的智能标记的集合。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>检索与组件关联的推送模型智能标记。</summary>
      <param name="component">与之关联的智能标记该组件。</param>
      <param name="actionLists">要添加到关联的智能标记的集合。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>从指定的智能标记列表中移除由当前服务管理的所有组件。</summary>
      <param name="actionList">智能标记要删除的列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>删除与指定的组件相关联的所有智能标记列表。</summary>
      <param name="comp">要取消的智能标记关联的组件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>从指定的智能标记列表中移除指定的组件。</summary>
      <param name="comp">要取消的智能标记关联的组件。</param>
      <param name="actionList">要删除的智能标记列表。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> 类的新实例。</summary>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于在面板上的类似项目进行分组的类别。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 类使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>隐藏智能标记面板中的组件。</summary>
      <param name="component">将隐藏其智能标记面板的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>更新智能标记面板。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 刷新。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>指示是否自动显示智能标记面板。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 自动显示。</param>
      <returns>true 若要自动显示智能标记面板中;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>显示组件的智能标记面板。</summary>
      <param name="component">此时应显示其智能标记面板的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> 类的新实例。</summary>
      <param name="relatedObject">与面板相关联的对象。</param>
      <param name="changeType">一个值，指定面板是否正处于显示或隐藏。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> 类的实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>返回命令对象的集合。</summary>
      <param name="name">要返回集合的类型，该值指示 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</param>
      <returns>包含指定的类型的集合，或者 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerb" />— 命令对象。 基实现始终返回 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序，或 null 是否有用于解析服务没有父级。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序，或 null 是否有用于解析服务没有父级。</param>
      <param name="rootComponentType">要创建的根组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="rootComponentType">要创建的根组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>开始使用给定的设计器加载程序加载过程。</summary>
      <param name="loader">要用于加载设计器设计器加载程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>开始加载过程。</summary>
      <param name="rootComponentType">要在设计模式下创建的组件类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>创建组件的实例。</summary>
      <param name="componentType">要创建的组件类型。</param>
      <returns>新创建的组件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>当一个组件添加到容器时，请创建一个设计器。</summary>
      <param name="component">应为其创建设计器的组件。</param>
      <param name="rootDesigner">true 若要创建根设计器; false 创建普通的设计器。</param>
      <returns>请求的设计器的实例或 null 如果找不到设计器不匹配。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>创建给定类型的实例。</summary>
      <param name="type">要创建的类型。</param>
      <returns>新创建的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>创建一个容器适用于嵌套的控件或组件。</summary>
      <param name="owningComponent">管理嵌套的容器的组件。</param>
      <returns>嵌套的容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>创建一个容器适用于嵌套的控件或组件。</summary>
      <param name="owningComponent">管理嵌套的容器的组件。</param>
      <param name="containerName">嵌套容器的其他名称。</param>
      <returns>嵌套的容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>序列化到设计图面上的更改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>从服务容器中获取一项服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>一种实现，也是其派生的类的对象 <paramref name="serviceType" />, ，或 null 如果中的服务容器不存在该服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>将集合成员复制到指定 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 数组从指定的目标索引处开始。</summary>
      <param name="array">要复制到的集合成员的数组。</param>
      <param name="index">要开始将复制到的目标索引。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 实例的枚举器。</summary>
      <returns>用于 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> 方法。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 从复制的值的目标 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</param>
      <param name="index">中的索引 <paramref name="array" /> 开始复制。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns>用于 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> 类的新实例。</summary>
      <param name="surface">正在创建设计图面。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序。 如果设计图面管理器无法解决服务请求转发给该提供者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>创建实例的设计图面。</summary>
      <returns>新的设计图面实例中。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>创建实例的设计图面。</summary>
      <param name="parentProvider">父服务提供程序。 新的合并的服务提供程序将会创建将首先请求一种服务，此提供程序，然后将委托到设计图面管理器对象的任何故障。 此合并的提供程序将传递到 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 方法。</param>
      <returns>新的设计图面实例中。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>创建设计图面的的实现。</summary>
      <param name="parentProvider">要传递到设计图面上的服务提供程序。 这是的任一实例 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 或对象可实现 <see cref="T:System.IServiceProvider" />, ，并表示的服务提供商之间的合并 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类和外部传递提供程序。</param>
      <returns>新的设计图面实例中。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>在设计图面管理器的服务容器中获取一项服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>一种实现，也是一个派生的类的给定的服务类型; 对象否则为 null 如果中的服务容器不存在该服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.EventBindingService" /> 类的新实例。</summary>
      <param name="provider">从该服务提供商 <see cref="T:System.ComponentModel.Design.EventBindingService" /> 将查询服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>创建一个唯一的方法名称。</summary>
      <param name="component">将为其创建的方法名称的组件。</param>
      <param name="e">要创建的名称的事件。</param>
      <returns>唯一的方法名称中。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 或 <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>提供不再使用一个特定的方法在事件处理程序的通知。</summary>
      <param name="component">该方法绑定到该组件。</param>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 事件处理程序。</param>
      <param name="methodName">要释放的方法的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>返回兼容的方法名称的集合。</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 包含兼容的委托。</param>
      <returns>是兼容的方法名称的字符串的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>从服务提供商获取请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>对指定的服务的引用 <paramref name="serviceType" />, ，或 null 如果请求的服务不可用。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>显示用户代码。</summary>
      <returns>true 如有可能以显示其代码;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>显示指定方法的用户代码。</summary>
      <param name="component">该方法绑定到该组件。</param>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 事件处理程序。</param>
      <param name="methodName">针对要显示其代码的方法的名称。</param>
      <returns>true 如有可能以显示其代码;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>在给定的行号显示的用户代码。</summary>
      <param name="lineNumber">要显示的行号。</param>
      <returns>true 如有可能以显示其代码;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>创建指定的组件和事件的事件处理程序方法的唯一名称。</summary>
      <param name="component">该事件的组件实例连接到。</param>
      <param name="e">要创建的名称的事件。</param>
      <returns>此事件的事件处理程序方法建议的名称。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 或 <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>获取具有指定的事件与兼容的方法签名的事件处理程序方法的集合。</summary>
      <param name="e">要获取有关兼容的事件处理程序方法的事件。</param>
      <returns>是兼容的方法名称的字符串的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>获取 <see cref="T:System.ComponentModel.EventDescriptor" /> 表示指定的属性说明符，则在它表示事件的事件。</summary>
      <param name="property">表示一个事件的属性。</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> 属性是表示，事件或 null 如果属性不表示一个事件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>将一组事件描述符转换为一组的属性描述符。</summary>
      <param name="events">要将转换为属性的事件。</param>
      <returns>一个数组 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 描述事件组的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>将单个事件描述符转换为属性描述符。</summary>
      <param name="e">要转换的事件。</param>
      <returns>一个 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 描述的事件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>设计器中显示的用户代码。</summary>
      <returns>true 如果显示的代码;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>显示指定的事件的用户代码。</summary>
      <param name="component">事件连接到该组件。</param>
      <param name="e">要显示的事件。</param>
      <returns>true 如果显示的代码;否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>显示设计器中指定的行的用户代码。</summary>
      <param name="lineNumber">若要将光标放置在行号。</param>
      <returns>true 如果显示的代码;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>提供了特定方法正由一个事件处理程序的通知。</summary>
      <param name="component">该方法绑定到该组件。</param>
      <param name="e">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 事件处理程序。</param>
      <param name="methodName">方法的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>将验证提供的方法名称有效的语言或正在使用的脚本。</summary>
      <param name="methodName">要验证的方法名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> 类的新实例。</summary>
      <param name="exceptions">类型的数组 <see cref="T:System.Exception" />, ，包含要填充的集合的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 序列化所需的数据 <see cref="T:System.ComponentModel.Design.ExceptionCollection" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <summary>断言的设计时环境内的条件。</summary>
      <param name="condition">true 若要防止 <paramref name="message" /> 从已显示; 否则为 false。</param>
      <param name="message">要显示的消息。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <summary>记录设计时环境内的失败消息。</summary>
      <param name="message">要记录的消息。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <summary>记录内的设计时环境的调试消息。</summary>
      <param name="message">要记录的消息。</param>
      <param name="category">类别的 <paramref name="message" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <summary>获取由给定的组件的键指定的状态项。</summary>
      <param name="component">为其检索设计器的状态项的组件。</param>
      <param name="key">设计器的状态项的名称。</param>
      <returns>有关设计器的状态 <paramref name="component" /> 由指定 <paramref name="key" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <summary>设置指定由给定的组件的键的状态项。</summary>
      <param name="component">为其设置设计器状态项的组件。</param>
      <param name="key">设计器的状态项的名称。</param>
      <param name="value">为提供的设计器的状态项 <paramref name="component" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>确定目标框架中的指定程序集的加载路径。</summary>
      <param name="runtimeOrTargetAssemblyName">运行时或目标程序集完全的程序集名称。</param>
      <param name="suggestedAssemblyPath">要从其中加载程序集所建议的路径。</param>
      <param name="targetFramework">设计器目标框架。</param>
      <returns>该程序集的实际加载路径或 null 如果程序集不是可加载。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)">
      <summary>加载指定的运行时程序集。</summary>
      <param name="targetAssemblyName">完整的目标程序集名称。</param>
      <returns>加载的运行时程序集，或 null 如果无法加载该程序集。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>将目标框架的类型解析为程序集限定的名称。</summary>
      <param name="type">要解析的类型。</param>
      <returns>
        <see cref="P:System.Type.AssemblyQualifiedName" /> 为 <paramref name="type" /> 的目标框架中。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>将添加到指定的组件由继承的组件 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</summary>
      <param name="component">要搜索的组件继承的组件添加到指定的容器。</param>
      <param name="container">要添加到继承的组件的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>将添加到指定的组件由继承的指定类型的组件 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</summary>
      <param name="type">要搜索的基类型。</param>
      <param name="component">要搜索的组件继承的组件添加到指定的容器。</param>
      <param name="container">要添加到继承的组件的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>获取指定的组件的继承属性。</summary>
      <param name="component">要检索的继承属性的组件。</param>
      <returns>
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> 描述来自此组件的继承的级别。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>指示是否忽略指定的成员。</summary>
      <param name="member">要检查的成员。 此成员是 <see cref="T:System.Reflection.FieldInfo" /> 或 <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="component">此成员是绑定到的组件实例。</param>
      <returns>true 如果指定的成员应包括继承的组件; 集中否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> 类的新实例。</summary>
      <param name="succeeded">true 若要指示设计器加载成功，则否则为 false。</param>
      <param name="errors">加载设计器时，出现错误的集合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 类使用指定的服务提供程序和基组件。</summary>
      <param name="serviceProvider">服务提供程序指定的组件。</param>
      <param name="baseComponent">要本地化的基组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <summary>指示此对象是否可以提供其扩展程序属性设置为指定的对象。</summary>
      <param name="o">要接收扩展程序属性的对象。</param>
      <returns>true 如果此对象可以提供扩展程序属性与指定的对象;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <summary>处置由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的资源（内存除外）。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <summary>获取指定对象的当前资源区域性。</summary>
      <param name="o">要获取的当前资源区域性的对象。</param>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> 指示资源种类。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <summary>获取在设计时初始化本地化对象的值时要使用的默认资源区域性。</summary>
      <param name="o">要获取的资源区域性的对象。</param>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> ，该值指示要用于初始化指定的对象的值的资源区域性。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <summary>获取一个值，该值指定的对象是否支持资源本地化。</summary>
      <param name="o">要检查的本地化支持的对象。</param>
      <returns>true 如果指定的对象支持资源本地化;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <summary>重置指定的对象的资源区域性。</summary>
      <param name="o">要重置其资源区域性的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <summary>将指定的对象的当前资源区域性设置为指定的资源的区域性。</summary>
      <param name="o">要设置的资源区域性的基本组件。</param>
      <param name="language">一个 <see cref="T:System.Globalization.CultureInfo" /> ，该值指示要使用的资源区域性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <summary>设置一个值，该值指定的对象是否支持本地化的资源。</summary>
      <param name="o">要设置为可本地化或不可本地化的基组件。</param>
      <param name="localizable">true 如果对象支持资源本地化;否则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <summary>获取一个值，该值指示是否指定的对象必须具有可本地化的值保持在资源中。</summary>
      <param name="o">该对象，使语言支持持久性标志。</param>
      <returns>true 如果可本地化的值应保留在资源;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> 类的新实例。</summary>
      <param name="changeType">更改的类型。</param>
      <param name="command">菜单命令。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 类的新实例。</summary>
      <param name="serviceProvider">此服务用于获取其他服务服务提供程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>将命令处理程序添加到菜单命令服务中。</summary>
      <param name="command">要添加的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">命令处理程序 <paramref name="command" /> 已存在。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>将一个谓词添加到的谓词表 <see cref="T:System.ComponentModel.Design.MenuCommandService" />。</summary>
      <param name="verb">要添加的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 使用的所有资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>确保已创建的谓词列表。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>搜索 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 与给定的命令 id。</summary>
      <param name="commandID">要查找的 <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> 与给定的命令相关联; 否则为 null 如果找不到该命令。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>搜索 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 与给定的命令相关联。</summary>
      <param name="guid">命令的 GUID。</param>
      <param name="id">该命令的 ID。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> 与给定的命令相关联; 否则为 null 如果找不到该命令。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>对于给定的 GUID 获取命令列表。</summary>
      <param name="guid">命令列表的 GUID。</param>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 的命令。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>获取对所请求服务的引用。</summary>
      <param name="serviceType">要检索的服务的 <see cref="T:System.Type" />。</param>
      <returns>对引用 <paramref name="serviceType" />; 否则为 null 如果找不到该服务。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>调用给定的命令在本地的窗体上或在全球环境中。</summary>
      <param name="commandID">要调用的命令。</param>
      <returns>true, 如果该命令; 如果未找到否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>调用给定的参数在本地的窗体上或在全球环境中与给定的命令。</summary>
      <param name="commandId">要调用的命令。</param>
      <param name="arg">调用参数。</param>
      <returns>true, 如果该命令; 如果未找到否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>从文档中移除给定的菜单命令。</summary>
      <param name="command">要删除的命令。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>从文档中移除给定的谓词。</summary>
      <param name="verb">要移除的谓词。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>显示与给定的命令 ID 中的给定位置的快捷菜单。</summary>
      <param name="menuID">要显示的快捷菜单。</param>
      <param name="x">快捷菜单上的位置的 x 坐标。</param>
      <param name="y">快捷菜单上的位置的 y 坐标。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的对象值，使用所提供的编辑样式 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">通过它可以获得编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果未更改的对象值，此方法应返回同一对象传递给它。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取的编辑样式 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示所支持的编辑样式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象的值的表示形式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>false, 指示此 <see cref="T:System.Drawing.Design.UITypeEditor" /> 不显示在属性窗口中的可视化表示形式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 类的新实例。</summary>
      <param name="subObjectSelector">指定的子对象选择器值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" /> 指示的编辑器样式编辑指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 此编辑器可以用来获取服务。</param>
      <param name="value">要编辑的对象。</param>
      <returns>对象的新值。 如果未更改的对象值，该方法应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等同于当前的 <see cref="T:System.Object" />。</summary>
      <param name="value">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <returns>如果指定的 true 等于当前的 <see cref="T:System.Object" />，则为 <see cref="T:System.Object" />；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>填充标记的项，并且由表示每个项的分层集合 <see cref="T:System.Windows.Forms.TreeNode" />。</summary>
      <param name="selector">带标签项的分层集合。</param>
      <param name="context">组件的上下文信息。</param>
      <param name="provider">
        <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法获取对象，该接口提供服务。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑器样式 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 方法。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  可用来获取附加上下文信息。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值指示 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 使用的编辑器的样式。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> 类的新实例。</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>向集合添加新的树节点。</summary>
      <param name="label">节点的标签。</param>
      <param name="value">
        <see cref="T:System.Object" /> ，表示该节点的值。</param>
      <param name="parent">节点的父级。</param>
      <returns>一个 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> 添加到集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>从集合中移除所有树节点。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>在选定树节点后发生。</summary>
      <param name="sender">事件源。</param>
      <param name="e">一个 <see cref="T:System.Windows.Forms.TreeViewEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在控件有焦点的情况下按下键时发生。</summary>
      <param name="e">将提供数据供 <see cref="E:System.Windows.Forms.Control.KeyDown" />  事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>在控件有焦点的情况下按下键时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>当鼠标指针位于控件上方并单击鼠标按钮时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" /> 和 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>将集合节点设置为特定值。</summary>
      <param name="value">要设置的值。</param>
      <param name="nodes">节点集合。</param>
      <returns>true 如果设置了集合节点;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>初始化编辑器服务。</summary>
      <param name="edSvc">编辑器服务。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>删除编辑器服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 Windows <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> 类的新实例。</summary>
      <param name="label">节点的标签。</param>
      <param name="value">
        <see cref="T:System.Object" /> ，表示该节点的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>设置当前 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 为指定的值。</summary>
      <param name="value">指定的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> 类的新实例。</summary>
      <param name="targetFrameworkMoniker">项目目标框架。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>启动加载过程。</summary>
      <param name="host">要加载的设计器加载程序宿主。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">已加载，设计器或 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> 已调用使用不同的设计器加载程序宿主。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="host" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>启用或禁用组件的通知 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />。</summary>
      <param name="enable">true 若要启用的组件通知 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; false 禁用组件的通知 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />。</param>
      <returns>true 如果组件启用了通知，在此调用; 之前否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>刷新设计器加载程序对挂起的更改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>获取请求的服务。</summary>
      <param name="serviceType">服务的 <see cref="T:System.Type" />。</param>
      <returns>请求的服务，或 null 如果找不到请求的服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>初始化服务。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>指示是否应重新加载设计器。</summary>
      <returns>true 如果应重新加载设计器;否则为 false。 默认实现始终返回 true。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>通知设计器加载程序加载即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>通知设计器加载程序，卸载过程即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>通知设计器加载程序加载已完成。</summary>
      <param name="successful">true 如果加载成功地完成。否则为 false。</param>
      <param name="errors">
        <see cref="T:System.Collections.ICollection" /> 包含被报告为错误的对象 （通常是异常）。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>通知设计器加载的文档的状态以进行修改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>向设计器中刷新的所有更改。</summary>
      <param name="serializationManager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 要用于持久保留加载的设计器的状态。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>从持久性存储中加载设计器。</summary>
      <param name="serializationManager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 用于加载设计器的状态。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>排入队列设计器重新的加载。</summary>
      <param name="flags">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 值的按位组合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>报告在将更改刷新时出现的错误。</summary>
      <param name="errors">
        <see cref="T:System.Collections.ICollection" /> 包含错误对象，通常是异常。</param>
      <exception cref="T:System.InvalidOperationException">刷新更改时，发生一个或多个错误。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>设置基本组件的完整类名。</summary>
      <param name="name">表示要进行设计的组件的完整名称的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>将外部组件注册由加载过程的一部分 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>依赖加载已完成的信号。</summary>
      <param name="successful">true 若要加载成功，则否则为 false。</param>
      <param name="errorCollection">
        <see cref="T:System.Collections.ICollection" /> 包含加载期间发生的错误。</param>
      <exception cref="T:System.InvalidOperationException">已通过添加任何加载依赖项 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, ，或 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>重新加载设计文档。</summary>
      <returns>true 如果重新加载请求被接受。 false 如果加载程序不允许重新加载。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类使用给定的服务提供程序用于解析服务。</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 以用于解析服务。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>创建一个新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <returns>新的序列化存储区。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>反序列化给定存储区中，若要生成的对象的集合。</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 从哪些对象将被反序列化。</param>
      <returns>反序列化组件的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不受支持的序列化存储区类型。 使用存储区返回的 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>反序列化给定存储区并填充给定 <see cref="T:System.ComponentModel.IContainer" /> 使用反序列化 <see cref="T:System.ComponentModel.IComponent" /> 对象。</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 从哪些对象将被反序列化。</param>
      <param name="container">容器 <see cref="T:System.ComponentModel.IComponent" />  将添加对象。</param>
      <returns>反序列化组件的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="container" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不受支持的序列化存储区类型。 使用存储区返回的 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>反序列化给定 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 至给定容器可选择应用的默认属性值。</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  从中对象将被反序列化。</param>
      <param name="container">将应用数据的对象的容器。</param>
      <param name="validateRecycledTypes">true 若要验证回收的类型;否则为 false。</param>
      <param name="applyDefaults">true 若要将应用默认属性值;否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="container" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不受支持的序列化存储区类型。 使用存储区返回的 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 从给定的流。</summary>
      <param name="stream">要从其中加载流 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <returns>加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> 支持查找，但其长度为 0。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>将给定的对象序列化为给定 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  到 <paramref name="value" /> 将序列化。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或 <paramref name="store" /> 不受支持的序列化存储区类型。 使用存储区返回的 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>将序列化为给定的对象，包括默认属性值。</summary>
      <param name="store">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  到 <paramref name="value" /> 将序列化。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或 <paramref name="store" /> 不受支持的序列化存储区类型。 使用存储区返回的 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>在给定对象上序列化给定成员。</summary>
      <param name="store">要将 <paramref name="member" /> 序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">拥有 <paramref name="member" /> 的对象。</param>
      <param name="member">给定成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或 <paramref name="store" /> 不是序列化存储区支持的类型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>在给定对象上序列化给定成员，但如果成员包含默认属性值，则也序列化该成员。</summary>
      <param name="store">要将 <paramref name="member" /> 序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">拥有 <paramref name="member" /> 的对象。</param>
      <param name="member">给定成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或 <paramref name="store" /> 不是序列化存储区支持的类型。 使用由 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 类使用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>初始化服务。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化，或设计器加载程序未提供类型解析服务，所需的 CodeDom 序列化。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>返回一个值，该值指示是否需要重新加载。</summary>
      <returns>true 如果 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> 决定重新加载是必选的; 否则为 false。</returns>
      <exception cref="T:System.NotSupportedException">语言未提供此文件; 一个代码分析器此文件类型可能不支持在设计器。</exception>
      <exception cref="T:System.InvalidOperationException">类可以设计，但它不是在文件中，第一个类或设计器无法为此文件中显示，因为其中的类都可以设计。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>通知设计器加载程序加载即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>通知设计器加载程序，卸载过程即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="component">要重命名的组件。</param>
      <param name="oldName">组件的原始名称。</param>
      <param name="newName">组件的新名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>通知设计器加载程序加载已完成。</summary>
      <param name="successful">true 表示成功，则完成了负载否则为 false。</param>
      <param name="errors">
        <see cref="T:System.Collections.ICollection" /> 的被报告为错误的对象 （通常是异常）。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>分析文本或其他持久性存储区，并返回 <see cref="T:System.CodeDom.CodeCompileUnit" />。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 分析操作所导致。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>请求序列化的设计器的根组件。</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 从中请求序列化程序。</param>
      <exception cref="T:System.NotSupportedException">语言未提供此文件; 一个代码分析器此文件类型可能不支持在设计器。</exception>
      <exception cref="T:System.InvalidOperationException">类可以设计，但它不是在文件中，第一个类或设计器无法为此文件中显示，因为其中的类都可以设计。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>分析来自 CodeDOM 提供程序的代码。</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 从中请求序列化程序。</param>
      <exception cref="T:System.NotSupportedException">语言未提供此文件; 一个代码分析器此文件类型可能不支持在设计器。</exception>
      <exception cref="T:System.InvalidOperationException">类可以设计，但它不是在文件中，第一个类或设计器无法为此文件中显示，因为其中的类都可以设计。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>反序列化指定的序列化数据对象，并返回由该数据表示的对象的集合。</summary>
      <param name="serializationData">一个由组成的序列化数据的对象。</param>
      <returns>以表示的对象的集合 <paramref name="serializationData" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> 不是 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>序列化指定的对象的集合，并将它们存储在序列化数据对象。</summary>
      <param name="objects">要序列化的对象集合。</param>
      <returns>一个包含指定的对象集合的序列化的状态对象。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />  找不到。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>创建对指定的容器中的所有组件是唯一的新名称。</summary>
      <param name="container">添加新对象的位置的容器。</param>
      <param name="dataType">接收该名称的对象数据类型。</param>
      <returns>数据类型的唯一名称。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>获取一个值，该值指示指定的名称是否有效。</summary>
      <param name="name">要验证的名称。</param>
      <returns>true 如果该名称是否有效;否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>获取一个值，该值指示指定的名称是否有效。</summary>
      <param name="name">要验证的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 不是有效的标识符，或者已经存在具有相同名称的组件。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>将编译单元更改写入持久存储。</summary>
      <param name="unit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 要保留。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 本地化供应商用于添加其扩展程序属性。</param>
      <param name="model">一个 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，该值指示通过 CodeDOM 资源适配器使用的本地化模型 </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 本地化供应商用于添加其扩展程序属性。</param>
      <param name="model">一个 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，该值指示通过 CodeDOM 资源适配器使用的本地化模型 </param>
      <param name="supportedCultures">此资源适配器应支持的区域性的数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />。</summary>
      <param name="manager">序列化管理器请求序列化程序。</param>
      <param name="currentSerializer">当前序列化指定类型的一个实例。 这可能是 null 如果没有指定类型的序列化程序存在。</param>
      <param name="objectType">要序列化对象数据类型。</param>
      <param name="serializerType">若要创建的序列化程序的数据类型。</param>
      <returns>序列化程序的请求，该类型的实例或 null 如果无法满足请求。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定的序列化的 CodeDOM 对象反序列化为对象。</summary>
      <param name="manager">在反序列化过程中使用序列化管理器界面。</param>
      <param name="codeObject">要反序列化的序列化的 CodeDOM 对象。</param>
      <returns>反序列化的 CodeDOM 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> 是一个不支持的代码元素。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>反序列化单个语句。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="statement">要反序列化的语句。</param>
      <returns>产生反序列化的对象实例 <paramref name="statement" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>确定给定的语句应属于的语句组。</summary>
      <param name="statement">
        <see cref="T:System.CodeDom.CodeStatement" /> 为其确定组。</param>
      <param name="expression">一个 <see cref="T:System.CodeDom.CodeExpression" /> ， <paramref name="statement" /> 已降低为。</param>
      <param name="targetType">
        <see cref="T:System.Type" /> 的 <paramref name="statement" />。</param>
      <returns>与该组件的名称 <paramref name="statement" /> 应进行分组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的对象序列化为 CodeDOM 对象。</summary>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将序列化为给定的对象，包括默认值。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDom 对象，表示 <paramref name="value" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>在给定对象上序列化给定成员。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="owningObject">
        <paramref name="member" /> 所附加到的对象。</param>
      <param name="member">要序列化的成员。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeStatementCollection" />，它表示 <paramref name="member" /> 的序列化状态。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> 是不可序列化的类型。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>考虑到默认值的情况下，序列化给定成员。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="owningObject">
        <paramref name="member" /> 所附加到的对象。</param>
      <param name="member">要序列化的成员。</param>
      <returns>一个 CodeDom 对象，表示 <paramref name="member" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> 是不可序列化的类型。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将序列化为 CodeDOM 表达式指定的值。</summary>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>序列化的值。 这将返回 null 如果指定值时，无法获得引用表达式或值不能进行序列化。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>反序列化到内存中对象给定的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="name">从表达式生成的对象的名称。 可以是 null 如果不需要命名该对象。</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> 来解释。</param>
      <returns>解释而产生的对象 <paramref name="expression" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>返回给定类型的实例。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="type">
        <see cref="T:System.Type" /> 要返回的实例。</param>
      <param name="parameters">要传递到构造函数的参数 <paramref name="type" />。</param>
      <param name="name">反序列化对象的名称。</param>
      <param name="addToContainer">true 若要将此对象添加到设计容器;否则为 false。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
      <returns>
        <paramref name="type" /> 的一个实例。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>反序列化从固定区域性的资源捆绑给定对象上的属性。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">将进行反序列化属性的对象。</param>
      <param name="filter">
        <see cref="T:System.Attribute" /> 筛选哪些属性将反序列化的数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>通过解释并执行的 CodeDOM 语句将一条语句反序列化。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statement">
        <see cref="T:System.CodeDom.CodeStatement" /> 进行反序列化。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>获取项目的目标版本的.NET framework 中定义的特性的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="type">目标类型。</param>
      <returns>项目的目标版本的.NET framework 中定义的特性的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>获取项目的目标版本的.NET framework 中定义的特性的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <returns>项目的目标版本的.NET framework 中定义的特性的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>获取项目的目标版本的.NET framework 中定义的事件的集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <param name="attributes">要传递给.NET Framework 目标版本的特性数组。</param>
      <returns>项目的目标版本的.NET framework 中定义的事件的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回给定对象的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为其获取一个表达式，表达式对象。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 表示 v<paramref name="alue" />, ，或 null v 没有现有表达式是否<paramref name="alue" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>获取项目的目标版本的.NET framework 中定义的属性集合。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <param name="attributes">要传递给.NET Framework 目标版本的特性数组。</param>
      <returns>属性的.NET framework 的项目的目标版本中定义的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>获取从类型元数据生成的反射类型。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="type">要使用元数据的类型。</param>
      <returns>生成的元数据的反射类型 <paramref name="type" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>获取从对象元数据生成的反射类型。</summary>
      <param name="manager">序列化管理器。</param>
      <param name="instance">要使用元数据的对象。</param>
      <returns>生成的元数据的反射类型 <paramref name="object" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>查找给定的对象值的序列化程序。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">对象，该对象指定要检索的序列化程序。</param>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 适合 <paramref name="value" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>查找给定类型的序列化程序。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="valueType">
        <see cref="T:System.Type" /> 指定要检索的序列化程序。</param>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 适合 <paramref name="valueType" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="valueType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>获取 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 这就是了解.NET Framework 中，在类型筛选操作中使用的目标版本。</summary>
      <param name="provider">类型说明提供程序服务。</param>
      <param name="instance">派生的对象从其类型说明提供程序服务可以是，如果 <paramref name="provider" /> 是 null。</param>
      <returns>.NET Framework 的类型说明提供程序。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回给定对象的唯一名称。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">将为其检索名称的对象。</param>
      <returns>唯一名称 <paramref name="value" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回一个值，该值指示是否已序列化给定的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要测试其上面的序列化的对象。</param>
      <returns>true 如果 <paramref name="value" /> 已序列化; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>返回一个值，该值指示是否已序列化给定的对象，也可以考虑预设的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要测试其上面的序列化的对象。</param>
      <param name="honorPreset">true 若要包括预设的表达式;否则为 false。</param>
      <returns>true 如果 <paramref name="value" /> 已序列化; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>返回一个表示给定对象的创建的表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="isComplete">true 如果 <paramref name="value" /> 完全序列化; 否则为 false。</param>
      <returns>一个表示创建的表达式 <paramref name="value" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>将给定事件序列化为给定语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将事件序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">
        <paramref name="descriptor" /> 所绑定到的对象。</param>
      <param name="descriptor">一个 <see cref="T:System.ComponentModel.EventDescriptor" />，它指定要序列化的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="descriptor" /> 为 null。</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 不可用。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将指定的事件序列化为给定语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将事件序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">要在其上序列化事件的对象。</param>
      <param name="filter">一个 <see cref="T:System.Attribute" /> 数组，该数组筛选要进行序列化的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将给定对象上的属性序列化为给定语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将属性序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">要在其上序列化属性的对象。</param>
      <param name="filter">一个 <see cref="T:System.Attribute" /> 数组，该数组筛选要进行序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>在给定对象上将属性序列化为固定区域性的资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">未使用。</param>
      <param name="value">将序列化其属性的对象。</param>
      <param name="filter">一个 <see cref="T:System.Attribute" /> 数组，该数组筛选要进行序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>序列化给定对象上的属性。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">要将属性序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">要在其上序列化属性的对象。</param>
      <param name="propertyToSerialize">要序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="propertyToSerialize" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>使用给定的资源名称的资源包序列化为给定的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">名称到其中的资源捆绑 <paramref name="value" /> 将序列化。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>使用给定的资源名称的资源包序列化为给定的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">名称到其中的资源捆绑 <paramref name="value" /> 将序列化。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>表达式序列化为给定的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。 可以为 null。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 对象，如果 <paramref name="value" /> 可序列化; 否则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>表达式序列化为给定的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 包含 <paramref name="value" /> 作为序列化的表达式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>适用于固定区域性的表达式序列化为给定的对象。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="ensureInvariant">true 若要将序列化为固定区域性;否则为 false。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 包含 <paramref name="value" /> 作为序列化的表达式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>将一个对象与表达式相关联。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="expression">要与 <paramref name="value" /> 相关联的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="expression" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>将对象与一个表达式，可以选择指定预设的表达式相关联。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> 与相关联的 <paramref name="value" />。</param>
      <param name="isPreset">true 若要指定一个预设的表达式;否则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类使用指定的异常和行信息。</summary>
      <param name="ex">要引发的异常。</param>
      <param name="linePragma">一个 <see cref="T:System.CodeDom.CodeLinePragma" /> ，该值指示发生了异常。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="ex">要引发的异常。</param>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 从中提取上下文对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用指定的序列化数据和上下文初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="info">将正在用于序列化或反序列化对象数据存储， <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 已序列化或反序列化。</param>
      <param name="context">描述源和生成异常，以及序列化可以保留该上下文和调用方定义的附加上下文的一种方法的流的目标。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类使用指定的消息和行信息。</summary>
      <param name="message">描述异常的消息。</param>
      <param name="linePragma">一个 <see cref="T:System.CodeDom.CodeLinePragma" /> ，该值指示发生了异常。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="message">描述异常的消息。</param>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 从中提取上下文对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>设置带有参数名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">将正在用于序列化或反序列化对象数据存储， <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 已序列化或反序列化。</param>
      <param name="context">描述源和生成异常，以及序列化可以保留该上下文和调用方定义的附加上下文的一种方法的流的目标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 参数为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>验证的序列化支持 <paramref name="method" />。</summary>
      <param name="method">
        <see cref="T:System.Reflection.MethodInfo" /> 要检查的序列化特性。</param>
      <returns>true 如果 <paramref name="method" /> 支持序列化; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将序列化为 CodeDOM 对象到给定的集合。</summary>
      <param name="manager">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 在序列化过程中使用。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDOM 对象，表示 <paramref name="value" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>序列化给定集合。</summary>
      <param name="manager">在序列化过程中要使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="targetExpression">引用集合的 <see cref="T:System.CodeDom.CodeExpression" /></param>
      <param name="targetType">集合的 <see cref="T:System.Type" />。</param>
      <param name="originalCollection">要序列化的集合。</param>
      <param name="valuesToSerialize">要序列化的值。</param>
      <returns>如果序列化过程成功，则为已序列化的集合；否则为 null。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" /> 或 <paramref name="valuesToSerialize" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 与给定的服务提供程序的类。</summary>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>创建类型的实例。</summary>
      <param name="type">要创建的实例的类型。</param>
      <param name="arguments">该类型的构造函数的参数。 这可能是 null 或空集合，以调用默认构造函数。</param>
      <param name="name">要为该对象指定的名称。 如果 null, ，该对象将不会获得一个名称，除非该对象添加到容器以及该容器为该对象提供一个名称。</param>
      <param name="addToContainer">true 若要将该对象添加到容器中，如果对象实现 <see cref="T:System.ComponentModel.IComponent" />; 否则为 false。</param>
      <returns>指定的类型的新实例 <paramref name="type" />。</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> 没有采用中包含参数的构造函数 <paramref name="arguments" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>创建新的序列化会话。</summary>
      <returns>
        <see cref="T:System.IDisposable" /> ，表示新的序列化会话。</returns>
      <exception cref="T:System.InvalidOperationException">已在会话中是序列化管理器。 此版本的 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 不支持同时会话。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>获取对应于指定的类型名称的类型。</summary>
      <param name="typeName">要获取的类型的名称。</param>
      <returns>指定的类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>获取指定的对象类型的序列化程序。</summary>
      <param name="objectType">要为其检索序列化程序对象的类型。</param>
      <param name="serializerType">要检索序列化程序类型。</param>
      <returns>序列化程序 <paramref name="objectType" />, ，或 null, ，如果找不到。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> 或 <paramref name="serializerType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>获取请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>请求的服务，或 null 如果无法解析服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>获取所请求的类型。</summary>
      <param name="typeName">要检索的类型的名称。</param>
      <returns>请求的类型，或 null 如果无法解析类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>将自定义序列化提供程序添加到序列化管理器。</summary>
      <param name="provider">要添加的序列化提供程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>实现 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法。</summary>
      <param name="type">要创建的数据类型。</param>
      <param name="arguments">要为此类型传递给构造函数的参数。</param>
      <param name="name">对象的名称。 此名称可用于以后通过 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> 访问该对象。 如果 null 是传递，该对象仍会创建，但不能通过名称访问。</param>
      <param name="addToContainer">true 若要将此对象添加到设计容器。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
      <returns>新创建的对象实例。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>检索具有指定名称创建对象的实例。</summary>
      <param name="name">要检索的对象的名称。</param>
      <returns>具有给定名称的对象的实例或 null 如果找不到该名称没有任何对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>检索指定对象的名称。</summary>
      <param name="value">为其要检索其名称的对象。</param>
      <returns>该对象的名称或 null 如果对象是未命名。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>获取指定的对象类型所请求类型的序列化程序。</summary>
      <param name="objectType">要获取的序列化程序的对象的类型。</param>
      <param name="serializerType">若要检索的序列化程序的类型。</param>
      <returns>请求的序列化的实例或 null 如果没有适当的序列化程序可以为所在。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>获取具有指定名称的类型。</summary>
      <param name="typeName">要加载的类型的完全限定的名称。</param>
      <returns>该类型的实例或 null 如果不能加载该类型。</returns>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>移除以前添加的序列化提供程序。</summary>
      <param name="provider">要移除的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>用来报告可恢复的错误在序列化。</summary>
      <param name="errorInformation">一个对象，包含错误类型的信息，通常 <see cref="T:System.String" /> 或 <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>设置指定对象的名称。</summary>
      <param name="instance">要设置的名称的对象。</param>
      <param name="name">一个 <see cref="T:System.String" /> 用作对象的名称。</param>
      <exception cref="T:System.ArgumentNullException">两个参数之一或两个参数均为 null。</exception>
      <exception cref="T:System.ArgumentException">指定的对象实例已经有一个名称，或 <paramref name="name" /> 已由另一个命名对象。</exception>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法。</summary>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
      <returns>类型的服务对象 <paramref name="serviceType" />。- 或 -如果没有类型为 <paramref name="serviceType" /> 的服务对象，则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>使用给定的表达式和所有者初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</summary>
      <param name="expression">给定代码表达式。</param>
      <param name="expressionType">给定代码表达式的类型。</param>
      <param name="owner">给定代码表达式的所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>使用当前值初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</summary>
      <param name="expression">给定代码表达式。</param>
      <param name="expressionType">给定代码表达式的类型。</param>
      <param name="owner">给定代码表达式的所有者。</param>
      <param name="presetValue">给定代码表达式的预设值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>指示是否应重新设计器加载以正确导入指定的编译单元。</summary>
      <param name="newTree">一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 包含设计器文档的代码。</param>
      <returns>true 如果应重新加载设计器;否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>序列化将给定值的语句集合上的给定的成员描述符。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">该成员绑定到其中的对象。</param>
      <param name="descriptor">要序列化的成员描述符。</param>
      <param name="statements">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> 到 <paramref name="descriptor" /> 序列化。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>确定是否应序列化给定的成员。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">该成员绑定到其中的对象。</param>
      <param name="descriptor">要序列化的成员描述符。</param>
      <returns>true, 如果该成员由描述 <paramref name="descriptor" /> 应序列化; 否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>确定表是否包含给定的语句所有者。</summary>
      <param name="statementOwner">语句集合的所有者。</param>
      <returns>true 如果 <paramref name="statementOwner" /> 在表中; 否则为 false。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</summary>
      <returns>用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>语句使用填充表的语句所有者集合。</summary>
      <param name="statementOwners">语句所有者可以向表中添加一个集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>语句使用填充表的语句的所有者。</summary>
      <param name="owner">要向表中添加的语句所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> 类的新实例。</summary>
      <param name="expression">表示对象图中的根对象的表达式。</param>
      <param name="value">对象图的根对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>新实例初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 类绑定到特定成员的选项。</summary>
      <param name="member">此上下文绑定到其中的成员。 可以为 null。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>获取一个值，该值指示是否应在此上下文中给定的成员进行序列化。</summary>
      <param name="member">要检查序列化的成员。</param>
      <returns>true 如果给定的成员应在此上下文中，则序列化否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>给定的类型声明反序列化。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">类型声明用于序列化。</param>
      <returns>根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>返回存储用于序列化成员的语句的方法。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <param name="value">用于序列化的值。</param>
      <returns>用于为给定成员发出所有初始化代码的方法。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="typeDecl" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>返回要在反序列化期间解释的方法数组。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化该类型声明。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeMemberMethod" /> 反序列化期间解释的方法的数组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>通过创建定义根的新类型声明序列化对象根。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="root">要序列化的对象。</param>
      <param name="members">可选的成员的集合。 可以是 null 或为空。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeTypeDeclaration" /> ，它定义的根对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="root" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 类的新实例。</summary>
      <param name="provider">父级服务提供程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">找不到所需的服务。 请参阅 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 为所需的服务。 如果您已经删除了此服务，请确保提供了替代。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>添加 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 到撤消堆栈。</summary>
      <param name="unit">要添加的撤消单元 </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>创建一个新的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="name">要创建的单元的名称。</param>
      <param name="primary">true 若要创建的嵌套单位; 一系列的第一个 false 以便创建后续嵌套的单元。</param>
      <returns>一个新 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 具有指定名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>放弃 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="unit">要放弃的单元。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>获取请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>请求的服务，如果找到。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> 是必需的但找不到。 如果您已经删除了此服务，请确保提供了替代。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>获取请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>请求的服务，或 null 如果找不到请求的服务。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 类的新实例。</summary>
      <param name="engine">拥有此撤消单元撤消引擎。</param>
      <param name="name">此撤消单元的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>接收来自撤消引擎以关闭此单元的调用。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>接收从调用 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />  包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>获取所请求服务的实例。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>在给定的服务的实例或 null 如果无法解析服务。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>返回 <see cref="T:System.String" /> ，表示当前单元的名称。</summary>
      <returns>一个 <see cref="T:System.String" /> ，表示当前单元的名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>执行撤消或重做操作。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>由调用 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 执行撤消操作。</summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.#ctor">
      <summary>初始化 MethodSignatureGenerator 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethod">
      <summary>返回由类型化数据集生成器生成的代码成员方法表示数据库查询。</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeMemberMethod" /> 表示数据库查询，由类型化数据集生成器生成的对象。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethodSignature">
      <summary>返回一个字符串，表示数据库查询方法签名，生成由类型化数据集生成器。</summary>
      <returns>一个表示数据库查询方法签名，如由类型化数据集生成器生成的字符串。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateUpdatingMethods">
      <summary>返回代码类型声明包含 Insert、 Update 和删除与数据库查询相关联的方法。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeTypeDeclaration" /> 对象，其中包含 Insert, ，Update, ，和 Delete 与数据库查询关联的方法。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetDesignTableContent(System.String)">
      <summary>将设置为其生成数据库查询方法的设计表的架构。</summary>
      <param name="designTableContent">表架构的字符串表示形式。</param>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetMethodSourceContent(System.String)">
      <summary>设置为其生成的方法签名的数据库查询。</summary>
      <param name="methodSourceContent">数据库查询的字符串表示形式。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于现有 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataSet">源 <see cref="T:System.Data.DataSet" /> 指定的类型化的元数据 <see cref="T:System.Data.DataSet" />。</param>
      <param name="codeNamespace">提供的类型化的目标命名空间的命名空间 <see cref="T:System.Data.DataSet" />。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <returns>强类型化 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <returns>强类型化 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="customDBProviders">哈希表映射到类型化数据集中的特定提供程序的连接。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="customDBProviders">哈希表映射到类型化数据集中的特定提供程序的连接。</param>
      <param name="option">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> ，它确定哪些 （如果有） 的其他组件和方法来创建生成类型化数据集时。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="customDBProviders">哈希表映射到类型化数据集中的特定提供程序的连接。</param>
      <param name="option">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> ，它确定哪些 （如果有） 的其他组件和方法来创建生成类型化数据集时。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="customDBProviders">哈希表映射到类型化数据集中的特定提供程序的连接。</param>
      <param name="option">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> ，它确定哪些 （如果有） 的其他组件和方法来创建生成类型化数据集时。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
      <param name="basePath">一个表示到基于数据集输入文件的相对路径的架构的路径的字符串。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="specifiedFactory">
        <see cref="T:System.Data.Common.DbProviderFactory" /> 用于重写中包含的提供程序 <paramref name="inputFileContent" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="option">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> ，它确定哪些 （如果有） 的其他组件和方法来创建生成类型化数据集时。</param>
      <returns>强类型化 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="option">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> ，它确定哪些 （如果有） 的其他组件和方法来创建生成类型化数据集时。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
      <returns>强类型化 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 基于提供的输入文件。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="codeProvider">特定于语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <param name="option">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> ，它确定哪些 （如果有） 的其他组件和方法来创建生成类型化数据集时。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
      <param name="basePath">一个表示到基于数据集输入文件的相对路径的架构的路径的字符串。</param>
      <returns>强类型化 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)">
      <summary>返回提供的输入文件中找到的第一个提供程序名称。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <returns>一个字符串，表示此特定的提供程序 <see cref="T:System.Data.DataSet" />。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)">
      <summary>返回的提供程序名称 <paramref name="tableName" /> 输入文件中。</summary>
      <param name="inputFileContent">一个字符串，表示所基于的 XML 架构 <see cref="T:System.Data.DataSet" /> 上。</param>
      <param name="tableName">一个表示要返回的提供程序名称的表的名称的字符串。</param>
      <returns>表示的提供程序特定的表名称的字符串传递给 <paramref name="tableName" /> 参数。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor">
      <summary>使用由系统提供的用来描述错误的消息初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)">
      <summary>新实例初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 通过传入的错误的集合类。</summary>
      <param name="list">
        <see cref="T:System.Collections.IList" /> 的错误。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>新实例初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类，使用指定的序列化信息和流上下文。</summary>
      <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>使用指定的描述错误的消息初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
      <param name="message">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>新实例初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 使用指定的字符串和内部异常的类。</summary>
      <param name="message">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
      <param name="innerException">导致当前异常的异常。 如果 <paramref name="innerException" /> 参数不为 null，则当前异常将在处理内部异常的 catch 块中引发。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 ISerializable 接口，并返回必须要序列化的数据 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 对象。</summary>
      <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor">
      <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor(System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> 类的新实例。</summary>
      <param name="dataSetGenerateOptions">
        <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> 用于生成启用 LINQ to DataSet 和分层更新的类型化数据集值。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>生成的 XML 架构文档中定义的元素的内部类型映射信息。</summary>
      <param name="name">一个 <see cref="T:System.String" /> 表示要导入的架构的名称。</param>
      <param name="namespaceName">一个 <see cref="T:System.String" /> 表示 XML 架构的命名空间。</param>
      <param name="context">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ，表示 XML 架构对象模型层次结构的根类，并作为类如 XmlSchema 类的基类。</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 类表示 XML 架构集合。</param>
      <param name="importer">基 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> ，它可生成到 XML 架构元素声明，包括 WSDL 文档中的文字 XSD 的消息部分的.NET Framework 类型的内部映射。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">
        <see cref="T:System.CodeDom.CodeNamespace" /> ，其中包含生成的数据集。</param>
      <param name="options">
        <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> ，它指定生成.NET Framework 类型与 XML Web 服务一起使用时要使用的各种选项。</param>
      <param name="codeProvider">特定于语言 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <returns>返回 <see cref="T:System.String" /> 表示类型化数据集类的名称。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>生成的 XML 架构文档中定义的元素的内部类型映射信息。</summary>
      <param name="type">XMLSchemaType</param>
      <param name="context">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ，表示 Xml 架构对象模型层次结构的根类，并作为类如 XmlSchema 类的基类。</param>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 类表示 XML 架构集合。</param>
      <param name="importer">基 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> ，它可生成到 XML 架构元素声明，包括 WSDL 文档中的文字 XSD 的消息部分的.NET Framework 类型的内部映射。</param>
      <param name="compileUnit">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> 以包含生成的代码。</param>
      <param name="mainNamespace">CodeNamespace</param>
      <param name="options">
        <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> ，它指定生成.NET Framework 类型与 XML Web 服务一起使用时要使用的各种选项。</param>
      <param name="codeProvider">特定于语言 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 要用于生成数据集。</param>
      <returns>返回 <see cref="T:System.String" /> 表示类型化数据集类的名称。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35.#ctor">
      <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.#ctor">
      <summary>新实例初始化 <see cref="T:System.Diagnostics.Design.LogConverter" /> 为给定类型的类。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示此转换器是否可以将给定类型的对象转换为此转换器，使用指定的上下文的类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">一个表示想要将从转换的类型。</param>
      <returns>true 如果可以执行转换。否则为 false。</returns>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将给定的对象转换为一个字符串，使用指定的上下文和区域性信息。</summary>
      <param name="context">提供格式上下文 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="culture">要用作当前区域性于。</param>
      <param name="value">要转换</param>
      <returns>
        <see cref="T:System.Object" /> ，表示转换后的值。</returns>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取此验证程序所面向的数据类型的标准值集合。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <returns>包含标准有效值集的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />；如果数据类型不支持标准值集，则为 null。</returns>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此对象是否支持可以从使用指定的上下文的列表中选取的值的标准集。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <returns>true 因为 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 应调用以查找一组公共对象支持的值。 此方法从不返回 false。</returns>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Design.ProcessDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整的过程通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Design.ProcessModuleDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整进程模块通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Design.ProcessThreadDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整的该组件通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Messaging.Design.MessageDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>修改设计器通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 类公开的属性集。</summary>
      <param name="properties">包含要为该组件筛选的属性集的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Resources.Tools.ITargetAwareCodeDomProvider.SupportsProperty(System.Type,System.String,System.Boolean)">
      <summary>指示项目的目标框架上的指定的类型是否具有指定的命名的属性。</summary>
      <param name="type">其属性要查询的类型。</param>
      <param name="propertyName">要查找中的属性的名称 <paramref name="type" />。</param>
      <param name="isWritable">一个标志，指示属性是否必须包含一个 get 访问器。</param>
      <returns>true 如果 <paramref name="type" /> 对项目目标 framework 有一个名为 <paramref name="propertyname" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>生成一个类文件，该文件包含与指定集合中引用的资源相匹配的强类型的属性。</summary>
      <param name="resourceList">一个 <see cref="T:System.Collections.IDictionary" /> 集合，其中每个字典条目键值对都是资源的名称以及资源的值。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，该类提供生成该类所使用的语言。</param>
      <param name="internalClass">如果生成内部类，则为 true；如果生成公共类，则为 false。</param>
      <param name="unmatchable">一个数组，该数组包含无法为其生成属性的每个资源名称。 通常，无法生成属性是因为该资源名称不是有效的标识符。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />、<paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">资源节点名称与其在 <paramref name="resourceList" /> 中的键不匹配。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>生成一个类文件，该文件包含与指定集合中引用的资源相匹配的强类型的属性。</summary>
      <param name="resourceList">一个 <see cref="T:System.Collections.IDictionary" /> 集合，其中每个字典条目键值对都是资源的名称以及资源的值。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="resourcesNamespace">要生成的资源的命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，该对象提供生成类所使用的语言。</param>
      <param name="internalClass">如果生成内部类，则为 true；如果生成公共类，则为 false。</param>
      <param name="unmatchable">一个 <see cref="T:System.String" /> 数组，该数组包含无法为其生成属性的每个资源名称。 通常，无法生成属性是因为该资源名称不是有效的标识符。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />、<paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">资源节点名称与其在 <paramref name="resourceList" /> 中的键不匹配。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>将生成一个包含与指定的.resx 文件中的资源相匹配的强类型的属性的类文件。</summary>
      <param name="resxFile">使用作为输入的.resx 文件的名称。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  类，该类提供将在其中生成类的语言。</param>
      <param name="internalClass">true 若要生成的内部类。 false 来生成一个公共类。</param>
      <param name="unmatchable">一个 <see cref="T:System.String" /> 数组，其中包含每个资源名称不能为其生成一个属性。 通常情况下，无法生成一个属性，因为资源名称不是有效标识符。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>将生成一个包含与指定的.resx 文件中的资源相匹配的强类型的属性的类文件。</summary>
      <param name="resxFile">使用作为输入的.resx 文件的名称。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="resourcesNamespace">要生成的资源命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  类，该类提供将在其中生成类的语言。</param>
      <param name="internalClass">true 若要生成的内部类。 false 来生成一个公共类。</param>
      <param name="unmatchable">一个 <see cref="T:System.String" /> 数组，其中包含每个资源名称不能为其生成一个属性。 通常情况下，无法生成一个属性，因为资源名称不是有效标识符。</param>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename " />或 <paramref name="codeProvider" /> 是 null。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>生成基于指定的输入的字符串和代码提供程序的有效的资源字符串。</summary>
      <param name="key">要验证，并且如有必要，将转换为有效的资源名称的字符串。</param>
      <param name="provider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，它指定要使用的目标语言。</param>
      <returns>有效的资源名称派生自 <paramref name="key" /> 参数。 任何无效的标记替换为下划线 (_) 字符，或 null 如果派生的字符串仍包含根据所指定的语言的无效字符 <paramref name="provider" /> 参数。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 或 <paramref name="provider" /> 为 null。</exception>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.ServiceProcess.Design.ServiceControllerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整 <see cref="T:System.ServiceProcess.ServiceController" /> 通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">包含 <see cref="T:System.ServiceProcess.ServiceController" /> 类的属性的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算应用程序设置表达式字符串并为控件属性提供设计时值。</summary>
      <param name="expression">要计算的应用程序设置表达式字符串。<paramref name="expression" /> 不包括 AppSettings 表达式前缀。</param>
      <param name="parseTimeData">一个对象，包含用于评估的其他分析信息 <paramref name="expression" />。</param>
      <param name="propertyType">控件属性类型。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>所引用的对象 <paramref name="expression" />, ，如果表达式计算成功; 否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回应用程序设置表达式的表达式编辑器表。</summary>
      <param name="expression">设置控件属性，用来初始化表达式编辑器表的表达式字符串。<paramref name="expression" /> 不包括 AppSettings 表达式前缀。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 实现，用于定义应用程序设置表达式的属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.CalendarDataBindingHandler" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>日历的日期设置为当前日期，如果 <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> 属性是数据绑定。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 所包含控件的文档。</param>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 绑定将添加到的数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.ClientScriptItem" /> 类使用提供的参数。</summary>
      <param name="text">有关内容 script 元素; 若要在客户端上运行的脚本语句的字符串。</param>
      <param name="source">src 特性值 script 元素，指定客户端脚本内容的外部源位置。</param>
      <param name="language">language 特性值 script 元素，指定的语言脚本语句。</param>
      <param name="type">Type 属性值为 script 元素，指示相关联的脚本引擎的 MIME 类型。</param>
      <param name="id">ID script 元素。 此参数所需的设计宿主 (例如， Visual Studio 2005)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 null （设计宿主引发）。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> 类的新实例。</summary>
      <param name="clientScriptItems">一个数组 <see cref="T:System.Web.UI.Design.ClientScriptItem" /> 用来初始化集合的元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.ColorBuilder.BuildColor(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String)">
      <summary>启动颜色编辑器来生成 HTML 颜色属性值。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 其站点是要用于访问设计时服务。</param>
      <param name="owner">
        <see cref="T:System.Web.UI.Control" /> 用于父选取器窗口中。</param>
      <param name="initialColor">在选取器窗口中有效的 HTML 颜色格式显示初始颜色。</param>
      <returns>在 HTML 颜色格式，以字符串形式表示的颜色值或 null 如果检索不到生成器服务。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>通过使用指定的服务提供程序和上下文中编辑指定对象的值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 用于获取附加上下文信息。</param>
      <param name="provider">通过它来获得编辑服务的服务提供程序对象。</param>
      <param name="value">所编辑的对象的实例。</param>
      <returns>所选的连接表达式中，为字符串对象;否则为如果未选择连接表达式，相同 <paramref name="value" /> 为传入。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回与指定的上下文的连接字符串编辑器相关联的编辑样式。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 用于获取附加上下文信息。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示编辑所提供的用户界面样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)">
      <summary>返回的提供程序提供的实例的名称 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类。</summary>
      <param name="instance">一个 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 或派生类的实例。</param>
      <returns>始终为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>提供程序名称放入的指定实例 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类。</summary>
      <param name="instance">一个 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 或派生类的实例。</param>
      <param name="connection">
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>连接字符串表达式的计算结果，并为控件属性提供设计时值。</summary>
      <param name="expression">要计算的连接字符串表达式。 表达式不包含 ConnectionStrings 表达式前缀。</param>
      <param name="parseTimeData">包含用于计算表达式的其他分析信息的对象。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>如果表达式计算成功，则计算的表达式字符串所引用的对象否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回连接字符串表达式的表达式编辑器表。</summary>
      <param name="expression">设置控件属性，用来初始化表达式编辑器表的表达式字符串。 表达式不包含 ConnectionStrings 表达式前缀。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 定义连接字符串表达式的属性的实例。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>在设计时添加控件的样式特性。</summary>
      <param name="styleAttributes">样式特性是键控的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes">
      <summary>返回在设计时控件的样式属性的集合。</summary>
      <returns>应用到设计图面上的控件的样式属性的集合。 样式属性名称是用来访问中的样式属性值的密钥 <see cref="T:System.Collections.IDictionary" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>返回用于在设计时表示控件的 HTML 标记。</summary>
      <param name="regions">设计器区域集合。</param>
      <returns>表示控件的 HTML 标记字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>在设计时返回该控件的可编辑区域的内容。</summary>
      <param name="region">在控件内包含的可编辑设计区域。</param>
      <returns>中包含的区域的保持的内容 <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent">
      <summary>在设计时返回控件的持久内容。</summary>
      <returns>null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>在设计时设置控件的可编辑区域的内容。</summary>
      <param name="region">在控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.ContentDefinition.#ctor(System.String,System.String,System.String)">
      <summary>创建 <see cref="T:System.Web.UI.Design.ContentDefinition" /> 类的新实例。</summary>
      <param name="id">内容的字符串标识符。</param>
      <param name="content">默认 HTML 标记内容。</param>
      <param name="designTimeHtml">设计时 HTML 标记内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)">
      <summary>创建 HTML 标记，以显示在设计时指定的错误消息。</summary>
      <param name="errorMessage">要在生成的 HTML 标记中包含的错误消息。</param>
      <returns>一个包含指定的错误消息的 HTML 标记字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)">
      <summary>创建 HTML 标记来显示在设计时指定的异常错误消息。</summary>
      <param name="errorMessage">要在生成的 HTML 字符串中包含的错误消息。</param>
      <param name="e">要在生成的 HTML 字符串中包括的异常。</param>
      <returns>包含指定的 HTML 标记 <paramref name="errorMessage" /> 和 <paramref name="e" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>提供了一个简单的矩形占位符表示，显示的类型和控件的 ID。</summary>
      <returns>一个字符串，包含提供有关控件的基本信息的设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>提供了一个简单的矩形占位符表示，显示的类型和 ID 的控件，并且还指定的附加说明或信息。</summary>
      <param name="instruction">一个字符串，包含文本和标记将添加到的 HTML 输出。</param>
      <returns>一个字符串，包含提供有关控件的信息的设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateViewControl">
      <summary>返回用于查看或设计图面上呈现关联控件的副本。</summary>
      <returns>Web 服务器控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetBounds">
      <summary>检索表示设计图面上显示的控件边界的矩形的坐标。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 对象，表示为相对于控件，而不是文档的设计图面上的控件边界。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索用当前控件设计器区域显示控件并填充集合的 HTML 标记。</summary>
      <param name="regions">关联控件的控件设计器区域的集合。</param>
      <returns>关联控件的设计时 HTML 标记，包括所有控件设计器区域。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)">
      <summary>返回相应的资源提供程序工厂，具体取决于站点的配置文件中的全球化设置。</summary>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" /> 可以检索全局和本地服务的对象。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 对象时，如果有任何配置文件中定义的; 否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象来获取内容。</param>
      <returns>如果控件设计器支持可编辑区域，则为区域的保持内容；否则为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>检索表示在设计时将不具有可视表示形式的运行时 Web 服务器控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记，若无该标记，则控件将没有可视表示形式。 默认值为包含组件类型和 ID 的矩形。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>检索 HTML 标记，该标记提供有关指定异常的信息。</summary>
      <param name="e">发生的异常。</param>
      <returns>指定的异常的设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent">
      <summary>在设计时检索该控件的持久内部的 HTML 标记。</summary>
      <returns>表示关联控件的持久内部 HTML 标记的字符串。 默认值为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>检索控件的持久内部 HTML 标记。</summary>
      <returns>持久内部 HTML 控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering">
      <summary>检索一个对象，包含的内容和关联控件的区域的设计时标记。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)">
      <summary>检索一个对象，包含的内容和指定的控件区域的设计时标记。</summary>
      <param name="control">一个 <see cref="T:System.Web.UI.Control" /> 对象。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)">
      <summary>检索指定的控件设计器中包含的内容和关联控件的区域的设计时标记的对象。</summary>
      <param name="designer">派生自一个控制设计器 <see cref="T:System.Web.UI.Design.ControlDesigner" />。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化控件设计器，并加载指定的组件。</summary>
      <param name="component">正在设计的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate">
      <summary>使显示在设计图面上，并发出信号控制设计器进行重绘该控件的控件的整个区域无效。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>使显示在设计图面上，并发出信号控制设计器进行重绘该控件的控件的指定的区域无效。</summary>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" /> 对象，表示要无效化，相对于控件的左上角区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
      <summary>包装一的系列更改为事务，使用指定的参数，可以回滚作为一个单元设计宿主的撤消功能。</summary>
      <param name="component">与控件设计器关联的控件。</param>
      <param name="callback">一个 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 对象，表示控件设计器中作为事务的一部分调用的函数。</param>
      <param name="context">一个包含回调参数的对象。</param>
      <param name="description">它设计宿主用于使用户可以取消该事务的影响的允许事务完成，说明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。- 或 -<paramref name="callback" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>包装一的系列更改为事务，使用指定的参数，可以回滚作为一个单元设计宿主的撤消功能。</summary>
      <param name="component">与控件设计器关联的控件。</param>
      <param name="callback">一个 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 对象，表示控件设计器中作为事务的一部分调用的函数。</param>
      <param name="context">一个包含回调参数的对象。</param>
      <param name="description">它设计宿主用于使用户可以取消该事务的影响的允许事务完成，说明。</param>
      <param name="member">一个 <see cref="T:System.ComponentModel.MemberDescriptor" /> 对象 (通常情况下，任何一个 <see cref="T:System.ComponentModel.EventDescriptor" /> 或 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象)，用于描述作为事务的一部分进行调用的关联控件的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。- 或 -<paramref name="callback" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>包装一的系列更改为事务，使用指定的参数，可以回滚作为一个单元设计宿主的撤消功能。</summary>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" /> 表示提供设计器服务，用于关联控件的控件的设计宿主对象。</param>
      <param name="component">与控件设计器关联的控件。</param>
      <param name="callback">一个 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 对象，表示控件设计器中作为事务的一部分调用的函数。</param>
      <param name="context">一个包含回调参数的对象。</param>
      <param name="description">它设计宿主用于使用户可以取消该事务的影响的允许事务完成，说明。</param>
      <param name="member">一个 <see cref="T:System.ComponentModel.MemberDescriptor" /> 对象 (通常是 <see cref="T:System.ComponentModel.EventDescriptor" /> 或 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象)，用于描述作为事务的一部分进行调用的关联控件的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。- 或 -<paramref name="callback" /> 为 null。- 或 -<paramref name="serviceProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>检索一个值，该值指示相关联的控件上的指定的属性是否数据绑定。</summary>
      <param name="propName">要测试数据绑定的属性。</param>
      <returns>true, 如果该属性是数据绑定;否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)">
      <summary>使用提供的资源编写器保持关联控件设计宿主中的资源的可本地化属性。</summary>
      <param name="resourceWriter">一个派生自 <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> 用于将资源写入到设计时响应流的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>当一个预定义的自动格式设置方案已应用到关联的控件时调用。</summary>
      <param name="appliedAutoFormat">一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象，用于定义一种样式。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>数据绑定集合发生更改时调用。</summary>
      <param name="propName">要测试其绑定集合中的更改的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当用户单击关联的控件设计时，由设计宿主调用。</summary>
      <param name="e">一个 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> 对象，它指定的位置和可能的话，用户单击控件设计器区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>关联的控件更改时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>表示将处理的方法 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 关联控件的事件。</summary>
      <param name="sender">事件源对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>当关联的 Web 服务器控件在设计时具有已调整大小设计宿主中时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>如果调用时控制设计器绘制关联的控件的设计图面上， <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> 值是 true。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" /> 对象，它指定用于绘制控件的图形和矩形边界。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>添加属性或在设计时设计宿主中的属性网格中移除属性或提供新的设计时属性，它们可能对应于关联控件的属性。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>引发 <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> 事件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)">
      <summary>克隆的控件中的注册内部数据。</summary>
      <param name="original">与控件设计器关联的控件。</param>
      <param name="clone">关联控件的克隆的副本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="original" /> 为 null。- 或 -<paramref name="clone" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>在设计时指定该控件的可编辑区域的内容。</summary>
      <param name="region">在控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑的设计区域分配的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定控件的设计时视图中可编辑区域的内容。</summary>
      <param name="region">包含控件的设计时视图中的可编辑设计区域。</param>
      <param name="content">要为可编辑的设计区域分配的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>按位分配指定 <see cref="T:System.Web.UI.Design.ViewFlags" /> 为指定的标志值的枚举。</summary>
      <param name="viewFlags">一个 <see cref="T:System.Web.UI.Design.ViewFlags" /> 值。</param>
      <param name="setFlag">true 若要设置标志， false 删除的标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>通过调用刷新关联的 Web 服务器控件的设计时 HTML 标记 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>根据指定的标记使用指定的设计器宿主中创建的控件。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 页上的设计器宿主的实例。</param>
      <param name="controlText">控件的 HTML 标记。</param>
      <returns>
        <see cref="T:System.Web.UI.Control" /> ， controlText 表示; 否则为 null, ，如果分析器无法生成该控件。</returns>
      <exception cref="T:System.ArgumentNullException">参数不是有效的。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>根据指定的标记使用指定的设计器宿主和指令创建的控件。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 页上的设计器宿主的实例。</param>
      <param name="controlText">该控件的 HTML 标记的文本。</param>
      <param name="directives">要在控件的代码中包括的页面指令。</param>
      <returns>
        <see cref="T:System.Web.UI.Control" /> ， <paramref name="controlText" /> 表示。</returns>
      <exception cref="T:System.ArgumentNullException">参数不是有效的。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>根据指定的标记使用指定的设计器宿主中创建控件的数组。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 页上的设计器宿主的实例。</param>
      <param name="controlText">一个字符串，它表示控件标记的集合。</param>
      <returns>一个数组 <see cref="T:System.Web.UI.Control" /> 元素，通过分析 <paramref name="controlText" />; 否则为 null, ，如果分析器无法生成这些控件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> 为 null。- 或 -<paramref name="controlText" /> 是 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>创建 <see cref="T:System.Web.UI.ITemplate" /> 从指定的模板标记的接口。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 页上的设计器宿主的实例。</param>
      <param name="templateText">包含的模板标记的字符串。</param>
      <returns>
        <see cref="T:System.Web.UI.ITemplate" /> 实例通过分析创建 <paramref name="templateText" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>分析指定的模板标记并创建 <see cref="T:System.Web.UI.ITemplate" /> 接口。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 页上的设计器宿主的实例。</param>
      <param name="templateText">包含的模板标记的字符串。</param>
      <param name="directives">若要添加到模板的代码的开头的任何指令。</param>
      <returns>
        <see cref="T:System.Web.UI.ITemplate" /> 实例通过分析创建 <paramref name="templateText" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>输出一个字符串，表示指定的控件的持久的形式写入指定的数据 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="sw">
        <see cref="T:System.IO.TextWriter" /> 输出将保持的控件的数据。</param>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 来持久保存。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>输出一个字符串，表示指定的控件的持久的形式写入指定的数据 <see cref="T:System.IO.TextWriter" />, ，使用指定的设计器宿主。</summary>
      <param name="sw">
        <see cref="T:System.IO.TextWriter" /> 输出将保持的控件的数据。</param>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 来持久保存。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>获取一个字符串，表示指定的控件的持久的形式的数据。</summary>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 来持久保存。</param>
      <returns>一个表示控件的持久的形式的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取一个字符串，表示指定的控件，使用指定的设计器宿主的持久化的形式的数据。</summary>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 来持久保存。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 控件的设计器宿主。</param>
      <returns>一个表示控件的持久的形式的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>输出一个字符串，可持久保存到指定指定的控件的内部属性的数据的 <see cref="T:System.IO.TextWriter" />, ，使用指定的设计器宿主。</summary>
      <param name="sw">要使用的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="component">要保留的组件。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取一个字符串，可以保留的内部属性的指定控件的数据。</summary>
      <param name="component">要保持的内部属性的组件。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 控件的设计器宿主。</param>
      <returns>一个字符串，包含有关控件的内部属性的信息来持久保存。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.IO.TextWriter,System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>将指定模板的持久化的形式表示与指定的数据字符串 <see cref="T:System.IO.TextWriter" /> 对象。</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> 用于写入到持久的模板的数据。</param>
      <param name="template">要保持的模板。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取一个字符串，表示指定的模板的持久化的形式的数据。</summary>
      <param name="template">要保持的模板。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 控件的设计器宿主。</param>
      <returns>一个表示该模板的持久化的形式的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingCollectionConverter" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将数据绑定集合转换为指定的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，该值指示的控件的数据绑定集合所属的组件。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 可用来提供附加的区域性信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>生成的类型转换的对象。 如果 <paramref name="destinationType" /> 参数的类型是 <see cref="T:System.String" />, ，此方法返回一个空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定数据绑定集合的值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 所属对象，用于标识组件或控件集合。</param>
      <param name="provider">要使用的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="value">要编辑的集合。</param>
      <returns>新的集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑器样式 <see cref="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，用于标识要检索的编辑样式控件的组件。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 对象，它指定的组件或控件的编辑器样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>将指定的控件的绑定。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 文档。</param>
      <param name="control">要绑定的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingValueUIHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.OnGetUIValueItem(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor,System.Collections.ArrayList)">
      <summary>如果当前的控件具有数据绑定，并且当前对象尚不具有一个绑定，将添加指定的属性和指定的值项列表中，数据绑定。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可以提供其他上下文信息的对象。</param>
      <param name="propDesc">一个 <see cref="T:System.ComponentModel.PropertyDescriptor" /> ，它表示要添加的数据绑定的属性。</param>
      <param name="valueUIItemList">
        <see cref="T:System.Collections.ArrayList" /> 具有数据绑定的项。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示是否可将指定的源类型转换为关联的控件属性的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <param name="sourceType">要转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为关联的控件属性的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 可用来支持本地化功能的对象。</param>
      <param name="value">要转换的对象。</param>
      <returns>
        <see cref="T:System.Object" /> 实例，它表示转换后的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以分配给关联的控件属性的可用值列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 实例，包含用于分配给关联的控件属性的可用值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此转换器是否返回一个包含所有可能的值可以分配给关联的控件属性的列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <returns>true 如果该转换器的返回列表，其中包含所有可能的值可以分配给您的关联的控件属性。否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此转换器是否返回一组可用值分配给控件属性，指定的上下文中。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <returns>true 如果此转换器返回一组标准的可用值分配到您的关联的控件属性。否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataFieldConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示转换器是否可以将指定的源类型的对象转换为该转换器的本机类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，表示您希望从转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为该转换器的本机类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 可用来支持本地化功能。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> 表示转换后的指定的对象。</returns>
      <exception cref="T:System.NotSupportedException">不能执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>如果提供了有关这些信息内所选的数据源获取数据的字段并且保存。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的组件或控件要获取其值，该值指示的对象。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 列出了标准的可访问数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示是否从返回的标准值集合 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 是所有可能值的列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <returns>true 如果 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 从返回 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 有效，则返回的所有可能值为独占列表 false 如果还可能有其他值。在此类中实现时，此方法始终返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此转换器是否支持可以从列表中选取的值的标准集。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>true 如果 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 可被调用来查找一组公共对象支持的值; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataFieldConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示转换器是否可以将指定的源类型的对象转换为该转换器的本机类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，表示您希望从转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为该转换器的本机类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 可用来支持本地化功能。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> 表示转换后的指定的对象。</returns>
      <exception cref="T:System.NotSupportedException">不能执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>如果提供了有关这些信息，请在所选的数据源中，获取存在的数据成员。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的组件或控件要获取其值，该值指示的对象。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 列出选定组件的数据源的数据成员。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示是否从返回的标准值集合 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 是所有可能值的列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供格式上下文的对象。</param>
      <returns>true 如果 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 从返回 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 有效，则返回的所有可能值为独占列表 false 如果还可能有其他值。在此类中实现时，此方法始终返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此转换器是否支持可以从列表中选取的值的标准集。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <returns>如果应调用 true 来查找对象支持的一组公共值，则为 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />；否则为 false。 此实现始终返回 true。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetFieldSchema.#ctor(System.Data.DataColumn)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> 类使用指定 <see cref="T:System.Data.DataColumn" />。</summary>
      <param name="column">一个 <see cref="T:System.Data.DataColumn" /> 对象 <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> 对象描述。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.#ctor(System.Data.DataSet)">
      <summary>创建的一个实例 <see cref="T:System.Web.UI.Design.DataSetSchema" /> 类使用指定 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> ， <see cref="T:System.Web.UI.Design.DataSetSchema" /> 实例将描述。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.GetViews">
      <summary>获取一个数组，包含有关数据源中的每个视图的信息。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.#ctor(System.Data.DataTable)">
      <summary>创建的一个实例 <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> 类使用指定 <see cref="T:System.Data.DataTable" />。</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> ， <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> 实例将描述。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetChildren">
      <summary>获取一个数组，该数组表示包含在当前视图中的子视图。</summary>
      <returns>null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetFields">
      <summary>获取一个数组，包含有关在视图中的每个数据字段的信息。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> 对象数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以分配给相关联的字段的可用布尔值的列表。</summary>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>布尔值的集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataSourceConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示转换器是否可以将指定的源类型的对象转换为该转换器的本机类型。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" /> ，它表示您想要将从转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。在此类中实现时，此方法始终返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为该转换器的本机类型。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 可用来支持本地化功能。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <returns>
        <see cref="T:System.Object" /> 表示转换后的指定的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取标准的数据源控件可以访问。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的组件或控件要获取其值，该值指示。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 列出了标准的可访问数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示是否从返回的标准值集合 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 是所有可能值的列表。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>true 如果 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 从返回 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 所有可能的值; 为独占列表 false 如果还可能有其他值。在此类中实现时，此方法始终返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此转换器是否支持可以从列表中选取的值的标准集。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>如果应调用 true 来查找对象支持的一组公共值，则为 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />；否则为 false。 此实现始终返回 true。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>指示指定的组件是否为此转换器的有效数据源。</summary>
      <param name="component">要检查为有效的数据源的组件。</param>
      <returns>true 如果 <paramref name="component" /> 实现 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.Configure">
      <summary>启动设计宿主中的数据源配置实用工具。</summary>
      <exception cref="T:System.NotSupportedException">尝试调用此方法在基类中。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时显示相关联的数据源控件的 HTML 标记。</summary>
      <returns>设计时显示该标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)">
      <summary>检索由视图名称标识的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</summary>
      <param name="viewName">视图的名称。</param>
      <returns>此实现始终返回 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames">
      <summary>返回此数据源中的视图名称的数组。</summary>
      <returns>视图名称的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 数据源的属性发生更改时事件和 <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> 值是 false。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 调用对象由提供的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 时数据源的架构已更改事件和 <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> 值是 false。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>可以选择取消事件时刷新数据源的架构。</summary>
      <param name="preferSilent">true 若要允许事件时刷新架构。 false 禁用 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 和 <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 刷新架构时发生的事件。</param>
      <exception cref="T:System.NotSupportedException">尝试调用此方法在基类中。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents">
      <summary>还原数据源事件后已取消数据源事件。</summary>
      <exception cref="T:System.InvalidOperationException">尝试调用此方法在基类中。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)">
      <summary>提供一个值，该值指示两个架构是否相等。</summary>
      <param name="schema1">要比较的第一个架构 (派生自 <see cref="T:System.Web.UI.Design.IDataSourceSchema" />)。</param>
      <param name="schema2">要比较的第二个架构。</param>
      <returns>true 如果两个架构等效;否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents">
      <summary>推迟所有数据源事件，直到后的 <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> 调用方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)">
      <summary>提供一个值，确定两个架构视图是否相等。</summary>
      <param name="viewSchema1">要比较的第一个视图 (派生自 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />)。</param>
      <param name="viewSchema2">要比较的第二个视图。</param>
      <returns>true 如果这两个视图是等效的;否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示是否可将指定的源类型转换为关联的控件属性的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现，可用于获取附加上下文信息。</param>
      <param name="sourceType">要转换的类型。</param>
      <returns>true 如果该转换器能够执行转换，则否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为关联的控件属性的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 可用来支持本地化功能的对象。</param>
      <param name="value">要转换的对象。</param>
      <returns>
        <see cref="T:System.Object" /> 实例，它表示转换后的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以分配给关联的控件属性的可用值列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现，可用于获取附加上下文信息。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 包含分配给关联的控件属性的可用值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回可以分配给关联的控件属性的可用值列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <param name="typeFilter">用于筛选的字段要包含类型标准值列表中。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 包含分配给关联的控件属性的可用值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此转换器是否返回一个包含所有可能的值可以分配给关联的控件属性的列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <returns>true 如果该转换器的返回列表，其中包含所有可能的值可以分配给您的关联的控件属性。否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此转换器是否返回一组可用值分配到指定的上下文中的控件属性。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  实现，可用于获取附加上下文信息。</param>
      <returns>true 如果此转换器返回一组标准的可用值分配到您的关联的控件属性。否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 类的新实例。</summary>
      <param name="name">一个字符串，标识特定 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.Apply(System.Web.UI.Control)">
      <summary>应用到指定控件关联的格式。</summary>
      <param name="control">若要将格式应用于一个 Web 服务器控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)">
      <summary>返回关联控件的一个副本，以便提供对控件应用格式之前预览。</summary>
      <param name="runtimeControl">Web 服务器控件运行时版本。</param>
      <returns>
        <see cref="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)" /> 方法返回关联的 Web 服务器控件的一个副本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.ToString">
      <summary>返回表示当前 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的字符串。</summary>
      <returns>
        <see cref="P:System.Web.UI.Design.DesignerAutoFormat.Name" /> 属性当前 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Add(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>添加指定 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象传递给集合的末尾。</summary>
      <param name="format">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 的一个实例。</param>
      <returns>格式已添加到集合的索引。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Clear">
      <summary>从集合中删除所有格式。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Contains(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>确定指定的格式是否包含在集合中。</summary>
      <param name="format">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 的一个实例。</param>
      <returns>true, 如果指定的格式为集合中的否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>返回指定的索引 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 在集合中的对象。</summary>
      <param name="format">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 要在集合中定位。</param>
      <returns>第一个匹配项的从零开始索引 <paramref name="format" /> 集中的; 否则为-1，如果格式不是集合中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Insert(System.Int32,System.Web.UI.Design.DesignerAutoFormat)">
      <summary>将插入 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象插入集合中的指定索引处。</summary>
      <param name="index">要插入集合中的从零开始索引 <paramref name="format" />。</param>
      <param name="format">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 要插入到集合。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Remove(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>从集合中移除指定的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</summary>
      <param name="format">要从该集合中移除的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 集合中的指定索引处的对象。</summary>
      <param name="index">从零开始的索引 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 若要从集合中移除。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>将复制到集合中的元素 <see cref="T:System.Array" /> 对象，从特定处开始 <see cref="T:System.Array" /> 索引时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 中接收指定的项。</param>
      <param name="index">要复制的项的的起始索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回 <see cref="T:System.Collections.IEnumerator" /> 循环访问集合的接口时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IEnumerable" /> 接口。</summary>
      <returns>用于 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Add(System.Object)">
      <summary>将某项添加到集合时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="value">一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 将添加到 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</param>
      <returns>添加的项的索引。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Contains(System.Object)">
      <summary>确定集合是否包含特定值时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="value">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
      <returns>true, 如果该对象就处于 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定集合中特定项的索引时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="value">值。</param>
      <returns>集合中项的索引。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>将一项插入集合中指定位置的索引时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="index">要插入 <paramref name="value" /> 的位置的索引。</param>
      <param name="value">一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 插入。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从集合中移除特定对象的第一个匹配项时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="value">要移除的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>移除位于指定的项索引时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="index">要移除的项的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatStyle.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.#ctor(System.Web.UI.Design.IDataSourceDesigner,System.String)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 类使用指定的数据源设计器和视图名称。</summary>
      <param name="owner">父数据源设计器。</param>
      <param name="viewName">在数据源视图的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为 null- 或 -<paramref name="viewName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>生成的架构匹配的使用的指定的数目的行，该值指示是否正在返回实际数据或示例数据的相关联的数据源控件的设计时数据。</summary>
      <param name="minimumRows">要返回的最小行数。</param>
      <param name="isSampleData">若要指示返回的数据是示例数据，则为 true；若要指示返回的数据是实时数据，则为 false。</param>
      <returns>一个 <see cref="T:System.Web.UI.DataSourceView" /> 对象，其中包含要在设计时显示的数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.IHierarchicalDataSourceDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" /> ，它是用于关联控件设计器。</param>
      <param name="viewPath">指向要用于视图的数据块的唯一路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为 null- 或 -<paramref name="viewPath" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>生成与相关数据源控件的架构匹配的设计时数据，并返回一个值，该值指示数据是示例数据还是真实数据。</summary>
      <param name="isSampleData">true 若要指示返回的数据是示例数据; false 来指示返回的数据是实时数据。</param>
      <returns>此实现始终返回 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerObject" /> 类的新实例。</summary>
      <param name="designer">父设计器。</param>
      <param name="name">对象的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null。- 或 -<paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.GetService(System.Type)">
      <summary>获取服务设计宿主中由标识提供的类型。</summary>
      <param name="serviceType">正在请求的服务类型。</param>
      <returns>请求的服务。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.IServiceProvider.GetService(System.Type)" />。</summary>
      <param name="serviceType">正在请求的服务类型。</param>
      <returns>请求的服务。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 为控件设计器的指定名称的类。</summary>
      <param name="designer">控制设计器，其中包含此设计器区域。</param>
      <param name="name">此设计器区域的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null。- 或 -<paramref name="designer" /> 为空字符串 ("")。- 或 -<paramref name="name" /> 为 null。- 或 -<paramref name="name" /> 为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 类为控件设计器，可以选择将该实例设置为一个可选择区域在设计器中指定的名称。</summary>
      <param name="designer">控制设计器，其中包含此设计器区域。</param>
      <param name="name">此设计器区域的名称。</param>
      <param name="selectable">true 若要选择的区域;否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null。- 或 -<paramref name="designer" /> 为空字符串 ("")。- 或 -<paramref name="name" /> 为 null。- 或 -<paramref name="name" /> 为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.GetBounds">
      <summary>检索在设计图面上的设计器区域的大小。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 表示设计图面上的设计器区域大小。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 指定的控件设计器的类。</summary>
      <param name="owner">拥有此集合的设计器区域控件设计器。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)">
      <summary>添加指定 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象传递给集合的末尾。</summary>
      <param name="region">要添加到集合中的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
      <returns>该区域已添加到集合的索引。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Clear">
      <summary>从集合中移除所有区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)">
      <summary>获取一个值，该值指示在集合中包含的指定的区域。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 要在集合中定位。</param>
      <returns>true, 如果区域是集合中的否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)">
      <summary>将复制到集合中的元素 <see cref="T:System.Array" /> 对象，从特定处开始 <see cref="T:System.Array" /> 索引。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 复制区域的目标。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)">
      <summary>返回指定的索引 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 在集合中的对象。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 要在集合中定位。</param>
      <returns>第一个匹配项的从零开始索引 <paramref name="region" /> 集中的; 否则为-1，如果 <paramref name="region" /> 不是集合中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)">
      <summary>将插入 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象插入集合中的指定索引处。</summary>
      <param name="index">集合中要插入区域中的从零开始索引。</param>
      <param name="region">
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 要插入到集合。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)">
      <summary>从集合中移除指定的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象。</summary>
      <param name="region">要从该集合中移除的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 集合中的指定索引处的对象。</summary>
      <param name="index">在集合内从零开始的索引 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 中删除。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 复制区域的目标。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="o">要添加到集合中的项。</param>
      <returns>该项目已添加到集合的索引。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="o">
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 要在集合中定位。</param>
      <returns>true, 如果区域是集合中的否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="o">
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 要在集合中定位。</param>
      <returns>集合中对象的第一个匹配项的从零开始的索引否则为-1，如果对象不在集合中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">在此处插入对象的集合中的从零开始索引。</param>
      <param name="o">要插入到集合中的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="o">要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的对象的集合中的从零开始索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionMouseEventArgs.#ctor(System.Web.UI.Design.DesignerRegion,System.Drawing.Point)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> 类的指定的区域和位置。</summary>
      <param name="region">单击了; 设计器区域用于初始化 <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />。</param>
      <param name="location">用户单击了，相对于该区域; 左上角位置用于初始化 <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataBoundDataTable">
      <summary>创建 <see cref="T:System.Data.DataTable" /> 对象，其中包含三列的名称指示列连接到数据源。</summary>
      <returns>一个新 <see cref="T:System.Data.DataTable" /> 具有三列和任何数据对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataTable">
      <summary>创建 <see cref="T:System.Data.DataTable" /> 对象，其中包含三列的名称指示列包含示例数据。</summary>
      <returns>一个新 <see cref="T:System.Data.DataTable" /> 具有三个列。 这些列可以包含字符串类型的数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable)">
      <summary>创建一个示例 <see cref="T:System.Data.DataTable" /> 具有相同的架构提供的数据对象。</summary>
      <param name="referenceData">具有所需的架构的示例使用作为格式的数据源 <see cref="T:System.Data.DataTable" /> 对象。</param>
      <returns>一个 <see cref="T:System.Data.DataTable" /> 对象，其中包含具有与提供相同的名称和数据类型的列 <paramref name="referenceData" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable,System.Boolean)">
      <summary>创建 <see cref="T:System.Data.DataTable" /> 对象具有相同的架构与提供的数据，并可以选择性地包含列名，该值指示数据绑定的数据。</summary>
      <param name="referenceData">
        <see cref="T:System.Collections.IEnumerable" /> 包含数据的对象。</param>
      <param name="useDataBoundData">如果 true, ，列名称指示它们包含绑定的数据。</param>
      <returns>一个 <see cref="T:System.Data.DataTable" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataFields(System.Collections.IEnumerable)">
      <summary>获取用于指定的数据源的数据字段的属性说明符集合。</summary>
      <param name="dataSource">要从中检索数据字段的数据源。</param>
      <returns>一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> 对象，它描述指定的数据源的数据字段。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMember(System.ComponentModel.IListSource,System.String)">
      <summary>从指定的数据源中获取指定的数据成员。</summary>
      <param name="dataSource">
        <see cref="T:System.ComponentModel.IListSource" /> ，其中包含在其中查找该成员的数据。</param>
      <param name="dataMember">要检索的数据成员的名称。</param>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 包含从指定的数据源的指定的数据成员，如果它存在。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSource" /> 为 null- 或 -<paramref name="dataMember" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMembers(System.Object)">
      <summary>获取指定的数据源中的数据成员的名称。</summary>
      <param name="dataSource">要从中检索的成员名称数据源。</param>
      <returns>类型的数组 String ，其中包含指定的数据源中的数据成员的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDesignTimeDataSource(System.Data.DataTable,System.Int32)">
      <summary>将指定的示例行数添加到指定的数据表。</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> 对象向其中添加示例行。</param>
      <param name="minimumRows">要添加的行中最小的数。</param>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 包含在设计时使用的示例数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String)">
      <summary>获取在设计宿主中按名称选择，由指定的组件的站点属性，并且由指定的数据源名称标识的数据源。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 对象，其中包含数据源。</param>
      <param name="dataSource">要检索的数据源的名称。</param>
      <returns>实现任何一个的对象 <see cref="T:System.ComponentModel.IListSource" /> 或 <see cref="T:System.Collections.IEnumerable" /> 表示所选的数据源，或 null 如果无法访问数据源或设计器宿主。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String,System.String)">
      <summary>获取在设计宿主中按名称选择，由指定的组件的站点属性，并且由指定的数据源名称和成员名称标识的数据源。</summary>
      <param name="component">对象实现 <see cref="T:System.ComponentModel.IComponent" /> ，其中包含数据源属性。</param>
      <param name="dataSource">要检索的数据源。</param>
      <param name="dataMember">要检索的数据成员。</param>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 包含的数据成员，或 null 如果数据源、 成员或组件的站点无法访问。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeGlobalResourceProvider(System.IServiceProvider,System.String)">
      <summary>当在派生类中重写，创建全局资源提供程序使用提供 <see cref="T:System.IServiceProvider" /> 接口和资源类名称。</summary>
      <param name="serviceProvider">对设计宿主的引用。</param>
      <param name="classKey">资源类的名称。</param>
      <returns>要么 <see cref="T:System.Web.Compilation.IResourceProvider" /> 或 <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceProvider(System.IServiceProvider)">
      <summary>当在派生类中重写创建本地资源提供程序使用提供的对设计宿主的引用。</summary>
      <param name="serviceProvider">对设计宿主的引用。</param>
      <returns>
        <see cref="T:System.Web.Compilation.IResourceProvider" /> 或从派生的类 <see cref="T:System.Web.Compilation.IResourceProvider" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceWriter(System.IServiceProvider)">
      <summary>当在派生类中重写，使用提供的对设计宿主的引用创建本地资源编写器。</summary>
      <param name="serviceProvider">对设计宿主的引用。</param>
      <returns>使用提供的对设计宿主引用的本地资源编写器。</returns>
    </member>
    <member name="M:System.Web.UI.Design.Directives.DirectiveAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.Directives.DirectiveAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)">
      <summary>返回集合的基于指令 <paramref name="frameworkVersion" /> 参数和 <paramref name="extension" /> 参数。</summary>
      <param name="frameworkVersion">.NET Framework 版本中。</param>
      <param name="extension">文件扩展名。</param>
      <returns>只读的集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.Directives.SchemaElementNameAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.Directives.SchemaElementNameAttribute" /> 类的新实例。</summary>
      <param name="value">名称值中。</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 类使用给定的所有者和名称。</summary>
      <param name="owner">一个 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象或派生自的设计器 <see cref="T:System.Web.UI.Design.ControlDesigner" />。</param>
      <param name="name">区域的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 类使用给定的所有者名称和初始值为 <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" /> 属性。</summary>
      <param name="owner">一个 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象或派生自的设计器 <see cref="T:System.Web.UI.Design.ControlDesigner" />。</param>
      <param name="name">区域的名称。</param>
      <param name="serverControlsOnly">true 如果要使区域接受 Web 服务器控件的内容;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)">
      <summary>返回 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象，其中包含给定控件的设计时 HTML 标记。</summary>
      <param name="control">要为其获取控件 <see cref="T:System.Web.UI.Design.ViewRendering" /> 当前区域的对象。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算的表达式字符串并为控件属性提供设计时值。</summary>
      <param name="expression">要计算的表达式字符串。 表达式不包含表达式前缀。</param>
      <param name="parseTimeData">一个对象，包含用于评估的其他分析信息 <paramref name="expression" />。 这通常是由提供的表达式生成器。</param>
      <param name="propertyType">控件属性绑定到这种 <paramref name="expression" /> 绑定。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>如果表达式计算成功，则计算的表达式字符串所引用的对象否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)">
      <summary>返回 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 与指定的表达式前缀相关联的实现。</summary>
      <param name="expressionPrefix">用于查找关联的表达式编辑器的表达式前缀。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 与相关联实现 <paramref name="expressionPrefix" />; 否则为 null, ，如果 <paramref name="expressionPrefix" /> 未定义，或者不与关联 <see cref="T:System.Web.UI.Design.ExpressionEditor" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)">
      <summary>返回 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 与指定的表达式生成器类型相关联的实现。</summary>
      <param name="expressionBuilderType">派生的表达式生成器类，用于查找关联的表达式编辑器的类型。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 与相关联实现 <paramref name="expressionBuilderType" />; 否则为 null, ，如果 <paramref name="expressionBuilderType" /> 找不到或具有没有关联 <see cref="T:System.Web.UI.Design.ExpressionEditor" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expressionBuilderType" /> 为 null。- 或 -<paramref name="serviceProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回与当前表达式编辑器相关联的表达式编辑器表。</summary>
      <param name="expression">设置控件属性，用来初始化表达式编辑器表的表达式字符串。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> ，定义自定义表达式的属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
      <summary>当在派生类中重写，返回由表达式编辑器表属性值构成的表达式字符串。</summary>
      <returns>当前属性值的的自定义表达式字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将表达式绑定集合转换为指定的类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 所属对象，它指示组件或控件绑定集合的表达式。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 用于提供附加的区域性信息的对象。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换为的类型。</param>
      <returns>如果 <paramref name="destinationType" /> 的类型不是 <see cref="T:System.String" />, ，类型转换，则生成的对象或者，如果 <paramref name="destinationType" /> 是一个字符串，为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文中编辑指定对象的值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息，如关联控件的对象。</param>
      <param name="provider">通过它可以获得编辑服务的服务提供程序对象。</param>
      <param name="value">所编辑的对象的实例。</param>
      <returns>
        <see cref="T:System.Web.UI.ExpressionBindingCollection" /> 对象，其中包含选定的表达式; 否则为如果未不选择任何表达式， <paramref name="value" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器中为指定的上下文相关联的编辑样式。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示编辑所提供的用户界面样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>指示指定的组件是否为此转换器的有效数据源。</summary>
      <param name="component">要检查为有效的数据源的组件。</param>
      <returns>true 如果 <paramref name="component" /> 实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>获取与数据源控件相关联的已命名的数据源视图。</summary>
      <param name="viewPath">指向要在创建该视图中使用的数据块的唯一路径。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> 数据源的属性发生更改时事件和 <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> 属性值是 false。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 调用对象由提供的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> 时数据源的架构已更改事件和 <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> 属性值是 false。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新数据的架构。</summary>
      <param name="preferSilent">在此实现中不使用此参数。 但是，则应在派生类中受到支持。</param>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>还原数据源事件后已取消。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> 属性为 false。</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>推迟所有数据源事件，直到后的 <see cref="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents" /> 调用方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 对象占用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并设置用于设计的组件。</summary>
      <param name="component">设计的的控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached">
      <summary>一种行为是与元素关联时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching">
      <summary>一种行为解除关联从元素时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>提供可用于指示何时发生了数据绑定的方法。</summary>
      <param name="propName">已更改的属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent">
      <summary>使您能够执行其他处理，当关联的控件附加到父控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>在设计时设置的公开的事件的列表 <see cref="T:System.ComponentModel.TypeDescriptor" /> 组件的对象。</summary>
      <param name="events">
        <see cref="T:System.Collections.IDictionary" /> ，其中包含要公开的组件的事件的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器，以公开一组特定的属性通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 在设计时对象。</summary>
      <param name="properties">要用于该组件的筛选器的属性集。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlIntrinsicControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HyperLinkDataBindingHandler" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>解析为指定的控件设计时数据绑定。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 所包含控件的文档。</param>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 将绑定到数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.GetContentDesignerState(System.String)">
      <summary>检索标识内容占位符的当前状态。</summary>
      <param name="identifier">内容占位符的标识符。</param>
      <returns>标识内容占位符当前状态。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.SetContentDesignerState(System.String,System.Web.UI.Design.ContentDesignerState)">
      <summary>设置标识的内容占位符的当前状态。</summary>
      <param name="identifier">内容占位符的标识符。</param>
      <param name="state">
        <see cref="T:System.Web.UI.Design.ContentDesignerState" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>提供在设计器进入或退出模板模式时执行处理的机会。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)">
      <summary>检索在标记上的已标识特性的值。</summary>
      <param name="name">属性名。</param>
      <returns>包含属性的值的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetContent">
      <summary>检索标记的内容的 HTML 标记。</summary>
      <returns>标记的内容 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetOuterContent">
      <summary>检索控件，包括外部的标记的完整 HTML 标记。</summary>
      <returns>外部控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.RemoveAttribute(System.String)">
      <summary>从标记中删除指定的属性。</summary>
      <param name="name">属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)">
      <summary>设置指定属性的值并创建该属性，如有必要。</summary>
      <param name="name">特性名称。</param>
      <param name="value">特性值。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetContent(System.String)">
      <summary>设置标记的内容的 HTML 标记。</summary>
      <param name="content">标记的内容 HTML 标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)">
      <summary>集 <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> 标记的属性。</summary>
      <param name="dirty">值为 <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> 属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)">
      <summary>检索设计器视图的外部边界。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 为想要检索的边界。</param>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 包含有关位置和尺寸的设计时视图的信息。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Invalidate(System.Drawing.Rectangle)">
      <summary>通知设计宿主所表示的提供的矩形区域需要进行重绘设计图面上。</summary>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" /> 表示的位置和视图的设计图面上的外部尺寸。 为此矩形的坐标系统原点是元素的向其附加行为的左上角。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />。</summary>
      <param name="viewFlags">
        <see cref="T:System.Web.UI.Design.ViewFlags" /> 枚举的一个成员。</param>
      <param name="setFlag">true 若要设置标志， false 要取消标志。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将提供的内容放入提供的设计器区域。</summary>
      <param name="region">一个 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 到其内容将被放置。</param>
      <param name="content">要放入设计器区域的 HTML 标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Update">
      <summary>导致相关联的控件重绘其工作区内的无效的区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)">
      <summary>刷新数据源的架构。</summary>
      <param name="preferSilent">true 若要禁用架构后之前, 的数据绑定事件已刷新; false 以启用事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 指定视图。</summary>
      <param name="viewName">在基础数据源视图的名称。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 包含标识视图的信息或 null 如果找不到具有指定名称的视图。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames">
      <summary>在基础数据源中获取的视图的名称。</summary>
      <returns>
        <see cref="T:System.String" /> 类型的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新基础数据源的架构。</summary>
      <param name="preferSilent">指示是否取消刷新架构时引发的任何事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents">
      <summary>继续引发数据源事件之后调用 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" /> 方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents">
      <summary>取消所有事件，直到数据源引发的 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /> 调用方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>从所选的数据源获取选定的数据成员。</summary>
      <returns>如果控件允许用户选择所选的数据源中的所选的数据成员 <see cref="T:System.ComponentModel.IListSource" /> (如 <see cref="T:System.Data.DataSet" />) 为数据源，并提供了 DataMember 属性来选择特定的列表 (或 <see cref="T:System.Data.DataTable" />) 数据源中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>获取对所选的数据源的数据源提供程序的引用。</summary>
      <returns>此数据源提供程序当前所选的数据源对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceSchema.GetViews">
      <summary>数据源中包含的视图获取架构描述符的数组。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetChildren">
      <summary>获取表示当前视图中所包含的子视图的数组。</summary>
      <returns>一个数组 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 代表当前视图中所包含的子视图的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetFields">
      <summary>获取一个数组，包含有关数据源中的每个字段的信息。</summary>
      <returns>一个数组 <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> 表示每个数据源中字段的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService.GetFactory">
      <summary>创建一个 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 对象。</summary>
      <returns>设计时间资源提供程序工厂。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceWriter.CreateResourceKey(System.String,System.Object)">
      <summary>创建一个项，请使用所提供的字符串，用于从给定的资源中检索数据。</summary>
      <param name="resourceName">资源的名称。</param>
      <param name="obj">要本地化的对象。</param>
      <returns>用来写入或检索的密钥 <paramref name="obj" /> 从 <paramref name="resourceName" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.GetContents">
      <summary>提供对设计宿主中检索到的文档项的内容的访问。</summary>
      <returns>一个 <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.Open">
      <summary>从设计宿主中检索的文档项 ў ј</summary>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddDocument(System.String,System.Byte[])">
      <summary>将文档添加到项目的文件夹中设计宿主中，如 Visual Studio 2005。</summary>
      <param name="name">文档的名称。</param>
      <param name="content">类型的数组 <see cref="T:System.Byte" /> 包含文档内容。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.IDocumentProjectItem" /> 表示所添加的文档。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddFolder(System.String)">
      <summary>如在设计宿主中，项目文件夹中创建一个新文件夹 Visual Studio 2005。</summary>
      <param name="name">新文件夹的名称。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.IFolderProjectItem" /> 表示新的文件夹。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>获取与数据源控件相关联的已命名的数据源视图。</summary>
      <param name="viewPath">若要检索的数据源的一部分 XPath。</param>
      <returns>与数据相关联的已命名的数据源视图的源控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新基础数据源的架构。</summary>
      <param name="preferSilent">true 若要取消刷新架构; 时引发的事件否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>还原之后调用的事件 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents" /> 方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>关闭数据源控件中的事件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>获取指定的属性。</summary>
      <param name="attribute">要检索的属性。</param>
      <param name="ignoreCase">true 如果特性语法是不区分大小写;否则为 false。</param>
      <returns>已检索的属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>获取指定的样式属性。</summary>
      <param name="attribute">要检索的样式属性。</param>
      <param name="designTimeOnly">true 如果该属性仅活动在设计时;否则为 false。</param>
      <param name="ignoreCase">true 如果特性语法是不区分大小写;否则为 false。</param>
      <returns>已检索的样式属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>移除指定的属性。</summary>
      <param name="attribute">要移除的属性。</param>
      <param name="ignoreCase">true 如果特性语法是不区分大小写;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>删除指定的样式属性。</summary>
      <param name="attribute">要删除的样式属性。</param>
      <param name="designTimeOnly">true 如果该属性仅活动在设计时;否则为 false。</param>
      <param name="ignoreCase">true 如果特性语法是不区分大小写;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>将指定的属性设置为指定的对象。</summary>
      <param name="attribute">要设置的属性。</param>
      <param name="value">对其设置的属性对象。</param>
      <param name="ignoreCase">true 如果特性语法是不区分大小写;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>将指定的样式属性设置为指定的对象。</summary>
      <param name="attribute">要设置的属性。</param>
      <param name="designTimeOnly">true 如果该属性仅在设计时; 活动否则为 false。</param>
      <param name="value">要设置的属性的对象。</param>
      <param name="ignoreCase">true 如果特性语法是不区分大小写;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.ImageUrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ImageUrlEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>关闭该控件，并可选择保存任何更改。</summary>
      <param name="saveChanges">true 如果应保存对文档的更改。否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>打开并显示该控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>调整为指定的宽度和高度控制。</summary>
      <param name="width">新的控件的宽度。</param>
      <param name="height">新控件的高度。</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>向文档中保存任何更改。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>该控件的名称更改为指定的名称。</summary>
      <param name="newName">控件的新名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>使用指定的名称和模板为指定的模板化控件设计器创建新的模板编辑框。</summary>
      <param name="designer">将使用模板编辑框的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框上显示的编辑框的名称。 通常这是与相同 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 属性用作的菜单文本 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 创建框架时调用。</param>
      <param name="templateNames">模板编辑框将包含的模板的名称数组。</param>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>创建新的模板编辑框指定 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />, ，使用指定的名称、 模板名称、 控件样式和模板样式。</summary>
      <param name="designer">将使用模板编辑框的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框上显示的编辑框的名称。 通常这是与相同 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 属性用作的菜单文本 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 创建框架时调用。</param>
      <param name="templateNames">模板编辑框将包含的模板的名称数组。</param>
      <param name="controlStyle">编辑框的控件 <see cref="T:System.Web.UI.WebControls.Style" />。</param>
      <param name="templateStyles">表示编辑框的模板样式的 <see cref="T:System.Web.UI.WebControls.Style" /> 类型的数组。</param>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>获取父模板的名称。</summary>
      <param name="control">要为其获取父模板名称的 <see cref="T:System.Web.UI.Control" />。</param>
      <returns>父模板的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebAdministrationService.Start(System.Collections.IDictionary)">
      <summary>启动设计宿主中的 Web 管理功能。</summary>
      <param name="arguments">一个 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.GetProjectItemFromUrl(System.String)">
      <summary>从设计宿主中基于其 URL 将返回一个项目项。</summary>
      <param name="appRelativeUrl">要检索的项目项相对路径。</param>
      <returns>从基于其 URL 设计宿主项目项。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.OpenWebConfiguration(System.Boolean)">
      <summary>返回 <see cref="T:System.Configuration.Configuration" /> 对象，表示当前的 Web 应用程序设计宿主中。</summary>
      <param name="isReadOnly">true 指示返回 <see cref="T:System.Configuration.Configuration" /> 可编辑; 否则为 false。</param>
      <returns>表示当前的 Web 应用程序设计宿主中的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>获取指定对象的类型。</summary>
      <param name="tagPrefix">类型的标记前缀。</param>
      <param name="typeName">类型的名称。</param>
      <returns>
        <see cref="T:System.Type" /> 的对象，如果无法解析。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>获取当前项目的注册指令。</summary>
      <returns>当前项目的的注册指令中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>获取指定类型的对象的标记前缀。</summary>
      <param name="objectType">对象的类型。</param>
      <returns>如果无法找到了指定的对象类型标记前缀。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>启动 <see cref="T:System.Web.UI.Design.ColorBuilder" /> 若要生成的颜色属性。</summary>
      <param name="owner">若要显示的对话框的父级所使用的控件 <see cref="T:System.Web.UI.Design.ColorBuilder" />。</param>
      <param name="initialColor">要预先选择的编辑器初始颜色。</param>
      <returns>所选颜色。 此值将为已命名的颜色或 RGB 颜色以 HTML 颜色格式 (#RRGGBB) 表示。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>将启动一个编辑器，生成 URL 属性。</summary>
      <param name="owner">若要显示的对话框的父级所使用的控件 <see cref="T:System.Web.UI.Design.UrlBuilder" />。</param>
      <param name="initialUrl">要在所选内容界面中显示的初始 URL。</param>
      <param name="baseUrl">用来构造的相对 Url 的基 URL。</param>
      <param name="caption">显示选择界面中的消息标题。</param>
      <param name="filter">要使用有选择地筛选所选内容界面中显示的文件的筛选器字符串。</param>
      <param name="options">一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> ，该值指示用于 <see cref="T:System.Web.UI.Design.UrlBuilder" />。</param>
      <returns>一个字符串，包含的 URL 返回 <see cref="T:System.Web.UI.Design.UrlBuilder" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>创建一个可放弃的撤消单元。</summary>
      <returns>在新的可放弃的撤消单元。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>放弃指定的撤消单元。</summary>
      <param name="discardableUndoUnit">要放弃的撤消单元。</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>能够撤消撤消的操作单元或事务内发生的操作。</summary>
      <param name="enable">true 如果操作应可撤消;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>派生类中实现时，更新当前所选内容。</summary>
    </member>
    <member name="M:System.Web.UI.Design.MailFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.MailFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.MdbDataFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.MdbDataFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>将映射的属性，包括描述和值，精确到内部 HTML 样式。</summary>
      <param name="propName">要映射的属性的名称。</param>
      <param name="varPropValue">该属性的值。</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>提供将行为附加到设计器时，会引发通知。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>表示将处理的方法 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 类。</summary>
      <param name="sender">发送事件的对象。</param>
      <param name="ce">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.UpdateDesignTimeHtml">
      <summary>刷新该控件的显示。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算资源表达式并为控件属性提供设计时值。</summary>
      <param name="expression">要计算的资源表达式。<paramref name="expression" /> 不包括 Resources 表达式前缀。</param>
      <param name="parseTimeData">对象提供附加分析数据的形式 <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> 值。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
      <returns>如果表达式计算成功，则计算的表达式字符串所引用的对象否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回输入的表达式的字符串和服务提供程序实现使用初始化资源表达式编辑器表。</summary>
      <param name="expression">资源表达式，用来初始化表达式编辑器表。</param>
      <param name="serviceProvider">提供的用来初始化表达式编辑器表设计器宿主服务提供程序实现。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> ，它定义的资源表达式属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="expression">资源表达式，用来初始化表达式编辑器表。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression">
      <summary>返回由表达式编辑器表属性值构成的资源表达式。</summary>
      <returns>在工作表中的当前设置资源表达式字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算结果 RouteUrl 表达式，并提供了设计时值。</summary>
      <param name="expression">一个 RouteUrl 要计算的表达式。 表达式不包含 RouteUrl 表达式前缀。</param>
      <param name="parseTimeData">一个包含其他分析信息的对表达式求值的对象。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">提供用于获取其他设计时服务的设计器宿主的服务提供程序实现。</param>
      <returns>为指定的路由和路由参数值，如果表达式计算成功，则 URL否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回的表达式编辑器表 RouteUrl 表达式。</summary>
      <param name="expression">用于初始化表达式编辑器表表达式字符串。 表达式不包含 RouteUrl 表达式前缀。</param>
      <param name="serviceProvider">提供用于获取其他设计时服务的设计器宿主的服务提供程序实现。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> 实例以定义 RouteUrl 表达式属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="expression">一个 RouteUrl 用来初始化表达式编辑器表的表达式。</param>
      <param name="serviceProvider">服务提供程序实现，它提供的设计器宿主，用来获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression">
      <summary>返回 RouteUrl 由表达式编辑器表属性值构成的表达式。</summary>
      <returns>RouteUrl 表中的当前设置的表达式字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算结果 RouteValue 表达式，并提供了设计时值。</summary>
      <param name="expression">一个 RouteValue 要计算的表达式。 表达式不包含 RouteValue 表达式前缀。</param>
      <param name="parseTimeData">一个包含用于计算表达式的其他分析信息的对象。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">服务提供程序实现提供的设计器宿主和用于获取其他设计时服务。</param>
      <returns>如果表达式计算成功，则指定 URL 参数的值否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回的表达式编辑器表 RouteValue 表达式。</summary>
      <param name="expression">用于初始化表达式编辑器表表达式字符串。 表达式不包含 RouteValue 表达式前缀。</param>
      <param name="serviceProvider">服务提供程序实现提供的设计器宿主和用于获取其他设计时服务。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> 实例以定义 RouteValue 表达式属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="expression">一个 RouteValue 用来初始化表达式编辑器表的表达式。</param>
      <param name="serviceProvider">一个服务提供程序实现提供的设计器宿主，用来获取其他设计时服务</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression">
      <summary>返回 RouteValue 由表达式编辑器表属性值构成的表达式。</summary>
      <returns>RouteValue 表中的当前设置的表达式字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示此转换器是否可以转换 <see cref="P:System.Web.UI.Control.SkinID" /> 对象传递给使用的提供的格式上下文和类型的字符串。</summary>
      <param name="context">为正在设计的控件提供格式上下文 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />。</param>
      <returns>true, 如果可以进行转换;否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示此转换器是否可以转换 <see cref="P:System.Web.UI.Control.SkinID" /> 为使用指定的上下文的指定类型的对象。</summary>
      <param name="context">为正在设计的控件提供格式上下文 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="destType">一个表示要转换的类型。</param>
      <returns>true, 如果可以进行转换;否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>给定将字符串转换为 <see cref="P:System.Web.UI.Control.SkinID" /> 对象使用指定的上下文和区域性信息。</summary>
      <param name="context">提供格式上下文表示正在设计的控件 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="culture">按。 如果传递 null，则采用当前区域性。</param>
      <param name="value">要转换的字符串。</param>
      <returns>一个对象，可以强制转换为 <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> 对象时，如果转换可以执行; 否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将转换给定 <see cref="P:System.Web.UI.Control.SkinID" /> 对象传递给使用指定的上下文和区域性信息的字符串。</summary>
      <param name="context">提供格式上下文表示正在设计的控件 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="culture">按。 如果 null, ，则采用当前区域性。</param>
      <param name="value">
        <see cref="P:System.Web.UI.Control.SkinID" /> 要转换的对象。</param>
      <param name="destinationType">要转换的 T:System.Type <paramref name="value" /> 到 (必须是 <see cref="T:System.String" />)。</param>
      <returns>一个对象，表示转换后的值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一组 <see cref="P:System.Web.UI.Control.SkinID" /> 可以应用于控件表示的给定的格式上下文的对象。</summary>
      <param name="context">提供格式上下文表示正在设计的控件 T:System.ComponentModel.ITypeDescriptorContext。<paramref name="context" /> 或属性的 <paramref name="context" /> 可以是 null。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 包含一组 <see cref="P:System.Web.UI.Control.SkinID" /> 对象; 否则为 null, ，如果该控件不支持外观。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值由给定的上下文控件是否支持一套 <see cref="P:System.Web.UI.Control.SkinID" /> 可以从列表中选取的对象。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 为正在设计的控件。</param>
      <returns>true, 如果 <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> 应被调用来查找一组公共对象支持的值; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.#ctor(System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类并设置的初始值 <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> 属性。</summary>
      <param name="supportsPreviewControl">要为分配的初始值 <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.Equals(System.Object)">
      <summary>确定指定的对象是否表示同一个预览属性设置与当前实例的 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类。</summary>
      <param name="obj">要与当前实例进行比较的对象 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />。</param>
      <returns>true 如果 <paramref name="obj" /> 是 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 属性和它的值是与此实例的相同 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.GetHashCode">
      <summary>返回此实例的哈希代码 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类。</summary>
      <returns>当前实例的 32 位有符号的整数哈希代码 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.IsDefaultAttribute">
      <summary>指示是否的当前实例 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类设置为默认预览属性值。</summary>
      <returns>true 如果当前实例的 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 等于默认预览特性值; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>当在派生类中重写时创建的模板编辑框为指定的谓词。</summary>
      <param name="verb">模板编辑谓词创建模板编辑框。</param>
      <returns>新的模板编辑框。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>用于打开特定模板框架对象，以便设计器中进行编辑。</summary>
      <param name="newTemplateEditingFrame">模板编辑框选对象在设计器中打开。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>关闭当前处于活动状态的模板将保存所有相关的更改后，编辑框。</summary>
      <param name="fSwitchingTemplates">true 从一个模板编辑框架之间; 切换时否则为 false。</param>
      <param name="fNested">true 如果此设计器嵌套在其设计器也在模板编辑模式，则另一个控件中 （一个或多个级别）否则为 false。</param>
      <param name="fSave">true 如果应在退出; 保存模板否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>获取缓存的模板编辑谓词。</summary>
      <returns>一个数组 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 对象时，如果有的话。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>获取模板的容器的数据项目属性。</summary>
      <param name="templateName">模板的名称。</param>
      <returns>表示数据的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>获取模板的容器的数据源。</summary>
      <param name="templateName">模板的名称。</param>
      <returns>指定模板的容器的数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>当在派生类中重写时获取模板的内容。</summary>
      <param name="editingFrame">模板编辑框，以检索的内容。</param>
      <param name="templateName">模板的名称。</param>
      <param name="allowEditing">true 如果可以编辑模板的内容; false 如果内容是只读的。</param>
      <returns>模板的内容。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>获取模板编辑设计器可以使用的谓词。</summary>
      <returns>编辑谓词可用于设计模板。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>从指定的文本创建一个模板。</summary>
      <param name="text">要从中检索模板的文本。</param>
      <returns>
        <see cref="T:System.Web.UI.ITemplate" /> 从指定的文本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>获取模板属性的父级的类型。</summary>
      <param name="templateName">要返回的父级的类型的模板的名称。</param>
      <returns>具有 template 属性的对象的类型。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>获取表示指定的模板的文本的字符串。</summary>
      <param name="template">
        <see cref="T:System.Web.UI.ITemplate" /> 将转换为文本。</param>
      <returns>一个字符串，表示指定的模板。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="template" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器，并加载指定的组件。</summary>
      <param name="component">正在设计控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>提供机会将行为附加到设计器时执行其他处理。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>委托来处理该组件已更改事件。</summary>
      <param name="sender">发送事件的对象。</param>
      <param name="ce">为事件提供数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>提供执行时更改此设计器的父级的附加处理的机会。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>提供机会模板模式被更改时执行其他处理。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>保存活动的模板编辑框。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>当在派生类中重写，将指定的模板的内容设置为指定的内容。</summary>
      <param name="editingFrame">模板编辑框提供的内容。</param>
      <param name="templateName">模板的名称。</param>
      <param name="templateContent">要为此模板设置的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>更新的设计时 HTML。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedEditableDesignerRegion.#ctor(System.Web.UI.Design.TemplateDefinition)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplatedEditableDesignerRegion" /> 类使用提供的模板定义。</summary>
      <param name="templateDefinition">一个 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 要编辑的模板的实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类，使用提供的设计器、 模板名称、 模板和属性名称。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">对象，该对象包含的模板。</param>
      <param name="templatePropertyName">表示在此模板的属性名称 属性 设计宿主中的列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 是 null,，- 或 -<paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类，使用提供的设计器、 模板名称、 模板、 属性名称，以及是否限制对 Web 服务器控件的模板内容。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">对象，该对象包含的模板。</param>
      <param name="templatePropertyName">表示在此模板的属性名称 属性 设计宿主中的列表。</param>
      <param name="serverControlsOnly">一个布尔值，该值指示是否模板内容应只允许 Web 服务器控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 是 null,，- 或 -<paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类，使用提供的设计器、 模板名称、 模板、 属性名称和 <see cref="T:System.Web.UI.WebControls.Style" /> 对象。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">对象，该对象包含的模板。</param>
      <param name="templatePropertyName">表示在此模板的属性名称 属性 设计宿主中的列表。</param>
      <param name="style">一个 <see cref="T:System.Web.UI.WebControls.Style" /> 要应用到每个模板对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 是 null,，- 或 -<paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类，使用提供的设计器、 模板名称、 模板、 属性名称 <see cref="T:System.Web.UI.WebControls.Style" /> 对象，以及是否将内容限制为 Web 服务器控件。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">对象，该对象包含的模板。</param>
      <param name="templatePropertyName">表示在此模板的属性名称 属性 设计宿主中的列表。</param>
      <param name="style">一个 <see cref="T:System.Web.UI.WebControls.Style" /> 要应用到每个模板对象。</param>
      <param name="serverControlsOnly">一个布尔值，该值指示模板是否应将内容分发到 Web 服务器控件的限制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 是 null,，- 或 -<paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主初始化 <see cref="T:System.Web.UI.Design.TemplateEditingService" /> 类的新实例。</summary>
      <param name="designerHost">用于在设计时访问组件的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实现。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>使用指定的名称和模板为指定的模板化控件设计器创建新的模板编辑框。</summary>
      <param name="designer">将使用模板编辑框的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框上显示的编辑框的名称。 通常，这与用作 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />（创建框架时调用）的菜单文本的 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 相同。</param>
      <param name="templateNames">模板编辑框将包含的模板的名称数组。</param>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>使用指定的名称、模板名称、控件样式和模板样式为指定的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> 对象创建一个新的模板编辑框。</summary>
      <param name="designer">将使用模板编辑框的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框上显示的编辑框的名称。 通常，这与用作 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />（创建框架时调用）的菜单文本的 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 相同。</param>
      <param name="templateNames">模板编辑框将包含的模板的名称数组。</param>
      <param name="controlStyle">编辑框的控件 <see cref="T:System.Web.UI.WebControls.Style" />。</param>
      <param name="templateStyles">表示编辑框的模板样式的 <see cref="T:System.Web.UI.WebControls.Style" /> 类型的数组。</param>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
      <summary>释放由 <see cref="T:System.Web.UI.Design.TemplateEditingService" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Finalize">
      <summary>完成该服务。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>获取父模板的名称。</summary>
      <param name="control">要为其获取父模板名称的 <see cref="T:System.Web.UI.Control" />。</param>
      <returns>父模板的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 类具有指定的谓词的文本和索引。</summary>
      <param name="text">要显示的菜单上的谓词的文本。</param>
      <param name="index">一个可选的整数值，可以由设计器中，通常来指示一组谓词中的谓词的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 类的新实例。</summary>
      <param name="text">要显示的菜单上的谓词的文本。</param>
      <param name="index">一个可选的整数值，可以由设计器中，通常来指示一组谓词中的谓词的索引。</param>
      <param name="designer">
        <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> ，可使用此谓词。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>释放由 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Finalize">
      <summary>尝试在该对象被垃圾回收回收之前释放资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 类，使用提供的名称。</summary>
      <param name="groupName">组的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String,System.Web.UI.WebControls.Style)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 类，使用提供的名称和样式。</summary>
      <param name="groupName">组的名称</param>
      <param name="groupStyle">一个 <see cref="T:System.Web.UI.WebControls.Style" /> 要应用于组中的模板对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.AddTemplateDefinition(System.Web.UI.Design.TemplateDefinition)">
      <summary>添加提供 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 到组。</summary>
      <param name="templateDefinition">
        <see cref="T:System.Web.UI.Design.TemplateDefinition" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Add(System.Web.UI.Design.TemplateGroup)">
      <summary>添加指定 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象传递给集合的末尾。</summary>
      <param name="group">要添加到集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
      <returns>在该索引处 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 添加到集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.AddRange(System.Web.UI.Design.TemplateGroupCollection)">
      <summary>添加在现有的模板组 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象与当前 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象。</summary>
      <param name="groups">一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> ，其中包含要添加到集合的组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groups" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Clear">
      <summary>从集合中移除所有组。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Contains(System.Web.UI.Design.TemplateGroup)">
      <summary>确定指定的组是否包含在集合中。</summary>
      <param name="group">
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 要在集合中定位。</param>
      <returns>true 如果 <paramref name="group" /> 在集合中; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.CopyTo(System.Web.UI.Design.TemplateGroup[],System.Int32)">
      <summary>将组复制到兼容的一维数组，从目标数组的指定索引处开始集合中。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 目标复制组。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。- 或 - <paramref name="index" /> 大于或等于 <paramref name="array" /> 的长度。- 或 - 源中的元素数目 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 大于从的可用空间 <paramref name="index" /> 到末尾 <paramref name="array" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.IndexOf(System.Web.UI.Design.TemplateGroup)">
      <summary>返回指定的索引 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 在集合中的对象。</summary>
      <param name="group">
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 要在集合中定位。</param>
      <returns>第一个匹配项的从零开始索引 <paramref name="group" /> 集中的; 否则为-1，如果 <paramref name="group" /> 不是集合中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Insert(System.Int32,System.Web.UI.Design.TemplateGroup)">
      <summary>将插入 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象插入集合中的指定索引处。</summary>
      <param name="index">要插入集合中的从零开始索引 <paramref name="group" />。</param>
      <param name="group">
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 要插入到集合。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Remove(System.Web.UI.Design.TemplateGroup)">
      <summary>从集合中移除指定的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象。</summary>
      <param name="group">要从该集合中移除的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.RemoveAt(System.Int32)">
      <summary>删除 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 集合中的指定索引处的对象。</summary>
      <param name="index">在集合内从零开始的索引 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 中删除。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">
        <see cref="T:System.Array" /> 目标复制组。<see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 要用来循环访问集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <param name="o">要添加到集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
      <returns>在该索引处 <paramref name="o" /> 添加到集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <param name="o">
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 要在集合中定位。</param>
      <returns>true, 如果 <paramref name="o" /> 在集合中; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <param name="o">
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 要在集合中定位。</param>
      <returns>第一个匹配项的从零开始索引 <paramref name="o" /> 集中的; 否则为-1，如果 <paramref name="o" /> 不是集合中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">要插入集合中的从零开始索引 <paramref name="o" />。</param>
      <param name="o">要插入到集合中的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="o">要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的对象的集合中的从零开始索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateModeChangedEventArgs.#ctor(System.Web.UI.Design.TemplateGroup)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" /> 类，具有指定的模板组。</summary>
      <param name="newTemplateGroup">用于初始化新的模板组 <see cref="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TextControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示关联的控件的标记。</summary>
      <returns>用于在设计时表示控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>数据绑定指定的控件。</summary>
      <param name="designerHost">一个对象，实现 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 所包含控件的文档。</param>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 以进行数据绑定。</param>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.TypeSchema" /> 类使用所提供 <see cref="T:System.Type" /> 对象。</summary>
      <param name="type">一个 <see cref="T:System.Type" /> 描述一个对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.GetViews">
      <summary>获取到数据源视图架构描述符的数组。</summary>
      <returns>实例的数组， <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />, ，或实现类的实例的 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 接口。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>创建用户界面以创建或选择一个 URL。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 其站点是要用于访问设计时服务。</param>
      <param name="owner">
        <see cref="T:System.Windows.Forms.Control" /> 用作选取器窗口的父级。</param>
      <param name="initialUrl">要在选取器窗口中显示的初始 URL。</param>
      <param name="caption">选取器窗口的标题。</param>
      <param name="filter">要使用有选择地筛选显示在选取器窗口中的文件的筛选器字符串。</param>
      <returns>返回从 UI 的 URL。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>创建用于创建或选择一个 URL，使用指定的用户界面 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> 对象。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 其站点是要用于访问设计时服务。</param>
      <param name="owner">
        <see cref="T:System.Windows.Forms.Control" /> 用作选取器窗口的父级。</param>
      <param name="initialUrl">要在选取器窗口中显示的初始 URL。</param>
      <param name="caption">选取器窗口的标题。</param>
      <param name="filter">要使用有选择地筛选显示在选取器窗口中的文件的筛选器字符串。</param>
      <param name="options">一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> ，该值指示 URL 选择的选项。</param>
      <returns>返回从 UI 的 URL。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.IServiceProvider,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>创建用于创建或选择一个 URL，使用指定的用户界面 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> 对象。</summary>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" /> 要用于访问设计时服务。</param>
      <param name="owner">
        <see cref="T:System.Windows.Forms.Control" /> 用作选取器窗口的父级。</param>
      <param name="initialUrl">要在选取器窗口中显示的初始 URL。</param>
      <param name="caption">选取器窗口的标题。</param>
      <param name="filter">要使用有选择地筛选显示在选取器窗口中的文件的筛选器字符串。</param>
      <param name="options">一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> ，该值指示 URL 选择的选项。</param>
      <returns>返回从 UI 的 URL。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UrlEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑值，指定的对象使用所提供的编辑器样式 <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <param name="provider">通过它可能获得编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，此方法应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取的编辑样式 <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <returns>其中一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值指示所提供的编辑样式。 如果不支持的方法，此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UserControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示的用户控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的标记。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.Control.ID" /> 的子控件的属性为空或 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.UserControlFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UserControlFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewEventArgs.#ctor(System.Web.UI.Design.ViewEvent,System.Web.UI.Design.DesignerRegion,System.EventArgs)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.ViewEventArgs" /> 的设计图面上的视图事件的类型的类。</summary>
      <param name="eventType">引发事件; 的操作的类型用于初始化 <see cref="P:System.Web.UI.Design.ViewEventArgs.EventType" />。</param>
      <param name="region">操作适用于; 设计器区域用于初始化 <see cref="P:System.Web.UI.Design.ViewEventArgs.Region" />。</param>
      <param name="eventArgs">与相关的事件参数 <paramref name="eventType" />; 用于初始化 <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.ViewRendering" /> 类通过使用指定的内容和区域。</summary>
      <param name="content">HTML 标记。</param>
      <param name="regions">包含区域的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.ViewRendering" /> 类通过使用指定的内容、 区域和可见性模式。</summary>
      <param name="content">HTML 标记中。</param>
      <param name="regions">区域的集合</param>
      <param name="visible">一个值，该值指示是否呈现控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.GetConnectionString">
      <summary>为与此设计器关联的控件获取在设计时有效的连接字符串。</summary>
      <returns>一个 <see cref="T:System.String" /> ，其中包含关联的设计时连接字符串 <see cref="T:System.Web.UI.WebControls.AccessDataSource" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用于在“属性”网格中添加或移除属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.AdRotatorDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>生成用于呈现设计图面上的控件的标记。</summary>
      <returns>表示在设计图面上的控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ConnectToDataSource">
      <summary>当在派生类中重写，通常与解除挂钩事件从以前的数据源，并随后将新事件附加到新的数据源。</summary>
      <returns>true 如果执行了与新的数据源的连接，通常; false 如果旧的和新数据源相同。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.CreateDataSource">
      <summary>当在派生类中重写，创建新的数据源关联的 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>当在派生类中重写，执行必要的操作以设置派生自的关联控件 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 类。</summary>
      <param name="dataBoundControl">
        <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 与此设计器关联。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>当在派生类中重写时解除挂钩事件从当前的数据源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>释放由非托管的资源 <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> 对象，并可选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml">
      <summary>生成用于在设计时呈现控件的标记。</summary>
      <returns>用于在设计时呈现控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetEmptyDesignTimeHtml">
      <summary>提供用于在设计时呈现控件，控件是否为空或不能检索数据源的标记。</summary>
      <returns>用于在设计时使用空的数据源来呈现该控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供发生错误时用于在设计时呈现控件的标记。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> 时引发。</param>
      <returns>用于发生错误时在设计时呈现控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">派生的控件 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />, ，该类实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>时调用此方法关联的数据源 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象的更改。</summary>
      <param name="forceUpdateView">true 若要强制的设计时标记; 更新否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnSchemaRefreshed">
      <summary>时调用此方法关联的数据源 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 加载新架构的对象。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用要删除或添加其他属性，以显示在 属性 网格或者隐藏关联控件的属性。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含要筛选的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ShowCreateDataSourceDialog(System.Web.UI.Design.ControlDesigner,System.Type,System.Boolean,System.String@)">
      <summary>在设计主机中，如 Visual Studio 2005, ，显示一个对话框，来帮助用户创建的数据源。</summary>
      <param name="controlDesigner">对此设计器的引用。</param>
      <param name="dataSourceType">数据源的类型。</param>
      <param name="configure">true 若要启用的配置中，编辑或 false 禁用配置编辑。</param>
      <param name="dataSourceID">ID <see cref="T:System.Web.UI.DataSourceControl" /> 页上的控件。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.DialogResult" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" /> 类的新实例。</summary>
      <param name="initialPage">页面控件类型，要显示的初始页的数组中的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>通过使用指定的上下文说明符和父窗口中编辑指定的组件。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可用于获取附加上下文信息的对象。</param>
      <param name="obj">
        <see cref="T:System.Object" /> 实现 <see cref="T:System.ComponentModel.IComponent" />, ，它表示要编辑的组件。</param>
      <param name="parent">
        <see cref="T:System.Windows.Forms.IWin32Window" /> 表示父窗口。</param>
      <returns>true 已成功编辑该组件;否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>获取要在组件编辑器中显示的初始页的索引。</summary>
      <returns>数组中的初始页的索引。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>释放设计器使用的非托管的资源，还可以释放托管的资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>生成可以在设计时作为数据源使用的对象。</summary>
      <param name="selectedDataSource">一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 用于作为模板的数据格式。</param>
      <param name="minimumRows">最小的数据源数据应包含的示例数据的行数。</param>
      <param name="dummyDataSource">true 如果返回的数据源包含虚拟数据; false 如果返回的数据源包含实际数据源中的数据。</param>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 用作在设计时使用的数据源的接口。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>生成可以在设计时作为数据源使用的对象。</summary>
      <param name="minimumRows">最小的数据源应包含的示例数据的行数。</param>
      <param name="dummyDataSource">true 如果返回的数据源包含虚拟数据; false 如果返回的数据源包含实际数据源中的数据。</param>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 用作在设计时使用的数据源的接口。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>从关联的控件容器中解析为特定数据成员获取数据源组件。</summary>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 包含设计时的接口 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 关联的控件，解析为 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> 参数; 否则为 null 如果找不到数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>从关联的控件容器中获取的数据源组件。</summary>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 包含设计时的接口 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 关联控件的属性; 否则为 null 如果找不到数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>获取模板的容器的数据源。</summary>
      <param name="templateName">一个 <see cref="T:System.String" /> ，它指定要为其获取数据源的模板的名称。</param>
      <returns>实现的对象 <see cref="T:System.Collections.IEnumerable" /> 包含设计时的接口 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">派生的控件 <see cref="T:System.Web.UI.WebControls.BaseDataList" />, ，该类实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>调用关联的控件的组件编辑器。</summary>
      <param name="initialPage">用来初始化该组件编辑器页的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>处理 AutoFormat 事件。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>自动格式设置方案已应用到关联的控件时调用。</summary>
      <param name="appliedAutoFormat">一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象，用于定义一种样式。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>对关联控件的更改时调用。</summary>
      <param name="sender">
        <see cref="T:System.Object" /> ，它是事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnDataSourceChanged">
      <summary>当关联控件的数据源已更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>表示处理属性生成器事件的方法。</summary>
      <param name="sender">
        <see cref="T:System.Object" /> ，它是事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>可以重写以实现关联控件的样式已更改时应执行的功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>可以重写以实现的设计器的模板编辑谓词已发生了更改时应执行的功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">集合实现 <see cref="T:System.Collections.IDictionary" /> 的添加和隐藏属性的接口。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">true 若要禁用架构后之前, 的数据绑定事件已刷新; false 以启用事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.CreateViewControl">
      <summary>返回要在设计图面上呈现的关联控件的副本。</summary>
      <returns>Web 服务器控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用于删除或添加属性在属性网格中，或者隐藏关联控件的属性。</summary>
      <param name="properties">一个集合，其中实现 <see cref="T:System.Collections.IDictionary" /> 的添加和隐藏属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BulletedListDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器关联的控件将在设计时公开的事件设置筛选器。</summary>
      <param name="events">
        <see cref="T:System.Collections.IDictionary" /> ，其中包含 <see cref="T:System.ComponentModel.EventDescriptor" /> 表示控件的事件的对象。 中的键 <see cref="T:System.Collections.IDictionary" /> 是事件名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ButtonDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.Button" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.#ctor(System.Web.UI.WebControls.Calendar)">
      <summary>创建与相关联的新 AutoFormatPage 实例 <see cref="T:System.Web.UI.WebControls.Calendar" /> 设计器宿主的实例。</summary>
      <param name="calendar">
        <see cref="T:System.Web.UI.WebControls.Calendar" />  AutoFormatePage 显示实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.DoDelayLoadActions">
      <summary>执行任何被延迟到第一个空闲时间的初始化 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>发生时 <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> 被激活。</summary>
      <param name="source">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> ，它提供有关事件的信息。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnOKClicked(System.Object,System.EventArgs)">
      <summary>处理中的预定义的架构选项的更改 </summary>
      <param name="source">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> ，它提供有关事件的信息。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnSelChangedScheme(System.Object,System.EventArgs)">
      <summary>处理中的预定义的架构选项的更改 </summary>
      <param name="source">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> ，它提供有关事件的信息。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.SaveComponent">
      <summary>保存到组件中的任何更改 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CalendarDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的组件的设计器。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 此设计器的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>当对控件应用自动套用格式方案时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> 对象，其中包含事件数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 向已添加关联控件的当前视图的定义。</param>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取关联控件的当前模板的持久化的形式。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> ，不使用此 <see cref="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> 重写。</param>
      <returns>一个 <see cref="T:System.String" /> 包含当前模板关联的持久化的形式 <see cref="T:System.Web.UI.WebControls.ChangePassword" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取指向包含有关在尝试创建或在设计时呈现关联的控件时，出现错误的信息的占位符的呈现的标记。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> ，创建或呈现关联的控件时引发。</param>
      <returns>包含有关指定的异常信息的占位符标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.ChangePassword" />, ，该类实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用要删除或添加其他属性，以显示在 属性 网格或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置的关联的控件模板的值。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 要设置其内容。</param>
      <param name="content">一个 <see cref="T:System.String" /> 包含持久性的控件或模板。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CheckBoxDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <returns>用于在设计时表示控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.CreateChildControls">
      <summary>创建此控件的子 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的设计器 <see cref="T:System.ComponentModel.IComponent" /> 对象。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" />, ，这是与此设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时从指定表示控件的标记 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象。</summary>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 与生成的设计时标记关联 <see cref="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />。</param>
      <returns>用于在设计时表示控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定的内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 从中获取内容。</param>
      <returns>指定的内容的持久性字符串 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetPersistenceContent">
      <summary>获取控件的内部标记。</summary>
      <returns>该控件的内部标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过公开的属性集项 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 表示组件的类的属性的对象。 中的属性字典的键是属性名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器将项添加到它通过公开的事件的一套 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 表示组件的类的事件的对象。 中的事件字典的键是事件名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将指定的内容设置 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 在其中设置内容。</param>
      <param name="content">持久性字符串 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
      <exception cref="T:System.InvalidOperationException">根组件并非 <see cref="T:System.Web.UI.MasterPage" /> 实例。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于表示在设计时使用控件的 HTML <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象。</summary>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象，其中包含要用于生成设计时 HTML 的区域。</param>
      <returns>用于在设计时表示控件的 HTML。</returns>
      <exception cref="T:System.InvalidOperationException">根组件并非 <see cref="T:System.Web.UI.MasterPage" /> 实例。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定的内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 要从中提取内容的对象。</param>
      <returns>指定的内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetPersistenceContent">
      <summary>获取控件的持久内部 HTML。</summary>
      <returns>该控件的持久内部的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将指定的内容设置 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 实例设置。</param>
      <param name="content">新内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>创建 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象为基础的向导控件，与关联的每个步骤，然后将其添加到指定 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象。</summary>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 将在添加与向导控件关联的区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>将转换为自定义导航模板基础的向导控件与关联的子控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取提供指定的异常有关的信息的 HTML。 在设计时遇到错误后，通常会调用此方法。</summary>
      <param name="e">发生的异常。</param>
      <returns>指定的异常的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器，并加载指定的组件。</summary>
      <param name="component">正在设计控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>显示与每个通过属性网格上的设计人员工具的默认步骤相关联的属性。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 这些对象表示的组件的属性基类。 中的属性字典的键是属性名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.#ctor(System.Type)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor" /> 类使用给定 <see cref="T:System.Type" />。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 与集合编辑器关联的集合中的项。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CanRemoveInstance(System.Object)">
      <summary>返回一个值，该值指示是否可以从集合中删除提供的对象。</summary>
      <param name="value">一个 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 对象，以确定是否它可以从集合中移除。</param>
      <returns>true 如果 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 可从集合中移除; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CreateCollectionForm">
      <summary>创建模式对话框中进行编辑的集合的内容 <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> 对象。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource">
      <summary>将事件与上一个数据源断开连接，然后将它们连接到当前的数据源。</summary>
      <returns>true 如果数据绑定控件连接到新的数据源; false 如果数据源没有更改。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.CreateDataSource">
      <summary>调用标准对话框来创建新的数据源控件，并将新数据源控件的 ID 设置为 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 数据绑定控件的属性。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将绑定 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象传递给数据源。</summary>
      <param name="dataBoundControl">
        <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 要绑定到数据源对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DisconnectFromDataSource">
      <summary>断开与数据源事件的数据绑定控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>释放使用的非托管的资源 <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> 对象，并可以选择释放托管的资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>获取从设计时数据源关联 DataSourceDesigner 或 DataSource 属性。</summary>
      <returns>实现的对象 <see cref="T:System.Collections.IEnumerable" /> 引用设计时数据源的接口。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetSampleDataSource">
      <summary>获取要呈现在设计图面上的数据绑定控件，如果不能从创建示例数据的虚拟示例数据 DataSourceDesigner 或 DataSource 属性。</summary>
      <returns>实现的对象 <see cref="T:System.Collections.IEnumerable" /> 包含用来呈现数据绑定控件的设计图面上的虚拟示例数据的接口。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>隐藏运行时的属性数据绑定控件与相应的属性实现的设计器设计器中重写。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 对象，其中包含要筛选的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">指示是否取消刷新架构时引发的任何事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetResolvedSelectedDataSource">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />。</summary>
      <returns>从所选的数据源，如果控件允许用户选择的所选的数据成员 IListSource 对象 (如 <see cref="T:System.Data.DataSet" /> 对象) 的数据源中，并提供了 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 属性来选择特定的列表 (或 <see cref="T:System.Data.DataTable" /> 对象) 的数据源中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetSelectedDataSource">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />。</summary>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 包含设计时的接口 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 关联控件的属性或 null 如果找不到数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField">
      <summary>当在派生类中重写，创建一个空的字段对象。</summary>
      <returns>一个空的字段的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>当在派生类中重写时创建新的字段对象使用指定的数据字段信息。</summary>
      <param name="fieldSchema">包含的数据字段的结构的架构信息。</param>
      <returns>一个新的字段对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>当在派生类中重写创建 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 字段中为指定的数据字段。</summary>
      <param name="dataControlField">数据字段。</param>
      <param name="dataBoundControl">包含的数据字段的数据绑定控件。</param>
      <returns>新的模板字段。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNewDataSourceName(System.Type,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>获取控件时的数据字段转换为所创建的唯一 ID <see cref="T:System.Web.UI.WebControls.TemplateField" />。</summary>
      <param name="controlType">将创建该控件的类型。</param>
      <param name="mode">控制数据输入模式。</param>
      <returns>控件的唯一 ID。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>当在派生类中重写，则字段编辑器中的数据字段获取显示的名称。</summary>
      <param name="dataControlField">数据字段。</param>
      <returns>显示字段编辑器中的数据字段的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <param name="serviceType">要获取的服务对象的类型。</param>
      <returns>指定类型的服务对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplate(System.Web.UI.WebControls.DataBoundControl,System.String)">
      <summary>获取 <see cref="T:System.Web.UI.ITemplate" /> 对象，其中包含指定的数据绑定控件的模板标记。</summary>
      <param name="control">数据绑定控件中。</param>
      <param name="templateContent">模板标记。</param>
      <returns>一个包含指定的数据绑定控件的模板标记的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 指定的数据字段的对象。</summary>
      <param name="dataControlField">数据字段。</param>
      <param name="dataBoundControl">包含的数据字段的数据绑定控件。</param>
      <returns>新的模板字段。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>当在派生类中重写，获取一个值，该值指示是否为字段编辑器中启用数据字段。</summary>
      <param name="parent">包含的数据字段的数据绑定控件。</param>
      <returns>一个值，该值指示是否在字段编辑器中启用数据字段。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的值，使用指定 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 和 <see cref="T:System.IServiceProvider" /> 对象。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  ，该值指示所编辑的对象的上下文。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 包含对关联的设计器的引用。</param>
      <param name="value">要编辑的对象。</param>
      <returns>后已编辑的对象的最终值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器中，使用指定关联的编辑样式 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，该值指示所编辑的对象的上下文。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值表示此编辑器的编辑样式。 默认值为 Modal。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的值使用指定的上下文描述符和服务提供程序。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示所编辑的对象的上下文。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 对象，其中包含对关联的设计器的引用。</param>
      <param name="value">要编辑的对象。</param>
      <returns>后已编辑的对象的最终值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器中，使用指定关联的编辑样式 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示所编辑的对象的上下文。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值表示此编辑器的编辑样式。 默认值为 Modal。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> 类，并将其初始页设置为 0。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> 类并将其初始页设置为指定的索引。</summary>
      <param name="initialPage">初始页的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>获取一个数组 <see cref="T:System.Type" /> 对象可使用此编辑器编辑的页相对应。</summary>
      <returns>一个数组 <see cref="T:System.Type" /> 对象可使用此编辑器编辑的页相对应。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>创建一个模板编辑框架中，使用指定的谓词。</summary>
      <param name="verb">
        <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 要为其创建模板编辑框。</param>
      <returns>模板编辑框。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>释放使用的非托管的资源 <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> 对象，并可以选择释放托管的资源。</summary>
      <param name="disposing">true 若要释放这两个托管和非托管资源; false 仅释放非托管的资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>获取缓存的模板编辑设计器可以使用的谓词。</summary>
      <returns>一个数组 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 包含的缓存的模板编辑可供设计器谓词的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>获取用于表示的 HTML 标记 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件在设计时。</summary>
      <returns>用于表示的 HTML 标记 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于在设计时表示一个空的基于模板的控件的 HTML 标记。</summary>
      <returns>用于在设计时表示一个空的基于模板的控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取在呈现控件时遇到错误后为指定的异常的设计时显示的 HTML 标记。</summary>
      <param name="e">发生的异常。</param>
      <returns>在指定的异常的设计时显示的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>获取模板容器的数据项属性。</summary>
      <param name="templateName">模板的名称。</param>
      <returns>数据项的模板的容器的属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>获取模板的内容。</summary>
      <param name="editingFrame">
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 从中获取内容。</param>
      <param name="templateName">模板的名称。</param>
      <param name="allowEditing">true 如果可以编辑模板的内容; false 如果内容是只读的。</param>
      <returns>模板的内容。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>获取 <see cref="T:System.Type" /> 对应于指定的模板的父对象。</summary>
      <param name="templateName">模板的名称。</param>
      <returns>
        <see cref="T:System.Type" /> 对应于指定模板的父级。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的设计器 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件。</summary>
      <param name="component">正在设计控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>该模板的列更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>在模板编辑谓词更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>设置为指定的模板和框架的内容。</summary>
      <param name="editingFrame">
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 若要设置的内容。</param>
      <param name="templateName">模板的名称。</param>
      <param name="templateContent">模板的新内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> 类，并将其初始页设置为指定的索引。</summary>
      <param name="initialPage">初始页的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>获取一个数组 <see cref="T:System.Type" /> 对象可使用此编辑器编辑的页相对应。</summary>
      <returns>一个数组 <see cref="T:System.Type" /> 对象可使用此编辑器编辑的页相对应。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>创建一个模板编辑框架中，使用指定的谓词。</summary>
      <param name="verb">
        <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 要为其创建模板编辑框。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>释放使用的非托管的资源 <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> 对象，并可以选择释放托管的资源。</summary>
      <param name="disposing">true 若要释放这两个托管和非托管资源; false 仅释放非托管的资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>获取缓存的模板编辑设计器可以使用的谓词。</summary>
      <returns>一个数组 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 包含的缓存的模板编辑可供设计器谓词的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>获取用于表示的 HTML <see cref="T:System.Web.UI.WebControls.DataList" /> 控件在设计时。</summary>
      <returns>用于表示的 HTML <see cref="T:System.Web.UI.WebControls.DataList" /> 控件在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于在设计时表示一个空的基于模板的控件的 HTML。</summary>
      <returns>用于在设计时表示一个空的基于模板的控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取 HTML 时要显示在指定的异常的设计时呈现控件时遇到错误。</summary>
      <param name="e">发生的异常。</param>
      <returns>为指定的异常的设计时显示的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>获取 <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> 模板容器的属性。</summary>
      <param name="templateName">模板的名称。</param>
      <returns>
        <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> 模板的容器的属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>获取模板的内容。</summary>
      <param name="editingFrame">
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 从中获取内容的实例。</param>
      <param name="templateName">模板的名称。</param>
      <param name="allowEditing">true 如果可以编辑模板的内容; false 如果内容是只读的。</param>
      <returns>模板的内容。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的组件的设计器。</summary>
      <param name="component">正在设计控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed">
      <summary>调用到基础控件所绑定的数据源时将加载新架构。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>在模板编辑谓词更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>设置为指定的模板和框架的内容。</summary>
      <param name="editingFrame">
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 为其设置的内容的实例。</param>
      <param name="templateName">模板的名称。</param>
      <param name="templateContent">模板的新内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回列表的可用 ActiveX® 数据对象 (ADO) 的.NET Framework (ADO.NET) 提供程序名称。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 包含可用的 ADO.NET 提供程序的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示是否返回 ActiveX® 数据对象 (ADO) 的.NET Framework (ADO.NET) 提供程序名称是否为可能的值的独占列表。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此对象是否从列表中返回一组标准 ActiveX® 数据对象 (ADO) 可以选取的.NET Framework (ADO.NET) 提供程序名称。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <returns>总是为 true。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示此转换器是否可以为该转换器的本机类型转换指定的源类型的对象。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> 为其请求转换的对象。</param>
      <returns>true 如果 <paramref name="sourceType" /> 是一个字符串; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定的对象转换为该转换器的本机类型。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定的区域性 <paramref name="value" /> 参数。</param>
      <param name="value">要转换的对象。</param>
      <returns>
        <paramref name="value" /> 作为字符串返回参数。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> 一个字符串，不是或 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可用数据源名称的列表。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 包含实现的控件的名称 <see cref="T:System.Web.UI.IDataSource" /> 接口，并可供使用给定的上下文中。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示返回的数据源名称是否为可能的值的独占列表。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此对象是否从列表中返回一组标准的可提取的数据源名称。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，提供有关的上下文的类型转换器的信息，以便类型转换器能够执行转换。</param>
      <returns>总是为 true。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指示指定的组件是否为有效的数据源。</summary>
      <param name="component">一个实现 <see cref="T:System.ComponentModel.IComponent" /> 接口的对象。</param>
      <returns>true 如果 <paramref name="component" /> 是有效的数据源; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DetailsViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，它将向其中添加控件设计时视图的可选择和可单击区域的定义。</param>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <returns>关联控件设计时视图中可编辑区域的内容。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当单击关联控件设计时视图的区域时，会调用它。</summary>
      <param name="e">一个 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />，它定义控件的被单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从 <paramref name="Properties" /> 网格的显示中移除属性或向其添加属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要更新的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">要写入 <paramref name="region" /> 的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" /> 类的新实例。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 的要编辑的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定对象的值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 用于获取附加上下文信息。</param>
      <param name="provider">一个对象，实现 <see cref="T:System.IServiceProvider" /> 通过它可以获得编辑服务。</param>
      <param name="value">要编辑的值的对象。</param>
      <returns>新 <paramref name="value" />; 否则为如果该对象的值未更改， <paramref name="value" /> 相比并无变化。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.FormView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的占位符的标记文本。</summary>
      <returns>一个 <see cref="T:System.String" /> 包含呈现到设计图面上占位符的标记文本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.FormView" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>添加或在设计时，在属性网格设计宿主中移除属性或提供新的设计时属性，它们可能对应于关联控件的属性。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.GridView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，将在其中添加控件设计时视图中定义的可选择和可单击区域。</param>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.GridView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <returns>
        <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.GridView" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当单击关联控件设计时视图的区域时，会调用它。</summary>
      <param name="e">一个 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />，它定义控件的被单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要更新的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">要写入 <paramref name="region" /> 的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.HiddenField" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.HiddenField" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ConnectToDataSource">
      <summary>执行所需连接到当前的数据源的操作。</summary>
      <returns>true 如果已执行到新的数据源的连接; false 如果旧的和新数据源相同。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.CreateDataSource">
      <summary>创建新的数据源关联的控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>执行所需断开与当前的数据源的连接的操作。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>获取可在关联控件设计时使用的数据源。</summary>
      <returns>一个对象，实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 接口可用作控件的数据源派生自 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetSampleDataSource">
      <summary>构造可在设计时用于关联控件的示例数据源。</summary>
      <returns>一个对象，实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 接口可用作控件的数据源派生自 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指定的组件是否有效的数据源。</summary>
      <param name="component">实现的对象 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>true 如果 <paramref name="component" /> 是有效的数据源; 否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> 类的新实例。</summary>
      <param name="type">若要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否多个 <see cref="T:System.Web.UI.WebControls.HotSpot" /> 可以一次选择集合元素。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CreateNewItemTypes">
      <summary>获取集合编辑器可以创建多个数据类型。</summary>
      <returns>数据类型的类型数组 <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> 可以创建。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HyperLinkDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>包含用于在设计时呈现关联的超链接控件的标记的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>对关联控件的更改时调用。</summary>
      <param name="sender">事件源对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LabelDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>对关联控件的更改时调用。</summary>
      <param name="sender">事件源对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinkButtonDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LinkButtonDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>指定控件上执行数据绑定。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 所包含控件的文档。</param>
      <param name="control">要绑定的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将指定的控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">关联的控件派生自 <see cref="T:System.Web.UI.WebControls.ListControl" />, ，或该控件的一个副本。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML。</summary>
      <returns>一个 <see cref="T:System.String" /> 包含用于呈现控件的标记派生自 <see cref="T:System.Web.UI.WebControls.ListControl" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>从关联的控件容器中解析为特定数据成员获取数据源组件。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 包含设计时 <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />, 、 解析为 <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" /> 关联控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>从关联的控件容器中获取的数据源组件。</summary>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含设计时 <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> 关联控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">派生的控件 <see cref="T:System.Web.UI.WebControls.ListControl" /> 实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>当关联控件的数据源已更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>当关联控件的数据源已更改时调用。</summary>
      <param name="forceUpdateView">一个 <see cref="T:System.Boolean" /> ，该值指示是否要无条件地更新的设计时标记。 忽略此参数。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器中用于删除从其他属性或将属性添加到中的显示 属性 网格或者隐藏关联控件的属性。</summary>
      <param name="properties">集合实现 <see cref="T:System.Collections.IDictionary" /> 要在设计时公开的关联控件的添加或隐藏属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> 类的新实例。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 的要编辑的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否多个 <see cref="T:System.Web.UI.WebControls.ListItem" /> 可以一次选择元素。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>对关联控件的更改时调用。</summary>
      <param name="sender">事件源对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，将在其中添加控件设计时视图中定义的可选择和可单击区域。</param>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.Login" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回用于在设计时呈现关联的控件的模板的序列化的副本。</summary>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <returns>一个包含用来呈现关联的模板的序列化的副本字符串 <see cref="T:System.Web.UI.WebControls.Login" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供用于在发生错误时的设计时呈现关联的控件的标记。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> 时引发。</param>
      <returns>一个字符串，包含用于呈现关联的标记 <see cref="T:System.Web.UI.WebControls.Login" /> 在设计时后出现错误。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.Login" />, ，实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将关联控件的区域设置从一个控件模板的序列化副本。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> ，它提供要更新的区域的名称。</param>
      <param name="content">一个字符串，包含关联控件的序列化的模板。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginNameDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供用于在发生错误时的设计时呈现关联的控件的标记。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> 时引发。</param>
      <returns>一个字符串，包含用于呈现关联的标记 <see cref="T:System.Web.UI.WebControls.LoginName" /> 在设计时后出现错误。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginStatusDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.LoginStatus" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.LoginView" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 到可选择和可单击区域的设计时视图中的哪些定义 <see cref="T:System.Web.UI.WebControls.LoginView" /> 添加。</param>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.LoginView" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回用于在设计时呈现关联的控件的当前模板的序列化的副本。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 从中获取内容。</param>
      <returns>一个包含用来呈现关联的模板的序列化的副本字符串 <see cref="T:System.Web.UI.WebControls.LoginView" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml">
      <summary>获取在当前模板未定义的设计时呈现关联控件的占位符的标记。</summary>
      <returns>一个包含呈现到设计图面上占位符的标记文本字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供在发生错误时的设计时呈现关联的控件的标记。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> 时引发。</param>
      <returns>一个字符串，包含用于呈现关联的标记 <see cref="T:System.Web.UI.WebControls.LoginView" /> 在设计时后出现错误。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.LoginView" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> 不是 <see cref="T:System.Web.UI.WebControls.LoginView" /> 或派生自的类 <see cref="T:System.Web.UI.WebControls.LoginView" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>对与此设计器关联的控件进行更改时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用于移除属性或将属性添加到中的显示 属性 网格或者隐藏关联控件的属性。</summary>
      <param name="properties">集合实现 <see cref="T:System.Collections.IDictionary" /> 的添加或隐藏属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将关联控件的区域设置从一个控件模板的序列化副本。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> ，它提供要更新的区域的名称。</param>
      <param name="content">一个字符串，包含关联控件的序列化的模板。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuBindingsEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑数据绑定集合中的关联值 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 接口，用于获取上下文信息。</param>
      <param name="provider">一个对象，实现 <see cref="T:System.IServiceProvider" /> 接口，通过它可以获得编辑服务。</param>
      <param name="value">要编辑的值的对象。</param>
      <returns>新 <paramref name="value" />; 否则为如果该对象的值未更改， <paramref name="value" /> 相比并无变化。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器关联的编辑样式。</summary>
      <param name="context">一个对象，实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 指示所编辑的对象的上下文的接口。</param>
      <returns>程序与此编辑器编辑样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个包含用于呈现的标记字符串 <see cref="T:System.Web.UI.WebControls.Menu" /> 在设计时。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetEmptyDesignTimeHtml">
      <summary>获取在没有标记是为可用的设计时呈现关联控件的占位符的标记。</summary>
      <returns>一个包含呈现到设计图面上占位符的标记文本字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供在发生错误时的设计时呈现关联的控件的标记。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> 引发的对象。</param>
      <returns>一个字符串，包含用于呈现关联的标记 <see cref="T:System.Web.UI.WebControls.Menu" /> 在设计时后出现错误。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetSampleDataSource">
      <summary>构造用于关联控件设计时的示例数据源。</summary>
      <returns>一个对象，实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 要用作数据源关联 <see cref="T:System.Web.UI.WebControls.Menu" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.Menu" />, ，该类实现 <see cref="T:System.ComponentModel.IComponent" /> 接口。</param>
      <exception cref="T:System.ArgumentException">组件 不是 <see cref="T:System.Web.UI.WebControls.Menu" /> 或派生自的类 <see cref="T:System.Web.UI.WebControls.Menu" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新数据源视图关联的架构 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
      <param name="preferSilent">如果 true, ，在处理期间发生异常时，不会不显示错误消息; 否则，将显示异常消息。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <param name="preferSilent">true 若要指示在处理; 期间发生异常时不显示错误消息否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑菜单项集合关联控件的值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 用于获取上下文信息。</param>
      <param name="provider">一个对象，实现 <see cref="T:System.IServiceProvider" /> 通过它可以获得编辑服务。</param>
      <param name="value">要编辑的值的对象。</param>
      <returns>新 <paramref name="value" />; 否则为如果该对象的值未更改， <paramref name="value" /> 相比并无变化。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器关联的编辑样式。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，该值指示所编辑的对象的上下文。</param>
      <returns>始终返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 的要编辑的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否多个 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 在编辑器中可以一次选择元素。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体来显示和编辑当前 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 对象。</summary>
      <returns>一个实例 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 要用作 <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">
        <see cref="T:System.Type" /> 要创建的项。</param>
      <returns>指定类型的新实例 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器可以创建的数据类型。</summary>
      <returns>数据类型的类型数组 <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> 可以创建。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MultiViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MultiViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure">
      <summary>在可视化设计器图面上显示配置数据源向导。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetView(System.String)">
      <summary>返回具有指定名称的数据源视图。</summary>
      <param name="viewName">一个包含名称的字符串 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 由指定的名称与 <paramref name="viewName" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetViewNames">
      <summary>返回关联控件的数据源视图名称的列表。</summary>
      <returns>包含名称的字符串数组 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 对象关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>从指定关联控件的业务对象中提取 Select 方法的元数据。</summary>
      <param name="preferSilent">如果 true, ，在处理期间发生异常时，不会不显示错误消息; 否则，将显示异常消息。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.ObjectDataSourceDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> 拥有这 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 对象。</param>
      <param name="viewName">包含此名称的字符串 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>生成的架构匹配的关联的数据源控件的设计时数据。</summary>
      <param name="minimumRows">一个包含整数的最小行数来检索。</param>
      <param name="isSampleData">一个值，该值指示是否返回的数据是示例数据还是真实数据。</param>
      <returns>表示由关联的数据的示例 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 或 null 如果设计器无法生成的任何示例数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>添加到集合，以便在设计时呈现控件中使用的样式属性的字符串表示形式。</summary>
      <param name="styleAttributes">样式的集合属性实现 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.Panel" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> 不是 <see cref="T:System.Web.UI.WebControls.Panel" /> 或派生自的类 <see cref="T:System.Web.UI.WebControls.Panel" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.PanelDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>将指定的属性和值映射到指定的标记样式。</summary>
      <param name="propName">一个包含属性名称的字符串。</param>
      <param name="varPropValue">一个对象，它的属性值。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>在将行为附加到设计器时，请提供通知。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑的元素 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象相关联的数据源控件。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 使用它来获取上下文信息的对象。</param>
      <param name="provider">一个对象，实现 <see cref="T:System.IServiceProvider" /> 通过它可以获得编辑服务。</param>
      <param name="value">要编辑的值的对象。</param>
      <returns>新 <paramref name="value" />; 否则为如果该对象的值未更改， <paramref name="value" /> 相比并无变化。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器关联的编辑样式。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示所编辑的对象的上下文。</param>
      <returns>程序与此编辑器编辑样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.#ctor(System.IServiceProvider)">
      <summary>使用指定的 <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> 初始化 <see cref="T:System.IServiceProvider" /> 类的新实例。</summary>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" /> 接口对当前的设计宿主中，如 Visual Studio 2005。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.AddParameters(System.Web.UI.WebControls.Parameter[])">
      <summary>将现有参数的数组添加到编辑器。</summary>
      <param name="parameters">一个 <see cref="T:System.Web.UI.WebControls.Parameter" /> 将添加到编辑器中的现有参数的数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ClearParameters">
      <summary>从编辑器中删除所有参数。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.GetParameters">
      <summary>获取编辑器中的所有参数。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Parameter" /> 编辑器中的所有参数的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.OnParametersChanged(System.Object,System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged" /> 时在编辑器中的参数的状态更改事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.SetAllowCollectionChanges(System.Boolean)">
      <summary>控制是否可以对在编辑器中的值进行添加和删除操作。</summary>
      <param name="allowChanges">一个 <see cref="T:System.Boolean" /> ，该值指示是否可以对进行添加和删除操作 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 正在编辑。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时显示关联控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索 HTML 标记以在设计时显示所有区域。</summary>
      <param name="regions">关联控件的控件设计器区域的集合。</param>
      <returns>关联控件的设计时 HTML 标记，包括所有控件设计器区域。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要获取其内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</param>
      <returns>如果控件设计器支持可编辑区域，则为区域的保持内容；否则为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>检索 HTML 标记，该标记提供有关指定异常的信息。</summary>
      <param name="e">发生的异常。</param>
      <returns>指定的异常的设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器，并加载指定的组件。</summary>
      <param name="component">正在设计的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器类用来添加属性，或移除属性， 属性 网格在设计时或者隐藏关联控件的属性。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>在设计时建立该控件可编辑区域的内容。</summary>
      <param name="region">控件内包含可编辑的设计区域。</param>
      <param name="content">要为可编辑的设计区域分配的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PreviewControlDesigner.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.#ctor(System.ComponentModel.ISite)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> 类的新实例。</summary>
      <param name="site">此对话框中的站点。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>表示将处理对话框中的帮助事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdOK_Click(System.Object,System.EventArgs)">
      <summary>表示将处理对话框中的确定事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdTestValidate_Click(System.Object,System.EventArgs)">
      <summary>表示将处理的方法 TestValidate 对话框中的事件。</summary>
      <param name="sender">事件源。</param>
      <param name="args">
        <see cref="T:System.EventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">一个值，该值对所有资源持有的任何托管对象这 <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> 引用。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.lstStandardExpressions_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>表示将处理对话框中的 SelectedIndexChanged 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.RegexTypeEditor_Activated(System.Object,System.EventArgs)">
      <summary>表示将处理对话框中的已激活事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.txtExpression_TextChanged(System.Object,System.EventArgs)">
      <summary>表示将处理的方法 TextChanged 对话框中的事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.RegexTypeEditor" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用给定的服务提供程序和上下文的给定正则表达式对象的值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 可以提供其他上下文信息。</param>
      <param name="provider">服务提供程序。</param>
      <param name="value">正则表达式对象，其值是以进行编辑。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，此方法将返回它接收到的同一个对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑器样式 <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值指示该方法使用的编辑器样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>释放使用的非托管的资源 <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> 对象，并可以选择释放托管的资源。</summary>
      <param name="disposing">true 若要释放这两个托管和非托管资源; false 仅释放非托管的资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.ExecuteChooseDataSourcePostSteps">
      <summary>由设计宿主调用，如 Visual Studio 2005 在用户在设计时选择数据源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>返回基于提供的数据并使用指定的行数的设计时样本数据。</summary>
      <param name="selectedDataSource">
        <see cref="T:System.Collections.IEnumerable" /> 对象，其中包含用于在设计时创建类似的示例数据的数据。</param>
      <param name="minimumRows">最小的数据源应包含的示例数据的行数。</param>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 对象，它包含在设计时使用的示例数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>返回基于设计时样本数据 <see cref="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource" /> 方法，并使用指定的行数。</summary>
      <param name="minimumRows">最小的数据源应包含的示例数据的行数。</param>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> 对象，它包含在设计时使用的示例数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>检索要用于该控件的设计时表示的 HTML 标记。</summary>
      <returns>设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>检索表示在设计时将不具有可视表示形式的运行时 Web 服务器控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记，若无该标记，则控件将没有可视表示形式。 默认值为包含组件类型和 ID 的矩形。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>检索 HTML 标记，该标记提供有关指定异常的信息。</summary>
      <param name="e">发生的异常。</param>
      <returns>指定的异常的设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>从所选的数据源获取选定的数据成员。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerable" /> ，其中包含用于提供设计时数据的值的集合。 默认值为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>从关联的容器中检索所选的数据源组件 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件。</summary>
      <returns>所选的数据源; null 找不到数据源是否具有所选名称的数据源不存在。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有所提供的设计器 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件。</summary>
      <param name="component">关联 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>关联的控件更改时调用。</summary>
      <param name="source">事件源。</param>
      <param name="ce">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>处理与数据源所做的更改 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>筛选要替换设计器的属性描述符的运行时数据源属性描述符的属性。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.#ctor(System.Type)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" /> 类的新实例。</summary>
      <param name="type">集合中对象的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.CanSelectMultipleInstances">
      <summary>提供一个值，该值指示编辑器是否允许在集合中选择多个项。</summary>
      <returns>false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetView(System.String)">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 指定视图。</summary>
      <param name="viewPath">要检索的数据源的一部分 XPath 查询。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetViewNames">
      <summary>获取一个名为数据源中的视图的数组，这些名称表示。</summary>
      <returns>此实现始终返回一个空字符串数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器，并加载指定的组件。</summary>
      <param name="component">该组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>关联的组件发生更改时调用。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">一个包含事件有关信息的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>调用由设计器宿主以刷新基础数据源的架构。</summary>
      <param name="preferSilent">true 若要取消数据源事件，直到刷新操作已完成;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />。</summary>
      <param name="viewName">要获取的视图的名称。</param>
      <returns>设计器的数据源视图，其中包含有关标识的视图的信息或 null 如果找不到具有指定名称的视图。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />。</summary>
      <returns>在基础数据源视图的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">true 取消数据源事件，直到刷新完成。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /></summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> 类使用所提供 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 对象和视图名称。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />。</param>
      <param name="viewName">数据源为其提供数据视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>生成设计时数据，与使用提供的行数的相关联的数据源控件的架构匹配，并返回一个布尔值，该值指示数据示例数据还是真实的数据。</summary>
      <param name="minimumRows">最小要检索或创建的行数。</param>
      <param name="isSampleData">true 若要指示示例数据; false 以指示实际数据。</param>
      <returns>与相关联的数据的架构匹配的设计时数据源控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> ，它是设计器关联的 <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" />。</param>
      <param name="viewPath">XPath 查询，用于定义要用于视图的数据块。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>生成设计时数据，与关联的数据源控件的架构匹配，并返回一个值，指示数据是否实际数据或示例数据。</summary>
      <param name="isSampleData">true 若要指示返回的数据是示例数据; false 以指示返回的数据是真实的数据。</param>
      <returns>与相关联的数据的架构匹配的设计时数据源控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML 标记。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取提供指定的异常有关的信息的 HTML 标记。</summary>
      <param name="e"> 发生的异常。</param>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器来查看、 编辑和设计关联 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 可强制转换为 <see cref="T:System.Web.UI.WebControls.SiteMapPath" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.GetProviderName(System.Object)">
      <summary>返回 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 属性 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 对象。</summary>
      <param name="instance">
        <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 适用于连接字符串。</param>
      <returns>
        <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 属性 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, ，如果 <paramref name="instance" /> 不是 null; 否则为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>集 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 属性 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 对象。</summary>
      <param name="instance">
        <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 适用于连接字符串。</param>
      <param name="connection">与 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure">
      <summary>启动设计宿主中的数据源配置实用工具。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CreateView(System.String)">
      <summary>使用指定名称创建一个新的 <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> 实例。</summary>
      <param name="viewName">要创建的视图的名称。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeriveParameters(System.String,System.Data.Common.DbCommand)">
      <summary>从指定的 SQL 命令派生参数并向该命令的参数集合中添加相应的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象。</summary>
      <param name="providerName">数据提供程序的名称。</param>
      <param name="command">一个 <see cref="T:System.Data.Common.DbCommand" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetConnectionString">
      <summary>为与此设计器关联的控件获取在设计时有效的连接字符串。</summary>
      <returns>连接字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetView(System.String)">
      <summary>检索由视图名称标识的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</summary>
      <param name="viewName">要获取的视图的名称。</param>
      <returns>如果能在数据源中找到，则为 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象；否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetViewNames">
      <summary>获取可用视图的列表。</summary>
      <returns>包含可用视图的名称的字符串数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InferParameterNames(System.ComponentModel.Design.Data.DesignerDataConnection,System.String,System.Web.UI.WebControls.SqlDataSourceCommandType)">
      <summary>使用指定的连接、命令文本和命令类型返回参数数组。</summary>
      <param name="connection">一个 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象。</param>
      <param name="commandText">命令的文本。</param>
      <param name="commandType">指示命令类型的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />。</param>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用于在“属性”网格中添加或移除属性或者隐藏关联控件的属性。</summary>
      <param name="properties">要筛选的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>从基础数据源刷新架构。</summary>
      <param name="preferSilent">true 表示取消所有数据源事件，直到刷新架构为止；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SqlDataSourceDesigner,System.String)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> 类使用提供的数据源设计器和视图的名称。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />。</param>
      <param name="viewName">在数据源视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>使用提供的行数生成与关联数据源控件的架构匹配的设计时数据，并返回一个值，该值指示数据是示例数据还是真实数据。</summary>
      <param name="minimumRows">要返回的最小行数。</param>
      <param name="isSampleData">若要指示返回的数据是示例数据，则为 true；若要指示返回的数据是实时数据，则为 false。</param>
      <returns>一个 <see cref="T:System.Web.UI.DataSourceView" /> 对象，它包含要在设计时显示的数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.#ctor(System.Type)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要创建的实例的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">要创建的实例的类型。</param>
      <returns>指定类型的集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 的要编辑的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否多个 <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> 在编辑器中可以一次选择元素。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体来显示和编辑当前 <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> 集合。</summary>
      <returns>一个实例 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 要用作 <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <param name="itemType">
        <see cref="T:System.Type" /> 要创建的项。</param>
      <returns>指定的类型应为的新实例 <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器可以创建的数据类型。</summary>
      <returns>数据类型的类型数组 <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> 可以创建。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SubstitutionDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" /> 类的新实例。</summary>
      <param name="type">若要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以同时选择多个表格单元格。</summary>
      <returns>true 如果多个单元格可选择在同一时间;，否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>创建具有指定类型的编辑器使用的实例。</summary>
      <param name="itemType">
        <see cref="T:System.Type" /> 要创建的项。</param>
      <returns>指定类型的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" /> 类的新实例。</summary>
      <param name="type">若要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以选择多个实例。</summary>
      <returns>true 如果上一次; 选择多项，否则为 false。 此实现始终返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定类型的实例。</summary>
      <param name="itemType">
        <see cref="T:System.Type" /> 要创建的项。</param>
      <returns>指定类型的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将给定的值转换为使用所提供的上下文和区域性信息此转换器的类型。</summary>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的对象。</param>
      <returns>一个对象，表示转换后的值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将对象转换为指定的类型使用提供的上下文和区域性信息。</summary>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 要用作当前区域性。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> 要转换为的 <paramref name="value" />。</param>
      <returns>一个对象，表示转换后的值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 方法所指示的编辑器样式来编辑指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />，此编辑器可用它来获取服务。</param>
      <param name="value">要编辑的对象。</param>
      <returns>对象的新值。 如果尚未更改对象的值，则它返回的对象应与传递给它的对象相同。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> 方法所使用的编辑样式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，表示 <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> 方法使用的编辑器样式。 如果 <see cref="T:System.Drawing.Design.UITypeEditor" /> 不支持此方法，则 <see cref="Overload:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.#ctor(System.Type)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.CreateCollectionItemType">
      <summary>获取此集合编辑的数据类型。</summary>
      <returns>此集合编辑数据类型。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定对象的值。</summary>
      <param name="context">类型描述符上下文。</param>
      <param name="provider">服务提供程序。</param>
      <param name="value">要编辑的值。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索由的编辑样式 <see cref="Overload:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue" /> 方法。</summary>
      <param name="context">类型描述符上下文。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.CreateLineImages">
      <summary>显示一个对话框，若要编辑的连线图像 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">数据绑定控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditBindings">
      <summary>显示一个对话框，编辑数据绑定。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditNodes">
      <summary>显示对话框以编辑 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时呈现控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetEmptyDesignTimeHtml">
      <summary>检索 HTML 标记文本，该文本用于在设计时呈现关联控件的占位符。</summary>
      <returns>用于在设计时使用空的数据源来呈现该控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供发生错误时用于在设计时呈现控件的标记。</summary>
      <param name="e">所引发的 <see cref="T:System.Exception" />。</param>
      <returns>用于发生错误时在设计时呈现控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetSampleDataSource">
      <summary>构造可在设计时用于关联控件的示例数据源。</summary>
      <returns>一个实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 接口的对象，该接口可用作派生自 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 的控件的数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>当在派生类中重写时提供的自定义初始化给定 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 可强制转换为 <see cref="T:System.Web.UI.WebControls.TreeView" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.CreateViewControl">
      <summary>返回用于查看或设计图面上呈现关联控件的副本。</summary>
      <returns>Web 服务器控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用于移除属性或将属性添加到在属性网格中显示或隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏属性字典的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索用当前控件设计器区域显示控件并填充集合的 HTML 标记。</summary>
      <param name="regions">设计器区域集合。</param>
      <returns>表示控件的 HTML 标记字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.ComponentModel.IComponent" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.CreateViewControl">
      <summary>会创建一份关联 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 要在设计时呈现控件。</summary>
      <returns>一份关联 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.GetDesignTimeHtml">
      <summary>验证控件驻留在类型的区域中 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />, ，然后获取用于在设计时表示控件的标记。</summary>
      <returns>用于在设计时，表示控件的标记或错误标记如果控件不驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-派生的控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-派生的控件的设计器关联。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时通过调用表示控件的标记 <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 使用空参数的方法。</summary>
      <returns>对的方法调用 <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 使用空参数作为参数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>创建 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 之前生成该控件的设计时 HTML 设计器中。</summary>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, ，如果有的话与控件关联。</param>
      <returns>一个 <see cref="T:System.String" /> 表示控件的设计时 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <returns>一个 <see cref="T:System.String" /> 表示设计器区域的内容的持久的形式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于表示空控件的标记。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 控件。</summary>
      <param name="component">关联 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将指定的内容设置 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">一个 <see cref="T:System.String" /> ，它表示要放入指定的区域的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" /> ，它是用于在设计时表示控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到指定 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>在设计时将隐藏一组预设置的属性。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 组与控件关联的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetDesignTimeHtml">
      <summary>重写父方法，以防止呈现控件。</summary>
      <returns>空字符串 ("") 或值的 <see cref="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于表示在设计图面上的空控件的标记。</summary>
      <returns>一个空标记字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件并设置 <see cref="F:System.Web.UI.Design.ViewFlags.TemplateEditing" /> 查看标志 true。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.CreateViewControl">
      <summary>会创建一份关联 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 要在设计时呈现控件。</summary>
      <returns>一份关联 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.GetDesignTimeHtml">
      <summary>验证控件驻留在类型的区域中 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />, ，然后获取用于在设计时表示控件的标记。</summary>
      <returns>用于在设计时，表示控件的标记或错误标记如果控件不驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml">
      <summary>调用 <see cref="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 使用 null 参数。</summary>
      <returns>一个 <see cref="T:System.String" /> ，在设计时表示该控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, ，如果有的话与控件关联。</param>
      <returns>一个 <see cref="T:System.String" /> ，在设计时表示该控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <returns>一个 <see cref="T:System.String" /> 表示设计器区域的内容的持久的形式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于表示空控件的标记。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将指定的内容设置 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">一个 <see cref="T:System.String" /> ，它表示要放入指定的区域的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、 编辑和设计 <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> 控件。</summary>
      <param name="component">要初始化的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>创建绑定到关联的设计器的一个实例 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 与此设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.GetDesignTimeHtml">
      <summary>获取一个空字符串 ("")，它指示可视化设计环境应恢复为默认控件呈现。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、 编辑和设计 Web 部件区域。</summary>
      <param name="component">要初始化的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到控件并验证该控件是 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 与此设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.GetDesignTimeHtml">
      <summary>返回一个空字符串 ("")，它指示可视化设计环境应恢复为默认控件呈现。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器绑定到关联的实例 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 与此设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>隐藏 <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" /> 在设计时属性。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 组与控件关联的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时通过调用表示控件的标记 <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 使用空参数的方法。</summary>
      <returns>对的方法调用 <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 使用空参数作为参数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>创建 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 之前生成该控件的设计时 HTML 设计器中。</summary>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, ，如果有的话与控件关联。</param>
      <returns>一个 <see cref="T:System.String" /> 表示控件的设计时 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定内容 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <returns>一个 <see cref="T:System.String" /> 表示设计器区域内容的持久的形式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>提供一个空字符串 ("") 是否存在关联的控件没有设计时 HTML。</summary>
      <returns>空字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器附加到关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 控件。</summary>
      <param name="component">关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将指定的内容设置 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">一个 <see cref="T:System.String" /> 表示的指定区域的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>创建绑定到关联的设计器的一个实例 <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> 控件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> 的设计器关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>将提供的设计器区域集合添加到当前设计器区域。</summary>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象，其中包含要添加的区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>从活动的步骤中创建导航模板，并将其保存在 <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> 活动步骤的属性。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToTemplate(System.String,System.ComponentModel.IComponent,System.String,System.String[])">
      <summary>将选择的控件转换为关联的控件中的模板。</summary>
      <param name="description">设计宿主用来为用户提供取消操作的机会，即允许的事务完成，效果的说明。</param>
      <param name="component">与此设计器关联的向导控件。</param>
      <param name="templateName">若要将转换为模板的名称。</param>
      <param name="keys">在模板中包括的控件的 Id 数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.CreateChildControls">
      <summary>创建子关联控件的控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索用当前控件设计器区域显示控件并填充集合的 HTML 标记。</summary>
      <param name="regions">关联控件的控件设计器区域的集合。</param>
      <returns>关联控件的设计时 HTML 标记，包括所有控件设计器区域。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取在设计时控件的可编辑区域的内容。</summary>
      <param name="region">一个 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</param>
      <returns>如果控件设计器支持可编辑区域，则为区域的保持内容；否则为空字符串 ("")。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> 不是类型的对象 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的设计器 <see cref="T:System.ComponentModel.IComponent" /> 对象。</summary>
      <param name="component">使用基</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当用户单击关联的控件设计时，由设计宿主调用。</summary>
      <param name="e">使用基</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>关联的控件更改时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="ce">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>添加属性或从在设计主机中，属性网格中删除属性或提供新的设计时设置或对应于关联控件属性的属性。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 对象，其中包含组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ResetTemplate(System.String,System.ComponentModel.IComponent,System.String)">
      <summary>将指定的模板重置为其默认值。</summary>
      <param name="description">设计宿主用来为用户提供取消操作的机会，即允许的事务完成，效果的说明。</param>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.Wizard" /> 与此设计器关联的控件。</param>
      <param name="templateName">要重置的模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>在设计时指定该控件的可编辑区域的内容。</summary>
      <param name="region">在控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑的设计区域分配的内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> 不是类型的对象 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.#ctor(System.Type)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" /> 类使用给定 <see cref="T:System.Type" />。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 集合中的项数。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以选择多个实例。</summary>
      <returns>true 如果上一次; 选择多项，否则为 false。 此实现始终返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateCollectionForm">
      <summary>创建一个新的窗体来显示和编辑当前集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 作为用户界面提供用于编辑集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合的实例 <see cref="T:System.Type" />。</summary>
      <param name="itemType">
        <see cref="T:System.Type" /> 要创建的集合。</param>
      <returns>指定的集合 <paramref name="itemType" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateNewItemTypes">
      <summary>检索此集合可以包含的数据类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepEditableRegion.#ctor(System.Web.UI.Design.WebControls.WizardDesigner,System.Web.UI.WebControls.WizardStepBase)">
      <summary>新实例初始化 <see cref="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion" /> 类使用给定的设计器和步骤。</summary>
      <param name="designer">一个 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> ，它是父设计器向导。</param>
      <param name="wizardStep">一个 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 定义步骤。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.#ctor(System.Web.UI.Design.TemplateDefinition,System.Web.UI.WebControls.WizardStepBase)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion" /> 类的新实例。</summary>
      <param name="templateDefinition">一个 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象，用于在设计时在向导的步骤中定义的模板元素。</param>
      <param name="wizardStep">一个 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象，表示显示在一个步骤 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.GetView(System.String)">
      <summary>检索关联的设计时数据源视图对象 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 控件。</summary>
      <param name="viewPath">指向要检索的视图的路径。</param>
      <returns>设计时数据源视图对象的关联 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器，并加载指定的组件。</summary>
      <param name="component">该组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>若要为其添加属性或在设计时设计宿主中的属性网格中移除属性或提供新的设计时属性，它们可能对应于关联控件的属性使用设计器组件。</summary>
      <param name="properties">IDictionary 的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>可以选择取消事件时刷新数据源的架构。</summary>
      <param name="preferSilent">true 若要禁止显示模式 UI 事件;否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />。</summary>
      <param name="viewName">在基础数据源视图的名称。</param>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象，其中包含有关标识视图的信息或 null 如果找不到具有指定名称的视图。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />。</summary>
      <returns>数据源中的视图的名称的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">指定是否禁止刷新架构时引发的所有事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>释放由非托管的资源 <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> 控制，还可以释放托管的资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于填充的空控件的 HTML。</summary>
      <returns>用于填充空的控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器与设计器的此实例关联的控件。</summary>
      <param name="component">关联的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />。</param>
      <param name="viewName">在数据源视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>生成与相关数据源控件的架构匹配的设计时数据，并返回一个值，该值指示数据是示例数据还是真实数据。</summary>
      <param name="minimumRows"> 要返回的最小行数。</param>
      <param name="isSampleData">若要指示返回的数据是示例数据，则为 true；若要指示返回的数据是实时数据，则为 false。</param>
      <returns>一个 <see cref="T:System.Web.UI.DataSourceView" /> 对象，它包含要在设计时显示的数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView" /> 类使用提供的设计器和 XPath。</summary>
      <param name="owner">一个 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />。</param>
      <param name="viewPath">XPath 字符串，标识视图的数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>生成与关联的数据源控件的架构匹配的设计时数据，并返回一个布尔值，该值指示数据是示例数据还是实际数据。</summary>
      <param name="isSampleData">若要指示返回的数据是示例数据，则为 true；若要指示返回的数据是实时数据，则为 false。</param>
      <returns>此实现始终返回 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 类使用所提供 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象和 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</summary>
      <param name="info">一个包含实例化 Web 控件通过反序列化所需的信息的 SerializationInfo 对象。</param>
      <param name="context">一个 StreamingContext 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 类使用提供的类型。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 此工具箱项的工具。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>可从包含在此每种类型创建对象 <see cref="T:System.Drawing.Design.ToolboxItem" />, ，并将它们添加到指定的设计器。</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 为当前的设计文档。</param>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
      <exception cref="T:System.Exception">
        <see cref="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" /> 方法仅可在 Windows 窗体。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从指定的序列化信息对象中加载工具箱项的状态。</summary>
      <param name="info">描述 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 的 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ，该值指示序列化流特征。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>获取指定类型的工具箱项的属性的值。</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 为当前的设计文档。</param>
      <param name="attributeType">要检索的值的属性类型。</param>
      <returns>指定类型属性的值。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> 参数不是 <see cref="T:System.Web.UI.PersistChildrenAttribute" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>获取该工具创建的 Web 控件的 HTML。</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 为当前的设计文档。</param>
      <returns>该工具创建的 Web 控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>获取此工具箱项的类型。</summary>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 为当前的设计文档。</param>
      <returns>
        <see cref="T:System.Type" /> 此工具箱项。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Initialize(System.Type)">
      <summary>初始化此工具箱项。</summary>
      <param name="type">
        <see cref="T:System.Type" /> 的 Web 服务器控件工具箱项。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>将此工具箱项的状态保存到指定的序列化信息对象中。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 用于保存的状态 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> ，该值指示序列化流特征。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.#ctor(System.IServiceProvider)">
      <summary>创建的新实例 <see cref="T:System.Web.UI.Design.WebFormsDesignerActionService" /> 类使用提供的对设计宿主的引用。</summary>
      <param name="serviceProvider">对设计宿主的引用。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>获取与组件相关联的智能标记项列表。</summary>
      <param name="component">对与设计器关联的控件的引用。</param>
      <param name="actionLists">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 要添加到关联的智能标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives">
      <summary>获取当前项目文档 register 指令。</summary>
      <returns>表示在当前文档中定义的注册指令的字符串集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)">
      <summary>获取指定的对象类型的标记前缀。</summary>
      <param name="objectType">对象的类型。</param>
      <returns>如果使用为指定的对象类型的标记前缀; 如果找到否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)">
      <summary>获取具有指定的标记前缀和标记名称的对象类型。</summary>
      <param name="tagPrefix">要检索的类型标记前缀。</param>
      <param name="tagName">要检索的类型的标记名称。</param>
      <returns>
        <see cref="T:System.Type" /> ，该对象具有指定的标记前缀和名称，如果找到; 否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)">
      <summary>获取具有指定的标记前缀和标记名称的用户控件的相对 URL 路径。</summary>
      <param name="tagPrefix">要检索的用户控件标记前缀。</param>
      <param name="tagName">要检索的用户控件的标记名称。</param>
      <returns>一个表示指定的用户控件的相对 URL 路径，如果字符串找到;否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)">
      <summary>添加一个指定类型的标记前缀。</summary>
      <param name="objectType">要添加的标记前缀当前文档中的类型。</param>
      <returns>标记前缀字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)">
      <summary>当在派生类中重写，将客户端脚本元素添加到当前的 Web 窗体页。</summary>
      <param name="scriptItem">一个 <see cref="T:System.Web.UI.Design.ClientScriptItem" /> 将添加到 Web 窗体页。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddControlToDocument(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Design.ControlLocation)">
      <summary>当在派生类中重写，将添加到 Web 窗体页上的 Web 服务器控件。</summary>
      <param name="newControl">要将添加到 Web 窗体页上的控件。</param>
      <param name="referenceControl">相对于其控制 <paramref name="newControl" /> 添加。</param>
      <param name="location">一个 <see cref="T:System.Web.UI.Design.ControlLocation" /> 值，该值指示的位置 <paramref name="newControl" /> 相对于 <paramref name="referenceControl" />。</param>
      <returns>已添加的控件的 ID。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateDesignerActionService(System.IServiceProvider)">
      <summary>返回一个设计时间 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 对象。</summary>
      <param name="serviceProvider">一种设计宿主，如 Visual Studio 2005, 强制转换为 <see cref="T:System.IServiceProvider" />。</param>
      <returns>设计时设计器操作服务对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateUrlResolutionService">
      <summary>返回 <see cref="T:System.Web.UI.IUrlResolutionService" /> 解析相对 Url。</summary>
      <returns>一个对象，解析相对 Url。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Dispose(System.Boolean)">
      <summary>释放由非托管的资源 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> ，还可以释放托管的资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Finalize">
      <summary>释放当前的资源 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 对象在被垃圾回收器回收之前。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateEmptyDesignTimeHtml(System.Web.UI.Control)">
      <summary>在设计时生成了空的控件的 HTML 标记。</summary>
      <param name="control">要生成的 HTML 标记的控件。</param>
      <returns>一个空控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateErrorDesignTimeHtml(System.Web.UI.Control,System.Exception,System.String)">
      <summary>生成用于在设计时显示一条错误消息，通过使用指定的控件、 异常和消息的 HTML 标记。</summary>
      <param name="control">引发该异常的控件。- 或 - null。</param>
      <param name="e">异常。- 或 -null。</param>
      <param name="errorMessage">要添加的异常消息的消息。- 或 - 空字符串 ("")。</param>
      <returns>控件和异常信息的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument">
      <summary>当在派生类中重写返回 <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />  对象，其中包含在页面上的所有客户端脚本项目。</summary>
      <returns>一个包含页上的所有客户端脚本项目的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)">
      <summary>当在派生类中重写，则返回当前的设计时视图和指定的控件的 HTML 标记。</summary>
      <param name="control">要提供视图和标记的控件。</param>
      <param name="view">当 <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> 方法返回时， <paramref name="view" /> 包含 IControlDesignerView 在设计时提供对可视表示形式和控件内容的访问的对象。<paramref name="view" /> 未经初始化即被传递。</param>
      <param name="tag">当 <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> 方法返回时， <paramref name="tag" /> 包含 IControlDesignerTag 提供对控件的控件设计器的 HTML 元素的访问的对象。<paramref name="tag" /> 未经初始化即被传递。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetService(System.Type)">
      <summary>返回所请求的服务。</summary>
      <param name="serviceType">要检索的服务类型。</param>
      <returns>请求的服务;否则为 null, ，如果无法解析服务。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>返回的视图对象，它是由提供 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 对象。</summary>
      <param name="viewTechnology">一个 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 从获取 <see cref="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies" /> 属性。</param>
      <returns>包含该组件的当前视图的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 对象使用指定的组件。</summary>
      <param name="component">此设计器设计的组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.OnLoadComplete(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete" /> Web 窗体页完全加载时的事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器更改或移除项的设计器通过公开的属性集从 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="attributes">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器更改或移除项的设计器通过公开的事件集 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器更改或移除项的设计器通过公开的属性集从 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器添加到设计器通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="attributes">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器将项添加到设计器通过公开的事件的一套 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器将项添加到设计器通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象。</summary>
      <param name="properties">该组件的类的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveClientScriptFromDocument(System.String)">
      <summary>在设计时，请从文档中移除指定的客户端脚本。</summary>
      <param name="clientScriptId">对于以前注册的客户端脚本标识符。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveControlFromDocument(System.Web.UI.Control)">
      <summary>当在派生类中重写从 Web 窗体页中删除指定的控件。</summary>
      <param name="control">要删除的 Web 窗体页面中的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.ResolveUrl(System.String)">
      <summary>将相对 URL 转换为完全限定的 URL。</summary>
      <param name="relativeUrl">在站点上资源的相对 URL。</param>
      <returns>从解析的完全限定的 URL <paramref name="relativeUrl" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeUrl" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.SetControlID(System.Web.UI.Control,System.String)">
      <summary>集 ID 具有指定的字符串的指定控件的属性。</summary>
      <param name="control">该控件在其上设置该 id。</param>
      <param name="id">要将设置为该控件的 ID 的字符串。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />。</summary>
      <param name="attributes">组件的类属性对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />。</summary>
      <param name="events">表示组件的类的事件的事件描述符对象。 中的事件字典的键是事件名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />。</summary>
      <param name="properties">属性描述符对象，表示该组件的类的属性。 中的属性字典的键是属性名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />。</summary>
      <param name="attributes">组件的类属性对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />。</summary>
      <param name="events">表示组件的类的事件的事件描述符对象。 中的事件字典的键是事件名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />。</summary>
      <param name="properties">属性描述符对象，表示该组件的类的属性。 中的属性字典的键是属性名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>获取指定的视图技术的视图对象。 有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />。</summary>
      <param name="viewTechnology"> 视图技术。</param>
      <returns>指定的视图技术的的视图对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#IDisposable#Dispose">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.IDisposable.Dispose" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDataFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>创建的一个实例 <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> 类使用指定 <see cref="T:System.Xml.XmlDocument" /> 和一个 XPath 字符串。</summary>
      <param name="xmlDocument">一个实例 <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
      <param name="xPath">用于标识文档根的子节点的 XPath 字符串。</param>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.GetViews">
      <summary>获取一个数组，包含有关每个标识的节点处开始的子节点的信息 <paramref name="xPath" /> 构造函数中或从文档根目录开始，如果每个子节点中的参数 <paramref name="xPath" /> 参数为空。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XmlFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">通过它可能获得编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果未更改的对象值，此方法应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器中，使用指定关联的编辑样式 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示所提供的编辑样式。 如果该方法不支持指定的上下文中，这将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 标识符。</returns>
    </member>
    <member name="M:System.Web.UI.Design.XmlUrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XmlUrlEditor" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslTransformFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XslTransformFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslUrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XslUrlEditor" /> 类的实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑使用指定的服务提供程序和上下文的指定对象的值。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 通过它可能获得编辑服务。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，这应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑器样式 <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>其中一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值指示所提供的编辑样式。 如果不支持的方法，此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 类的新实例。</summary>
      <param name="options">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> ，该值指示 ActiveX 控件导入程序，若要使用的选项。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromFile(System.IO.FileInfo)">
      <summary>在设计时环境中生成使用的 ActiveX 控件的包装。</summary>
      <param name="file">一个 <see cref="T:System.IO.FileInfo" /> ，该值指示包含该控件的文件。</param>
      <returns>为其生成一个包装的 ActiveX 控件的类型程序集限定的名称。</returns>
      <exception cref="T:System.Exception">无法加载类型库，从 <paramref name="file" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>在设计时环境中生成使用的 ActiveX 控件的包装。</summary>
      <param name="typeLib">一个 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> ，该值指示要生成该控件从类型库。</param>
      <returns>为其生成一个包装的 ActiveX 控件的类型程序集限定的名称。</returns>
      <exception cref="T:System.Exception">没有已注册的 ActiveX 控件中找到 <paramref name="typeLib" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib,System.Guid)">
      <summary>在设计时环境中生成使用的 ActiveX 控件的包装。</summary>
      <param name="typeLib">一个 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> ，该值指示要生成该控件从类型库。</param>
      <param name="clsid">
        <see cref="T:System.Guid" /> 控制包装器。</param>
      <returns>为其生成一个包装的 ActiveX 控件的类型程序集限定的名称。</returns>
      <exception cref="T:System.Exception">没有已注册的 ActiveX 控件中找到 <paramref name="typeLib" />。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GetFileOfTypeLib(System.Runtime.InteropServices.TYPELIBATTR@)">
      <summary>获取指定的类型库的路径和文件名的名称。</summary>
      <param name="tlibattr">一个 <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> ，该值指示要检索的文件名称的类型库。</param>
      <returns>为指定的类型库的路径和文件名称或 null 如果找不到库。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>解析对包含 ActiveX 控件的指定的类型库的引用。</summary>
      <param name="typeLib">一个 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> 要解析的引用。</param>
      <returns>程序集的完全限定的路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>解析为指定的程序集包含的 COM 组件的引用。</summary>
      <param name="name">
        <see cref="T:System.Reflection.AssemblyName" /> ，该值指示要解析的引用的程序集。</param>
      <returns>程序集的完全限定的路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>解析对包含 COM 组件的指定的类型库的引用。</summary>
      <param name="typeLib">一个 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> 要解析的引用。</param>
      <returns>程序集的完全限定的路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>解析为指定的程序集的引用。</summary>
      <param name="assemName">要解析的引用的程序集的名称。</param>
      <returns>程序集的完全限定的路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类使用指定的参数信息。</summary>
      <param name="info">一个 <see cref="T:System.Reflection.ParameterInfo" /> ，该值指示要使用的参数信息。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo,System.Boolean)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类使用指定的参数信息以及是否忽略通过引用传递。</summary>
      <param name="info">一个 <see cref="T:System.Reflection.ParameterInfo" /> ，该值指示要使用的参数信息。</param>
      <param name="ignoreByRefs">一个值，该值指示是否忽略由引用传递的参数。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类使用指定的名称和类型名称。</summary>
      <param name="inname">参数的名称。</param>
      <param name="typeName">参数的类型的名称。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.Type)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类使用指定的名称和类型。</summary>
      <param name="inname">参数的名称。</param>
      <param name="type">参数的类型。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[])">
      <summary>指定的参数将信息转换为 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象。</summary>
      <param name="infos">一个数组 <see cref="T:System.Reflection.ParameterInfo" /> 要转换的对象。</param>
      <returns>一个数组 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象表示指定的数组 <see cref="T:System.Reflection.ParameterInfo" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[],System.Boolean)">
      <summary>指定的参数将信息转换为 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象根据指定的值，该值指示是否忽略通过引用传递。</summary>
      <param name="infos">一个数组 <see cref="T:System.Reflection.ParameterInfo" /> 要转换的对象。</param>
      <param name="ignoreByRefs">一个值，该值指示是否忽略由引用传递的参数。</param>
      <returns>一个数组 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象表示指定的数组 <see cref="T:System.Reflection.ParameterInfo" /> 对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxWrapperGen.#ctor(System.Type)">
      <summary>生成设计时承载 ActiveX 控件的 ActiveX 包装。</summary>
      <param name="axType">若要生成的包装的 ActiveX 控件的类型。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 若要刷新其装饰器窗口。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 若要刷新其装饰器窗口中的给定 <see cref="T:System.Drawing.Rectangle" />。</summary>
      <param name="rectangle">要使之无效的区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 若要刷新其装饰器窗口中的给定 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="region">要使之无效的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 类与给定 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="callParentBehavior">true 如果应调用的父行为，如果它存在，则否则为 false。</param>
      <param name="behaviorService">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />  使用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> 是 true, ，和 <paramref name="behaviorService" /> 是 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>截获命令。</summary>
      <param name="commandId">一个 <see cref="T:System.ComponentModel.Design.CommandID" /> 对象。</param>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" />。 默认情况下， <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> 返回 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义拖放行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 在其上调用拖放行为的对象。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义拖入行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 在其上调用拖入行为。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>允许自定义拖离行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 在其上调用拖离行为。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义拖过行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 在其上调用拖过行为。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>允许自定义拖放反馈行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 在其上调用拖放行为。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>当它失去鼠标捕获的装饰器窗口由调用。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 在其上调用拖放行为。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>当任何双击消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，该值指示被单击的按钮。</param>
      <param name="mouseLoc">发生单击位置。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>当鼠标按下的任何消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，该值指示被单击的按钮。</param>
      <param name="mouseLoc">发生单击位置。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>当任何鼠标输入消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>当任何鼠标悬停消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="mouseLoc">发生悬停位置。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>当任何鼠标离开消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>当任何鼠标移动消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，该值指示被单击的按钮。</param>
      <param name="mouseLoc">从该处移动发生的位置。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>当任何鼠标弹起消息进入的装饰器窗口时调用 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，该值指示被单击的按钮。</param>
      <returns>true 如果该消息已处理;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>将装饰器窗口中的此拖放事件发送到相应 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 或命中测试 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> 类的新实例。</summary>
      <param name="dragComponents">
        <see cref="T:System.Collections.ICollection" /> 的 <see cref="T:System.ComponentModel.IComponent" /> 当前正被拖动的对象。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>将转换 <see cref="T:System.Drawing.Point" /> 到屏幕坐标的装饰器窗口中。</summary>
      <param name="p">
        <see cref="T:System.Drawing.Point" /> 要转换值。</param>
      <returns>已转换 <see cref="T:System.Drawing.Point" /> 屏幕坐标中的值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>获取修饰工具窗口在屏幕坐标中的位置。</summary>
      <returns>在屏幕坐标中相对于修饰工具窗口的左上角的位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>返回的边界 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="T:System.Windows.Forms.Control" />。</summary>
      <param name="c">
        <see cref="T:System.Windows.Forms.Control" /> 转换。</param>
      <returns>外围 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="T:System.Windows.Forms.Control" /> 转换为修饰工具窗口坐标。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>返回的位置 <see cref="T:System.Windows.Forms.Control" /> 转换为修饰工具窗口坐标。</summary>
      <param name="c">
        <see cref="T:System.Windows.Forms.Control" /> 转换。</param>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 值，该值指示的位置 <paramref name="c" /> 修饰工具窗口坐标中。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 后立即给定 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 行为堆中。</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 前面 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 要返回。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 后立即 <paramref name="behavior" /> 行为堆中或 null 是否存在任何以下行为。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>使装饰器窗口失效 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>使失效装饰器窗口中的指定的区域 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="rect">要无效化的矩形区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>使失效装饰器窗口中的指定的区域 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="r">要无效化的区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>将句柄的坐标系统中的点转换为修饰工具窗口坐标。</summary>
      <param name="handle">修饰工具窗口的句柄。</param>
      <param name="pt">一个 <see cref="T:System.Drawing.Point" /> 句柄的坐标系统中。</param>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 修饰工具窗口坐标中。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>移除并返回 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 堆栈的顶部。</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 若要从堆栈中移除。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 从堆栈中移除。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 堆栈为空。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>将推送 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 到行为堆。</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 推送。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>将推送 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 到行为堆上并为该行为分配鼠标捕获。</summary>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 推送。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>将转换为修饰工具窗口坐标的屏幕坐标中的点 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <param name="p">
        <see cref="T:System.Drawing.Point" /> 要转换值。</param>
      <returns>已转换 <see cref="T:System.Drawing.Point" /> 修饰工具窗口坐标中的值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>同步所有所选内容字形。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 使用给定的数组的类。</summary>
      <param name="value">类型的数组 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />  来填充该集合。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 类与给定 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 引用。</summary>
      <param name="behaviorService">一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 引用。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 从现有类 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 要从其中填充集合。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>添加 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 与指定的值与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 将添加到集合的末尾。</param>
      <returns>在该位置插入新元素的索引。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>将一个数组的元素复制到的末尾 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">类型的数组 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 将复制到集合的末尾</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>将另一个的内容添加 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 到集合的末尾。</summary>
      <param name="value">一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 将添加到集合的末尾。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 包含指定 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>true 如果 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 包含在集合; 否则为 false</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>副本 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 值到一维 <see cref="T:System.Array" /> 中指定索引处。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 从复制的值的目标 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
      <param name="index">中的索引 <paramref name="array" /> 开始复制。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 实例的枚举器。</summary>
      <returns>用于 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>返回的索引 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
      <returns>索引 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 的 <paramref name="value" /> 中 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, ，如果找到; 否则为-1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>在 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 中的指定索引处插入一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>中移除特定 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 从 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> 类的新实例。</summary>
      <param name="mappings">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 要为其创建枚举器。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>使枚举数前进到 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的下一个元素。</summary>
      <returns>true 如果枚举数成功地推进到下一个元素;， false 如果枚举数已超出集合的末尾。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerator.MoveNext" /> 方法。</summary>
      <returns>true 如果枚举数成功地推进到下一个元素;， false 如果枚举数已超出集合的末尾。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerator.Reset" /> 方法。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 类的新实例。</summary>
      <param name="relatedComponent">与组件 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 类的新实例。</summary>
      <param name="relatedComponent">与组件 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 与其 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指示是否应由处理指定点处的鼠标单击 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />。</summary>
      <param name="p">要进行点击测试点。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.Cursor" /> 如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与关联 <paramref name="p" />; 否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供绘制逻辑。</summary>
      <param name="pe">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" /> 包含 <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />  的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 类的新实例。</summary>
      <param name="bounds">表示 <see cref="T:System.Drawing.Rectangle" /> 的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor">一个 <see cref="T:System.Windows.Forms.Cursor" />，表示当鼠标指针位于 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上时显示的光标。</param>
      <param name="relatedComponent">与组件 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
      <param name="behavior">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 与其 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 类的新实例。</summary>
      <param name="bounds">表示 <see cref="T:System.Drawing.Rectangle" /> 的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="cursor">一个 <see cref="T:System.Windows.Forms.Cursor" />，表示当鼠标指针位于 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上时显示的光标。</param>
      <param name="relatedComponent">与组件 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
      <param name="designer">一个 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 与其 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指示是否应由处理指定点处的鼠标单击 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</summary>
      <param name="p">要进行命中测试点。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.Cursor" /> 如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与关联 <paramref name="p" />; 否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类的新实例。</summary>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。 可以为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>提供了命中的测试逻辑。</summary>
      <param name="p">要进行点击测试点。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.Cursor" /> 如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与关联 <paramref name="p" />; 否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供绘制逻辑。</summary>
      <param name="pe">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>更改 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 与关联 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="behavior">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 联 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类与给定 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 数组。</summary>
      <param name="value">类型的数组 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 来填充该集合。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类基于在另一台 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 来填充该集合。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>添加 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与指定的值与 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 将添加到集合的末尾。</param>
      <returns>在该位置插入新元素的索引。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>将一个数组的元素复制到的末尾 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">类型的数组 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 将复制到集合的末尾。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>将另一个的内容添加 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 到集合的末尾。</summary>
      <param name="value">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 将添加到集合的末尾。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 包含指定 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>true 如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 包含在集合; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>副本 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 值到一维 <see cref="T:System.Array" /> 中指定索引处。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 从复制的值的目标 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
      <param name="index">中的索引 <paramref name="array" /> 开始复制。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>返回的索引 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">要查找的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <returns>索引 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的 <paramref name="value" /> 中 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, ，如果找到; 否则为-1。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>将插入 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 到 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 中指定索引处。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>中移除特定 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 从 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类使用指定的对齐线类型和偏移量。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类使用指定的对齐线类型、 偏移量和筛选器的名称。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="filter">一个 <see cref="T:System.String" /> 用来指定对齐线的程序员定义的类别。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类使用指定的对齐线类型、 偏移量、 筛选器名称和优先级。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="filter">一个 <see cref="T:System.String" /> 用来指定对齐线的程序员定义的类别。</param>
      <param name="priority">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> 对齐线。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类使用指定的对齐线类型、 偏移量和优先级。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="priority">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> 对齐线。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>调整 <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> 对齐线的属性。</summary>
      <param name="adjustment">对齐线偏移量更改的像素数。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>返回一个值，该值指示是否指定 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 应对齐到另一个 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</summary>
      <param name="line1">指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <param name="line2">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 向其指定 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 应与其对齐。</param>
      <returns>true 如果 <paramref name="line1" /> 应对齐到 <paramref name="line2" />; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>返回当前对齐线的字符串表示形式。</summary>
      <returns>一个 <see cref="T:System.String" />，表示当前的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑给定的对象值，使用所提供的编辑器样式 <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供有关该控件或组件的信息。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 提供对其他对象的自定义支持。</param>
      <param name="value">要编辑的对象值。</param>
      <returns>已编辑的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索的编辑样式 EditValue 方法。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 提供有关该控件或组件的信息。</param>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一。 如果不支持的方法，此方法返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示设计器是否支持指定的工具。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 要测试其工具箱支持。</param>
      <returns>true 如果应在工具箱; 上启用该工具 false 如果文档设计器不知道如何使用该工具。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的组件的设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整的组件将通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>有关此成员的说明，请参阅 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <param name="technology">一个 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> ，该值指示特定的视图技术。</param>
      <returns>表示此设计器的视图的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component">要筛选其属性的组件。</param>
      <param name="attributes">可修改的属性字典。</param>
      <returns>如果将缓存经过筛选的属性集，则为 true；如果筛选服务必须再次查询，则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component">要为其筛选事件的组件。</param>
      <param name="events">可修改的事件字典。</param>
      <returns>如果要缓存经过筛选的事件集，则为 true；如果筛选服务必须再次查询，则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <param name="component">要为其筛选属性的组件。</param>
      <param name="properties">可修改的属性字典。</param>
      <returns>如果将缓存经过筛选的属性集，则为 true；如果筛选服务必须再次查询，则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 要测试的工具箱支持。</param>
      <returns>true 如果工具箱支持该工具，并可以启用; false 如果文档设计器不知道如何使用该工具。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 选择。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 类使用指定的设计器和服务提供商联系。</summary>
      <param name="mainDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> ，它是主或用于当前项目的文档设计器。</param>
      <param name="serviceProvider">
        <see cref="T:System.IServiceProvider" /> 可用来获取在设计时服务。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>将组件添加到任务栏。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 若要添加到任务栏。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示是否可以使用指定的工具来创建新的组件。</summary>
      <param name="tool">要测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <returns>true 如果指定的工具可用于创建组件;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指示是否可以显示指定的组件。</summary>
      <param name="component">要测试的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <returns>true 如果可以显示该组件;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>从指定的工具箱项创建一个组件，将组件添加到当前文档和在组件栏中显示该组件的表示形式。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建从一个组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>显示一条错误消息给用户，以指定的异常有关的信息。</summary>
      <param name="e">有关要显示其信息异常。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>获取指定的组件，相对于组件栏窗口左上角的位置。</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> 要检索的位置。</param>
      <returns>一个 <see cref="T:System.Drawing.Point" /> ，该值指示指定的组件或一个空的坐标 <see cref="T:System.Drawing.Point" /> 如果在组件栏中找不到指定的组件。 一个空 <see cref="T:System.Drawing.Point" /> 具有 <see cref="P:System.Drawing.Point.IsEmpty" /> 属性等于 true 和通常具有 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 每个等于 0 的属性。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>类似于 <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, ，此方法返回在给定起始组件的送纸器中的下一个组件。</summary>
      <param name="component">从其开始枚举组件。</param>
      <param name="forward">true 若要前滚枚举该列表中;否则为 false 枚举向后。</param>
      <returns>组件栏中的下一个组件或 null, ，如果遇到列表的末尾 (或开始时，如果 <paramref name="forward" /> 是 false)。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>获取请求的服务类型。</summary>
      <param name="serviceType">要检索的服务的类型。</param>
      <returns>所请求服务的实例或 null 如果找不到该服务。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>获取的值 Location 扩展程序属性。</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> 接收位置扩展程序属性。</param>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 表示位置的 <paramref name="receiver" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>在组件栏中测试组件存在。</summary>
      <param name="comp">要测试其存在在组件栏中的组件。</param>
      <returns>true 如果 <paramref name="comp" /> 显示在托盘中; 否则为正在 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>当在组件栏中删除已被拖动的对象时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>当对象上拖动对象且具有在组件栏中输入区域时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>组件栏上将对象拖出区域时调用。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>组件栏上拖动对象时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在 OLE 过程中调用拖放操作，以提供的组件的送纸器，若要向某一特定点上删除对象的结果有关的用户提供反馈的机会。</summary>
      <param name="gfevent">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="levent">包含事件数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>鼠标拖动选择操作被取消时调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标进行双在组件栏上单击时调用。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>当按下鼠标按钮时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标光标位置发生更改时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>当释放鼠标按钮时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>组件栏的视图应该刷新时调用。</summary>
      <param name="pe">为事件提供数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>调用以设置鼠标光标。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>从任务栏中删除指定的组件。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 从任务栏中删除。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>将指定的组件的位置设置为指定的位置。</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> 若要设置的位置。</param>
      <param name="location">一个 <see cref="T:System.Drawing.Point" /> ，该值指示指定的组件的新位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>设置的值 Location 扩展程序属性。</summary>
      <param name="receiver">
        <see cref="T:System.ComponentModel.IComponent" /> 接收位置扩展程序属性。</param>
      <param name="location">一个 <see cref="T:System.Drawing.Point" /> 表示位置的 <paramref name="receiver" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />。</summary>
      <param name="component">
        <see cref="T:System.Object" /> 要接收扩展程序属性。</param>
      <returns>true 如果此对象可以提供扩展程序属性与指定的对象;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>指示是否可以由指定设计器控件有此设计器控件的父级。</summary>
      <param name="parentDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> 管理要检查的控件。</param>
      <returns>true 如果由指定设计器管理的控件可以为由该设计器; 托管控件的父级否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>新实例初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> 类使用指定的设计器和控制。</summary>
      <param name="designer">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 辅助性对象。</param>
      <param name="control">
        <see cref="T:System.Windows.Forms.Control" /> 辅助性对象。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>检索与指定索引对应的可访问子级。</summary>
      <param name="index">可访问子级的从零开始的索引。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示与指定索引对应的辅助性子级。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>检索属于可访问对象的子级的个数。</summary>
      <returns>属于可访问对象的子级的个数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>检索具有键盘焦点的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> ，它指定当前设定焦点的子级。 如果主要是对象本身，则此方法返回调用对象。 返回 null 如果没有对象具有焦点。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>检索当前所选的子级。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> ，它表示当前选定的子级。 如果选择了对象本身，则此方法返回调用对象。 返回 null 如果，并且没有子当前所选对象本身不具有焦点。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>检索位于指定屏幕坐标的子对象。</summary>
      <param name="x">水平屏幕坐标。</param>
      <param name="y">垂直屏幕坐标。</param>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> ，表示位于给定的屏幕坐标的子对象。 如果对象本身位于指定位置，则此方法返回调用对象。 如果测试位置没有对象，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>提供了默认的 Windows 消息处理。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>向用户显示有关指定异常的信息。</summary>
      <param name="e">
        <see cref="T:System.Exception" /> 来显示。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>启用的设计时功能的子控件。</summary>
      <param name="child">子控件的设计的启用模式。</param>
      <param name="name">名称 <paramref name="child" /> 为最终用户公开。</param>
      <returns>true 如果可以为设计时; 启用子控件的功能 false 如果宿主基础结构不支持它。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> 或 <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>启用或禁用对正在设计的控件的拖放支持。</summary>
      <param name="value">true 若要启用的控件; 拖放支持 false 如果控件不应具有拖放支持。 默认值为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 表示此控件的边界。</summary>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，该值指定的选择状态。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 表示此控件的边界。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取一套 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 表示选择边框和标准控件的抓取手柄的对象。</summary>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，该值指定的选择状态。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指示是否应由控件处理指定点处的鼠标单击。</summary>
      <param name="point">一个 <see cref="T:System.Drawing.Point" /> ，该值指示在其中单击了鼠标，在屏幕坐标中的位置。</param>
      <returns>true 如果指定点处的单击旨在处理由控件;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>将路由到设计器从指定的控件的子控件的消息。</summary>
      <param name="firstChild">第一个子级 <see cref="T:System.Windows.Forms.Control" /> 到进程。 此方法可能以递归方式调用自身的子级的控件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的组件的设计器。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 将与设计器相关联。 此组件必须始终将一个实例，或从派生 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>重新初始化现有的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>返回具有指定索引中的内部控制设计器 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</summary>
      <param name="internalControlIndex">若要选择内部控制设计器指定的索引。 此索引是从零开始。</param>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的指定索引处。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>返回内部控制设计器中的数 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</summary>
      <returns>中的内部控制设计器的数量 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>显示的上下文菜单，并提供机会时的上下文菜单将用来显示执行其他处理。</summary>
      <param name="x">X 坐标，此处显示的上下文菜单。</param>
      <param name="y">在显示上下文菜单的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>提供附加处理，在创建控件句柄后立即执行的机会。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>接收一个调用来清理拖放操作。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>拖放对象放置到控件设计器视图上时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>拖放操作进入控件设计器视图时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>拖放操作离开控件设计器视图时接收调用。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在拖放对象拖到控件设计器视图，则接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在拖放操作正在进行提供可视提示拖动操作正在进行时，可根据鼠标的位置时接收调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>调用在收到响应鼠标左键不按下并保持到该组件。</summary>
      <param name="x">在屏幕坐标中鼠标的 x 位置。</param>
      <param name="y">在屏幕坐标中鼠标的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>接收拖放操作完成或取消操作的末尾调用。</summary>
      <param name="cancel">true 若要取消拖动; false 以将其提交。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>在拖放操作期间，接收每一次移动鼠标的调用。</summary>
      <param name="x">在屏幕坐标中鼠标的 x 位置。</param>
      <param name="y">在屏幕坐标中鼠标的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>当鼠标首次进入该控件接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>鼠标悬停在控件上后，接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>当鼠标首次进入该控件接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>控件设计器管理具有绘制其图面，这样设计器就可以绘制在控件之上的任何其他修饰时接收调用。</summary>
      <param name="pe">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" /> 设计器可用于在控件上绘制。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>当在设计器初始化时调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>接收调用每次需要设置光标。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整的该组件通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>将消息路由到每个控件，而不是父设计器指定的控件的子级。</summary>
      <param name="firstChild">第一个子级 <see cref="T:System.Windows.Forms.Control" /> 到进程。 此方法可能以递归方式调用自身的子级的控件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息，并根据需要将它们路由至该控件。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DockEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的对象值，使用所提供的 GetEditorStyle 的编辑器样式。 服务提供商提供，以便可以获取所需的所有编辑服务。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">通过它可能获得编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，这应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 EditValue 方法的编辑样式。 如果不支持的方法，这将返回 None。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>枚举值，该值指示提供的编辑样式。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>检查菜单编辑器服务存在，并创建一个如果尚不存在。</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" /> 为了确保具有上下文菜单服务。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象。</summary>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />  值，该值指定的选择状态。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>指示设计器是否支持指定的工具。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 要测试其工具箱支持。</param>
      <returns>true 如果应在工具箱; 上启用该工具 false 如果文档设计器不知道如何使用该工具。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的组件的设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>应显示上下文菜单时调用。</summary>
      <param name="x">若要显示在上下文菜单的水平屏幕坐标。</param>
      <param name="y">若要显示在上下文菜单的垂直屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>设计器的句柄已创建后立即调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整的该组件通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>有关此成员的说明，请参阅 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <param name="technology">一个 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> ，该值指示特定的视图技术。</param>
      <returns>表示此设计器的视图的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 要测试的工具箱支持。</param>
      <returns>true 如果工具箱支持该工具，并可以启用; false 如果文档设计器不知道如何使用该工具。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参阅 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 选择。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>选择指定的工具。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 若要创建的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> 类的新实例。</summary>
      <param name="focusWnd">
        <see cref="T:System.Windows.Forms.Control" /> 正在设计。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>获取指定类型的当前处于活动状态事件处理程序。</summary>
      <param name="handlerType">要获取的处理程序的类型。</param>
      <returns>该处理程序的实例或 null 如果没有所请求类型的处理程序。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>从给定的处理程序从堆栈中弹出。</summary>
      <param name="handler">要从堆栈中移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>在堆栈上推送新的事件处理程序。</summary>
      <param name="handler">要添加到堆栈的处理程序。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的对象使用所提供的编辑器样式 <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">通过它可能获得编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
      <returns>对象的新值。 如果该对象的值未发生更改，这应返回同一对象传递给它的。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由使用的编辑样式 <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>其中一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值指示所提供的编辑样式。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>在创建它时进行初始化打开文件对话框。</summary>
      <param name="openFileDialog">
        <see cref="T:System.Windows.Forms.OpenFileDialog" /> 要用于选择一个文件名。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的对象使用所提供的编辑器样式 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务对象提供程序。</param>
      <param name="value">要设置的值。</param>
      <returns>该对象的新值或如果无法更新该对象的旧值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>显示文件夹浏览器对话框。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> 窗体中。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>显示文件夹浏览器对话框中与指定的所有者。</summary>
      <param name="owner">将拥有模式对话框的顶级窗口 (例如 ︰ System.Windows.Forms.Form)。</param>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> 窗体中。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由使用的编辑样式 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示所提供的编辑样式。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>初始化文件夹浏览器对话框。</summary>
      <param name="folderBrowser">一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 若要选择的文件夹。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>获取一个枚举的 <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> 窗口和其滚动条需要有主题在 Visual Studio 设计器中显示时如何表示的对象。</summary>
      <returns>Windows 和其滚动条需要有主题在 Visual Studio 设计器中显示时如何表示的对象的枚举。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>指定的序列化的代码文档对象模型 (CodeDOM) 对象反序列化为对象。</summary>
      <param name="manager">在反序列化过程中使用序列化管理器界面。</param>
      <param name="codeObject">要反序列化的序列化的 CodeDOM 对象。</param>
      <returns>反序列化的 CodeDOM 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>代码文档对象模型 (CodeDOM) 对象序列化为指定的对象。</summary>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑指定的对象值，使用所提供的编辑样式 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 通过它可以获得编辑服务。</param>
      <param name="value">
        <see cref="T:System.Object" /> 正在编辑。</param>
      <returns>
        <see cref="T:System.Object" /> 表示新值。 如果该对象的值未更改， <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法返回传递给它的对象。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>获取该编辑器所提供的默认文件列表筛选器的描述。</summary>
      <returns>对默认文件列表筛选器的描述。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>获取受支持的图像类型的数组。</summary>
      <returns>一个数组 <see cref="T:System.Type" /> 表示支持的图像类型。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象的值的表示形式。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>true 如果 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> 实现; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>绘制由指定所指示的值 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。</summary>
      <param name="e">一个 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> ，该值指示绘制内容和绘制位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>获取当前的菜单。</summary>
      <returns>当前的 <see cref="T:System.Windows.Forms.Menu" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>指示是否当前菜单处于活动状态。</summary>
      <returns>true 如果当前菜单是当前处于活动状态;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>允许编辑器服务截获 Win32 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
      <returns>true 如果消息适用于控件;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>设置指定的菜单窗体上可见。</summary>
      <param name="menu">
        <see cref="T:System.Windows.Forms.Menu" /> 来呈现。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>设置当前菜单上的所选的菜单项。</summary>
      <param name="item">一个 <see cref="T:System.Windows.Forms.MenuItem" /> 若要设置为当前选定的菜单项。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 是否等同于当前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</summary>
      <param name="maskDescriptor">要与当前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 进行比较的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</param>
      <returns>如果指定的 true 等于当前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />，则为 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary>用作特定类型的哈希函数。</summary>
      <returns>当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary>返回一个值，该值指示指定的掩码描述符是否有效并可添加到掩码列表。</summary>
      <param name="maskDescriptor">若要测试其有效性的掩码描述符。</param>
      <returns>true 如果 <paramref name="maskDescriptor" /> 有效; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary>返回一个值，该值指示指定的掩码描述符是有效的并且提供了一个错误说明，如果不是有效。</summary>
      <param name="maskDescriptor">若要测试其有效性的掩码描述符。</param>
      <param name="validationErrorDescription">表示验证错误的字符串。 如果不出现任何验证错误， <paramref name="validationErrorDescription" /> 是 <see cref="F:System.String.Empty" />。</param>
      <returns>true 如果 <paramref name="maskDescriptor" /> 有效; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary>返回表示当前对象的字符串。</summary>
      <returns>表示当前对象的字符串。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>添加填充对齐线。</summary>
      <param name="snapLines">
        <see cref="T:System.Collections.ArrayList" /> ，其中包含 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>一个组件添加到父容器时调用。</summary>
      <param name="component">要测试有错误的组件。</param>
      <returns>true 如果 <paramref name="component" /> 可添加; 否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>指示指定的控件是否可为由该设计器管理的控件的子级。</summary>
      <param name="control">要测试的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>true 如果指定的控件可为由该设计器; 管理的控件的子级否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>指示是否由指定设计器管理的控件可为由该设计器管理的控件的子级。</summary>
      <param name="controlDesigner">控件的设计器来测试。</param>
      <returns>true 如果由指定设计器管理的控件，可为由该设计器; 管理的控件的子级否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>从指定的工具创建的组件或控件，并将其添加到当前的设计文档。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建从一个组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>从指定的工具创建组件或控件，并将其添加到当前的设计文档中的指定位置。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建从一个组件。</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" />, ，在设计时视图屏幕坐标中，从该处中心组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>从指定的工具创建组件或控件，并将其添加到当前的设计文档指定的矩形的边界内。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建从一个组件。</param>
      <param name="bounds">一个 <see cref="T:System.Drawing.Rectangle" /> ，该值指示的位置和大小从工具中创建的组件。<see cref="P:System.Drawing.Rectangle.X" /> 和 <see cref="P:System.Drawing.Rectangle.Y" /> 值 <see cref="T:System.Drawing.Rectangle" /> 指示该组件的左上角的设计时视图屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>提供了所有核心功能 <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> 方法。</summary>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建从一个组件。</param>
      <param name="x">水平位置，在设计时视图坐标中的工具，如果指定的大小; 的左边缘的位置工具，如果没有指定大小的中心水平位置。</param>
      <param name="y">垂直位置，在设计时视图坐标中的工具，如果指定的大小; 的上边缘的位置工具，如果没有指定大小的中心垂直位置。</param>
      <param name="width">该工具的宽度。 如果忽略此参数 <paramref name="hasSize" /> 参数设置为 false。</param>
      <param name="height">该工具的高度。 如果忽略此参数 <paramref name="hasSize" /> 参数设置为 false。</param>
      <param name="hasLocation">true 如果的位置，指定组件; false 如果组件是定位在当前所选控件的中心。</param>
      <param name="hasSize">true 如果的大小被指定组件; false 如果要使用该组件的默认高度和宽度值。</param>
      <returns>从工具中创建的组件的数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 true；若仅释放非托管资源，则为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>从指定组件的设计器中获取的控件。</summary>
      <param name="component">要检索的控件的组件。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> 属于指定的组件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取表示控件的控件边界的正文标志符号。</summary>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />  值，该值指定的选择状态。</param>
      <returns>主体标志符号，表示控件的控件边界。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取一套 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 表示选择边框和标准控件的抓取手柄的对象。</summary>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />  值，该值指定的选择状态。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>由派生类，用于确定是否返回正在设计的控件或某些其他 <see cref="T:System.ComponentModel.Container" /> 时向其添加组件。</summary>
      <param name="component">要为其检索父组件 <see cref="T:System.Windows.Forms.Control" />。</param>
      <returns>父 <see cref="T:System.Windows.Forms.Control" /> 组件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>更新的网格对齐方式进行调整，如果启用了网格对齐模式的指定矩形的位置。</summary>
      <param name="originalRect">一个 <see cref="T:System.Drawing.Rectangle" /> ，该值指示正在更新该组件的初始位置。</param>
      <param name="dragRect">一个 <see cref="T:System.Drawing.Rectangle" /> ，该值指示该组件的新位置。</param>
      <param name="updateSize">true 若要更新的矩形的大小，如果任何更改，则为否则为 false。</param>
      <returns>指示组件的设计时视图屏幕坐标中的位置矩形。 如果已不进行任何更改，此方法将返回原始矩形。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化具有指定的组件的设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用到属性的默认值的名称/值字典。 如果未指定默认值，可能为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>从指定将创建一种工具 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
      <param name="toInvoke">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> ，该工具是与一起使用。</param>
      <param name="tool">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建一种工具。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>调用以清理拖放操作。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>当拖放对象拖动控件设计器视图时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>拖放操作进入控件设计器视图时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>拖放操作离开控件设计器视图时调用。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 为事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>当拖放对象拖到控件设计器视图时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>调用以响应鼠标左键不按下并保持到该组件。</summary>
      <param name="x">以屏幕坐标表示鼠标的 x 坐标。</param>
      <param name="y">以屏幕坐标表示鼠标的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>在拖放操作完成或取消操作结束时调用。</summary>
      <param name="cancel">true 若要取消拖放操作; false 以将其提交。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>在拖放操作过程中鼠标每一次移动调用。</summary>
      <param name="x">以屏幕坐标表示鼠标的 x 坐标。</param>
      <param name="y">以屏幕坐标表示鼠标的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>当设计器管理的控件绘制了其图面这样设计器就可以绘制在控件之上的任何其他修饰时调用。</summary>
      <param name="pe">为事件提供数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>提供要更改当前鼠标光标的机会。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整的组件将通过公开的属性集 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" /> 包含组件的类的属性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指示是否应由控件处理指定点处的鼠标单击。</summary>
      <param name="pt">一个 <see cref="T:System.Drawing.Point" /> ，该值指示在其中单击了鼠标，在屏幕坐标中的位置。</param>
      <returns>true 如果指定点处的单击旨在处理由控件;否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息，并在设计时将 WM_HSCROLL 和 WM_VSCROLL 消息传递给该控件。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑给定的对象值，使用所提供的编辑器样式 <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 此编辑器可以用来获取服务。</param>
      <param name="value">要编辑的 <see cref="T:System.Object" />。</param>
      <returns>新值 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取使用的编辑器样式 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法。</summary>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，该值指示使用的编辑器样式 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>填充 <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />。</summary>
      <param name="options">要填充的集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>获取正在激活的设计图面。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 正在获得激活。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>获取正在失去激活的设计图面。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignSurface" /> ，正在失去激活。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>获取集合中的每个项的数据类型。</summary>
      <returns>收集项的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>获取集合对象的数据类型。</summary>
      <returns>集合对象的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>获取指示当前上下文的类型说明符。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，该值指示当前正在使用，上下文或 null 没有上下文是否可用。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>获取或设置要编辑的集合对象。</summary>
      <returns>要编辑的集合对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>获取或设置此窗体显示的项的数组。</summary>
      <returns>要显示的窗体的对象的数组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>获取此集合可以创建的可用项类型。</summary>
      <returns>可以创建的项的类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>获取集合中的每个项的数据类型。</summary>
      <returns>收集项的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>获取集合对象的数据类型。</summary>
      <returns>集合对象的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>获取指示当前上下文的类型说明符。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> ，该值指示当前正在使用，上下文或 null 没有上下文是否可用。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>获取要显示的帮助主题或主题列表编辑器对话框的帮助按钮或按 F1 键按下时的帮助关键字。</summary>
      <returns>若要显示帮助主题或主题列表编辑器中请求帮助时帮助关键字。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>获取此集合可以创建的项的可用类型。</summary>
      <returns>可以创建的项的类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>获取与设计器关联的组件所支持的设计时操作列表。</summary>
      <returns>支持与设计器相关联的组件的设计时操作列表。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>获取与设计器所管理的组件相关联的组件的集合。</summary>
      <returns>与设计器所管理的组件相关联的组件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>获取此设计器设计的组件。</summary>
      <returns>由设计器管理的组件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>获取指示关联组件的继承的类型的属性。</summary>
      <returns>
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> 关联的组件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>获取一个值，该值指示是否此组件会被继承。</summary>
      <returns>true 如果继承的组件;否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>获取此设计器的父组件。</summary>
      <returns>此设计器中，父组件或 null 如果此设计器的根组件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>获取重写用户设置的属性值的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> ，该值指示隐藏的设计文档的属性。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>获取或设置指定索引处的对象。</summary>
      <param name="propertyName">用于访问集合中的属性的名称。</param>
      <returns>如果它存在于集合的指定属性值。 否则，从当前值的隐藏属性检索的值。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> 属性。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 包含集合的 <see cref="T:System.ComponentModel.Design.IDesigner" /> 在当前父设计器中包含的设计器。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> 属性。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.IDesigner" /> 表示父设计器中，或 null 如果没有父对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>获取与设计器关联的组件所支持的设计时谓词。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 的 <see cref="T:System.ComponentModel.Design.DesignerVerb" /> 对象，或 null 是否有任何设计器谓词。 此默认实现始终返回 null。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Image">
      <summary>当在派生类中重写时将关闭此流和基础流获取 <see cref="T:System.Drawing.Bitmap" /> 表示数据源的图像。</summary>
      <returns>一个 <see cref="T:System.Drawing.Bitmap" /> 表示数据源的图像。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.IsDesignable">
      <summary>当在派生类中重写时获取值，该值指示数据源是否可设计。</summary>
      <returns>true 如果数据源是可设计;否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Name">
      <summary>当在派生类中重写时获取数据源的名称。</summary>
      <returns>数据源的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.TypeName">
      <summary>当在派生类中重写时获取的数据源的完全限定的类型名称。</summary>
      <returns>数据源的完全限定的类型名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 指定。</summary>
      <param name="index">
        <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 指定。</param>
      <returns>指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.DataSources">
      <summary>当在派生类中重写，此组中的数据源获取说明符的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> ，它表示此组中的数据源描述符的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Image">
      <summary>当在派生类中重写时获取 <see cref="T:System.Drawing.Bitmap" /> 表示的组的映像。</summary>
      <returns>一个 <see cref="T:System.Drawing.Bitmap" /> 表示的组的映像。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.IsDefault">
      <summary>当在派生类中重写时获取值，该值指示该组是否为默认组。</summary>
      <returns>true 如果此组是默认的组;否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Name">
      <summary>当在派生类中重写时获取组的名称。</summary>
      <returns>组的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroupCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 指定。</summary>
      <param name="index">
        <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 指定。</param>
      <returns>指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsAddNewDataSource">
      <summary>当在派生类中重写时获取值，该值指示服务是否支持添加新数据源使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />。</summary>
      <returns>true 如果服务支持添加新数据源使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />; 否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsConfigureDataSource">
      <summary>当在派生类中重写时获取值，该值指示服务是否支持配置数据源使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />。</summary>
      <returns>true 如果服务支持配置的数据源使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />; 否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DataType">
      <summary>获取数据列的数据类型。</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 值之一。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DefaultValue">
      <summary>获取数据列的默认值。</summary>
      <returns>数据列的默认值。 默认值为 null。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Identity">
      <summary>获取一个值，该值的数据列是否为标识列的数据行。</summary>
      <returns>true 如果列是标识列;否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Length">
      <summary>获取用字节表示的数据列的长度。</summary>
      <returns>数据列，以字节为单位的长度。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Name">
      <summary>获取数据存储区中的列的名称。</summary>
      <returns>数据存储区中列的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Nullable">
      <summary>获取一个值，该值指示列是否可以为 null 数据存储区中。</summary>
      <returns>true 如果在数据存储区; 列可为 null否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Precision">
      <summary>获取数值数据列中的数字个数。</summary>
      <returns>在数值数据列中的数字个数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.PrimaryKey">
      <summary>获取一个值，该值指示列是否为表的主键的一部分。</summary>
      <returns>true 如果列是表的主键; 的一部分否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Scale">
      <summary>获取数值列中的小数点右侧的数字个数。</summary>
      <returns>数值列中的小数点右侧的数字个数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ConnectionString">
      <summary>获取连接而定义的应用程序连接字符串。</summary>
      <returns>定义用于连接的应用程序连接字符串。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured">
      <summary>获取一个值，该值指示连接信息是否在应用程序的配置文件中。</summary>
      <returns>true 如果在应用程序的配置文件，则中定义连接否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name">
      <summary>获取数据连接的名称。</summary>
      <returns>数据连接的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ProviderName">
      <summary>获取用于访问基础数据存储区的提供程序的名称。</summary>
      <returns>用于访问基础数据存储区的提供程序的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.DataType">
      <summary>获取参数的数据库类型。</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 值之一。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Direction">
      <summary>获取一个值，该值指示参数是仅输入、 输出、 双向参数还是存储的过程返回值参数。</summary>
      <returns>
        <see cref="T:System.Data.ParameterDirection" /> 值之一。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Name">
      <summary>获取参数的名称。</summary>
      <returns>参数的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildColumns">
      <summary>获取属于该关系的子表中列的集合。</summary>
      <returns>一套 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 子表中定义的关系的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildTable">
      <summary>获取引用关系中的子表。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> 表示关系中的子表的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.Name">
      <summary>获取关系的名称。</summary>
      <returns>关系的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ParentColumns">
      <summary>获取从属于两个表之间的关系的父表中列的集合。</summary>
      <returns>一套 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 父表中定义的关系的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Name">
      <summary>获取存储过程的名称。</summary>
      <returns>存储过程的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Owner">
      <summary>获取存储过程的所有者。</summary>
      <returns>存储过程的所有者。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Parameters">
      <summary>获取所需的存储过程参数的集合。</summary>
      <returns>为存储过程的参数的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTable.Relationships">
      <summary>获取为表定义的关系的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> 对象的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Columns">
      <summary>获取定义为表或视图的列的集合。</summary>
      <returns>为表或视图定义的列的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Name">
      <summary>获取数据存储区表或视图的名称。</summary>
      <returns>数据存储区表或视图的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Owner">
      <summary>获取数据存储区表或视图的所有者。</summary>
      <returns>数据存储区表或视图的所有者。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.IDataEnvironment.Connections">
      <summary>获取当前的设计会话中定义的数据连接的集合。</summary>
      <returns>一套 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象表示在当前设计会话中可用的数据连接。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>获取或设置一个值，该值指示是否允许将此项放入一组具有相同的项 <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> 属性值。</summary>
      <returns>true 如果可以对项进行分组;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>获取项的组名称。</summary>
      <returns>一个字符串，表示该项所在的组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>获取项的补充文本。</summary>
      <returns>一个 <see cref="T:System.String" /> ，包含该项目的描述性文本。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>获取此项的文本。</summary>
      <returns>一个 <see cref="T:System.String" /> ，其中包含该项目的显示文本。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>获取可用于存储程序员定义的键/值对的集合的引用。</summary>
      <returns>一个集合，其中实现 <see cref="T:System.Collections.IDictionary" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>获取或设置一个值，该值指示此项是否显示在源代码视图。</summary>
      <returns>true 如果此项出现在源代码视图;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>位于指定索引处的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>获取或设置一个值，该值指示是否创建时应自动将显示智能标记面板。</summary>
      <returns>true 如果应显示面板，当创建所属组件;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>获取与相关的组件 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</summary>
      <returns>对相关的组件 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>位于指定索引处的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>获取的集合 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 与此事件关联的对象。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> ，它表示集合的当前状态。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>获取一个标志，指示是否已添加或删除的集合中的某个元素 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> ，该值指示的更改的类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>获取该对象使用的集合相关联的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象。</summary>
      <returns>
        <see cref="T:System.Object" /> 与托管相关联 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 应出现在其他用户界面上下文中。</summary>
      <returns>true 如果项是在快捷菜单; 中使用否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>获取方法的名称这 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 与相关联。</summary>
      <returns>一个 <see cref="T:System.String" /> ，其中包含关联的方法的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>获取或设置一个组件，它有助于其 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 对象与当前的面板。</summary>
      <returns>相关组件，应具有关联的设计器，用于提供项。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>获取与此项关联的属性的名称。</summary>
      <returns>一个 <see cref="T:System.String" /> ，其中包含关联的属性的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>获取或设置当前面板其项供给的组件。</summary>
      <returns>应具有关联的设计器，它提供的相关组件 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>获取一个指示该智能标记面板是否正在显示或隐藏的标志。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> ，该值指示面板的状态。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>获取与智能标记面板相关联的对象。</summary>
      <returns>
        <see cref="T:System.Object" /> 智能标记面板与相关联。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>获取与设计的组件相关联的所有智能标记的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> ，其中包含关联的设计组件的智能标记。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>获取与设计的组件相关联的所有设计器谓词的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> ，其中包含关联的设计组件的设计器谓词。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>获取 <see cref="T:System.ComponentModel.IContainer" /> 设计图面中的实现。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IContainer" /> 设计图面中的实现。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>获取一个值，该值指示是否 设计时错误列表 正在加载。</summary>
      <returns>true 如果 设计时错误列表 加载; 否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>获取一个值，该值指示当前加载的设计图面。</summary>
      <returns>true 如果当前加载的设计图面;否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>返回加载错误或空集合的集合。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" /> 的加载错误。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>获取服务容器。</summary>
      <returns>在设计图面中包含的设计器提供的所有服务的服务容器。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>获取根设计器的视图。</summary>
      <returns>根设计器的视图。</returns>
      <exception cref="T:System.InvalidOperationException">未加载设计图面、 设计器加载程序不创建根设计器，或设计图面完成的负载，但失败。 详细信息可能位于 <see cref="P:System.Exception.InnerException" />。</exception>
      <exception cref="T:System.NotSupportedException">设计器加载，但它不提供与此设计画面兼容的视图。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />  附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" />  已被释放。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>获取设计的总数显示在 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</summary>
      <returns>中的元素总数 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>指定索引处获取的设计图面。</summary>
      <param name="index">设计图面来返回索引。</param>
      <returns>指定索引处的设计图面。</returns>
      <exception cref="T:System.NotSupportedException">通过指定的设计图面 <paramref name="index" /> 不受支持。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" /> 属性。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中包含的元素数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" /> 属性。</summary>
      <returns>如果对 true 的访问是同步的（线程安全），则为 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" /> 属性。</summary>
      <returns>可用于同步对 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>获取正在创建的设计图面。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 正在创建。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>获取或设置活动设计器。</summary>
      <returns>活动设计器。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>获取设计图面的集合。</summary>
      <returns>当前承载的设计图面管理器的设计图面的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>获取设计图面管理器的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</summary>
      <returns>设计图面管理器的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>获取数组的 <see cref="T:System.Exception" /> 这些对象表示的异常的集合。</summary>
      <returns>
        <see cref="T:System.Exception" /> 表示异常的集合的数组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <summary>获取或设置调试输出的缩进级别。</summary>
      <returns>调试输出缩进级别。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <summary>获取集合的跟踪侦听器，用于监视设计时调试输出。</summary>
      <returns>跟踪侦听器集合 </returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>获取加载设计器时，出现错误的集合。</summary>
      <returns>加载设计器时，出现错误的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>获取一个值，该值指示设计器加载是否成功。</summary>
      <returns>true 如果设计器加载成功，则否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>获取导致更改的类型 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 被引发。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> 导致 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 被引发。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>获取已添加、 移除或更改的命令。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 添加、 删除或更改。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>获取当前可用的设计器谓词的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 当前可用的设计器谓词。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>获取项目的目标框架。</summary>
      <returns>项目目标框架。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>获取加载程序宿主。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 传递到 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> 方法。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放了 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>获取一个值，该值指示当前设计器加载程序是否加载设计图面。</summary>
      <returns>true 如果设计器加载程序在设计图面，则当前正在加载否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>获取或设置一个值，该值指示设计器是否已被修改。</summary>
      <returns>true 如果设计器已被修改;否则为 false,，</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>获取或设置序列化管理器加载程序使用此属性提供程序。</summary>
      <returns>一个对象，其属性，则为其提供给序列化管理器。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>获取一个值，该值指示是否重新加载已在排队等候。</summary>
      <returns>true, 如果调用 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 排入队列重新加载请求; 否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>获取 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> 将使用此设计器加载程序。</summary>
      <returns>
        <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> 此设计器加载程序将使用</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>获取要与此设计器加载程序一起使用的类型解析服务。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> 解析类型时，将使用 CodeDOM 序列化程序。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>获取或设置与此异常相关联的错误的行信息。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeLinePragma" /> ，该值指示错误的行信息。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>获取或设置此序列化管理器的容器。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IContainer" /> 序列化管理器将向其添加组件。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器都提供一个活动的序列化会话。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>获取序列化或反序列化过程中发生的错误的列表。</summary>
      <returns>序列化或反序列化期间发生的错误的列表。</returns>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>获取或设置一个值，该值指示是否 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法应检查是否存在具有给定名称的容器中。</summary>
      <returns>true 如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将传递给定的组件名称; false 如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将检查是否存在具有给定名称的容器中。 默认值为 true。</returns>
      <exception cref="T:System.InvalidOperationException">从上序列化会话中更改此属性。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>获取用于向序列化管理器提供属性的对象 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性。</summary>
      <returns>应该用于向序列化管理器提供属性的对象 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>获取或设置一个标志，指示是否 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将始终创建一种类型的新实例。</summary>
      <returns>true 如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将返回现有的实例; false 如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将创建一种类型的新实例。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器都提供一个活动的序列化会话。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>获取此序列化会话上下文堆栈。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> 存储数据。</returns>
      <exception cref="T:System.InvalidOperationException">此属性是在序列化会话之外访问。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>实现 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> 包含要进行序列化的属性。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>获取或设置一个标志，指示是否 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法验证是否匹配的名称引用同一类型。</summary>
      <returns>true 如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 验证类型; 否则为 false 如果不是。 默认值为 true。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器都提供一个活动的序列化会话。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>获取此上下文中表示的表达式。</summary>
      <returns>此上下文中表示的表达式。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>获取 <see cref="T:System.Type" /> 的表达式。</summary>
      <returns>该表达式的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>获取拥有此表达式的对象。</summary>
      <returns>拥有此表达式的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>获取一个表达式，表达式的预设的值。</summary>
      <returns>此表达式的预设的值或 null 如果没有分配。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>获取给定的所有者的语句集合。</summary>
      <param name="statementOwner">语句集合的所有者。</param>
      <returns>语句集合 <paramref name="statementOwner" />, ，或 null 如果 <paramref name="statementOwner" /> 不在表中。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>获取表示对象图中的根对象的表达式。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 表示对象图中的根对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>获取对象图的根对象。</summary>
      <returns>对象图的根对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>获取此上下文绑定的成员。</summary>
      <returns>此上下文中所绑定到的成员或 null 如果上下文绑定到对象的所有成员。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>获取一组语句上下文所提供的语句。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> 语句上下文所包含语句提供。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>启用或禁用 <see cref="T:System.ComponentModel.Design.UndoEngine" />。</summary>
      <returns>true 如果 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 启用; 否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>该值指示是否正在执行撤消操作。</summary>
      <returns>true 如果撤消操作正在进行;否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>获取一个值，该值指示是否 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 不包含事件。</summary>
      <returns>true 如果 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 不包含事件; 否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>获取 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>获取父 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />。</summary>
      <returns>
        <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> 此 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 附加。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.CodeProvider">
      <summary>获取或设置 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象。</summary>
      <returns>
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，它提供用于生成代码和管理的一种编程语言编译的代码生成和代码编译接口。 代码生成器可以用于在特定语言中，生成代码和代码编译器可以用于将代码编译为程序集。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ContainerParameterType">
      <summary>获取或设置对象，该查询将填充对象的类型。</summary>
      <returns>对象，该查询将填充对象的类型。 该类型将为 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.DataSetClassName">
      <summary>获取或设置要填充的类型化数据集的类型名称。</summary>
      <returns>一个字符串，表示要填充的类型化数据集的类型名称。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.IsGetMethod">
      <summary>获取或设置一个布尔值，指定是否需要返回生成的签名 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <returns>一个布尔值，指定是否需要返回生成的签名 <see cref="T:System.Data.DataTable" /> 对象 ︰ True 如果生成的签名需要返回数据表，否则 False。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.PagingMethod">
      <summary>获取或设置一个布尔值，指定方法是否支持分页。</summary>
      <returns>一个布尔值，指定方法是否支持分页 ︰ True 方法支持分页; 如果 False 如果不是。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ParameterOption">
      <summary>获取或设置要用作参数的类型类别。</summary>
      <returns>一个 ParameterGenerationOption 值，该值指定要用作参数的类型类别 ︰ <see cref="F:System.Data.Design.ParameterGenerationOption.ClrTypes" /> （默认值）， <see cref="F:System.Data.Design.ParameterGenerationOption.SqlTypes" />, ，或 <see cref="F:System.Data.Design.ParameterGenerationOption.Objects" />。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.TableClassName">
      <summary>获取或设置要填充的类型化表的类型名称。</summary>
      <returns>指示要填充的类型化表的类型名称的字符串。</returns>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies">
      <summary>获取或设置在类型化数据集引用的程序集的集合。</summary>
      <returns>包含数据集中的所有引用程序集的集合。</returns>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList">
      <summary>获取生成的错误的动态列表。</summary>
      <returns>错误列表中。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Id">
      <summary>获取 ID 特性的客户端脚本元素的值。</summary>
      <returns>ID 值 script 元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Language">
      <summary>获取 language 特性的客户端脚本元素的值。</summary>
      <returns>为指定的语言名称 language 属性中 script 元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Source">
      <summary>获取 src 特性的客户端脚本元素的值。</summary>
      <returns>为指定的源代码文件的路径 src 属性中 script 元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Text">
      <summary>获取客户端脚本元素中包含的脚本语句。</summary>
      <returns>中包含的脚本语句 script 元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Type">
      <summary>获取 type 特性的客户端脚本元素的值。</summary>
      <returns>MIME 类型的名称与关联 script 元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize">
      <summary>获取一个值，该值指示是否控件可以在设计时调整大小。</summary>
      <returns>true, 如果可以调整控件的大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption">
      <summary>获取在设计时控件显示的标题。</summary>
      <returns>用于控制框架标题在设计时，如果控件具有设计时标题; 该字符串否则为为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle">
      <summary>获取在设计时应用于控件框架的样式。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" /> 在设计时控件框架。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.NoWrap">
      <summary>获取一个值，指定是否使用 HTML nowrap 表上的属性。</summary>
      <returns>true 若要使用 HTML nowrap 属性表; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.ContentPlaceHolderID">
      <summary>获取的 ID <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 与当前的内容关联的控件。</summary>
      <returns>ID <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 与当前的内容关联。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultContent">
      <summary>获取默认 HTML 标记的内容。</summary>
      <returns>一个包含 HTML 标记的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultDesignTimeHtml">
      <summary>获取用于在设计时表示的内容的 HTML 标记。</summary>
      <returns>一个包含 HTML 标记的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ActionLists">
      <summary>获取控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，其中包含 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 控件设计器项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>获取一个值，该值指示是否可以在设计时环境中调整控件的大小。</summary>
      <returns>true, 如果可以调整控件的大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象，其中包含该控件的预定义的方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled">
      <summary>获取一个值，该值包含区域关联的控件是否支持数据绑定。</summary>
      <returns>true, 如果该控件的容器支持数据绑定;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignerState">
      <summary>获取用于在设计时保持关联控件的数据的对象。</summary>
      <returns>一个 <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> 实现的属性 <see cref="T:System.Collections.IDictionary" /> ，并使用 <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> 若要在设计时保持关联控件的状态数据。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView">
      <summary>获取控件设计器的视图控件对象。</summary>
      <returns>null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>获取一个值，该值指示是否必须设计宿主完成加载之前 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 可以调用方法。</summary>
      <returns>true, 如果必须在完成之前加载 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法可以调用; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode">
      <summary>获取一个值，该值指示控件是否处于模板模式时是否隐藏关联控件的属性。</summary>
      <returns>true, 如果在模板模式，则该控件时，会隐藏关联控件的属性否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>获取或设置控件的 ID 字符串。</summary>
      <returns>控件的 ID 字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.InTemplateMode">
      <summary>获取一个值，该值指示控件是否在任何一模板中查看或编辑模式下设计宿主中。<see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> 属性是只读的。</summary>
      <returns>true, 如果该控件是在查看或编辑模式，则任一模板否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>获取或设置一个值，指示 Web 服务器控件是否已标记为已更改。</summary>
      <returns>true, 如果自上次保存或加载; 以来已更改 Web 服务器控件否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>获取或设置一个值，指示该控件的属性在设计时中是否只读的。</summary>
      <returns>true, 如果该控件的属性在设计时; 是只读的否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.RootDesigner">
      <summary>获取包含关联的控件的 Web 窗体页控件设计器。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 可在包含该控件的 Web 窗体上的访问组件的设计时使用的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Tag">
      <summary>获取一个表示关联控件的 HTML 标记元素的对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 对象，表示关联控件的 HTML 标记元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的集合。 默认值为空 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记。</summary>
      <returns>true, 如果控件设计器使用该控件的临时副本进行设计时预览，则为否则为 false, ，如果控件设计器使用 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 控件设计器中包含的控件属性。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControl">
      <summary>获取或设置可用于预览的设计时 HTML 标记的 Web 服务器控件。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Control" /> 对象由基本类用来生成设计时 HTML 标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated">
      <summary>获取或设置一个值，该值指示是否 View 已创建控件以显示在设计图面上。</summary>
      <returns>true, 如果要在设计图面，则上查看已创建控件否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Visible">
      <summary>获取一个值，该值指示控件在设计时是否可见。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesignerState.Item(System.String)">
      <summary>表示标识由给定的键，控件设计器的状态集合中的一个元素。</summary>
      <param name="key">要设置或检索状态集合中的项的名称。</param>
      <returns>标识的对象 <paramref name="key" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.DataType">
      <summary>获取存储在数据字段的数据类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 表示的数据的数据字段类型的对象包含。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Identity">
      <summary>获取一个值，该值的数据字段的值是否自动递增每个新行添加到表或视图。</summary>
      <returns>true 如果 <see cref="P:System.Web.UI.Design.DataSetFieldSchema.DataType" /> 自动为数字，并且此列会递增的值，如新行添加到 <see cref="T:System.Data.DataTable" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.DataColumn" /> 是否为只读。</summary>
      <returns>true 如果数据字段是只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsUnique">
      <summary>获取一个值，该值指示是否要求中的数据字段的值是唯一的。</summary>
      <returns>true 如果数据字段中的数据是唯一的。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Length">
      <summary>获取一个值，该值可以存储在数据字段的数据的大小。</summary>
      <returns>列可以存储的字节数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Name">
      <summary>获取数据字段的名称。</summary>
      <returns>数据字段的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Nullable">
      <summary>获取一个值，该值指示是否可以接受的数据字段 null 值。</summary>
      <returns>true 如果数据字段可以接受 null 值; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Precision">
      <summary>获取用于表示数据字段中的数字值的位的最大数目。</summary>
      <returns>此属性始终返回 -1。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.PrimaryKey">
      <summary>获取一个值，该值指示数据字段是否包含表或视图的主键。</summary>
      <returns>true 如果数据字段在主键;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Scale">
      <summary>获取数据字段中的数值解析成的小数的位数。</summary>
      <returns>此属性始终返回-1。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetViewSchema.Name">
      <summary>获取视图使用的名称及其 <see cref="P:System.Data.DataTable.TableName" /> 属性。</summary>
      <returns>视图的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.ActionLists">
      <summary>获取用于在设计时创建操作列表菜单项的列表。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器操作列表项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> 可以调用方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> 可被调用; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 可以调用方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 可被调用; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents">
      <summary>获取一个值，该值指示是否 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 事件或 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法时发生。</summary>
      <returns>true 如果事件被取消。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Name">
      <summary>获取名称 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Style">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> 对象，它由 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象用于呈现关联控件的设计时预览。</summary>
      <returns>一个对象，可供 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象用于呈现关联控件的设计时预览。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count">
      <summary>获取的数 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 集合中的对象。</summary>
      <returns>数 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 集合中的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 集合中的指定索引处的对象。</summary>
      <param name="index">从零开始的索引 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 要获取或设置集合中。</param>
      <returns>位于集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。- 或 -<paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.PreviewSize">
      <summary>获取控件的最大外部尺寸，因为它将在运行时出现。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" /> 结构，其中包含的高度和宽度的设计图面上的控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象的访问。</summary>
      <returns>可用于同步对 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#Count">
      <summary>获取集合中包含的元素的数目时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
      <returns>集合中项的数目。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#IsSynchronized">
      <summary>获取一个值，该值指示对集合的访问是否同步 （线程安全） 时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
      <returns>true, 如果 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 同步; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsFixedSize">
      <summary>获取一个值，该值指示集合是否具有固定大小时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此方法的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>始终 true, ，指示不能替换或删除集合。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Item(System.Int32)">
      <summary>获取位于指定的元素索引时 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口。</summary>
      <param name="index">索引。</param>
      <returns>指定索引处的元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatStyle.VerticalAlign">
      <summary>获取或设置关联控件的内容的垂直对齐方式。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> 值之一。 默认值为 NotSet。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanDelete">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.DataSourceView" /> 对象，该程序与当前对象 <see cref="T:System.Web.UI.DataSourceControl" /> 对象支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法是受支持; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanInsert">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.DataSourceView" /> 对象，该程序与当前对象 <see cref="T:System.Web.UI.DataSourceControl" /> 对象支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法是受支持; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.DataSourceView" /> 对象，该程序与当前对象 <see cref="T:System.Web.UI.DataSourceControl" /> 对象支持的数据检索到的分页 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法。</summary>
      <returns>true 如果检索的数据进行分页 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法是受支持; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.DataSourceView" /> 对象，该程序与当前对象 <see cref="T:System.Web.UI.DataSourceControl" /> 对象支持检索数据行，而不是数据本身的总行数。</summary>
      <returns>如果支持检索数据的总行数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanSort">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.DataSourceView" /> 对象，该程序与当前对象 <see cref="T:System.Web.UI.DataSourceControl" /> 对象支持基础数据源的排序的视图。</summary>
      <returns>如果支持基础数据源的排序视图，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.DataSourceView" /> 对象，该程序与当前对象 <see cref="T:System.Web.UI.DataSourceControl" /> 对象支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法是受支持; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.DataSourceDesigner">
      <summary>获取创建此设计器的引用 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 控件。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> 对象时提供当前 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 在创建实例。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Name">
      <summary>获取的视图时提供的名称的此实例 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 类创建的。</summary>
      <returns>视图的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Schema">
      <summary>获取一个架构，该架构描述此视图对象所表示的数据源视图。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.DataSourceDesigner">
      <summary>获取关联的设计器。</summary>
      <returns>父 <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Path">
      <summary>获取对块的这些数据在视图中显示的路径。</summary>
      <returns>提供在创建时的路径 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Schema">
      <summary>获取描述关联控件的数据源视图的架构。</summary>
      <returns>此实现始终返回 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Designer">
      <summary>获取关联的设计器组件。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Name">
      <summary>获取对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Properties">
      <summary>获取对象的属性。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 对象，包含对象的属性和它们的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Description">
      <summary>获取或设置设计器区域的说明。</summary>
      <returns>文本说明的设计器区域。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.DisplayName">
      <summary>获取或设置设计器区域的友好显示名称。</summary>
      <returns>设计器区域的文本显示名称。 默认值为空字符串("")。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.EnsureSize">
      <summary>获取或设置一个值，该值指示是否将由设计宿主在设计器区域上显式设置区域大小。</summary>
      <returns>true, 如果设计宿主应在设计器区域; 上设置大小否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Highlight">
      <summary>获取或设置一个值，该值指示是否突出显示在设计图面上的设计器区域。</summary>
      <returns>true, 如果可视设计器中应该突出显示在设计图面，则该设计器区域否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selectable">
      <summary>获取或设置一个值，该值指示是否可以由用户在设计图面上选择设计器区域。</summary>
      <returns>true, 如果可由用户在设计图面，则选择设计器区域否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selected">
      <summary>获取或设置一个值，该值在设计图面上当前是否选择了设计器区域。</summary>
      <returns>true, 如果在设计图面中; 上当前选定的设计器区域否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.UserData">
      <summary>获取或设置要与设计器区域关联的可选的用户数据。</summary>
      <returns>一个包含存储为设计器区域的用户数据的对象。 默认值为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Count">
      <summary>获取的数 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 集合中的对象。</summary>
      <returns>数 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 集合中的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsFixedSize">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象具有固定的大小。</summary>
      <returns>true, 如果不能通过添加或删除项目; 更改集合的大小否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象是只读的。</summary>
      <returns>true, 如果集合不能更改;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsSynchronized">
      <summary>获取一个值，该值指示对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象的访问是否同步（线程安全）。</summary>
      <returns>true, 如果访问 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 同步; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 集合中的指定索引处的对象。</summary>
      <param name="index">从零开始的索引 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 要获取或设置集合中。</param>
      <returns>位于集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 小于零。- 或 -<paramref name="value" /> 大于 <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Owner">
      <summary>获取拥有该设计器区域集合的控件设计器。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ControlDesigner" /> ，它表示具有控件设计器 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象的访问。</summary>
      <returns>可用于同步对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>集合中的元素数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>true, 如果同步对集合的访问;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>false, 如果该集合的动态增加大小随着添加新的对象;否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>
        <see cref="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly" /> 属性的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <param name="index">要在集合中获取的对象的从零开始的索引。</param>
      <returns>集合中的指定索引处的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location">
      <summary>获取在用户单击了该控件中的位置。</summary>
      <returns>
        <see cref="T:System.Drawing.Point" /> 确定被单击的区域中的位置。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region">
      <summary>如果有的话，请获取被单击的设计器区域。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> Click 事件适用于，或 null 如果用户不单击了任何区域。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.AllowedOnMobilePages">
      <summary>获取或设置指定是否将该属性允许在移动页面上的指令的特性。</summary>
      <returns>true 如果该属性允许在移动页面; 例如 ︰否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.BuilderType">
      <summary>获取或设置与属性关联的类型。</summary>
      <returns>不与属性关联的类型。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.Culture">
      <summary>获取或设置一个区域性值是否是与属性关联。</summary>
      <returns>true 一个区域性值与关联属性;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.RenameType">
      <summary>获取或设置一个值，表示已重命名该特性的类型。</summary>
      <returns>表示该特性的重命名的类型的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.ServerLanguageExtensions">
      <summary>获取或设置一个值，该值指示是否可以使用服务器语言扩展。</summary>
      <returns>true 如果服务器语言扩展才会有效。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.ServerLanguageNames">
      <summary>获取或设置一个值，该值指示服务器语言名称是否可用。</summary>
      <returns>true 如果服务器的语言名称才会有效。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.SchemaElementNameAttribute.Value">
      <summary>获取指令的特性名称值。</summary>
      <returns>指令的特性名称值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.Content">
      <summary>获取或设置区域的内容的 HTML 标记。</summary>
      <returns>表示内容的 HTML 标记 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly">
      <summary>获取或设置一个值，指示该区域是否可以接受仅 Web 服务器控件。</summary>
      <returns>true 如果该区域可以包含仅 Web 服务器控件;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding">
      <summary>获取或设置一个值，指示该区域是否可以绑定到数据源。</summary>
      <returns>true 如果 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 内容支持绑定到数据源; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix">
      <summary>获取标识由表达式编辑器实现支持的表达式字符串的表达式前缀。</summary>
      <returns>一个字符串，表示为从派生类所支持的表达式前缀 <see cref="T:System.Web.UI.Design.ExpressionEditor" />; 否则为空字符串 ("")，如果表达式编辑器不具有关联的表达式前缀。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示是否为有效的表达式字符串。</summary>
      <returns>true, 如果表达式字符串是否有效，则为否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
      <summary>获取表达式编辑器表使用的服务提供程序实现。</summary>
      <returns>
        <see cref="T:System.IServiceProvider" />, 通常提供设计宿主，可用来获取其他设计时服务。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.ActionLists">
      <summary>获取控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> 可以调用方法。</summary>
      <returns>此实现始终返回 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可以调用方法。</summary>
      <returns>此实现始终返回 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents">
      <summary>指示是否已禁用数据源事件。</summary>
      <returns>true 如果 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> 或 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> 事件已被禁用; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Behavior">
      <summary>获取或设置与设计器关联的 DHTML 行为。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> 设计器与该键相关联。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings">
      <summary>获取当前控件的数据绑定集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.DataBindingCollection" /> ，其中包含当前控件的数据绑定。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement">
      <summary>获取表示与关联的控件的设计时对象 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 设计图面上的对象。</summary>
      <returns>表示与关联的控件的设计时对象 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Expressions">
      <summary>在设计时获取用于当前控件的表达式绑定。</summary>
      <returns>
        <see cref="T:System.Web.UI.ExpressionBindingCollection" /> ，其中包含当前控件中的属性设置字符串的表达式。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize">
      <summary>获取或设置一个值，该值指示是否在序列化期间在当前的设计文档的代码隐藏文件中创建该控件是字段声明。</summary>
      <returns>true, 如果应创建一个声明;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IContentResolutionService.ContentDefinitions">
      <summary>获取 <see cref="T:System.Web.UI.Design.ContentDefinition" /> 在母板页中标识的内容占位符的对象。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> 包含标识符和 <see cref="T:System.Web.UI.Design.ContentDefinition" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>获取设计器的设计时视图控件对象。</summary>
      <returns>设计器视图控件对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>获取或设置设计器的控件的设计时 HTML。</summary>
      <returns>在设计时用于设置控件的格式的 HTML。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerTag.IsDirty">
      <summary>获取一个值，该值指示已更改属性或标记的内容。</summary>
      <returns>true 如果标记已更改;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.ContainingRegion">
      <summary>如果有的话，请获取包含关联的控件的设计器区域。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象关联的控件是否包含在设计器区域; 否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.NamingContainerDesigner">
      <summary>如果有的话，请获取设计器组件关联控件的命名容器。</summary>
      <returns>表示关联的控件; 的命名容器的设计器组件的 IDesigner 对象否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions">
      <summary>获取一个值，该值指示是否支持设计器区域。</summary>
      <returns>true 如果设计器区域受支持;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema">
      <summary>获取一个值，该值指示提供程序是否可以刷新架构。</summary>
      <returns>true, 如果可以刷新架构。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema">
      <summary>获取设计器的当前架构对象。</summary>
      <returns>设计器的的当前架构对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> 可以调用方法。</summary>
      <returns>true 如果基础数据源具有一个配置向导，可以使用启动 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> 方法; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可以调用方法。</summary>
      <returns>true 如果基础数据源可以刷新其架构;，否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType">
      <summary>获取存储在字段中的数据类型。</summary>
      <returns>一个 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Identity">
      <summary>获取一个值，该值指示字段的值是否自动递增每个新行。</summary>
      <returns>true 如果该字段的 <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> 自动为数字，并且基础字段为增量，因为新行添加; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsReadOnly">
      <summary>获取一个值，该值指示字段是否可编辑。</summary>
      <returns>true 如果此字段为只读的;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsUnique">
      <summary>获取一个值，该值指示是否要求的字段中值是唯一的。</summary>
      <returns>true 如果字段中的数据必须是唯一的。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Length">
      <summary>获取一个值，该值可以在字段中存储的数据的大小。</summary>
      <returns>该字段可以存储的字节数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Name">
      <summary>获取字段的名称。</summary>
      <returns>字段的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Nullable">
      <summary>获取一个值，该值指示字段是否可以接受 null 值。</summary>
      <returns>true 如果该字段可以接受 null 值; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Precision">
      <summary>获取用于表示数值的字段中的位的最大数目。</summary>
      <returns>用于表示字段的值，如果最大位数 <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> 该字段的属性表示为数值类型。 如果未实现此属性，则应返回-1。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.PrimaryKey">
      <summary>获取一个值，该值指示字段是否为主键。</summary>
      <returns>true 如果该字段正在主键;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Scale">
      <summary>获取数字值的字段中解析成的小数的位数。</summary>
      <returns>如果 <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> 该字段的属性表示为数值类型，则返回的值解析成，否则的小数位数 -1。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceViewSchema.Name">
      <summary>获取视图的名称。</summary>
      <returns>视图的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IFolderProjectItem.Children">
      <summary>如在设计宿主中的项目文件夹中获取项的集合 Visual Studio 2005。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 包含的设计宿主中的项目文件夹的项目。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> 可以调用方法。</summary>
      <returns>true 如果基础数据源具有一个配置向导，可以使用启动 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />, ，否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可以调用方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可被调用; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>获取或设置该行为与之关联的设计器。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 行为相关联。<see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> 接口已废弃不用。 使用 <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 和 <see cref="T:System.Web.UI.Design.IControlDesignerView" /> 等效控件设计器功能的接口。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>获取设计器相关联的元素。</summary>
      <returns>设计器相关联的对象。<see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> 接口已废弃不用。 使用 <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 和 <see cref="T:System.Web.UI.Design.IControlDesignerView" /> 等效控件设计器功能的接口。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>获取要在所选内容对话框窗口中显示的标题。</summary>
      <returns>要在所选内容对话框窗口中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>获取编辑器的文件名称筛选器字符串。 此字符串用于确定显示在对话框中的文件列表中的项。</summary>
      <returns>可用来进行筛选对话框中的文件列表筛选器字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.AppRelativeUrl">
      <summary>获取相对于设计宿主项的 URL。</summary>
      <returns>相对 URL。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Name">
      <summary>获取项名。</summary>
      <returns>项的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Parent">
      <summary>如果有的话，请获取对包含的项的引用。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IProjectItem" />, ，如果当前项包含在另一个项; 否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.PhysicalPath">
      <summary>获取项目项的路径。</summary>
      <returns>项的路径。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>获取编辑框的样式。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" /> 表示编辑框的 Web 服务器控件样式特性。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>获取或设置控件的初始高度。</summary>
      <returns>控件的初始高度。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>获取或设置控件的初始宽度。</summary>
      <returns>控件的初始宽度。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>获取编辑框的名称。</summary>
      <returns>编辑框的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>获取一组要使用的模板的名称。</summary>
      <returns>模板名称的数组。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>获取控件的模板样式。</summary>
      <returns>一个数组 <see cref="T:System.Web.UI.WebControls.Style" /> 表示控件的模板样式的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>获取或设置在调用模板的谓词。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 调用模板。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>获取一个值，该值指示服务是否支持嵌套模板编辑。</summary>
      <returns>如果服务支持嵌套模板编辑，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IWebApplication.RootProjectItem">
      <summary>获取设计宿主中的根项目项。</summary>
      <returns>设计宿主中的根项目项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>获取文档所在的 URL。</summary>
      <returns>文档所在位置，该 URL 或 null 如果文档没有关联的 URL。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>获取一个值，该值指示是否正在加载文档服务。</summary>
      <returns>true 如果正在加载文档服务;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Caption">
      <summary>获取编辑器对话框的标题。</summary>
      <returns>设计时对话框中的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Filter">
      <summary>获取文件筛选器字符串对话框中 （如"*.txt")。</summary>
      <returns>在设计时对话框中选择文件筛选器。</returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Caption">
      <summary>获取要在所选内容对话框中显示的标题。</summary>
      <returns>要在所选内容对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Filter">
      <summary>获取编辑器中，用来筛选显示在 URL 选择对话框中的项的 URL 筛选选项。</summary>
      <returns>表示一个或多个 URL 筛选选项用于对话框中的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey">
      <summary>获取或设置与项目的全局资源文件夹中的资源的文件名匹配的密钥。</summary>
      <returns>全局资源文件夹中的资源文件的键。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示资源表达式字符串是否有效。</summary>
      <returns>true 如果资源表达式字符串是否有效，则为否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey">
      <summary>获取或设置资源，将其用作键以查找资源值的名称。</summary>
      <returns>资源的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示是否 RouteUrl 表达式字符串是否有效。</summary>
      <returns>true 如果 RouteUrl 表达式字符串是否有效; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName">
      <summary>获取或设置一个 URL 是为生成的路由的名称。</summary>
      <returns>URL 是为生成的路由的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues">
      <summary>获取或设置的 URL 参数名称和要用于从一个路由生成一个 URL 的值。</summary>
      <returns>URL 参数名称和要用于从一个路由生成 URL 的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示是否 RouteValue 表达式字符串是否有效。</summary>
      <returns>true 如果 RouteValue 表达式字符串是否有效; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue">
      <summary>获取或设置要计算的 URL 参数的名称 RouteValue 表达式。</summary>
      <returns>要计算的 URL 参数的名称 RouteValue 表达式。</returns>
    </member>
    <member name="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl">
      <summary>获取一个值，该值指示控件设计器是否在设计时需要临时预览控件。</summary>
      <returns>true 如果设计器将关联控件的临时副本用于设计时预览，则为 false 如果设计器使用的一个实例 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 设计器中包含的控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>获取活动的模板编辑框。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> ，它是当前处于活动状态的模板编辑框。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>获取一个值，该值指示此设计器将允许查看或编辑的模板。</summary>
      <returns>true 如果设计器将允许查看或编辑模板;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled">
      <summary>获取一个值，该值指示设计器是否允许数据绑定。</summary>
      <returns>true, 如果使用设计器，数据绑定，则否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>获取一个值，该值指示设计器的文档是否处于模板模式。</summary>
      <returns>true 如果设计器的文档是在模板模式下;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups">
      <summary>获取每个包含模板定义的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 元素集合。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.IsSingleInstanceTemplate">
      <summary>获取或设置是否模板只发生一次每个实例包含的控件，如 header 模板，还可以根据可用的数据，例如 i 显示很多时候或tem 模板。</summary>
      <returns>true 如果该模板仅出现一次;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.SupportsDataBinding">
      <summary>获取或设置一个值，指示模板是否可以绑定到数据源。</summary>
      <returns>true 如果由区域所表示的模板可以绑定到数据源，则否则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">尝试设置此属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition">
      <summary>获取 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 描述由区域引用该模板对象。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.AllowEditing">
      <summary>获取一个值，该值指示模板是否允许编辑其内容。</summary>
      <returns>true 如果允许编辑;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Content">
      <summary>获取或设置表示模板的内容的 HTML 标记。</summary>
      <returns>模板的内容的 HTML 标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly">
      <summary>检索一个值，该值指示模板是否应将内容分发到 Web 服务器控件，限制中设置 <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> 构造函数。 此属性是只读的。</summary>
      <returns>true 如果则内容局限于 Web 服务器控件;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Style">
      <summary>检索应该应用于该模板中设置的样式 <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> 构造函数。 此属性是只读的。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding">
      <summary>检索或设置一个值，指示模板是否支持数据绑定。</summary>
      <returns>true 如果模板支持数据绑定，则否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject">
      <summary>检索在模板所在的组件。 此属性是只读的。</summary>
      <returns>作为组件时设置此 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 已创建。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName">
      <summary>检索设计宿主应显示在属性网格中的模板的属性名称。</summary>
      <returns>它与模板的名称应出现在 属性 设计宿主的列表。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
      <summary>获取一个值，该值指示服务是否支持嵌套模板编辑。</summary>
      <returns>如果服务支持嵌套模板编辑，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>获取该谓词的索引或其他用户数据。</summary>
      <returns>用于谓词的索引或用户数据。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupName">
      <summary>获取组的名称。</summary>
      <returns>组的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupStyle">
      <summary>获取组当前样式。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.Style" /> 为组设置; 否则为如果 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.IsEmpty">
      <summary>获取一个值，该值指示在该组中是否有任何模板。</summary>
      <returns>true 如果相应的组; 没有任何模板否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.Templates">
      <summary>获取组中的所有模板定义的数组。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象数组。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Count">
      <summary>获取的数 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 集合中的对象。</summary>
      <returns>数 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 集合中的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 集合中的指定索引处的对象。</summary>
      <param name="index">从零开始的索引 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 要获取或设置集合中。</param>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 在 <paramref name="index" /> 集合中。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 小于零。- 或 -<paramref name="value" /> 大于 <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 中的元素的数量。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>false, 如果访问 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 不是同步 （线程安全）; 否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>要使用对访问进行同步的对象 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>false, 如果 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 随着新对象进行添加; 否则为动态地增加 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>false, 如果 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 可以添加、 修改和删除; 否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参阅 <see cref="T:System.Collections.IList" /> 类。</summary>
      <param name="index">要在集合中获取的对象的从零开始的索引。</param>
      <returns>在对象 <paramref name="index" /> 集合中。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup">
      <summary>获取进入模板编辑模式时创建的模板组。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 如果您输入的模板编辑模式下使用新的模板; 否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>获取要在所选内容对话框中显示的标题。</summary>
      <returns>要在所选内容对话框中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>获取编辑器的文件名称筛选器字符串。 这用于确定显示在对话框中的文件列表中的项。</summary>
      <returns>一个字符串，包含有关的文件筛选对话框中的可用选项的信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>获取要使用的 URL 生成器的选项。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> ，该值指示要使用的 URL 生成器的选项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ActionLists">
      <summary>获取用户控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> ，其中包含控制设计器操作列表标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.AllowResize">
      <summary>获取一个值，该值指示是否可以重设用户控件的大小。</summary>
      <returns>false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Caption">
      <summary>获取对话框中的标题。</summary>
      <returns>编辑器窗口的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Filter">
      <summary>获取用于确定显示在对话框中的文件列表中的项的文件名称筛选器字符串。</summary>
      <returns>在对话框中，如"*.txt"可用的文件列表中筛选出一个字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventArgs">
      <summary>获取与引发事件的操作相关联的事件参数。</summary>
      <returns>
        <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> 包含特定于事件的类型的其他事件数据。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventType">
      <summary>获取引发该事件的操作的类型。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ViewEvent" /> ，指定引发事件的操作的类型。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.Region">
      <summary>获取该事件适用于的设计器区域。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerRegion" /> 操作适用的。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Content">
      <summary>获取设计时 HTML 标记。</summary>
      <returns>在设计时显示的 HTML 标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Regions">
      <summary>获取一套 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 在设计时对象。</summary>
      <returns>区域的集合。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Visible">
      <summary>获取一个值，该值指示控件是否可见。</summary>
      <returns>true 如果控件呈现;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.DataFile">
      <summary>实现设计器的属性，以隐藏 <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> 关联控件的属性。</summary>
      <returns>一个 <see cref="T:System.String" /> ，其中包含名称和数据文件的路径与 <see cref="T:System.Web.UI.WebControls.AccessDataSource" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource">
      <summary>获取或设置的值 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 关联控件的属性。</summary>
      <returns>关联控件所用的数据绑定表达式派生自 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSourceID">
      <summary>获取或设置的值 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 基础属性 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象。</summary>
      <returns>ID <see cref="T:System.Web.UI.DataSourceControl" /> 关联与基础 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>获取或设置关联控件的数据字段的值。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> 关联控件的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>获取或设置关联控件的数据成员字段的值。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> 关联控件的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>获取或设置关联控件的数据源属性的值。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 关联控件的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceDesigner">
      <summary>获取数据源设计器时进行数据绑定选择的一个。</summary>
      <returns>关联控件的数据源的设计器。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceID">
      <summary>获取或设置数据源 ID 属性的设计器的版本和用来隐藏关联控件的相应属性。</summary>
      <returns>一个 <see cref="T:System.String" /> 是关联控件的数据源 ID。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignerView">
      <summary>获取绑定到关联的控件的数据源的默认视图。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 表示数据源的默认视图。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />。</summary>
      <returns>true 如果可以刷新架构。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BulletedListDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本，而不是与设计器来生成设计时标记关联的实际控件。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.AutoFormats">
      <summary>获取所有 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象可用于该控件。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象，其中包含 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象可用于该控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.ActionLists">
      <summary>获取此设计器的操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AllowResize">
      <summary>指定是否 <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> 控件允许调整大小。</summary>
      <returns>true 如果控件允许用户调整大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AutoFormats">
      <summary>获取集合中将显示的自动套用格式方案 自动套用格式 对话框。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.RenderOuterTable">
      <summary>指定是否 <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> 控件使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>true 如果该控件使用外部表容器来应用内联 CSS 样式规则;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.TemplateGroups">
      <summary>获取与此设计器关联的控件模板的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 个关联的每个模板包含一个元素 <see cref="T:System.Web.UI.WebControls.ChangePassword" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本，而不是与设计器来生成设计时标记关联的实际控件。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.ActionLists">
      <summary>获取 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 此设计器的对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.AllowResize">
      <summary>获取一个值，该值指示是否可以在可视化设计器图面上调整控件的大小。</summary>
      <returns>true 如果可以调整控件的大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.AllowResize">
      <summary>获取一个值，该值指示是否可以调整控件的大小。</summary>
      <returns>true 如果可以调整控件的大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ActionLists">
      <summary>获取 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 此设计器的对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AutoFormats">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与此设计器关联的对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否使用 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> 控件本身来生成设计时 HTML 或使用临时创建的副本。</summary>
      <returns>始终 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.HelpTopic">
      <summary>获取 Help 关键字用于显示帮助主题或主题列表，当用户单击 帮助 按钮或按 F1 键在编辑器的对话框中。</summary>
      <returns>Help 关键字以从编辑器请求帮助时显示帮助主题或主题列表。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists">
      <summary>获取 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 此设计器的对象。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 与此设计器关联的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember">
      <summary>获取的隐藏 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 基础数据绑定控件的属性。</summary>
      <returns>隐藏 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 的基础数据绑定控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataSourceDesigner">
      <summary>获取基础数据绑定控件的数据源设计器。</summary>
      <returns>基础数据绑定控件的数据源设计器。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DesignerView">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 与此设计器的数据源相关联的对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 与此设计器的数据源相关联的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.SampleRowCount">
      <summary>获取数据绑定控件在设计图面显示的行数。</summary>
      <returns>数据绑定控件在设计图面显示的行数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />。</summary>
      <returns>true 如果设计器可以刷新数据源;，否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 描述数据源的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>获取一个值，该值指示设计器是否在其操作列表中包括“选择一个数据源”。</summary>
      <returns>true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.DefaultNodeText">
      <summary>当在派生类中重写字段编辑器中的数据字段获取显示的默认文本。</summary>
      <returns>显示字段编辑器中的数据字段的默认文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.ServiceProvider">
      <summary>获取由字段编辑器使用的服务提供程序实现。</summary>
      <returns>服务提供商提供的实现，通常由设计宿主，可用来获取其他设计时服务。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.UsesSchema">
      <summary>当在派生类中重写，获取一个值，该值指示是否使用架构信息要加载的数据字段。</summary>
      <returns>true 如果架构信息用于加载数据字段;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataGridDesigner.AutoFormats">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与此设计器关联的对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Web.UI.WebControls.DataList" /> 可以调整控件的大小。</summary>
      <returns>true 如果数据列表模板;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与此设计器关联的对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>获取一个值，该值指示是否有关联的控件定义的模板。</summary>
      <returns>true 如果关联的控件定义了模板;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.AutoFormats">
      <summary>获取自动格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.SampleRowCount">
      <summary>获取要显示的关联控件的示例行数。</summary>
      <returns>要显示的示例行数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本（而非与设计器关联的实际控件）来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.AutoFormats">
      <summary>获取自动格式设置的集合中的显示方案 自动套用格式 对话框。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.FormView" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.RenderOuterTable">
      <summary>指定是否 <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> 控件使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>true 如果该控件使用外部表容器来应用内联 CSS 样式规则;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.SampleRowCount">
      <summary>获取要显示的关联控件的示例行数。</summary>
      <returns>示例行数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.FormView" /> 中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本，而不是与设计器来生成设计时标记关联的实际控件。</summary>
      <returns>始终返回 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.ActionLists">
      <summary>获取或设置此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.AutoFormats">
      <summary>获取或设置预定义的格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.SampleRowCount">
      <summary>获取或设置要显示的关联控件的示例行数。</summary>
      <returns>示例行数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.TemplateGroups">
      <summary>获取或设置用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.GridView" /> 中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>如果设计器应使用临时副本（而非与设计器关联的实际控件）来生成设计时标记，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataSourceDesigner">
      <summary>如果已选择用于数据绑定到设计器中的数据源，提供访问。</summary>
      <returns>设计器关联的控件的数据源派生自 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />, ，该类实现 <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DesignerView">
      <summary>获取绑定到关联的控件的数据源的默认视图。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 表示数据源的默认视图。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>获取一个值，该值指示控件是否应呈现其默认操作列表，其中包含数据源 ID 下拉列表和相关的任务。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.HelpTopic">
      <summary>获取要显示的帮助主题 <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> 对象。</summary>
      <returns>一个字符串，指定要显示的帮助主题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists">
      <summary>获取设计器设计器操作列表集合。</summary>
      <returns>与设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>获取或设置控件的数据的文本字段。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" /> 列表控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>获取或设置控件的数据值字段。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" /> 列表控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList">
      <summary>获取一个值，该值指示关联的控件是否应呈现其默认操作列表。</summary>
      <returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.HelpTopic">
      <summary>获取要显示的帮助主题 <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> 对象。</summary>
      <returns>一个 <see cref="T:System.String" /> ，它指定要显示的帮助主题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AllowResize">
      <summary>获取或设置一个值，指定是否 <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> 控件允许调整大小。</summary>
      <returns>true 如果控件允许用户调整大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AutoFormats">
      <summary>获取预定义的格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.Login" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.RenderOuterTable">
      <summary>获取或设置一个值，指定是否 <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> 控件使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>true 如果该控件使用外部表容器来应用内联 CSS 样式规则;否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.Login" /> 中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginNameDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示是否在设计器应使用临时副本，而不是与设计器中，来生成设计时标记相关联的实际控件。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本，而不是与设计器来生成设计时标记关联的实际控件。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 包含一个元素，其中的每个模板 <see cref="T:System.Web.UI.WebControls.LoginView" /> 控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本，而不是与设计器来生成设计时标记关联的实际控件。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Caption">
      <summary>获取要显示在标题 <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> 窗体。</summary>
      <returns>要在编辑器中窗体上显示的标题字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Filter">
      <summary>获取的文件类型的列表 <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> 对象要接受。</summary>
      <returns>一个字符串，指定每个用户友好名称接受文件类型以及每种类型的文件规范。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.AutoFormats">
      <summary>获取预定义的格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示提供程序是否可以刷新架构。</summary>
      <returns>true 如果可以刷新架构。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.Schema">
      <summary>获取描述关联的数据源视图的架构 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象，用于描述数据源的结构。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>获取一个值，该值指示提供程序是否可以刷新架构。 有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" /> 属性。</summary>
      <returns>true, 如果可以刷新架构。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>获取设计器的当前架构对象。 有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" /> 属性。</summary>
      <returns>设计器的的当前架构对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.TemplateGroups">
      <summary>获取用于关联控件的模板的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 包含一个元素，其中的每个模板 <see cref="T:System.Web.UI.WebControls.Menu" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用关联控件的一个副本或使用控件本身来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MultiViewDesigner.NoWrap">
      <summary>获取一个值，该值指示 nowrap 不应使用 HTML 属性。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> 可以调用方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> 调用; false 否则为。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可以调用方法。</summary>
      <returns>true 如果 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可被调用; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.SelectMethod">
      <summary>获取或设置时要执行的方法名称 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 调用关联的控件。</summary>
      <returns>一个包含方法时要执行的名称的字符串 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 调用。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.TypeName">
      <summary>获取或设置包含在关联的控件中指定的方法的类型的名称。</summary>
      <returns>一个包含类型，包含执行删除的方法的名称的字符串，Insert、 Select 和更新数据库操作中关联指定 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanDelete">
      <summary>获取一个值，该值指示相关联的数据源控件是否可按当前配置执行删除操作。</summary>
      <returns>true 如果关联 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可以执行删除操作; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanInsert">
      <summary>获取一个值，该值指示相关联的数据源控件是否可按当前配置执行插入操作。</summary>
      <returns>true 如果关联 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可以执行插入操作; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示相关联的数据源控件是否可以执行基于服务器的分页。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示相关联的数据源控件是否可返回由查询返回的行总数。</summary>
      <returns>总是为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanSort">
      <summary>获取一个值，该值指示是否关联的数据源控件可以对行进行排序。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示相关联的数据源控件是否可按当前配置执行更新操作。</summary>
      <returns>true 如果关联 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可以执行更新操作; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.Schema">
      <summary>获取一个架构，该架构描述此视图对象所表示的数据源视图。</summary>
      <returns>一个对象，实现 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 描述的视图和列表中的对象的属性或 null 架构是否不可用。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameCaption">
      <summary>获取将出现在关联的标题 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件。</summary>
      <returns>一个包含面板标题的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameStyle">
      <summary>获取关联的样式 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" /> 对象，其中包含关联的设计时样式 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本，而不是与设计器来生成设计时标记关联的实际控件。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersConfigured">
      <summary>返回一个值，该值指示配置编辑器中的所有参数。</summary>
      <returns>true 如果完全配置编辑器中的所有参数;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.TypeDescriptionProvider">
      <summary>提供的元数据 <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> 类。</summary>
      <returns>一个类型描述符提供程序对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.ActionLists">
      <summary>获取控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AllowResize">
      <summary>获取或设置一个值，指定是否 <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> 控件允许调整大小。</summary>
      <returns>true 如果控件允许用户调整大小;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象，它包含控件预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.RenderOuterTable">
      <summary>获取或设置一个值，指定是否 <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> 控件使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>true 如果该控件使用外部表容器来应用内联 CSS 样式规则;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的集合。 默认值为空 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记。</summary>
      <returns>true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PreviewControlDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记。</summary>
      <returns>true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RegexEditorDialog.RegularExpression">
      <summary>获取或设置要编辑的正则表达式的名称。</summary>
      <returns>正则表达式的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.ActionLists">
      <summary>获取控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>获取或设置要绑定的数据源对象中的特定表或视图名称 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控制转移到。</summary>
      <returns>表或数据源中的视图的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>标识关联的数据源的数据绑定表达式 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件。</summary>
      <returns>数据绑定表达式。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceDesigner">
      <summary>提供对关联的设计器组件的数据源的访问。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceID">
      <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> 关联控件的属性。</summary>
      <returns>关联的控件的数据源控件的 ID。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DesignerView">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 与此设计器的数据源相关联的对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 与此设计器的数据源相关联。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>获取一个值，该值指示相关联的控件是否具有定义的任何模板。</summary>
      <returns>一个值，该值指示是否为关联的控件定义的任何模板。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以刷新架构。</summary>
      <returns>此实现始终返回 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />。</summary>
      <returns>true 如果基础数据源具有一个配置向导，可以使用启动 Configure 方法; 否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.Schema">
      <summary>获取描述此表示的数据的架构 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 或对象派生自 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.Schema">
      <summary>获取一个架构，该架构描述此视图对象所表示的数据源视图。</summary>
      <returns>描述表示由此视图对象的数据源视图的架构。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.AutoFormats">
      <summary>获取自动格式设置的集合方案，可显示在 自动套用格式 关联控件设计时在对话框。</summary>
      <returns>返回 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>返回 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记。</summary>
      <returns>true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示设计宿主能否调用 <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果设计宿主支持 <see cref="T:System.ComponentModel.Design.Data.IDataEnvironment" /> 接口，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示设计宿主能否调用 <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果 <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString" /> 和 <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand" /> 属性不为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString">
      <summary>获取或设置用于打数据库的字符串。</summary>
      <returns>用于在运行时打开数据库连接的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeleteQuery">
      <summary>获取或设置支持删除查询的 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Delete" /> 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InsertQuery">
      <summary>获取或设置支持插入查询的 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Insert" /> 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ProviderName">
      <summary>获取或设置 .NET Framework 数据提供程序的名称，关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件使用此程序来连接基础数据源。</summary>
      <returns>包含数据提供程序的名称的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand">
      <summary>获取或设置关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 中的 SQL 查询，以便从基础数据库中选择数据。</summary>
      <returns>SQL 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectQuery">
      <summary>获取或设置支持选择查询的 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Select" /> 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.UpdateQuery">
      <summary>获取或设置支持更新查询的 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Update" /> 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanDelete">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象相关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法受支持，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanInsert">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象相关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法受支持，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持对由 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索到的数据进行分页。</summary>
      <returns>如果支持对由 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索到的数据进行分页，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持检索数据的总行数，而不是检索数据本身。</summary>
      <returns>如果支持检索数据的总行数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanSort">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持基础数据源的排序视图。</summary>
      <returns>如果支持基础数据源的排序视图，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象相关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法受支持，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.Schema">
      <summary>获取一个架构，该架构描述此视图对象所表示的数据源视图。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象，它包含控件预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记。</summary>
      <returns>如果控件设计器使用控件的临时副本进行设计时预览，则为 true；否则，即如果控件设计器为控件设计器中包含的控件使用 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 属性，则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ViewDesigner.NoWrap">
      <summary>获取一个值，该值指示 nowrap 不应使用 HTML 属性。</summary>
      <returns>在所有情况下均为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>预先指定 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与默认 CatalogZone 方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>预先指定 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> CatalogZone 环境的默认设置。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>预定义 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与默认 ConnectionZone 方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>将追加 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 与此类关联。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>预先指定 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与默认 EditorZone 方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>预先指定 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> EditorZone 环境的默认设置。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.PartDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ActionLists">
      <summary>获取区域设计器的操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ViewInBrowseMode">
      <summary>获取或设置一个值，该值指示当用户处于浏览显示模式时是否显示 Web 部件区域。</summary>
      <returns>true 如果当用户处于浏览显示模式; 显示 Web 部件区域否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>预先指定 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 与默认 WebPartZone 方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>预先指定 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象使用默认设置 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 环境。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>总是为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.ActionLists">
      <summary>获取控件设计器的操作列表集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，其中包含自定义 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 控件设计器项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，这些方案将在设计时显示于关联控件的“自动套用格式”对话框中。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.DisplaySideBar">
      <summary>获取或设置关联的向导控件，该值指示是否显示侧栏中的属性。</summary>
      <returns>true 即可显示边栏;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.TemplateGroups">
      <summary>获取一个模板组集合，其中每个模板组包含一个或多个模板定义。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计宿主是否应使用预览控件。</summary>
      <returns>true 若要使用预览控件; false 用于关联的控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepEditableRegion.Step">
      <summary>获取关联的设计时向导步骤。</summary>
      <returns>关联的设计时向导步骤中。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.Step">
      <summary>获取关联的设计时向导步骤。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> 可以调用方法。</summary>
      <returns>true, 如果 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> 方法可以调用; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> 可以调用方法。</summary>
      <returns>true, 如果 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法可以调用，否则 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data">
      <summary>获取或设置关联的数据源控件绑定到的 XML 块。</summary>
      <returns>XML 数据的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile">
      <summary>获取或设置关联的数据源控件绑定到一个 XML 文件的文件名。</summary>
      <returns>XML 文件名。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />。</summary>
      <returns>true 如果可以配置数据源;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />。</summary>
      <returns>true 如果可以刷新架构。否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Transform">
      <summary>获取或设置一个块的可扩展样式表语言 (XSL)，用于定义要对 XML 数据执行 XSLT 转换包含的 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> 属性或通过 XML 文件所指示的 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> 属性。</summary>
      <returns>为 XSL 数据字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.TransformFile">
      <summary>获取或设置定义 XSLT 转换来执行所包含的 XML 数据的可扩展样式表语言 (XSL) 文件 (.xsl) 的文件名称 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> 属性或通过 XML 文件所指示的 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> 属性。</summary>
      <returns>XSLT 文件的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.XPath">
      <summary>获取或设置要应用于所包含的 XML 数据的 XPath 查询 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> 属性或通过 XML 文件所指示的 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> 属性。</summary>
      <returns>XPath 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.Schema">
      <summary>获取一个架构，该架构描述此视图对象所表示的数据源视图。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.Schema">
      <summary>获取一个架构，该架构描述此视图对象所表示的数据源视图。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Component">
      <summary>获取或设置此设计器设计的组件。</summary>
      <returns>由设计器管理的组件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.CurrentCulture">
      <summary>获取当前线程的区域性信息。</summary>
      <returns>当前线程的区域性信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl">
      <summary>当在派生类中重写时获取 Web 窗体页所在的 URL。</summary>
      <returns>所在的 URL 的 Web 窗体页;否则为 null, ，如果 Web 窗体页有没有关联的 URL。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsDesignerViewLocked">
      <summary>当在派生类中重写，获取一个值，该值指示设计器视图是否已锁定。</summary>
      <returns>true, 如果设计器视图处于锁定状态;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsLoading">
      <summary>当在派生类中重写时获取一个值，该值指示是否仍会加载 Web 窗体页。</summary>
      <returns>true, 如果加载 Web 窗体页;否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager">
      <summary>当在派生类中重写时获取 <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> 对象，其中包含有关当前的 Web 窗体页的信息。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> 包含有关当前的 Web 窗体页的信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies">
      <summary>获取一系列的设计器组件可为其显示提供支持的技术。</summary>
      <returns>数组支持 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>获取或设置设计器支持的设计时谓词。 有关此成员的说明，请参阅 <see cref="P:System.ComponentModel.Design.IDesigner.Verbs" />。</summary>
      <returns>设计器支持设计时谓词。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>获取一系列的设计器组件可为其显示提供支持的技术。 有关此成员的说明，请参阅 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>一系列的设计器组件可为其显示提供支持的技术。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Verbs">
      <summary>获取设计器支持的设计时谓词。</summary>
      <returns>一个数组 <see cref="T:System.ComponentModel.Design.DesignerVerb" /> 对象支持设计器; 否则为 null, ，如果该组件没有谓词。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Caption">
      <summary>获取要在所选内容对话框中显示的标题。</summary>
      <returns>要在所选内容对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Filter">
      <summary>获取编辑器中，用来筛选显示在 URL 选择对话框中的项的 URL 筛选选项。</summary>
      <returns>表示一个或多个 URL 筛选选项用于对话框中的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>获取要在所选内容对话框窗口中显示的标题。</summary>
      <returns>要在所选内容对话框窗口中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>获取编辑器的文件名称筛选器字符串。 这用于确定显示在对话框中的文件列表中的项。</summary>
      <returns>一个字符串，包含有关的文件筛选对话框中的可用选项的信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>获取要使用的 URL 生成器的选项。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> ，该值指示要使用的 URL 生成器的选项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption">
      <summary>获取要在所选内容对话框中显示的标题。</summary>
      <returns>要在所选内容对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter">
      <summary>获取的 URL 筛选器选项编辑器，它用来筛选显示在 URL 选择对话框中的项。</summary>
      <returns>表示一个或多个 URL 筛选选项用于对话框中的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Caption">
      <summary>获取要在所选内容对话框中显示的标题。</summary>
      <returns>要在所选内容对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Filter">
      <summary>获取编辑器中，用来筛选显示在 URL 选择对话框中的项的 URL 筛选选项。</summary>
      <returns>表示一个或多个 URL 筛选选项用于对话框中的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>获取要在所选内容对话框窗口中显示的标题。</summary>
      <returns>要在所选内容对话框窗口中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>获取编辑器的文件名称筛选器字符串。 这用于确定显示在对话框中的文件列表中的项。</summary>
      <returns>一个字符串，包含有关的文件筛选对话框中的可用选项的信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>获取要使用的 URL 生成器的选项。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> ，该值指示要使用的 URL 生成器的选项。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedAssemblies">
      <summary>获取控件生成的程序集的名称。</summary>
      <returns>生成的程序集或一个空字符串数组，如果已经不生成了任何程序集的名称的数组。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedSources">
      <summary>获取生成的源文件的名称。</summary>
      <returns>生成的源文件的文件名的数组或 null 如果均不存在。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedTypeLibAttributes">
      <summary>生成的类型库中获取的属性。</summary>
      <returns>类型的数组 <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> ，该值指示生成的类型库的特性。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Direction">
      <summary>指示分配字段的方向。</summary>
      <returns>一个 <see cref="T:System.CodeDom.FieldDirection" /> ，该值指示赋值字段的方向。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsByRef">
      <summary>指示是否通过引用传递的参数数据。</summary>
      <returns>true 如果参数数据是通过引用;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsIn">
      <summary>指示是否在参数数据。</summary>
      <returns>true 如果参数数据在;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOptional">
      <summary>指示是否为可选参数数据。</summary>
      <returns>true 如果参数数据是可选的;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOut">
      <summary>指示输出是否为参数数据。</summary>
      <returns>true 如果参数的数据否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Name">
      <summary>获取或设置参数的名称。</summary>
      <returns>参数的名称。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.ParameterType">
      <summary>获取所需的参数的类型。</summary>
      <returns>所需的参数类型。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.TypeName">
      <summary>获取所需的参数的类型的名称。</summary>
      <returns>所需的参数类型的名称。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>获取或设置与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <returns>与 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>获取或设置一个值，该值指示如果 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 已启用。</summary>
      <returns>true, 如果 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 启用; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 集合。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>获取此行为应显示的光标。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Cursor" /> ，表示应显示为该行为的光标。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>获取一个值，该值指示是否 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 对象应被禁用。</summary>
      <returns>true 如果所有 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 该设计器接收的对象应具有状态设置为 Enabled = false 时这 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 活动; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>获取的列表 <see cref="T:System.ComponentModel.IComponent" /> 当前正被拖动的对象。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 的 <see cref="T:System.ComponentModel.IComponent" /> 当前正被拖动的对象。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <returns>修饰工具的集合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>获取 <see cref="T:System.Drawing.Graphics" /> 修饰工具窗口。</summary>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> 修饰工具窗口。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 但不移除该行为堆顶部。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 行为堆顶部。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 指定元素 <paramref name="index" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>获取当前元素中 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <returns>中的当前元素 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IEnumerator.Current" /> 属性。</summary>
      <returns>当前 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 集合中。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>获取与之关联的组件 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 。</summary>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> 与关联 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>获取的界限 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 表示的边界 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>获取与 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 与关联 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, ，或 null 是否存在任何行为。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>获取的界限 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 表示的边界 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的元素。</summary>
      <param name="index">元素的索引（索引从零开始）。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 中指定索引处的元素。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>获取与此对齐线关联的由程序员定义的筛选器类别。</summary>
      <returns>一个 <see cref="T:System.String" /> ，它定义的筛选器类别。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>获取一个值，该值指示对齐线是否有水平方向。</summary>
      <returns>true 如果对齐线是水平;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>获取一个值，该值指示对齐线是否有垂直方向。</summary>
      <returns>true 如果对齐线是垂直;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>获取对齐线偏离关联控件的原点的像素数。</summary>
      <returns>对齐线的偏移量（单位为像素）。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>获取指示对齐线的相对重要性的值。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> 表示对齐线优先级类别。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>获取对齐线的类型，它指示一般位置和方向。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> ，它表示的方向和一般位置，相对于控件边缘对齐线。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>获取设计器的控制。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> 编辑设计器。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>数组支持 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>获取或设置一个值，该值指示是否为设计器的组件送纸器是在自动排列模式。</summary>
      <returns>true 如果设计器的组件送纸器中自动排列模式;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>获取或设置一个值，该值指示设计器的组件送纸器是否处于大图标模式。</summary>
      <returns>true 如果设计器的组件送纸器的大图标模式;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>获取或设置一个值，该值指示是否自动对齐的送纸器项。</summary>
      <returns>true 如果自动排列的送纸器项;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>获取包含在托盘中的组件数。</summary>
      <returns>在任务栏中的组件数。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>获取或设置一个值，该值送纸器是否显示大图标来表示在托盘中的每个组件。</summary>
      <returns>true 如果显示大图标;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>获取分配给该控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns>分配给控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>获取与设计器所管理的组件相关联的组件的集合。</summary>
      <returns>与设计器所管理的组件相关联的组件。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>获取或设置一个值，该值指示是否调整其大小手柄的分配的值取决于 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 属性。</summary>
      <returns>true 如果调整的大小手柄的分配的值取决于 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 和 AutoSizeMode 属性; 否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 设计环境中。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, ，或 null 如果服务不可用。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>获取设计器设计的控件。</summary>
      <returns>设计器设计中的控件。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>获取设计器中定义的辅助性对象的边界的点。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> ，该值指示设计器的辅助性对象的边界。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>获取描述指定的对象的默认操作的字符串。</summary>
      <returns>指定的对象的默认操作的说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>获取描述指定的对象的可视外观的字符串。</summary>
      <returns>一个对用户来说，该对象的可视外观的说明或 null 如果对象没有说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>获取或设置对象名。</summary>
      <returns>对象名称，或 null 如果未设置该属性。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>获取辅助性对象的父级。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" /> 表示父辅助性对象，或 null 如果没有父对象。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>获取此辅助性对象的角色。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一；如果尚未指定角色，则为 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>获取此辅助性对象的状态。</summary>
      <returns>其中一个 <see cref="T:System.Windows.Forms.AccessibleStates" /> 值，或 <see cref="F:System.Windows.Forms.AccessibleStates.None" />, ，如果已设置未启用状态。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>获取或设置一个辅助性对象的值。</summary>
      <returns>可访问对象的值，或如果该对象未设值，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>获取一个值，该值指示是否将可以在该设计器组件上绘制矩形。</summary>
      <returns>true 如果可以绘制矩形; 拖动否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>获取 <see cref="T:System.ComponentModel.InheritanceAttribute" /> 设计器。</summary>
      <returns>
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> 在设计器为根设计器;否则为父设计器的值 <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> 属性。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>获取父组件 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</summary>
      <returns>父组件 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; 否则为 null 如果没有父组件。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>获取一个值，该值指示是否 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 将允许在拖动操作期间的对齐线对齐。</summary>
      <returns>true 如果 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 时主要拖动控件高于此设计器; 否则为将允许在拖动操作期间的对齐线对齐 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>获取指示一个组件的移动功能的所选内容规则。</summary>
      <returns>按位组合 <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>获取一份 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 表示此控件的重要对齐点的对象。</summary>
      <returns>一份 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 表示此控件的重要对齐点的对象。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>获取或设置一个值，启用或禁用在就地编辑 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件。</summary>
      <returns>true 如果适当地编辑 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件是已启用; 否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>获取或设置 <see cref="T:System.Drawing.Size" /> 表示一个网格单元的尺寸。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" /> 表示一个网格单元的尺寸。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>获取或设置一个值，指定在创建组件时设计器是否自动显示组件的智能标记面板。</summary>
      <returns>true 若要允许在创建; 时自动打开组件的智能标记面板否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>获取或设置一个值，启用或禁用在设计器网格。</summary>
      <returns>true 如果启用了网格;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>获取或设置一个值，该值指示控件自动放置于网格坐标处。</summary>
      <returns>true 如果启用对齐;否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>获取或设置一个值，启用或禁用组件缓存。</summary>
      <returns>true 如果已启用组件缓存;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>获取或设置一个值，启用或禁用在设计器中的智能标记。</summary>
      <returns>true 如果启用了设计器中的智能标记，则否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>获取或设置一个值，该值可启用或禁用设计器中的对齐线。</summary>
      <returns>如果启用了设计器中的对齐线，则为 true；则否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 设计器。</summary>
      <returns>按位组合 <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>有关此成员的说明，请参阅 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>数组支持 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>获取与事件处理程序添加的控件。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Control" /> 附加通过构造函数。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>获取或设置文件夹上方显示的说明。</summary>
      <returns>要文件夹上方显示的说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>获取到对象中选取的用户的目录路径。</summary>
      <returns>指向对象中选取的用户的目录路径。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>获取或设置根节点的开始位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> ，该值指示最初浏览到文件夹浏览器的位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>浏览文件夹时，将使用文件夹浏览器样式。 这应该是中标志的组合 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 枚举。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 枚举成员，它指示行为 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 使用。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary>获取 <see cref="T:System.Globalization.CultureInfo" /> 表示为其创作掩码的区域设置。</summary>
      <returns>一个 <see cref="T:System.Globalization.CultureInfo" /> 表示为其创作掩码的区域设置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>获取正在定义的掩码。</summary>
      <returns>一个 <see cref="T:System.String" /> 包含正在定义的掩码。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>获取蒙板的用户友好的名称。</summary>
      <returns>一个 <see cref="T:System.String" /> 包含名称或简要描述 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>获取该掩码格式的字符串的示例。</summary>
      <returns>一个 <see cref="T:System.String" /> 包含使用格式化的文本 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>获取提供验证与掩码关联的类型。</summary>
      <returns>
        <see cref="T:System.Type" /> 带格式的字符串进行验证。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>获取一个值，该值指示是否选定的控件将会重新设置为父级。</summary>
      <returns>true 如果通过套索在设计器图面上选择了这些控件将会重新设置为父级为此设计器控件。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>获取一个值，该值指示当在设计器图面上拖动的工具箱项是否一般拖动应绘制框。</summary>
      <returns>true 当在设计器图面; 上拖动的工具箱项，如果一般拖动应绘制框否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>获取一个值，该值指示在删除时是否应保留拖动控件的 z 顺序 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />。</summary>
      <returns>true 拖动时，如果应保留拖动控件的 z 顺序 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; 否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>获取设计器中添加一个控件的默认位置。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" /> ，该值指示设计器中添加一个控件的默认位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>获取或设置一个值，该值指示是否应为此设计器控件上绘制一个网格。</summary>
      <returns>true 如果应在设计器; 中控件上绘制网格否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>获取一个值，该值指示是否将拖动矩形绘制由设计器。</summary>
      <returns>true 如果拖动绘制矩形;否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>获取或设置在设计器的网格绘图模式绘制网格的每个方块的大小。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" /> ，表示窗体或用户控件上绘制的网格的每个方块的大小。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> 超出了允许范围为 <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />。 默认最小值为 2，并默认最大值为 200。</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>获取一个值，该值指示设计器是否具有有效的工具在拖动操作期间。</summary>
      <returns>如果创建一个组件，为拖动的工具或 null 如果没有任何工具。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>获取一份 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 表示此控件的重要对齐点的对象。</summary>
      <returns>一份 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 表示此控件的重要对齐点的对象。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 公开 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 公开 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>表示将用来处理 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 的 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 事件的方法。 无法继承此类。</summary>
      <param name="sender">该事件的源 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />。</param>
      <param name="e">
        <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />    包含事件数据。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>在设计时编辑数组提供一个用户界面。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>提供用于编辑二进制数据的用户界面。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>显示字节中十六进制、 ANSI 和 Unicode 格式的数组。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>提供了一个用户界面，可以在设计时编辑大多数类型的集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>提供用于编辑集合使用的内容的模式对话框 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentActionsType">
      <summary>指定对象绑定智能标记它已与该组件关联的类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.All">
      <summary>这两种类型的智能标记。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <summary>仅限模型智能标记中拉出。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <summary>推送模型仅限智能标记。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>扩展组件的设计模式行为。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>表示应重写继承的默认或分配的特定属性的值的隐藏属性的集合。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptor">
      <summary>实现在单个数据源所需的基本功能 EnvDTE.Project 级别。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 对象的类型安全集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroup">
      <summary>实现在单个数据源所需的基本功能 EnvDTE.Project 级别。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroupCollection">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 对象的类型安全集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceProviderService">
      <summary>实现用于提供对在数据源的访问的服务所需的基本功能 EnvDTE.Project 级别。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataColumn">
      <summary>表示表或视图通过数据连接访问数据存储区中的列。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataConnection">
      <summary>表示到数据存储在设计工具的连接。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataParameter">
      <summary>表示某一存储过程的参数。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataRelationship">
      <summary>表示到设计器通过数据连接访问数据源中的两个表之间的关系。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataSchemaClass">
      <summary>指定可以检索从数据存储区的架构的对象的类型。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure">
      <summary>表示数据存储区中的存储的过程。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTable">
      <summary>表示数据存储区中的表。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTableBase">
      <summary>定义属性和数据存储区的表和数据存储区视图之间共享的方法。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataView">
      <summary>表示数据存储区中的数据视图。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDataEnvironment">
      <summary>向数据服务，这使控件设计人员可以将数据存储区或与数据库相关的功能集成到其设计环境中定义一个接口。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDesignerDataSchema">
      <summary>定义用于检索数据存储区的架构信息的方法。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.QueryBuilderMode">
      <summary>指定的设计环境，应构造数据存储区查询的类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Select">
      <summary>要生成的查询是选择查询。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Update">
      <summary>要生成的查询是一个更新查询。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Insert">
      <summary>要生成的查询是一个 Insert 查询。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Delete">
      <summary>要生成的查询是删除查询。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>此日期时间编辑器是 <see cref="T:System.Drawing.Design.UITypeEditor" /> 适用于以可视方式编辑 <see cref="T:System.DateTime" /> 对象。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>表示智能标记面板上的静态标题项。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>表示智能标记面板上的面板项的类型提供的基类。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>表示 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>定义用于创建智能标记面板的项的列表的类型提供的基类。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>表示 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>表示将用来处理 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 的 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 事件的方法。 无法继承此类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>指定的集合中发生的更改类型 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>一个或多个 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象已添加到集合。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>一个或多个 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 从集合中删除了对象。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>表示与派生类中的方法相关联的智能标记面板项 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>表示与派生类中的属性相关联的面板项 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>建立用于管理的集合的设计时服务 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 组件的对象。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>表示智能标记面板上的静态文本项。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>管理用户界面 (UI) 的智能标记面板。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>表示将用来处理 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 的 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 事件的方法。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="e">特定于事件的信息。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>指定的智能标记面板的显示状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>显示智能标记面板。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>位于要隐藏的智能标记面板。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>正在刷新的智能标记面板。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>表示设计时工具，不是派生自的基类 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, ，它们提供了智能标记或设计器谓词功能。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>提供用于设计组件的用户界面。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>包含设计图面的集合。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 事件 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类。 无法继承此类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />      包含事件数据。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>管理集合 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 对象。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>定义用于指示使用的显示模式标识符 <see cref="T:System.ComponentModel.Design.ByteViewer" />。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>十六进制格式的显示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>ANSI 格式的显示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>Unicode 格式的显示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>一种显示模式，自动选择一种显示模式。 在此模式下，对字节进行检查以确定它们是否十六进制或打印。 如果字节为十六进制格式， <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 选择模式。 如果字符匹配可打印的字符集，运行测试以自动选择 <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> 或 <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> 显示模式。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>默认实现 <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 接口。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>表示异常的集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <summary>提供在设计时环境中的调试服务。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <summary>允许设计器来存储和检索其状态。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <summary>用于加载设计器中的程序集的实用程序。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>定义在设计时环境中的多目标类型的名称解析服务。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>提供了一套用于标识继承的组件的方法。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件提供数据。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类。 无法继承此类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <summary>为根设计器的本地化功能提供设计时支持。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>表示将用来处理 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 的 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">一个 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />  包含事件数据。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>指定的相关对象上发生的操作类型 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 集合。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>指定已添加一个或多个命令对象。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>指定一个或多个命令已删除。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>指定一个或多个命令已更改其状态。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>实现 <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> 接口。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>显示一个对话框，以编辑在设计模式下的多行字符串。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>实现可用于设计值编辑器的基本功能。 这些编辑器可以反过来，提供用户界面，用于表示和编辑的支持的数据类型的对象值。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>显示标记的每个表示项的分层集合 <see cref="T:System.Windows.Forms.TreeNode" />。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>表示节点的 <see cref="T:System.Windows.Forms.TreeView" />。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>指定项目的目标框架。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>提供的实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 接口。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>定义的行为 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 方法。 可以使用按位组合这些标志 OR 运算符。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>设计器加载程序会在重新加载前, 刷新更改不会强制重新加载，但它也不设置 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 属性设置为 true 如果发生加载错误。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>设计器加载程序将设置 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 属性设置为 true 如果发生加载错误。 此标志将很有用，如果您希望刷新加载程序以覆盖有错误的持久性状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>设计器加载程序会强制发生重新加载。 通常情况下，重新加载时才出现 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> 方法将返回 true。 此标志将绕过调用此方法，并始终会执行重新加载。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>设计器加载程序在重新加载前放弃所有更改。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>序列化为序列化存储区的一组组件。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>提供用于实现基于 CodeDOM 的设计器加载程序类的基类。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>决定要使用 CodeDom 资源适配器的本地化模型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>本地化供应商应忽略经过本地化的属性。 它仍将写出的对象不支持代码生成，它们是可序列化的资源。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>通过将资源分配给每个属性情况下，本地化供应商将写出经过本地化的属性。 当属性的数目较小，但随着不良包含默认值的属性数目增长时，此模型是快速。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>本地化供应商将写入到一个资源文件的本地化的属性值，并使用 <see cref="T:System.ComponentModel.ComponentResourceManager" /> 类以反映对属性按名称来填充它们在运行时。 这在运行时使用反射，因此它可能会很慢，但它具有大量的具有默认值的属性中的显示效果会更好的伸缩性。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>提供了 CodeDOM 资源序列化服务。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>序列化对象图为一系列的 CodeDOM 语句。 此类序列化程序提供一个抽象基类。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>提供类的基类 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>行号信息可供序列化错误时引发的异常。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>序列化集合。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的实现。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>提供了一种传递序列化程序之间的上下文状态。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>提供可用于优化重新加载设计器的接口。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>提供类的基类进行序列化对象图中的反射基元。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>包含提供由提供的语句的表 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>一个 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 添加根上下文提供的根对象的定义。 无法继承此类</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>指定序列化程序应处理默认值。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>提供了语句可序列化到其中一个位置。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>将序列化为新类型的对象。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>在设计时指定泛型撤消/重做功能。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>封装一个用户可以撤消工作单元。</summary>
    </member>
    <member name="T:System.Data.Design.MethodSignatureGenerator">
      <summary>此类用于生成数据库查询方法签名，因为它将创建由类型化数据集生成器。</summary>
    </member>
    <member name="T:System.Data.Design.ParameterGenerationOption">
      <summary>设置生成的参数的类型在类型化 <see cref="T:System.Data.DataSet" /> 类。</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.ClrTypes">
      <summary>类型化数据集中的参数是 CLR 类型。</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.SqlTypes">
      <summary>类型化数据集中的参数是 Sql 类型。</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.Objects">
      <summary>类型化数据集中的参数都是 <see cref="T:System.Object" />。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator">
      <summary>生成强类型化 <see cref="T:System.Data.DataSet" /> 类。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator.GenerateOption">
      <summary>提供了 <see cref="T:System.Data.Design.TypedDataSetGenerator" />与用于创建支持 LINQ to DataSet 和分层更新的类型化数据集的信息。</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.None">
      <summary>生成与 Visual Studio 的版本中生成的类型化数据集兼容的类型化数据集早于 Visual Studio 2008。</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.HierarchicalUpdate">
      <summary>生成包含 TableAdapterManager 和关联方法的类型化数据集，以便启用分层更新。</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.LinqOverTypedDatasets">
      <summary>生成类型化数据集继承的数据表， <see cref="T:System.Data.TypedTableBase`1" /> 以便能够对数据表执行 LINQ 查询。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGeneratorException">
      <summary>名称冲突发生时的强类型时引发的异常 <see cref="T:System.Data.DataSet" /> 正在生成。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtension">
      <summary>生成内部映射到 XML 架构元素声明，包括 WSDL 文档中的文字 XSD 的消息部分的.NET Framework 类型。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35">
      <summary>为 XML 架构元素声明生成到 .NET Framework 类型的内部映射。 扩展 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" />，以便向为 .NET Framework 3.5 版创建的类型化数据集提供其他功能。</summary>
    </member>
    <member name="T:System.Diagnostics.Design.LogConverter">
      <summary>提供的类型转换器 <see cref="P:System.Diagnostics.EventLog.Log" /> 属性。</summary>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessDesigner">
      <summary>用于扩展进程的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessModuleDesigner">
      <summary>用于扩展进程模块的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessThreadDesigner">
      <summary>用于扩展进程线程的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="T:System.Messaging.Design.MessageDesigner">
      <summary>提供 <see cref="T:System.Messaging.Message" /> 类的基本设计时功能。</summary>
    </member>
    <member name="T:System.Resources.Tools.ITargetAwareCodeDomProvider">
      <summary>定义一个接口，使强类型的资源生成器 (<see cref="T:System.Resources.Tools.StronglyTypedResourceBuilder" /> 对象) 以确定哪些类型和属性可使它可以发出正确的代码文档对象模型 (CodeDOM) 树。</summary>
    </member>
    <member name="T:System.Resources.Tools.StronglyTypedResourceBuilder">
      <summary>为强类型化资源提供支持。 此类不能被继承。</summary>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceControllerDesigner">
      <summary>对 <see cref="T:System.ServiceProcess.ServiceController" /> 类提供设计时服务。</summary>
    </member>
    <member name="T:System.Web.UI.Design.AppSettingsExpressionEditor">
      <summary>提供用于计算和编辑配置文件中的应用程序设置表达式在设计时属性和方法。</summary>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>提供一个日历数据绑定处理程序。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItem">
      <summary>在设计时表示 Web 窗体或用户控件中的客户端脚本元素。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItemCollection">
      <summary>表示客户端脚本块的只读集合，这些脚本块在设计时包含在 Web 窗体或用户控件中。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ColorBuilder">
      <summary>在允许用户选择一种颜色的设计时提供 HTML 颜色字符串生成器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringEditor">
      <summary>提供一个用户界面来选择，并在设计时编辑连接字符串属性的基类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringsExpressionEditor">
      <summary>提供用于选择数据连接表达式与该键关联的控件属性在设计时属性和方法。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ContainerControlDesigner">
      <summary>为包含可以在设计时修改的子控件或属性的控件提供设计器功能。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ContentDefinition">
      <summary>提供在设计时定义的 Web 内容的属性结构。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ContentDesignerState">
      <summary>枚举可能的状态设置 <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> 控件在设计时。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowDefaultContent">
      <summary>关联的控件显示的默认内容。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowUserContent">
      <summary>关联的控件显示的用户内容。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>提供基控件设计器类，用于扩展 Web 服务器控件的设计模式行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesignerState">
      <summary>提供对控制设计器通过设计宿主中的状态的访问 <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> 接口。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlLocation">
      <summary>指定的容器中添加一个控件可能的位置。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Before">
      <summary>添加控件之前的当前选定内容或当前控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.After">
      <summary>在当前所选内容或当前控件之后添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.First">
      <summary>在文档的开头添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Last">
      <summary>文档的结尾处添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.FirstChild">
      <summary>如果所选的控件是一个容器控件，请将控件添加为所选控件的第一个子级。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.LastChild">
      <summary>如果所选的控件是一个容器控件，请将控件添加为所选控件的最后一个子级。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlParser">
      <summary>提供用于创建 Web 服务器方法 <see cref="T:System.Web.UI.Control" /> 控件或 <see cref="T:System.Web.UI.ITemplate" /> 接口从表示持久性的控件或模板的标记字符串。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>提供用于保持 Web 服务器控件在设计时方法。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionConverter">
      <summary>提供的类型转换器 <see cref="T:System.Web.UI.DataBindingCollection" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionEditor">
      <summary>提供用于编辑数据绑定的集合的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingHandler">
      <summary>提供的数据绑定处理的基类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingValueUIHandler">
      <summary>为数据绑定值提供 UI 处理程序。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataColumnSelectionConverter">
      <summary>表示在绑定的列字段的字段名称的属性提供的类型转换器 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataFieldConverter">
      <summary>提供可以从当前组件的所选的数据源中检索的数据字段列表的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataMemberConverter">
      <summary>提供可以从当前组件的所选的数据源中检索数据成员的列表的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSetFieldSchema">
      <summary>表示的结构或架构的数据字段。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSetSchema">
      <summary>
        <see cref="T:System.Web.UI.Design.DataSetSchema" /> 类表示的结构或数据源架构。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSetViewSchema">
      <summary>代表的结构，即架构，为 <see cref="T:System.Data.DataTable" />。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter">
      <summary>表示数据源架构中的布尔字段的属性提供的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceConverter">
      <summary>提供可检索当前组件所能访问的数据源列表的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceDesigner">
      <summary>在设计宿主中为 <see cref="T:System.Web.UI.DataSourceControl" /> 类提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceViewSchemaConverter">
      <summary>表示数据源架构中的字段的属性提供的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormat">
      <summary>用于创建可以在设计时应用于自定义的 Web 服务器控件的格式提供的抽象基类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatCollection">
      <summary>表示控件设计器中 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatStyle">
      <summary>表示 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的样式。 此类主要由控件开发人员使用。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerDataSourceView">
      <summary>用作设计时数据源视图类的基类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView">
      <summary>为基于分层数据的数据视图设计器提供基本类。 必须继承此类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerObject">
      <summary>表示设计宿主中的对象，如 Visual Studio 2005。 必须继承此类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegion">
      <summary>定义关联控件设计时标记内的内容区域。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionCollection">
      <summary>表示控件设计器中 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象的集合。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionMouseEventArgs">
      <summary>将提供数据供 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 单击选定的控件或所选控件中的设计器区域时，将引发的事件。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeData">
      <summary>提供控件设计器可以用于在设计时生成数据绑定属性的示例数据的帮助器方法。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeResourceProviderFactory">
      <summary>使用控件本地化来读取和写入在设计时的资源。</summary>
    </member>
    <member name="T:System.Web.UI.Design.Directives.DirectiveAttribute">
      <summary>指定自定义属性的指令。</summary>
    </member>
    <member name="T:System.Web.UI.Design.Directives.DirectiveRegistry">
      <summary>当在设计时创建指令 IntelliSense 提供支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.Directives.SchemaElementNameAttribute">
      <summary>指定的自定义指令的特性名称。</summary>
    </member>
    <member name="T:System.Web.UI.Design.EditableDesignerRegion">
      <summary>表示关联控件的设计时标记内的可编辑内容区域。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditor">
      <summary>定义一组用于在设计时和在表达式编辑器对话框中使用的表达式编辑器表为可视化设计宿主提供程序与控件属性的表达式计算的属性和方法。 此类为抽象类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditorSheet">
      <summary>表示自定义表达式的设计时编辑器表。 必须继承此类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionConverter">
      <summary>为表达式绑定集合提供的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionEditor">
      <summary>选择和编辑表达式绑定集合在设计时提供一个用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceConverter">
      <summary>提供可检索当前组件所能访问的分层数据源列表的类型转换器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.HtmlControlDesigner">
      <summary>提供 ASP.NET 服务器控件的基本设计时功能。</summary>
    </member>
    <member name="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner">
      <summary>为所有内部 HTML 控件提供一个基本设计器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>提供的数据绑定处理的超链接属性。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IContentResolutionService">
      <summary>提供访问接口为母版页的内容页面从在设计时，如果宿主所提供的设计，如 Visual Studio 2005。 </summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>使控件设计器的特定行为的扩展。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerTag">
      <summary>与控件设计器关联的控件的 HTML 标记的设计时访问提供的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerView">
      <summary>在设计时访问的可视表示形式和控件的内容提供的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataBindingSchemaProvider">
      <summary>提供设计宿主中的架构提供程序的设计时访问接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceDesigner">
      <summary>定义数据源设计器的基本功能。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceFieldSchema">
      <summary>提供用于在设计时描述数据字段的结构的基本功能。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>定义控件设计器可实现以提供对数据源的访问的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceSchema">
      <summary>提供用于在设计时描述数据源的结构的基本功能。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceViewSchema">
      <summary>定义一组方法和属性用来检查数据源。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService">
      <summary>提供一个用于创建自定义接口 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceWriter">
      <summary>使用 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 类在设计时本地化数据。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDocumentProjectItem">
      <summary>提供用于访问在设计时设计宿主中检索的文档项的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IFolderProjectItem">
      <summary>如为设计宿主中的项目文件夹中提供的接口 Visual Studio 2005。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner">
      <summary>派生自的类提供可视设计器中的设计时支持 <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>定义一个接口，使 HTML 控件设计器的特定行为的扩展。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>提供用于选择引用图像的 URL 的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IProjectItem">
      <summary>提供一个接口在设计时检索从设计宿主中，如项 Visual Studio 2005。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>提供用于管理模板编辑区域的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>提供在设计时编辑控件模板的服务。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IWebAdministrationService">
      <summary>有关创建用于在设计时管理 Web 站点的服务提供的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IWebApplication">
      <summary>提供用于访问 Web 应用程序在设计主机中，如接口 Microsoft Visual Studio 2005, ，在设计时。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>提供可查找有关当前的 Web 窗体项目中使用的类型信息的接口。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>提供方法以启动特定的用户界面，用于构建在设计时属性。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>提供了方法，以访问用于跟踪 Web 窗体文档的加载状态、 在加载时处理事件、 访问文档的位置、 管理文档的撤消服务和设置文档中的新选择的服务。</summary>
    </member>
    <member name="T:System.Web.UI.Design.MailFileEditor">
      <summary>选择和编辑在设计时属性的邮件文件名称提供一个用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.MdbDataFileEditor">
      <summary>提供用于选择 Microsoft Access 数据库文件的设计时用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>扩展读/写服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditor">
      <summary>提供用于计算和编辑资源表达式在设计时属性和方法。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditorSheet">
      <summary>表示资源中表达式的用户界面设计器宿主的设计时属性的设计时编辑器表。</summary>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditor">
      <summary>提供属性和方法用于编写 RouteURL 在设计时表达式。</summary>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet">
      <summary>表示的属性的设计时编辑器表 RouteUrl 表达式在 UI 中的设计器宿主在设计时。</summary>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditor">
      <summary>提供属性和方法用于编写 RouteValue 在设计时表达式。</summary>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditorSheet">
      <summary>表示的属性的设计时编辑器表 RouteValue 表达式在 UI 中的设计器宿主在设计时。</summary>
    </member>
    <member name="T:System.Web.UI.Design.SkinIDTypeConverter">
      <summary>提供有效的外观 Id 的列表的控件在设计时，基于当前适用的主题。</summary>
    </member>
    <member name="T:System.Web.UI.Design.SupportsPreviewControlAttribute">
      <summary>指示控件设计器是否需要在设计时控件的预览实例。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>扩展基于模板的服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedEditableDesignerRegion">
      <summary>定义关联控件设计时标记内的内容中可编辑区域。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplateDefinition">
      <summary>提供属性和方法在设计时在 Web 服务器控件中定义的模板元素。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingService">
      <summary>提供在设计时编辑控件模板的服务。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>表示设计器谓词创建模板编辑框，并可调用只能由一个模板编辑器。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroup">
      <summary>一套 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象在设计时表示 Web 服务器控件中的模板元素。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroupCollection">
      <summary>表示控件设计器中 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplateModeChangedEventArgs">
      <summary>将提供数据供 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 模板模式更改为设计图面上的控件时引发的事件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>为具有保存为内部文本的 Text 属性的 Web 服务器控件扩展设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>在设计时为数据绑定控件提供数据绑定处理程序。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TransactedChangeCallback">
      <summary>指在自定义方法的委托 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象，它是由调用 <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> 方法用于在设计器中实现属性更改相关联的控件。</summary>
      <param name="context">要在事务被调用时调用的方法。</param>
      <returns>true 如果事务成功地完成。 false 如果应回滚事务。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TypeSchema">
      <summary>表示的结构，即对象类型的架构。</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>启动 URL 编辑器中，用户可以选择或创建一个 URL。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>定义的设置的标识符 <see cref="T:System.Web.UI.Design.UrlBuilder" />。</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>使用的任何附加选项 <see cref="T:System.Web.UI.Design.UrlBuilder" />。</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>构建引用当前路径，而不是一个引用完全限定的绝对路径的相对路径的 URL。</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>提供用于选择一个 URL 的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>为用户控件提供设计器功能。</summary>
    </member>
    <member name="T:System.Web.UI.Design.UserControlFileEditor">
      <summary>提供一个对话框用于选择要在设计时编辑文件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEvent">
      <summary>表示在设计时控件的视图发生的事件的种类。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventArgs">
      <summary>为 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 事件提供数据。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 事件引发的可视化设计工具，如 Visual Studio 2005, 、 实现 <see cref="T:System.Web.UI.Design.IControlDesignerView" /> 接口。 无法继承此类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Web.UI.Design.ViewEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.ViewFlags">
      <summary>指示哪些功能启用与 <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> 设计器的方法。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.CustomPaint">
      <summary>启用绘制在设计时显示自定义控件的事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete">
      <summary>完全加载该控件后，会推迟之前的所有事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.TemplateEditing">
      <summary>可用于在设计时编辑模板。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewRendering">
      <summary>包含内容和区域的设计时标记。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AccessDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.AdRotator" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner">
      <summary>在可视化设计器中为派生自 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 类的控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>提供组件编辑器基类派生自的 Web 服务器控件的 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>为在设计器宿主中为派生自 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类的 Web 服务器控件提供设计时支持的组件提供基类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>在可视化设计器中为派生自 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> 类的 Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BulletedListDesigner">
      <summary>用于在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.BulletedList" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>用于在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Button" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>提供了 自动套用格式 对话框 <see cref="T:System.Web.UI.WebControls.Calendar" /> Web 服务器控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Calendar" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.CheckBox" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CompositeControlDesigner">
      <summary>扩展一些控件的设计时行为，这些控件可实现 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 抽象类的方法。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Content" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor">
      <summary>提供设计宿主中的编辑器，例如 Visual Studio 2005 编辑 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> 对象 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web 服务器控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner">
      <summary>为派生自 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 的控件提供设计时支持的基类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner">
      <summary>用于添加和编辑数据字段在数据绑定控件中，如提供可视设计器中的设计时支持 <see cref="T:System.Web.UI.WebControls.GridView" /> 或 <see cref="T:System.Web.UI.WebControls.DetailsView" />。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor">
      <summary>为数据控件字段提供编辑的用户界面 (UI)。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>提供编辑的用户界面 (UI) 的列集合的 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web 服务器控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.DataList" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataProviderNameConverter">
      <summary>为创建一个用户可选择列表 ActiveX® 数据对象 (ADO).NET Framework (ADO.NET) 提供程序名称。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataSourceIDConverter">
      <summary>创建用户可选择数据源名称的列表。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DetailsViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor">
      <summary>为嵌入的邮件中的对象集合提供组件编辑器 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.FormViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.GridViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.HiddenField" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner">
      <summary>在设计器宿主中为 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter">
      <summary>创建的用户可选的分层数据源名称列表。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> 中的对象 <see cref="T:System.Web.UI.WebControls.ImageMap" /> 或相似的控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.HyperLink" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Label" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LinkButton" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>执行数据绑定的 <see cref="T:System.Web.UI.WebControls.ListControl" /> Web 服务器控件的可视设计器中。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>用作设计器的基类，这些设计器在可视 Web 设计器中为 <see cref="T:System.Web.UI.WebControls.ListControl" /> 抽象类派生的控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> 派生自一个控件中的对象 <see cref="T:System.Web.UI.WebControls.ListControl" /> 或相似的控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LiteralDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Literal" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Login" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginNameDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginName" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginStatusDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginView" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor">
      <summary>提供用于选择电子邮件正文中的文件的编辑器 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuBindingsEditor">
      <summary>提供有关组件编辑器 <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> 的关联集合 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
      <summary>找不到指定的提供组件编辑器 <see cref="P:System.Web.UI.WebControls.Menu.Items" /> 属性关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 中关联的对象 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MultiViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.MultiView" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView">
      <summary>提供与关联的设计时视图 <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelContainerDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 由指定的对象 Parameters 属性相关联的数据源控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl">
      <summary>提供可重用 <see cref="T:System.Windows.Forms.UserControl" /> 对象以便进行编辑 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PreviewControlDesigner">
      <summary>在可视化设计器中，提供控件的设计时支持，其中设计界面必须使用关联控件的预览版。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexEditorDialog">
      <summary>提供一个对话框，编辑通过使用正则表达式 <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>提供用于编辑正则表达式的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RepeaterDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor">
      <summary>提供设计时编辑器 <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView">
      <summary>提供设计时视图的数据的 <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> 和 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView">
      <summary>提供的分层数据的设计时视图 <see cref="T:System.Web.SiteMap" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor">
      <summary>选择和编辑的连接字符串属性提供的用户界面 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 在设计时对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView">
      <summary>提供设计时视图的数据的 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.StyleCollectionEditor">
      <summary>提供设计时编辑器在设计主机中，如 Microsoft Visual Studio 2005, ，为 <see cref="T:System.Web.UI.WebControls.StyleCollection" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor">
      <summary>提供有关组件编辑器 <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> 中关联的对象 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubstitutionDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Substitution" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>提供用于编辑表行中的单元格的集合的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Table" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>提供用于编辑表中的行的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter">
      <summary>提供要转换的类型转换器 <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> 与其他表示形式之间的属性。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor">
      <summary>提供设计时编辑器在设计主机中，如 Microsoft Visual Studio 2005, ，为 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor">
      <summary>提供设计时编辑器在设计主机中，如 Microsoft Visual Studio 2005, ，为 <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor">
      <summary>提供设计时数据绑定编辑器在设计主机中，如 Microsoft Visual Studio 2005, ，为 <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.View" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />、<see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 和 <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PartDesigner">
      <summary>扩展实现 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 抽象类的控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件的最低设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner">
      <summary>在可视化设计器中为 Web 部件区域提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的设计时视觉支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件的最低设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 控件的设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> 控件的设计时视觉支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor">
      <summary>提供设计宿主中的设计时编辑器，例如 Visual Studio 2005 为 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion">
      <summary>定义可编辑区域的向导步骤设计时标记内的内容 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> 对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion">
      <summary>定义模板的设计时标记内的内容中可编辑区域中的向导步骤 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 控件提供设计时支持。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Xml" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView">
      <summary>提供设计时视图的数据的 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView">
      <summary>提供数据的分层设计时视图 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> 类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>Web 服务器控件提供基类 <see cref="T:System.Drawing.Design.ToolboxItem" />。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsDesignerActionService">
      <summary>建立用于管理的集合的设计时服务 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 组件的对象。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsReferenceManager">
      <summary>提供用于访问类型、 指令和当前的 Web 项目文档中的控件的基类。 必须继承此类。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsRootDesigner">
      <summary>在设计时提供 Web 窗体页的设计时功能的一个基类并允许访问和操作包含在 Web 窗体页中的组件和控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XmlDataFileEditor">
      <summary>提供用于选择 XML 数据文件的设计时用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XmlDocumentSchema">
      <summary>代表的结构，即架构，为 <see cref="T:System.Xml.XmlDocument" />。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>提供用于选择 XML 文件使用的标准用户界面 <see cref="T:System.Windows.Forms.OpenFileDialog" /> 框。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>提供用于选择指示 XML 文件的位置的 URL 的用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XsdSchemaFileEditor">
      <summary>提供用于选择 XML 架构定义文件的设计时用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XslTransformFileEditor">
      <summary>提供用于选择 XML 转换文件的设计时用户界面。</summary>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>提供用于选择一个 URL，指示一个 XSL 文件的位置的用户界面。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>提供用于配置用户界面 <see cref="P:System.Windows.Forms.Control.Anchor" /> 属性。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>导入 ActiveX 控件，并生成的包装器可以访问由设计器。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>提供方法以解析对 ActiveX 库、 COM 类型库或程序集或托管程序集的引用。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>表示一组选项 <see cref="T:System.Windows.Forms.Design.AxImporter" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxParameterData">
      <summary>表示托管 ActiveX 控件的方法的参数。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxWrapperGen">
      <summary>在设计时环境中生成使用的 ActiveX 控件的包装器。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>管理用户界面相关的属性的集合 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>表示 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 由管理的对象 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>提供有关 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 和 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 事件的数据。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>表示将处理的方法 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 和 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 事件 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。 无法继承此类。</summary>
      <param name="sender">事件源。</param>
      <param name="e">一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />  包含事件数据。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>在设计器中管理用户界面。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 对象存储在强类型集合中。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>支持对 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 进行迭代。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>将相关联 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与其组件。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>将相关联 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与其控件。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>表示由管理的单个用户界面 (UI) 实体 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象存储在强类型集合中。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>描述设计器选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 未选中。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 处于选中状态。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 为主选择。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>表示在用户界面 (UI) 中动态创建以便在容器中辅助控件的设计时布局的水平和垂直线段。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>指定对齐线的相对重要性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>最低的优先级类别。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>中等优先级类别中。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>最高的优先级类别。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>等效于当前对齐线的最高优先级的优先级类别。 指示此类别的对齐线应始终处于活动状态。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>指定的方向和对齐线的相对位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>通常与控件的上边缘对齐的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>通常与控件的下边缘对齐的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>垂直对齐线通常与控件的左边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>垂直对齐线通常与控件的右边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>通常不与控件的边缘关联的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>通常不关联与控件的边缘的垂直对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>通常与控件; 的主要内部功能相关联的水平对齐线例如中的文本字符串的基本 <see cref="T:System.Windows.Forms.Label" /> 控件。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>提供设置的编辑器 <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> 属性。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>基本设计器类，用于扩展根设计文档中支持嵌套组件的设计模式行为。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>提供一个设计器的组件送纸器行为。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>扩展 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>为 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 提供 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>提供 get 和 set 选项值为设计器的访问。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>提供用于指定用户界面 <see cref="P:System.Windows.Forms.Control.Dock" /> 属性。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>设计器基类，用于扩展支持嵌套控件并应接收滚动消息的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为，并为其提供根级别设计模式视图。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>提供了一种系统化的方法来管理当前文档的事件处理程序。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>提供用于选择文件名称的用户界面。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>为从文件系统中选择一个文件夹提供用户界面。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>表示一个对话框，允许用户选择的文件夹。 此类不能被继承。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>定义用于指示文件夹浏览器最初浏览到的根文件夹的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>用户的桌面。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>用户的收藏夹列表。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>我的电脑图标的内容。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>用户的 My Documents 文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>用户的位置以存储图片。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>网络和拨号连接。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>网上邻居。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>此文件夹包含已安装的打印机。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>包含指向最近打开的文件的快捷方式的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>包含应用程序将文档发送到快捷方式的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>用户的开始菜单。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>用户的文件模板。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>定义用于指定行为标识符 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>文件夹浏览器只能返回计算机。 如果用户选择一台计算机以外的任何 确定 按钮显示为灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>文件夹浏览器可以返回它可能会返回任何对象。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>文件夹浏览器只能返回打印机。 如果用户选择打印机，以外的任何 确定 按钮显示为灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>文件夹浏览器将不包括域级别下的网络文件夹对话框中树视图控件中，或允许导航到此域外的网络位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>文件夹浏览器将仅返回本地文件系统目录。 如果用户选择的文件夹不是本地文件系统的一部分 确定 按钮显示为灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>文件夹浏览器将仅返回对象的本地文件系统内的根文件夹或根文件夹的子文件夹。 如果用户选择不是本地文件系统的一部分的根文件夹的子文件夹 确定 按钮显示为灰色。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>文件夹浏览器包括 <see cref="T:System.Windows.Forms.TextBox" /> 中允许用户键入某一项名称浏览对话框中的控件。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>定义用于获取有关如何需要有主题在 Visual Studio 设计器中显示时 windows 滚动条的信息的方法。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>序列化字符串字典。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>提供可执行的位图 (.bmp) 文件的默认文件搜索的编辑器。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>提供对编辑服务菜单访问。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>定义一组的成员为派生类，从而提供掩码的文本框框 UI 类型编辑器的选项。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>定义一组 <see cref="T:System.ComponentModel.Design.CommandID" /> 字段，每个对应于由宿主环境提供一个命令函数。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>扩展支持嵌套控件的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>用于扩展应接受滚动消息的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>定义用于指示为组件选择规则的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>表示没有特殊选择特性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>指示该组件支持一个位置属性，使它在屏幕上移动。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>指示该组件具有某种形式的可见的用户界面和所选内容服务围绕此用户界面绘图选择边框。 如果所选的组件具有此规则集，您可以假定该组件实现 <see cref="T:System.ComponentModel.IComponent" /> 并且是否与相应的设计器实例相关联。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>指示该组件已锁定到其容器。 重写 <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, ，<see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, ，<see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, ，<see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, ，<see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" />, ，和 <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> 位标志，此枚举。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>指示组件支持从顶部调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>指示组件支持从底部的调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>指示组件支持从左侧调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>指示组件支持从右侧的调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>指示该组件支持在所有方向调整大小。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>提供用于选取快捷键编辑器。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>一个值，该值指示是否将在 Visual Studio 设计器中显示时主题窗口与其子项的滚动条。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>窗口和所有子域都将都有主题滚动条。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>窗口和所有子域将不会应用主题。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>窗口将具有主题滚动条，但不是会应用主题及其所有子级。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>表示一个窗口和一个值，指示应如何应用主题，在 Visual Studio 设计器中显示时其滚动条。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>提供 get 和 set 选项值为 Windows 窗体设计器的访问。</summary>
    </member>
  </members>
</doc>